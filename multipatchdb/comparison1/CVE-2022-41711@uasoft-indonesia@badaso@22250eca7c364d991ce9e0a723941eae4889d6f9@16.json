{
  "cve_id": "CVE-2022-41711",
  "cve_desc": "Badaso version 2.6.0 allows an unauthenticated remote attacker to execute arbitrary code remotely on the server. This is possible because the application does not properly validate the data uploaded by users.",
  "repo": "uasoft-indonesia/badaso",
  "patch_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
  "patch_info": {
    "commit_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
    "repo": "uasoft-indonesia/badaso",
    "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/22250eca7c364d991ce9e0a723941eae4889d6f9",
    "files": [
      "src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue"
    ],
    "message": "Merge pull request #807 from uasoft-indonesia/bugfix/v2/filter-mimeType\n\nBugfix[v2] add filter mimeType",
    "before_after_code_files": [
      "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue"
    ]
  },
  "patch_diff": {
    "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue": [
      "File: src/resources/js/components/BadasoUploadFile.vue -> src/resources/js/components/BadasoUploadFile.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "336:           });",
      "337:           return;",
      "338:         }",
      "340:         this.uploadFile(files[0]);",
      "341:       }",
      "342:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "339:         if (!this.availableMimetypes.file.validMime.includes(files[0].type)) {",
      "340:           this.$vs.notify({",
      "341:             title: this.$t(\"alert.danger\"),",
      "342:             text: \"File type not allowed\",",
      "343:             color: \"danger\",",
      "344:           });",
      "345:           return;",
      "346:         }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadFileMultiple.vue -> src/resources/js/components/BadasoUploadFileMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "367:             });",
      "368:             return;",
      "369:           }",
      "371:           this.uploadFile(file);",
      "372:         }",
      "373:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "370:           if (!this.availableMimetypes.file.validMime.includes(file.type)) {",
      "371:             this.$vs.notify({",
      "372:               title: this.$t(\"alert.danger\"),",
      "373:               text: \"File type not allowed\",",
      "374:               color: \"danger\",",
      "375:             });",
      "376:             return;",
      "377:           }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue": [
      "File: src/resources/js/components/BadasoUploadImage.vue -> src/resources/js/components/BadasoUploadImage.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "380:           });",
      "381:           return;",
      "382:         }",
      "384:         this.uploadImage(files[0]);",
      "385:       }",
      "386:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "383:         if (!this.availableMimetypes.image.validMime.includes(files[0].type)){",
      "384:           this.$vs.notify({",
      "385:             title: this.$t(\"alert.danger\"),",
      "386:             text: \"File type not allowed\",",
      "387:             color: \"danger\",",
      "388:           });",
      "389:           return;",
      "390:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "421:     uploadImage(file) {",
      "422:       const files = new FormData();",
      "423:       files.append(\"upload\", file);",
      "425:       files.append(\"working_dir\", this.getActiveFolder);",
      "426:       this.$api.badasoFile",
      "427:         .uploadUsingLfm(files)",
      "",
      "[Removed Lines]",
      "424:       files.append(\"type\", \"image\");",
      "",
      "[Added Lines]",
      "431:       files.append(\"type\", file.type);",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadImageMultiple.vue -> src/resources/js/components/BadasoUploadImageMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:             });",
      "396:             return;",
      "397:           }",
      "399:           this.uploadImage(file);",
      "400:         }",
      "401:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "398:           if (!this.availableMimetypes.image.validMime.includes(file.type)) {",
      "399:             this.$vs.notify({",
      "400:               title: this.$t(\"alert.danger\"),",
      "401:               text: \"File type not allowed\",",
      "402:               color: \"danger\",",
      "403:             });",
      "404:             return;",
      "405:           }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "83a16d505a20f9c53e87e0f6cc2955218dbd8f6e",
      "candidate_info": {
        "commit_hash": "83a16d505a20f9c53e87e0f6cc2955218dbd8f6e",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/83a16d505a20f9c53e87e0f6cc2955218dbd8f6e",
        "files": [
          "src/Providers/BadasoServiceProvider.php",
          "tests/TestCase.php",
          "tests/Unit/ExampleTest.php"
        ],
        "message": "#514 | Unit test for Crud Management",
        "before_after_code_files": [
          "src/Providers/BadasoServiceProvider.php||src/Providers/BadasoServiceProvider.php",
          "tests/TestCase.php||tests/TestCase.php",
          "tests/Unit/ExampleTest.php||tests/Unit/ExampleTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Providers/BadasoServiceProvider.php||src/Providers/BadasoServiceProvider.php": [
          "File: src/Providers/BadasoServiceProvider.php -> src/Providers/BadasoServiceProvider.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: use Uasoft\\Badaso\\Commands\\BackupCommand;",
          "13: use Uasoft\\Badaso\\Commands\\BadasoFirebaseCommand;",
          "14: use Uasoft\\Badaso\\Commands\\BadasoSetup;",
          "15: use Uasoft\\Badaso\\Commands\\GenerateSeederCommand;",
          "16: use Uasoft\\Badaso\\Facades\\Badaso as FacadesBadaso;",
          "17: use Uasoft\\Badaso\\Middleware\\CheckForMaintenanceMode;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15: use Uasoft\\Badaso\\Commands\\BadasoTestSetup;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "116:         $this->commands(BackupCommand::class);",
          "117:         $this->commands(GenerateSeederCommand::class);",
          "118:         $this->commands(BadasoFirebaseCommand::class);",
          "119:     }",
          "120: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "120:         $this->commands(BadasoTestSetup::class);",
          "",
          "---------------"
        ],
        "tests/TestCase.php||tests/TestCase.php": [
          "File: tests/TestCase.php -> tests/TestCase.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/Unit/ExampleTest.php||tests/Unit/ExampleTest.php": [
          "File: tests/Unit/ExampleTest.php -> tests/Unit/ExampleTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: namespace Uasoft\\Badaso\\Tests\\Unit;",
          "5: use PHPUnit\\Framework\\TestCase;",
          "7: class ExampleTest extends TestCase",
          "8: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: use Uasoft\\Badaso\\Models\\User;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e806f404e9deb8ccbcf788ebc9e3aa918e0cd440",
      "candidate_info": {
        "commit_hash": "e806f404e9deb8ccbcf788ebc9e3aa918e0cd440",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/e806f404e9deb8ccbcf788ebc9e3aa918e0cd440",
        "files": [
          "tests/Feature/BadasoApiCrudManagementTest.php"
        ],
        "message": "integration test for multi relation",
        "before_after_code_files": [
          "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php": [
          "File: tests/Feature/BadasoApiCrudManagementTest.php -> tests/Feature/BadasoApiCrudManagementTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "250:         $table_names = [];",
          "251:         for ($index = 1; $index <= $max_count_table_generate; $index++) {",
          "252:             $table_name = \"{$this->TABLE_TEST_PREFIX}{$index}\";",
          "254:                 Schema::create($table_name, function (Blueprint $table) use ($index, $table_names) {",
          "255:                     $table->id();",
          "",
          "[Removed Lines]",
          "253:             if (! Schema::hasTable($table_name)) {",
          "",
          "[Added Lines]",
          "253:             if (!Schema::hasTable($table_name)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "443:                 }",
          "444:                 PHP;",
          "445:                 $model_path = app_path(\"Models/$model_file_name\");",
          "447:                     file_put_contents($model_path, $model_body);",
          "448:                 }",
          "",
          "[Removed Lines]",
          "446:                 if (! file_exists($model_path)) {",
          "",
          "[Added Lines]",
          "446:                 if (!file_exists($model_path)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "464:             $controller_data = [];",
          "465:             if (rand(0, 1)) {",
          "468:                 $controller_file_name = \"{$controller_name}.php\";",
          "469:                 $controller_body = <<<PHP",
          "470:                 <?php",
          "",
          "[Removed Lines]",
          "467:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)).'Controller';",
          "",
          "[Added Lines]",
          "467:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)) . 'Controller';",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "473:                 class {$controller_name} extends \\Uasoft\\Badaso\\Controllers\\BadasoBaseController {}",
          "474:                 PHP;",
          "475:                 $controller_path = app_path(\"/Http/Controllers/$controller_file_name\");",
          "477:                     file_put_contents($controller_path, $controller_body);",
          "478:                 }",
          "",
          "[Removed Lines]",
          "476:                 if (! file_exists($controller_path)) {",
          "",
          "[Added Lines]",
          "476:                 if (!file_exists($controller_path)) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "543:         CallHelperTest::setCache($this->KEY_DATA_RESPONSE_READ_TABLE_ENTITY, $response_read_table_entities);",
          "544:     }",
          "546:     public function testAddEditEntityCrudManagement()",
          "547:     {",
          "548:         $tables = CallHelperTest::getCache($this->KEY_LIST_CREATE_TABLES);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "546:     public function testAddTableCrudMultiRelationEntity()",
          "547:     {",
          "548:         $first_table = 'multiple_table_1';",
          "549:         $second_table = 'multiple_table_2';",
          "551:         $table_1 = [",
          "552:             'table' => $first_table,",
          "553:             'rows' =>",
          "554:             [",
          "555:                 0 =>",
          "556:                 [",
          "557:                     'id' => 'id',",
          "558:                     'fieldName' => 'id',",
          "559:                     'fieldType' => 'bigint',",
          "560:                     'fieldLength' => NULL,",
          "561:                     'fieldNull' => false,",
          "562:                     'fieldAttribute' => true,",
          "563:                     'fieldIncrement' => true,",
          "564:                     'fieldIndex' => 'primary',",
          "565:                     'fieldDefault' => NULL,",
          "566:                     'undeletable' => true,",
          "567:                 ],",
          "568:                 1 =>",
          "569:                 [",
          "570:                     'id' => '8b01b738-377b-4782-898f-c4c46722bf23',",
          "571:                     'fieldName' => 'field1',",
          "572:                     'fieldType' => 'text',",
          "573:                     'fieldLength' => NULL,",
          "574:                     'fieldNull' => false,",
          "575:                     'fieldAttribute' => false,",
          "576:                     'fieldIncrement' => false,",
          "577:                     'fieldIndex' => NULL,",
          "578:                     'fieldDefault' => '',",
          "579:                 ],",
          "580:                 2 =>",
          "581:                 [",
          "582:                     'fieldName' => 'created_at',",
          "583:                     'fieldType' => 'timestamp',",
          "584:                     'fieldLength' => NULL,",
          "585:                     'fieldNull' => true,",
          "586:                     'fieldAttribute' => false,",
          "587:                     'fieldIncrement' => false,",
          "588:                     'fieldIndex' => NULL,",
          "589:                     'fieldDefault' => NULL,",
          "590:                     'undeletable' => true,",
          "591:                     'indexes' => true,",
          "592:                 ],",
          "593:                 3 =>",
          "594:                 [",
          "595:                     'fieldName' => 'updated_at',",
          "596:                     'fieldType' => 'timestamp',",
          "597:                     'fieldLength' => NULL,",
          "598:                     'fieldNull' => true,",
          "599:                     'fieldAttribute' => false,",
          "600:                     'fieldIncrement' => false,",
          "601:                     'fieldIndex' => NULL,",
          "602:                     'fieldDefault' => NULL,",
          "603:                     'undeletable' => true,",
          "604:                 ],",
          "605:             ],",
          "606:             'relations' =>",
          "607:             [],",
          "608:         ];",
          "609:         $table_2 = [",
          "610:             'table' => $second_table,",
          "611:             'rows' => [",
          "612:                 0 => [",
          "613:                     'id' => 'id',",
          "614:                     'fieldName' => 'id',",
          "615:                     'fieldType' => 'bigint',",
          "616:                     'fieldLength' => NULL,",
          "617:                     'fieldNull' => false,",
          "618:                     'fieldAttribute' => true,",
          "619:                     'fieldIncrement' => true,",
          "620:                     'fieldIndex' => 'primary',",
          "621:                     'fieldDefault' => NULL,",
          "622:                     'undeletable' => true,",
          "623:                 ],",
          "624:                 1 => [",
          "625:                     'id' => 'd6dfe842-9e57-4b2e-ae2a-4e2e8fb5d5ab',",
          "626:                     'fieldName' => 'id_relation1_field1',",
          "627:                     'fieldType' => 'text',",
          "628:                     'fieldLength' => NULL,",
          "629:                     'fieldNull' => false,",
          "630:                     'fieldAttribute' => false,",
          "631:                     'fieldIncrement' => false,",
          "632:                     'fieldIndex' => NULL,",
          "633:                     'fieldDefault' => '',",
          "634:                 ],",
          "635:                 2 => [",
          "636:                     'id' => 'a9f49e8e-ad45-441c-9839-df506f8bfaf2',",
          "637:                     'fieldName' => 'id_relation2_field1',",
          "638:                     'fieldType' => 'text',",
          "639:                     'fieldLength' => NULL,",
          "640:                     'fieldNull' => false,",
          "641:                     'fieldAttribute' => false,",
          "642:                     'fieldIncrement' => false,",
          "643:                     'fieldIndex' => NULL,",
          "644:                     'fieldDefault' => '',",
          "645:                 ],",
          "646:                 3 => [",
          "647:                     'fieldName' => 'created_at',",
          "648:                     'fieldType' => 'timestamp',",
          "649:                     'fieldLength' => NULL,",
          "650:                     'fieldNull' => true,",
          "651:                     'fieldAttribute' => false,",
          "652:                     'fieldIncrement' => false,",
          "653:                     'fieldIndex' => NULL,",
          "654:                     'fieldDefault' => NULL,",
          "655:                     'undeletable' => true,",
          "656:                     'indexes' => true,",
          "657:                 ],",
          "658:                 4 => [",
          "659:                     'fieldName' => 'updated_at',",
          "660:                     'fieldType' => 'timestamp',",
          "661:                     'fieldLength' => NULL,",
          "662:                     'fieldNull' => true,",
          "663:                     'fieldAttribute' => false,",
          "664:                     'fieldIncrement' => false,",
          "665:                     'fieldIndex' => NULL,",
          "666:                     'fieldDefault' => NULL,",
          "667:                     'undeletable' => true,",
          "668:                 ],",
          "669:             ],",
          "670:             'relations' => [],",
          "671:         ];",
          "672:         $crud_table_1 = [",
          "673:             'name' => $first_table,",
          "674:             'slug' => 'multiple-table-1',",
          "675:             'displayNameSingular' => 'multiple table 1',",
          "676:             'displayNamePlural' => 'multiple table 1',",
          "677:             'icon' => '',",
          "678:             'modelName' => '',",
          "679:             'policyName' => '',",
          "680:             'description' => '',",
          "681:             'generatePermissions' => true,",
          "682:             'createSoftDelete' => false,",
          "683:             'serverSide' => false,",
          "684:             'details' => '',",
          "685:             'controller' => '',",
          "686:             'orderColumn' => '',",
          "687:             'orderDisplayColumn' => '',",
          "688:             'orderDirection' => '',",
          "689:             'notification' => [],",
          "690:             'rows' => [",
          "691:                 0 => [",
          "692:                     'field' => 'id',",
          "693:                     'type' => 'number',",
          "694:                     'displayName' => 'Id',",
          "695:                     'required' => true,",
          "696:                     'browse' => true,",
          "697:                     'read' => true,",
          "698:                     'edit' => true,",
          "699:                     'add' => true,",
          "700:                     'delete' => true,",
          "701:                     'details' => '{}',",
          "702:                     'order' => 1,",
          "703:                     'setRelation' => false,",
          "704:                 ],",
          "705:                 1 => [",
          "706:                     'field' => 'field1',",
          "707:                     'type' => 'textarea',",
          "708:                     'displayName' => 'Field1',",
          "709:                     'required' => true,",
          "710:                     'browse' => true,",
          "711:                     'read' => true,",
          "712:                     'edit' => true,",
          "713:                     'add' => true,",
          "714:                     'delete' => true,",
          "715:                     'details' => '{}',",
          "716:                     'order' => 1,",
          "717:                     'setRelation' => false,",
          "718:                 ],",
          "719:                 2 => [",
          "720:                     'field' => 'created_at',",
          "721:                     'type' => 'datetime',",
          "722:                     'displayName' => 'Created At',",
          "723:                     'required' => false,",
          "724:                     'browse' => true,",
          "725:                     'read' => true,",
          "726:                     'edit' => false,",
          "727:                     'add' => false,",
          "728:                     'delete' => false,",
          "729:                     'details' => '{}',",
          "730:                     'order' => 1,",
          "731:                     'setRelation' => false,",
          "732:                 ],",
          "733:                 3 => [",
          "734:                     'field' => 'updated_at',",
          "735:                     'type' => 'datetime',",
          "736:                     'displayName' => 'Updated At',",
          "737:                     'required' => false,",
          "738:                     'browse' => true,",
          "739:                     'read' => true,",
          "740:                     'edit' => false,",
          "741:                     'add' => false,",
          "742:                     'delete' => false,",
          "743:                     'details' => '{}',",
          "744:                     'order' => 1,",
          "745:                     'setRelation' => false,",
          "746:                 ],",
          "747:             ],",
          "748:         ];",
          "750:         $crud_table_2 = [",
          "751:             'name' => $second_table,",
          "752:             'slug' => 'multiple-table-2',",
          "753:             'displayNameSingular' => 'multiple table 2',",
          "754:             'displayNamePlural' => 'multiple table 2',",
          "755:             'icon' => '',",
          "756:             'modelName' => '',",
          "757:             'policyName' => '',",
          "758:             'description' => '',",
          "759:             'generatePermissions' => true,",
          "760:             'createSoftDelete' => false,",
          "761:             'serverSide' => false,",
          "762:             'details' => '',",
          "763:             'controller' => '',",
          "764:             'orderColumn' => '',",
          "765:             'orderDisplayColumn' => '',",
          "766:             'orderDirection' => '',",
          "767:             'notification' => [],",
          "768:             'rows' => [",
          "769:                 0 => [",
          "770:                     'field' => 'id',",
          "771:                     'type' => 'number',",
          "772:                     'displayName' => 'Id',",
          "773:                     'required' => true,",
          "774:                     'browse' => true,",
          "775:                     'read' => true,",
          "776:                     'edit' => true,",
          "777:                     'add' => true,",
          "778:                     'delete' => true,",
          "779:                     'details' => '{}',",
          "780:                     'order' => 1,",
          "781:                     'setRelation' => false,",
          "782:                 ],",
          "783:                 1 => [",
          "784:                     'field' => 'id_relation1_field1',",
          "785:                     'type' => 'relation',",
          "786:                     'displayName' => 'Id Relation1 Field1',",
          "787:                     'required' => true,",
          "788:                     'browse' => true,",
          "789:                     'read' => true,",
          "790:                     'edit' => true,",
          "791:                     'add' => true,",
          "792:                     'delete' => true,",
          "793:                     'details' => '{}',",
          "794:                     'order' => 1,",
          "795:                     'setRelation' => false,",
          "796:                     'relationType' => 'belongs_to',",
          "797:                     'destinationTable' => $first_table,",
          "798:                     'destinationTableColumn' => 'id',",
          "799:                     'destinationTableDisplayColumn' => 'field1',",
          "800:                 ],",
          "801:                 2 => [",
          "802:                     'field' => 'id_relation2_field1',",
          "803:                     'type' => 'relation',",
          "804:                     'displayName' => 'Id Relation2 Field1',",
          "805:                     'required' => true,",
          "806:                     'browse' => true,",
          "807:                     'read' => true,",
          "808:                     'edit' => true,",
          "809:                     'add' => true,",
          "810:                     'delete' => true,",
          "811:                     'details' => '{}',",
          "812:                     'order' => 1,",
          "813:                     'setRelation' => false,",
          "814:                     'relationType' => 'belongs_to',",
          "815:                     'destinationTable' => $first_table,",
          "816:                     'destinationTableColumn' => 'id',",
          "817:                     'destinationTableDisplayColumn' => 'field1',",
          "818:                 ],",
          "819:                 3 => [",
          "820:                     'field' => 'created_at',",
          "821:                     'type' => 'datetime',",
          "822:                     'displayName' => 'Created At',",
          "823:                     'required' => false,",
          "824:                     'browse' => true,",
          "825:                     'read' => true,",
          "826:                     'edit' => false,",
          "827:                     'add' => false,",
          "828:                     'delete' => false,",
          "829:                     'details' => '{}',",
          "830:                     'order' => 1,",
          "831:                     'setRelation' => false,",
          "832:                 ],",
          "833:                 4 => [",
          "834:                     'field' => 'updated_at',",
          "835:                     'type' => 'datetime',",
          "836:                     'displayName' => 'Updated At',",
          "837:                     'required' => false,",
          "838:                     'browse' => true,",
          "839:                     'read' => true,",
          "840:                     'edit' => false,",
          "841:                     'add' => false,",
          "842:                     'delete' => false,",
          "843:                     'details' => '{}',",
          "844:                     'order' => 1,",
          "845:                     'setRelation' => false,",
          "846:                 ],",
          "847:             ],",
          "848:         ];",
          "850:         $add_table = [$table_1, $table_2];",
          "853:         foreach ($add_table as $key => $request_data_table) {",
          "854:             $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/database/add'), $request_data_table);",
          "855:             $response->assertSuccessful();",
          "856:         }",
          "858:         $add_crud_table = [$crud_table_1, $crud_table_2];",
          "860:         foreach ($add_crud_table as $key => $request_data_crud_table) {",
          "861:             $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/crud/add'), $request_data_crud_table);",
          "862:             $response->assertSuccessful();",
          "863:         }",
          "864:     }",
          "866:     public function testAddEntityMultiRelation()",
          "867:     {",
          "868:         $first_table = 'multiple_table_1';",
          "869:         $second_table = 'multiple_table_2';",
          "870:         $list_table = [$first_table, $second_table];",
          "873:         $fill_table_1 = ['student', 'teacher'];",
          "874:         $add_fill_table_1 = [];",
          "875:         for ($i = 0; $i < 2; $i++) {",
          "876:             $add_fill_table_1[$i] = [",
          "877:                 'data' => [",
          "878:                     'field1' => $fill_table_1[$i],",
          "879:                 ],",
          "880:             ];",
          "881:         }",
          "884:         $add_fill_table_2 = [",
          "885:             'data' => [",
          "886:                 'id_relation1_field1' => 1,",
          "887:                 'id_relation2_field1' => 2,",
          "888:             ],",
          "889:         ];",
          "892:         $response_crud_table = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/crud?'));",
          "893:         $response_crud_table = $response_crud_table['data'];",
          "894:         foreach ($response_crud_table['tablesWithCrudData'] as $key => $value_response_crud_table) {",
          "895:             foreach ($list_table as $key_add_table => $value_add_table) {",
          "896:                 if (in_array($value_add_table, $value_response_crud_table)) {",
          "897:                     $ids_list_table[$key_add_table] = [",
          "898:                         \"id\" => $value_response_crud_table['crudData']['id']",
          "899:                     ];",
          "900:                     if ($value_add_table == $list_table[0]) {",
          "901:                         foreach ($add_fill_table_1 as $key => $request_data_fill_crud_table_1) {",
          "902:                             $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix(\"/entities/multiple-table-1/add\"), $request_data_fill_crud_table_1);",
          "903:                             $response->assertSuccessful();",
          "904:                             $response_table_1 = $response['data'];",
          "905:                             foreach ($fill_table_1 as $key => $value) {",
          "906:                                 if (in_array($value, $response_table_1)) {",
          "907:                                     $this->assertTrue($response_table_1['field1'] == $value);",
          "908:                                 }",
          "909:                             }",
          "910:                         }",
          "911:                     }",
          "912:                 }",
          "913:             }",
          "914:         }",
          "918:         $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix(\"/entities/multiple-table-2/add\"), $add_fill_table_2);",
          "919:         $response->assertSuccessful();",
          "920:         $response_table_2 = $response['data'];",
          "921:         foreach ($response_table_2 as $key => $value) {",
          "922:             if ($key == 'idRelation1Field1') {",
          "923:                 $this->assertTrue($value == $add_fill_table_2['data']['id_relation1_field1']);",
          "924:             }",
          "925:             if ($key == 'idRelation2Field1') {",
          "926:                 $this->assertTrue($value == $add_fill_table_2['data']['id_relation2_field1']);",
          "927:             }",
          "928:         }",
          "930:         foreach ($ids_list_table as $key => $value_ids_list_table) {",
          "931:             $response = CallHelperTest::withAuthorizeBearer($this)->json('DELETE', CallHelperTest::getUrlApiV1Prefix('/crud/delete'), $value_ids_list_table);",
          "932:             $response->assertSuccessful();",
          "933:         }",
          "936:         foreach ($list_table as $key => $request_data_table) {",
          "937:             $response = CallHelperTest::withAuthorizeBearer($this)->json('DELETE', CallHelperTest::getUrlApiV1Prefix('/database/delete'), [\"table\" => $request_data_table]);",
          "938:             $response->assertSuccessful();",
          "939:         }",
          "940:     }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "788:                 }",
          "789:                 PHP;",
          "790:                 $model_path = app_path(\"Models/$model_file_name\");",
          "792:                     file_put_contents($model_path, $model_body);",
          "793:                 }",
          "",
          "[Removed Lines]",
          "791:                 if (! file_exists($model_path)) {",
          "",
          "[Added Lines]",
          "1185:                 if (!file_exists($model_path)) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "809:             $controller_data = [];",
          "810:             if (rand(0, 1)) {",
          "813:                 $controller_file_name = \"{$controller_name}.php\";",
          "814:                 $controller_body = <<<PHP",
          "815:                 <?php",
          "",
          "[Removed Lines]",
          "812:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)).'Controller';",
          "",
          "[Added Lines]",
          "1206:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)) . 'Controller';",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "818:                 class {$controller_name} extends \\Uasoft\\Badaso\\Controllers\\BadasoBaseController {}",
          "819:                 PHP;",
          "820:                 $controller_path = app_path(\"/Http/Controllers/$controller_file_name\");",
          "822:                     file_put_contents($controller_path, $controller_body);",
          "823:                 }",
          "",
          "[Removed Lines]",
          "821:                 if (! file_exists($controller_path)) {",
          "",
          "[Added Lines]",
          "1215:                 if (!file_exists($controller_path)) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "838:             $request_body = [",
          "839:                 'name' =>  $table_name,",
          "840:                 'slug' =>  $table_name,",
          "843:                 'icon' =>  'add',",
          "844:                 'modelName' =>  $model,",
          "845:                 'policyName' =>  '',",
          "",
          "[Removed Lines]",
          "841:                 'displayNameSingular' =>  $table_label.'(update)',",
          "842:                 'displayNamePlural' =>  $table_label.'(update)',",
          "",
          "[Added Lines]",
          "1235:                 'displayNameSingular' =>  $table_label . '(update)',",
          "1236:                 'displayNamePlural' =>  $table_label . '(update)',",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "925:             $controller_name = \"{$name}Controller.php\";",
          "927:             if (file_exists($controller_path)) {",
          "928:                 unlink($controller_path);",
          "929:             }",
          "932:             $model_name = \"{$name}.php\";",
          "934:             if (file_exists($model_path)) {",
          "935:                 unlink($model_path);",
          "936:             }",
          "",
          "[Removed Lines]",
          "926:             $controller_path = app_path('Http/Controllers/'.$controller_name);",
          "933:             $model_path = app_path('Models/'.$model_name);",
          "",
          "[Added Lines]",
          "1320:             $controller_path = app_path('Http/Controllers/' . $controller_name);",
          "1327:             $model_path = app_path('Models/' . $model_name);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1063:         foreach ($list_table as $key => $value) {",
          "1064:             $response = CallHelperTest::withAuthorizeBearer($this)",
          "1066:             $response->assertSuccessful();",
          "1067:         }",
          "",
          "[Removed Lines]",
          "1065:             ->json('POST', CallHelperTest::getUrlApiV1Prefix('/database/add'), $value);",
          "",
          "[Added Lines]",
          "1459:                 ->json('POST', CallHelperTest::getUrlApiV1Prefix('/database/add'), $value);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7929c9c4daea3259c6d1d9414e600776339fc267",
      "candidate_info": {
        "commit_hash": "7929c9c4daea3259c6d1d9414e600776339fc267",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/7929c9c4daea3259c6d1d9414e600776339fc267",
        "files": [
          "src/resources/js/pages/menu-management/browse.vue"
        ],
        "message": "update menu",
        "before_after_code_files": [
          "src/resources/js/pages/menu-management/browse.vue||src/resources/js/pages/menu-management/browse.vue"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/resources/js/pages/menu-management/browse.vue||src/resources/js/pages/menu-management/browse.vue": [
          "File: src/resources/js/pages/menu-management/browse.vue -> src/resources/js/pages/menu-management/browse.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "168:       this.$api.badasoMenu",
          "169:         .menuOptions({ menu_id: menuId, is_expand : 'event' })",
          "170:         .then((res) => {",
          "172:           this.$store.commit(\"badaso/FETCH_MENU\");",
          "173:         })",
          "174:         .catch((err) => {",
          "",
          "[Removed Lines]",
          "171:           this.getMenuList();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "183:       this.$api.badasoMenu",
          "184:         .menuOptions({ menu_id: menuId, is_show_header : 'event' })",
          "185:         .then((res) => {",
          "187:           this.$store.commit(\"badaso/FETCH_MENU\");",
          "188:         })",
          "189:         .catch((err) => {",
          "",
          "[Removed Lines]",
          "186:           this.getMenuList();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b800ceed8500fc1f4ca5ee113aca85ff62d5611f",
      "candidate_info": {
        "commit_hash": "b800ceed8500fc1f4ca5ee113aca85ff62d5611f",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/b800ceed8500fc1f4ca5ee113aca85ff62d5611f",
        "files": [
          "src/Swagger/swagger_models/auth.php"
        ],
        "message": "Update swagger-auth-username",
        "before_after_code_files": [
          "src/Swagger/swagger_models/auth.php||src/Swagger/swagger_models/auth.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Swagger/swagger_models/auth.php||src/Swagger/swagger_models/auth.php": [
          "File: src/Swagger/swagger_models/auth.php -> src/Swagger/swagger_models/auth.php"
        ]
      }
    },
    {
      "candidate_hash": "e7f7eb0c1c46a444c1d63360cd79c701632c0079",
      "candidate_info": {
        "commit_hash": "e7f7eb0c1c46a444c1d63360cd79c701632c0079",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/e7f7eb0c1c46a444c1d63360cd79c701632c0079",
        "files": [
          "phpstan-baseline.neon"
        ],
        "message": "test1",
        "before_after_code_files": [
          "phpstan-baseline.neon||phpstan-baseline.neon"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "phpstan-baseline.neon||phpstan-baseline.neon": [
          "File: phpstan-baseline.neon -> phpstan-baseline.neon",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:     - '#Call to an undefined static method Uasoft\\\\Badaso\\\\Database\\\\Schema\\\\SchemaManager::[a-zA-Z0-9-()\\_]+.#'",
          "33:     - '#Call to an undefined static method Illuminate\\\\Support\\\\Facades\\\\DB::[a-zA-Z0-9-()\\_]+.#'",
          "34:     - '#Call to an undefined static method Illuminate\\\\Support\\\\Facades\\\\Redis::[a-zA-Z0-9-()\\_]+.#'",
          "35:     - '#Call to static method [a-zA-Z0-9-()\\_]+ on an unknown class Route.#'",
          "36:     - '#Result of method [a-zA-Z0-9\\\\_]+::[a-zA-Z0-9-()\\_]+ [a-zA-Z0-9-()\\_]+ is used.#'",
          "37:     - '#Method [a-zA-Z0-9\\\\_]+::[a-zA-Z0-9-()\\_]+ should return int but return statement is missing.#'",
          "38:     - '#Call to sprintf contains 1 placeholder, 0 values given.#'",
          "39:     - '#Variable \\$custom_permissions might not be defined.#'",
          "40:     - '#Call to static method debug[()]+ on an unknown class Log.#'",
          "41:     - '#Call to static method first[()]+ on an unknown class Uasoft\\\\Badaso\\\\Models\\\\FirebaseServices.#'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35:     - '#Class App\\\\Http\\\\Controllers\\\\Controller not found.#'",
          "36:     - '#Parameter $test_case of method Uasoft\\\\Badaso\\\\Helpers\\\\CallHelperTest::[a-zA-Z0-9-()\\_]+ has invalid type Tests\\\\TestCase.#'",
          "37:     - '#Method Uasoft\\Badaso\\Helpers\\CallHelperTest::[a-zA-Z0-9-()\\_]+ has invalid return type Tests\\\\TestCase. #'",
          "42:     - '#Class Tests\\\\TestCase not found.#'",
          "",
          "---------------"
        ]
      }
    }
  ]
}