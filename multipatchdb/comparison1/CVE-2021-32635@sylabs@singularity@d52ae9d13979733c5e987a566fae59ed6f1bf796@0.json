{
  "cve_id": "CVE-2021-32635",
  "cve_desc": "Singularity is an open source container platform. In verions 3.7.2 and 3.7.3, Dde to incorrect use of a default URL, `singularity` action commands (`run`/`shell`/`exec`) specifying a container using a `library://` URI will always attempt to retrieve the container from the default remote endpoint (`cloud.sylabs.io`) rather than the configured remote endpoint. An attacker may be able to push a malicious container to the default remote endpoint with a URI that is identical to the URI used by a victim with a non-default remote endpoint, thus executing the malicious container. Only action commands (`run`/`shell`/`exec`) against `library://` URIs are affected. Other commands such as `pull` / `push` respect the configured remote endpoint. The vulnerability is patched in Singularity version 3.7.4. Two possible workarounds exist: Users can only interact with the default remote endpoint, or an installation can have an execution control list configured to restrict execution to containers signed with specific secure keys.",
  "repo": "sylabs/singularity",
  "patch_hash": "d52ae9d13979733c5e987a566fae59ed6f1bf796",
  "patch_info": {
    "commit_hash": "d52ae9d13979733c5e987a566fae59ed6f1bf796",
    "repo": "sylabs/singularity",
    "commit_url": "https://github.com/sylabs/singularity/commit/d52ae9d13979733c5e987a566fae59ed6f1bf796",
    "files": [
      "cmd/internal/cli/actions.go",
      "e2e/actions/actions.go",
      "e2e/actions/regressions.go"
    ],
    "message": "Merge pull request from GHSA-5mv9-q7fq-9394\n\nfix: respect current remote for actions against library:// URIs (3.7)",
    "before_after_code_files": [
      "cmd/internal/cli/actions.go||cmd/internal/cli/actions.go",
      "e2e/actions/actions.go||e2e/actions/actions.go",
      "e2e/actions/regressions.go||e2e/actions/regressions.go"
    ]
  },
  "patch_diff": {
    "cmd/internal/cli/actions.go||cmd/internal/cli/actions.go": [
      "File: cmd/internal/cli/actions.go -> cmd/internal/cli/actions.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "21:  \"github.com/sylabs/singularity/internal/pkg/client/oci\"",
      "22:  \"github.com/sylabs/singularity/internal/pkg/client/oras\"",
      "23:  \"github.com/sylabs/singularity/internal/pkg/client/shub\"",
      "25:  \"github.com/sylabs/singularity/internal/pkg/util/uri\"",
      "26:  \"github.com/sylabs/singularity/pkg/sylog\"",
      "27: )",
      "",
      "[Removed Lines]",
      "24:  \"github.com/sylabs/singularity/internal/pkg/remote/endpoint\"",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "75: }",
      "77: func handleLibrary(ctx context.Context, imgCache *cache.Handle, pullFrom string) (string, error) {",
      "79:  if err != nil {",
      "80:   return \"\", err",
      "81:  }",
      "",
      "[Removed Lines]",
      "78:  c, err := getLibraryClientConfig(endpoint.SCSDefaultLibraryURI)",
      "",
      "[Added Lines]",
      "78:  c, err := getLibraryClientConfig(\"\")",
      "",
      "---------------"
    ],
    "e2e/actions/actions.go||e2e/actions/actions.go": [
      "File: e2e/actions/actions.go -> e2e/actions/actions.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "2198:   env: env,",
      "2199:  }",
      "2201:  return testhelper.Tests{",
      "2202:   \"action URI\":            c.RunFromURI,          // action_URI",
      "2203:   \"exec\":                  c.actionExec,          // singularity exec",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2201:  np := testhelper.NoParallel",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2230:   \"bind image\":            c.bindImage,           // test bind image",
      "2231:   \"umask\":                 c.actionUmask,         // test umask propagation",
      "2232:   \"no-mount\":              c.actionNoMount,       // test --no-mount",
      "2233:  }",
      "2234: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2235:   \"invalidRemote\":         np(c.invalidRemote),   // GHSA-5mv9-q7fq-9394",
      "",
      "---------------"
    ],
    "e2e/actions/regressions.go||e2e/actions/regressions.go": [
      "File: e2e/actions/regressions.go -> e2e/actions/regressions.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "616:   e2e.ExpectExit(0),",
      "617:  )",
      "618: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "623: func (c actionTests) invalidRemote(t *testing.T) {",
      "624:  testEndpoint := \"invalid\"",
      "625:  testEndpointURI := \"https://cloud.example.com\"",
      "626:  testImage := \"library://alpine\"",
      "629:  argv := []string{testImage, \"/bin/true\"}",
      "630:  c.env.RunSingularity(",
      "631:   t,",
      "632:   e2e.AsSubtest(\"exec default\"),",
      "633:   e2e.WithProfile(e2e.UserProfile),",
      "634:   e2e.WithCommand(\"exec\"),",
      "635:   e2e.WithArgs(argv...),",
      "636:   e2e.ExpectExit(0),",
      "637:  )",
      "640:  argv = []string{\"add\", \"--no-login\", testEndpoint, testEndpointURI}",
      "641:  c.env.RunSingularity(",
      "642:   t,",
      "643:   e2e.AsSubtest(\"remote add\"),",
      "644:   e2e.WithProfile(e2e.UserProfile),",
      "645:   e2e.WithCommand(\"remote\"),",
      "646:   e2e.WithArgs(argv...),",
      "647:   e2e.ExpectExit(0),",
      "648:  )",
      "650:  defer func(t *testing.T) {",
      "651:   argv := []string{\"remove\", testEndpoint}",
      "652:   c.env.RunSingularity(",
      "653:    t,",
      "654:    e2e.AsSubtest(\"remote remove\"),",
      "655:    e2e.WithProfile(e2e.UserProfile),",
      "656:    e2e.WithCommand(\"remote\"),",
      "657:    e2e.WithArgs(argv...),",
      "658:    e2e.ExpectExit(0),",
      "659:   )",
      "660:  }(t)",
      "663:  argv = []string{\"use\", testEndpoint}",
      "664:  c.env.RunSingularity(",
      "665:   t,",
      "666:   e2e.AsSubtest(\"remote use\"),",
      "667:   e2e.WithProfile(e2e.UserProfile),",
      "668:   e2e.WithCommand(\"remote\"),",
      "669:   e2e.WithArgs(argv...),",
      "670:   e2e.ExpectExit(0),",
      "671:  )",
      "674:  argv = []string{testImage, \"/bin/true\"}",
      "675:  c.env.RunSingularity(",
      "676:   t,",
      "677:   e2e.AsSubtest(\"exec invalid\"),",
      "678:   e2e.WithProfile(e2e.UserProfile),",
      "679:   e2e.WithCommand(\"exec\"),",
      "680:   e2e.WithArgs(argv...),",
      "681:   e2e.ExpectExit(255),",
      "682:  )",
      "684: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3d6f5d80ffd01fc5be1236aa5fa565ce98e04dfc",
      "candidate_info": {
        "commit_hash": "3d6f5d80ffd01fc5be1236aa5fa565ce98e04dfc",
        "repo": "sylabs/singularity",
        "commit_url": "https://github.com/sylabs/singularity/commit/3d6f5d80ffd01fc5be1236aa5fa565ce98e04dfc",
        "files": [
          "cmd/internal/cli/actions.go",
          "e2e/actions/actions.go",
          "e2e/actions/regressions.go"
        ],
        "message": "Merge pull request from GHSA-5mv9-q7fq-9394\n\nfix: respect current remote for actions against library:// URIs (master)",
        "before_after_code_files": [
          "cmd/internal/cli/actions.go||cmd/internal/cli/actions.go",
          "e2e/actions/actions.go||e2e/actions/actions.go",
          "e2e/actions/regressions.go||e2e/actions/regressions.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "cmd/internal/cli/actions.go||cmd/internal/cli/actions.go",
            "e2e/actions/actions.go||e2e/actions/actions.go",
            "e2e/actions/regressions.go||e2e/actions/regressions.go"
          ],
          "candidate": [
            "cmd/internal/cli/actions.go||cmd/internal/cli/actions.go",
            "e2e/actions/actions.go||e2e/actions/actions.go",
            "e2e/actions/regressions.go||e2e/actions/regressions.go"
          ]
        }
      },
      "candidate_diff": {
        "cmd/internal/cli/actions.go||cmd/internal/cli/actions.go": [
          "File: cmd/internal/cli/actions.go -> cmd/internal/cli/actions.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:  \"github.com/sylabs/singularity/internal/pkg/client/oci\"",
          "22:  \"github.com/sylabs/singularity/internal/pkg/client/oras\"",
          "23:  \"github.com/sylabs/singularity/internal/pkg/client/shub\"",
          "25:  \"github.com/sylabs/singularity/internal/pkg/util/uri\"",
          "26:  \"github.com/sylabs/singularity/pkg/sylog\"",
          "27: )",
          "",
          "[Removed Lines]",
          "24:  \"github.com/sylabs/singularity/internal/pkg/remote/endpoint\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80:   return \"\", err",
          "81:  }",
          "83:  var libraryURI string",
          "84:  if r.Host != \"\" {",
          "85:   libraryURI = \"https://\" + r.Host",
          "88:  }",
          "90:  c, err := getLibraryClientConfig(libraryURI)",
          "",
          "[Removed Lines]",
          "86:  } else {",
          "87:   libraryURI = endpoint.SCSDefaultLibraryURI",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "e2e/actions/actions.go||e2e/actions/actions.go": [
          "File: e2e/actions/actions.go -> e2e/actions/actions.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2198:   env: env,",
          "2199:  }",
          "2201:  return testhelper.Tests{",
          "2202:   \"action URI\":            c.RunFromURI,          // action_URI",
          "2203:   \"exec\":                  c.actionExec,          // singularity exec",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2201:  np := testhelper.NoParallel",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2230:   \"bind image\":            c.bindImage,           // test bind image",
          "2231:   \"umask\":                 c.actionUmask,         // test umask propagation",
          "2232:   \"no-mount\":              c.actionNoMount,       // test --no-mount",
          "2233:  }",
          "2234: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2235:   \"invalidRemote\":         np(c.invalidRemote),   // GHSA-5mv9-q7fq-9394",
          "",
          "---------------"
        ],
        "e2e/actions/regressions.go||e2e/actions/regressions.go": [
          "File: e2e/actions/regressions.go -> e2e/actions/regressions.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "616:   e2e.ExpectExit(0),",
          "617:  )",
          "618: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "623: func (c actionTests) invalidRemote(t *testing.T) {",
          "624:  testEndpoint := \"invalid\"",
          "625:  testEndpointURI := \"https://cloud.example.com\"",
          "626:  testImage := \"library://alpine\"",
          "629:  argv := []string{testImage, \"/bin/true\"}",
          "630:  c.env.RunSingularity(",
          "631:   t,",
          "632:   e2e.AsSubtest(\"exec default\"),",
          "633:   e2e.WithProfile(e2e.UserProfile),",
          "634:   e2e.WithCommand(\"exec\"),",
          "635:   e2e.WithArgs(argv...),",
          "636:   e2e.ExpectExit(0),",
          "637:  )",
          "640:  argv = []string{\"add\", \"--no-login\", testEndpoint, testEndpointURI}",
          "641:  c.env.RunSingularity(",
          "642:   t,",
          "643:   e2e.AsSubtest(\"remote add\"),",
          "644:   e2e.WithProfile(e2e.UserProfile),",
          "645:   e2e.WithCommand(\"remote\"),",
          "646:   e2e.WithArgs(argv...),",
          "647:   e2e.ExpectExit(0),",
          "648:  )",
          "650:  defer func(t *testing.T) {",
          "651:   argv := []string{\"remove\", testEndpoint}",
          "652:   c.env.RunSingularity(",
          "653:    t,",
          "654:    e2e.AsSubtest(\"remote remove\"),",
          "655:    e2e.WithProfile(e2e.UserProfile),",
          "656:    e2e.WithCommand(\"remote\"),",
          "657:    e2e.WithArgs(argv...),",
          "658:    e2e.ExpectExit(0),",
          "659:   )",
          "660:  }(t)",
          "663:  argv = []string{\"use\", testEndpoint}",
          "664:  c.env.RunSingularity(",
          "665:   t,",
          "666:   e2e.AsSubtest(\"remote use\"),",
          "667:   e2e.WithProfile(e2e.UserProfile),",
          "668:   e2e.WithCommand(\"remote\"),",
          "669:   e2e.WithArgs(argv...),",
          "670:   e2e.ExpectExit(0),",
          "671:  )",
          "674:  argv = []string{testImage, \"/bin/true\"}",
          "675:  c.env.RunSingularity(",
          "676:   t,",
          "677:   e2e.AsSubtest(\"exec invalid\"),",
          "678:   e2e.WithProfile(e2e.UserProfile),",
          "679:   e2e.WithCommand(\"exec\"),",
          "680:   e2e.WithArgs(argv...),",
          "681:   e2e.ExpectExit(255),",
          "682:  )",
          "684: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a9efa882b3bb9f1f99e77f99a43f30f07ac3728e",
      "candidate_info": {
        "commit_hash": "a9efa882b3bb9f1f99e77f99a43f30f07ac3728e",
        "repo": "sylabs/singularity",
        "commit_url": "https://github.com/sylabs/singularity/commit/a9efa882b3bb9f1f99e77f99a43f30f07ac3728e",
        "files": [
          "cmd/internal/cli/actions.go"
        ],
        "message": "fix: respect current remote for actions against library:// URIs\n\nActions (run/shell/exec) against library:// URIs were incorrectly using\nthe default cloud.sylabs.io library, rather than the currently\nconfigured remote.\n\nThe getLibraryClient function takes an empty string as the uri argument\nwhen the currently configured remote should be used.\n\nGHSA-5mv9-q7fq-9394",
        "before_after_code_files": [
          "cmd/internal/cli/actions.go||cmd/internal/cli/actions.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "cmd/internal/cli/actions.go||cmd/internal/cli/actions.go"
          ],
          "candidate": [
            "cmd/internal/cli/actions.go||cmd/internal/cli/actions.go"
          ]
        }
      },
      "candidate_diff": {
        "cmd/internal/cli/actions.go||cmd/internal/cli/actions.go": [
          "File: cmd/internal/cli/actions.go -> cmd/internal/cli/actions.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:  \"github.com/sylabs/singularity/internal/pkg/client/oci\"",
          "22:  \"github.com/sylabs/singularity/internal/pkg/client/oras\"",
          "23:  \"github.com/sylabs/singularity/internal/pkg/client/shub\"",
          "25:  \"github.com/sylabs/singularity/internal/pkg/util/uri\"",
          "26:  \"github.com/sylabs/singularity/pkg/sylog\"",
          "27: )",
          "",
          "[Removed Lines]",
          "24:  \"github.com/sylabs/singularity/internal/pkg/remote/endpoint\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80:   return \"\", err",
          "81:  }",
          "83:  var libraryURI string",
          "84:  if r.Host != \"\" {",
          "85:   libraryURI = \"https://\" + r.Host",
          "88:  }",
          "90:  c, err := getLibraryClientConfig(libraryURI)",
          "",
          "[Removed Lines]",
          "86:  } else {",
          "87:   libraryURI = endpoint.SCSDefaultLibraryURI",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "301af4b8f7989fa8698dfca2c3ee9c8ff08f8f39",
      "candidate_info": {
        "commit_hash": "301af4b8f7989fa8698dfca2c3ee9c8ff08f8f39",
        "repo": "sylabs/singularity",
        "commit_url": "https://github.com/sylabs/singularity/commit/301af4b8f7989fa8698dfca2c3ee9c8ff08f8f39",
        "files": [
          "e2e/actions/actions.go",
          "e2e/actions/regressions.go"
        ],
        "message": "e2e: if an invalid remote is set ensure library:// actions fail\n\nGHSA-5mv9-q7fq-9394",
        "before_after_code_files": [
          "e2e/actions/actions.go||e2e/actions/actions.go",
          "e2e/actions/regressions.go||e2e/actions/regressions.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "e2e/actions/actions.go||e2e/actions/actions.go",
            "e2e/actions/regressions.go||e2e/actions/regressions.go"
          ],
          "candidate": [
            "e2e/actions/actions.go||e2e/actions/actions.go",
            "e2e/actions/regressions.go||e2e/actions/regressions.go"
          ]
        }
      },
      "candidate_diff": {
        "e2e/actions/actions.go||e2e/actions/actions.go": [
          "File: e2e/actions/actions.go -> e2e/actions/actions.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2198:   env: env,",
          "2199:  }",
          "2201:  return testhelper.Tests{",
          "2202:   \"action URI\":            c.RunFromURI,          // action_URI",
          "2203:   \"exec\":                  c.actionExec,          // singularity exec",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2201:  np := testhelper.NoParallel",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2230:   \"bind image\":            c.bindImage,           // test bind image",
          "2231:   \"umask\":                 c.actionUmask,         // test umask propagation",
          "2232:   \"no-mount\":              c.actionNoMount,       // test --no-mount",
          "2233:  }",
          "2234: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2235:   \"invalidRemote\":         np(c.invalidRemote),   // GHSA-5mv9-q7fq-9394",
          "",
          "---------------"
        ],
        "e2e/actions/regressions.go||e2e/actions/regressions.go": [
          "File: e2e/actions/regressions.go -> e2e/actions/regressions.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "616:   e2e.ExpectExit(0),",
          "617:  )",
          "618: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "623: func (c actionTests) invalidRemote(t *testing.T) {",
          "624:  testEndpoint := \"invalid\"",
          "625:  testEndpointURI := \"https://cloud.example.com\"",
          "626:  testImage := \"library://alpine\"",
          "629:  argv := []string{testImage, \"/bin/true\"}",
          "630:  c.env.RunSingularity(",
          "631:   t,",
          "632:   e2e.AsSubtest(\"exec default\"),",
          "633:   e2e.WithProfile(e2e.UserProfile),",
          "634:   e2e.WithCommand(\"exec\"),",
          "635:   e2e.WithArgs(argv...),",
          "636:   e2e.ExpectExit(0),",
          "637:  )",
          "640:  argv = []string{\"add\", \"--no-login\", testEndpoint, testEndpointURI}",
          "641:  c.env.RunSingularity(",
          "642:   t,",
          "643:   e2e.AsSubtest(\"remote add\"),",
          "644:   e2e.WithProfile(e2e.UserProfile),",
          "645:   e2e.WithCommand(\"remote\"),",
          "646:   e2e.WithArgs(argv...),",
          "647:   e2e.ExpectExit(0),",
          "648:  )",
          "650:  defer func(t *testing.T) {",
          "651:   argv := []string{\"remove\", testEndpoint}",
          "652:   c.env.RunSingularity(",
          "653:    t,",
          "654:    e2e.AsSubtest(\"remote remove\"),",
          "655:    e2e.WithProfile(e2e.UserProfile),",
          "656:    e2e.WithCommand(\"remote\"),",
          "657:    e2e.WithArgs(argv...),",
          "658:    e2e.ExpectExit(0),",
          "659:   )",
          "660:  }(t)",
          "663:  argv = []string{\"use\", testEndpoint}",
          "664:  c.env.RunSingularity(",
          "665:   t,",
          "666:   e2e.AsSubtest(\"remote use\"),",
          "667:   e2e.WithProfile(e2e.UserProfile),",
          "668:   e2e.WithCommand(\"remote\"),",
          "669:   e2e.WithArgs(argv...),",
          "670:   e2e.ExpectExit(0),",
          "671:  )",
          "674:  argv = []string{testImage, \"/bin/true\"}",
          "675:  c.env.RunSingularity(",
          "676:   t,",
          "677:   e2e.AsSubtest(\"exec invalid\"),",
          "678:   e2e.WithProfile(e2e.UserProfile),",
          "679:   e2e.WithCommand(\"exec\"),",
          "680:   e2e.WithArgs(argv...),",
          "681:   e2e.ExpectExit(255),",
          "682:  )",
          "684: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}