{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6f5401d7cae1d8a847a28aba7f9efa6f7ad97bfb",
      "candidate_info": {
        "commit_hash": "6f5401d7cae1d8a847a28aba7f9efa6f7ad97bfb",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/6f5401d7cae1d8a847a28aba7f9efa6f7ad97bfb",
        "files": [
          "ambari-server/src/main/resources/scripts/configs.py"
        ],
        "message": "[AMBARI-25212] configs.py output and Ambari API output of config properties are not in same sorted order. (#2890)",
        "before_after_code_files": [
          "ambari-server/src/main/resources/scripts/configs.py||ambari-server/src/main/resources/scripts/configs.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/resources/scripts/configs.py||ambari-server/src/main/resources/scripts/configs.py": [
          "File: ambari-server/src/main/resources/scripts/configs.py -> ambari-server/src/main/resources/scripts/configs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import optparse",
          "22: from optparse import OptionGroup",
          "23: import sys",
          "24: import urllib2, ssl",
          "25: import time",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: from collections import OrderedDict",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "134:   config_tag = get_config_tag(cluster, config_type, accessor)",
          "135:   logger.info(\"### on (Site:{0}, Tag:{1})\".format(config_type, config_tag))",
          "136:   response = accessor(CONFIGURATION_URL.format(cluster, config_type, config_tag))",
          "138:   current_config = config_by_tag[ITEMS][0]",
          "139:   return current_config[PROPERTIES], current_config.get(ATTRIBUTES, {})",
          "",
          "[Removed Lines]",
          "137:   config_by_tag = json.loads(response)",
          "",
          "[Added Lines]",
          "138:   config_by_tag = json.loads(response, object_pairs_hook=OrderedDict)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "25ab8d75d24c125a0cd09a42e78c7a136d5698fe",
      "candidate_info": {
        "commit_hash": "25ab8d75d24c125a0cd09a42e78c7a136d5698fe",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/25ab8d75d24c125a0cd09a42e78c7a136d5698fe",
        "files": [
          "ambari-web/app/styles/hosts.less"
        ],
        "message": "AMBARI-24603 Better scrolling for long list of components in dropdown in host details page (sjanardhanhw via ababiichuk)",
        "before_after_code_files": [
          "ambari-web/app/styles/hosts.less||ambari-web/app/styles/hosts.less"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/styles/hosts.less||ambari-web/app/styles/hosts.less": [
          "File: ambari-web/app/styles/hosts.less -> ambari-web/app/styles/hosts.less",
          "--- Hunk 1 ---",
          "[Context before]",
          "419:       vertical-align: middle;",
          "420:     }",
          "421:     .dropdown-menu {",
          "422:       .disabled {",
          "423:         pointer-events: none;",
          "424:         color: #808080;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "422:       max-height: 450px;",
          "423:       overflow-y: scroll;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8ff68e779833b3e0cbc717c9c972e4461d5e585a",
      "candidate_info": {
        "commit_hash": "8ff68e779833b3e0cbc717c9c972e4461d5e585a",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/8ff68e779833b3e0cbc717c9c972e4461d5e585a",
        "files": [
          "ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/configuration/hadoop-env.xml",
          "ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/scripts/params_linux.py",
          "ambari-server/src/main/resources/stacks/HDP/2.2/services/HDFS/configuration/hadoop-env.xml",
          "ambari-server/src/main/resources/stacks/HDP/2.3/services/HDFS/configuration/hadoop-env.xml",
          "ambari-server/src/main/resources/stacks/HDP/2.4/services/HDFS/configuration/hadoop-env.xml",
          "ambari-server/src/main/resources/stacks/HDP/2.6/services/HDFS/configuration/hadoop-env.xml"
        ],
        "message": "AMBARI-24565. HDFS should handle a customized Zookeeper service principal name (dlysnichenko)",
        "before_after_code_files": [
          "ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/scripts/params_linux.py||ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/scripts/params_linux.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/scripts/params_linux.py||ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/scripts/params_linux.py": [
          "File: ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/scripts/params_linux.py -> ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/scripts/params_linux.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "371:     jn_principal_name = jn_principal_name.replace('_HOST', hostname.lower())",
          "372:   jn_keytab = default(\"/configurations/hdfs-site/dfs.journalnode.keytab.file\", None)",
          "373:   hdfs_kinit_cmd = format(\"{kinit_path_local} -kt {hdfs_user_keytab} {hdfs_principal_name};\")",
          "374: else:",
          "375:   dn_kinit_cmd = \"\"",
          "376:   nn_kinit_cmd = \"\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "375:   zk_principal_name = default(\"/configurations/zookeeper-env/zookeeper_principal_name\", \"zookeeper/_HOST@EXAMPLE.COM\")",
          "376:   zk_principal_user = zk_principal_name.split('/')[0]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8c13461aa27da31d79e27c4cd8512ded4bc51924",
      "candidate_info": {
        "commit_hash": "8c13461aa27da31d79e27c4cd8512ded4bc51924",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/8c13461aa27da31d79e27c4cd8512ded4bc51924",
        "files": [
          "ambari-logsearch/ambari-logsearch-server/src/main/configsets/hadoop_logs/conf/solrconfig.xml",
          "ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/service_logs-solrconfig.xml.j2"
        ],
        "message": "AMBARI-24624. Log Search: Field type 'key_lower_case' not found - in Solr (#2295)",
        "before_after_code_files": [
          "ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/service_logs-solrconfig.xml.j2||ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/service_logs-solrconfig.xml.j2"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/service_logs-solrconfig.xml.j2||ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/service_logs-solrconfig.xml.j2": [
          "File: ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/service_logs-solrconfig.xml.j2 -> ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/service_logs-solrconfig.xml.j2",
          "--- Hunk 1 ---",
          "[Context before]",
          "1216:   -->",
          "1217:   <searchComponent name=\"spellcheck\" class=\"solr.SpellCheckComponent\">",
          "1221:     <!-- Multiple \"Spell Checkers\" can be declared and used by this",
          "1222:     component",
          "",
          "[Removed Lines]",
          "1219:     <str name=\"queryAnalyzerFieldType\">key_lower_case</str>",
          "",
          "[Added Lines]",
          "1219:     <str name=\"queryAnalyzerFieldType\">lowercase</str>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1691:       </arr>",
          "1692:     </processor>",
          "1693:     <processor class=\"solr.AddSchemaFieldsUpdateProcessorFactory\">",
          "1695:       <lst name=\"typeMapping\">",
          "1696:         <str name=\"valueClass\">java.lang.Boolean</str>",
          "1697:         <str name=\"fieldType\">boolean</str>",
          "",
          "[Removed Lines]",
          "1694:       <str name=\"defaultFieldType\">key_lower_case</str>",
          "",
          "[Added Lines]",
          "1694:       <str name=\"defaultFieldType\">lowercase</str>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "be8ee6b7672b8a16312ec04c6c684e6df60e8758",
      "candidate_info": {
        "commit_hash": "be8ee6b7672b8a16312ec04c6c684e6df60e8758",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/be8ee6b7672b8a16312ec04c6c684e6df60e8758",
        "files": [
          "ambari-server/src/main/python/ambari_server/dbConfiguration_linux.py"
        ],
        "message": "AMBARI-24495. ambari-server setup fails with postgresql >= 9.3  (aonishuk)",
        "before_after_code_files": [
          "ambari-server/src/main/python/ambari_server/dbConfiguration_linux.py||ambari-server/src/main/python/ambari_server/dbConfiguration_linux.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/python/ambari_server/dbConfiguration_linux.py||ambari-server/src/main/python/ambari_server/dbConfiguration_linux.py": [
          "File: ambari-server/src/main/python/ambari_server/dbConfiguration_linux.py -> ambari-server/src/main/python/ambari_server/dbConfiguration_linux.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "362:   PG_HBA_DIR = None",
          "364:   if OSCheck.is_redhat_family() and OSCheck.get_os_major_version() in OSConst.systemd_redhat_os_major_versions:",
          "365:     SERVICE_CMD = \"/usr/bin/env systemctl\"",
          "366:     PG_ST_CMD = \"%s status %s\" % (SERVICE_CMD, PG_SERVICE_NAME)",
          "368:     PG_START_CMD = AMBARI_SUDO_BINARY + \" %s start %s\" % (SERVICE_CMD, PG_SERVICE_NAME)",
          "369:     PG_RESTART_CMD = AMBARI_SUDO_BINARY + \" %s restart %s\" % (SERVICE_CMD, PG_SERVICE_NAME)",
          "370:     PG_HBA_RELOAD_CMD = AMBARI_SUDO_BINARY + \" %s reload %s\" % (SERVICE_CMD, PG_SERVICE_NAME)",
          "",
          "[Removed Lines]",
          "367:     PG_INITDB_CMD = \"/usr/bin/postgresql-setup initdb\"",
          "",
          "[Added Lines]",
          "365:     if os.path.isfile(\"/usr/bin/postgresql-setup\"):",
          "366:       PG_INITDB_CMD = \"/usr/bin/postgresql-setup initdb\"",
          "367:     else:",
          "368:       versioned_script_path = glob.glob(\"/usr/pgsql-*/bin/postgresql*-setup\")",
          "369:       # versioned version of psql",
          "370:       if versioned_script_path:",
          "371:         PG_INITDB_CMD = \"{0} initdb\".format(versioned_script_path[0])",
          "373:         psql_service_file = glob.glob(\"/usr/lib/systemd/system/postgresql-*.service\")",
          "374:         if psql_service_file:",
          "375:           psql_service_file_name = os.path.basename(psql_service_file[0])",
          "376:           PG_SERVICE_NAME = psql_service_file_name[:-8] # remove .service",
          "377:       else:",
          "378:         raise FatalException(1, \"Cannot find postgresql-setup script.\")",
          "",
          "---------------"
        ]
      }
    }
  ]
}