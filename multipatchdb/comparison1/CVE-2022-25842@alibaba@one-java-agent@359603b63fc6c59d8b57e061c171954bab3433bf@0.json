{
  "cve_id": "CVE-2022-25842",
  "cve_desc": "All versions of package com.alibaba.oneagent:one-java-agent-plugin are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip) using a specially crafted archive that holds directory traversal filenames (e.g. ../../evil.exe). The attacker can overwrite executable files and either invoke them remotely or wait for the system or user to call them, thus achieving remote command execution on the victim\u2019s machine.",
  "repo": "alibaba/one-java-agent",
  "patch_hash": "359603b63fc6c59d8b57e061c171954bab3433bf",
  "patch_info": {
    "commit_hash": "359603b63fc6c59d8b57e061c171954bab3433bf",
    "repo": "alibaba/one-java-agent",
    "commit_url": "https://github.com/alibaba/one-java-agent/pull/29/commits/359603b63fc6c59d8b57e061c171954bab3433bf",
    "files": [
      "one-java-agent-plugin/src/main/java/com/alibaba/oneagent/utils/IOUtils.java"
    ],
    "message": "remove unused IOUtils.unzip",
    "before_after_code_files": [
      "one-java-agent-plugin/src/main/java/com/alibaba/oneagent/utils/IOUtils.java||one-java-agent-plugin/src/main/java/com/alibaba/oneagent/utils/IOUtils.java"
    ]
  },
  "patch_diff": {
    "one-java-agent-plugin/src/main/java/com/alibaba/oneagent/utils/IOUtils.java||one-java-agent-plugin/src/main/java/com/alibaba/oneagent/utils/IOUtils.java": [
      "File: one-java-agent-plugin/src/main/java/com/alibaba/oneagent/utils/IOUtils.java -> one-java-agent-plugin/src/main/java/com/alibaba/oneagent/utils/IOUtils.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "103:   return null;",
      "104:  }",
      "162: }",
      "",
      "[Removed Lines]",
      "106:  public static void unzip(String zipFile, String extractFolder) throws IOException {",
      "107:   File file = new File(zipFile);",
      "108:   ZipFile zip = null;",
      "109:   try {",
      "110:    int BUFFER = 1024 * 8;",
      "112:    zip = new ZipFile(file);",
      "113:    String newPath = extractFolder;",
      "115:    new File(newPath).mkdir();",
      "116:    Enumeration<? extends ZipEntry> zipFileEntries = zip.entries();",
      "119:    while (zipFileEntries.hasMoreElements()) {",
      "121:     ZipEntry entry = (ZipEntry) zipFileEntries.nextElement();",
      "122:     String currentEntry = entry.getName();",
      "124:     File destFile = new File(newPath, currentEntry);",
      "126:     File destinationParent = destFile.getParentFile();",
      "129:     destinationParent.mkdirs();",
      "131:     if (!entry.isDirectory()) {",
      "132:      BufferedInputStream is = null;",
      "133:      BufferedOutputStream dest = null;",
      "134:      try {",
      "135:       is = new BufferedInputStream(zip.getInputStream(entry));",
      "136:       int currentByte;",
      "138:       byte data[] = new byte[BUFFER];",
      "141:       FileOutputStream fos = new FileOutputStream(destFile);",
      "142:       dest = new BufferedOutputStream(fos, BUFFER);",
      "145:       while ((currentByte = is.read(data, 0, BUFFER)) != -1) {",
      "146:        dest.write(data, 0, currentByte);",
      "147:       }",
      "148:       dest.flush();",
      "149:      } finally {",
      "150:       close(dest);",
      "151:       close(is);",
      "152:      }",
      "154:     }",
      "156:    }",
      "157:   } finally {",
      "158:    close(zip);",
      "159:   }",
      "161:  }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a0ab2fa9f492b13667810b94b5feeb86268fde9e",
      "candidate_info": {
        "commit_hash": "a0ab2fa9f492b13667810b94b5feeb86268fde9e",
        "repo": "alibaba/one-java-agent",
        "commit_url": "https://github.com/alibaba/one-java-agent/commit/a0ab2fa9f492b13667810b94b5feeb86268fde9e",
        "files": [
          "one-java-agent-plugin/src/main/java/com/alibaba/oneagent/utils/IOUtils.java"
        ],
        "message": "remove unused IOUtils.unzip",
        "before_after_code_files": [
          "one-java-agent-plugin/src/main/java/com/alibaba/oneagent/utils/IOUtils.java||one-java-agent-plugin/src/main/java/com/alibaba/oneagent/utils/IOUtils.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "one-java-agent-plugin/src/main/java/com/alibaba/oneagent/utils/IOUtils.java||one-java-agent-plugin/src/main/java/com/alibaba/oneagent/utils/IOUtils.java"
          ],
          "candidate": [
            "one-java-agent-plugin/src/main/java/com/alibaba/oneagent/utils/IOUtils.java||one-java-agent-plugin/src/main/java/com/alibaba/oneagent/utils/IOUtils.java"
          ]
        }
      },
      "candidate_diff": {
        "one-java-agent-plugin/src/main/java/com/alibaba/oneagent/utils/IOUtils.java||one-java-agent-plugin/src/main/java/com/alibaba/oneagent/utils/IOUtils.java": [
          "File: one-java-agent-plugin/src/main/java/com/alibaba/oneagent/utils/IOUtils.java -> one-java-agent-plugin/src/main/java/com/alibaba/oneagent/utils/IOUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "103:   return null;",
          "104:  }",
          "162: }",
          "",
          "[Removed Lines]",
          "106:  public static void unzip(String zipFile, String extractFolder) throws IOException {",
          "107:   File file = new File(zipFile);",
          "108:   ZipFile zip = null;",
          "109:   try {",
          "110:    int BUFFER = 1024 * 8;",
          "112:    zip = new ZipFile(file);",
          "113:    String newPath = extractFolder;",
          "115:    new File(newPath).mkdir();",
          "116:    Enumeration<? extends ZipEntry> zipFileEntries = zip.entries();",
          "119:    while (zipFileEntries.hasMoreElements()) {",
          "121:     ZipEntry entry = (ZipEntry) zipFileEntries.nextElement();",
          "122:     String currentEntry = entry.getName();",
          "124:     File destFile = new File(newPath, currentEntry);",
          "126:     File destinationParent = destFile.getParentFile();",
          "129:     destinationParent.mkdirs();",
          "131:     if (!entry.isDirectory()) {",
          "132:      BufferedInputStream is = null;",
          "133:      BufferedOutputStream dest = null;",
          "134:      try {",
          "135:       is = new BufferedInputStream(zip.getInputStream(entry));",
          "136:       int currentByte;",
          "138:       byte data[] = new byte[BUFFER];",
          "141:       FileOutputStream fos = new FileOutputStream(destFile);",
          "142:       dest = new BufferedOutputStream(fos, BUFFER);",
          "145:       while ((currentByte = is.read(data, 0, BUFFER)) != -1) {",
          "146:        dest.write(data, 0, currentByte);",
          "147:       }",
          "148:       dest.flush();",
          "149:      } finally {",
          "150:       close(dest);",
          "151:       close(is);",
          "152:      }",
          "154:     }",
          "156:    }",
          "157:   } finally {",
          "158:    close(zip);",
          "159:   }",
          "161:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}