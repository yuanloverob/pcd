{
  "cve_id": "CVE-2021-35065",
  "cve_desc": "The glob-parent package before 6.0.1 for Node.js allows ReDoS (regular expression denial of service) attacks against the enclosure regular expression.",
  "repo": "gulpjs/glob-parent",
  "patch_hash": "3e9f04a3b4349db7e1962d87c9a7398cda51f339",
  "patch_info": {
    "commit_hash": "3e9f04a3b4349db7e1962d87c9a7398cda51f339",
    "repo": "gulpjs/glob-parent",
    "commit_url": "https://github.com/gulpjs/glob-parent/commit/3e9f04a3b4349db7e1962d87c9a7398cda51f339",
    "files": [
      "index.js",
      "test/index.test.js"
    ],
    "message": "fix: Resolve ReDoS vulnerability from CVE-2021-35065 (#49)",
    "before_after_code_files": [
      "index.js||index.js",
      "test/index.test.js||test/index.test.js"
    ]
  },
  "patch_diff": {
    "index.js||index.js": [
      "File: index.js -> index.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "7: var slash = '/';",
      "8: var backslash = /\\\\/g;",
      "10: var globby = /(^|[^\\\\])([{[]|\\([^)]+$)/;",
      "11: var escaped = /\\\\([!*?|[\\](){}])/g;",
      "",
      "[Removed Lines]",
      "9: var enclosure = /[{[].*\\/.*[}\\]]$/;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "24:   }",
      "28:     str += slash;",
      "29:   }",
      "",
      "[Removed Lines]",
      "27:   if (enclosure.test(str)) {",
      "",
      "[Added Lines]",
      "26:   if (isEnclosure(str)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "40:   return str.replace(escaped, '$1');",
      "41: };",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "43: function isEnclosure(str) {",
      "44:   var lastChar = str.slice(-1)",
      "46:   var enclosureStart;",
      "47:   switch (lastChar) {",
      "48:     case '}':",
      "49:       enclosureStart = '{';",
      "50:       break;",
      "51:     case ']':",
      "52:       enclosureStart = '[';",
      "53:       break;",
      "54:     default:",
      "55:       return false;",
      "56:   }",
      "58:   var foundIndex = str.indexOf(enclosureStart);",
      "59:   if (foundIndex < 0) {",
      "60:     return false;",
      "61:   }",
      "63:   return str.slice(foundIndex + 1, -1).includes(slash);",
      "64: }",
      "",
      "---------------"
    ],
    "test/index.test.js||test/index.test.js": [
      "File: test/index.test.js -> test/index.test.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "225:     done();",
      "226:   });",
      "227: });",
      "229: if (isWin32) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "228:   it('should finish in reasonable time for \\'{\\' + \\'/\\'.repeat(n) [CVE-2021-35065]', function(done) {",
      "229:     this.timeout(1000);",
      "230:     gp('{' + '/'.repeat(500000));",
      "231:     done();",
      "232:   });",
      "234:   it('should finish in reasonable time for \\'{\\'.repeat(n)', function(done) {",
      "235:     this.timeout(1000);",
      "236:     gp('{'.repeat(500000));",
      "237:     done();",
      "238:   });",
      "240:   it('should finish in reasonable time for \\'(\\'.repeat(n)', function(done) {",
      "241:     this.timeout(1000);",
      "242:     gp('('.repeat(500000));",
      "243:     done();",
      "244:   });",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a98874f1a59e407f4fb1beb0db4efa8392da60bb",
      "candidate_info": {
        "commit_hash": "a98874f1a59e407f4fb1beb0db4efa8392da60bb",
        "repo": "gulpjs/glob-parent",
        "commit_url": "https://github.com/gulpjs/glob-parent/commit/a98874f1a59e407f4fb1beb0db4efa8392da60bb",
        "files": [
          "index.js",
          "test/index.test.js"
        ],
        "message": "fix: unescape exclamation mark (#26)",
        "before_after_code_files": [
          "index.js||index.js",
          "test/index.test.js||test/index.test.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "index.js||index.js",
            "test/index.test.js||test/index.test.js"
          ],
          "candidate": [
            "index.js||index.js",
            "test/index.test.js||test/index.test.js"
          ]
        }
      },
      "candidate_diff": {
        "index.js||index.js": [
          "File: index.js -> index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: var backslash = /\\\\/g;",
          "9: var enclosure = /[\\{\\[].*[\\/]*.*[\\}\\]]$/;",
          "10: var globby = /(^|[^\\\\])([\\{\\[]|\\([^\\)]+$)/;",
          "",
          "[Removed Lines]",
          "11: var escaped = /\\\\([\\*\\?\\|\\[\\]\\(\\)\\{\\}])/g;",
          "",
          "[Added Lines]",
          "11: var escaped = /\\\\([\\!\\*\\?\\|\\[\\]\\(\\)\\{\\}])/g;",
          "",
          "---------------"
        ],
        "test/index.test.js||test/index.test.js": [
          "File: test/index.test.js -> test/index.test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:     assert.equal(gp('[bar]/'), '.');",
          "79:     assert.equal(gp('./\\\\[bar]'), './[bar]');",
          "80:     assert.equal(gp('\\\\[bar]/'), '[bar]');",
          "81:     assert.equal(gp('[bar\\\\]/'), '.');",
          "82:     assert.equal(gp('path/foo \\\\[bar]/'), 'path/foo [bar]');",
          "83:     assert.equal(gp('path/\\\\{foo,bar}/'), 'path/{foo,bar}');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "81:     assert.equal(gp('\\\\!dir/*'), '!dir');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4a80667c69355c76a572a5892b0f133c8e1f457e",
      "candidate_info": {
        "commit_hash": "4a80667c69355c76a572a5892b0f133c8e1f457e",
        "repo": "gulpjs/glob-parent",
        "commit_url": "https://github.com/gulpjs/glob-parent/commit/4a80667c69355c76a572a5892b0f133c8e1f457e",
        "files": [
          "index.js"
        ],
        "message": "feat: hoist regexps and strings for performance gains",
        "before_after_code_files": [
          "index.js||index.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "index.js||index.js"
          ],
          "candidate": [
            "index.js||index.js"
          ]
        }
      },
      "candidate_diff": {
        "index.js||index.js": [
          "File: index.js -> index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: 'use strict';",
          "4: var pathDirname = require('path-dirname');",
          "5: var isWin32 = require('os').platform() === 'win32';",
          "7: module.exports = function globParent(str) {",
          "11:   }",
          "16:   }",
          "",
          "[Removed Lines]",
          "3: var isglob = require('is-glob');",
          "9:   if (isWin32 && str.indexOf('/') < 0) {",
          "10:     str = str.split('\\\\').join('/');",
          "14:   if (/[\\{\\[].*[\\/]*.*[\\}\\]]$/.test(str)) {",
          "15:     str += '/';",
          "",
          "[Added Lines]",
          "3: var isGlob = require('is-glob');",
          "7: var slash = '/';",
          "8: var backslash = /\\\\/g;",
          "9: var enclosure = /[\\{\\[].*[\\/]*.*[\\}\\]]$/;",
          "10: var globby = /(^|[^\\\\])([\\{\\[]|\\([^\\)]+$)/;",
          "11: var escaped = /\\\\([\\*\\?\\|\\[\\]\\(\\)\\{\\}])/g;",
          "15:   if (isWin32 && str.indexOf(slash) < 0) {",
          "16:     str = str.replace(backslash, slash);",
          "20:   if (enclosure.test(str)) {",
          "21:     str += slash;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "22:   do {",
          "23:     str = pathDirname.posix(str);",
          "28: };",
          "",
          "[Removed Lines]",
          "24:   } while (isglob(str) || /(^|[^\\\\])([\\{\\[]|\\([^\\)]+$)/.test(str));",
          "27:   return str.replace(/\\\\([\\*\\?\\|\\[\\]\\(\\)\\{\\}])/g, '$1');",
          "",
          "[Added Lines]",
          "30:   } while (isGlob(str) || globby.test(str));",
          "33:   return str.replace(escaped, '$1');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8cfb0ba84202d51571340dcbaf61b79d16a26c76",
      "candidate_info": {
        "commit_hash": "8cfb0ba84202d51571340dcbaf61b79d16a26c76",
        "repo": "gulpjs/glob-parent",
        "commit_url": "https://github.com/gulpjs/glob-parent/commit/8cfb0ba84202d51571340dcbaf61b79d16a26c76",
        "files": [
          "index.js"
        ],
        "message": "feat: preserve escaped brace/bracket at end of string",
        "before_after_code_files": [
          "index.js||index.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "index.js||index.js"
          ],
          "candidate": [
            "index.js||index.js"
          ]
        }
      },
      "candidate_diff": {
        "index.js||index.js": [
          "File: index.js -> index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: var pathDirname = require('path-dirname');",
          "7: module.exports = function globParent(str) {",
          "12:  str = str.replace(/(^|[^\\\\])(\\{([^{}]*?)}|\\[([^\\[\\]]*?)\\])/g, '$1*');",
          "15:  do {str = pathDirname.posix(str)} while (isglob(str));",
          "",
          "[Removed Lines]",
          "9:  str += 'a';",
          "",
          "[Added Lines]",
          "10:  if (/[\\}\\}]$/.test(str)) str += '/';",
          "13:  str += 'a';",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8269bd89290d99fac9395a354fb56fdcdb80f0be",
      "candidate_info": {
        "commit_hash": "8269bd89290d99fac9395a354fb56fdcdb80f0be",
        "repo": "gulpjs/glob-parent",
        "commit_url": "https://github.com/gulpjs/glob-parent/commit/8269bd89290d99fac9395a354fb56fdcdb80f0be",
        "files": [
          "index.js"
        ],
        "message": "feat: new approach to braces/brackets handling",
        "before_after_code_files": [
          "index.js||index.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "index.js||index.js"
          ],
          "candidate": [
            "index.js||index.js"
          ]
        }
      },
      "candidate_diff": {
        "index.js||index.js": [
          "File: index.js -> index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: var pathDirname = require('path-dirname');",
          "7: module.exports = function globParent(str) {",
          "13:  str += 'a';",
          "19:  return str.replace(/\\\\([\\*\\?\\|\\[\\]\\(\\)\\{\\}])/g, '$1');",
          "",
          "[Removed Lines]",
          "9:  str = str.replace(/(^|[^\\\\])(\\{([^{}]*?)}|\\[([^\\[\\]]*?)\\])/g, '$1*');",
          "10:  if (/[\\}\\]]$/.test(str)) str += '/';",
          "16:  do {str = pathDirname.posix(str)} while (isglob(str));",
          "",
          "[Added Lines]",
          "9:  if (/[\\{\\[].*[\\/]*.*[\\}\\]]$/.test(str)) str += '/';",
          "15:  do {str = pathDirname.posix(str)}",
          "16:  while (isglob(str) || /(^|[^\\\\])[\\{\\[]/.test(str));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8cdac1ea13b5d37d27705fb3954f691abbf305ed",
      "candidate_info": {
        "commit_hash": "8cdac1ea13b5d37d27705fb3954f691abbf305ed",
        "repo": "gulpjs/glob-parent",
        "commit_url": "https://github.com/gulpjs/glob-parent/commit/8cdac1ea13b5d37d27705fb3954f691abbf305ed",
        "files": [
          "index.js",
          "test/index.test.js"
        ],
        "message": "chore: Run prettier",
        "before_after_code_files": [
          "index.js||index.js",
          "test/index.test.js||test/index.test.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "index.js||index.js",
            "test/index.test.js||test/index.test.js"
          ],
          "candidate": [
            "index.js||index.js",
            "test/index.test.js||test/index.test.js"
          ]
        }
      },
      "candidate_diff": {
        "index.js||index.js": [
          "File: index.js -> index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:   return str.replace(escaped, '$1');",
          "40: };",
          "43: function isEnclosure(str) {",
          "46:   var enclosureStart;",
          "47:   switch (lastChar) {",
          "",
          "[Removed Lines]",
          "44:   var lastChar = str.slice(-1)",
          "",
          "[Added Lines]",
          "43:   var lastChar = str.slice(-1);",
          "",
          "---------------"
        ],
        "test/index.test.js||test/index.test.js": [
          "File: test/index.test.js -> test/index.test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "225:     done();",
          "226:   });",
          "229:     this.timeout(1000);",
          "230:     gp('{' + '/'.repeat(500000));",
          "231:     done();",
          "232:   });",
          "235:     this.timeout(1000);",
          "236:     gp('{'.repeat(500000));",
          "237:     done();",
          "238:   });",
          "241:     this.timeout(1000);",
          "242:     gp('('.repeat(500000));",
          "243:     done();",
          "",
          "[Removed Lines]",
          "228:   it('should finish in reasonable time for \\'{\\' + \\'/\\'.repeat(n) [CVE-2021-35065]', function(done) {",
          "234:   it('should finish in reasonable time for \\'{\\'.repeat(n)', function(done) {",
          "240:   it('should finish in reasonable time for \\'(\\'.repeat(n)', function(done) {",
          "",
          "[Added Lines]",
          "228:   it(\"should finish in reasonable time for '{' + '/'.repeat(n) [CVE-2021-35065]\", function (done) {",
          "234:   it(\"should finish in reasonable time for '{'.repeat(n)\", function (done) {",
          "240:   it(\"should finish in reasonable time for '('.repeat(n)\", function (done) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}