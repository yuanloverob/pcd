{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0f34f608627d106c2cae4163da22e6f331bfea49",
      "candidate_info": {
        "commit_hash": "0f34f608627d106c2cae4163da22e6f331bfea49",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/0f34f608627d106c2cae4163da22e6f331bfea49",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java",
          "fontbox/src/main/java/org/apache/fontbox/ttf/TrueTypeFont.java"
        ],
        "message": "PDFBOX-4892: remove redundant type conversion, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887183 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java||fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java",
          "fontbox/src/main/java/org/apache/fontbox/ttf/TrueTypeFont.java||fontbox/src/main/java/org/apache/fontbox/ttf/TrueTypeFont.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java||fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java -> fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "441:         boolean isCIDFont = topDict.getEntry(\"ROS\") != null;",
          "442:         if (isCIDFont)",
          "443:         {",
          "445:             DictData.Entry rosEntry = topDict.getEntry(\"ROS\");",
          "449:         }",
          "450:         else",
          "451:         {",
          "",
          "[Removed Lines]",
          "444:             font = new CFFCIDFont();",
          "446:             ((CFFCIDFont) font).setRegistry(readString(rosEntry.getNumber(0).intValue()));",
          "447:             ((CFFCIDFont) font).setOrdering(readString(rosEntry.getNumber(1).intValue()));",
          "448:             ((CFFCIDFont) font).setSupplement(rosEntry.getNumber(2).intValue());",
          "",
          "[Added Lines]",
          "444:             CFFCIDFont cffCIDFont = new CFFCIDFont();",
          "446:             cffCIDFont.setRegistry(readString(rosEntry.getNumber(0).intValue()));",
          "447:             cffCIDFont.setOrdering(readString(rosEntry.getNumber(1).intValue()));",
          "448:             cffCIDFont.setSupplement(rosEntry.getNumber(2).intValue());",
          "450:             font = cffCIDFont;",
          "",
          "---------------"
        ],
        "fontbox/src/main/java/org/apache/fontbox/ttf/TrueTypeFont.java||fontbox/src/main/java/org/apache/fontbox/ttf/TrueTypeFont.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/ttf/TrueTypeFont.java -> fontbox/src/main/java/org/apache/fontbox/ttf/TrueTypeFont.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "701:     @Override",
          "702:     public BoundingBox getFontBBox() throws IOException",
          "703:     {",
          "708:         float scale = 1000f / getUnitsPerEm();",
          "709:         return new BoundingBox(xMin * scale, yMin * scale, xMax * scale, yMax * scale);",
          "710:     }",
          "",
          "[Removed Lines]",
          "704:         short xMin = getHeader().getXMin();",
          "705:         short xMax = getHeader().getXMax();",
          "706:         short yMin = getHeader().getYMin();",
          "707:         short yMax = getHeader().getYMax();",
          "",
          "[Added Lines]",
          "704:         HeaderTable headerTable = getHeader();",
          "705:         short xMin = headerTable.getXMin();",
          "706:         short xMax = headerTable.getXMax();",
          "707:         short yMin = headerTable.getYMin();",
          "708:         short yMax = headerTable.getYMax();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b3f6d0a2f5e41a3c96c4e1f49217bbfe8dc00b42",
      "candidate_info": {
        "commit_hash": "b3f6d0a2f5e41a3c96c4e1f49217bbfe8dc00b42",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/b3f6d0a2f5e41a3c96c4e1f49217bbfe8dc00b42",
        "files": [
          "xmpbox/src/main/java/org/apache/xmpbox/schema/XMPSchemaFactory.java"
        ],
        "message": "PDFBOX-4892: remove unneeded null check, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887223 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "xmpbox/src/main/java/org/apache/xmpbox/schema/XMPSchemaFactory.java||xmpbox/src/main/java/org/apache/xmpbox/schema/XMPSchemaFactory.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "xmpbox/src/main/java/org/apache/xmpbox/schema/XMPSchemaFactory.java||xmpbox/src/main/java/org/apache/xmpbox/schema/XMPSchemaFactory.java": [
          "File: xmpbox/src/main/java/org/apache/xmpbox/schema/XMPSchemaFactory.java -> xmpbox/src/main/java/org/apache/xmpbox/schema/XMPSchemaFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "119:         try",
          "120:         {",
          "121:             schema = schemaClass.getDeclaredConstructor(argsClass).newInstance(schemaArgs);",
          "126:             return schema;",
          "127:         }",
          "128:         catch (Exception e)",
          "",
          "[Removed Lines]",
          "122:             if (schema != null)",
          "123:             {",
          "124:                 metadata.addSchema(schema);",
          "125:             }",
          "",
          "[Added Lines]",
          "122:             metadata.addSchema(schema);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5811934884c82b8cf538307b39a4569beed24252",
      "candidate_info": {
        "commit_hash": "5811934884c82b8cf538307b39a4569beed24252",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/5811934884c82b8cf538307b39a4569beed24252",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/TTFSubsetter.java"
        ],
        "message": "PDFBOX-4892: optimize / simplify, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890843 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/TTFSubsetter.java||fontbox/src/main/java/org/apache/fontbox/ttf/TTFSubsetter.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/ttf/TTFSubsetter.java||fontbox/src/main/java/org/apache/fontbox/ttf/TTFSubsetter.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/ttf/TTFSubsetter.java -> fontbox/src/main/java/org/apache/fontbox/ttf/TTFSubsetter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "478:         hasAddedCompoundReferences = true;",
          "480:         boolean hasNested;",
          "484:             long[] offsets = ttf.getIndexToLocation().getOffsets();",
          "485:             InputStream is = ttf.getOriginalData();",
          "486:             Set<Integer> glyphIdsToAdd = null;",
          "487:             try",
          "",
          "[Removed Lines]",
          "481:         do",
          "482:         {",
          "483:             GlyphTable g = ttf.getGlyph();",
          "",
          "[Added Lines]",
          "481:         GlyphTable g = ttf.getGlyph();",
          "483:             do",
          "484:         {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "602:                         int componentGid = (buf[off] & 0xff) << 8 | buf[off + 1] & 0xff;",
          "608:                         int newComponentGid = getNewGlyphId(componentGid);",
          "609:                         buf[off]   = (byte)(newComponentGid >>> 8);",
          "",
          "[Removed Lines]",
          "603:                         if (!glyphIds.contains(componentGid))",
          "604:                         {",
          "605:                             glyphIds.add(componentGid);",
          "606:                         }",
          "",
          "[Added Lines]",
          "603:                         glyphIds.add(componentGid);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "880:         int lastgid = h.getNumberOfHMetrics() - 1;",
          "888:         try",
          "889:         {",
          "",
          "[Removed Lines]",
          "882:         boolean needLastGidWidth = false;",
          "883:         if (glyphIds.last() > lastgid && !glyphIds.contains(lastgid))",
          "884:         {",
          "885:             needLastGidWidth = true;",
          "886:         }",
          "",
          "[Added Lines]",
          "879:         boolean needLastGidWidth = glyphIds.last() > lastgid && !glyphIds.contains(lastgid);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1d74eb778d9c8193275d36ce0d5399bc7860381a",
      "candidate_info": {
        "commit_hash": "1d74eb778d9c8193275d36ce0d5399bc7860381a",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/1d74eb778d9c8193275d36ce0d5399bc7860381a",
        "files": [
          "debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java"
        ],
        "message": "PDFBOX-4892: refactor, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1888024 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java||debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java||debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java": [
          "File: debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java -> debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "437:         fileMenu.addSeparator();",
          "438:         fileMenu.add(printMenuItem);",
          "443:         {",
          "446:             {",
          "453:             fileMenu.addSeparator();",
          "454:             fileMenu.add(exitMenuItem);",
          "455:         }",
          "",
          "[Removed Lines]",
          "440:         JMenuItem exitMenuItem = new JMenuItem(\"Exit\");",
          "441:         exitMenuItem.setAccelerator(KeyStroke.getKeyStroke(\"alt F4\"));",
          "442:         exitMenuItem.addActionListener(new ActionListener()",
          "444:             @Override",
          "445:             public void actionPerformed(ActionEvent evt)",
          "447:                 exitMenuItemActionPerformed(evt);",
          "448:             }",
          "449:         });",
          "451:         if (!IS_MAC_OS)",
          "452:         {",
          "",
          "[Added Lines]",
          "440:         if (!IS_MAC_OS)",
          "442:             JMenuItem exitMenuItem = new JMenuItem(\"Exit\");",
          "443:             exitMenuItem.setAccelerator(KeyStroke.getKeyStroke(\"alt F4\"));",
          "444:             exitMenuItem.addActionListener(new ActionListener()",
          "446:                 @Override",
          "447:                 public void actionPerformed(ActionEvent evt)",
          "448:                 {",
          "449:                     exitMenuItemActionPerformed(evt);",
          "450:                 }",
          "451:             });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4ff0fc83930d858f955913a731c7c7bf2801e1cb",
      "candidate_info": {
        "commit_hash": "4ff0fc83930d858f955913a731c7c7bf2801e1cb",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/4ff0fc83930d858f955913a731c7c7bf2801e1cb",
        "files": [
          "debugger/src/main/java/org/apache/pdfbox/debugger/streampane/StreamPane.java"
        ],
        "message": "PDFBOX-4971: add security features\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1882098 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "debugger/src/main/java/org/apache/pdfbox/debugger/streampane/StreamPane.java||debugger/src/main/java/org/apache/pdfbox/debugger/streampane/StreamPane.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "debugger/src/main/java/org/apache/pdfbox/debugger/streampane/StreamPane.java||debugger/src/main/java/org/apache/pdfbox/debugger/streampane/StreamPane.java": [
          "File: debugger/src/main/java/org/apache/pdfbox/debugger/streampane/StreamPane.java -> debugger/src/main/java/org/apache/pdfbox/debugger/streampane/StreamPane.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: import javax.swing.text.StyleConstants;",
          "46: import javax.swing.text.StyleContext;",
          "47: import javax.swing.text.StyledDocument;",
          "48: import javax.xml.parsers.DocumentBuilder;",
          "49: import javax.xml.parsers.DocumentBuilderFactory;",
          "50: import javax.xml.parsers.ParserConfigurationException;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48: import javax.xml.XMLConstants;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "425:                     builderFactory.setExpandEntityReferences(false);",
          "426:                     DocumentBuilder builder = builderFactory.newDocumentBuilder();",
          "427:                     Document doc = builder.parse(new InputSource(inputStreamReader));",
          "429:                     transformer.setOutputProperty(OutputKeys.INDENT, \"yes\");",
          "430:                     transformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", Integer.toString(1));",
          "431:                     StreamResult result = new StreamResult(baos);",
          "",
          "[Removed Lines]",
          "428:                     Transformer transformer = TransformerFactory.newInstance().newTransformer();",
          "",
          "[Added Lines]",
          "429:                     TransformerFactory transformerFactory = TransformerFactory.newInstance();",
          "430:                     transformerFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");",
          "431:                     transformerFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"\");",
          "432:                     transformerFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, \"\");",
          "433:                     Transformer transformer = transformerFactory.newTransformer();",
          "",
          "---------------"
        ]
      }
    }
  ]
}