{
  "cve_id": "CVE-2017-11173",
  "cve_desc": "Missing anchor in generated regex for rack-cors before 0.4.1 allows a malicious third-party site to perform CORS requests. If the configuration were intended to allow only the trusted example.com domain name and not the malicious example.net domain name, then example.com.example.net (as well as example.com-example.net) would be inadvertently allowed.",
  "repo": "cyu/rack-cors",
  "patch_hash": "42ebe6caa8e85ffa9c8a171bda668ba1acc7a5e6",
  "patch_info": {
    "commit_hash": "42ebe6caa8e85ffa9c8a171bda668ba1acc7a5e6",
    "repo": "cyu/rack-cors",
    "commit_url": "https://github.com/cyu/rack-cors/commit/42ebe6caa8e85ffa9c8a171bda668ba1acc7a5e6",
    "files": [
      "lib/rack/cors.rb"
    ],
    "message": "Add end string anchor to string origin def\n\nBuild regex with end string anchor when string is used to configure\norigin\n\n[Fixes #86]",
    "before_after_code_files": [
      "lib/rack/cors.rb||lib/rack/cors.rb"
    ]
  },
  "patch_diff": {
    "lib/rack/cors.rb||lib/rack/cors.rb": [
      "File: lib/rack/cors.rb -> lib/rack/cors.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "253:                  /^https?:\\/\\//,",
      "254:                  'file://'        then n",
      "255:             when '*'              then @public_resources = true; n",
      "257:             end",
      "258:           end.flatten",
      "259:           @origins.push(blk) if blk",
      "",
      "[Removed Lines]",
      "256:             else                  Regexp.compile(\"^[a-z][a-z0-9.+-]*:\\\\\\/\\\\\\/#{Regexp.quote(n)}\")",
      "",
      "[Added Lines]",
      "256:             else                  Regexp.compile(\"^[a-z][a-z0-9.+-]*:\\\\\\/\\\\\\/#{Regexp.quote(n)}$\")",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e2a08d49266f12eee2e2db94aa9fcf16ae1caf05",
      "candidate_info": {
        "commit_hash": "e2a08d49266f12eee2e2db94aa9fcf16ae1caf05",
        "repo": "cyu/rack-cors",
        "commit_url": "https://github.com/cyu/rack-cors/commit/e2a08d49266f12eee2e2db94aa9fcf16ae1caf05",
        "files": [
          "CHANGELOG",
          "lib/rack/cors.rb",
          "test/unit/cors_test.rb",
          "test/unit/non_http.ru"
        ],
        "message": "Add support for NON-HTTP/HTTPS URIs\n\nFor example, `origins 'example.com'` will match:\n  - http://example.com\n  - https://example.com\n  - content://example.com\n\nFixes #17",
        "before_after_code_files": [
          "lib/rack/cors.rb||lib/rack/cors.rb",
          "test/unit/cors_test.rb||test/unit/cors_test.rb",
          "test/unit/non_http.ru||test/unit/non_http.ru"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/rack/cors.rb||lib/rack/cors.rb"
          ],
          "candidate": [
            "lib/rack/cors.rb||lib/rack/cors.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/rack/cors.rb||lib/rack/cors.rb": [
          "File: lib/rack/cors.rb -> lib/rack/cors.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "152:           @public_resources = false",
          "153:         end",
          "156:           @origins = args.flatten.collect do |n|",
          "157:             case n",
          "162:             end",
          "163:           end.flatten",
          "164:           @origins.push(blk) if blk",
          "",
          "[Removed Lines]",
          "155:         def origins(*args,&blk)",
          "158:             when Regexp, /^https?:\\/\\// then n",
          "159:             when 'file://'              then n",
          "160:             when '*'                    then @public_resources = true; n",
          "161:             else                        [\"http://#{n}\", \"https://#{n}\"]",
          "",
          "[Added Lines]",
          "155:         def origins(*args, &blk)",
          "158:             when Regexp,",
          "159:                  /^https?:\\/\\//,",
          "160:                  'file://'        then n",
          "161:             when '*'              then @public_resources = true; n",
          "162:             else                  Regexp.compile(\"^[a-z][a-z0-9.+-]*:\\\\\\/\\\\\\/#{Regexp.quote(n)}\")",
          "",
          "---------------"
        ],
        "test/unit/cors_test.rb||test/unit/cors_test.rb": [
          "File: test/unit/cors_test.rb -> test/unit/cors_test.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: describe Rack::Cors do",
          "20:   include Rack::Test::Methods",
          "24:   end",
          "26:   it 'should support simple cors request' do",
          "",
          "[Removed Lines]",
          "22:   def app",
          "23:     eval \"Rack::Builder.new {( \" + File.read(File.dirname(__FILE__) + '/test.ru') + \"\\n )}\"",
          "",
          "[Added Lines]",
          "22:   def load_app(name)",
          "23:     eval \"Rack::Builder.new {( \" + File.read(File.dirname(__FILE__) + \"/#{name}.ru\") + \"\\n )}\"",
          "24:   end",
          "26:   let(:app) do",
          "27:     load_app('test')",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "209:     end",
          "210:   end",
          "212:   protected",
          "213:     def cors_request(*args)",
          "214:       path = args.first.is_a?(String) ? args.first : '/'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "216:   describe \"with non HTTP config\" do",
          "217:     let(:app) do",
          "218:       load_app(\"non_http\")",
          "219:     end",
          "221:     it 'should support non http/https origins' do",
          "222:       cors_request '/public', origin: 'content://com.company.app'",
          "223:     end",
          "224:   end",
          "",
          "---------------"
        ],
        "test/unit/non_http.ru||test/unit/non_http.ru": [
          "File: test/unit/non_http.ru -> test/unit/non_http.ru",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: require 'rack/cors'",
          "3: use Rack::Cors do",
          "4:   allow do",
          "5:     origins 'com.company.app'",
          "6:     resource '/public'",
          "7:   end",
          "8: end",
          "10: map '/' do",
          "11:   run Proc.new { |env| [200, {'Content-Type' => 'text/html'}, ['success']] }",
          "12: end",
          "",
          "---------------"
        ]
      }
    }
  ]
}