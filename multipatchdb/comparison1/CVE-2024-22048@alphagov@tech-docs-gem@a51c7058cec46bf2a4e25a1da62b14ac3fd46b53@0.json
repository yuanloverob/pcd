{
  "cve_id": "CVE-2024-22048",
  "cve_desc": "govuk_tech_docs versions from 2.0.2 to before 3.3.1 are vulnerable to a cross-site scripting vulnerability. Malicious JavaScript may be executed in the user's browser if a malicious search result is displayed on the search page.\n\n",
  "repo": "alphagov/tech-docs-gem",
  "patch_hash": "a51c7058cec46bf2a4e25a1da62b14ac3fd46b53",
  "patch_info": {
    "commit_hash": "a51c7058cec46bf2a4e25a1da62b14ac3fd46b53",
    "repo": "alphagov/tech-docs-gem",
    "commit_url": "https://github.com/alphagov/tech-docs-gem/commit/a51c7058cec46bf2a4e25a1da62b14ac3fd46b53",
    "files": [
      "CHANGELOG.md",
      "lib/assets/javascripts/_modules/search.js",
      "spec/javascripts/search-spec.js"
    ],
    "message": "Merge pull request #323 from alphagov/fix-xss\n\nFix XSS vulnerability on search results page",
    "before_after_code_files": [
      "lib/assets/javascripts/_modules/search.js||lib/assets/javascripts/_modules/search.js",
      "spec/javascripts/search-spec.js||spec/javascripts/search-spec.js"
    ]
  },
  "patch_diff": {
    "lib/assets/javascripts/_modules/search.js||lib/assets/javascripts/_modules/search.js": [
      "File: lib/assets/javascripts/_modules/search.js -> lib/assets/javascripts/_modules/search.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "170:     this.processContent = function processContent (content, query) {",
      "171:       var output",
      "176:       var sentences = content.html().replace(/(\\.+|:|!|\\?|\\r|\\n)(\"*|'*|\\)*|}*|]*)/gm, '|').split('|')",
      "",
      "[Removed Lines]",
      "172:       content = '<div>' + content + '</div>'",
      "173:       content = $(content).mark(query)",
      "",
      "[Added Lines]",
      "172:       var sanitizedContent = $('<div></div>').text(content).html()",
      "173:       content = $('<div>' + sanitizedContent + '</div>').mark(query)",
      "",
      "---------------"
    ],
    "spec/javascripts/search-spec.js||spec/javascripts/search-spec.js": [
      "File: spec/javascripts/search-spec.js -> spec/javascripts/search-spec.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "99:       var expectedResults = ' \u2026 This is <mark data-markjs=\"true\">test</mark> sentence one \u2026 This is <mark data-markjs=\"true\">test</mark> sentence two \u2026 This is <mark data-markjs=\"true\">test</mark> sentence three \u2026 This is <mark data-markjs=\"true\">test</mark> sentence four \u2026 This is <mark data-markjs=\"true\">test</mark> sentence five \u2026 '",
      "100:       expect(processedContent).toEqual(expectedResults)",
      "101:     })",
      "102:   })",
      "103: })",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "103:     it('sanitises HTML in the search results', function () {",
      "104:       processedContent = module.processContent('It will render multiple `<input>` `<script>alert(\"uhoh\")</script>` and its accompanying suggestions and `aria-live` region.', 'multi region')",
      "105:       var expectedResults = ' \u2026 It will render <mark data-markjs=\"true\">multi</mark>ple `&lt;input&gt;` `&lt;script&gt;alert(\"uhoh\")&lt;/script&gt;` and its accompanying suggestions and `aria-live` <mark data-markjs=\"true\">region</mark> \u2026 '",
      "106:       expect(processedContent).toEqual(expectedResults)",
      "107:     })",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "977cc275b33eee8375c02feb85314d46f4b2977f",
      "candidate_info": {
        "commit_hash": "977cc275b33eee8375c02feb85314d46f4b2977f",
        "repo": "alphagov/tech-docs-gem",
        "commit_url": "https://github.com/alphagov/tech-docs-gem/commit/977cc275b33eee8375c02feb85314d46f4b2977f",
        "files": [
          "lib/assets/javascripts/_modules/search.js",
          "spec/javascripts/search-spec.js"
        ],
        "message": "Fix XSS vulnerability on search results page\n\nPages that are indexed in search results have their entire\ncontents indexed, including any HTML code snippets. These HTML\nsnippets would appear in the search results unsanitised, so it\nwas possible to render arbitrary HTML or run arbitrary scripts:\n\n> ![script being invoked](https://user-images.githubusercontent.com/5111927/230888935-0367b598-eda7-4f67-afb5-799b41684ee3.png)\n> ![HTML being rendered](https://user-images.githubusercontent.com/5111927/230888939-f0056edc-6955-4f10-8aee-c93414b1cb69.png)\n\nThis is a largely theoretical security issue; to exploit it, an\nattacker would need to find a way of committing malicious code\nto a page indexed by a site that uses tech-docs-gem (which are\ntypically not editable by untrusted users). Their code would\nalso be limited by the relatively short length that's rendered\nin the corresponding search result. Nevertheless, the XSS would\nthen be triggerable by visiting a pre-constructed URL\n(`/search/index.html?q=some+search+term`), which users could be\ntricked into clicking on through social engineering.\n\nThis commit sanitises the HTML before rendering it to the page.\nIt does so whilst retaining the `<mark data-markjs=\"true\">`\nbehaviour that highlights the search term in the result:\n\n> ![sanitised HTML with highlights](https://user-images.githubusercontent.com/5111927/230888944-9aaf4920-cddd-43f9-8ef5-17f15785af73.png)\n\nI've used jQuery's `text()` function for sanitisation, as that is\nthe approach used elsewhere in the project ([1]).\n\nI did consider using native JavaScript (using the same approach as\nin Mustache [2]) to avoid the jQuery dependency, but this itself may\ncontain bugs and would lead to having two sanitisation approaches to\nmaintain, so I opted against it. For future reference, the code in\nthis commit can be swapped out with:\n\n```js\nvar entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;',\n  '`': '&#x60;',\n  '=': '&#x3D;'\n};\nvar sanitizedContent = String(content).replace(/[&<>\"'`=\\/]/g, function (s) {\n  return entityMap[s];\n});\n```\n\n[1]: https://github.com/alphagov/tech-docs-gem/blob/66cc7ab0a06dc2f1fe89de8cba2270fcf46f6466/lib/assets/javascripts/_modules/search.js#L202-L204\n[2]: https://github.com/janl/mustache.js/blob/972fd2b27a036888acfcb60d6119317744fac7ee/mustache.js#L60-L75",
        "before_after_code_files": [
          "lib/assets/javascripts/_modules/search.js||lib/assets/javascripts/_modules/search.js",
          "spec/javascripts/search-spec.js||spec/javascripts/search-spec.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/alphagov/tech-docs-gem/pull/323"
        ],
        "olp_code_files": {
          "patch": [
            "lib/assets/javascripts/_modules/search.js||lib/assets/javascripts/_modules/search.js",
            "spec/javascripts/search-spec.js||spec/javascripts/search-spec.js"
          ],
          "candidate": [
            "lib/assets/javascripts/_modules/search.js||lib/assets/javascripts/_modules/search.js",
            "spec/javascripts/search-spec.js||spec/javascripts/search-spec.js"
          ]
        }
      },
      "candidate_diff": {
        "lib/assets/javascripts/_modules/search.js||lib/assets/javascripts/_modules/search.js": [
          "File: lib/assets/javascripts/_modules/search.js -> lib/assets/javascripts/_modules/search.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "170:     this.processContent = function processContent (content, query) {",
          "171:       var output",
          "176:       var sentences = content.html().replace(/(\\.+|:|!|\\?|\\r|\\n)(\"*|'*|\\)*|}*|]*)/gm, '|').split('|')",
          "",
          "[Removed Lines]",
          "172:       content = '<div>' + content + '</div>'",
          "173:       content = $(content).mark(query)",
          "",
          "[Added Lines]",
          "172:       var sanitizedContent = $('<div></div>').text(content).html()",
          "173:       content = $('<div>' + sanitizedContent + '</div>').mark(query)",
          "",
          "---------------"
        ],
        "spec/javascripts/search-spec.js||spec/javascripts/search-spec.js": [
          "File: spec/javascripts/search-spec.js -> spec/javascripts/search-spec.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "99:       var expectedResults = ' \u2026 This is <mark data-markjs=\"true\">test</mark> sentence one \u2026 This is <mark data-markjs=\"true\">test</mark> sentence two \u2026 This is <mark data-markjs=\"true\">test</mark> sentence three \u2026 This is <mark data-markjs=\"true\">test</mark> sentence four \u2026 This is <mark data-markjs=\"true\">test</mark> sentence five \u2026 '",
          "100:       expect(processedContent).toEqual(expectedResults)",
          "101:     })",
          "102:   })",
          "103: })",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103:     it('sanitises HTML in the search results', function () {",
          "104:       processedContent = module.processContent('It will render multiple `<input>` `<script>alert(\"uhoh\")</script>` and its accompanying suggestions and `aria-live` region.', 'multi region')",
          "105:       var expectedResults = ' \u2026 It will render <mark data-markjs=\"true\">multi</mark>ple `&lt;input&gt;` `&lt;script&gt;alert(\"uhoh\")&lt;/script&gt;` and its accompanying suggestions and `aria-live` <mark data-markjs=\"true\">region</mark> \u2026 '",
          "106:       expect(processedContent).toEqual(expectedResults)",
          "107:     })",
          "",
          "---------------"
        ]
      }
    }
  ]
}