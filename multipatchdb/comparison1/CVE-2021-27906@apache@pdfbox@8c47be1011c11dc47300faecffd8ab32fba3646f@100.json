{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d4a5d9215ec5366c5e4e2ac753ff7f37c8fa5dfc",
      "candidate_info": {
        "commit_hash": "d4a5d9215ec5366c5e4e2ac753ff7f37c8fa5dfc",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/d4a5d9215ec5366c5e4e2ac753ff7f37c8fa5dfc",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java"
        ],
        "message": "PDFBOX-5168: fix syntax\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1888855 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java -> pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "763:             }",
          "764:             if (allZero)",
          "765:             {",
          "767:             }",
          "768:         }",
          "769:         float phaseStart = dashPattern.getPhase();",
          "",
          "[Removed Lines]",
          "766:                 return (Shape p) -> new Area();",
          "",
          "[Added Lines]",
          "766:                 return new Stroke()",
          "767:                 {",
          "768:                     @Override",
          "769:                     public Shape createStrokedShape(Shape p)",
          "770:                     {",
          "771:                         return new Area();",
          "772:                     }",
          "773:                 }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2b09fca77eb3c1d33647200458a9c5feb6ef7dfc",
      "candidate_info": {
        "commit_hash": "2b09fca77eb3c1d33647200458a9c5feb6ef7dfc",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/2b09fca77eb3c1d33647200458a9c5feb6ef7dfc",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/CreateVisibleSignature.java"
        ],
        "message": "PDFBOX-4892: improve javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1891749 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/CreateVisibleSignature.java||examples/src/main/java/org/apache/pdfbox/examples/signature/CreateVisibleSignature.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/signature/CreateVisibleSignature.java||examples/src/main/java/org/apache/pdfbox/examples/signature/CreateVisibleSignature.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/signature/CreateVisibleSignature.java -> examples/src/main/java/org/apache/pdfbox/examples/signature/CreateVisibleSignature.java"
        ]
      }
    },
    {
      "candidate_hash": "e5317c6a0cf753cac9e7b450366b1ce93d0b7cfa",
      "candidate_info": {
        "commit_hash": "e5317c6a0cf753cac9e7b450366b1ce93d0b7cfa",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/e5317c6a0cf753cac9e7b450366b1ce93d0b7cfa",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColorSpace.java",
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColorSpace.java"
        ],
        "message": "PDFBOX-4892: avoid ArrayIndexOutOfBoundsException\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890437 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColorSpace.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColorSpace.java",
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColorSpace.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColorSpace.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColorSpace.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColorSpace.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColorSpace.java -> pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColorSpace.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:     @Override",
          "38:     public void process(Operator operator, List<COSBase> arguments) throws IOException",
          "39:     {",
          "40:         COSBase base = arguments.get(0);",
          "41:         if (!(base instanceof COSName))",
          "42:         {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:         if (arguments.isEmpty())",
          "41:         {",
          "42:             return;",
          "43:         }",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColorSpace.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColorSpace.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColorSpace.java -> pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColorSpace.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:     @Override",
          "38:     public void process(Operator operator, List<COSBase> arguments) throws IOException",
          "39:     {",
          "40:         COSBase base = arguments.get(0);",
          "41:         if (!(base instanceof COSName))",
          "42:         {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:         if (arguments.isEmpty())",
          "41:         {",
          "42:             return;",
          "43:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6a5df3945e3950c9f9c942c8658d9e398c22e953",
      "candidate_info": {
        "commit_hash": "6a5df3945e3950c9f9c942c8658d9e398c22e953",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/6a5df3945e3950c9f9c942c8658d9e398c22e953",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/cff/CFFEncoding.java"
        ],
        "message": "PDFBOX-4892: remove redundant map and duplicated code\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887905 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/cff/CFFEncoding.java||fontbox/src/main/java/org/apache/fontbox/cff/CFFEncoding.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/cff/CFFEncoding.java||fontbox/src/main/java/org/apache/fontbox/cff/CFFEncoding.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/cff/CFFEncoding.java -> fontbox/src/main/java/org/apache/fontbox/cff/CFFEncoding.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: import org.apache.fontbox.encoding.Encoding;",
          "",
          "[Removed Lines]",
          "21: import java.util.HashMap;",
          "22: import java.util.Map;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30: public abstract class CFFEncoding extends Encoding",
          "31: {",
          "",
          "[Removed Lines]",
          "32:     private final Map<Integer, String> codeToName = new HashMap<Integer, String>(250);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "38:     {",
          "39:     }",
          "",
          "[Removed Lines]",
          "47:     @Override",
          "48:     public String getName(int code)",
          "49:     {",
          "50:         String name = codeToName.get(code);",
          "51:         if (name == null)",
          "52:         {",
          "53:             return \".notdef\";",
          "54:         }",
          "55:         return name;",
          "56:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "63:     public void add(int code, int sid, String name)",
          "64:     {",
          "66:         addCharacterEncoding(code, name);",
          "67:     }",
          "",
          "[Removed Lines]",
          "65:         codeToName.put(code, name);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "72:     protected void add(int code, int sid)",
          "73:     {",
          "77:     }",
          "78: }",
          "",
          "[Removed Lines]",
          "74:         String name = CFFStandardString.getName(sid);",
          "75:         codeToName.put(code, name);",
          "76:         addCharacterEncoding(code, name);",
          "",
          "[Added Lines]",
          "51:         addCharacterEncoding(code, CFFStandardString.getName(sid));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "84d011e4ca5500469f2247b3b71dc0a77f657a43",
      "candidate_info": {
        "commit_hash": "84d011e4ca5500469f2247b3b71dc0a77f657a43",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/84d011e4ca5500469f2247b3b71dc0a77f657a43",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java",
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSName.java"
        ],
        "message": "PDFBOX-4892: add and use new constants, as suggested by Waldemar Dick; closes #108\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887777 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java||examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java",
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSName.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSName.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java||examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java -> examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:             if (base instanceof COSDictionary)",
          "90:             {",
          "91:                 COSDictionary signatureDict = (COSDictionary) base;",
          "93:                 if (base instanceof COSArray)",
          "94:                 {",
          "95:                     COSArray refArray = (COSArray) base;",
          "",
          "[Removed Lines]",
          "92:                 base = signatureDict.getDictionaryObject(\"Reference\");",
          "",
          "[Added Lines]",
          "92:                 base = signatureDict.getDictionaryObject(COSName.REFERENCE);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "99:                         if (base instanceof COSDictionary)",
          "100:                         {",
          "101:                             COSDictionary sigRefDict = (COSDictionary) base;",
          "103:                             {",
          "105:                                 if (base instanceof COSDictionary)",
          "106:                                 {",
          "107:                                     COSDictionary transformDict = (COSDictionary) base;",
          "",
          "[Removed Lines]",
          "102:                             if (COSName.DOCMDP.equals(sigRefDict.getDictionaryObject(\"TransformMethod\")))",
          "104:                                 base = sigRefDict.getDictionaryObject(\"TransformParams\");",
          "",
          "[Added Lines]",
          "102:                             if (COSName.DOCMDP.equals(sigRefDict.getDictionaryObject(COSName.TRANSFORM_METHOD)))",
          "104:                                 base = sigRefDict.getDictionaryObject(COSName.TRANSFORM_PARAMS);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "155:         COSDictionary transformParameters = new COSDictionary();",
          "157:         transformParameters.setInt(COSName.P, accessPermissions);",
          "158:         transformParameters.setName(COSName.V, \"1.2\");",
          "159:         transformParameters.setNeedToBeUpdated(true);",
          "161:         COSDictionary referenceDict = new COSDictionary();",
          "166:         referenceDict.setNeedToBeUpdated(true);",
          "168:         COSArray referenceArray = new COSArray();",
          "169:         referenceArray.add(referenceDict);",
          "171:         referenceArray.setNeedToBeUpdated(true);",
          "",
          "[Removed Lines]",
          "156:         transformParameters.setItem(COSName.TYPE, COSName.getPDFName(\"TransformParams\"));",
          "162:         referenceDict.setItem(COSName.TYPE, COSName.getPDFName(\"SigRef\"));",
          "163:         referenceDict.setItem(\"TransformMethod\", COSName.DOCMDP);",
          "164:         referenceDict.setItem(\"DigestMethod\", COSName.getPDFName(\"SHA1\"));",
          "165:         referenceDict.setItem(\"TransformParams\", transformParameters);",
          "170:         sigDict.setItem(\"Reference\", referenceArray);",
          "",
          "[Added Lines]",
          "156:         transformParameters.setItem(COSName.TYPE, COSName.TRANSFORM_PARAMS);",
          "162:         referenceDict.setItem(COSName.TYPE, COSName.SIG_REF);",
          "163:         referenceDict.setItem(COSName.TRANSFORM_METHOD, COSName.DOCMDP);",
          "164:         referenceDict.setItem(DIGEST_METHOD, COSName.getPDFName(\"SHA1\"));",
          "165:         referenceDict.setItem(COSName.TRANSFORM_PARAMS, transformParameters);",
          "170:         sigDict.setItem(COSName.REFERENCE, referenceArray);",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/cos/COSName.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSName.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/cos/COSName.java -> pdfbox/src/main/java/org/apache/pdfbox/cos/COSName.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "469:     public static final COSName REPEAT = new COSName(\"Repeat\");",
          "470:     public static final COSName RECIPIENTS = new COSName(\"Recipients\");",
          "471:     public static final COSName RECT = new COSName(\"Rect\");",
          "472:     public static final COSName REGISTRY = new COSName(\"Registry\");",
          "473:     public static final COSName REGISTRY_NAME = new COSName(\"RegistryName\");",
          "474:     public static final COSName RENAME = new COSName(\"Rename\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "472:     public static final COSName REFERENCE = new COSName(\"Reference\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "496:     public static final COSName SHADING_TYPE = new COSName(\"ShadingType\");",
          "497:     public static final COSName SIG = new COSName(\"Sig\");",
          "498:     public static final COSName SIG_FLAGS = new COSName(\"SigFlags\");",
          "499:     public static final COSName SIZE = new COSName(\"Size\");",
          "500:     public static final COSName SM = new COSName(\"SM\");",
          "501:     public static final COSName SMASK = new COSName(\"SMask\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "500:     public static final COSName SIG_REF = new COSName(\"SigRef\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "547:     public static final COSName TR2 = new COSName(\"TR2\");",
          "548:     public static final COSName TRAPPED = new COSName(\"Trapped\");",
          "549:     public static final COSName TRANS = new COSName(\"Trans\");",
          "550:     public static final COSName TRANSPARENCY = new COSName(\"Transparency\");",
          "551:     public static final COSName TREF = new COSName(\"TRef\");",
          "552:     public static final COSName TRIM_BOX = new COSName(\"TrimBox\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "552:     public static final COSName TRANSFORM_METHOD = new COSName(\"TransformMethod\");",
          "553:     public static final COSName TRANSFORM_PARAMS = new COSName(\"TransformParams\");",
          "",
          "---------------"
        ]
      }
    }
  ]
}