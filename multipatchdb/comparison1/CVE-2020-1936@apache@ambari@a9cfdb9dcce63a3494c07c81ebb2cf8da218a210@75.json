{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0786da646c0f226277f1de4774502c58eadbeef8",
      "candidate_info": {
        "commit_hash": "0786da646c0f226277f1de4774502c58eadbeef8",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/0786da646c0f226277f1de4774502c58eadbeef8",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java"
        ],
        "message": "[AMBARI-24375] Adding services when Kerberos is enabled incorrectly changes unrelated service configurations",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java||ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java||ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "752:           continue;",
          "753:         }",
          "774:         StackAdvisorRequest request = StackAdvisorRequest.StackAdvisorRequestBuilder",
          "775:           .forStack(stackId.getStackName(), stackId.getStackVersion())",
          "776:           .forServices(services)",
          "",
          "[Removed Lines]",
          "755:         for (Map.Entry<String, Map<String, Map<String, String>>> config : requestConfigurations.entrySet()) {",
          "756:           for (Map<String, String> properties : config.getValue().values()) {",
          "757:             for (Map.Entry<String, String> property : properties.entrySet()) {",
          "758:               String oldValue = property.getValue();",
          "759:               String updatedValue = variableReplacementHelper.replaceVariables(property.getValue(), existingConfigurations);",
          "760:               if (!StringUtils.equals(oldValue, updatedValue) && !config.getKey().isEmpty()) {",
          "761:                 property.setValue(updatedValue);",
          "762:                 if (kerberosConfigurations.containsKey(config.getKey())) {",
          "763:                   kerberosConfigurations.get(config.getKey()).put(property.getKey(), updatedValue);",
          "764:                 } else {",
          "765:                   Map kerberosConfigProperties = new HashMap<>();",
          "766:                   kerberosConfigProperties.put(property.getKey(), updatedValue);",
          "767:                   kerberosConfigurations.put(config.getKey(), kerberosConfigProperties);",
          "768:                 }",
          "769:               }",
          "770:             }",
          "771:           }",
          "772:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6750879fc23938e2392d4987ab9565e847409c41",
      "candidate_info": {
        "commit_hash": "6750879fc23938e2392d4987ab9565e847409c41",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/6750879fc23938e2392d4987ab9565e847409c41",
        "files": [
          "ambari-server/src/main/python/ambari_server/setupSecurity.py"
        ],
        "message": "AMBARI-24259. Let custom TrustStore settings saved in ambari.properties when configuring LDAP just like we did it in 2.6 (#1700)",
        "before_after_code_files": [
          "ambari-server/src/main/python/ambari_server/setupSecurity.py||ambari-server/src/main/python/ambari_server/setupSecurity.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/python/ambari_server/setupSecurity.py||ambari-server/src/main/python/ambari_server/setupSecurity.py": [
          "File: ambari-server/src/main/python/ambari_server/setupSecurity.py -> ambari-server/src/main/python/ambari_server/setupSecurity.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "687:   request_data['Configuration']['properties'] = ldap_property_value_map",
          "688:   perform_changes_via_rest_api(properties, admin_login, admin_password, SETUP_LDAP_CONFIG_URL, 'PUT', request_data)",
          "694: def setup_ldap(options):",
          "695:   logger.info(\"Setup LDAP.\")",
          "",
          "[Removed Lines]",
          "690: LDAP_SSL_TRUSTSTORE_TYPE_PROPERTY = \"ambari.ldap.connectivity.trust_store.type\"",
          "691: LDAP_SSL_TRUSTSTORE_PATH_PROPERTY = \"ambari.ldap.connectivity.trust_store.path\"",
          "692: LDAP_SSL_TRUSTSTORE_PASSWORD_PROPERTY = \"ambari.ldap.connectivity.trust_store.password\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "728:   ldap_property_list_opt = [LDAP_MGR_USERNAME_PROPERTY,",
          "729:                             LDAP_MGR_PASSWORD_PROPERTY,",
          "736:   LDAP_MGR_DN_DEFAULT = None",
          "741:   ldap_property_value_map = {}",
          "742:   for ldap_prop in ldap_property_list_reqd:",
          "743:     input = get_validated_string_input(ldap_prop.ldap_prop_val_prompt, ldap_prop.ldap_prop_name, ldap_prop.prompt_regex,",
          "744:                                        \"Invalid characters in the input!\", False, ldap_prop.allow_empty_prompt,",
          "",
          "[Removed Lines]",
          "730:                             LDAP_SSL_TRUSTSTORE_TYPE_PROPERTY,",
          "731:                             LDAP_SSL_TRUSTSTORE_PATH_PROPERTY,",
          "732:                             LDAP_SSL_TRUSTSTORE_PASSWORD_PROPERTY]",
          "734:   ldap_property_list_passwords=[LDAP_MGR_PASSWORD_PROPERTY, LDAP_SSL_TRUSTSTORE_PASSWORD_PROPERTY]",
          "738:   SSL_TRUSTSTORE_TYPE_DEFAULT = get_value_from_properties(properties, LDAP_SSL_TRUSTSTORE_TYPE_PROPERTY, \"jks\")",
          "739:   SSL_TRUSTSTORE_PATH_DEFAULT = get_value_from_properties(properties, LDAP_SSL_TRUSTSTORE_PATH_PROPERTY)",
          "",
          "[Added Lines]",
          "726:                             SSL_TRUSTSTORE_TYPE_PROPERTY,",
          "727:                             SSL_TRUSTSTORE_PATH_PROPERTY,",
          "728:                             SSL_TRUSTSTORE_PASSWORD_PROPERTY]",
          "730:   ldap_property_list_passwords=[LDAP_MGR_PASSWORD_PROPERTY, SSL_TRUSTSTORE_PASSWORD_PROPERTY]",
          "734:   SSL_TRUSTSTORE_TYPE_DEFAULT = get_value_from_properties(properties, SSL_TRUSTSTORE_TYPE_PROPERTY, \"jks\")",
          "735:   SSL_TRUSTSTORE_PATH_DEFAULT = get_value_from_properties(properties, SSL_TRUSTSTORE_PATH_PROPERTY)",
          "738:   ldap_property_values_in_ambari_properties = {}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "789:       ts_password = read_password(\"\", \".*\", \"Password for TrustStore:\", \"Invalid characters in password\", options.trust_store_password)",
          "794:       pass",
          "796:       print 'The TrustStore is already configured: '",
          "800:       if get_YN_input(\"Do you want to remove these properties [y/n] (y)? \", True, options.trust_store_reconfigure):",
          "804:     pass",
          "805:   pass",
          "",
          "[Removed Lines]",
          "791:       ldap_property_value_map[LDAP_SSL_TRUSTSTORE_TYPE_PROPERTY] = ts_type",
          "792:       ldap_property_value_map[LDAP_SSL_TRUSTSTORE_PATH_PROPERTY] = ts_path",
          "793:       ldap_property_value_map[LDAP_SSL_TRUSTSTORE_PASSWORD_PROPERTY] = ts_password",
          "795:     elif properties.get_property(LDAP_SSL_TRUSTSTORE_TYPE_PROPERTY):",
          "797:       print '  ' + LDAP_SSL_TRUSTSTORE_TYPE_PROPERTY + ' = ' + properties.get_property(LDAP_SSL_TRUSTSTORE_TYPE_PROPERTY)",
          "798:       print '  ' + LDAP_SSL_TRUSTSTORE_PATH_PROPERTY + ' = ' + properties.get_property(LDAP_SSL_TRUSTSTORE_PATH_PROPERTY)",
          "799:       print '  ' + LDAP_SSL_TRUSTSTORE_PASSWORD_PROPERTY + ' = ' + properties.get_property(LDAP_SSL_TRUSTSTORE_PASSWORD_PROPERTY)",
          "801:         properties.removeOldProp(LDAP_SSL_TRUSTSTORE_TYPE_PROPERTY)",
          "802:         properties.removeOldProp(LDAP_SSL_TRUSTSTORE_PATH_PROPERTY)",
          "803:         properties.removeOldProp(LDAP_SSL_TRUSTSTORE_PASSWORD_PROPERTY)",
          "",
          "[Added Lines]",
          "788:       ldap_property_values_in_ambari_properties[SSL_TRUSTSTORE_TYPE_PROPERTY] = ts_type",
          "789:       ldap_property_values_in_ambari_properties[SSL_TRUSTSTORE_PATH_PROPERTY] = ts_path",
          "790:       ldap_property_values_in_ambari_properties[SSL_TRUSTSTORE_PASSWORD_PROPERTY] = ts_password",
          "792:     elif properties.get_property(SSL_TRUSTSTORE_TYPE_PROPERTY):",
          "794:       print '  ' + SSL_TRUSTSTORE_TYPE_PROPERTY + ' = ' + properties.get_property(SSL_TRUSTSTORE_TYPE_PROPERTY)",
          "795:       print '  ' + SSL_TRUSTSTORE_PATH_PROPERTY + ' = ' + properties.get_property(SSL_TRUSTSTORE_PATH_PROPERTY)",
          "796:       print '  ' + SSL_TRUSTSTORE_PASSWORD_PROPERTY + ' = ' + properties.get_property(SSL_TRUSTSTORE_PASSWORD_PROPERTY)",
          "798:         properties.removeOldProp(SSL_TRUSTSTORE_TYPE_PROPERTY)",
          "799:         properties.removeOldProp(SSL_TRUSTSTORE_PATH_PROPERTY)",
          "800:         properties.removeOldProp(SSL_TRUSTSTORE_PASSWORD_PROPERTY)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "818:       else:",
          "819:         print(\"%s: %s\" % (property, BLIND_PASSWORD))",
          "821:   save_settings = True if options.ldap_save_settings is not None else get_YN_input(\"Save settings [y/n] (y)? \", True)",
          "823:   if save_settings:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "818:   for property in ldap_property_list_opt:",
          "819:     if ldap_property_values_in_ambari_properties.has_key(property):",
          "820:       if property not in ldap_property_list_passwords:",
          "821:         print(\"%s: %s\" % (property, ldap_property_values_in_ambari_properties[property]))",
          "822:       else:",
          "823:         print(\"%s: %s\" % (property, BLIND_PASSWORD))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "830:       if ts_password:",
          "831:         encrypted_passwd = encrypt_password(SSL_TRUSTSTORE_PASSWORD_ALIAS, ts_password, options)",
          "832:         if ts_password != encrypted_passwd:",
          "834:       pass",
          "835:     pass",
          "",
          "[Removed Lines]",
          "833:           ldap_property_value_map[LDAP_SSL_TRUSTSTORE_PASSWORD_PROPERTY] = encrypted_passwd",
          "",
          "[Added Lines]",
          "837:           ldap_property_values_in_ambari_properties[SSL_TRUSTSTORE_PASSWORD_PROPERTY] = encrypted_passwd",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "844:     #Saving LDAP configuration in Ambari DB using the REST API",
          "845:     update_ldap_configuration(options, properties, ldap_property_value_map)",
          "852:     print 'Saving LDAP properties finished'",
          "",
          "[Removed Lines]",
          "847:     #The only property we want to write out in Ambari.properties is the client.security type being LDAP",
          "848:     ldap_property_value_map.clear()",
          "849:     ldap_property_value_map[CLIENT_SECURITY] = 'ldap'",
          "850:     update_properties_2(properties, ldap_property_value_map)",
          "",
          "[Added Lines]",
          "851:     #The only properties we want to write out in Ambari.properties are the client.security type being LDAP and the custom Truststore related properties (if any)",
          "852:     ldap_property_values_in_ambari_properties[CLIENT_SECURITY] = 'ldap'",
          "853:     update_properties_2(properties, ldap_property_values_in_ambari_properties)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "447b5e3349fa0615d242b8c4a2103163717e8678",
      "candidate_info": {
        "commit_hash": "447b5e3349fa0615d242b8c4a2103163717e8678",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/447b5e3349fa0615d242b8c4a2103163717e8678",
        "files": [
          "ambari-admin/pom.xml",
          "ambari-agent/pom.xml",
          "ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java",
          "ambari-funtest/pom.xml",
          "ambari-infra/ambari-infra-assembly/pom.xml",
          "ambari-infra/pom.xml",
          "ambari-logsearch/ambari-logsearch-assembly/pom.xml",
          "ambari-logsearch/ambari-logsearch-logfeeder/pom.xml",
          "ambari-logsearch/ambari-logsearch-server/pom.xml",
          "ambari-logsearch/pom.xml",
          "ambari-metrics/ambari-metrics-assembly/pom.xml",
          "ambari-metrics/ambari-metrics-common/pom.xml",
          "ambari-metrics/ambari-metrics-flume-sink/pom.xml",
          "ambari-metrics/ambari-metrics-grafana/pom.xml",
          "ambari-metrics/ambari-metrics-hadoop-sink/pom.xml",
          "ambari-metrics/ambari-metrics-host-aggregator/pom.xml",
          "ambari-metrics/ambari-metrics-host-monitoring/pom.xml",
          "ambari-metrics/ambari-metrics-kafka-sink/pom.xml",
          "ambari-metrics/ambari-metrics-storm-sink-legacy/pom.xml",
          "ambari-metrics/ambari-metrics-storm-sink/pom.xml",
          "ambari-metrics/ambari-metrics-timelineservice/pom.xml",
          "ambari-metrics/pom.xml",
          "ambari-project/pom.xml",
          "ambari-server/pom.xml",
          "ambari-server/src/main/java/org/apache/ambari/server/orm/entities/ClusterConfigEntity.java",
          "ambari-server/src/main/java/org/apache/ambari/server/orm/entities/HostComponentDesiredStateEntity.java",
          "ambari-server/src/main/java/org/apache/ambari/server/orm/entities/HostComponentStateEntity.java",
          "ambari-server/src/main/java/org/apache/ambari/server/orm/entities/UpgradeHistoryEntity.java",
          "ambari-server/src/main/java/org/apache/ambari/server/serveraction/upgrades/FinalizeUpgradeAction.java",
          "ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/ConfigurationCondition.java",
          "ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/Grouping.java",
          "ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/HostOrderItem.java",
          "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java",
          "ambari-serviceadvisor/pom.xml",
          "ambari-utility/pom.xml",
          "ambari-utility/src/test/java/org/apache/ambari/checkstyle/UndocumentedRestApiOperationCheckTest.java",
          "ambari-views/pom.xml",
          "ambari-web/pom.xml",
          "contrib/fast-hdfs-resource/dependency-reduced-pom.xml",
          "contrib/fast-hdfs-resource/pom.xml",
          "contrib/management-packs/pom.xml",
          "contrib/views/ambari-views-package/pom.xml",
          "contrib/views/capacity-scheduler/pom.xml",
          "contrib/views/files/pom.xml",
          "contrib/views/pig/pom.xml",
          "contrib/views/pom.xml",
          "contrib/views/wfmanager/pom.xml",
          "contrib/views/wfmanager/src/main/resources/ui/pom.xml",
          "pom.xml"
        ],
        "message": "AMBARI-25349 Move Ambari metrics to guava 28.0-jre (dgrinenko) (#3096)\n\nAMBARI-25349. Move Ambari metrics to guava 28.0-jre (dgrinenko)",
        "before_after_code_files": [
          "ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java||ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java",
          "ambari-server/src/main/java/org/apache/ambari/server/orm/entities/ClusterConfigEntity.java||ambari-server/src/main/java/org/apache/ambari/server/orm/entities/ClusterConfigEntity.java",
          "ambari-server/src/main/java/org/apache/ambari/server/orm/entities/HostComponentDesiredStateEntity.java||ambari-server/src/main/java/org/apache/ambari/server/orm/entities/HostComponentDesiredStateEntity.java",
          "ambari-server/src/main/java/org/apache/ambari/server/orm/entities/HostComponentStateEntity.java||ambari-server/src/main/java/org/apache/ambari/server/orm/entities/HostComponentStateEntity.java",
          "ambari-server/src/main/java/org/apache/ambari/server/orm/entities/UpgradeHistoryEntity.java||ambari-server/src/main/java/org/apache/ambari/server/orm/entities/UpgradeHistoryEntity.java",
          "ambari-server/src/main/java/org/apache/ambari/server/serveraction/upgrades/FinalizeUpgradeAction.java||ambari-server/src/main/java/org/apache/ambari/server/serveraction/upgrades/FinalizeUpgradeAction.java",
          "ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/ConfigurationCondition.java||ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/ConfigurationCondition.java",
          "ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/Grouping.java||ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/Grouping.java",
          "ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/HostOrderItem.java||ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/HostOrderItem.java",
          "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java||ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java",
          "ambari-utility/src/test/java/org/apache/ambari/checkstyle/UndocumentedRestApiOperationCheckTest.java||ambari-utility/src/test/java/org/apache/ambari/checkstyle/UndocumentedRestApiOperationCheckTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java||ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java": [
          "File: ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java -> ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "110:     path(\"/parent/a/b\");",
          "111:     path(\"/parent/a/b/c\");",
          "115:     assertHasAcl(\"/parent\", \"ip\", \"127.0.0.1\", READ);",
          "116:     assertHasAcl(\"/parent/a\", \"ip\", \"127.0.0.1\", READ);",
          "",
          "[Removed Lines]",
          "113:     setAcls(\"/\", \"ip:127.0.0.1:r\");",
          "",
          "[Added Lines]",
          "113:     setAcls(\"/parent\", \"ip:127.0.0.1:r\");",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/orm/entities/ClusterConfigEntity.java||ambari-server/src/main/java/org/apache/ambari/server/orm/entities/ClusterConfigEntity.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/orm/entities/ClusterConfigEntity.java -> ambari-server/src/main/java/org/apache/ambari/server/orm/entities/ClusterConfigEntity.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: import org.apache.commons.lang.builder.EqualsBuilder;",
          "45: @Entity",
          "46: @Table(name = \"clusterconfig\",",
          "47:   uniqueConstraints = {@UniqueConstraint(name = \"UQ_config_type_tag\", columnNames = {\"cluster_id\", \"type_name\", \"version_tag\"}),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45: import com.google.common.base.MoreObjects;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "304:   @Override",
          "305:   public String toString() {",
          "307:       .add(\"clusterId\", clusterId)",
          "308:       .add(\"type\", type)",
          "309:       .add(\"version\", version)",
          "",
          "[Removed Lines]",
          "306:     return com.google.common.base.Objects.toStringHelper(this)",
          "",
          "[Added Lines]",
          "308:     return MoreObjects.toStringHelper(this)",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/orm/entities/HostComponentDesiredStateEntity.java||ambari-server/src/main/java/org/apache/ambari/server/orm/entities/HostComponentDesiredStateEntity.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/orm/entities/HostComponentDesiredStateEntity.java -> ambari-server/src/main/java/org/apache/ambari/server/orm/entities/HostComponentDesiredStateEntity.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "41: import org.apache.ambari.server.state.MaintenanceState;",
          "42: import org.apache.ambari.server.state.State;",
          "44: import com.google.common.base.Objects;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44: import com.google.common.base.MoreObjects;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "278:   @Override",
          "279:   public String toString() {",
          "281:         componentName).add(\"hostId\", hostId).add(\"desiredState\", desiredState).toString();",
          "282:   }",
          "283: }",
          "",
          "[Removed Lines]",
          "280:     return Objects.toStringHelper(this).add(\"serviceName\", serviceName).add(\"componentName\",",
          "",
          "[Added Lines]",
          "281:     return MoreObjects.toStringHelper(this).add(\"serviceName\", serviceName).add(\"componentName\",",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/orm/entities/HostComponentStateEntity.java||ambari-server/src/main/java/org/apache/ambari/server/orm/entities/HostComponentStateEntity.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/orm/entities/HostComponentStateEntity.java -> ambari-server/src/main/java/org/apache/ambari/server/orm/entities/HostComponentStateEntity.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: import org.apache.ambari.server.state.State;",
          "37: import org.apache.ambari.server.state.UpgradeState;",
          "41: @Entity",
          "42: @Table(name = \"hostcomponentstate\")",
          "",
          "[Removed Lines]",
          "39: import com.google.common.base.Objects;",
          "",
          "[Added Lines]",
          "39: import com.google.common.base.MoreObjects;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "261:   @Override",
          "262:   public String toString() {",
          "264:         componentName).add(\"hostId\", hostId).add(\"state\", currentState).toString();",
          "265:   }",
          "",
          "[Removed Lines]",
          "263:     return Objects.toStringHelper(this).add(\"serviceName\", serviceName).add(\"componentName\",",
          "",
          "[Added Lines]",
          "263:     return MoreObjects.toStringHelper(this).add(\"serviceName\", serviceName).add(\"componentName\",",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/orm/entities/UpgradeHistoryEntity.java||ambari-server/src/main/java/org/apache/ambari/server/orm/entities/UpgradeHistoryEntity.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/orm/entities/UpgradeHistoryEntity.java -> ambari-server/src/main/java/org/apache/ambari/server/orm/entities/UpgradeHistoryEntity.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: import org.apache.commons.lang.builder.EqualsBuilder;",
          "35: import com.google.common.base.Objects;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35: import com.google.common.base.MoreObjects;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "223:   @Override",
          "224:   public String toString() {",
          "226:         .add(\"id\", id)",
          "227:         .add(\"upgradeId\", upgradeId)",
          "228:         .add(\"serviceName\", serviceName)",
          "",
          "[Removed Lines]",
          "225:     return Objects.toStringHelper(this)",
          "",
          "[Added Lines]",
          "226:     return MoreObjects.toStringHelper(this)",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/serveraction/upgrades/FinalizeUpgradeAction.java||ambari-server/src/main/java/org/apache/ambari/server/serveraction/upgrades/FinalizeUpgradeAction.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/serveraction/upgrades/FinalizeUpgradeAction.java -> ambari-server/src/main/java/org/apache/ambari/server/serveraction/upgrades/FinalizeUpgradeAction.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "59: import org.apache.commons.lang.builder.EqualsBuilder;",
          "60: import org.apache.commons.lang.text.StrBuilder;",
          "62: import com.google.inject.Inject;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62: import com.google.common.base.MoreObjects;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "553:     @Override",
          "554:     public String toString() {",
          "556:           .add(\"host\", hostName)",
          "557:           .add(\"component\", componentName)",
          "558:           .add(\"current\", currentVersion)",
          "",
          "[Removed Lines]",
          "555:       return com.google.common.base.Objects.toStringHelper(this)",
          "",
          "[Added Lines]",
          "556:       return MoreObjects.toStringHelper(this)",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/ConfigurationCondition.java||ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/ConfigurationCondition.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/ConfigurationCondition.java -> ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/ConfigurationCondition.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: import org.apache.ambari.server.state.UpgradeContext;",
          "32: import org.apache.commons.lang.StringUtils;",
          "",
          "[Removed Lines]",
          "34: import com.google.common.base.Objects;",
          "",
          "[Added Lines]",
          "34: import com.google.common.base.MoreObjects;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "120:   @Override",
          "121:   public String toString() {",
          "123:         value).add(\"comparison\", comparisonType).omitNullValues().toString();",
          "124:   }",
          "",
          "[Removed Lines]",
          "122:     return Objects.toStringHelper(this).add(\"type\", type).add(\"property\", property).add(\"value\",",
          "",
          "[Added Lines]",
          "122:     return MoreObjects.toStringHelper(this).add(\"type\", type).add(\"property\", property).add(\"value\",",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/Grouping.java||ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/Grouping.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/Grouping.java -> ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/Grouping.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: import org.apache.commons.lang.StringUtils;",
          "45: import com.esotericsoftware.yamlbeans.YamlReader;",
          "",
          "[Removed Lines]",
          "46: import com.google.common.base.Objects;",
          "",
          "[Added Lines]",
          "46: import com.google.common.base.MoreObjects;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "517:   @Override",
          "518:   public String toString() {",
          "520:   }",
          "521: }",
          "",
          "[Removed Lines]",
          "519:     return Objects.toStringHelper(this).add(\"name\", name).toString();",
          "",
          "[Added Lines]",
          "519:     return MoreObjects.toStringHelper(this).add(\"name\", name).toString();",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/HostOrderItem.java||ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/HostOrderItem.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/HostOrderItem.java -> ambari-server/src/main/java/org/apache/ambari/server/state/stack/upgrade/HostOrderItem.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import org.apache.commons.lang.StringUtils;",
          "",
          "[Removed Lines]",
          "24: import com.google.common.base.Objects;",
          "",
          "[Added Lines]",
          "24: import com.google.common.base.MoreObjects;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "96:   @Override",
          "97:   public String toString() {",
          "99:         StringUtils.join(m_actionItems, \", \")).omitNullValues().toString();",
          "100:   }",
          "101: }",
          "",
          "[Removed Lines]",
          "98:     return Objects.toStringHelper(this).add(\"type\", m_type).add(\"items\",",
          "",
          "[Added Lines]",
          "98:     return MoreObjects.toStringHelper(this).add(\"type\", m_type).add(\"items\",",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java||ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java -> ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1670:           final HostAndPort hostAndPort = HostAndPort.fromString(propertyValue);",
          "1671:           AmbariServerConfigurationKey keyToBesaved = AmbariServerConfigurationKey.SERVER_HOST == key ? AmbariServerConfigurationKey.SERVER_HOST",
          "1672:               : AmbariServerConfigurationKey.SECONDARY_SERVER_HOST;",
          "1675:           keyToBesaved = AmbariServerConfigurationKey.SERVER_HOST == key ? AmbariServerConfigurationKey.SERVER_PORT : AmbariServerConfigurationKey.SECONDARY_SERVER_PORT;",
          "1676:           populateConfigurationToBeMoved(propertiesToBeMoved, oldPropertyName, keyToBesaved, String.valueOf(hostAndPort.getPort()));",
          "",
          "[Removed Lines]",
          "1673:           populateConfigurationToBeMoved(propertiesToBeMoved, oldPropertyName, keyToBesaved, hostAndPort.getHostText());",
          "",
          "[Added Lines]",
          "1673:           populateConfigurationToBeMoved(propertiesToBeMoved, oldPropertyName, keyToBesaved, hostAndPort.getHost());",
          "",
          "---------------"
        ],
        "ambari-utility/src/test/java/org/apache/ambari/checkstyle/UndocumentedRestApiOperationCheckTest.java||ambari-utility/src/test/java/org/apache/ambari/checkstyle/UndocumentedRestApiOperationCheckTest.java": [
          "File: ambari-utility/src/test/java/org/apache/ambari/checkstyle/UndocumentedRestApiOperationCheckTest.java -> ambari-utility/src/test/java/org/apache/ambari/checkstyle/UndocumentedRestApiOperationCheckTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import java.io.File;",
          "23: import java.io.IOException;",
          "25: import org.junit.Test;",
          "27: import com.puppycrawl.tools.checkstyle.BaseCheckTestSupport;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: import org.junit.Ignore;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36:   }",
          "38:   @Test",
          "39:   public void test() throws Exception {",
          "40:     final DefaultConfiguration config = createCheckConfig(UndocumentedRestApiOperationCheck.class);",
          "41:     final String[] expected = {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:   @Ignore(\"Fix later: NoSuchField: WHITESPACE error exception\")",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "74690fa9d3f4ab6d31d829ee4b9326528b38522f",
      "candidate_info": {
        "commit_hash": "74690fa9d3f4ab6d31d829ee4b9326528b38522f",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/74690fa9d3f4ab6d31d829ee4b9326528b38522f",
        "files": [
          "ambari-agent/src/main/python/ambari_agent/ActionQueue.py",
          "ambari-agent/src/main/python/ambari_agent/CommandStatusDict.py"
        ],
        "message": "AMBARI-24349. Rescheduled and canceled tasks stay in progress forever (aonishuk)",
        "before_after_code_files": [
          "ambari-agent/src/main/python/ambari_agent/ActionQueue.py||ambari-agent/src/main/python/ambari_agent/ActionQueue.py",
          "ambari-agent/src/main/python/ambari_agent/CommandStatusDict.py||ambari-agent/src/main/python/ambari_agent/CommandStatusDict.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-agent/src/main/python/ambari_agent/ActionQueue.py||ambari-agent/src/main/python/ambari_agent/ActionQueue.py": [
          "File: ambari-agent/src/main/python/ambari_agent/ActionQueue.py -> ambari-agent/src/main/python/ambari_agent/ActionQueue.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "327:             if com['taskId'] == command['taskId']:",
          "328:               logger.info(\"Command with taskId = {cid} was rescheduled by server. \"",
          "329:                           \"Fail report on cancelled command won't be sent with heartbeat.\".format(cid=taskId))",
          "330:               return",
          "332:     # final result to stdout",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "330:               self.commandStatuses.delete_command_data(command['taskId'])",
          "",
          "---------------"
        ],
        "ambari-agent/src/main/python/ambari_agent/CommandStatusDict.py||ambari-agent/src/main/python/ambari_agent/CommandStatusDict.py": [
          "File: ambari-agent/src/main/python/ambari_agent/CommandStatusDict.py -> ambari-agent/src/main/python/ambari_agent/CommandStatusDict.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:     self.log_max_symbols_size = initializer_module.config.log_max_symbols_size",
          "59:     self.reported_reports = set()",
          "62:   def put_command_status(self, command, report):",
          "63:     \"\"\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "61:   def delete_command_data(self, key):",
          "62:     # delete stale data about this command",
          "63:     with self.lock:",
          "64:       self.reported_reports.discard(key)",
          "65:       self.current_state.pop(key, None)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "66:     from ActionQueue import ActionQueue",
          "68:     key = command['taskId']",
          "70:     # delete stale data about this command",
          "75:     is_sent, correlation_id = self.force_update_to_server({command['clusterId']: [report]})",
          "76:     updatable = report['status'] == CommandStatus.in_progress and self.command_update_output",
          "",
          "[Removed Lines]",
          "71:     with self.lock:",
          "72:       self.reported_reports.discard(key)",
          "73:       self.current_state.pop(key, None)",
          "",
          "[Added Lines]",
          "75:     self.delete_command_data(key)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8254d44e92a1145cd0ac9f2d3e50d9913f51e4a6",
      "candidate_info": {
        "commit_hash": "8254d44e92a1145cd0ac9f2d3e50d9913f51e4a6",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/8254d44e92a1145cd0ac9f2d3e50d9913f51e4a6",
        "files": [
          "ambari-web/app/mappers/service_metrics_mapper.js"
        ],
        "message": "AMBARI-25453. If hive.server2.webui.use.ssl was setted to true it will always use https, does not matter if now it is false",
        "before_after_code_files": [
          "ambari-web/app/mappers/service_metrics_mapper.js||ambari-web/app/mappers/service_metrics_mapper.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/mappers/service_metrics_mapper.js||ambari-web/app/mappers/service_metrics_mapper.js": [
          "File: ambari-web/app/mappers/service_metrics_mapper.js -> ambari-web/app/mappers/service_metrics_mapper.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "316:     var self = this;",
          "317:     App.router.get('configurationController').getCurrentConfigsBySites(['hive-site', 'hive-interactive-site']).done(function (configs) {",
          "318:       var hiveWebUiPort = configs.findProperty('type', 'hive-interactive-site').properties['hive.server2.webui.port'];",
          "320:       var hiveWebUiProto = hiveWebUiProtoFlag ? 'https' : 'http';",
          "321:       var hostNames = hiveInteractiveServers.mapProperty('host_name');",
          "322:       var useIps = configs.findProperty('type', 'hive-interactive-site').properties['hive.server2.leadertest.use.ip'];",
          "",
          "[Removed Lines]",
          "319:       var hiveWebUiProtoFlag = configs.findProperty('type', 'hive-interactive-site').properties['hive.server2.webui.use.ssl'];",
          "",
          "[Added Lines]",
          "319:       var hiveWebUiProtoFlag = configs.findProperty('type', 'hive-interactive-site').properties['hive.server2.webui.use.ssl'] === 'true';",
          "",
          "---------------"
        ]
      }
    }
  ]
}