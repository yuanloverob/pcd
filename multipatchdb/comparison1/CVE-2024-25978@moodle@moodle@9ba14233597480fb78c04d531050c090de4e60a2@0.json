{
  "cve_id": "CVE-2024-25978",
  "cve_desc": "Insufficient file size checks resulted in a denial of service risk in the file picker's unzip functionality.",
  "repo": "moodle/moodle",
  "patch_hash": "9ba14233597480fb78c04d531050c090de4e60a2",
  "patch_info": {
    "commit_hash": "9ba14233597480fb78c04d531050c090de4e60a2",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/9ba14233597480fb78c04d531050c090de4e60a2",
    "files": [
      "lib/filestorage/zip_packer.php",
      "lib/form/filemanager.js",
      "repository/draftfiles_ajax.php"
    ],
    "message": "MDL-74641 repository: Handles increase bytes while extracting zip files\n\nWe should not rely solely on the provided size information.\nTherefore the system needs to recalculate the size of each file in the zip file,\nwhether small or big.\n\nThe changes also cover the filemanager.js file if an error appears.",
    "before_after_code_files": [
      "lib/filestorage/zip_packer.php||lib/filestorage/zip_packer.php",
      "lib/form/filemanager.js||lib/form/filemanager.js",
      "repository/draftfiles_ajax.php||repository/draftfiles_ajax.php"
    ]
  },
  "patch_diff": {
    "lib/filestorage/zip_packer.php||lib/filestorage/zip_packer.php": [
      "File: lib/filestorage/zip_packer.php -> lib/filestorage/zip_packer.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "451:             $done = 0;",
      "452:         }",
      "454:         foreach ($ziparch as $info) {",
      "456:             if ($progress) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "455:         $areamaxbytes = FILE_AREA_MAX_BYTES_UNLIMITED;",
      "456:         $context = context::instance_by_id($contextid);",
      "457:         if (!has_capability('moodle/user:ignoreuserquota', $context)) {",
      "459:             $fileareainfo = file_get_file_area_info($contextid, 'user', 'private');",
      "460:             $usedspace = $fileareainfo['filesize_without_references'];",
      "461:             $areamaxbytes = (int) $CFG->userquota - $usedspace;",
      "462:         }",
      "463:         $totalsizebytes = 0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "461:             $size = $info->size;",
      "462:             $name = $info->pathname;",
      "464:             if ($name === '' or array_key_exists($name, $processed)) {",
      "466:                 continue;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "475:             $realfilesize = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "489:                 $content = '';",
      "490:                 while (!feof($fz)) {",
      "491:                     $content .= fread($fz, 262143);",
      "492:                 }",
      "493:                 fclose($fz);",
      "494:                 if (strlen($content) !== $size) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "505:                     $realfilesize += strlen($content); // Current file size.",
      "506:                     $totalsizebytes += strlen($content);",
      "507:                     if ($realfilesize > $size ||",
      "508:                             ($areamaxbytes != FILE_AREA_MAX_BYTES_UNLIMITED && $totalsizebytes > $areamaxbytes)) {",
      "509:                         $processed[0] = 'cannotunzipquotaexceeded';",
      "511:                         fclose($fz);",
      "512:                         unset($content);",
      "514:                         break(2);",
      "515:                     }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "535:                 }",
      "536:                 while (!feof($fz)) {",
      "537:                     $content = fread($fz, 262143);",
      "539:                 }",
      "540:                 fclose($fz);",
      "541:                 fclose($fp);",
      "",
      "[Removed Lines]",
      "538:                     fwrite($fp, $content);",
      "",
      "[Added Lines]",
      "562:                     $numofbytes = fwrite($fp, $content);",
      "563:                     $realfilesize += $numofbytes; // Current file size.",
      "564:                     $totalsizebytes += $numofbytes;",
      "565:                     if ($realfilesize > $size ||",
      "566:                             ($areamaxbytes != FILE_AREA_MAX_BYTES_UNLIMITED && $totalsizebytes > $areamaxbytes)) {",
      "567:                         $processed[0] = 'cannotunzipquotaexceeded';",
      "569:                         fclose($fz);",
      "570:                         fclose($fp);",
      "571:                         unlink($tmpfile);",
      "573:                         break(2);",
      "574:                     }",
      "",
      "---------------"
    ],
    "lib/form/filemanager.js||lib/form/filemanager.js": [
      "File: lib/form/filemanager.js -> lib/form/filemanager.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "1033:                     callback: function(id, obj, args) {",
      "1034:                         if (obj.error) {",
      "1035:                             selectnode.removeClass('loading');",
      "1037:                         } else {",
      "1038:                             args.scope.selectui.hide();",
      "1039:                             args.scope.refresh(obj.filepath);",
      "",
      "[Removed Lines]",
      "1036:                             args.scope.print_msg(obj.error, 'error');",
      "",
      "[Added Lines]",
      "1036:                             args.scope.print_msg(obj.error, 'error', options);",
      "",
      "---------------"
    ],
    "repository/draftfiles_ajax.php||repository/draftfiles_ajax.php": [
      "File: repository/draftfiles_ajax.php -> repository/draftfiles_ajax.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "237:                 return $result !== true;",
      "238:             });",
      "239:             if (count($failed) > 0) {",
      "241:                 die(json_encode($return));",
      "242:             }",
      "",
      "[Removed Lines]",
      "240:                 $return->error = get_string('cannotunzipextractfileerror',  'repository');",
      "",
      "[Added Lines]",
      "240:                 if ($failed[0] == \"cannotunzipquotaexceeded\") {",
      "241:                     $return->error = get_string($failed[0],  'repository');",
      "242:                 } else {",
      "243:                     $return->error = get_string('cannotunzipextractfileerror',  'repository');",
      "244:                 }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a73e0ac76d77b67602f91bb211962813d60bc573",
      "candidate_info": {
        "commit_hash": "a73e0ac76d77b67602f91bb211962813d60bc573",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/a73e0ac76d77b67602f91bb211962813d60bc573",
        "files": [
          "lib/filestorage/zip_packer.php"
        ],
        "message": "MDL-74641 repository: Fix wrong increment of temporary file for small sizes",
        "before_after_code_files": [
          "lib/filestorage/zip_packer.php||lib/filestorage/zip_packer.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/filestorage/zip_packer.php||lib/filestorage/zip_packer.php"
          ],
          "candidate": [
            "lib/filestorage/zip_packer.php||lib/filestorage/zip_packer.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/filestorage/zip_packer.php||lib/filestorage/zip_packer.php": [
          "File: lib/filestorage/zip_packer.php -> lib/filestorage/zip_packer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "502:                 $content = '';",
          "503:                 while (!feof($fz)) {",
          "504:                     $content .= fread($fz, 262143);",
          "507:                     if ($realfilesize > $size ||",
          "508:                             ($areamaxbytes != FILE_AREA_MAX_BYTES_UNLIMITED && $totalsizebytes > $areamaxbytes)) {",
          "509:                         $processed[0] = 'cannotunzipquotaexceeded';",
          "",
          "[Removed Lines]",
          "505:                     $realfilesize += strlen($content); // Current file size.",
          "506:                     $totalsizebytes += strlen($content);",
          "",
          "[Added Lines]",
          "505:                     $realfilesize = strlen($content); // Current file size.",
          "506:                     $totalsizebytes = strlen($content);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e5fca6909eb89bffc71018e3cbab03d05799bb6f",
      "candidate_info": {
        "commit_hash": "e5fca6909eb89bffc71018e3cbab03d05799bb6f",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/e5fca6909eb89bffc71018e3cbab03d05799bb6f",
        "files": [
          "lib/filestorage/zip_packer.php",
          "repository/draftfiles_ajax.php"
        ],
        "message": "MDL-81060 core: fix incorrect userquota usage in zip_packer\n\nThis change reverts much of MDL-74641, removing the erroneous userquota\nchecks from zip_packer. Now, during extraction, the zip_packer will exit\nwith an error status when it encounters a file which is larger than its\nadvertised size, and NOT when it determines the size of the extracted\nfiles have exceeded the userquota (which only applies to private files\nand which was used incorrectly here). It also reverts changes to the\ndraftfiles_ajax.php file, restoring the original (pre-MDL-74641) error\nhandling.",
        "before_after_code_files": [
          "lib/filestorage/zip_packer.php||lib/filestorage/zip_packer.php",
          "repository/draftfiles_ajax.php||repository/draftfiles_ajax.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/filestorage/zip_packer.php||lib/filestorage/zip_packer.php",
            "repository/draftfiles_ajax.php||repository/draftfiles_ajax.php"
          ],
          "candidate": [
            "lib/filestorage/zip_packer.php||lib/filestorage/zip_packer.php",
            "repository/draftfiles_ajax.php||repository/draftfiles_ajax.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/filestorage/zip_packer.php||lib/filestorage/zip_packer.php": [
          "File: lib/filestorage/zip_packer.php -> lib/filestorage/zip_packer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "451:             $done = 0;",
          "452:         }",
          "465:         foreach ($ziparch as $info) {",
          "467:             if ($progress) {",
          "",
          "[Removed Lines]",
          "455:         $areamaxbytes = FILE_AREA_MAX_BYTES_UNLIMITED;",
          "456:         $context = context::instance_by_id($contextid);",
          "457:         if (!has_capability('moodle/user:ignoreuserquota', $context)) {",
          "459:             $fileareainfo = file_get_file_area_info($contextid, 'user', 'private');",
          "460:             $usedspace = $fileareainfo['filesize_without_references'];",
          "461:             $areamaxbytes = (int) $CFG->userquota - $usedspace;",
          "462:         }",
          "463:         $totalsizebytes = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "472:             $size = $info->size;",
          "473:             $name = $info->pathname;",
          "477:             if ($name === '' or array_key_exists($name, $processed)) {",
          "479:                 continue;",
          "",
          "[Removed Lines]",
          "475:             $realfilesize = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "500:                     continue;",
          "501:                 }",
          "502:                 $content = '';",
          "503:                 while (!feof($fz)) {",
          "504:                     $content .= fread($fz, 262143);",
          "505:                     $realfilesize = strlen($content); // Current file size.",
          "515:                     }",
          "516:                 }",
          "517:                 fclose($fz);",
          "",
          "[Removed Lines]",
          "506:                     $totalsizebytes = strlen($content);",
          "507:                     if ($realfilesize > $size ||",
          "508:                             ($areamaxbytes != FILE_AREA_MAX_BYTES_UNLIMITED && $totalsizebytes > $areamaxbytes)) {",
          "509:                         $processed[0] = 'cannotunzipquotaexceeded';",
          "511:                         fclose($fz);",
          "512:                         unset($content);",
          "514:                         break(2);",
          "",
          "[Added Lines]",
          "490:                 $realfilesize = 0;",
          "497:                     if ($realfilesize > $size) {",
          "498:                         break;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "557:                     $processed[$name] = 'Can not read file from zip archive'; // TODO: localise",
          "558:                     continue;",
          "559:                 }",
          "560:                 while (!feof($fz)) {",
          "561:                     $content = fread($fz, 262143);",
          "562:                     $numofbytes = fwrite($fp, $content);",
          "563:                     $realfilesize += $numofbytes; // Current file size.",
          "574:                     }",
          "575:                 }",
          "576:                 fclose($fz);",
          "",
          "[Removed Lines]",
          "564:                     $totalsizebytes += $numofbytes;",
          "565:                     if ($realfilesize > $size ||",
          "566:                             ($areamaxbytes != FILE_AREA_MAX_BYTES_UNLIMITED && $totalsizebytes > $areamaxbytes)) {",
          "567:                         $processed[0] = 'cannotunzipquotaexceeded';",
          "569:                         fclose($fz);",
          "570:                         fclose($fp);",
          "571:                         unlink($tmpfile);",
          "573:                         break(2);",
          "",
          "[Added Lines]",
          "544:                 $realfilesize = 0;",
          "552:                     if ($realfilesize > $size) {",
          "553:                         break;",
          "",
          "---------------"
        ],
        "repository/draftfiles_ajax.php||repository/draftfiles_ajax.php": [
          "File: repository/draftfiles_ajax.php -> repository/draftfiles_ajax.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "237:                 return $result !== true;",
          "238:             });",
          "239:             if (count($failed) > 0) {",
          "245:                 die(json_encode($return));",
          "246:             }",
          "",
          "[Removed Lines]",
          "240:                 if ($failed[0] == \"cannotunzipquotaexceeded\") {",
          "241:                     $return->error = get_string($failed[0],  'repository');",
          "242:                 } else {",
          "243:                     $return->error = get_string('cannotunzipextractfileerror',  'repository');",
          "244:                 }",
          "",
          "[Added Lines]",
          "240:                 $return->error = get_string('cannotunzipextractfileerror',  'repository');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "427b0d3fee9f298814e63f2cd1faa1dff04cae58",
      "candidate_info": {
        "commit_hash": "427b0d3fee9f298814e63f2cd1faa1dff04cae58",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/427b0d3fee9f298814e63f2cd1faa1dff04cae58",
        "files": [
          "lib/filestorage/zip_packer.php",
          "lib/form/filemanager.js",
          "repository/draftfiles_ajax.php"
        ],
        "message": "MDL-74641 repository: Handles increase bytes while extracting zip files\n\nWe should not rely solely on the provided size information.\nTherefore the system needs to recalculate the size of each file in the zip file,\nwhether small or big.\n\nThe changes also cover the filemanager.js file if an error appears.",
        "before_after_code_files": [
          "lib/filestorage/zip_packer.php||lib/filestorage/zip_packer.php",
          "lib/form/filemanager.js||lib/form/filemanager.js",
          "repository/draftfiles_ajax.php||repository/draftfiles_ajax.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/filestorage/zip_packer.php||lib/filestorage/zip_packer.php",
            "lib/form/filemanager.js||lib/form/filemanager.js",
            "repository/draftfiles_ajax.php||repository/draftfiles_ajax.php"
          ],
          "candidate": [
            "lib/filestorage/zip_packer.php||lib/filestorage/zip_packer.php",
            "lib/form/filemanager.js||lib/form/filemanager.js",
            "repository/draftfiles_ajax.php||repository/draftfiles_ajax.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/filestorage/zip_packer.php||lib/filestorage/zip_packer.php": [
          "File: lib/filestorage/zip_packer.php -> lib/filestorage/zip_packer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "451:             $done = 0;",
          "452:         }",
          "454:         foreach ($ziparch as $info) {",
          "456:             if ($progress) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "455:         $areamaxbytes = FILE_AREA_MAX_BYTES_UNLIMITED;",
          "456:         $context = context::instance_by_id($contextid);",
          "457:         if (!has_capability('moodle/user:ignoreuserquota', $context)) {",
          "459:             $fileareainfo = file_get_file_area_info($contextid, 'user', 'private');",
          "460:             $usedspace = $fileareainfo['filesize_without_references'];",
          "461:             $areamaxbytes = (int) $CFG->userquota - $usedspace;",
          "462:         }",
          "463:         $totalsizebytes = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "461:             $size = $info->size;",
          "462:             $name = $info->pathname;",
          "464:             if ($name === '' or array_key_exists($name, $processed)) {",
          "466:                 continue;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "475:             $realfilesize = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "489:                 $content = '';",
          "490:                 while (!feof($fz)) {",
          "491:                     $content .= fread($fz, 262143);",
          "492:                 }",
          "493:                 fclose($fz);",
          "494:                 if (strlen($content) !== $size) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "505:                     $realfilesize += strlen($content); // Current file size.",
          "506:                     $totalsizebytes += strlen($content);",
          "507:                     if ($realfilesize > $size ||",
          "508:                             ($areamaxbytes != FILE_AREA_MAX_BYTES_UNLIMITED && $totalsizebytes > $areamaxbytes)) {",
          "509:                         $processed[0] = 'cannotunzipquotaexceeded';",
          "511:                         fclose($fz);",
          "512:                         unset($content);",
          "514:                         break(2);",
          "515:                     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "535:                 }",
          "536:                 while (!feof($fz)) {",
          "537:                     $content = fread($fz, 262143);",
          "539:                 }",
          "540:                 fclose($fz);",
          "541:                 fclose($fp);",
          "",
          "[Removed Lines]",
          "538:                     fwrite($fp, $content);",
          "",
          "[Added Lines]",
          "562:                     $numofbytes = fwrite($fp, $content);",
          "563:                     $realfilesize += $numofbytes; // Current file size.",
          "564:                     $totalsizebytes += $numofbytes;",
          "565:                     if ($realfilesize > $size ||",
          "566:                             ($areamaxbytes != FILE_AREA_MAX_BYTES_UNLIMITED && $totalsizebytes > $areamaxbytes)) {",
          "567:                         $processed[0] = 'cannotunzipquotaexceeded';",
          "569:                         fclose($fz);",
          "570:                         fclose($fp);",
          "571:                         unlink($tmpfile);",
          "573:                         break(2);",
          "574:                     }",
          "",
          "---------------"
        ],
        "lib/form/filemanager.js||lib/form/filemanager.js": [
          "File: lib/form/filemanager.js -> lib/form/filemanager.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1033:                     callback: function(id, obj, args) {",
          "1034:                         if (obj.error) {",
          "1035:                             selectnode.removeClass('loading');",
          "1037:                         } else {",
          "1038:                             args.scope.selectui.hide();",
          "1039:                             args.scope.refresh(obj.filepath);",
          "",
          "[Removed Lines]",
          "1036:                             args.scope.print_msg(obj.error, 'error');",
          "",
          "[Added Lines]",
          "1036:                             args.scope.print_msg(obj.error, 'error', options);",
          "",
          "---------------"
        ],
        "repository/draftfiles_ajax.php||repository/draftfiles_ajax.php": [
          "File: repository/draftfiles_ajax.php -> repository/draftfiles_ajax.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "237:                 return $result !== true;",
          "238:             });",
          "239:             if (count($failed) > 0) {",
          "241:                 die(json_encode($return));",
          "242:             }",
          "",
          "[Removed Lines]",
          "240:                 $return->error = get_string('cannotunzipextractfileerror',  'repository');",
          "",
          "[Added Lines]",
          "240:                 if ($failed[0] == \"cannotunzipquotaexceeded\") {",
          "241:                     $return->error = get_string($failed[0],  'repository');",
          "242:                 } else {",
          "243:                     $return->error = get_string('cannotunzipextractfileerror',  'repository');",
          "244:                 }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fb7da9c74ffa13f1cc82a9540a1586c0c04a9766",
      "candidate_info": {
        "commit_hash": "fb7da9c74ffa13f1cc82a9540a1586c0c04a9766",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/fb7da9c74ffa13f1cc82a9540a1586c0c04a9766",
        "files": [
          "lib/filestorage/zip_packer.php",
          "lib/form/filemanager.js",
          "repository/draftfiles_ajax.php"
        ],
        "message": "MDL-74641 repository: Handles increase bytes while extracting zip files\n\nWe should not rely solely on the provided size information.\nTherefore the system needs to recalculate the size of each file in the zip file,\nwhether small or big.\n\nThe changes also cover the filemanager.js file if an error appears.",
        "before_after_code_files": [
          "lib/filestorage/zip_packer.php||lib/filestorage/zip_packer.php",
          "lib/form/filemanager.js||lib/form/filemanager.js",
          "repository/draftfiles_ajax.php||repository/draftfiles_ajax.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/filestorage/zip_packer.php||lib/filestorage/zip_packer.php",
            "lib/form/filemanager.js||lib/form/filemanager.js",
            "repository/draftfiles_ajax.php||repository/draftfiles_ajax.php"
          ],
          "candidate": [
            "lib/filestorage/zip_packer.php||lib/filestorage/zip_packer.php",
            "lib/form/filemanager.js||lib/form/filemanager.js",
            "repository/draftfiles_ajax.php||repository/draftfiles_ajax.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/filestorage/zip_packer.php||lib/filestorage/zip_packer.php": [
          "File: lib/filestorage/zip_packer.php -> lib/filestorage/zip_packer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "451:             $done = 0;",
          "452:         }",
          "454:         foreach ($ziparch as $info) {",
          "456:             if ($progress) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "455:         $areamaxbytes = FILE_AREA_MAX_BYTES_UNLIMITED;",
          "456:         $context = context::instance_by_id($contextid);",
          "457:         if (!has_capability('moodle/user:ignoreuserquota', $context)) {",
          "459:             $fileareainfo = file_get_file_area_info($contextid, 'user', 'private');",
          "460:             $usedspace = $fileareainfo['filesize_without_references'];",
          "461:             $areamaxbytes = (int) $CFG->userquota - $usedspace;",
          "462:         }",
          "463:         $totalsizebytes = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "461:             $size = $info->size;",
          "462:             $name = $info->pathname;",
          "464:             if ($name === '' or array_key_exists($name, $processed)) {",
          "466:                 continue;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "475:             $realfilesize = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "489:                 $content = '';",
          "490:                 while (!feof($fz)) {",
          "491:                     $content .= fread($fz, 262143);",
          "492:                 }",
          "493:                 fclose($fz);",
          "494:                 if (strlen($content) !== $size) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "505:                     $realfilesize += strlen($content); // Current file size.",
          "506:                     $totalsizebytes += strlen($content);",
          "507:                     if ($realfilesize > $size ||",
          "508:                             ($areamaxbytes != FILE_AREA_MAX_BYTES_UNLIMITED && $totalsizebytes > $areamaxbytes)) {",
          "509:                         $processed[0] = 'cannotunzipquotaexceeded';",
          "511:                         fclose($fz);",
          "512:                         unset($content);",
          "514:                         break(2);",
          "515:                     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "535:                 }",
          "536:                 while (!feof($fz)) {",
          "537:                     $content = fread($fz, 262143);",
          "539:                 }",
          "540:                 fclose($fz);",
          "541:                 fclose($fp);",
          "",
          "[Removed Lines]",
          "538:                     fwrite($fp, $content);",
          "",
          "[Added Lines]",
          "562:                     $numofbytes = fwrite($fp, $content);",
          "563:                     $realfilesize += $numofbytes; // Current file size.",
          "564:                     $totalsizebytes += $numofbytes;",
          "565:                     if ($realfilesize > $size ||",
          "566:                             ($areamaxbytes != FILE_AREA_MAX_BYTES_UNLIMITED && $totalsizebytes > $areamaxbytes)) {",
          "567:                         $processed[0] = 'cannotunzipquotaexceeded';",
          "569:                         fclose($fz);",
          "570:                         fclose($fp);",
          "571:                         unlink($tmpfile);",
          "573:                         break(2);",
          "574:                     }",
          "",
          "---------------"
        ],
        "lib/form/filemanager.js||lib/form/filemanager.js": [
          "File: lib/form/filemanager.js -> lib/form/filemanager.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1062:                     callback: function(id, obj, args) {",
          "1063:                         if (obj.error) {",
          "1064:                             selectnode.removeClass('loading');",
          "1066:                         } else {",
          "1067:                             args.scope.selectui.hide();",
          "1068:                             args.scope.refresh(obj.filepath);",
          "",
          "[Removed Lines]",
          "1065:                             args.scope.print_msg(obj.error, 'error');",
          "",
          "[Added Lines]",
          "1065:                             args.scope.print_msg(obj.error, 'error', options);",
          "",
          "---------------"
        ],
        "repository/draftfiles_ajax.php||repository/draftfiles_ajax.php": [
          "File: repository/draftfiles_ajax.php -> repository/draftfiles_ajax.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "237:                 return $result !== true;",
          "238:             });",
          "239:             if (count($failed) > 0) {",
          "241:                 die(json_encode($return));",
          "242:             }",
          "",
          "[Removed Lines]",
          "240:                 $return->error = get_string('cannotunzipextractfileerror',  'repository');",
          "",
          "[Added Lines]",
          "240:                 if ($failed[0] == \"cannotunzipquotaexceeded\") {",
          "241:                     $return->error = get_string($failed[0],  'repository');",
          "242:                 } else {",
          "243:                     $return->error = get_string('cannotunzipextractfileerror',  'repository');",
          "244:                 }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9072dd8fddb8004423f60e35d5613e461b2b8f98",
      "candidate_info": {
        "commit_hash": "9072dd8fddb8004423f60e35d5613e461b2b8f98",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/9072dd8fddb8004423f60e35d5613e461b2b8f98",
        "files": [
          "lib/filestorage/zip_packer.php",
          "lib/form/filemanager.js",
          "repository/draftfiles_ajax.php"
        ],
        "message": "MDL-74641 repository: Handles increase bytes while extracting zip files\n\nWe should not rely solely on the provided size information.\nTherefore the system needs to recalculate the size of each file in the zip file,\nwhether small or big.\n\nThe changes also cover the filemanager.js file if an error appears.",
        "before_after_code_files": [
          "lib/filestorage/zip_packer.php||lib/filestorage/zip_packer.php",
          "lib/form/filemanager.js||lib/form/filemanager.js",
          "repository/draftfiles_ajax.php||repository/draftfiles_ajax.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/filestorage/zip_packer.php||lib/filestorage/zip_packer.php",
            "lib/form/filemanager.js||lib/form/filemanager.js",
            "repository/draftfiles_ajax.php||repository/draftfiles_ajax.php"
          ],
          "candidate": [
            "lib/filestorage/zip_packer.php||lib/filestorage/zip_packer.php",
            "lib/form/filemanager.js||lib/form/filemanager.js",
            "repository/draftfiles_ajax.php||repository/draftfiles_ajax.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/filestorage/zip_packer.php||lib/filestorage/zip_packer.php": [
          "File: lib/filestorage/zip_packer.php -> lib/filestorage/zip_packer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "451:             $done = 0;",
          "452:         }",
          "454:         foreach ($ziparch as $info) {",
          "456:             if ($progress) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "455:         $areamaxbytes = FILE_AREA_MAX_BYTES_UNLIMITED;",
          "456:         $context = context::instance_by_id($contextid);",
          "457:         if (!has_capability('moodle/user:ignoreuserquota', $context)) {",
          "459:             $fileareainfo = file_get_file_area_info($contextid, 'user', 'private');",
          "460:             $usedspace = $fileareainfo['filesize_without_references'];",
          "461:             $areamaxbytes = (int) $CFG->userquota - $usedspace;",
          "462:         }",
          "463:         $totalsizebytes = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "461:             $size = $info->size;",
          "462:             $name = $info->pathname;",
          "464:             if ($name === '' or array_key_exists($name, $processed)) {",
          "466:                 continue;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "475:             $realfilesize = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "489:                 $content = '';",
          "490:                 while (!feof($fz)) {",
          "491:                     $content .= fread($fz, 262143);",
          "492:                 }",
          "493:                 fclose($fz);",
          "494:                 if (strlen($content) !== $size) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "505:                     $realfilesize += strlen($content); // Current file size.",
          "506:                     $totalsizebytes += strlen($content);",
          "507:                     if ($realfilesize > $size ||",
          "508:                             ($areamaxbytes != FILE_AREA_MAX_BYTES_UNLIMITED && $totalsizebytes > $areamaxbytes)) {",
          "509:                         $processed[0] = 'cannotunzipquotaexceeded';",
          "511:                         fclose($fz);",
          "512:                         unset($content);",
          "514:                         break(2);",
          "515:                     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "535:                 }",
          "536:                 while (!feof($fz)) {",
          "537:                     $content = fread($fz, 262143);",
          "539:                 }",
          "540:                 fclose($fz);",
          "541:                 fclose($fp);",
          "",
          "[Removed Lines]",
          "538:                     fwrite($fp, $content);",
          "",
          "[Added Lines]",
          "562:                     $numofbytes = fwrite($fp, $content);",
          "563:                     $realfilesize += $numofbytes; // Current file size.",
          "564:                     $totalsizebytes += $numofbytes;",
          "565:                     if ($realfilesize > $size ||",
          "566:                             ($areamaxbytes != FILE_AREA_MAX_BYTES_UNLIMITED && $totalsizebytes > $areamaxbytes)) {",
          "567:                         $processed[0] = 'cannotunzipquotaexceeded';",
          "569:                         fclose($fz);",
          "570:                         fclose($fp);",
          "571:                         unlink($tmpfile);",
          "573:                         break(2);",
          "574:                     }",
          "",
          "---------------"
        ],
        "lib/form/filemanager.js||lib/form/filemanager.js": [
          "File: lib/form/filemanager.js -> lib/form/filemanager.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1062:                     callback: function(id, obj, args) {",
          "1063:                         if (obj.error) {",
          "1064:                             selectnode.removeClass('loading');",
          "1066:                         } else {",
          "1067:                             args.scope.selectui.hide();",
          "1068:                             args.scope.refresh(obj.filepath);",
          "",
          "[Removed Lines]",
          "1065:                             args.scope.print_msg(obj.error, 'error');",
          "",
          "[Added Lines]",
          "1065:                             args.scope.print_msg(obj.error, 'error', options);",
          "",
          "---------------"
        ],
        "repository/draftfiles_ajax.php||repository/draftfiles_ajax.php": [
          "File: repository/draftfiles_ajax.php -> repository/draftfiles_ajax.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "237:                 return $result !== true;",
          "238:             });",
          "239:             if (count($failed) > 0) {",
          "241:                 die(json_encode($return));",
          "242:             }",
          "",
          "[Removed Lines]",
          "240:                 $return->error = get_string('cannotunzipextractfileerror',  'repository');",
          "",
          "[Added Lines]",
          "240:                 if ($failed[0] == \"cannotunzipquotaexceeded\") {",
          "241:                     $return->error = get_string($failed[0],  'repository');",
          "242:                 } else {",
          "243:                     $return->error = get_string('cannotunzipextractfileerror',  'repository');",
          "244:                 }",
          "",
          "---------------"
        ]
      }
    }
  ]
}