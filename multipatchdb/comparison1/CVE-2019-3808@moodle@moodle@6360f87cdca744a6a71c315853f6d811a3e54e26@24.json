{
  "cve_id": "CVE-2019-3808",
  "cve_desc": "A flaw was found in Moodle versions 3.6 to 3.6.1, 3.5 to 3.5.3, 3.4 to 3.4.6, 3.1 to 3.1.15 and earlier unsupported versions. The 'manage groups' capability did not have the 'XSS risk' flag assigned to it, but does have that access in certain places. Note that the capability is intended for use by trusted users, and is only assigned to teachers and managers by default.",
  "repo": "moodle/moodle",
  "patch_hash": "6360f87cdca744a6a71c315853f6d811a3e54e26",
  "patch_info": {
    "commit_hash": "6360f87cdca744a6a71c315853f6d811a3e54e26",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/6360f87cdca744a6a71c315853f6d811a3e54e26",
    "files": [
      "lib/db/access.php",
      "version.php"
    ],
    "message": "MDL-64395 groups: Added XSS Risk to the manage groups capability",
    "before_after_code_files": [
      "lib/db/access.php||lib/db/access.php",
      "version.php||version.php"
    ]
  },
  "patch_diff": {
    "lib/db/access.php||lib/db/access.php": [
      "File: lib/db/access.php -> lib/db/access.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "1123:     ),",
      "1125:     'moodle/course:managegroups' => array(",
      "1127:         'captype' => 'write',",
      "1128:         'contextlevel' => CONTEXT_COURSE,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1126:         'riskbitmask' => RISK_XSS,",
      "",
      "---------------"
    ],
    "version.php||version.php": [
      "File: version.php -> version.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "30: defined('MOODLE_INTERNAL') || die();",
      "",
      "[Removed Lines]",
      "32: $version  = 2018122000.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
      "",
      "[Added Lines]",
      "32: $version  = 2018122000.02;              // YYYYMMDD      = weekly release date of this DEV branch.",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c9b0f33f782a0a03b25c169157c12c7290128894",
      "candidate_info": {
        "commit_hash": "c9b0f33f782a0a03b25c169157c12c7290128894",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/c9b0f33f782a0a03b25c169157c12c7290128894",
        "files": [
          "lib/db/services.php",
          "message/externallib.php",
          "message/tests/externallib_test.php",
          "version.php"
        ],
        "message": "MDL-64018 core_message: added external::get_user_contacts\n\nThis is to replace usages of external::data_for_messagearea_contacts\nin the new UI.",
        "before_after_code_files": [
          "lib/db/services.php||lib/db/services.php",
          "message/externallib.php||message/externallib.php",
          "message/tests/externallib_test.php||message/tests/externallib_test.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/db/services.php||lib/db/services.php": [
          "File: lib/db/services.php -> lib/db/services.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1080:         'type' => 'read',",
          "1081:         'services' => array(MOODLE_OFFICIAL_MOBILE_SERVICE),",
          "1082:     ),",
          "1083:     'core_message_get_conversations' => array(",
          "1084:         'classname' => 'core_message_external',",
          "1085:         'methodname' => 'get_conversations',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1083:     'core_message_get_user_contacts' => array(",
          "1084:         'classname' => 'core_message_external',",
          "1085:         'methodname' => 'get_user_contacts',",
          "1086:         'classpath' => 'message/externallib.php',",
          "1087:         'description' => 'Retrieve the contact list',",
          "1088:         'type' => 'read',",
          "1089:         'ajax' => true,",
          "1090:         'services' => array(MOODLE_OFFICIAL_MOBILE_SERVICE),",
          "1091:     ),",
          "",
          "---------------"
        ],
        "message/externallib.php||message/externallib.php": [
          "File: message/externallib.php -> message/externallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2226:         );",
          "2227:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2234:     public static function get_user_contacts_parameters() {",
          "2235:         return new external_function_parameters(",
          "2236:             array(",
          "2237:                 'userid' => new external_value(PARAM_INT, 'The id of the user who we retrieving the contacts for'),",
          "2238:                 'limitfrom' => new external_value(PARAM_INT, 'Limit from', VALUE_DEFAULT, 0),",
          "2239:                 'limitnum' => new external_value(PARAM_INT, 'Limit number', VALUE_DEFAULT, 0)",
          "2240:             )",
          "2241:         );",
          "2242:     }",
          "2253:     public static function get_user_contacts(int $userid, int $limitfrom = 0, int $limitnum = 0) {",
          "2254:         global $CFG, $USER;",
          "2257:         if (empty($CFG->messaging)) {",
          "2258:             throw new moodle_exception('disabled', 'message');",
          "2259:         }",
          "2261:         $systemcontext = context_system::instance();",
          "2263:         $params = array(",
          "2264:             'userid' => $userid,",
          "2265:             'limitfrom' => $limitfrom,",
          "2266:             'limitnum' => $limitnum",
          "2267:         );",
          "2268:         $params = self::validate_parameters(self::get_user_contacts_parameters(), $params);",
          "2269:         self::validate_context($systemcontext);",
          "2271:         if (($USER->id != $params['userid']) && !has_capability('moodle/site:readallmessages', $systemcontext)) {",
          "2272:             throw new moodle_exception('You do not have permission to perform this action.');",
          "2273:         }",
          "2275:         return \\core_message\\api::get_user_contacts($params['userid'], $params['limitfrom'], $params['limitnum']);",
          "2276:     }",
          "2283:     public static function get_user_contacts_returns() {",
          "2284:         return new external_multiple_structure(",
          "2285:             self::get_conversation_member_structure()",
          "2286:         );",
          "2287:     }",
          "",
          "---------------"
        ],
        "message/tests/externallib_test.php||message/tests/externallib_test.php": [
          "File: message/tests/externallib_test.php -> message/tests/externallib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3191:         core_message_external::data_for_messagearea_contacts($user->id);",
          "3192:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3197:     public function test_get_user_contacts() {",
          "3198:         $this->resetAfterTest(true);",
          "3201:         $user1 = self::getDataGenerator()->create_user();",
          "3204:         $this->setUser($user1);",
          "3206:         $user2 = new stdClass();",
          "3207:         $user2->firstname = 'User';",
          "3208:         $user2->lastname = 'A';",
          "3209:         $user2 = self::getDataGenerator()->create_user($user2);",
          "3211:         $user3 = new stdClass();",
          "3212:         $user3->firstname = 'User';",
          "3213:         $user3->lastname = 'B';",
          "3214:         $user3 = self::getDataGenerator()->create_user($user3);",
          "3216:         $user4 = new stdClass();",
          "3217:         $user4->firstname = 'User';",
          "3218:         $user4->lastname = 'C';",
          "3219:         $user4 = self::getDataGenerator()->create_user($user4);",
          "3221:         $user5 = new stdClass();",
          "3222:         $user5->firstname = 'User';",
          "3223:         $user5->lastname = 'D';",
          "3224:         $user5 = self::getDataGenerator()->create_user($user5);",
          "3227:         \\core_message\\api::add_contact($user1->id, $user2->id);",
          "3228:         \\core_message\\api::add_contact($user1->id, $user3->id);",
          "3229:         \\core_message\\api::add_contact($user1->id, $user4->id);",
          "3232:         $result = core_message_external::get_user_contacts($user1->id);",
          "3235:         $result = external_api::clean_returnvalue(core_message_external::get_user_contacts_returns(),",
          "3236:             $result);",
          "3239:         $contacts = $result;",
          "3240:         usort($contacts, ['static', 'sort_contacts_id']);",
          "3241:         $this->assertCount(3, $contacts);",
          "3243:         $contact1 = array_shift($contacts);",
          "3244:         $contact2 = array_shift($contacts);",
          "3245:         $contact3 = array_shift($contacts);",
          "3247:         $this->assertEquals($user2->id, $contact1['id']);",
          "3248:         $this->assertEquals(fullname($user2), $contact1['fullname']);",
          "3249:         $this->assertTrue($contact1['iscontact']);",
          "3251:         $this->assertEquals($user3->id, $contact2['id']);",
          "3252:         $this->assertEquals(fullname($user3), $contact2['fullname']);",
          "3253:         $this->assertTrue($contact2['iscontact']);",
          "3255:         $this->assertEquals($user4->id, $contact3['id']);",
          "3256:         $this->assertEquals(fullname($user4), $contact3['fullname']);",
          "3257:         $this->assertTrue($contact3['iscontact']);",
          "3258:     }",
          "3263:     public function test_get_user_contacts_as_other_user() {",
          "3264:         $this->resetAfterTest(true);",
          "3266:         $this->setAdminUser();",
          "3269:         $user1 = self::getDataGenerator()->create_user();",
          "3271:         $user2 = new stdClass();",
          "3272:         $user2->firstname = 'User';",
          "3273:         $user2->lastname = 'A';",
          "3274:         $user2 = self::getDataGenerator()->create_user($user2);",
          "3276:         $user3 = new stdClass();",
          "3277:         $user3->firstname = 'User';",
          "3278:         $user3->lastname = 'B';",
          "3279:         $user3 = self::getDataGenerator()->create_user($user3);",
          "3281:         $user4 = new stdClass();",
          "3282:         $user4->firstname = 'User';",
          "3283:         $user4->lastname = 'C';",
          "3284:         $user4 = self::getDataGenerator()->create_user($user4);",
          "3286:         $user5 = new stdClass();",
          "3287:         $user5->firstname = 'User';",
          "3288:         $user5->lastname = 'D';",
          "3289:         $user5 = self::getDataGenerator()->create_user($user5);",
          "3292:         \\core_message\\api::add_contact($user1->id, $user2->id);",
          "3293:         \\core_message\\api::add_contact($user1->id, $user3->id);",
          "3294:         \\core_message\\api::add_contact($user1->id, $user4->id);",
          "3297:         $result = core_message_external::get_user_contacts($user1->id);",
          "3300:         $result = external_api::clean_returnvalue(core_message_external::get_user_contacts_returns(),",
          "3301:             $result);",
          "3304:         $contacts = $result;",
          "3305:         usort($contacts, ['static', 'sort_contacts_id']);",
          "3306:         $this->assertCount(3, $contacts);",
          "3308:         $contact1 = array_shift($contacts);",
          "3309:         $contact2 = array_shift($contacts);",
          "3310:         $contact3 = array_shift($contacts);",
          "3312:         $this->assertEquals($user2->id, $contact1['id']);",
          "3313:         $this->assertEquals(fullname($user2), $contact1['fullname']);",
          "3314:         $this->assertTrue($contact1['iscontact']);",
          "3316:         $this->assertEquals($user3->id, $contact2['id']);",
          "3317:         $this->assertEquals(fullname($user3), $contact2['fullname']);",
          "3318:         $this->assertTrue($contact2['iscontact']);",
          "3320:         $this->assertEquals($user4->id, $contact3['id']);",
          "3321:         $this->assertEquals(fullname($user4), $contact3['fullname']);",
          "3322:         $this->assertTrue($contact3['iscontact']);",
          "3323:     }",
          "3328:     public function test_get_user_contacts_as_other_user_without_cap() {",
          "3329:         $this->resetAfterTest(true);",
          "3332:         $user1 = self::getDataGenerator()->create_user();",
          "3333:         $user2 = self::getDataGenerator()->create_user();",
          "3336:         $this->setUser($user1);",
          "3339:         $this->expectException('moodle_exception');",
          "3340:         core_message_external::get_user_contacts($user2->id);",
          "3341:     }",
          "3346:     public function test_get_user_contacts_messaging_disabled() {",
          "3347:         global $CFG;",
          "3349:         $this->resetAfterTest(true);",
          "3352:         $user = self::getDataGenerator()->create_user();",
          "3355:         $this->setUser($user);",
          "3358:         $CFG->messaging = 0;",
          "3361:         $this->expectException('moodle_exception');",
          "3362:         core_message_external::get_user_contacts($user->id);",
          "3363:     }",
          "3368:     public function test_get_user_contacts_no_results() {",
          "3369:         $this->resetAfterTest();",
          "3371:         $user1 = self::getDataGenerator()->create_user();",
          "3373:         $this->setUser($user1);",
          "3375:         $requests = core_message_external::get_user_contacts($user1->id);",
          "3376:         $requests = external_api::clean_returnvalue(core_message_external::get_user_contacts_returns(), $requests);",
          "3378:         $this->assertEmpty($requests);",
          "3379:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4564:         return $a['userid'] > $b['userid'];",
          "4565:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4761:     protected static function sort_contacts_id($a, $b) {",
          "4762:         return $a['id'] > $b['id'];",
          "4763:     }",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2018112000.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2018112000.02;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a7712a985196eaa73dedb28c7a2e33cf848babc5",
      "candidate_info": {
        "commit_hash": "a7712a985196eaa73dedb28c7a2e33cf848babc5",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/a7712a985196eaa73dedb28c7a2e33cf848babc5",
        "files": [
          "admin/settings/courses.php",
          "lang/en/moodle.php",
          "lib/db/upgrade.php",
          "lib/outputrenderers.php",
          "lib/templates/course_header_image.mustache",
          "theme/boost/scss/moodle/course.scss",
          "theme/boost/style/moodle.css",
          "theme/bootstrapbase/less/moodle/course.less",
          "theme/bootstrapbase/style/moodle.css",
          "version.php"
        ],
        "message": "MDL-63445 core_renderer: display course image in context header",
        "before_after_code_files": [
          "admin/settings/courses.php||admin/settings/courses.php",
          "lang/en/moodle.php||lang/en/moodle.php",
          "lib/db/upgrade.php||lib/db/upgrade.php",
          "lib/outputrenderers.php||lib/outputrenderers.php",
          "lib/templates/course_header_image.mustache||lib/templates/course_header_image.mustache",
          "theme/boost/scss/moodle/course.scss||theme/boost/scss/moodle/course.scss",
          "theme/boost/style/moodle.css||theme/boost/style/moodle.css",
          "theme/bootstrapbase/less/moodle/course.less||theme/bootstrapbase/less/moodle/course.less",
          "theme/bootstrapbase/style/moodle.css||theme/bootstrapbase/style/moodle.css",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/settings/courses.php||admin/settings/courses.php": [
          "File: admin/settings/courses.php -> admin/settings/courses.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "121:     $temp->add(new admin_setting_configselect('moodlecourse/showreports', new lang_string('showreports'), '', 0,",
          "122:         array(0 => new lang_string('no'), 1 => new lang_string('yes'))));",
          "125:     $temp->add(new admin_setting_heading('filesanduploadshdr', new lang_string('filesanduploads'), ''));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "124:     $temp->add(new admin_setting_configcheckbox('moodlecourse/showcourseimages', get_string('showcourseimages'),",
          "125:         get_string('showcourseimages_desc'), 1));",
          "",
          "---------------"
        ],
        "lang/en/moodle.php||lang/en/moodle.php": [
          "File: lang/en/moodle.php -> lang/en/moodle.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "326: $string['courseformats'] = 'Course formats';",
          "327: $string['courseformatoptions'] = 'Formatting options for {$a}';",
          "328: $string['courseformatudpate'] = 'Update format';",
          "329: $string['courseprofiles'] = 'Course profiles';",
          "330: $string['coursepreferences'] = 'Course preferences';",
          "331: $string['coursegrades'] = 'Course grades';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "329: $string['courseheaderimage'] = 'Course header image';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1821: $string['showblockcourse'] = 'Show list of courses containing block';",
          "1822: $string['showcategory'] = 'Show {$a}';",
          "1823: $string['showchartdata'] = 'Show chart data';",
          "1824: $string['showcomments'] = 'Show/hide comments';",
          "1825: $string['showcommentsnonjs'] = 'Show comments';",
          "1826: $string['showdescription'] = 'Display description on course page';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1825: $string['showcourseimages'] = 'Show course images';",
          "1826: $string['showcourseimages_desc'] = 'Show the course image or image placeholder in the course header.';",
          "",
          "---------------"
        ],
        "lib/db/upgrade.php||lib/db/upgrade.php": [
          "File: lib/db/upgrade.php -> lib/db/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2565:         upgrade_main_savepoint(true, 2018101800.00);",
          "2566:     }",
          "2568:     return true;",
          "2569: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2568:     if ($oldversion < 2018101900.01) {",
          "2570:         set_config('showcourseimages', 1, 'moodlecourse');",
          "2571:         upgrade_main_savepoint(true, 2018101900.01);",
          "2572:     }",
          "",
          "---------------"
        ],
        "lib/outputrenderers.php||lib/outputrenderers.php": [
          "File: lib/outputrenderers.php -> lib/outputrenderers.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "4141:     }",
          "4143:     public function context_header($headerinfo = null, $headinglevel = 1) {",
          "4145:         require_once($CFG->dirroot . '/user/lib.php');",
          "4146:         $context = $this->page->context;",
          "4147:         $heading = null;",
          "",
          "[Removed Lines]",
          "4144:         global $DB, $USER, $CFG;",
          "",
          "[Added Lines]",
          "4144:         global $DB, $USER, $CFG, $COURSE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4152:         if (isset($headerinfo['heading'])) {",
          "4153:             $heading = $headerinfo['heading'];",
          "4154:         }",
          "4156:         if (isset($headerinfo['user']) || $context->contextlevel == CONTEXT_USER) {",
          "4157:             if (isset($headerinfo['user'])) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4157:         if ($context->contextlevel == CONTEXT_COURSE && get_config('moodlecourse', 'showcourseimages')) {",
          "4158:             $exporter = new core_course\\external\\course_summary_exporter($COURSE, ['context' => $context]);",
          "4159:             $courseinfo = $exporter->export($this);",
          "4160:             $imagedata = $this->render_from_template('core/course_header_image', $courseinfo);",
          "4161:         }",
          "",
          "---------------"
        ],
        "lib/templates/course_header_image.mustache||lib/templates/course_header_image.mustache": [
          "File: lib/templates/course_header_image.mustache -> lib/templates/course_header_image.mustache",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: {{!",
          "2:     This file is part of Moodle - http://moodle.org/",
          "4:     Moodle is free software: you can redistribute it and/or modify",
          "5:     it under the terms of the GNU General Public License as published by",
          "6:     the Free Software Foundation, either version 3 of the License, or",
          "7:     (at your option) any later version.",
          "9:     Moodle is distributed in the hope that it will be useful,",
          "10:     but WITHOUT ANY WARRANTY; without even the implied warranty of",
          "11:     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
          "12:     GNU General Public License for more details.",
          "14:     You should have received a copy of the GNU General Public License",
          "15:     along with Moodle.  If not, see <http://www.gnu.org/licenses/>.",
          "16: }}",
          "17: {{!",
          "18:     @template core/course_header_image",
          "20:     Example context (json):",
          "21:     {",
          "22:         \"courseimage\": \"http://domain.name/pluginfile.php/123/course/overviewfiles/kitten.jpg\"",
          "23:     }",
          "24: }}",
          "25: <div class=\"course-header-image-wrapper\">",
          "26:     <div class=\"course-header-image rounded w-100 h-100\" style='background-image: url(\"{{{courseimage}}}\");'>",
          "27:         <div class=\"sr-only\">{{#str}}courseheaderimage, core{{/str}}</div>",
          "28:     </div>",
          "29: </div>",
          "",
          "---------------"
        ],
        "theme/boost/scss/moodle/course.scss||theme/boost/scss/moodle/course.scss": [
          "File: theme/boost/scss/moodle/course.scss -> theme/boost/scss/moodle/course.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "1139:     opacity: 0.5;",
          "1140: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1142: .course-header-image-wrapper {",
          "1143:     width: 100px;",
          "1144:     height: 100px;",
          "1145:     .course-header-image {",
          "1146:         background-size: cover;",
          "1147:         background-position: center;",
          "1148:     }",
          "1149: }",
          "",
          "---------------"
        ],
        "theme/boost/style/moodle.css||theme/boost/style/moodle.css": [
          "File: theme/boost/style/moodle.css -> theme/boost/style/moodle.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "12326: .course-being-dragged {",
          "12327:   opacity: 0.5; }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12329: .course-header-image-wrapper {",
          "12330:   width: 100px;",
          "12331:   height: 100px; }",
          "12332:   .course-header-image-wrapper .course-header-image {",
          "12333:     background-size: cover;",
          "12334:     background-position: center; }",
          "",
          "---------------"
        ],
        "theme/bootstrapbase/less/moodle/course.less||theme/bootstrapbase/less/moodle/course.less": [
          "File: theme/bootstrapbase/less/moodle/course.less -> theme/bootstrapbase/less/moodle/course.less",
          "--- Hunk 1 ---",
          "[Context before]",
          "1124:     .opacity(50);",
          "1125: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1127: .course-header-image-wrapper {",
          "1128:     width: 100px;",
          "1129:     height: 100px;",
          "1130:     .course-header-image {",
          "1131:         width: 100%;",
          "1132:         height: 100%;",
          "1133:         background-size: cover;",
          "1134:         background-position: center;",
          "1135:     }",
          "1136: }",
          "",
          "---------------"
        ],
        "theme/bootstrapbase/style/moodle.css||theme/bootstrapbase/style/moodle.css": [
          "File: theme/bootstrapbase/style/moodle.css -> theme/bootstrapbase/style/moodle.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "7004:   opacity: 0.5;",
          "7005:   filter: alpha(opacity=50);",
          "7006: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7007: .course-header-image-wrapper {",
          "7008:   width: 100px;",
          "7009:   height: 100px;",
          "7010: }",
          "7011: .course-header-image-wrapper .course-header-image {",
          "7012:   width: 100%;",
          "7013:   height: 100%;",
          "7014:   background-size: cover;",
          "7015:   background-position: center;",
          "7016: }",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2018101900.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2018101900.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e064cef32452bbd4a042e61e54106a01242ccada",
      "candidate_info": {
        "commit_hash": "e064cef32452bbd4a042e61e54106a01242ccada",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/e064cef32452bbd4a042e61e54106a01242ccada",
        "files": [
          "version.php"
        ],
        "message": "weekly release 3.7.1+",
        "before_after_code_files": [
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "38: $branch   = '37';                       // This version's branch.",
          "39: $maturity = MATURITY_STABLE;             // This version's maturity level.",
          "",
          "[Removed Lines]",
          "32: $version  = 2019052001.13;              // 20190520      = branching date YYYYMMDD - do not modify!",
          "36: $release  = '3.7.1+ (Build: 20190830)'; // Human-friendly version name",
          "",
          "[Added Lines]",
          "32: $version  = 2019052001.14;              // 20190520      = branching date YYYYMMDD - do not modify!",
          "36: $release  = '3.7.1+ (Build: 20190905)'; // Human-friendly version name",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a88baa553a5a9ecdc9b198199c768034f69b0977",
      "candidate_info": {
        "commit_hash": "a88baa553a5a9ecdc9b198199c768034f69b0977",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/a88baa553a5a9ecdc9b198199c768034f69b0977",
        "files": [
          "version.php"
        ],
        "message": "weekly release 3.7.2+",
        "before_after_code_files": [
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "38: $branch   = '37';                       // This version's branch.",
          "39: $maturity = MATURITY_STABLE;             // This version's maturity level.",
          "",
          "[Removed Lines]",
          "32: $version  = 2019052002.15;              // 20190520      = branching date YYYYMMDD - do not modify!",
          "36: $release  = '3.7.2+ (Build: 20191105)'; // Human-friendly version name",
          "",
          "[Added Lines]",
          "32: $version  = 2019052002.16;              // 20190520      = branching date YYYYMMDD - do not modify!",
          "36: $release  = '3.7.2+ (Build: 20191108)'; // Human-friendly version name",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bb519b05b192e4066920a15bc0c41017bc6b6aaa",
      "candidate_info": {
        "commit_hash": "bb519b05b192e4066920a15bc0c41017bc6b6aaa",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/bb519b05b192e4066920a15bc0c41017bc6b6aaa",
        "files": [
          "version.php"
        ],
        "message": "weekly release 3.7.2+",
        "before_after_code_files": [
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "38: $branch   = '37';                       // This version's branch.",
          "39: $maturity = MATURITY_STABLE;             // This version's maturity level.",
          "",
          "[Removed Lines]",
          "32: $version  = 2019052002.13;              // 20190520      = branching date YYYYMMDD - do not modify!",
          "36: $release  = '3.7.2+ (Build: 20191030)'; // Human-friendly version name",
          "",
          "[Added Lines]",
          "32: $version  = 2019052002.14;              // 20190520      = branching date YYYYMMDD - do not modify!",
          "36: $release  = '3.7.2+ (Build: 20191031)'; // Human-friendly version name",
          "",
          "---------------"
        ]
      }
    }
  ]
}