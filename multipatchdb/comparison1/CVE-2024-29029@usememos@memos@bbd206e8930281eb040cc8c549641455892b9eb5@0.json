{
  "cve_id": "CVE-2024-29029",
  "cve_desc": "memos is a privacy-first, lightweight note-taking service. In memos 0.13.2, an SSRF vulnerability exists at the /o/get/image that allows unauthenticated users to enumerate the internal network and retrieve images. The response from the image request is then copied into the response of the current server request, causing a reflected XSS vulnerability. Version 0.22.0 of memos removes the vulnerable file.",
  "repo": "usememos/memos",
  "patch_hash": "bbd206e8930281eb040cc8c549641455892b9eb5",
  "patch_info": {
    "commit_hash": "bbd206e8930281eb040cc8c549641455892b9eb5",
    "repo": "usememos/memos",
    "commit_url": "https://github.com/usememos/memos/commit/bbd206e8930281eb040cc8c549641455892b9eb5",
    "files": [
      "internal/jobs/presign_link.go",
      "server/integration/telegram.go",
      "server/route/api/v1/auth.go",
      "server/route/api/v1/common.go",
      "server/route/api/v1/docs.go",
      "server/route/api/v1/http_getter.go",
      "server/route/api/v1/jwt.go",
      "server/route/api/v1/memo.go",
      "server/route/api/v1/memo_organizer.go",
      "server/route/api/v1/memo_relation.go",
      "server/route/api/v1/resource.go",
      "server/route/api/v1/storage.go",
      "server/route/api/v1/swagger.md",
      "server/route/api/v1/swagger.yaml",
      "server/route/api/v1/system.go",
      "server/route/api/v1/system_setting.go",
      "server/route/api/v1/tag.go",
      "server/route/api/v1/tag_test.go",
      "server/route/api/v1/user.go",
      "server/route/api/v1/v1.go",
      "server/route/api/v2/storage_service.go",
      "server/server.go"
    ],
    "message": "chore: retire legacy api",
    "before_after_code_files": [
      "internal/jobs/presign_link.go||internal/jobs/presign_link.go",
      "server/integration/telegram.go||server/integration/telegram.go",
      "server/route/api/v1/auth.go||server/route/api/v1/auth.go",
      "server/route/api/v1/common.go||server/route/api/v1/common.go",
      "server/route/api/v1/docs.go||server/route/api/v1/docs.go",
      "server/route/api/v1/http_getter.go||server/route/api/v1/http_getter.go",
      "server/route/api/v1/jwt.go||server/route/api/v1/jwt.go",
      "server/route/api/v1/memo.go||server/route/api/v1/memo.go",
      "server/route/api/v1/memo_organizer.go||server/route/api/v1/memo_organizer.go",
      "server/route/api/v1/memo_relation.go||server/route/api/v1/memo_relation.go",
      "server/route/api/v1/resource.go||server/route/api/v1/resource.go",
      "server/route/api/v1/storage.go||server/route/api/v1/storage.go",
      "server/route/api/v1/system.go||server/route/api/v1/system.go",
      "server/route/api/v1/system_setting.go||server/route/api/v1/system_setting.go",
      "server/route/api/v1/tag.go||server/route/api/v1/tag.go",
      "server/route/api/v1/tag_test.go||server/route/api/v1/tag_test.go",
      "server/route/api/v1/user.go||server/route/api/v1/user.go",
      "server/route/api/v1/v1.go||server/route/api/v1/v1.go",
      "server/route/api/v2/storage_service.go||server/route/api/v2/storage_service.go",
      "server/server.go||server/server.go"
    ]
  },
  "patch_diff": {
    "internal/jobs/presign_link.go||internal/jobs/presign_link.go": [
      "File: internal/jobs/presign_link.go -> internal/jobs/presign_link.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: import (",
      "4:  \"context\"",
      "6:  \"log/slog\"",
      "7:  \"strings\"",
      "8:  \"time\"",
      "",
      "[Removed Lines]",
      "5:  \"encoding/json\"",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "10:  \"github.com/pkg/errors\"",
      "12:  \"github.com/usememos/memos/plugin/storage/s3\"",
      "14:  \"github.com/usememos/memos/store\"",
      "15: )",
      "",
      "[Removed Lines]",
      "13:  apiv1 \"github.com/usememos/memos/server/route/api/v1\"",
      "",
      "[Added Lines]",
      "12:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
      "13:  storepb \"github.com/usememos/memos/proto/gen/store\"",
      "14:  apiv2 \"github.com/usememos/memos/server/route/api/v2\"",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "97: func findObjectStorage(ctx context.Context, dataStore *store.Store) (*s3.Client, error) {",
      "99:  if err != nil {",
      "101:  }",
      "109:  }",
      "111:  if err != nil {",
      "113:  }",
      "115:  if storage == nil {",
      "117:  }",
      "124:   return nil, nil",
      "125:  }",
      "128:  return s3.NewClient(ctx, &s3.Config{",
      "129:   AccessKey: s3Config.AccessKey,",
      "130:   SecretKey: s3Config.SecretKey,",
      "131:   EndPoint:  s3Config.EndPoint,",
      "132:   Region:    s3Config.Region,",
      "133:   Bucket:    s3Config.Bucket,",
      "136:   PreSign:   s3Config.PreSign,",
      "137:  })",
      "138: }",
      "",
      "[Removed Lines]",
      "98:  systemSettingStorageServiceID, err := dataStore.GetWorkspaceSetting(ctx, &store.FindWorkspaceSetting{Name: apiv1.SystemSettingStorageServiceIDName.String()})",
      "100:   return nil, errors.Wrap(err, \"Failed to find SystemSettingStorageServiceIDName\")",
      "103:  storageServiceID := apiv1.DefaultStorage",
      "104:  if systemSettingStorageServiceID != nil {",
      "105:   err = json.Unmarshal([]byte(systemSettingStorageServiceID.Value), &storageServiceID)",
      "106:   if err != nil {",
      "107:    return nil, errors.Wrap(err, \"Failed to unmarshal storage service id\")",
      "108:   }",
      "110:  storage, err := dataStore.GetStorage(ctx, &store.FindStorage{ID: &storageServiceID})",
      "112:   return nil, errors.Wrap(err, \"Failed to find StorageServiceID\")",
      "116:   return nil, nil // storage not configured - not an error, just return empty ref",
      "118:  storageMessage, err := apiv1.ConvertStorageFromStore(storage)",
      "120:  if err != nil {",
      "121:   return nil, errors.Wrap(err, \"Failed to ConvertStorageFromStore\")",
      "122:  }",
      "123:  if storageMessage.Type != apiv1.StorageS3 {",
      "127:  s3Config := storageMessage.Config.S3Config",
      "134:   URLPrefix: s3Config.URLPrefix,",
      "135:   URLSuffix: s3Config.URLSuffix,",
      "",
      "[Added Lines]",
      "99:  workspaceStorageSetting, err := dataStore.GetWorkspaceStorageSetting(ctx)",
      "101:   return nil, errors.Wrap(err, \"Failed to find workspaceStorageSetting\")",
      "103:  if workspaceStorageSetting.StorageType != storepb.WorkspaceStorageSetting_STORAGE_TYPE_EXTERNAL || workspaceStorageSetting.ActivedExternalStorageId == nil {",
      "104:   return nil, nil",
      "106:  storage, err := dataStore.GetStorageV1(ctx, &store.FindStorage{ID: workspaceStorageSetting.ActivedExternalStorageId})",
      "108:   return nil, errors.Wrap(err, \"Failed to find storage\")",
      "111:   return nil, nil",
      "114:  storageMessage := apiv2.ConvertStorageFromStore(storage)",
      "115:  if storageMessage.Type != apiv2pb.Storage_S3 {",
      "119:  s3Config := storageMessage.Config.GetS3Config()",
      "126:   URLPrefix: s3Config.UrlPrefix,",
      "127:   URLSuffix: s3Config.UrlSuffix,",
      "",
      "---------------"
    ],
    "server/integration/telegram.go||server/integration/telegram.go": [
      "File: server/integration/telegram.go -> server/integration/telegram.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: package integration",
      "3: import (",
      "5:  \"context\"",
      "6:  \"fmt\"",
      "7:  \"path/filepath\"",
      "",
      "[Removed Lines]",
      "4:  \"bytes\"",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "19:  \"github.com/usememos/memos/plugin/telegram\"",
      "20:  \"github.com/usememos/memos/plugin/webhook\"",
      "21:  storepb \"github.com/usememos/memos/proto/gen/store\"",
      "23:  apiv2 \"github.com/usememos/memos/server/route/api/v2\"",
      "24:  \"github.com/usememos/memos/store\"",
      "25: )",
      "",
      "[Removed Lines]",
      "22:  apiv1 \"github.com/usememos/memos/server/route/api/v1\"",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "126:    Type:      attachment.GetMimeType(),",
      "127:    Size:      attachment.FileSize,",
      "128:    MemoID:    &memoMessage.ID,",
      "129:   }",
      "132:   if err != nil {",
      "133:    _, err := bot.EditMessage(ctx, message.Chat.ID, reply.MessageID, fmt.Sprintf(\"Failed to SaveResourceBlob: %s\", err), nil)",
      "134:    return err",
      "",
      "[Removed Lines]",
      "131:   err := apiv1.SaveResourceBlob(ctx, t.store, &create, bytes.NewReader(attachment.Data))",
      "",
      "[Added Lines]",
      "127:    Blob:      attachment.Data,",
      "130:   err := apiv2.SaveResourceBlob(ctx, t.store, &create)",
      "",
      "---------------"
    ],
    "server/route/api/v1/auth.go||server/route/api/v1/auth.go": [
      "File: server/route/api/v1/auth.go -> server/route/api/v1/auth.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/common.go||server/route/api/v1/common.go": [
      "File: server/route/api/v1/common.go -> server/route/api/v1/common.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/docs.go||server/route/api/v1/docs.go": [
      "File: server/route/api/v1/docs.go -> server/route/api/v1/docs.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/http_getter.go||server/route/api/v1/http_getter.go": [
      "File: server/route/api/v1/http_getter.go -> server/route/api/v1/http_getter.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/jwt.go||server/route/api/v1/jwt.go": [
      "File: server/route/api/v1/jwt.go -> server/route/api/v1/jwt.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/memo.go||server/route/api/v1/memo.go": [
      "File: server/route/api/v1/memo.go -> server/route/api/v1/memo.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/memo_organizer.go||server/route/api/v1/memo_organizer.go": [
      "File: server/route/api/v1/memo_organizer.go -> server/route/api/v1/memo_organizer.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/memo_relation.go||server/route/api/v1/memo_relation.go": [
      "File: server/route/api/v1/memo_relation.go -> server/route/api/v1/memo_relation.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/resource.go||server/route/api/v1/resource.go": [
      "File: server/route/api/v1/resource.go -> server/route/api/v1/resource.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/storage.go||server/route/api/v1/storage.go": [
      "File: server/route/api/v1/storage.go -> server/route/api/v1/storage.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/system.go||server/route/api/v1/system.go": [
      "File: server/route/api/v1/system.go -> server/route/api/v1/system.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/system_setting.go||server/route/api/v1/system_setting.go": [
      "File: server/route/api/v1/system_setting.go -> server/route/api/v1/system_setting.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/tag.go||server/route/api/v1/tag.go": [
      "File: server/route/api/v1/tag.go -> server/route/api/v1/tag.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/tag_test.go||server/route/api/v1/tag_test.go": [
      "File: server/route/api/v1/tag_test.go -> server/route/api/v1/tag_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/user.go||server/route/api/v1/user.go": [
      "File: server/route/api/v1/user.go -> server/route/api/v1/user.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/v1.go||server/route/api/v1/v1.go": [
      "File: server/route/api/v1/v1.go -> server/route/api/v1/v1.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v2/storage_service.go||server/route/api/v2/storage_service.go": [
      "File: server/route/api/v2/storage_service.go -> server/route/api/v2/storage_service.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "25:   return nil, status.Errorf(codes.Internal, \"failed to create storage, error: %+v\", err)",
      "26:  }",
      "27:  return &apiv2pb.CreateStorageResponse{",
      "29:  }, nil",
      "30: }",
      "",
      "[Removed Lines]",
      "28:   Storage: convertStorageFromStore(storage),",
      "",
      "[Added Lines]",
      "28:   Storage: ConvertStorageFromStore(storage),",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "39:   Storages: []*apiv2pb.Storage{},",
      "40:  }",
      "41:  for _, storage := range storages {",
      "43:  }",
      "44:  return response, nil",
      "45: }",
      "",
      "[Removed Lines]",
      "42:   response.Storages = append(response.Storages, convertStorageFromStore(storage))",
      "",
      "[Added Lines]",
      "42:   response.Storages = append(response.Storages, ConvertStorageFromStore(storage))",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "55:   return nil, status.Errorf(codes.NotFound, \"storage not found\")",
      "56:  }",
      "57:  return &apiv2pb.GetStorageResponse{",
      "59:  }, nil",
      "60: }",
      "",
      "[Removed Lines]",
      "58:   Storage: convertStorageFromStore(storage),",
      "",
      "[Added Lines]",
      "58:   Storage: ConvertStorageFromStore(storage),",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "82:   return nil, status.Errorf(codes.Internal, \"failed to update storage, error: %+v\", err)",
      "83:  }",
      "84:  return &apiv2pb.UpdateStorageResponse{",
      "86:  }, nil",
      "87: }",
      "",
      "[Removed Lines]",
      "85:   Storage: convertStorageFromStore(storage),",
      "",
      "[Added Lines]",
      "85:   Storage: ConvertStorageFromStore(storage),",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "96:  return &apiv2pb.DeleteStorageResponse{}, nil",
      "97: }",
      "100:  temp := &apiv2pb.Storage{",
      "101:   Id:    storage.Id,",
      "102:   Title: storage.Name,",
      "",
      "[Removed Lines]",
      "99: func convertStorageFromStore(storage *storepb.Storage) *apiv2pb.Storage {",
      "",
      "[Added Lines]",
      "99: func ConvertStorageFromStore(storage *storepb.Storage) *apiv2pb.Storage {",
      "",
      "---------------"
    ],
    "server/server.go||server/server.go": [
      "File: server/server.go -> server/server.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "15:  storepb \"github.com/usememos/memos/proto/gen/store\"",
      "16:  \"github.com/usememos/memos/server/integration\"",
      "17:  \"github.com/usememos/memos/server/profile\"",
      "19:  apiv2 \"github.com/usememos/memos/server/route/api/v2\"",
      "20:  \"github.com/usememos/memos/server/route/frontend\"",
      "21:  versionchecker \"github.com/usememos/memos/server/service/version_checker\"",
      "",
      "[Removed Lines]",
      "18:  apiv1 \"github.com/usememos/memos/server/route/api/v1\"",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "75:   frontendService.Serve(ctx, e)",
      "76:  }",
      "83:  apiV2Service := apiv2.NewAPIV2Service(s.Secret, profile, store, s.Profile.Port+1)",
      "85:  if err := apiV2Service.RegisterGateway(ctx, e); err != nil {",
      "",
      "[Removed Lines]",
      "79:  rootGroup := e.Group(\"\")",
      "80:  apiV1Service := apiv1.NewAPIV1Service(s.Secret, profile, store, s.telegramBot)",
      "81:  apiV1Service.Register(rootGroup)",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "89ba2a65405c81e71b214a242b8cc3ef90cf20f6",
      "candidate_info": {
        "commit_hash": "89ba2a65405c81e71b214a242b8cc3ef90cf20f6",
        "repo": "usememos/memos",
        "commit_url": "https://github.com/usememos/memos/commit/89ba2a65405c81e71b214a242b8cc3ef90cf20f6",
        "files": [
          "api/v2/gw_mux.go",
          "api/v2/tag_service.go",
          "api/v2/v2.go",
          "go.mod",
          "go.sum",
          "proto/api/v2/tag_service.proto",
          "proto/apiv2/tag_service.proto",
          "proto/buf.gen.yaml",
          "proto/buf.lock",
          "proto/buf.yaml",
          "proto/gen/api/v2/tag_service.pb.go",
          "proto/gen/api/v2/tag_service.pb.gw.go",
          "proto/gen/api/v2/tag_service_grpc.pb.go",
          "proto/gen/apiv2/apiv2connect/tag_service.connect.go",
          "proto/gen/apiv2/tag_service.pb.go",
          "proto/gen/apiv2/tag_service_grpc.pb.go",
          "server/server.go"
        ],
        "message": "feat: implement part of tag service (#2051)\n\n* feat: add grpc gateway tempalte\n\n* chore: update\n\n* chore: move directory\n\n* chore: update",
        "before_after_code_files": [
          "api/v2/gw_mux.go||api/v2/gw_mux.go",
          "api/v2/tag_service.go||api/v2/tag_service.go",
          "api/v2/v2.go||api/v2/v2.go",
          "go.mod||go.mod",
          "go.sum||go.sum",
          "proto/api/v2/tag_service.proto||proto/api/v2/tag_service.proto",
          "proto/apiv2/tag_service.proto||proto/apiv2/tag_service.proto",
          "proto/buf.lock||proto/buf.lock",
          "proto/gen/apiv2/tag_service.pb.go||proto/gen/api/v2/tag_service.pb.go",
          "proto/gen/api/v2/tag_service.pb.gw.go||proto/gen/api/v2/tag_service.pb.gw.go",
          "proto/gen/apiv2/tag_service_grpc.pb.go||proto/gen/api/v2/tag_service_grpc.pb.go",
          "proto/gen/apiv2/apiv2connect/tag_service.connect.go||proto/gen/apiv2/apiv2connect/tag_service.connect.go",
          "server/server.go||server/server.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "server/server.go||server/server.go"
          ],
          "candidate": [
            "server/server.go||server/server.go"
          ]
        }
      },
      "candidate_diff": {
        "api/v2/gw_mux.go||api/v2/gw_mux.go": [
          "File: api/v2/gw_mux.go -> api/v2/gw_mux.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package v2",
          "3: import (",
          "4:  \"context\"",
          "5:  \"fmt\"",
          "7:  grpcRuntime \"github.com/grpc-ecosystem/grpc-gateway/v2/runtime\"",
          "8:  \"github.com/labstack/echo/v4\"",
          "9:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "10:  \"google.golang.org/grpc\"",
          "11:  \"google.golang.org/grpc/credentials/insecure\"",
          "12: )",
          "15: func RegisterGateway(ctx context.Context, e *echo.Echo, grpcServerPort int) {",
          "18:  conn, err := grpc.DialContext(",
          "19:   ctx,",
          "20:   fmt.Sprintf(\":%d\", grpcServerPort),",
          "21:   grpc.WithTransportCredentials(insecure.NewCredentials()),",
          "22:  )",
          "23:  if err != nil {",
          "24:   panic(err)",
          "25:  }",
          "27:  gwMux := grpcRuntime.NewServeMux()",
          "28:  err = apiv2pb.RegisterTagServiceHandler(context.Background(), gwMux, conn)",
          "29:  if err != nil {",
          "30:   panic(err)",
          "31:  }",
          "32:  e.Any(\"/api/v2/*\", echo.WrapHandler(gwMux))",
          "33: }",
          "",
          "---------------"
        ],
        "api/v2/tag_service.go||api/v2/tag_service.go": [
          "File: api/v2/tag_service.go -> api/v2/tag_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package v2",
          "3: import (",
          "4:  \"context\"",
          "6:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "7:  \"github.com/usememos/memos/store\"",
          "8:  \"google.golang.org/grpc/codes\"",
          "9:  \"google.golang.org/grpc/status\"",
          "10: )",
          "12: type TagService struct {",
          "13:  apiv2pb.UnimplementedTagServiceServer",
          "15:  Store *store.Store",
          "16: }",
          "19: func NewTagService(store *store.Store) *TagService {",
          "20:  return &TagService{",
          "21:   Store: store,",
          "22:  }",
          "23: }",
          "25: func (s *TagService) ListTags(ctx context.Context, request *apiv2pb.ListTagsRequest) (*apiv2pb.ListTagsResponse, error) {",
          "26:  tags, err := s.Store.ListTags(ctx, &store.FindTag{",
          "27:   CreatorID: int(request.CreatorId),",
          "28:  })",
          "29:  if err != nil {",
          "30:   return nil, status.Errorf(codes.Internal, \"failed to list tags: %v\", err)",
          "31:  }",
          "33:  response := &apiv2pb.ListTagsResponse{}",
          "34:  for _, tag := range tags {",
          "35:   response.Tags = append(response.Tags, convertTagFromStore(tag))",
          "36:  }",
          "38:  return response, nil",
          "39: }",
          "41: func convertTagFromStore(tag *store.Tag) *apiv2pb.Tag {",
          "42:  return &apiv2pb.Tag{",
          "43:   Name:      tag.Name,",
          "44:   CreatorId: int32(tag.CreatorID),",
          "45:  }",
          "46: }",
          "",
          "---------------"
        ],
        "api/v2/v2.go||api/v2/v2.go": [
          "File: api/v2/v2.go -> api/v2/v2.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package v2",
          "",
          "---------------"
        ],
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:  github.com/aws/aws-sdk-go-v2/credentials v1.13.12",
          "11:  github.com/aws/aws-sdk-go-v2/feature/s3/manager v1.11.51",
          "12:  github.com/aws/aws-sdk-go-v2/service/s3 v1.30.3",
          "14:  github.com/disintegration/imaging v1.6.2",
          "15:  github.com/google/uuid v1.3.0",
          "16:  github.com/gorilla/feeds v1.1.1",
          "17:  github.com/labstack/echo/v4 v4.9.0",
          "18:  github.com/pkg/errors v0.9.1",
          "19:  github.com/spf13/cobra v1.6.1",
          "",
          "[Removed Lines]",
          "13:  github.com/bufbuild/connect-go v1.10.0",
          "",
          "[Added Lines]",
          "16:  github.com/grpc-ecosystem/grpc-gateway/v2 v2.16.2",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "21:  github.com/stretchr/testify v1.8.1",
          "22:  github.com/yuin/goldmark v1.5.4",
          "23:  go.uber.org/zap v1.24.0",
          "25:  golang.org/x/exp v0.0.0-20230111222715-75897c7a292a",
          "26:  golang.org/x/mod v0.8.0",
          "30:  modernc.org/sqlite v1.24.0",
          "31: )",
          "",
          "[Removed Lines]",
          "24:  golang.org/x/crypto v0.1.0",
          "27:  golang.org/x/net v0.7.0",
          "28:  golang.org/x/oauth2 v0.5.0",
          "29:  google.golang.org/grpc v1.52.0",
          "",
          "[Added Lines]",
          "24:  golang.org/x/crypto v0.11.0",
          "27:  golang.org/x/net v0.12.0",
          "28:  golang.org/x/oauth2 v0.10.0",
          "29:  google.golang.org/genproto/googleapis/api v0.0.0-20230726155614-23370e0ffb3e",
          "30:  google.golang.org/grpc v1.57.0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "34:  github.com/dustin/go-humanize v1.0.1 // indirect",
          "35:  github.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51 // indirect",
          "36:  github.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec // indirect",
          "37:  golang.org/x/image v0.7.0 // indirect",
          "38:  golang.org/x/tools v0.6.0 // indirect",
          "40:  lukechampine.com/uint128 v1.2.0 // indirect",
          "41:  modernc.org/cc/v3 v3.40.0 // indirect",
          "42:  modernc.org/ccgo/v3 v3.16.13 // indirect",
          "",
          "[Removed Lines]",
          "39:  google.golang.org/genproto v0.0.0-20221227171554-f9683d7f8bef // indirect",
          "",
          "[Added Lines]",
          "38:  github.com/rogpeppe/go-internal v1.9.0 // indirect",
          "41:  google.golang.org/genproto v0.0.0-20230706204954-ccb25ca9f130 // indirect",
          "42:  google.golang.org/genproto/googleapis/rpc v0.0.0-20230726155614-23370e0ffb3e // indirect",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "67:  github.com/fsnotify/fsnotify v1.6.0 // indirect",
          "68:  github.com/golang-jwt/jwt v3.2.2+incompatible // indirect",
          "69:  github.com/golang-jwt/jwt/v4 v4.5.0",
          "71:  github.com/hashicorp/hcl v1.0.0 // indirect",
          "72:  github.com/inconshreveable/mousetrap v1.0.1 // indirect",
          "73:  github.com/jmespath/go-jmespath v0.4.0 // indirect",
          "75:  github.com/labstack/gommon v0.3.1 // indirect",
          "76:  github.com/magiconair/properties v1.8.7 // indirect",
          "77:  github.com/mattn/go-colorable v0.1.12 // indirect",
          "",
          "[Removed Lines]",
          "70:  github.com/golang/protobuf v1.5.2 // indirect",
          "74:  github.com/kr/pretty v0.3.1 // indirect",
          "",
          "[Added Lines]",
          "73:  github.com/golang/protobuf v1.5.3 // indirect",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "88:  github.com/valyala/fasttemplate v1.2.1 // indirect",
          "89:  go.uber.org/atomic v1.9.0 // indirect",
          "90:  go.uber.org/multierr v1.8.0 // indirect",
          "93:  golang.org/x/time v0.1.0 // indirect",
          "94:  google.golang.org/appengine v1.6.7 // indirect",
          "95:  google.golang.org/protobuf v1.31.0",
          "97:  gopkg.in/ini.v1 v1.67.0 // indirect",
          "98:  gopkg.in/yaml.v3 v3.0.1 // indirect",
          "99: )",
          "",
          "[Removed Lines]",
          "91:  golang.org/x/sys v0.5.0 // indirect",
          "92:  golang.org/x/text v0.9.0 // indirect",
          "96:  gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c // indirect",
          "",
          "[Added Lines]",
          "93:  golang.org/x/sys v0.10.0 // indirect",
          "94:  golang.org/x/text v0.11.0 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "83: github.com/aws/smithy-go v1.13.5 h1:hgz0X/DX0dGqTYpGALqXJoRKRj5oQ7150i5FdTePzO8=",
          "84: github.com/aws/smithy-go v1.13.5/go.mod h1:Tg+OJXh4MB2R/uN61Ko2f6hTZwB/ZYGOtib8J3gBHzA=",
          "85: github.com/benbjohnson/clock v1.1.0 h1:Q92kusRqC1XV2MjkWETPvjJVqKetz1OzxZB7mHJLju8=",
          "88: github.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=",
          "89: github.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=",
          "90: github.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=",
          "",
          "[Removed Lines]",
          "86: github.com/bufbuild/connect-go v1.10.0 h1:QAJ3G9A1OYQW2Jbk3DeoJbkCxuKArrvZgDt47mjdTbg=",
          "87: github.com/bufbuild/connect-go v1.10.0/go.mod h1:CAIePUgkDR5pAFaylSMtNK45ANQjp9JvpluG20rhpV8=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94: github.com/cncf/udpa/go v0.0.0-20200629203442-efcf912fb354/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=",
          "95: github.com/cncf/udpa/go v0.0.0-20201120205902-5459f2c99403/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=",
          "96: github.com/cpuguy83/go-md2man/v2 v2.0.2/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=",
          "98: github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=",
          "99: github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=",
          "100: github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=",
          "",
          "[Removed Lines]",
          "97: github.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "120: github.com/golang-jwt/jwt/v4 v4.5.0 h1:7cYmW1XlMY7h7ii7UhUyChSgS5wUJEnm9uZVTGqOWzg=",
          "121: github.com/golang-jwt/jwt/v4 v4.5.0/go.mod h1:m21LjoU+eqJr34lmDMbreY2eSTRJ1cv77w39/MY0Ch0=",
          "122: github.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=",
          "123: github.com/golang/groupcache v0.0.0-20190702054246-869f871628b6/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=",
          "124: github.com/golang/groupcache v0.0.0-20191227052852-215e87163ea7/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=",
          "125: github.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "120: github.com/golang/glog v1.1.0 h1:/d3pCKDPWNnvIWe0vVUpNP32qc8U3PDVxySP/y360qE=",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "145: github.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=",
          "146: github.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=",
          "147: github.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=",
          "150: github.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=",
          "151: github.com/google/btree v1.0.0/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=",
          "152: github.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=",
          "",
          "[Removed Lines]",
          "148: github.com/golang/protobuf v1.5.2 h1:ROPKBNFfQgOUMifHyP+KYbvpjbdoFNs+aK7DXlji0Tw=",
          "149: github.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=",
          "",
          "[Added Lines]",
          "146: github.com/golang/protobuf v1.5.3 h1:KhyjKVUg7Usr/dYsdSqoFveMYd5ko72D+zANwlG1mmg=",
          "147: github.com/golang/protobuf v1.5.3/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "184: github.com/googleapis/google-cloud-go-testing v0.0.0-20200911160855-bcd43fbb19e8/go.mod h1:dvDLG8qkwmyD9a/MJJN3XJcT3xFxOKAvTZGvuZmac9g=",
          "185: github.com/gorilla/feeds v1.1.1 h1:HwKXxqzcRNg9to+BbvJog4+f3s/xzvtZXICcQGutYfY=",
          "186: github.com/gorilla/feeds v1.1.1/go.mod h1:Nk0jZrvPFZX1OBe5NPiddPw7CfwF6Q9eqzaBbaightA=",
          "187: github.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=",
          "188: github.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=",
          "189: github.com/hashicorp/hcl v1.0.0 h1:0Anlzjpi4vEasTeNFn2mLJgTSwt0+6sfsiTG8qcWGx4=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "185: github.com/grpc-ecosystem/grpc-gateway/v2 v2.16.2 h1:dygLcbEBA+t/P7ck6a8AkXv6juQ4cK0RHBoh32jxhHM=",
          "186: github.com/grpc-ecosystem/grpc-gateway/v2 v2.16.2/go.mod h1:Ap9RLCIJVtgQg1/BBgVEfypOAySvvlcpcVQkSzJCH4Y=",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "206: github.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=",
          "207: github.com/kr/fs v0.1.0/go.mod h1:FFnZGqtBN9Gxj7eW1uZ42v5BccTP0vu6NEaFoC2HwRg=",
          "208: github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=",
          "210: github.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=",
          "212: github.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=",
          "213: github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=",
          "214: github.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=",
          "216: github.com/labstack/echo/v4 v4.9.0 h1:wPOF1CE6gvt/kmbMR4dGzWvHMPT+sAEUJOwOTtvITVY=",
          "217: github.com/labstack/echo/v4 v4.9.0/go.mod h1:xkCDAdFCIf8jsFQ5NnbK7oqaF/yU1A1X20Ltm0OvSks=",
          "218: github.com/labstack/gommon v0.3.1 h1:OomWaJXm7xR6L1HmEtGyQf26TEn7V6X88mktX9kee9o=",
          "",
          "[Removed Lines]",
          "209: github.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=",
          "211: github.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=",
          "215: github.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "234: github.com/onsi/gomega v1.9.0/go.mod h1:Ho0h+IUsWyvy1OpqCwxlQ/21gkhVunqlU8fDGcoTdcA=",
          "235: github.com/pelletier/go-toml/v2 v2.0.6 h1:nrzqCb7j9cDFj2coyLNLaZuJTLjWjlaz6nvTvIwycIU=",
          "236: github.com/pelletier/go-toml/v2 v2.0.6/go.mod h1:eumQOmlWiOPt5WriQQqoM5y18pDHwha2N+QD+EUNTek=",
          "238: github.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=",
          "239: github.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=",
          "240: github.com/pkg/sftp v1.13.1/go.mod h1:3HaPG6Dq1ILlpPZRO0HVMrsydcdLt6HRDccSgb87qRg=",
          "",
          "[Removed Lines]",
          "237: github.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "310: golang.org/x/crypto v0.0.0-20210421170649-83a5a9bb288b/go.mod h1:T9bdIzuCu7OtxOm1hfPfRQxPLYneinmdGuTeoZ9dtd4=",
          "311: golang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "312: golang.org/x/crypto v0.0.0-20211108221036-ceb1ce70b4fa/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "315: golang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=",
          "316: golang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=",
          "317: golang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=",
          "",
          "[Removed Lines]",
          "313: golang.org/x/crypto v0.1.0 h1:MDRAIl0xIo9Io2xV565hzXHw3zVseKrJKodhohM5CjU=",
          "314: golang.org/x/crypto v0.1.0/go.mod h1:RecgLatLF4+eUMCP1PoPZQb+cVrJcOPbHkTkbkB9sbw=",
          "",
          "[Added Lines]",
          "309: golang.org/x/crypto v0.11.0 h1:6Ewdq3tDic1mg5xRO4milcWCfMVQhI4NkqWWvqejpuA=",
          "310: golang.org/x/crypto v0.11.0/go.mod h1:xgJhtzW8F9jGdVFWZESrid1U1bjeNy4zgy5cRr/CIio=",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "387: golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=",
          "388: golang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=",
          "389: golang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=",
          "392: golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=",
          "393: golang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=",
          "394: golang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=",
          "",
          "[Removed Lines]",
          "390: golang.org/x/net v0.7.0 h1:rJrUqqhjsgNp7KqAIc25s9pZnjU7TUcSY7HcVZjdn1g=",
          "391: golang.org/x/net v0.7.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=",
          "",
          "[Added Lines]",
          "386: golang.org/x/net v0.12.0 h1:cfawfvKITfUsFCeJIHJrbSxpeu/E81khclypR0GVT50=",
          "387: golang.org/x/net v0.12.0/go.mod h1:zEVYFnQC7m/vmpQFELhcD1EWkZlX69l4oqgmer6hfKA=",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "398: golang.org/x/oauth2 v0.0.0-20201109201403-9fd604954f58/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=",
          "399: golang.org/x/oauth2 v0.0.0-20201208152858-08078c50e5b5/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=",
          "400: golang.org/x/oauth2 v0.0.0-20210218202405-ba52d332ba99/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=",
          "403: golang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "404: golang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "405: golang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "",
          "[Removed Lines]",
          "401: golang.org/x/oauth2 v0.5.0 h1:HuArIo48skDwlrvM3sEdHXElYslAMsf3KwRkkW4MC4s=",
          "402: golang.org/x/oauth2 v0.5.0/go.mod h1:9/XBHVqLaWO3/BRHs5jbpYCnOZVjj5V0ndyaAM7KB4I=",
          "",
          "[Added Lines]",
          "397: golang.org/x/oauth2 v0.10.0 h1:zHCpF2Khkwy4mMB4bv0U37YtJdTGW8jI0glAApi0Kh8=",
          "398: golang.org/x/oauth2 v0.10.0/go.mod h1:kTpgurOux7LqtuxjuyZa4Gj2gdezIt/jQtGnNFfypQI=",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "456: golang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "457: golang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "458: golang.org/x/sys v0.0.0-20220908164124-27713097b956/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "460: golang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "461: golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=",
          "462: golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=",
          "463: golang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=",
          "",
          "[Removed Lines]",
          "459: golang.org/x/sys v0.5.0 h1:MUK/U/4lj1t1oPg0HfuXDN/Z1wv31ZJ/YcPiGccS4DU=",
          "",
          "[Added Lines]",
          "456: golang.org/x/sys v0.10.0 h1:SqMFp9UcQJZa+pmYuAKjd9xq1f0j5rLcDIk0mj4qAsA=",
          "457: golang.org/x/sys v0.10.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "469: golang.org/x/text v0.3.4/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=",
          "470: golang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=",
          "471: golang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=",
          "473: golang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=",
          "474: golang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "475: golang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "476: golang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "",
          "[Removed Lines]",
          "472: golang.org/x/text v0.9.0 h1:2sjJmO8cDvYveuX97RDLsxlyUxLl+GHoLxBiRdHllBE=",
          "",
          "[Added Lines]",
          "470: golang.org/x/text v0.11.0 h1:LAntKIrcmeSKERyiOh0XMV39LXS8IE9UL2yP7+f5ij4=",
          "471: golang.org/x/text v0.11.0/go.mod h1:TvPlkZtksWOMsz7fbANvkp4WM8x/WCo/om8BMLbz+aE=",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "594: google.golang.org/genproto v0.0.0-20201214200347-8c77b98c765d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "595: google.golang.org/genproto v0.0.0-20210108203827-ffc7fda8c3d7/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "596: google.golang.org/genproto v0.0.0-20210226172003-ab064af71705/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "599: google.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=",
          "600: google.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=",
          "601: google.golang.org/grpc v1.21.1/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=",
          "",
          "[Removed Lines]",
          "597: google.golang.org/genproto v0.0.0-20221227171554-f9683d7f8bef h1:uQ2vjV/sHTsWSqdKeLqmwitzgvjMl7o4IdtHwUDXSJY=",
          "598: google.golang.org/genproto v0.0.0-20221227171554-f9683d7f8bef/go.mod h1:RGgjbofJ8xD9Sq1VVhDM1Vok1vRONV+rg+CjzG4SZKM=",
          "",
          "[Added Lines]",
          "595: google.golang.org/genproto v0.0.0-20230706204954-ccb25ca9f130 h1:Au6te5hbKUV8pIYWHqOUZ1pva5qK/rwbIhoXEUB9Lu8=",
          "596: google.golang.org/genproto v0.0.0-20230706204954-ccb25ca9f130/go.mod h1:O9kGHb51iE/nOGvQaDUuadVYqovW56s5emA88lQnj6Y=",
          "597: google.golang.org/genproto/googleapis/api v0.0.0-20230726155614-23370e0ffb3e h1:z3vDksarJxsAKM5dmEGv0GHwE2hKJ096wZra71Vs4sw=",
          "598: google.golang.org/genproto/googleapis/api v0.0.0-20230726155614-23370e0ffb3e/go.mod h1:rsr7RhLuwsDKL7RmgDDCUc6yaGr1iqceVb5Wv6f6YvQ=",
          "599: google.golang.org/genproto/googleapis/rpc v0.0.0-20230726155614-23370e0ffb3e h1:S83+ibolgyZ0bqz7KEsUOPErxcv4VzlszxY+31OfB/E=",
          "600: google.golang.org/genproto/googleapis/rpc v0.0.0-20230726155614-23370e0ffb3e/go.mod h1:TUfxEVdsvPg18p6AslUXFoLdpED4oBnGwyqk3dV1XzM=",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "612: google.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=",
          "613: google.golang.org/grpc v1.34.0/go.mod h1:WotjhfgOW/POjDeRt8vscBtXq+2VjORFy659qA51WJ8=",
          "614: google.golang.org/grpc v1.35.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=",
          "617: google.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=",
          "618: google.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=",
          "619: google.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=",
          "",
          "[Removed Lines]",
          "615: google.golang.org/grpc v1.52.0 h1:kd48UiU7EHsV4rnLyOJRuP/Il/UHE7gdDAQ+SZI7nZk=",
          "616: google.golang.org/grpc v1.52.0/go.mod h1:pu6fVzoFb+NBYNAvQL08ic+lvB2IojljRYuun5vorUY=",
          "",
          "[Added Lines]",
          "617: google.golang.org/grpc v1.57.0 h1:kfzNeI/klCGD2YPMUlaGNT3pxvYfga7smW3Vth8Zsiw=",
          "618: google.golang.org/grpc v1.57.0/go.mod h1:Sd+9RMTACXwmub0zcNY2c4arhtrbBYD1AUHI/dt16Mo=",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "631: gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "632: gopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "633: gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=",
          "635: gopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=",
          "636: gopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=",
          "637: gopkg.in/ini.v1 v1.67.0 h1:Dgnx+6+nfE+IfzjUEISNeydPJh9AXNNsWbGP9KzCsOA=",
          "",
          "[Removed Lines]",
          "634: gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "proto/api/v2/tag_service.proto||proto/api/v2/tag_service.proto": [
          "File: proto/api/v2/tag_service.proto -> proto/api/v2/tag_service.proto",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: syntax = \"proto3\";",
          "3: package memos.api.v2;",
          "5: import \"google/api/annotations.proto\";",
          "7: option go_package = \"gen/api/v2\";",
          "9: service TagService {",
          "10:   rpc ListTags(ListTagsRequest) returns (ListTagsResponse) {",
          "11:     option (google.api.http) = {get: \"/api/v2/tags\"};",
          "12:   }",
          "13: }",
          "15: message Tag {",
          "16:   string name = 1;",
          "17:   int32 creator_id = 2;",
          "18: }",
          "20: message ListTagsRequest {",
          "21:   int32 creator_id = 1;",
          "22: }",
          "24: message ListTagsResponse {",
          "25:   repeated Tag tags = 1;",
          "26: }",
          "",
          "---------------"
        ],
        "proto/apiv2/tag_service.proto||proto/apiv2/tag_service.proto": [
          "File: proto/apiv2/tag_service.proto -> proto/apiv2/tag_service.proto",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "proto/buf.lock||proto/buf.lock": [
          "File: proto/buf.lock -> proto/buf.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # Generated by buf. DO NOT EDIT.",
          "2: version: v1",
          "3: deps:",
          "4:   - remote: buf.build",
          "5:     owner: googleapis",
          "6:     repository: googleapis",
          "7:     commit: 711e289f6a384c4caeebaff7c6931ade",
          "8:     digest: shake256:e08fb55dad7469f69df00304eed31427d2d1576e9aab31e6bf86642688e04caaf0372f15fe6974cf79432779a635b3ea401ca69c943976dc42749524e4c25d94",
          "9:   - remote: buf.build",
          "10:     owner: grpc-ecosystem",
          "11:     repository: grpc-gateway",
          "12:     commit: fed2dcdcfd694403ad51cd3c94957830",
          "13:     digest: shake256:ed076a21e3d772892fc465ced0e4dd50f9dba86fdd4473920eaa25efa4807644e8e021be423dcfcee74bf4242e7e57422393f9b1abb10acb18ea1a5df509bb19",
          "",
          "---------------"
        ],
        "proto/gen/apiv2/tag_service.pb.go||proto/gen/api/v2/tag_service.pb.go": [
          "File: proto/gen/apiv2/tag_service.pb.go -> proto/gen/api/v2/tag_service.pb.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: package apiv2",
          "9: import (",
          "10:  protoreflect \"google.golang.org/protobuf/reflect/protoreflect\"",
          "11:  protoimpl \"google.golang.org/protobuf/runtime/protoimpl\"",
          "12:  reflect \"reflect\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10:  _ \"google.golang.org/genproto/googleapis/api/annotations\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32: func (x *Tag) Reset() {",
          "34:  if protoimpl.UnsafeEnabled {",
          "36:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "37:   ms.StoreMessageInfo(mi)",
          "38:  }",
          "",
          "[Removed Lines]",
          "35:   mi := &file_apiv2_tag_service_proto_msgTypes[0]",
          "",
          "[Added Lines]",
          "36:   mi := &file_api_v2_tag_service_proto_msgTypes[0]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "45: func (*Tag) ProtoMessage() {}",
          "47: func (x *Tag) ProtoReflect() protoreflect.Message {",
          "49:  if protoimpl.UnsafeEnabled && x != nil {",
          "50:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "51:   if ms.LoadMessageInfo() == nil {",
          "",
          "[Removed Lines]",
          "48:  mi := &file_apiv2_tag_service_proto_msgTypes[0]",
          "",
          "[Added Lines]",
          "49:  mi := &file_api_v2_tag_service_proto_msgTypes[0]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "60: func (*Tag) Descriptor() ([]byte, []int) {",
          "62: }",
          "64: func (x *Tag) GetName() string {",
          "",
          "[Removed Lines]",
          "61:  return file_apiv2_tag_service_proto_rawDescGZIP(), []int{0}",
          "",
          "[Added Lines]",
          "62:  return file_api_v2_tag_service_proto_rawDescGZIP(), []int{0}",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "86: func (x *ListTagsRequest) Reset() {",
          "88:  if protoimpl.UnsafeEnabled {",
          "90:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "91:   ms.StoreMessageInfo(mi)",
          "92:  }",
          "",
          "[Removed Lines]",
          "89:   mi := &file_apiv2_tag_service_proto_msgTypes[1]",
          "",
          "[Added Lines]",
          "90:   mi := &file_api_v2_tag_service_proto_msgTypes[1]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "99: func (*ListTagsRequest) ProtoMessage() {}",
          "101: func (x *ListTagsRequest) ProtoReflect() protoreflect.Message {",
          "103:  if protoimpl.UnsafeEnabled && x != nil {",
          "104:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "105:   if ms.LoadMessageInfo() == nil {",
          "",
          "[Removed Lines]",
          "102:  mi := &file_apiv2_tag_service_proto_msgTypes[1]",
          "",
          "[Added Lines]",
          "103:  mi := &file_api_v2_tag_service_proto_msgTypes[1]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "114: func (*ListTagsRequest) Descriptor() ([]byte, []int) {",
          "116: }",
          "118: func (x *ListTagsRequest) GetCreatorId() int32 {",
          "",
          "[Removed Lines]",
          "115:  return file_apiv2_tag_service_proto_rawDescGZIP(), []int{1}",
          "",
          "[Added Lines]",
          "116:  return file_api_v2_tag_service_proto_rawDescGZIP(), []int{1}",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "133: func (x *ListTagsResponse) Reset() {",
          "135:  if protoimpl.UnsafeEnabled {",
          "137:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "138:   ms.StoreMessageInfo(mi)",
          "139:  }",
          "",
          "[Removed Lines]",
          "136:   mi := &file_apiv2_tag_service_proto_msgTypes[2]",
          "",
          "[Added Lines]",
          "137:   mi := &file_api_v2_tag_service_proto_msgTypes[2]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "146: func (*ListTagsResponse) ProtoMessage() {}",
          "148: func (x *ListTagsResponse) ProtoReflect() protoreflect.Message {",
          "150:  if protoimpl.UnsafeEnabled && x != nil {",
          "151:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "152:   if ms.LoadMessageInfo() == nil {",
          "",
          "[Removed Lines]",
          "149:  mi := &file_apiv2_tag_service_proto_msgTypes[2]",
          "",
          "[Added Lines]",
          "150:  mi := &file_api_v2_tag_service_proto_msgTypes[2]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "161: func (*ListTagsResponse) Descriptor() ([]byte, []int) {",
          "163: }",
          "165: func (x *ListTagsResponse) GetTags() []*Tag {",
          "",
          "[Removed Lines]",
          "162:  return file_apiv2_tag_service_proto_rawDescGZIP(), []int{2}",
          "",
          "[Added Lines]",
          "163:  return file_api_v2_tag_service_proto_rawDescGZIP(), []int{2}",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "169:  return nil",
          "170: }",
          "178:  0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,",
          "179:  0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,",
          "180:  0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64,",
          "181:  0x22, 0x30, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,",
          "182:  0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69,",
          "183:  0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,",
          "204: }",
          "206: var (",
          "209: )",
          "214:  })",
          "216: }",
          "223: }",
          "228:  2, // [2:3] is the sub-list for method output_type",
          "229:  1, // [1:2] is the sub-list for method input_type",
          "230:  1, // [1:1] is the sub-list for extension type_name",
          "",
          "[Removed Lines]",
          "172: var File_apiv2_tag_service_proto protoreflect.FileDescriptor",
          "174: var file_apiv2_tag_service_proto_rawDesc = []byte{",
          "175:  0x0a, 0x17, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x74, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76,",
          "176:  0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x73,",
          "177:  0x2e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x22, 0x38, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a,",
          "184:  0x49, 0x64, 0x22, 0x38, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65,",
          "185:  0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01,",
          "186:  0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69,",
          "187:  0x76, 0x32, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x32, 0x55, 0x0a, 0x0a,",
          "188:  0x54, 0x61, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x4c, 0x69,",
          "189:  0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61,",
          "190:  0x70, 0x69, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71,",
          "191:  0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69,",
          "192:  0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,",
          "193:  0x6e, 0x73, 0x65, 0x42, 0x9a, 0x01, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x6d, 0x6f,",
          "194:  0x73, 0x2e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x42, 0x0f, 0x54, 0x61, 0x67, 0x53, 0x65, 0x72, 0x76,",
          "195:  0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68,",
          "196:  0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x73, 0x65, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2f,",
          "197:  0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f,",
          "198:  0x61, 0x70, 0x69, 0x76, 0x32, 0xa2, 0x02, 0x03, 0x4d, 0x41, 0x58, 0xaa, 0x02, 0x0b, 0x4d, 0x65,",
          "199:  0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x76, 0x32, 0xca, 0x02, 0x0b, 0x4d, 0x65, 0x6d, 0x6f,",
          "200:  0x73, 0x5c, 0x41, 0x70, 0x69, 0x76, 0x32, 0xe2, 0x02, 0x17, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x5c,",
          "201:  0x41, 0x70, 0x69, 0x76, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,",
          "202:  0x61, 0xea, 0x02, 0x0c, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x76, 0x32,",
          "203:  0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,",
          "207:  file_apiv2_tag_service_proto_rawDescOnce sync.Once",
          "208:  file_apiv2_tag_service_proto_rawDescData = file_apiv2_tag_service_proto_rawDesc",
          "211: func file_apiv2_tag_service_proto_rawDescGZIP() []byte {",
          "212:  file_apiv2_tag_service_proto_rawDescOnce.Do(func() {",
          "213:   file_apiv2_tag_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_apiv2_tag_service_proto_rawDescData)",
          "215:  return file_apiv2_tag_service_proto_rawDescData",
          "218: var file_apiv2_tag_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)",
          "219: var file_apiv2_tag_service_proto_goTypes = []interface{}{",
          "220:  (*Tag)(nil),              // 0: memos.apiv2.Tag",
          "221:  (*ListTagsRequest)(nil),  // 1: memos.apiv2.ListTagsRequest",
          "222:  (*ListTagsResponse)(nil), // 2: memos.apiv2.ListTagsResponse",
          "224: var file_apiv2_tag_service_proto_depIdxs = []int32{",
          "225:  0, // 0: memos.apiv2.ListTagsResponse.tags:type_name -> memos.apiv2.Tag",
          "226:  1, // 1: memos.apiv2.TagService.ListTags:input_type -> memos.apiv2.ListTagsRequest",
          "227:  2, // 2: memos.apiv2.TagService.ListTags:output_type -> memos.apiv2.ListTagsResponse",
          "",
          "[Added Lines]",
          "173: var File_api_v2_tag_service_proto protoreflect.FileDescriptor",
          "175: var file_api_v2_tag_service_proto_rawDesc = []byte{",
          "176:  0x0a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x74, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72,",
          "177:  0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6d, 0x65, 0x6d, 0x6f,",
          "178:  0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,",
          "179:  0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,",
          "180:  0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x38, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a,",
          "187:  0x49, 0x64, 0x22, 0x39, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65,",
          "188:  0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01,",
          "189:  0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69,",
          "190:  0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x32, 0x6d, 0x0a,",
          "191:  0x0a, 0x54, 0x61, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5f, 0x0a, 0x08, 0x4c,",
          "192:  0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1d, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e,",
          "193:  0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52,",
          "194:  0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61,",
          "195:  0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65,",
          "196:  0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c,",
          "197:  0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x74, 0x61, 0x67, 0x73, 0x42, 0xa7, 0x01, 0x0a,",
          "198:  0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,",
          "199:  0x32, 0x42, 0x0f, 0x54, 0x61, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f,",
          "200:  0x74, 0x6f, 0x50, 0x01, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,",
          "201:  0x2f, 0x75, 0x73, 0x65, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2f, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2f,",
          "202:  0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32,",
          "203:  0x3b, 0x61, 0x70, 0x69, 0x76, 0x32, 0xa2, 0x02, 0x03, 0x4d, 0x41, 0x58, 0xaa, 0x02, 0x0c, 0x4d,",
          "204:  0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x0c, 0x4d, 0x65,",
          "205:  0x6d, 0x6f, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x18, 0x4d, 0x65, 0x6d,",
          "206:  0x6f, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,",
          "207:  0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x3a, 0x3a, 0x41,",
          "208:  0x70, 0x69, 0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,",
          "212:  file_api_v2_tag_service_proto_rawDescOnce sync.Once",
          "213:  file_api_v2_tag_service_proto_rawDescData = file_api_v2_tag_service_proto_rawDesc",
          "216: func file_api_v2_tag_service_proto_rawDescGZIP() []byte {",
          "217:  file_api_v2_tag_service_proto_rawDescOnce.Do(func() {",
          "218:   file_api_v2_tag_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v2_tag_service_proto_rawDescData)",
          "220:  return file_api_v2_tag_service_proto_rawDescData",
          "223: var file_api_v2_tag_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)",
          "224: var file_api_v2_tag_service_proto_goTypes = []interface{}{",
          "225:  (*Tag)(nil),              // 0: memos.api.v2.Tag",
          "226:  (*ListTagsRequest)(nil),  // 1: memos.api.v2.ListTagsRequest",
          "227:  (*ListTagsResponse)(nil), // 2: memos.api.v2.ListTagsResponse",
          "229: var file_api_v2_tag_service_proto_depIdxs = []int32{",
          "230:  0, // 0: memos.api.v2.ListTagsResponse.tags:type_name -> memos.api.v2.Tag",
          "231:  1, // 1: memos.api.v2.TagService.ListTags:input_type -> memos.api.v2.ListTagsRequest",
          "232:  2, // 2: memos.api.v2.TagService.ListTags:output_type -> memos.api.v2.ListTagsResponse",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "232:  0, // [0:1] is the sub-list for field type_name",
          "233: }",
          "238:   return",
          "239:  }",
          "240:  if !protoimpl.UnsafeEnabled {",
          "242:    switch v := v.(*Tag); i {",
          "243:    case 0:",
          "244:     return &v.state",
          "",
          "[Removed Lines]",
          "235: func init() { file_apiv2_tag_service_proto_init() }",
          "236: func file_apiv2_tag_service_proto_init() {",
          "237:  if File_apiv2_tag_service_proto != nil {",
          "241:   file_apiv2_tag_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {",
          "",
          "[Added Lines]",
          "240: func init() { file_api_v2_tag_service_proto_init() }",
          "241: func file_api_v2_tag_service_proto_init() {",
          "242:  if File_api_v2_tag_service_proto != nil {",
          "246:   file_api_v2_tag_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "250:     return nil",
          "251:    }",
          "252:   }",
          "254:    switch v := v.(*ListTagsRequest); i {",
          "255:    case 0:",
          "256:     return &v.state",
          "",
          "[Removed Lines]",
          "253:   file_apiv2_tag_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {",
          "",
          "[Added Lines]",
          "258:   file_api_v2_tag_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "262:     return nil",
          "263:    }",
          "264:   }",
          "266:    switch v := v.(*ListTagsResponse); i {",
          "267:    case 0:",
          "268:     return &v.state",
          "",
          "[Removed Lines]",
          "265:   file_apiv2_tag_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {",
          "",
          "[Added Lines]",
          "270:   file_api_v2_tag_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "279:  out := protoimpl.TypeBuilder{",
          "280:   File: protoimpl.DescBuilder{",
          "281:    GoPackagePath: reflect.TypeOf(x{}).PkgPath(),",
          "283:    NumEnums:      0,",
          "284:    NumMessages:   3,",
          "285:    NumExtensions: 0,",
          "286:    NumServices:   1,",
          "287:   },",
          "291:  }.Build()",
          "296: }",
          "",
          "[Removed Lines]",
          "282:    RawDescriptor: file_apiv2_tag_service_proto_rawDesc,",
          "288:   GoTypes:           file_apiv2_tag_service_proto_goTypes,",
          "289:   DependencyIndexes: file_apiv2_tag_service_proto_depIdxs,",
          "290:   MessageInfos:      file_apiv2_tag_service_proto_msgTypes,",
          "292:  File_apiv2_tag_service_proto = out.File",
          "293:  file_apiv2_tag_service_proto_rawDesc = nil",
          "294:  file_apiv2_tag_service_proto_goTypes = nil",
          "295:  file_apiv2_tag_service_proto_depIdxs = nil",
          "",
          "[Added Lines]",
          "287:    RawDescriptor: file_api_v2_tag_service_proto_rawDesc,",
          "293:   GoTypes:           file_api_v2_tag_service_proto_goTypes,",
          "294:   DependencyIndexes: file_api_v2_tag_service_proto_depIdxs,",
          "295:   MessageInfos:      file_api_v2_tag_service_proto_msgTypes,",
          "297:  File_api_v2_tag_service_proto = out.File",
          "298:  file_api_v2_tag_service_proto_rawDesc = nil",
          "299:  file_api_v2_tag_service_proto_goTypes = nil",
          "300:  file_api_v2_tag_service_proto_depIdxs = nil",
          "",
          "---------------"
        ],
        "proto/gen/api/v2/tag_service.pb.gw.go||proto/gen/api/v2/tag_service.pb.gw.go": [
          "File: proto/gen/api/v2/tag_service.pb.gw.go -> proto/gen/api/v2/tag_service.pb.gw.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: Package apiv2 is a reverse proxy.",
          "7: It translates gRPC into RESTful JSON APIs.",
          "9: package apiv2",
          "11: import (",
          "12:  \"context\"",
          "13:  \"io\"",
          "14:  \"net/http\"",
          "16:  \"github.com/grpc-ecosystem/grpc-gateway/v2/runtime\"",
          "17:  \"github.com/grpc-ecosystem/grpc-gateway/v2/utilities\"",
          "18:  \"google.golang.org/grpc\"",
          "19:  \"google.golang.org/grpc/codes\"",
          "20:  \"google.golang.org/grpc/grpclog\"",
          "21:  \"google.golang.org/grpc/metadata\"",
          "22:  \"google.golang.org/grpc/status\"",
          "23:  \"google.golang.org/protobuf/proto\"",
          "24: )",
          "27: var _ codes.Code",
          "28: var _ io.Reader",
          "29: var _ status.Status",
          "30: var _ = runtime.String",
          "31: var _ = utilities.NewDoubleArray",
          "32: var _ = metadata.Join",
          "34: var (",
          "35:  filter_TagService_ListTags_0 = &utilities.DoubleArray{Encoding: map[string]int{}, Base: []int(nil), Check: []int(nil)}",
          "36: )",
          "38: func request_TagService_ListTags_0(ctx context.Context, marshaler runtime.Marshaler, client TagServiceClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "39:  var protoReq ListTagsRequest",
          "40:  var metadata runtime.ServerMetadata",
          "42:  if err := req.ParseForm(); err != nil {",
          "43:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "44:  }",
          "45:  if err := runtime.PopulateQueryParameters(&protoReq, req.Form, filter_TagService_ListTags_0); err != nil {",
          "46:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "47:  }",
          "49:  msg, err := client.ListTags(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))",
          "50:  return msg, metadata, err",
          "52: }",
          "54: func local_request_TagService_ListTags_0(ctx context.Context, marshaler runtime.Marshaler, server TagServiceServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "55:  var protoReq ListTagsRequest",
          "56:  var metadata runtime.ServerMetadata",
          "58:  if err := req.ParseForm(); err != nil {",
          "59:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "60:  }",
          "61:  if err := runtime.PopulateQueryParameters(&protoReq, req.Form, filter_TagService_ListTags_0); err != nil {",
          "62:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "63:  }",
          "65:  msg, err := server.ListTags(ctx, &protoReq)",
          "66:  return msg, metadata, err",
          "68: }",
          "74: func RegisterTagServiceHandlerServer(ctx context.Context, mux *runtime.ServeMux, server TagServiceServer) error {",
          "76:  mux.Handle(\"GET\", pattern_TagService_ListTags_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "77:   ctx, cancel := context.WithCancel(req.Context())",
          "78:   defer cancel()",
          "79:   var stream runtime.ServerTransportStream",
          "80:   ctx = grpc.NewContextWithServerTransportStream(ctx, &stream)",
          "81:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "82:   var err error",
          "83:   var annotatedContext context.Context",
          "84:   annotatedContext, err = runtime.AnnotateIncomingContext(ctx, mux, req, \"/memos.api.v2.TagService/ListTags\", runtime.WithHTTPPathPattern(\"/api/v2/tags\"))",
          "85:   if err != nil {",
          "86:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "87:    return",
          "88:   }",
          "89:   resp, md, err := local_request_TagService_ListTags_0(annotatedContext, inboundMarshaler, server, req, pathParams)",
          "90:   md.HeaderMD, md.TrailerMD = metadata.Join(md.HeaderMD, stream.Header()), metadata.Join(md.TrailerMD, stream.Trailer())",
          "91:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "92:   if err != nil {",
          "93:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "94:    return",
          "95:   }",
          "97:   forward_TagService_ListTags_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "99:  })",
          "101:  return nil",
          "102: }",
          "106: func RegisterTagServiceHandlerFromEndpoint(ctx context.Context, mux *runtime.ServeMux, endpoint string, opts []grpc.DialOption) (err error) {",
          "107:  conn, err := grpc.DialContext(ctx, endpoint, opts...)",
          "108:  if err != nil {",
          "109:   return err",
          "110:  }",
          "111:  defer func() {",
          "112:   if err != nil {",
          "113:    if cerr := conn.Close(); cerr != nil {",
          "114:     grpclog.Infof(\"Failed to close conn to %s: %v\", endpoint, cerr)",
          "115:    }",
          "116:    return",
          "117:   }",
          "118:   go func() {",
          "119:    <-ctx.Done()",
          "120:    if cerr := conn.Close(); cerr != nil {",
          "121:     grpclog.Infof(\"Failed to close conn to %s: %v\", endpoint, cerr)",
          "122:    }",
          "123:   }()",
          "124:  }()",
          "126:  return RegisterTagServiceHandler(ctx, mux, conn)",
          "127: }",
          "131: func RegisterTagServiceHandler(ctx context.Context, mux *runtime.ServeMux, conn *grpc.ClientConn) error {",
          "132:  return RegisterTagServiceHandlerClient(ctx, mux, NewTagServiceClient(conn))",
          "133: }",
          "140: func RegisterTagServiceHandlerClient(ctx context.Context, mux *runtime.ServeMux, client TagServiceClient) error {",
          "142:  mux.Handle(\"GET\", pattern_TagService_ListTags_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "143:   ctx, cancel := context.WithCancel(req.Context())",
          "144:   defer cancel()",
          "145:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "146:   var err error",
          "147:   var annotatedContext context.Context",
          "148:   annotatedContext, err = runtime.AnnotateContext(ctx, mux, req, \"/memos.api.v2.TagService/ListTags\", runtime.WithHTTPPathPattern(\"/api/v2/tags\"))",
          "149:   if err != nil {",
          "150:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "151:    return",
          "152:   }",
          "153:   resp, md, err := request_TagService_ListTags_0(annotatedContext, inboundMarshaler, client, req, pathParams)",
          "154:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "155:   if err != nil {",
          "156:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "157:    return",
          "158:   }",
          "160:   forward_TagService_ListTags_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "162:  })",
          "164:  return nil",
          "165: }",
          "167: var (",
          "168:  pattern_TagService_ListTags_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{\"api\", \"v2\", \"tags\"}, \"\"))",
          "169: )",
          "171: var (",
          "172:  forward_TagService_ListTags_0 = runtime.ForwardResponseMessage",
          "173: )",
          "",
          "---------------"
        ],
        "proto/gen/apiv2/tag_service_grpc.pb.go||proto/gen/api/v2/tag_service_grpc.pb.go": [
          "File: proto/gen/apiv2/tag_service_grpc.pb.go -> proto/gen/api/v2/tag_service_grpc.pb.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: const _ = grpc.SupportPackageIsVersion7",
          "21: const (",
          "23: )",
          "",
          "[Removed Lines]",
          "22:  TagService_ListTags_FullMethodName = \"/memos.apiv2.TagService/ListTags\"",
          "",
          "[Added Lines]",
          "22:  TagService_ListTags_FullMethodName = \"/memos.api.v2.TagService/ListTags\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "98: var TagService_ServiceDesc = grpc.ServiceDesc{",
          "100:  HandlerType: (*TagServiceServer)(nil),",
          "101:  Methods: []grpc.MethodDesc{",
          "102:   {",
          "",
          "[Removed Lines]",
          "99:  ServiceName: \"memos.apiv2.TagService\",",
          "",
          "[Added Lines]",
          "99:  ServiceName: \"memos.api.v2.TagService\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "105:   },",
          "106:  },",
          "107:  Streams:  []grpc.StreamDesc{},",
          "109: }",
          "",
          "[Removed Lines]",
          "108:  Metadata: \"apiv2/tag_service.proto\",",
          "",
          "[Added Lines]",
          "108:  Metadata: \"api/v2/tag_service.proto\",",
          "",
          "---------------"
        ],
        "proto/gen/apiv2/apiv2connect/tag_service.connect.go||proto/gen/apiv2/apiv2connect/tag_service.connect.go": [
          "File: proto/gen/apiv2/apiv2connect/tag_service.connect.go -> proto/gen/apiv2/apiv2connect/tag_service.connect.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "server/server.go||server/server.go": [
          "File: server/server.go -> server/server.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:  \"context\"",
          "5:  \"encoding/json\"",
          "6:  \"fmt\"",
          "7:  \"net/http\"",
          "8:  \"time\"",
          "10:  \"github.com/google/uuid\"",
          "11:  \"github.com/pkg/errors\"",
          "12:  apiv1 \"github.com/usememos/memos/api/v1\"",
          "13:  \"github.com/usememos/memos/common/util\"",
          "14:  \"github.com/usememos/memos/plugin/telegram\"",
          "15:  \"github.com/usememos/memos/server/profile\"",
          "16:  \"github.com/usememos/memos/store\"",
          "20: )",
          "22: type Server struct {",
          "25:  ID      string",
          "26:  Secret  string",
          "",
          "[Removed Lines]",
          "18:  \"github.com/labstack/echo/v4\"",
          "19:  \"github.com/labstack/echo/v4/middleware\"",
          "23:  e *echo.Echo",
          "",
          "[Added Lines]",
          "7:  \"net\"",
          "12:  \"github.com/labstack/echo/v4\"",
          "13:  \"github.com/labstack/echo/v4/middleware\"",
          "16:  apiv2 \"github.com/usememos/memos/api/v2\"",
          "17:  \"github.com/usememos/memos/common/log\"",
          "20:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "23:  \"go.uber.org/zap\"",
          "24:  \"google.golang.org/grpc\"",
          "28:  e          *echo.Echo",
          "29:  grpcServer *grpc.Server",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94:  apiV1Service := apiv1.NewAPIV1Service(s.Secret, profile, store)",
          "95:  apiV1Service.Register(rootGroup)",
          "97:  return s, nil",
          "98: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "104:  s.grpcServer = grpc.NewServer()",
          "105:  apiv2pb.RegisterTagServiceServer(s.grpcServer, apiv2.NewTagService(store))",
          "108:  apiv2.RegisterGateway(ctx, e, s.Profile.Port+1)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "105:  go s.telegramBot.Start(ctx)",
          "106:  go autoBackup(ctx, s.Store)",
          "108:  return s.e.Start(fmt.Sprintf(\":%d\", s.Profile.Port))",
          "109: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "122:  listen, err := net.Listen(\"tcp\", fmt.Sprintf(\":%d\", s.Profile.Port+1))",
          "123:  if err != nil {",
          "124:   return err",
          "125:  }",
          "126:  go func() {",
          "127:   if err := s.grpcServer.Serve(listen); err != nil {",
          "128:    log.Error(\"grpc server listen error\", zap.Error(err))",
          "129:   }",
          "130:  }()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fa17dce04638dc05b2283afe6bd4db2a840f9e16",
      "candidate_info": {
        "commit_hash": "fa17dce04638dc05b2283afe6bd4db2a840f9e16",
        "repo": "usememos/memos",
        "commit_url": "https://github.com/usememos/memos/commit/fa17dce04638dc05b2283afe6bd4db2a840f9e16",
        "files": [
          "api/v1/resource.go",
          "api/v1/storage.go",
          "api/v1/swagger.yaml",
          "bin/memos/main.go",
          "docs/api/v1.md",
          "internal/jobs/presign_link.go",
          "plugin/storage/s3/s3.go",
          "store/db/mysql/resource.go",
          "store/db/postgres/resource.go",
          "store/db/sqlite/resource.go",
          "store/resource.go",
          "web/src/components/CreateStorageServiceDialog.tsx",
          "web/src/locales/en.json",
          "web/src/locales/ru.json",
          "web/src/types/modules/storage.d.ts"
        ],
        "message": "feat: pre-signed URL for S3 storage (#2855)\n\nAdds automatically background refresh of all external links if they are belongs to the current blob (S3) storage. The feature is disabled by default in order to keep backward compatibility.\n\nThe background go-routine spawns once during startup and periodically signs and updates external links if that links belongs to current S3 storage.\n\nThe original idea was to sign external links on-demand, however, with current architecture it will require duplicated code in plenty of places. If do it, the changes will be quite invasive and in the end pointless: I believe, the architecture will be eventually updated to give more scalable way for pluggable storage. For example - Upload/Download interface without hard dependency on external link. There are stubs already, but I don't feel confident enough to change significant part of the application architecture.",
        "before_after_code_files": [
          "api/v1/resource.go||api/v1/resource.go",
          "api/v1/storage.go||api/v1/storage.go",
          "bin/memos/main.go||bin/memos/main.go",
          "internal/jobs/presign_link.go||internal/jobs/presign_link.go",
          "plugin/storage/s3/s3.go||plugin/storage/s3/s3.go",
          "store/db/mysql/resource.go||store/dmysql/resource.go",
          "store/db/postgres/resource.go||store/dpostgres/resource.go",
          "store/db/sqlite/resource.go||store/dsqlite/resource.go",
          "store/resource.go||store/resource.go",
          "web/src/components/CreateStorageServiceDialog.tsx||wesrc/components/CreateStorageServiceDialog.tsx",
          "web/src/types/modules/storage.d.ts||wesrc/types/modules/storage.d.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "internal/jobs/presign_link.go||internal/jobs/presign_link.go"
          ],
          "candidate": [
            "internal/jobs/presign_link.go||internal/jobs/presign_link.go"
          ]
        }
      },
      "candidate_diff": {
        "api/v1/resource.go||api/v1/resource.go": [
          "File: api/v1/resource.go -> api/v1/resource.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "480:   Bucket:    s3Config.Bucket,",
          "481:   URLPrefix: s3Config.URLPrefix,",
          "482:   URLSuffix: s3Config.URLSuffix,",
          "483:  })",
          "484:  if err != nil {",
          "485:   return errors.Wrap(err, \"Failed to create s3 client\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "483:   PreSign:   s3Config.PreSign,",
          "",
          "---------------"
        ],
        "api/v1/storage.go||api/v1/storage.go": [
          "File: api/v1/storage.go -> api/v1/storage.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:  Bucket    string `json:\"bucket\"`",
          "44:  URLPrefix string `json:\"urlPrefix\"`",
          "45:  URLSuffix string `json:\"urlSuffix\"`",
          "46: }",
          "48: type Storage struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46:  PreSign   bool   `json:\"presign\"`",
          "",
          "---------------"
        ],
        "bin/memos/main.go||bin/memos/main.go": [
          "File: bin/memos/main.go -> bin/memos/main.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:  \"github.com/spf13/viper\"",
          "13:  \"go.uber.org/zap\"",
          "15:  \"github.com/usememos/memos/internal/log\"",
          "16:  \"github.com/usememos/memos/server\"",
          "17:  _profile \"github.com/usememos/memos/server/profile\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15:  \"github.com/usememos/memos/internal/jobs\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "92:    printGreetings()",
          "94:    if err := s.Start(ctx); err != nil {",
          "95:     if err != http.ErrServerClosed {",
          "96:      log.Error(\"failed to start server\", zap.Error(err))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:    go jobs.RunPreSignLinks(ctx, storeInstance)",
          "",
          "---------------"
        ],
        "internal/jobs/presign_link.go||internal/jobs/presign_link.go": [
          "File: internal/jobs/presign_link.go -> internal/jobs/presign_link.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package jobs",
          "3: import (",
          "4:  \"context\"",
          "5:  \"encoding/json\"",
          "6:  \"strings\"",
          "7:  \"time\"",
          "9:  \"github.com/pkg/errors\"",
          "10:  \"go.uber.org/zap\"",
          "12:  apiv1 \"github.com/usememos/memos/api/v1\"",
          "13:  \"github.com/usememos/memos/internal/log\"",
          "14:  \"github.com/usememos/memos/plugin/storage/s3\"",
          "15:  \"github.com/usememos/memos/store\"",
          "16: )",
          "20: func RunPreSignLinks(ctx context.Context, dataStore *store.Store) {",
          "21:  for {",
          "22:   started := time.Now()",
          "23:   if err := signExternalLinks(ctx, dataStore); err != nil {",
          "24:    log.Warn(\"failed sign external links\", zap.Error(err))",
          "25:   } else {",
          "26:    log.Info(\"links pre-signed\", zap.Duration(\"duration\", time.Since(started)))",
          "27:   }",
          "28:   select {",
          "29:   case <-time.After(s3.LinkLifetime / 2):",
          "30:   case <-ctx.Done():",
          "31:    return",
          "32:   }",
          "33:  }",
          "34: }",
          "36: func signExternalLinks(ctx context.Context, dataStore *store.Store) error {",
          "37:  const pageSize = 32",
          "39:  objectStore, err := findObjectStorage(ctx, dataStore)",
          "40:  if err != nil {",
          "41:   return errors.Wrapf(err, \"find object storage\")",
          "42:  }",
          "43:  if objectStore == nil || !objectStore.Config.PreSign {",
          "45:   return nil",
          "46:  }",
          "48:  var offset int",
          "49:  var limit = pageSize",
          "50:  for {",
          "51:   resources, err := dataStore.ListResources(ctx, &store.FindResource{",
          "52:    GetBlob: false,",
          "53:    Limit:   &limit,",
          "54:    Offset:  &offset,",
          "55:   })",
          "56:   if err != nil {",
          "57:    return errors.Wrapf(err, \"list resources, offset %d\", offset)",
          "58:   }",
          "60:   for _, res := range resources {",
          "61:    if res.ExternalLink == \"\" {",
          "63:     continue",
          "64:    }",
          "65:    if strings.Contains(res.ExternalLink, \"?\") && time.Since(time.Unix(res.UpdatedTs, 0)) < s3.LinkLifetime/2 {",
          "68:     continue",
          "69:    }",
          "70:    newLink, err := objectStore.PreSignLink(ctx, res.ExternalLink)",
          "71:    if err != nil {",
          "72:     log.Warn(\"failed pre-sign link\", zap.Int32(\"resource\", res.ID), zap.String(\"link\", res.ExternalLink), zap.Error(err))",
          "73:     continue // do not fail - we may want update left over links too",
          "74:    }",
          "75:    now := time.Now().Unix()",
          "77:    _, err = dataStore.UpdateResource(ctx, &store.UpdateResource{",
          "78:     ID:           res.ID,",
          "79:     UpdatedTs:    &now,",
          "80:     ExternalLink: &newLink,",
          "81:    })",
          "82:    if err != nil {",
          "84:     return errors.Wrapf(err, \"update resource %d link to %q\", res.ID, newLink)",
          "85:    }",
          "86:   }",
          "88:   offset += limit",
          "89:   if len(resources) < limit {",
          "90:    break",
          "91:   }",
          "92:  }",
          "93:  return nil",
          "94: }",
          "99: func findObjectStorage(ctx context.Context, dataStore *store.Store) (*s3.Client, error) {",
          "100:  systemSettingStorageServiceID, err := dataStore.GetSystemSetting(ctx, &store.FindSystemSetting{Name: apiv1.SystemSettingStorageServiceIDName.String()})",
          "101:  if err != nil {",
          "102:   return nil, errors.Wrap(err, \"Failed to find SystemSettingStorageServiceIDName\")",
          "103:  }",
          "105:  storageServiceID := apiv1.DefaultStorage",
          "106:  if systemSettingStorageServiceID != nil {",
          "107:   err = json.Unmarshal([]byte(systemSettingStorageServiceID.Value), &storageServiceID)",
          "108:   if err != nil {",
          "109:    return nil, errors.Wrap(err, \"Failed to unmarshal storage service id\")",
          "110:   }",
          "111:  }",
          "112:  storage, err := dataStore.GetStorage(ctx, &store.FindStorage{ID: &storageServiceID})",
          "113:  if err != nil {",
          "114:   return nil, errors.Wrap(err, \"Failed to find StorageServiceID\")",
          "115:  }",
          "117:  if storage == nil {",
          "118:   return nil, nil // storage not configured - not an error, just return empty ref",
          "119:  }",
          "120:  storageMessage, err := apiv1.ConvertStorageFromStore(storage)",
          "122:  if err != nil {",
          "123:   return nil, errors.Wrap(err, \"Failed to ConvertStorageFromStore\")",
          "124:  }",
          "125:  if storageMessage.Type != apiv1.StorageS3 {",
          "126:   return nil, nil",
          "127:  }",
          "129:  s3Config := storageMessage.Config.S3Config",
          "130:  return s3.NewClient(ctx, &s3.Config{",
          "131:   AccessKey: s3Config.AccessKey,",
          "132:   SecretKey: s3Config.SecretKey,",
          "133:   EndPoint:  s3Config.EndPoint,",
          "134:   Region:    s3Config.Region,",
          "135:   Bucket:    s3Config.Bucket,",
          "136:   URLPrefix: s3Config.URLPrefix,",
          "137:   URLSuffix: s3Config.URLSuffix,",
          "138:   PreSign:   s3Config.PreSign,",
          "139:  })",
          "140: }",
          "",
          "---------------"
        ],
        "plugin/storage/s3/s3.go||plugin/storage/s3/s3.go": [
          "File: plugin/storage/s3/s3.go -> plugin/storage/s3/s3.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  \"io\"",
          "8:  \"net/url\"",
          "9:  \"strings\"",
          "11:  \"github.com/aws/aws-sdk-go-v2/aws\"",
          "12:  s3config \"github.com/aws/aws-sdk-go-v2/config\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10:  \"time\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "14:  \"github.com/aws/aws-sdk-go-v2/feature/s3/manager\"",
          "15:  awss3 \"github.com/aws/aws-sdk-go-v2/service/s3\"",
          "16:  \"github.com/aws/aws-sdk-go-v2/service/s3/types\"",
          "17: )",
          "19: type Config struct {",
          "20:  AccessKey string",
          "21:  SecretKey string",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18:  errors2 \"github.com/pkg/errors\"",
          "21: const LinkLifetime = 24 * time.Hour",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "24:  Region    string",
          "25:  URLPrefix string",
          "26:  URLSuffix string",
          "27: }",
          "29: type Client struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31:  PreSign   bool",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "93:  if link == \"\" {",
          "94:   return \"\", errors.New(\"failed to get file link\")",
          "95:  }",
          "96:  return link, nil",
          "97: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101:  if client.Config.PreSign {",
          "102:   return client.PreSignLink(ctx, link)",
          "103:  }",
          "110: func (client *Client) PreSignLink(ctx context.Context, sourceLink string) (string, error) {",
          "111:  u, err := url.Parse(sourceLink)",
          "112:  if err != nil {",
          "113:   return \"\", errors2.Wrapf(err, \"parse URL\")",
          "114:  }",
          "117:  if client.Config.EndPoint != \"\" && !strings.Contains(client.Config.EndPoint, u.Hostname()) {",
          "118:   return sourceLink, nil",
          "119:  }",
          "121:  filename := u.Path",
          "122:  if prefixLen := len(client.Config.URLPrefix); len(filename) >= prefixLen {",
          "123:   filename = filename[prefixLen:]",
          "124:  }",
          "125:  if suffixLen := len(client.Config.URLSuffix); len(filename) >= suffixLen {",
          "126:   filename = filename[:len(filename)-suffixLen]",
          "127:  }",
          "128:  filename = strings.Trim(filename, \"/\")",
          "129:  if strings.HasPrefix(filename, client.Config.Bucket) {",
          "130:   filename = strings.Trim(filename[len(client.Config.Bucket):], \"/\")",
          "131:  }",
          "133:  req, err := awss3.NewPresignClient(client.Client).PresignGetObject(ctx, &awss3.GetObjectInput{",
          "134:   Bucket: aws.String(client.Config.Bucket),",
          "135:   Key:    aws.String(filename),",
          "136:  }, awss3.WithPresignExpires(LinkLifetime))",
          "137:  if err != nil {",
          "138:   return \"\", errors2.Wrapf(err, \"pre-sign link\")",
          "139:  }",
          "140:  return req.URL, nil",
          "141: }",
          "",
          "---------------"
        ],
        "store/db/mysql/resource.go||store/dmysql/resource.go": [
          "File: store/db/mysql/resource.go -> store/dmysql/resource.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "133:  if v := update.InternalPath; v != nil {",
          "134:   set, args = append(set, \"`internal_path` = ?\"), append(args, *v)",
          "135:  }",
          "136:  if v := update.MemoID; v != nil {",
          "137:   set, args = append(set, \"`memo_id` = ?\"), append(args, *v)",
          "138:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "store/db/postgres/resource.go||store/dpostgres/resource.go": [
          "File: store/db/postgres/resource.go -> store/dpostgres/resource.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "118:  if v := update.InternalPath; v != nil {",
          "119:   set, args = append(set, \"internal_path = \"+placeholder(len(args)+1)), append(args, *v)",
          "120:  }",
          "121:  if v := update.MemoID; v != nil {",
          "122:   set, args = append(set, \"memo_id = \"+placeholder(len(args)+1)), append(args, *v)",
          "123:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "store/db/sqlite/resource.go||store/dsqlite/resource.go": [
          "File: store/db/sqlite/resource.go -> store/dsqlite/resource.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:  if v := update.InternalPath; v != nil {",
          "115:   set, args = append(set, \"`internal_path` = ?\"), append(args, *v)",
          "116:  }",
          "117:  if v := update.MemoID; v != nil {",
          "118:   set, args = append(set, \"`memo_id` = ?\"), append(args, *v)",
          "119:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "store/resource.go||store/resource.go": [
          "File: store/resource.go -> store/resource.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:  UpdatedTs    *int64",
          "54:  Filename     *string",
          "55:  InternalPath *string",
          "56:  MemoID       *int32",
          "57:  Blob         []byte",
          "58: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56:  ExternalLink *string",
          "",
          "---------------"
        ],
        "web/src/components/CreateStorageServiceDialog.tsx||wesrc/components/CreateStorageServiceDialog.tsx": [
          "File: web/src/components/CreateStorageServiceDialog.tsx -> wesrc/components/CreateStorageServiceDialog.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import { toast } from \"react-hot-toast\";",
          "4: import * as api from \"@/helpers/api\";",
          "5: import { useTranslate } from \"@/utils/i18n\";",
          "",
          "[Removed Lines]",
          "1: import { Button, IconButton, Input, Typography } from \"@mui/joy\";",
          "2: import { useEffect, useState } from \"react\";",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29:     bucket: \"\",",
          "30:     urlPrefix: \"\",",
          "31:     urlSuffix: \"\",",
          "32:   });",
          "33:   const isCreating = storage === undefined;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "220:           onChange={(e) => setPartialS3Config({ urlSuffix: e.target.value })}",
          "221:           fullWidth",
          "222:         />",
          "223:         <div className=\"mt-2 w-full flex flex-row justify-end items-center space-x-1\">",
          "224:           <Button variant=\"plain\" color=\"neutral\" onClick={handleCloseBtnClick}>",
          "225:             {t(\"common.cancel\")}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "web/src/types/modules/storage.d.ts||wesrc/types/modules/storage.d.ts": [
          "File: web/src/types/modules/storage.d.ts -> wesrc/types/modules/storage.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:   bucket: string;",
          "12:   urlPrefix: string;",
          "13:   urlSuffix: string;",
          "14: }",
          "16: interface StorageConfig {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "470fe1df49fada90364a95d2df482470efa95629",
      "candidate_info": {
        "commit_hash": "470fe1df49fada90364a95d2df482470efa95629",
        "repo": "usememos/memos",
        "commit_url": "https://github.com/usememos/memos/commit/470fe1df49fada90364a95d2df482470efa95629",
        "files": [
          "api/v2/common.go",
          "api/v2/gw_mux.go",
          "api/v2/user_service.go",
          "api/v2/v2.go",
          "proto/api/v2/common.proto",
          "proto/api/v2/user_service.proto",
          "proto/buf.yaml",
          "proto/gen/api/v2/README.md",
          "proto/gen/api/v2/common.pb.go",
          "proto/gen/api/v2/user_service.pb.go",
          "proto/gen/api/v2/user_service.pb.gw.go",
          "proto/gen/api/v2/user_service_grpc.pb.go",
          "proto/gen/store/README.md",
          "proto/gen/store/tag.pb.go",
          "proto/store/tag.proto",
          "server/server.go"
        ],
        "message": "feat: implement part of user service (#2053)\n\n* feat: implement part of user service\n\n* chore: update\n\n* chore: update",
        "before_after_code_files": [
          "api/v2/common.go||api/v2/common.go",
          "api/v2/gw_mux.go||api/v2/gw_mux.go",
          "api/v2/user_service.go||api/v2/user_service.go",
          "api/v2/v2.go||api/v2/v2.go",
          "proto/api/v2/common.proto||proto/api/v2/common.proto",
          "proto/api/v2/user_service.proto||proto/api/v2/user_service.proto",
          "proto/gen/api/v2/common.pb.go||proto/gen/api/v2/common.pb.go",
          "proto/gen/api/v2/user_service.pb.go||proto/gen/api/v2/user_service.pb.go",
          "proto/gen/api/v2/user_service.pb.gw.go||proto/gen/api/v2/user_service.pb.gw.go",
          "proto/gen/api/v2/user_service_grpc.pb.go||proto/gen/api/v2/user_service_grpc.pb.go",
          "proto/gen/store/tag.pb.go||proto/gen/store/tag.pb.go",
          "proto/store/tag.proto||proto/store/tag.proto",
          "server/server.go||server/server.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "server/server.go||server/server.go"
          ],
          "candidate": [
            "server/server.go||server/server.go"
          ]
        }
      },
      "candidate_diff": {
        "api/v2/common.go||api/v2/common.go": [
          "File: api/v2/common.go -> api/v2/common.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package v2",
          "3: import (",
          "4:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "5:  \"github.com/usememos/memos/store\"",
          "6: )",
          "8: func convertRowStatusFromStore(rowStatus store.RowStatus) apiv2pb.RowStatus {",
          "9:  switch rowStatus {",
          "10:  case store.Normal:",
          "11:   return apiv2pb.RowStatus_ACTIVE",
          "12:  case store.Archived:",
          "13:   return apiv2pb.RowStatus_ARCHIVED",
          "14:  default:",
          "15:   return apiv2pb.RowStatus_ROW_STATUS_UNSPECIFIED",
          "16:  }",
          "17: }",
          "",
          "---------------"
        ],
        "api/v2/gw_mux.go||api/v2/gw_mux.go": [
          "File: api/v2/gw_mux.go -> api/v2/gw_mux.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "api/v2/user_service.go||api/v2/user_service.go": [
          "File: api/v2/user_service.go -> api/v2/user_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package v2",
          "3: import (",
          "4:  \"context\"",
          "6:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "7:  \"github.com/usememos/memos/store\"",
          "8:  \"google.golang.org/grpc/codes\"",
          "9:  \"google.golang.org/grpc/status\"",
          "10: )",
          "12: type UserService struct {",
          "13:  apiv2pb.UnimplementedUserServiceServer",
          "15:  Store *store.Store",
          "16: }",
          "19: func NewUserService(store *store.Store) *UserService {",
          "20:  return &UserService{",
          "21:   Store: store,",
          "22:  }",
          "23: }",
          "25: func (s *UserService) GetUser(ctx context.Context, request *apiv2pb.GetUserRequest) (*apiv2pb.GetUserResponse, error) {",
          "26:  println(\"GetUser\", request.Name)",
          "27:  user, err := s.Store.GetUser(ctx, &store.FindUser{",
          "28:   Username: &request.Name,",
          "29:  })",
          "30:  if err != nil {",
          "31:   return nil, status.Errorf(codes.Internal, \"failed to list tags: %v\", err)",
          "32:  }",
          "33:  if user == nil {",
          "34:   return nil, status.Errorf(codes.NotFound, \"user not found\")",
          "35:  }",
          "37:  userMessage := convertUserFromStore(user)",
          "39:  userMessage.OpenId = \"\"",
          "41:  response := &apiv2pb.GetUserResponse{",
          "42:   User: userMessage,",
          "43:  }",
          "44:  return response, nil",
          "45: }",
          "47: func convertUserFromStore(user *store.User) *apiv2pb.User {",
          "48:  return &apiv2pb.User{",
          "49:   Id:        int32(user.ID),",
          "50:   RowStatus: convertRowStatusFromStore(user.RowStatus),",
          "51:   CreatedTs: user.CreatedTs,",
          "52:   UpdatedTs: user.UpdatedTs,",
          "53:   Username:  user.Username,",
          "54:   Role:      convertUserRoleFromStore(user.Role),",
          "55:   Email:     user.Email,",
          "56:   Nickname:  user.Nickname,",
          "57:   OpenId:    user.OpenID,",
          "58:   AvatarUrl: user.AvatarURL,",
          "59:  }",
          "60: }",
          "62: func convertUserRoleFromStore(role store.Role) apiv2pb.Role {",
          "63:  switch role {",
          "64:  case store.RoleHost:",
          "65:   return apiv2pb.Role_HOST",
          "66:  case store.RoleAdmin:",
          "67:   return apiv2pb.Role_ADMIN",
          "68:  case store.RoleUser:",
          "69:   return apiv2pb.Role_USER",
          "70:  default:",
          "71:   return apiv2pb.Role_ROLE_UNSPECIFIED",
          "72:  }",
          "73: }",
          "",
          "---------------"
        ],
        "api/v2/v2.go||api/v2/v2.go": [
          "File: api/v2/v2.go -> api/v2/v2.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package v2",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: import (",
          "4:  \"context\"",
          "5:  \"fmt\"",
          "7:  grpcRuntime \"github.com/grpc-ecosystem/grpc-gateway/v2/runtime\"",
          "8:  \"github.com/labstack/echo/v4\"",
          "9:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "10:  \"github.com/usememos/memos/store\"",
          "11:  \"google.golang.org/grpc\"",
          "12:  \"google.golang.org/grpc/credentials/insecure\"",
          "13: )",
          "15: func NewGRPCServer(store *store.Store) *grpc.Server {",
          "16:  grpcServer := grpc.NewServer()",
          "17:  apiv2pb.RegisterUserServiceServer(grpcServer, NewUserService(store))",
          "18:  apiv2pb.RegisterTagServiceServer(grpcServer, NewTagService(store))",
          "19:  return grpcServer",
          "20: }",
          "23: func RegisterGateway(ctx context.Context, e *echo.Echo, grpcServerPort int) error {",
          "26:  conn, err := grpc.DialContext(",
          "27:   ctx,",
          "28:   fmt.Sprintf(\":%d\", grpcServerPort),",
          "29:   grpc.WithTransportCredentials(insecure.NewCredentials()),",
          "30:  )",
          "31:  if err != nil {",
          "32:   return err",
          "33:  }",
          "35:  gwMux := grpcRuntime.NewServeMux()",
          "36:  if err := apiv2pb.RegisterUserServiceHandler(context.Background(), gwMux, conn); err != nil {",
          "37:   return err",
          "38:  }",
          "39:  if err := apiv2pb.RegisterTagServiceHandler(context.Background(), gwMux, conn); err != nil {",
          "40:   return err",
          "41:  }",
          "42:  e.Any(\"/api/v2/*\", echo.WrapHandler(gwMux))",
          "44:  return nil",
          "45: }",
          "",
          "---------------"
        ],
        "proto/api/v2/common.proto||proto/api/v2/common.proto": [
          "File: proto/api/v2/common.proto -> proto/api/v2/common.proto",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: syntax = \"proto3\";",
          "3: package memos.api.v2;",
          "5: option go_package = \"gen/api/v2\";",
          "7: enum RowStatus {",
          "8:   ROW_STATUS_UNSPECIFIED = 0;",
          "10:   ACTIVE = 1;",
          "12:   ARCHIVED = 2;",
          "13: }",
          "",
          "---------------"
        ],
        "proto/api/v2/user_service.proto||proto/api/v2/user_service.proto": [
          "File: proto/api/v2/user_service.proto -> proto/api/v2/user_service.proto",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: syntax = \"proto3\";",
          "3: package memos.api.v2;",
          "5: import \"api/v2/common.proto\";",
          "6: import \"google/api/annotations.proto\";",
          "7: import \"google/api/client.proto\";",
          "9: option go_package = \"gen/api/v2\";",
          "11: service UserService {",
          "12:   rpc GetUser(GetUserRequest) returns (GetUserResponse) {",
          "13:     option (google.api.http) = {get: \"/api/v2/users/{name}\"};",
          "14:     option (google.api.method_signature) = \"name\";",
          "15:   }",
          "16: }",
          "18: message User {",
          "19:   int32 id = 1;",
          "21:   RowStatus row_status = 2;",
          "23:   int64 created_ts = 3;",
          "25:   int64 updated_ts = 4;",
          "27:   string username = 5;",
          "29:   Role role = 6;",
          "31:   string email = 7;",
          "33:   string nickname = 8;",
          "35:   string open_id = 9;",
          "37:   string avatar_url = 10;",
          "38: }",
          "40: enum Role {",
          "41:   ROLE_UNSPECIFIED = 0;",
          "43:   HOST = 1;",
          "45:   ADMIN = 2;",
          "47:   USER = 3;",
          "48: }",
          "50: message GetUserRequest {",
          "51:   string name = 1;",
          "52: }",
          "54: message GetUserResponse {",
          "55:   User user = 1;",
          "56: }",
          "",
          "---------------"
        ],
        "proto/gen/api/v2/common.pb.go||proto/gen/api/v2/common.pb.go": [
          "File: proto/gen/api/v2/common.pb.go -> proto/gen/api/v2/common.pb.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: package apiv2",
          "9: import (",
          "10:  protoreflect \"google.golang.org/protobuf/reflect/protoreflect\"",
          "11:  protoimpl \"google.golang.org/protobuf/runtime/protoimpl\"",
          "12:  reflect \"reflect\"",
          "13:  sync \"sync\"",
          "14: )",
          "16: const (",
          "18:  _ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)",
          "20:  _ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)",
          "21: )",
          "23: type RowStatus int32",
          "25: const (",
          "26:  RowStatus_ROW_STATUS_UNSPECIFIED RowStatus = 0",
          "27:  RowStatus_ACTIVE                 RowStatus = 1",
          "28:  RowStatus_ARCHIVED               RowStatus = 2",
          "29: )",
          "32: var (",
          "33:  RowStatus_name = map[int32]string{",
          "34:   0: \"ROW_STATUS_UNSPECIFIED\",",
          "35:   1: \"ACTIVE\",",
          "36:   2: \"ARCHIVED\",",
          "37:  }",
          "38:  RowStatus_value = map[string]int32{",
          "39:   \"ROW_STATUS_UNSPECIFIED\": 0,",
          "40:   \"ACTIVE\":                 1,",
          "41:   \"ARCHIVED\":               2,",
          "42:  }",
          "43: )",
          "45: func (x RowStatus) Enum() *RowStatus {",
          "46:  p := new(RowStatus)",
          "48:  return p",
          "49: }",
          "51: func (x RowStatus) String() string {",
          "52:  return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))",
          "53: }",
          "55: func (RowStatus) Descriptor() protoreflect.EnumDescriptor {",
          "56:  return file_api_v2_common_proto_enumTypes[0].Descriptor()",
          "57: }",
          "59: func (RowStatus) Type() protoreflect.EnumType {",
          "60:  return &file_api_v2_common_proto_enumTypes[0]",
          "61: }",
          "63: func (x RowStatus) Number() protoreflect.EnumNumber {",
          "64:  return protoreflect.EnumNumber(x)",
          "65: }",
          "68: func (RowStatus) EnumDescriptor() ([]byte, []int) {",
          "69:  return file_api_v2_common_proto_rawDescGZIP(), []int{0}",
          "70: }",
          "72: var File_api_v2_common_proto protoreflect.FileDescriptor",
          "74: var file_api_v2_common_proto_rawDesc = []byte{",
          "75:  0x0a, 0x13, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,",
          "76:  0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69,",
          "77:  0x2e, 0x76, 0x32, 0x2a, 0x41, 0x0a, 0x09, 0x52, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,",
          "78:  0x12, 0x1a, 0x0a, 0x16, 0x52, 0x4f, 0x57, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55,",
          "79:  0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,",
          "80:  0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x52, 0x43, 0x48,",
          "81:  0x49, 0x56, 0x45, 0x44, 0x10, 0x02, 0x42, 0xa3, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,",
          "82:  0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x42, 0x0b, 0x43, 0x6f, 0x6d,",
          "83:  0x6d, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68,",
          "84:  0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x73, 0x65, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2f,",
          "85:  0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f,",
          "86:  0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x3b, 0x61, 0x70, 0x69, 0x76, 0x32, 0xa2, 0x02, 0x03, 0x4d,",
          "87:  0x41, 0x58, 0xaa, 0x02, 0x0c, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x56,",
          "88:  0x32, 0xca, 0x02, 0x0c, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x32,",
          "89:  0xe2, 0x02, 0x18, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x32, 0x5c,",
          "90:  0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x4d, 0x65,",
          "91:  0x6d, 0x6f, 0x73, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72,",
          "92:  0x6f, 0x74, 0x6f, 0x33,",
          "93: }",
          "95: var (",
          "96:  file_api_v2_common_proto_rawDescOnce sync.Once",
          "97:  file_api_v2_common_proto_rawDescData = file_api_v2_common_proto_rawDesc",
          "98: )",
          "100: func file_api_v2_common_proto_rawDescGZIP() []byte {",
          "101:  file_api_v2_common_proto_rawDescOnce.Do(func() {",
          "102:   file_api_v2_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v2_common_proto_rawDescData)",
          "103:  })",
          "104:  return file_api_v2_common_proto_rawDescData",
          "105: }",
          "107: var file_api_v2_common_proto_enumTypes = make([]protoimpl.EnumInfo, 1)",
          "108: var file_api_v2_common_proto_goTypes = []interface{}{",
          "109:  (RowStatus)(0), // 0: memos.api.v2.RowStatus",
          "110: }",
          "111: var file_api_v2_common_proto_depIdxs = []int32{",
          "112:  0, // [0:0] is the sub-list for method output_type",
          "113:  0, // [0:0] is the sub-list for method input_type",
          "114:  0, // [0:0] is the sub-list for extension type_name",
          "115:  0, // [0:0] is the sub-list for extension extendee",
          "116:  0, // [0:0] is the sub-list for field type_name",
          "117: }",
          "119: func init() { file_api_v2_common_proto_init() }",
          "120: func file_api_v2_common_proto_init() {",
          "121:  if File_api_v2_common_proto != nil {",
          "122:   return",
          "123:  }",
          "124:  type x struct{}",
          "125:  out := protoimpl.TypeBuilder{",
          "126:   File: protoimpl.DescBuilder{",
          "127:    GoPackagePath: reflect.TypeOf(x{}).PkgPath(),",
          "128:    RawDescriptor: file_api_v2_common_proto_rawDesc,",
          "129:    NumEnums:      1,",
          "130:    NumMessages:   0,",
          "131:    NumExtensions: 0,",
          "132:    NumServices:   0,",
          "133:   },",
          "134:   GoTypes:           file_api_v2_common_proto_goTypes,",
          "135:   DependencyIndexes: file_api_v2_common_proto_depIdxs,",
          "136:   EnumInfos:         file_api_v2_common_proto_enumTypes,",
          "137:  }.Build()",
          "138:  File_api_v2_common_proto = out.File",
          "139:  file_api_v2_common_proto_rawDesc = nil",
          "140:  file_api_v2_common_proto_goTypes = nil",
          "141:  file_api_v2_common_proto_depIdxs = nil",
          "142: }",
          "",
          "---------------"
        ],
        "proto/gen/api/v2/user_service.pb.go||proto/gen/api/v2/user_service.pb.go": [
          "File: proto/gen/api/v2/user_service.pb.go -> proto/gen/api/v2/user_service.pb.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: package apiv2",
          "9: import (",
          "10:  _ \"google.golang.org/genproto/googleapis/api/annotations\"",
          "11:  protoreflect \"google.golang.org/protobuf/reflect/protoreflect\"",
          "12:  protoimpl \"google.golang.org/protobuf/runtime/protoimpl\"",
          "13:  reflect \"reflect\"",
          "14:  sync \"sync\"",
          "15: )",
          "17: const (",
          "19:  _ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)",
          "21:  _ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)",
          "22: )",
          "24: type Role int32",
          "26: const (",
          "27:  Role_ROLE_UNSPECIFIED Role = 0",
          "28:  Role_HOST             Role = 1",
          "29:  Role_ADMIN            Role = 2",
          "30:  Role_USER             Role = 3",
          "31: )",
          "34: var (",
          "35:  Role_name = map[int32]string{",
          "36:   0: \"ROLE_UNSPECIFIED\",",
          "37:   1: \"HOST\",",
          "38:   2: \"ADMIN\",",
          "39:   3: \"USER\",",
          "40:  }",
          "41:  Role_value = map[string]int32{",
          "42:   \"ROLE_UNSPECIFIED\": 0,",
          "43:   \"HOST\":             1,",
          "44:   \"ADMIN\":            2,",
          "45:   \"USER\":             3,",
          "46:  }",
          "47: )",
          "49: func (x Role) Enum() *Role {",
          "50:  p := new(Role)",
          "52:  return p",
          "53: }",
          "55: func (x Role) String() string {",
          "56:  return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))",
          "57: }",
          "59: func (Role) Descriptor() protoreflect.EnumDescriptor {",
          "60:  return file_api_v2_user_service_proto_enumTypes[0].Descriptor()",
          "61: }",
          "63: func (Role) Type() protoreflect.EnumType {",
          "64:  return &file_api_v2_user_service_proto_enumTypes[0]",
          "65: }",
          "67: func (x Role) Number() protoreflect.EnumNumber {",
          "68:  return protoreflect.EnumNumber(x)",
          "69: }",
          "72: func (Role) EnumDescriptor() ([]byte, []int) {",
          "73:  return file_api_v2_user_service_proto_rawDescGZIP(), []int{0}",
          "74: }",
          "76: type User struct {",
          "77:  state         protoimpl.MessageState",
          "78:  sizeCache     protoimpl.SizeCache",
          "79:  unknownFields protoimpl.UnknownFields",
          "81:  Id        int32     `protobuf:\"varint,1,opt,name=id,proto3\" json:\"id,omitempty\"`",
          "82:  RowStatus RowStatus `protobuf:\"varint,2,opt,name=row_status,json=rowStatus,proto3,enum=memos.api.v2.RowStatus\" json:\"row_status,omitempty\"`",
          "83:  CreatedTs int64     `protobuf:\"varint,3,opt,name=created_ts,json=createdTs,proto3\" json:\"created_ts,omitempty\"`",
          "84:  UpdatedTs int64     `protobuf:\"varint,4,opt,name=updated_ts,json=updatedTs,proto3\" json:\"updated_ts,omitempty\"`",
          "85:  Username  string    `protobuf:\"bytes,5,opt,name=username,proto3\" json:\"username,omitempty\"`",
          "86:  Role      Role      `protobuf:\"varint,6,opt,name=role,proto3,enum=memos.api.v2.Role\" json:\"role,omitempty\"`",
          "87:  Email     string    `protobuf:\"bytes,7,opt,name=email,proto3\" json:\"email,omitempty\"`",
          "88:  Nickname  string    `protobuf:\"bytes,8,opt,name=nickname,proto3\" json:\"nickname,omitempty\"`",
          "89:  OpenId    string    `protobuf:\"bytes,9,opt,name=open_id,json=openId,proto3\" json:\"open_id,omitempty\"`",
          "90:  AvatarUrl string    `protobuf:\"bytes,10,opt,name=avatar_url,json=avatarUrl,proto3\" json:\"avatar_url,omitempty\"`",
          "91: }",
          "93: func (x *User) Reset() {",
          "95:  if protoimpl.UnsafeEnabled {",
          "96:   mi := &file_api_v2_user_service_proto_msgTypes[0]",
          "97:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "98:   ms.StoreMessageInfo(mi)",
          "99:  }",
          "100: }",
          "102: func (x *User) String() string {",
          "103:  return protoimpl.X.MessageStringOf(x)",
          "104: }",
          "106: func (*User) ProtoMessage() {}",
          "108: func (x *User) ProtoReflect() protoreflect.Message {",
          "109:  mi := &file_api_v2_user_service_proto_msgTypes[0]",
          "110:  if protoimpl.UnsafeEnabled && x != nil {",
          "111:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "112:   if ms.LoadMessageInfo() == nil {",
          "113:    ms.StoreMessageInfo(mi)",
          "114:   }",
          "115:   return ms",
          "116:  }",
          "117:  return mi.MessageOf(x)",
          "118: }",
          "121: func (*User) Descriptor() ([]byte, []int) {",
          "122:  return file_api_v2_user_service_proto_rawDescGZIP(), []int{0}",
          "123: }",
          "125: func (x *User) GetId() int32 {",
          "126:  if x != nil {",
          "127:   return x.Id",
          "128:  }",
          "129:  return 0",
          "130: }",
          "132: func (x *User) GetRowStatus() RowStatus {",
          "133:  if x != nil {",
          "134:   return x.RowStatus",
          "135:  }",
          "136:  return RowStatus_ROW_STATUS_UNSPECIFIED",
          "137: }",
          "139: func (x *User) GetCreatedTs() int64 {",
          "140:  if x != nil {",
          "141:   return x.CreatedTs",
          "142:  }",
          "143:  return 0",
          "144: }",
          "146: func (x *User) GetUpdatedTs() int64 {",
          "147:  if x != nil {",
          "148:   return x.UpdatedTs",
          "149:  }",
          "150:  return 0",
          "151: }",
          "153: func (x *User) GetUsername() string {",
          "154:  if x != nil {",
          "155:   return x.Username",
          "156:  }",
          "157:  return \"\"",
          "158: }",
          "160: func (x *User) GetRole() Role {",
          "161:  if x != nil {",
          "162:   return x.Role",
          "163:  }",
          "164:  return Role_ROLE_UNSPECIFIED",
          "165: }",
          "167: func (x *User) GetEmail() string {",
          "168:  if x != nil {",
          "169:   return x.Email",
          "170:  }",
          "171:  return \"\"",
          "172: }",
          "174: func (x *User) GetNickname() string {",
          "175:  if x != nil {",
          "176:   return x.Nickname",
          "177:  }",
          "178:  return \"\"",
          "179: }",
          "181: func (x *User) GetOpenId() string {",
          "182:  if x != nil {",
          "183:   return x.OpenId",
          "184:  }",
          "185:  return \"\"",
          "186: }",
          "188: func (x *User) GetAvatarUrl() string {",
          "189:  if x != nil {",
          "190:   return x.AvatarUrl",
          "191:  }",
          "192:  return \"\"",
          "193: }",
          "195: type GetUserRequest struct {",
          "196:  state         protoimpl.MessageState",
          "197:  sizeCache     protoimpl.SizeCache",
          "198:  unknownFields protoimpl.UnknownFields",
          "200:  Name string `protobuf:\"bytes,1,opt,name=name,proto3\" json:\"name,omitempty\"`",
          "201: }",
          "203: func (x *GetUserRequest) Reset() {",
          "205:  if protoimpl.UnsafeEnabled {",
          "206:   mi := &file_api_v2_user_service_proto_msgTypes[1]",
          "207:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "208:   ms.StoreMessageInfo(mi)",
          "209:  }",
          "210: }",
          "212: func (x *GetUserRequest) String() string {",
          "213:  return protoimpl.X.MessageStringOf(x)",
          "214: }",
          "216: func (*GetUserRequest) ProtoMessage() {}",
          "218: func (x *GetUserRequest) ProtoReflect() protoreflect.Message {",
          "219:  mi := &file_api_v2_user_service_proto_msgTypes[1]",
          "220:  if protoimpl.UnsafeEnabled && x != nil {",
          "221:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "222:   if ms.LoadMessageInfo() == nil {",
          "223:    ms.StoreMessageInfo(mi)",
          "224:   }",
          "225:   return ms",
          "226:  }",
          "227:  return mi.MessageOf(x)",
          "228: }",
          "231: func (*GetUserRequest) Descriptor() ([]byte, []int) {",
          "232:  return file_api_v2_user_service_proto_rawDescGZIP(), []int{1}",
          "233: }",
          "235: func (x *GetUserRequest) GetName() string {",
          "236:  if x != nil {",
          "237:   return x.Name",
          "238:  }",
          "239:  return \"\"",
          "240: }",
          "242: type GetUserResponse struct {",
          "243:  state         protoimpl.MessageState",
          "244:  sizeCache     protoimpl.SizeCache",
          "245:  unknownFields protoimpl.UnknownFields",
          "247:  User *User `protobuf:\"bytes,1,opt,name=user,proto3\" json:\"user,omitempty\"`",
          "248: }",
          "250: func (x *GetUserResponse) Reset() {",
          "252:  if protoimpl.UnsafeEnabled {",
          "253:   mi := &file_api_v2_user_service_proto_msgTypes[2]",
          "254:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "255:   ms.StoreMessageInfo(mi)",
          "256:  }",
          "257: }",
          "259: func (x *GetUserResponse) String() string {",
          "260:  return protoimpl.X.MessageStringOf(x)",
          "261: }",
          "263: func (*GetUserResponse) ProtoMessage() {}",
          "265: func (x *GetUserResponse) ProtoReflect() protoreflect.Message {",
          "266:  mi := &file_api_v2_user_service_proto_msgTypes[2]",
          "267:  if protoimpl.UnsafeEnabled && x != nil {",
          "268:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "269:   if ms.LoadMessageInfo() == nil {",
          "270:    ms.StoreMessageInfo(mi)",
          "271:   }",
          "272:   return ms",
          "273:  }",
          "274:  return mi.MessageOf(x)",
          "275: }",
          "278: func (*GetUserResponse) Descriptor() ([]byte, []int) {",
          "279:  return file_api_v2_user_service_proto_rawDescGZIP(), []int{2}",
          "280: }",
          "282: func (x *GetUserResponse) GetUser() *User {",
          "283:  if x != nil {",
          "284:   return x.User",
          "285:  }",
          "286:  return nil",
          "287: }",
          "289: var File_api_v2_user_service_proto protoreflect.FileDescriptor",
          "291: var file_api_v2_user_service_proto_rawDesc = []byte{",
          "292:  0x0a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65,",
          "293:  0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6d, 0x65, 0x6d,",
          "294:  0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x1a, 0x13, 0x61, 0x70, 0x69, 0x2f, 0x76,",
          "295:  0x32, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,",
          "296:  0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,",
          "297:  0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f,",
          "298:  0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,",
          "299:  0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xba, 0x02, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e,",
          "300:  0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36,",
          "301:  0x0a, 0x0a, 0x72, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,",
          "302:  0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,",
          "303:  0x32, 0x2e, 0x52, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x72, 0x6f, 0x77,",
          "304:  0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,",
          "305:  0x64, 0x5f, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,",
          "306:  0x74, 0x65, 0x64, 0x54, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,",
          "307:  0x5f, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,",
          "308:  0x65, 0x64, 0x54, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,",
          "309:  0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,",
          "310:  0x12, 0x26, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,",
          "311:  0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x6f,",
          "312:  0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,",
          "313:  0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a,",
          "314:  0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,",
          "315:  0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70,",
          "316:  0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65,",
          "317:  0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72,",
          "318:  0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55,",
          "319:  0x72, 0x6c, 0x22, 0x24, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,",
          "320:  0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,",
          "321:  0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55,",
          "322:  0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x75,",
          "323:  0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x6d, 0x6f,",
          "324:  0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75,",
          "325:  0x73, 0x65, 0x72, 0x2a, 0x3b, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x52,",
          "326:  0x4f, 0x4c, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,",
          "327:  0x00, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x4f, 0x53, 0x54, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x41,",
          "328:  0x44, 0x4d, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0x03,",
          "329:  0x32, 0x7a, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,",
          "330:  0x6b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x6d, 0x65, 0x6d,",
          "331:  0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,",
          "332:  0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73,",
          "333:  0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,",
          "334:  0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0xda, 0x41, 0x04, 0x6e, 0x61, 0x6d, 0x65,",
          "335:  0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f,",
          "336:  0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x42, 0xa8, 0x01, 0x0a,",
          "337:  0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,",
          "338:  0x32, 0x42, 0x10, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72,",
          "339:  0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,",
          "340:  0x6d, 0x2f, 0x75, 0x73, 0x65, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2f, 0x6d, 0x65, 0x6d, 0x6f, 0x73,",
          "341:  0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,",
          "342:  0x32, 0x3b, 0x61, 0x70, 0x69, 0x76, 0x32, 0xa2, 0x02, 0x03, 0x4d, 0x41, 0x58, 0xaa, 0x02, 0x0c,",
          "343:  0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x0c, 0x4d,",
          "344:  0x65, 0x6d, 0x6f, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x18, 0x4d, 0x65,",
          "345:  0x6d, 0x6f, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,",
          "346:  0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x3a, 0x3a,",
          "347:  0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,",
          "348: }",
          "350: var (",
          "351:  file_api_v2_user_service_proto_rawDescOnce sync.Once",
          "352:  file_api_v2_user_service_proto_rawDescData = file_api_v2_user_service_proto_rawDesc",
          "353: )",
          "355: func file_api_v2_user_service_proto_rawDescGZIP() []byte {",
          "356:  file_api_v2_user_service_proto_rawDescOnce.Do(func() {",
          "357:   file_api_v2_user_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v2_user_service_proto_rawDescData)",
          "358:  })",
          "359:  return file_api_v2_user_service_proto_rawDescData",
          "360: }",
          "362: var file_api_v2_user_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)",
          "363: var file_api_v2_user_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)",
          "364: var file_api_v2_user_service_proto_goTypes = []interface{}{",
          "365:  (Role)(0),               // 0: memos.api.v2.Role",
          "366:  (*User)(nil),            // 1: memos.api.v2.User",
          "367:  (*GetUserRequest)(nil),  // 2: memos.api.v2.GetUserRequest",
          "368:  (*GetUserResponse)(nil), // 3: memos.api.v2.GetUserResponse",
          "369:  (RowStatus)(0),          // 4: memos.api.v2.RowStatus",
          "370: }",
          "371: var file_api_v2_user_service_proto_depIdxs = []int32{",
          "372:  4, // 0: memos.api.v2.User.row_status:type_name -> memos.api.v2.RowStatus",
          "373:  0, // 1: memos.api.v2.User.role:type_name -> memos.api.v2.Role",
          "374:  1, // 2: memos.api.v2.GetUserResponse.user:type_name -> memos.api.v2.User",
          "375:  2, // 3: memos.api.v2.UserService.GetUser:input_type -> memos.api.v2.GetUserRequest",
          "376:  3, // 4: memos.api.v2.UserService.GetUser:output_type -> memos.api.v2.GetUserResponse",
          "377:  4, // [4:5] is the sub-list for method output_type",
          "378:  3, // [3:4] is the sub-list for method input_type",
          "379:  3, // [3:3] is the sub-list for extension type_name",
          "380:  3, // [3:3] is the sub-list for extension extendee",
          "381:  0, // [0:3] is the sub-list for field type_name",
          "382: }",
          "384: func init() { file_api_v2_user_service_proto_init() }",
          "385: func file_api_v2_user_service_proto_init() {",
          "386:  if File_api_v2_user_service_proto != nil {",
          "387:   return",
          "388:  }",
          "389:  file_api_v2_common_proto_init()",
          "390:  if !protoimpl.UnsafeEnabled {",
          "391:   file_api_v2_user_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {",
          "392:    switch v := v.(*User); i {",
          "393:    case 0:",
          "394:     return &v.state",
          "395:    case 1:",
          "396:     return &v.sizeCache",
          "397:    case 2:",
          "398:     return &v.unknownFields",
          "399:    default:",
          "400:     return nil",
          "401:    }",
          "402:   }",
          "403:   file_api_v2_user_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {",
          "404:    switch v := v.(*GetUserRequest); i {",
          "405:    case 0:",
          "406:     return &v.state",
          "407:    case 1:",
          "408:     return &v.sizeCache",
          "409:    case 2:",
          "410:     return &v.unknownFields",
          "411:    default:",
          "412:     return nil",
          "413:    }",
          "414:   }",
          "415:   file_api_v2_user_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {",
          "416:    switch v := v.(*GetUserResponse); i {",
          "417:    case 0:",
          "418:     return &v.state",
          "419:    case 1:",
          "420:     return &v.sizeCache",
          "421:    case 2:",
          "422:     return &v.unknownFields",
          "423:    default:",
          "424:     return nil",
          "425:    }",
          "426:   }",
          "427:  }",
          "428:  type x struct{}",
          "429:  out := protoimpl.TypeBuilder{",
          "430:   File: protoimpl.DescBuilder{",
          "431:    GoPackagePath: reflect.TypeOf(x{}).PkgPath(),",
          "432:    RawDescriptor: file_api_v2_user_service_proto_rawDesc,",
          "433:    NumEnums:      1,",
          "434:    NumMessages:   3,",
          "435:    NumExtensions: 0,",
          "436:    NumServices:   1,",
          "437:   },",
          "438:   GoTypes:           file_api_v2_user_service_proto_goTypes,",
          "439:   DependencyIndexes: file_api_v2_user_service_proto_depIdxs,",
          "440:   EnumInfos:         file_api_v2_user_service_proto_enumTypes,",
          "441:   MessageInfos:      file_api_v2_user_service_proto_msgTypes,",
          "442:  }.Build()",
          "443:  File_api_v2_user_service_proto = out.File",
          "444:  file_api_v2_user_service_proto_rawDesc = nil",
          "445:  file_api_v2_user_service_proto_goTypes = nil",
          "446:  file_api_v2_user_service_proto_depIdxs = nil",
          "447: }",
          "",
          "---------------"
        ],
        "proto/gen/api/v2/user_service.pb.gw.go||proto/gen/api/v2/user_service.pb.gw.go": [
          "File: proto/gen/api/v2/user_service.pb.gw.go -> proto/gen/api/v2/user_service.pb.gw.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: Package apiv2 is a reverse proxy.",
          "7: It translates gRPC into RESTful JSON APIs.",
          "9: package apiv2",
          "11: import (",
          "12:  \"context\"",
          "13:  \"io\"",
          "14:  \"net/http\"",
          "16:  \"github.com/grpc-ecosystem/grpc-gateway/v2/runtime\"",
          "17:  \"github.com/grpc-ecosystem/grpc-gateway/v2/utilities\"",
          "18:  \"google.golang.org/grpc\"",
          "19:  \"google.golang.org/grpc/codes\"",
          "20:  \"google.golang.org/grpc/grpclog\"",
          "21:  \"google.golang.org/grpc/metadata\"",
          "22:  \"google.golang.org/grpc/status\"",
          "23:  \"google.golang.org/protobuf/proto\"",
          "24: )",
          "27: var _ codes.Code",
          "28: var _ io.Reader",
          "29: var _ status.Status",
          "30: var _ = runtime.String",
          "31: var _ = utilities.NewDoubleArray",
          "32: var _ = metadata.Join",
          "34: func request_UserService_GetUser_0(ctx context.Context, marshaler runtime.Marshaler, client UserServiceClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "35:  var protoReq GetUserRequest",
          "36:  var metadata runtime.ServerMetadata",
          "38:  var (",
          "39:   val string",
          "40:   ok  bool",
          "41:   err error",
          "42:   _   = err",
          "43:  )",
          "45:  val, ok = pathParams[\"name\"]",
          "46:  if !ok {",
          "47:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"name\")",
          "48:  }",
          "50:  protoReq.Name, err = runtime.String(val)",
          "51:  if err != nil {",
          "52:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"name\", err)",
          "53:  }",
          "55:  msg, err := client.GetUser(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))",
          "56:  return msg, metadata, err",
          "58: }",
          "60: func local_request_UserService_GetUser_0(ctx context.Context, marshaler runtime.Marshaler, server UserServiceServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "61:  var protoReq GetUserRequest",
          "62:  var metadata runtime.ServerMetadata",
          "64:  var (",
          "65:   val string",
          "66:   ok  bool",
          "67:   err error",
          "68:   _   = err",
          "69:  )",
          "71:  val, ok = pathParams[\"name\"]",
          "72:  if !ok {",
          "73:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"name\")",
          "74:  }",
          "76:  protoReq.Name, err = runtime.String(val)",
          "77:  if err != nil {",
          "78:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"name\", err)",
          "79:  }",
          "81:  msg, err := server.GetUser(ctx, &protoReq)",
          "82:  return msg, metadata, err",
          "84: }",
          "90: func RegisterUserServiceHandlerServer(ctx context.Context, mux *runtime.ServeMux, server UserServiceServer) error {",
          "92:  mux.Handle(\"GET\", pattern_UserService_GetUser_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "93:   ctx, cancel := context.WithCancel(req.Context())",
          "94:   defer cancel()",
          "95:   var stream runtime.ServerTransportStream",
          "96:   ctx = grpc.NewContextWithServerTransportStream(ctx, &stream)",
          "97:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "98:   var err error",
          "99:   var annotatedContext context.Context",
          "100:   annotatedContext, err = runtime.AnnotateIncomingContext(ctx, mux, req, \"/memos.api.v2.UserService/GetUser\", runtime.WithHTTPPathPattern(\"/api/v2/users/{name}\"))",
          "101:   if err != nil {",
          "102:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "103:    return",
          "104:   }",
          "105:   resp, md, err := local_request_UserService_GetUser_0(annotatedContext, inboundMarshaler, server, req, pathParams)",
          "106:   md.HeaderMD, md.TrailerMD = metadata.Join(md.HeaderMD, stream.Header()), metadata.Join(md.TrailerMD, stream.Trailer())",
          "107:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "108:   if err != nil {",
          "109:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "110:    return",
          "111:   }",
          "113:   forward_UserService_GetUser_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "115:  })",
          "117:  return nil",
          "118: }",
          "122: func RegisterUserServiceHandlerFromEndpoint(ctx context.Context, mux *runtime.ServeMux, endpoint string, opts []grpc.DialOption) (err error) {",
          "123:  conn, err := grpc.DialContext(ctx, endpoint, opts...)",
          "124:  if err != nil {",
          "125:   return err",
          "126:  }",
          "127:  defer func() {",
          "128:   if err != nil {",
          "129:    if cerr := conn.Close(); cerr != nil {",
          "130:     grpclog.Infof(\"Failed to close conn to %s: %v\", endpoint, cerr)",
          "131:    }",
          "132:    return",
          "133:   }",
          "134:   go func() {",
          "135:    <-ctx.Done()",
          "136:    if cerr := conn.Close(); cerr != nil {",
          "137:     grpclog.Infof(\"Failed to close conn to %s: %v\", endpoint, cerr)",
          "138:    }",
          "139:   }()",
          "140:  }()",
          "142:  return RegisterUserServiceHandler(ctx, mux, conn)",
          "143: }",
          "147: func RegisterUserServiceHandler(ctx context.Context, mux *runtime.ServeMux, conn *grpc.ClientConn) error {",
          "148:  return RegisterUserServiceHandlerClient(ctx, mux, NewUserServiceClient(conn))",
          "149: }",
          "156: func RegisterUserServiceHandlerClient(ctx context.Context, mux *runtime.ServeMux, client UserServiceClient) error {",
          "158:  mux.Handle(\"GET\", pattern_UserService_GetUser_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "159:   ctx, cancel := context.WithCancel(req.Context())",
          "160:   defer cancel()",
          "161:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "162:   var err error",
          "163:   var annotatedContext context.Context",
          "164:   annotatedContext, err = runtime.AnnotateContext(ctx, mux, req, \"/memos.api.v2.UserService/GetUser\", runtime.WithHTTPPathPattern(\"/api/v2/users/{name}\"))",
          "165:   if err != nil {",
          "166:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "167:    return",
          "168:   }",
          "169:   resp, md, err := request_UserService_GetUser_0(annotatedContext, inboundMarshaler, client, req, pathParams)",
          "170:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "171:   if err != nil {",
          "172:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "173:    return",
          "174:   }",
          "176:   forward_UserService_GetUser_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "178:  })",
          "180:  return nil",
          "181: }",
          "183: var (",
          "184:  pattern_UserService_GetUser_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 1, 0, 4, 1, 5, 3}, []string{\"api\", \"v2\", \"users\", \"name\"}, \"\"))",
          "185: )",
          "187: var (",
          "188:  forward_UserService_GetUser_0 = runtime.ForwardResponseMessage",
          "189: )",
          "",
          "---------------"
        ],
        "proto/gen/api/v2/user_service_grpc.pb.go||proto/gen/api/v2/user_service_grpc.pb.go": [
          "File: proto/gen/api/v2/user_service_grpc.pb.go -> proto/gen/api/v2/user_service_grpc.pb.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: package apiv2",
          "9: import (",
          "10:  context \"context\"",
          "11:  grpc \"google.golang.org/grpc\"",
          "12:  codes \"google.golang.org/grpc/codes\"",
          "13:  status \"google.golang.org/grpc/status\"",
          "14: )",
          "19: const _ = grpc.SupportPackageIsVersion7",
          "21: const (",
          "22:  UserService_GetUser_FullMethodName = \"/memos.api.v2.UserService/GetUser\"",
          "23: )",
          "28: type UserServiceClient interface {",
          "29:  GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error)",
          "30: }",
          "32: type userServiceClient struct {",
          "33:  cc grpc.ClientConnInterface",
          "34: }",
          "36: func NewUserServiceClient(cc grpc.ClientConnInterface) UserServiceClient {",
          "37:  return &userServiceClient{cc}",
          "38: }",
          "40: func (c *userServiceClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error) {",
          "41:  out := new(GetUserResponse)",
          "42:  err := c.cc.Invoke(ctx, UserService_GetUser_FullMethodName, in, out, opts...)",
          "43:  if err != nil {",
          "44:   return nil, err",
          "45:  }",
          "46:  return out, nil",
          "47: }",
          "52: type UserServiceServer interface {",
          "53:  GetUser(context.Context, *GetUserRequest) (*GetUserResponse, error)",
          "54:  mustEmbedUnimplementedUserServiceServer()",
          "55: }",
          "58: type UnimplementedUserServiceServer struct {",
          "59: }",
          "61: func (UnimplementedUserServiceServer) GetUser(context.Context, *GetUserRequest) (*GetUserResponse, error) {",
          "62:  return nil, status.Errorf(codes.Unimplemented, \"method GetUser not implemented\")",
          "63: }",
          "64: func (UnimplementedUserServiceServer) mustEmbedUnimplementedUserServiceServer() {}",
          "69: type UnsafeUserServiceServer interface {",
          "70:  mustEmbedUnimplementedUserServiceServer()",
          "71: }",
          "73: func RegisterUserServiceServer(s grpc.ServiceRegistrar, srv UserServiceServer) {",
          "74:  s.RegisterService(&UserService_ServiceDesc, srv)",
          "75: }",
          "77: func _UserService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {",
          "78:  in := new(GetUserRequest)",
          "79:  if err := dec(in); err != nil {",
          "80:   return nil, err",
          "81:  }",
          "82:  if interceptor == nil {",
          "83:   return srv.(UserServiceServer).GetUser(ctx, in)",
          "84:  }",
          "85:  info := &grpc.UnaryServerInfo{",
          "86:   Server:     srv,",
          "87:   FullMethod: UserService_GetUser_FullMethodName,",
          "88:  }",
          "89:  handler := func(ctx context.Context, req interface{}) (interface{}, error) {",
          "90:   return srv.(UserServiceServer).GetUser(ctx, req.(*GetUserRequest))",
          "91:  }",
          "92:  return interceptor(ctx, in, info, handler)",
          "93: }",
          "98: var UserService_ServiceDesc = grpc.ServiceDesc{",
          "99:  ServiceName: \"memos.api.v2.UserService\",",
          "100:  HandlerType: (*UserServiceServer)(nil),",
          "101:  Methods: []grpc.MethodDesc{",
          "102:   {",
          "103:    MethodName: \"GetUser\",",
          "104:    Handler:    _UserService_GetUser_Handler,",
          "105:   },",
          "106:  },",
          "107:  Streams:  []grpc.StreamDesc{},",
          "108:  Metadata: \"api/v2/user_service.proto\",",
          "109: }",
          "",
          "---------------"
        ],
        "proto/gen/store/tag.pb.go||proto/gen/store/tag.pb.go": [
          "File: proto/gen/store/tag.pb.go -> proto/gen/store/tag.pb.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "proto/store/tag.proto||proto/store/tag.proto": [
          "File: proto/store/tag.proto -> proto/store/tag.proto",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "server/server.go||server/server.go": [
          "File: server/server.go -> server/server.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "17:  \"github.com/usememos/memos/common/log\"",
          "18:  \"github.com/usememos/memos/common/util\"",
          "19:  \"github.com/usememos/memos/plugin/telegram\"",
          "21:  \"github.com/usememos/memos/server/profile\"",
          "22:  \"github.com/usememos/memos/store\"",
          "23:  \"go.uber.org/zap\"",
          "",
          "[Removed Lines]",
          "20:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "101:  apiV1Service.Register(rootGroup)",
          "110:  return s, nil",
          "111: }",
          "",
          "[Removed Lines]",
          "104:  s.grpcServer = grpc.NewServer()",
          "105:  apiv2pb.RegisterTagServiceServer(s.grpcServer, apiv2.NewTagService(store))",
          "108:  apiv2.RegisterGateway(ctx, e, s.Profile.Port+1)",
          "",
          "[Added Lines]",
          "103:  s.grpcServer = apiv2.NewGRPCServer(store)",
          "106:  if err := apiv2.RegisterGateway(ctx, e, s.Profile.Port+1); err != nil {",
          "107:   return nil, fmt.Errorf(\"failed to register gRPC gateway: %w\", err)",
          "108:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dfa78cac49a8cac6d83cfd58b2f645e810dcb924",
      "candidate_info": {
        "commit_hash": "dfa78cac49a8cac6d83cfd58b2f645e810dcb924",
        "repo": "usememos/memos",
        "commit_url": "https://github.com/usememos/memos/commit/dfa78cac49a8cac6d83cfd58b2f645e810dcb924",
        "files": [
          "bin/memos/main.go",
          "internal/jobs/presign_link.go",
          "internal/log/logger.go",
          "plugin/telegram/attachment.go",
          "plugin/telegram/bot.go",
          "server/route/api/v1/jwt.go",
          "server/route/api/v1/memo.go",
          "server/route/api/v1/resource.go",
          "server/route/api/v2/logger_interceptor.go",
          "server/route/api/v2/memo_service.go",
          "server/route/api/v2/v2.go",
          "server/route/resource/resource.go",
          "server/server.go",
          "store/db/mysql/mysql.go"
        ],
        "message": "chore: update logger",
        "before_after_code_files": [
          "bin/memos/main.go||bin/memos/main.go",
          "internal/jobs/presign_link.go||internal/jobs/presign_link.go",
          "internal/log/logger.go||internal/log/logger.go",
          "plugin/telegram/attachment.go||plugin/telegram/attachment.go",
          "plugin/telegram/bot.go||plugin/telegram/bot.go",
          "server/route/api/v1/jwt.go||server/route/api/v1/jwt.go",
          "server/route/api/v1/memo.go||server/route/api/v1/memo.go",
          "server/route/api/v1/resource.go||server/route/api/v1/resource.go",
          "server/route/api/v2/logger_interceptor.go||server/route/api/v2/logger_interceptor.go",
          "server/route/api/v2/memo_service.go||server/route/api/v2/memo_service.go",
          "server/route/api/v2/v2.go||server/route/api/v2/v2.go",
          "server/route/resource/resource.go||server/route/resource/resource.go",
          "server/server.go||server/server.go",
          "store/db/mysql/mysql.go||store/db/mysql/mysql.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "internal/jobs/presign_link.go||internal/jobs/presign_link.go",
            "server/route/api/v1/jwt.go||server/route/api/v1/jwt.go",
            "server/route/api/v1/memo.go||server/route/api/v1/memo.go",
            "server/route/api/v1/resource.go||server/route/api/v1/resource.go",
            "server/server.go||server/server.go"
          ],
          "candidate": [
            "internal/jobs/presign_link.go||internal/jobs/presign_link.go",
            "server/route/api/v1/jwt.go||server/route/api/v1/jwt.go",
            "server/route/api/v1/memo.go||server/route/api/v1/memo.go",
            "server/route/api/v1/resource.go||server/route/api/v1/resource.go",
            "server/server.go||server/server.go"
          ]
        }
      },
      "candidate_diff": {
        "bin/memos/main.go||bin/memos/main.go": [
          "File: bin/memos/main.go -> bin/memos/main.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"context\"",
          "5:  \"fmt\"",
          "6:  \"net/http\"",
          "7:  \"os\"",
          "8:  \"os/signal\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6:  \"log/slog\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11:  \"github.com/spf13/cobra\"",
          "12:  \"github.com/spf13/viper\"",
          "15:  \"github.com/usememos/memos/internal/jobs\"",
          "17:  \"github.com/usememos/memos/server\"",
          "18:  _profile \"github.com/usememos/memos/server/profile\"",
          "19:  \"github.com/usememos/memos/store\"",
          "",
          "[Removed Lines]",
          "13:  \"go.uber.org/zap\"",
          "16:  \"github.com/usememos/memos/internal/log\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "49:    dbDriver, err := db.NewDBDriver(profile)",
          "50:    if err != nil {",
          "51:     cancel()",
          "53:     return",
          "54:    }",
          "55:    if err := dbDriver.Migrate(ctx); err != nil {",
          "56:     cancel()",
          "58:     return",
          "59:    }",
          "61:    storeInstance := store.New(dbDriver, profile)",
          "62:    if err := storeInstance.MigrateManually(ctx); err != nil {",
          "63:     cancel()",
          "65:     return",
          "66:    }",
          "68:    s, err := server.NewServer(ctx, profile, storeInstance)",
          "69:    if err != nil {",
          "70:     cancel()",
          "72:     return",
          "73:    }",
          "",
          "[Removed Lines]",
          "52:     log.Error(\"failed to create db driver\", zap.Error(err))",
          "57:     log.Error(\"failed to migrate db\", zap.Error(err))",
          "64:     log.Error(\"failed to migrate manually\", zap.Error(err))",
          "71:     log.Error(\"failed to create server\", zap.Error(err))",
          "",
          "[Added Lines]",
          "51:     slog.Error(\"failed to create db driver\", err)",
          "56:     slog.Error(\"failed to migrate database\", err)",
          "63:     slog.Error(\"failed to migrate manually\", err)",
          "70:     slog.Error(\"failed to create server\", err)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "79:    signal.Notify(c, os.Interrupt, syscall.SIGTERM)",
          "80:    go func() {",
          "83:     s.Shutdown(ctx)",
          "84:     cancel()",
          "85:    }()",
          "",
          "[Removed Lines]",
          "81:     sig := <-c",
          "82:     log.Info(fmt.Sprintf(\"%s received.\\n\", sig.String()))",
          "",
          "[Added Lines]",
          "80:     <-c",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "92:    if err := s.Start(ctx); err != nil {",
          "93:     if err != http.ErrServerClosed {",
          "95:      cancel()",
          "96:     }",
          "97:    }",
          "",
          "[Removed Lines]",
          "94:      log.Error(\"failed to start server\", zap.Error(err))",
          "",
          "[Added Lines]",
          "92:      slog.Error(\"failed to start server\", err)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "103: )",
          "105: func Execute() error {",
          "107:  return rootCmd.Execute()",
          "108: }",
          "",
          "[Removed Lines]",
          "106:  defer log.Sync()",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "internal/jobs/presign_link.go||internal/jobs/presign_link.go": [
          "File: internal/jobs/presign_link.go -> internal/jobs/presign_link.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"context\"",
          "5:  \"encoding/json\"",
          "6:  \"strings\"",
          "7:  \"time\"",
          "9:  \"github.com/pkg/errors\"",
          "13:  \"github.com/usememos/memos/plugin/storage/s3\"",
          "14:  apiv1 \"github.com/usememos/memos/server/route/api/v1\"",
          "15:  \"github.com/usememos/memos/store\"",
          "",
          "[Removed Lines]",
          "10:  \"go.uber.org/zap\"",
          "12:  \"github.com/usememos/memos/internal/log\"",
          "",
          "[Added Lines]",
          "6:  \"log/slog\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "20: func RunPreSignLinks(ctx context.Context, dataStore *store.Store) {",
          "21:  for {",
          "23:   if err := signExternalLinks(ctx, dataStore); err != nil {",
          "25:   } else {",
          "27:   }",
          "28:   select {",
          "29:   case <-time.After(s3.LinkLifetime / 2):",
          "",
          "[Removed Lines]",
          "22:   started := time.Now()",
          "24:    log.Warn(\"failed sign external links\", zap.Error(err))",
          "26:    log.Info(\"links pre-signed\", zap.Duration(\"duration\", time.Since(started)))",
          "",
          "[Added Lines]",
          "22:    slog.Error(\"failed to pre-sign links\", err)",
          "24:    slog.Debug(\"pre-signed links\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "69:    }",
          "70:    newLink, err := objectStore.PreSignLink(ctx, res.ExternalLink)",
          "71:    if err != nil {",
          "73:     continue // do not fail - we may want update left over links too",
          "74:    }",
          "75:    now := time.Now().Unix()",
          "",
          "[Removed Lines]",
          "72:     log.Warn(\"failed pre-sign link\", zap.Int32(\"resource\", res.ID), zap.String(\"link\", res.ExternalLink), zap.Error(err))",
          "",
          "[Added Lines]",
          "70:     slog.Error(\"failed to pre-sign link\", err)",
          "",
          "---------------"
        ],
        "internal/log/logger.go||internal/log/logger.go": [
          "File: internal/log/logger.go -> internal/log/logger.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "plugin/telegram/attachment.go||plugin/telegram/attachment.go": [
          "File: plugin/telegram/attachment.go -> plugin/telegram/attachment.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package telegram",
          "3: import (",
          "4:  \"path/filepath\"",
          "9: )",
          "11: type Attachment struct {",
          "",
          "[Removed Lines]",
          "6:  \"go.uber.org/zap\"",
          "8:  \"github.com/usememos/memos/internal/log\"",
          "",
          "[Added Lines]",
          "4:  \"log/slog\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30:  mime, ok := mimeTypes[filepath.Ext(b.FileName)]",
          "31:  if !ok {",
          "35:   return \"application/octet-stream\"",
          "36:  }",
          "",
          "[Removed Lines]",
          "33:   log.Warn(\"Unknown file type for \", zap.String(\"filename\", b.FileName))",
          "",
          "[Added Lines]",
          "29:   slog.Warn(\"Unknown file extension\", slog.String(\"file\", b.FileName))",
          "",
          "---------------"
        ],
        "plugin/telegram/bot.go||plugin/telegram/bot.go": [
          "File: plugin/telegram/bot.go -> plugin/telegram/bot.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"context\"",
          "5:  \"errors\"",
          "7:  \"strings\"",
          "8:  \"time\"",
          "13: )",
          "15: type Handler interface {",
          "",
          "[Removed Lines]",
          "6:  \"fmt\"",
          "10:  \"go.uber.org/zap\"",
          "12:  \"github.com/usememos/memos/internal/log\"",
          "",
          "[Added Lines]",
          "6:  \"log/slog\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41:    continue",
          "42:   }",
          "43:   if err != nil {",
          "45:    time.Sleep(errRetryWait)",
          "46:    continue",
          "47:   }",
          "",
          "[Removed Lines]",
          "44:    log.Warn(\"fail to telegram.GetUpdates\", zap.Error(err))",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "56:    if update.CallbackQuery != nil {",
          "57:     err := b.handler.CallbackQueryHandle(ctx, b, *update.CallbackQuery)",
          "58:     if err != nil {",
          "60:     }",
          "62:     continue",
          "",
          "[Removed Lines]",
          "59:      log.Error(\"fail to handle CallbackQuery\", zap.Error(err))",
          "",
          "[Added Lines]",
          "54:      slog.Error(\"fail to handle callback query\", err)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "70:     if !message.IsSupported() {",
          "71:      _, err := b.SendReplyMessage(ctx, message.Chat.ID, message.MessageID, \"Supported messages: animation, audio, text, document, photo, video, video note, voice, other messages with caption\")",
          "72:      if err != nil {",
          "74:      }",
          "75:      continue",
          "76:     }",
          "",
          "[Removed Lines]",
          "73:       log.Error(fmt.Sprintf(\"fail to telegram.SendReplyMessage for messageID=%d\", message.MessageID), zap.Error(err))",
          "",
          "[Added Lines]",
          "68:       slog.Error(\"fail to send reply message\", err)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "89:   err = b.handleSingleMessages(ctx, singleMessages)",
          "90:   if err != nil {",
          "92:   }",
          "94:   err = b.handleGroupMessages(ctx, groupMessages)",
          "95:   if err != nil {",
          "97:   }",
          "98:  }",
          "99: }",
          "",
          "[Removed Lines]",
          "91:    log.Error(\"fail to handle singleMessage\", zap.Error(err))",
          "96:    log.Error(\"fail to handle plain text message\", zap.Error(err))",
          "",
          "[Added Lines]",
          "86:    slog.Error(\"fail to handle plain text message\", err)",
          "91:    slog.Error(\"fail to handle media group message\", err)",
          "",
          "---------------"
        ],
        "server/route/api/v1/jwt.go||server/route/api/v1/jwt.go": [
          "File: server/route/api/v1/jwt.go -> server/route/api/v1/jwt.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"fmt\"",
          "5:  \"net/http\"",
          "6:  \"strings\"",
          "8:  \"github.com/golang-jwt/jwt/v5\"",
          "9:  \"github.com/labstack/echo/v4\"",
          "10:  \"github.com/pkg/errors\"",
          "14:  \"github.com/usememos/memos/internal/util\"",
          "15:  storepb \"github.com/usememos/memos/proto/gen/store\"",
          "16:  \"github.com/usememos/memos/server/route/api/auth\"",
          "",
          "[Removed Lines]",
          "11:  \"go.uber.org/zap\"",
          "13:  \"github.com/usememos/memos/internal/log\"",
          "",
          "[Added Lines]",
          "5:  \"log/slog\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "83:   if err != nil {",
          "84:    err = removeAccessTokenAndCookies(c, server.Store, userID, accessToken)",
          "85:    if err != nil {",
          "87:    }",
          "88:    return echo.NewHTTPError(http.StatusUnauthorized, \"Invalid or expired access token\")",
          "89:   }",
          "",
          "[Removed Lines]",
          "86:     log.Error(\"fail to remove AccessToken and Cookies\", zap.Error(err))",
          "",
          "[Added Lines]",
          "85:     slog.Warn(\"fail to remove AccessToken and Cookies\", err)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "95:   if !validateAccessToken(accessToken, accessTokens) {",
          "96:    err = removeAccessTokenAndCookies(c, server.Store, userID, accessToken)",
          "97:    if err != nil {",
          "99:    }",
          "100:    return echo.NewHTTPError(http.StatusUnauthorized, \"Invalid access token.\")",
          "101:   }",
          "",
          "[Removed Lines]",
          "98:     log.Error(\"fail to remove AccessToken and Cookies\", zap.Error(err))",
          "",
          "[Added Lines]",
          "97:     slog.Warn(\"fail to remove AccessToken and Cookies\", err)",
          "",
          "---------------"
        ],
        "server/route/api/v1/memo.go||server/route/api/v1/memo.go": [
          "File: server/route/api/v1/memo.go -> server/route/api/v1/memo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:  \"context\"",
          "5:  \"encoding/json\"",
          "6:  \"fmt\"",
          "7:  \"net/http\"",
          "8:  \"strconv\"",
          "9:  \"time\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7:  \"log/slog\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11:  \"github.com/labstack/echo/v4\"",
          "12:  \"github.com/lithammer/shortuuid/v4\"",
          "13:  \"github.com/pkg/errors\"",
          "17:  \"github.com/usememos/memos/internal/util\"",
          "18:  \"github.com/usememos/memos/plugin/webhook\"",
          "19:  storepb \"github.com/usememos/memos/proto/gen/store\"",
          "",
          "[Removed Lines]",
          "14:  \"go.uber.org/zap\"",
          "16:  \"github.com/usememos/memos/internal/log\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "390:   for _, userSetting := range userSettings {",
          "391:    tgUserID, err := strconv.ParseInt(userSetting.GetTelegramUserId(), 10, 64)",
          "392:    if err != nil {",
          "394:     continue",
          "395:    }",
          "",
          "[Removed Lines]",
          "393:     log.Error(\"failed to parse Telegram UserID\", zap.Error(err))",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "398:    content := memoResponse.CreatorName + \" Says:\\n\\n\" + memoResponse.Content",
          "399:    _, err = s.telegramBot.SendMessage(ctx, tgUserID, content)",
          "400:    if err != nil {",
          "402:     continue",
          "403:    }",
          "404:   }",
          "405:  }",
          "407:  if err := s.DispatchMemoCreatedWebhook(ctx, memoResponse); err != nil {",
          "409:  }",
          "411:  return c.JSON(http.StatusOK, memoResponse)",
          "",
          "[Removed Lines]",
          "401:     log.Error(\"Failed to send Telegram notification\", zap.Error(err))",
          "408:   log.Warn(\"Failed to dispatch memo created webhook\", zap.Error(err))",
          "",
          "[Added Lines]",
          "405:   slog.Warn(\"Failed to dispatch memo created webhook\", err)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "627:  if memoMessage, err := s.convertMemoFromStore(ctx, memo); err == nil {",
          "629:   if err := s.DispatchMemoDeletedWebhook(ctx, memoMessage); err != nil {",
          "631:   }",
          "632:  }",
          "",
          "[Removed Lines]",
          "630:    log.Warn(\"Failed to dispatch memo deleted webhook\", zap.Error(err))",
          "",
          "[Added Lines]",
          "627:    slog.Warn(\"Failed to dispatch memo deleted webhook\", err)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "821:  }",
          "823:  if err := s.DispatchMemoUpdatedWebhook(ctx, memoResponse); err != nil {",
          "825:  }",
          "827:  return c.JSON(http.StatusOK, memoResponse)",
          "",
          "[Removed Lines]",
          "824:   log.Warn(\"Failed to dispatch memo updated webhook\", zap.Error(err))",
          "",
          "[Added Lines]",
          "821:   slog.Error(\"Failed to dispatch memo updated webhook\", err)",
          "",
          "---------------"
        ],
        "server/route/api/v1/resource.go||server/route/api/v1/resource.go": [
          "File: server/route/api/v1/resource.go -> server/route/api/v1/resource.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "17:  \"github.com/labstack/echo/v4\"",
          "18:  \"github.com/lithammer/shortuuid/v4\"",
          "19:  \"github.com/pkg/errors\"",
          "23:  \"github.com/usememos/memos/internal/util\"",
          "24:  \"github.com/usememos/memos/plugin/storage/s3\"",
          "25:  \"github.com/usememos/memos/store\"",
          "",
          "[Removed Lines]",
          "20:  \"go.uber.org/zap\"",
          "22:  \"github.com/usememos/memos/internal/log\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "192:   if settingMaxUploadSizeMiB, err := strconv.Atoi(maxUploadSetting.Value); err == nil {",
          "193:    settingMaxUploadSizeBytes = settingMaxUploadSizeMiB * MebiByte",
          "194:   } else {",
          "196:    settingMaxUploadSizeBytes = 0",
          "197:   }",
          "198:  } else {",
          "",
          "[Removed Lines]",
          "195:    log.Warn(\"Failed to parse max upload size\", zap.Error(err))",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "server/route/api/v2/logger_interceptor.go||server/route/api/v2/logger_interceptor.go": [
          "File: server/route/api/v2/logger_interceptor.go -> server/route/api/v2/logger_interceptor.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package v2",
          "3: import (",
          "4:  \"context\"",
          "5:  \"log/slog\"",
          "7:  \"google.golang.org/grpc\"",
          "8:  \"google.golang.org/grpc/codes\"",
          "9:  \"google.golang.org/grpc/status\"",
          "10: )",
          "12: type LoggerInterceptor struct {",
          "13: }",
          "15: func NewLoggerInterceptor() *LoggerInterceptor {",
          "16:  return &LoggerInterceptor{}",
          "17: }",
          "19: func (in *LoggerInterceptor) LoggerInterceptor(ctx context.Context, request any, serverInfo *grpc.UnaryServerInfo, handler grpc.UnaryHandler) (any, error) {",
          "20:  resp, err := handler(ctx, request)",
          "21:  in.loggerInterceptorDo(ctx, serverInfo.FullMethod, err)",
          "22:  return resp, err",
          "23: }",
          "25: func (*LoggerInterceptor) loggerInterceptorDo(ctx context.Context, fullMethod string, err error) {",
          "26:  st := status.Convert(err)",
          "27:  var logLevel slog.Level",
          "28:  var logMsg string",
          "29:  switch st.Code() {",
          "30:  case codes.OK:",
          "31:   logLevel = slog.LevelInfo",
          "32:   logMsg = \"OK\"",
          "33:  case codes.Unauthenticated, codes.OutOfRange, codes.PermissionDenied, codes.NotFound:",
          "34:   logLevel = slog.LevelInfo",
          "35:   logMsg = \"client error\"",
          "36:  case codes.Internal, codes.Unknown, codes.DataLoss, codes.Unavailable, codes.DeadlineExceeded:",
          "37:   logLevel = slog.LevelError",
          "38:   logMsg = \"server error\"",
          "39:  default:",
          "40:   logLevel = slog.LevelError",
          "41:   logMsg = \"unknown error\"",
          "42:  }",
          "43:  slog.LogAttrs(ctx, logLevel, logMsg, slog.String(\"method\", fullMethod))",
          "44: }",
          "",
          "---------------"
        ],
        "server/route/api/v2/memo_service.go||server/route/api/v2/memo_service.go": [
          "File: server/route/api/v2/memo_service.go -> server/route/api/v2/memo_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:  \"context\"",
          "7:  \"encoding/json\"",
          "8:  \"fmt\"",
          "9:  \"time\"",
          "11:  \"github.com/google/cel-go/cel\"",
          "12:  \"github.com/lithammer/shortuuid/v4\"",
          "13:  \"github.com/pkg/errors\"",
          "15:  expr \"google.golang.org/genproto/googleapis/api/expr/v1alpha1\"",
          "16:  \"google.golang.org/grpc/codes\"",
          "17:  \"google.golang.org/grpc/status\"",
          "18:  \"google.golang.org/protobuf/types/known/timestamppb\"",
          "21:  \"github.com/usememos/memos/internal/util\"",
          "22:  \"github.com/usememos/memos/plugin/webhook\"",
          "23:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "",
          "[Removed Lines]",
          "14:  \"go.uber.org/zap\"",
          "20:  \"github.com/usememos/memos/internal/log\"",
          "",
          "[Added Lines]",
          "9:  \"log/slog\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70:  }",
          "72:  if err := s.DispatchMemoCreatedWebhook(ctx, memoMessage); err != nil {",
          "74:  }",
          "76:  response := &apiv2pb.CreateMemoResponse{",
          "",
          "[Removed Lines]",
          "73:   log.Warn(\"Failed to dispatch memo created webhook\", zap.Error(err))",
          "",
          "[Added Lines]",
          "72:   slog.Warn(\"Failed to dispatch memo created webhook\", err)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "280:  }",
          "282:  if err := s.DispatchMemoUpdatedWebhook(ctx, memoMessage); err != nil {",
          "284:  }",
          "286:  return &apiv2pb.UpdateMemoResponse{",
          "",
          "[Removed Lines]",
          "283:   log.Warn(\"Failed to dispatch memo updated webhook\", zap.Error(err))",
          "",
          "[Added Lines]",
          "282:   slog.Warn(\"Failed to dispatch memo updated webhook\", err)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "307:  if memoMessage, err := s.convertMemoFromStore(ctx, memo); err == nil {",
          "309:   if err := s.DispatchMemoDeletedWebhook(ctx, memoMessage); err != nil {",
          "311:   }",
          "312:  }",
          "",
          "[Removed Lines]",
          "310:    log.Warn(\"Failed to dispatch memo deleted webhook\", zap.Error(err))",
          "",
          "[Added Lines]",
          "309:    slog.Warn(\"Failed to dispatch memo deleted webhook\", err)",
          "",
          "---------------"
        ],
        "server/route/api/v2/v2.go||server/route/api/v2/v2.go": [
          "File: server/route/api/v2/v2.go -> server/route/api/v2/v2.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"context\"",
          "5:  \"fmt\"",
          "6:  \"net\"",
          "8:  \"github.com/grpc-ecosystem/grpc-gateway/v2/runtime\"",
          "9:  \"github.com/improbable-eng/grpc-web/go/grpcweb\"",
          "10:  \"github.com/labstack/echo/v4\"",
          "11:  \"github.com/pkg/errors\"",
          "13:  \"google.golang.org/grpc\"",
          "14:  \"google.golang.org/grpc/credentials/insecure\"",
          "15:  \"google.golang.org/grpc/reflection\"",
          "18:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "19:  \"github.com/usememos/memos/server/profile\"",
          "20:  \"github.com/usememos/memos/store\"",
          "",
          "[Removed Lines]",
          "12:  \"go.uber.org/zap\"",
          "17:  \"github.com/usememos/memos/internal/log\"",
          "",
          "[Added Lines]",
          "6:  \"log/slog\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:  authProvider := NewGRPCAuthInterceptor(store, secret)",
          "46:  grpcServer := grpc.NewServer(",
          "47:   grpc.ChainUnaryInterceptor(",
          "48:    authProvider.AuthenticationInterceptor,",
          "49:   ),",
          "50:  )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47:    NewLoggerInterceptor().LoggerInterceptor,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "138:  }",
          "139:  go func() {",
          "140:   if err := s.grpcServer.Serve(listen); err != nil {",
          "142:   }",
          "143:  }()",
          "",
          "[Removed Lines]",
          "141:    log.Error(\"grpc server listen error\", zap.Error(err))",
          "",
          "[Added Lines]",
          "141:    slog.Error(\"failed to start gRPC server\", err)",
          "",
          "---------------"
        ],
        "server/route/resource/resource.go||server/route/resource/resource.go": [
          "File: server/route/resource/resource.go -> server/route/resource/resource.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:  \"bytes\"",
          "5:  \"fmt\"",
          "6:  \"io\"",
          "7:  \"net/http\"",
          "8:  \"os\"",
          "9:  \"path/filepath\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7:  \"log/slog\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "14:  \"github.com/disintegration/imaging\"",
          "15:  \"github.com/labstack/echo/v4\"",
          "16:  \"github.com/pkg/errors\"",
          "20:  \"github.com/usememos/memos/internal/util\"",
          "21:  \"github.com/usememos/memos/server/profile\"",
          "22:  \"github.com/usememos/memos/store\"",
          "",
          "[Removed Lines]",
          "17:  \"go.uber.org/zap\"",
          "19:  \"github.com/usememos/memos/internal/log\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "99:   thumbnailPath := filepath.Join(s.Profile.Data, thumbnailImagePath, fmt.Sprintf(\"%d%s\", resource.ID, ext))",
          "100:   thumbnailBlob, err := getOrGenerateThumbnailImage(blob, thumbnailPath)",
          "101:   if err != nil {",
          "103:   } else {",
          "104:    blob = thumbnailBlob",
          "105:   }",
          "",
          "[Removed Lines]",
          "102:    log.Warn(fmt.Sprintf(\"failed to get or generate local thumbnail with path %s\", thumbnailPath), zap.Error(err))",
          "",
          "[Added Lines]",
          "101:    slog.Warn(\"failed to get or generate thumbnail image\", err)",
          "",
          "---------------"
        ],
        "server/server.go||server/server.go": [
          "File: server/server.go -> server/server.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:  \"github.com/google/uuid\"",
          "11:  \"github.com/labstack/echo/v4\"",
          "13:  \"github.com/pkg/errors\"",
          "15:  \"github.com/usememos/memos/plugin/telegram\"",
          "",
          "[Removed Lines]",
          "12:  \"github.com/labstack/echo/v4/middleware\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:   telegramBot: telegram.NewBotWithHandler(integration.NewTelegramHandler(store)),",
          "50:  }",
          "58:  e.Use(CORSMiddleware())",
          "65:  serverID, err := s.getSystemServerID(ctx)",
          "66:  if err != nil {",
          "67:   return nil, errors.Wrap(err, \"failed to retrieve system server ID\")",
          "68:  }",
          "69:  s.ID = serverID",
          "77:  secret := \"usememos\"",
          "78:  if profile.Mode == \"prod\" {",
          "79:   secret, err = s.getSystemSecretSessionName(ctx)",
          "",
          "[Removed Lines]",
          "52:  e.Use(middleware.LoggerWithConfig(middleware.LoggerConfig{",
          "53:   Format: `{\"time\":\"${time_rfc3339}\",\"latency\":\"${latency_human}\",` +",
          "54:    `\"method\":\"${method}\",\"uri\":\"${uri}\",` +",
          "55:    `\"status\":${status},\"error\":\"${error}\"}` + \"\\n\",",
          "56:  }))",
          "60:  e.Use(middleware.TimeoutWithConfig(middleware.TimeoutConfig{",
          "61:   Skipper: grpcRequestSkipper,",
          "62:   Timeout: 30 * time.Second,",
          "63:  }))",
          "72:  if profile.Frontend {",
          "73:   frontendService := frontend.NewFrontendService(profile, store)",
          "74:   frontendService.Serve(ctx, e)",
          "75:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "88:   return c.String(http.StatusOK, \"Service ready.\")",
          "89:  })",
          "92:  rootGroup := e.Group(\"\")",
          "93:  apiV1Service := apiv1.NewAPIV1Service(s.Secret, profile, store, s.telegramBot)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "75:  if profile.Frontend {",
          "76:   frontendService := frontend.NewFrontendService(profile, store)",
          "77:   frontendService.Serve(ctx, e)",
          "78:  }",
          "",
          "---------------"
        ],
        "store/db/mysql/mysql.go||store/db/mysql/mysql.go": [
          "File: store/db/mysql/mysql.go -> store/db/mysql/mysql.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"context\"",
          "5:  \"database/sql\"",
          "8:  \"github.com/go-sql-driver/mysql\"",
          "9:  \"github.com/pkg/errors\"",
          "12:  \"github.com/usememos/memos/server/profile\"",
          "13:  \"github.com/usememos/memos/store\"",
          "14: )",
          "",
          "[Removed Lines]",
          "6:  \"fmt\"",
          "11:  \"github.com/usememos/memos/internal/log\"",
          "",
          "[Added Lines]",
          "6:  \"log/slog\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31:  driver := DB{profile: profile}",
          "32:  driver.config, err = mysql.ParseDSN(dsn)",
          "33:  if err != nil {",
          "35:   return nil, errors.New(\"Parse DSN eroor\")",
          "36:  }",
          "",
          "[Removed Lines]",
          "34:   log.Error(fmt.Sprintf(\"DSN parse error: %s\", dsn))",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "87:   \" GROUP BY `table_schema`\"",
          "88:  rows, err := d.db.QueryContext(ctx, query, d.config.DBName)",
          "89:  if err != nil {",
          "91:   return 0, err",
          "92:  }",
          "93:  defer rows.Close()",
          "",
          "[Removed Lines]",
          "90:   log.Error(\"Query db size error, make sure you have enough privilege\")",
          "",
          "[Added Lines]",
          "88:   slog.Error(\"Query db size error, make sure you have enough privilege\", err)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "14d4cfd5a4870766ac6d2ec21dfc651118f679c2",
      "candidate_info": {
        "commit_hash": "14d4cfd5a4870766ac6d2ec21dfc651118f679c2",
        "repo": "usememos/memos",
        "commit_url": "https://github.com/usememos/memos/commit/14d4cfd5a4870766ac6d2ec21dfc651118f679c2",
        "files": [
          "internal/jobs/presign_link.go",
          "server/route/api/v2/auth_service.go",
          "server/route/api/v2/idp_service.go",
          "server/route/api/v2/resource_service.go",
          "server/route/api/v2/storage_service.go",
          "server/route/api/v2/workspace_setting_service.go",
          "server/server.go",
          "store/cache.go",
          "store/idp.go",
          "store/migrator.go",
          "store/storage.go",
          "store/store.go",
          "store/user_setting.go",
          "store/workspace_setting.go",
          "test/store/idp_test.go",
          "test/store/storage_test.go",
          "test/store/workspace_setting_test.go"
        ],
        "message": "chore: tweak store methods name",
        "before_after_code_files": [
          "internal/jobs/presign_link.go||internal/jobs/presign_link.go",
          "server/route/api/v2/auth_service.go||server/route/api/v2/auth_service.go",
          "server/route/api/v2/idp_service.go||server/route/api/v2/idp_service.go",
          "server/route/api/v2/resource_service.go||server/route/api/v2/resource_service.go",
          "server/route/api/v2/storage_service.go||server/route/api/v2/storage_service.go",
          "server/route/api/v2/workspace_setting_service.go||server/route/api/v2/workspace_setting_service.go",
          "server/server.go||server/server.go",
          "store/cache.go||store/cache.go",
          "store/idp.go||store/idp.go",
          "store/migrator.go||store/migrator.go",
          "store/storage.go||store/storage.go",
          "store/store.go||store/store.go",
          "store/user_setting.go||store/user_setting.go",
          "store/workspace_setting.go||store/workspace_setting.go",
          "test/store/idp_test.go||test/store/idp_test.go",
          "test/store/storage_test.go||test/store/storage_test.go",
          "test/store/workspace_setting_test.go||test/store/workspace_setting_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "internal/jobs/presign_link.go||internal/jobs/presign_link.go",
            "server/route/api/v2/storage_service.go||server/route/api/v2/storage_service.go",
            "server/server.go||server/server.go"
          ],
          "candidate": [
            "internal/jobs/presign_link.go||internal/jobs/presign_link.go",
            "server/route/api/v2/storage_service.go||server/route/api/v2/storage_service.go",
            "server/server.go||server/server.go"
          ]
        }
      },
      "candidate_diff": {
        "internal/jobs/presign_link.go||internal/jobs/presign_link.go": [
          "File: internal/jobs/presign_link.go -> internal/jobs/presign_link.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "103:  if workspaceStorageSetting.StorageType != storepb.WorkspaceStorageSetting_STORAGE_TYPE_EXTERNAL || workspaceStorageSetting.ActivedExternalStorageId == nil {",
          "104:   return nil, nil",
          "105:  }",
          "107:  if err != nil {",
          "108:   return nil, errors.Wrap(err, \"Failed to find storage\")",
          "109:  }",
          "",
          "[Removed Lines]",
          "106:  storage, err := dataStore.GetStorageV1(ctx, &store.FindStorage{ID: workspaceStorageSetting.ActivedExternalStorageId})",
          "",
          "[Added Lines]",
          "106:  storage, err := dataStore.GetStorage(ctx, &store.FindStorage{ID: workspaceStorageSetting.ActivedExternalStorageId})",
          "",
          "---------------"
        ],
        "server/route/api/v2/auth_service.go||server/route/api/v2/auth_service.go": [
          "File: server/route/api/v2/auth_service.go -> server/route/api/v2/auth_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "72: }",
          "74: func (s *APIV2Service) SignInWithSSO(ctx context.Context, request *apiv2pb.SignInWithSSORequest) (*apiv2pb.SignInWithSSOResponse, error) {",
          "76:   ID: &request.IdpId,",
          "77:  })",
          "78:  if err != nil {",
          "",
          "[Removed Lines]",
          "75:  identityProvider, err := s.Store.GetIdentityProviderV1(ctx, &store.FindIdentityProvider{",
          "",
          "[Added Lines]",
          "75:  identityProvider, err := s.Store.GetIdentityProvider(ctx, &store.FindIdentityProvider{",
          "",
          "---------------"
        ],
        "server/route/api/v2/idp_service.go||server/route/api/v2/idp_service.go": [
          "File: server/route/api/v2/idp_service.go -> server/route/api/v2/idp_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:   return nil, status.Errorf(codes.PermissionDenied, \"permission denied\")",
          "22:  }",
          "25:  if err != nil {",
          "26:   return nil, status.Errorf(codes.Internal, \"failed to create identity provider, error: %+v\", err)",
          "27:  }",
          "",
          "[Removed Lines]",
          "24:  identityProvider, err := s.Store.CreateIdentityProviderV1(ctx, convertIdentityProviderToStore(request.IdentityProvider))",
          "",
          "[Added Lines]",
          "24:  identityProvider, err := s.Store.CreateIdentityProvider(ctx, convertIdentityProviderToStore(request.IdentityProvider))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31: }",
          "33: func (s *APIV2Service) ListIdentityProviders(ctx context.Context, _ *apiv2pb.ListIdentityProvidersRequest) (*apiv2pb.ListIdentityProvidersResponse, error) {",
          "35:  if err != nil {",
          "36:   return nil, status.Errorf(codes.Internal, \"failed to list identity providers, error: %+v\", err)",
          "37:  }",
          "",
          "[Removed Lines]",
          "34:  identityProviders, err := s.Store.ListIdentityProvidersV1(ctx, &store.FindIdentityProvider{})",
          "",
          "[Added Lines]",
          "34:  identityProviders, err := s.Store.ListIdentityProviders(ctx, &store.FindIdentityProvider{})",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "50:  if err != nil {",
          "51:   return nil, status.Errorf(codes.InvalidArgument, \"invalid identity provider name: %v\", err)",
          "52:  }",
          "54:   ID: &id,",
          "55:  })",
          "56:  if err != nil {",
          "",
          "[Removed Lines]",
          "53:  identityProvider, err := s.Store.GetIdentityProviderV1(ctx, &store.FindIdentityProvider{",
          "",
          "[Added Lines]",
          "53:  identityProvider, err := s.Store.GetIdentityProvider(ctx, &store.FindIdentityProvider{",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "86:   }",
          "87:  }",
          "90:  if err != nil {",
          "91:   return nil, status.Errorf(codes.Internal, \"failed to update identity provider, error: %+v\", err)",
          "92:  }",
          "",
          "[Removed Lines]",
          "89:  identityProvider, err := s.Store.UpdateIdentityProviderV1(ctx, update)",
          "",
          "[Added Lines]",
          "89:  identityProvider, err := s.Store.UpdateIdentityProvider(ctx, update)",
          "",
          "---------------"
        ],
        "server/route/api/v2/resource_service.go||server/route/api/v2/resource_service.go": [
          "File: server/route/api/v2/resource_service.go -> server/route/api/v2/resource_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "296:   if workspaceStorageSetting.ActivedExternalStorageId == nil {",
          "297:    return errors.Errorf(\"No actived external storage found\")",
          "298:   }",
          "300:   if err != nil {",
          "301:    return errors.Wrap(err, \"Failed to find actived external storage\")",
          "302:   }",
          "",
          "[Removed Lines]",
          "299:   storage, err := s.GetStorageV1(ctx, &store.FindStorage{ID: workspaceStorageSetting.ActivedExternalStorageId})",
          "",
          "[Added Lines]",
          "299:   storage, err := s.GetStorage(ctx, &store.FindStorage{ID: workspaceStorageSetting.ActivedExternalStorageId})",
          "",
          "---------------"
        ],
        "server/route/api/v2/storage_service.go||server/route/api/v2/storage_service.go": [
          "File: server/route/api/v2/storage_service.go -> server/route/api/v2/storage_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:   return nil, status.Errorf(codes.PermissionDenied, \"permission denied\")",
          "21:  }",
          "24:  if err != nil {",
          "25:   return nil, status.Errorf(codes.Internal, \"failed to create storage, error: %+v\", err)",
          "26:  }",
          "",
          "[Removed Lines]",
          "23:  storage, err := s.Store.CreateStorageV1(ctx, convertStorageToStore(request.Storage))",
          "",
          "[Added Lines]",
          "23:  storage, err := s.Store.CreateStorage(ctx, convertStorageToStore(request.Storage))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30: }",
          "32: func (s *APIV2Service) ListStorages(ctx context.Context, _ *apiv2pb.ListStoragesRequest) (*apiv2pb.ListStoragesResponse, error) {",
          "34:  if err != nil {",
          "35:   return nil, status.Errorf(codes.Internal, \"failed to list storages, error: %+v\", err)",
          "36:  }",
          "",
          "[Removed Lines]",
          "33:  storages, err := s.Store.ListStoragesV1(ctx, &store.FindStorage{})",
          "",
          "[Added Lines]",
          "33:  storages, err := s.Store.ListStorages(ctx, &store.FindStorage{})",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "45: }",
          "47: func (s *APIV2Service) GetStorage(ctx context.Context, request *apiv2pb.GetStorageRequest) (*apiv2pb.GetStorageResponse, error) {",
          "49:   ID: &request.Id,",
          "50:  })",
          "51:  if err != nil {",
          "",
          "[Removed Lines]",
          "48:  storage, err := s.Store.GetStorageV1(ctx, &store.FindStorage{",
          "",
          "[Added Lines]",
          "48:  storage, err := s.Store.GetStorage(ctx, &store.FindStorage{",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "77:   }",
          "78:  }",
          "81:  if err != nil {",
          "82:   return nil, status.Errorf(codes.Internal, \"failed to update storage, error: %+v\", err)",
          "83:  }",
          "",
          "[Removed Lines]",
          "80:  storage, err := s.Store.UpdateStorageV1(ctx, update)",
          "",
          "[Added Lines]",
          "80:  storage, err := s.Store.UpdateStorage(ctx, update)",
          "",
          "---------------"
        ],
        "server/route/api/v2/workspace_setting_service.go||server/route/api/v2/workspace_setting_service.go": [
          "File: server/route/api/v2/workspace_setting_service.go -> server/route/api/v2/workspace_setting_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: )",
          "15: func (s *APIV2Service) ListWorkspaceSettings(ctx context.Context, _ *apiv2pb.ListWorkspaceSettingsRequest) (*apiv2pb.ListWorkspaceSettingsResponse, error) {",
          "17:  if err != nil {",
          "18:   return nil, status.Errorf(codes.Internal, \"failed to get workspace setting: %v\", err)",
          "19:  }",
          "",
          "[Removed Lines]",
          "16:  workspaceSettings, err := s.Store.ListWorkspaceSettingsV1(ctx, &store.FindWorkspaceSetting{})",
          "",
          "[Added Lines]",
          "16:  workspaceSettings, err := s.Store.ListWorkspaceSettings(ctx, &store.FindWorkspaceSetting{})",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36:   return nil, status.Errorf(codes.InvalidArgument, \"invalid workspace setting name: %v\", err)",
          "37:  }",
          "38:  settingKey := storepb.WorkspaceSettingKey(storepb.WorkspaceSettingKey_value[settingKeyString])",
          "40:   Name: settingKey.String(),",
          "41:  })",
          "42:  if err != nil {",
          "",
          "[Removed Lines]",
          "39:  workspaceSetting, err := s.Store.GetWorkspaceSettingV1(ctx, &store.FindWorkspaceSetting{",
          "",
          "[Added Lines]",
          "39:  workspaceSetting, err := s.Store.GetWorkspaceSetting(ctx, &store.FindWorkspaceSetting{",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "64:   return nil, status.Errorf(codes.PermissionDenied, \"permission denied\")",
          "65:  }",
          "68:   return nil, status.Errorf(codes.Internal, \"failed to upsert workspace setting: %v\", err)",
          "69:  }",
          "",
          "[Removed Lines]",
          "67:  if _, err := s.Store.UpsertWorkspaceSettingV1(ctx, convertWorkspaceSettingToStore(request.Setting)); err != nil {",
          "",
          "[Added Lines]",
          "67:  if _, err := s.Store.UpsertWorkspaceSetting(ctx, convertWorkspaceSettingToStore(request.Setting)); err != nil {",
          "",
          "---------------"
        ],
        "server/server.go||server/server.go": [
          "File: server/server.go -> server/server.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "133:   modified = true",
          "134:  }",
          "135:  if modified {",
          "137:    Key:   storepb.WorkspaceSettingKey_WORKSPACE_SETTING_BASIC,",
          "138:    Value: &storepb.WorkspaceSetting_BasicSetting{BasicSetting: workspaceBasicSetting},",
          "139:   })",
          "",
          "[Removed Lines]",
          "136:   workspaceSetting, err := s.Store.UpsertWorkspaceSettingV1(ctx, &storepb.WorkspaceSetting{",
          "",
          "[Added Lines]",
          "136:   workspaceSetting, err := s.Store.UpsertWorkspaceSetting(ctx, &storepb.WorkspaceSetting{",
          "",
          "---------------"
        ],
        "store/cache.go||store/cache.go": [
          "File: store/cache.go -> store/cache.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:  \"fmt\"",
          "5: )",
          "8:  return fmt.Sprintf(\"%d-%s-v1\", userID, key)",
          "9: }",
          "",
          "[Removed Lines]",
          "7: func getUserSettingV1CacheKey(userID int32, key string) string {",
          "",
          "[Added Lines]",
          "7: func getUserSettingCacheKey(userID int32, key string) string {",
          "",
          "---------------"
        ],
        "store/idp.go||store/idp.go": [
          "File: store/idp.go -> store/idp.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:  ID int32",
          "33: }",
          "36:  raw, err := convertIdentityProviderToRaw(create)",
          "37:  if err != nil {",
          "38:   return nil, err",
          "",
          "[Removed Lines]",
          "35: func (s *Store) CreateIdentityProviderV1(ctx context.Context, create *storepb.IdentityProvider) (*storepb.IdentityProvider, error) {",
          "",
          "[Added Lines]",
          "35: func (s *Store) CreateIdentityProvider(ctx context.Context, create *storepb.IdentityProvider) (*storepb.IdentityProvider, error) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:  if err != nil {",
          "47:   return nil, err",
          "48:  }",
          "50:  return identityProvider, nil",
          "51: }",
          "54:  list, err := s.driver.ListIdentityProviders(ctx, find)",
          "55:  if err != nil {",
          "56:   return nil, err",
          "",
          "[Removed Lines]",
          "49:  s.idpV1Cache.Store(identityProvider.Id, identityProvider)",
          "53: func (s *Store) ListIdentityProvidersV1(ctx context.Context, find *FindIdentityProvider) ([]*storepb.IdentityProvider, error) {",
          "",
          "[Added Lines]",
          "49:  s.idpCache.Store(identityProvider.Id, identityProvider)",
          "53: func (s *Store) ListIdentityProviders(ctx context.Context, find *FindIdentityProvider) ([]*storepb.IdentityProvider, error) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "62:   if err != nil {",
          "63:    return nil, err",
          "64:   }",
          "66:  }",
          "67:  return identityProviders, nil",
          "68: }",
          "71:  if find.ID != nil {",
          "73:    return cache.(*storepb.IdentityProvider), nil",
          "74:   }",
          "75:  }",
          "78:  if err != nil {",
          "79:   return nil, err",
          "80:  }",
          "",
          "[Removed Lines]",
          "65:   s.idpV1Cache.Store(identityProvider.Id, identityProvider)",
          "70: func (s *Store) GetIdentityProviderV1(ctx context.Context, find *FindIdentityProvider) (*storepb.IdentityProvider, error) {",
          "72:   if cache, ok := s.idpV1Cache.Load(*find.ID); ok {",
          "77:  list, err := s.ListIdentityProvidersV1(ctx, find)",
          "",
          "[Added Lines]",
          "65:   s.idpCache.Store(identityProvider.Id, identityProvider)",
          "70: func (s *Store) GetIdentityProvider(ctx context.Context, find *FindIdentityProvider) (*storepb.IdentityProvider, error) {",
          "72:   if cache, ok := s.idpCache.Load(*find.ID); ok {",
          "77:  list, err := s.ListIdentityProviders(ctx, find)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "97:  Config           *storepb.IdentityProviderConfig",
          "98: }",
          "101:  updateRaw := &UpdateIdentityProvider{",
          "102:   ID: update.ID,",
          "103:  }",
          "",
          "[Removed Lines]",
          "100: func (s *Store) UpdateIdentityProviderV1(ctx context.Context, update *UpdateIdentityProviderV1) (*storepb.IdentityProvider, error) {",
          "",
          "[Added Lines]",
          "100: func (s *Store) UpdateIdentityProvider(ctx context.Context, update *UpdateIdentityProviderV1) (*storepb.IdentityProvider, error) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "123:  if err != nil {",
          "124:   return nil, err",
          "125:  }",
          "127:  return identityProvider, nil",
          "128: }",
          "",
          "[Removed Lines]",
          "126:  s.idpV1Cache.Store(identityProvider.Id, identityProvider)",
          "",
          "[Added Lines]",
          "126:  s.idpCache.Store(identityProvider.Id, identityProvider)",
          "",
          "---------------"
        ],
        "store/migrator.go||store/migrator.go": [
          "File: store/migrator.go -> store/migrator.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package store",
          "",
          "[Removed Lines]",
          "3: import (",
          "4:  \"context\"",
          "5:  \"encoding/json\"",
          "6:  \"fmt\"",
          "8:  \"github.com/pkg/errors\"",
          "10:  storepb \"github.com/usememos/memos/proto/gen/store\"",
          "11: )",
          "14: func (s *Store) MigrateWorkspaceSetting(ctx context.Context) error {",
          "15:  workspaceSettings, err := s.ListWorkspaceSettings(ctx, &FindWorkspaceSetting{})",
          "16:  if err != nil {",
          "17:   return errors.Wrap(err, \"failed to list workspace settings\")",
          "18:  }",
          "20:  workspaceBasicSetting, err := s.GetWorkspaceBasicSetting(ctx)",
          "21:  if err != nil {",
          "22:   return errors.Wrap(err, \"failed to get workspace basic setting\")",
          "23:  }",
          "25:  workspaceGeneralSetting, err := s.GetWorkspaceGeneralSetting(ctx)",
          "26:  if err != nil {",
          "27:   return errors.Wrap(err, \"failed to get workspace general setting\")",
          "28:  }",
          "30:  for _, workspaceSetting := range workspaceSettings {",
          "31:   matched := true",
          "32:   var baseValue any",
          "34:   json.Unmarshal([]byte(workspaceSetting.Value), &baseValue)",
          "35:   if workspaceSetting.Name == \"server-id\" {",
          "36:    workspaceBasicSetting.ServerId = workspaceSetting.Value",
          "37:   } else if workspaceSetting.Name == \"secret-session\" {",
          "38:    workspaceBasicSetting.SecretKey = workspaceSetting.Value",
          "39:   } else if workspaceSetting.Name == \"allow-signup\" {",
          "40:    workspaceGeneralSetting.DisallowSignup = !baseValue.(bool)",
          "41:   } else if workspaceSetting.Name == \"disable-password-login\" {",
          "42:    workspaceGeneralSetting.DisallowPasswordLogin = baseValue.(bool)",
          "43:   } else if workspaceSetting.Name == \"additional-style\" {",
          "44:    workspaceGeneralSetting.AdditionalStyle = baseValue.(string)",
          "45:   } else if workspaceSetting.Name == \"additional-script\" {",
          "46:    workspaceGeneralSetting.AdditionalScript = baseValue.(string)",
          "47:   } else if workspaceSetting.Name == \"instance-url\" {",
          "48:    workspaceGeneralSetting.InstanceUrl = workspaceSetting.Value",
          "49:   } else {",
          "50:    matched = false",
          "51:   }",
          "53:   if matched {",
          "54:    if err := s.DeleteWorkspaceSetting(ctx, &DeleteWorkspaceSetting{",
          "55:     Name: workspaceSetting.Name,",
          "56:    }); err != nil {",
          "57:     return errors.Wrap(err, fmt.Sprintf(\"failed to delete workspace setting: %s\", workspaceSetting.Name))",
          "58:    }",
          "59:   }",
          "60:  }",
          "62:  if _, err := s.UpsertWorkspaceSettingV1(ctx, &storepb.WorkspaceSetting{",
          "63:   Key:   storepb.WorkspaceSettingKey_WORKSPACE_SETTING_BASIC,",
          "64:   Value: &storepb.WorkspaceSetting_BasicSetting{BasicSetting: workspaceBasicSetting},",
          "65:  }); err != nil {",
          "66:   return errors.Wrap(err, \"failed to upsert workspace basic setting\")",
          "67:  }",
          "69:  if _, err := s.UpsertWorkspaceSettingV1(ctx, &storepb.WorkspaceSetting{",
          "70:   Key:   storepb.WorkspaceSettingKey_WORKSPACE_SETTING_GENERAL,",
          "71:   Value: &storepb.WorkspaceSetting_GeneralSetting{GeneralSetting: workspaceGeneralSetting},",
          "72:  }); err != nil {",
          "73:   return errors.Wrap(err, \"failed to upsert workspace general setting\")",
          "74:  }",
          "76:  return nil",
          "77: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "store/storage.go||store/storage.go": [
          "File: store/storage.go -> store/storage.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:  ID int32",
          "31: }",
          "62:  storageRaw := &Storage{",
          "63:   Name: create.Name,",
          "64:   Type: create.Type.String(),",
          "",
          "[Removed Lines]",
          "33: func (s *Store) CreateStorage(ctx context.Context, create *Storage) (*Storage, error) {",
          "34:  return s.driver.CreateStorage(ctx, create)",
          "35: }",
          "37: func (s *Store) ListStorages(ctx context.Context, find *FindStorage) ([]*Storage, error) {",
          "38:  return s.driver.ListStorages(ctx, find)",
          "39: }",
          "41: func (s *Store) GetStorage(ctx context.Context, find *FindStorage) (*Storage, error) {",
          "42:  list, err := s.ListStorages(ctx, find)",
          "43:  if err != nil {",
          "44:   return nil, err",
          "45:  }",
          "46:  if len(list) == 0 {",
          "47:   return nil, nil",
          "48:  }",
          "50:  return list[0], nil",
          "51: }",
          "53: func (s *Store) UpdateStorage(ctx context.Context, update *UpdateStorage) (*Storage, error) {",
          "54:  return s.driver.UpdateStorage(ctx, update)",
          "55: }",
          "57: func (s *Store) DeleteStorage(ctx context.Context, delete *DeleteStorage) error {",
          "58:  return s.driver.DeleteStorage(ctx, delete)",
          "59: }",
          "61: func (s *Store) CreateStorageV1(ctx context.Context, create *storepb.Storage) (*storepb.Storage, error) {",
          "",
          "[Added Lines]",
          "33: func (s *Store) CreateStorage(ctx context.Context, create *storepb.Storage) (*storepb.Storage, error) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "83:  return storage, nil",
          "84: }",
          "87:  list, err := s.driver.ListStorages(ctx, find)",
          "88:  if err != nil {",
          "89:   return nil, err",
          "",
          "[Removed Lines]",
          "86: func (s *Store) ListStoragesV1(ctx context.Context, find *FindStorage) ([]*storepb.Storage, error) {",
          "",
          "[Added Lines]",
          "58: func (s *Store) ListStorages(ctx context.Context, find *FindStorage) ([]*storepb.Storage, error) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "100:  return storages, nil",
          "101: }",
          "105:  if err != nil {",
          "106:   return nil, err",
          "107:  }",
          "",
          "[Removed Lines]",
          "103: func (s *Store) GetStorageV1(ctx context.Context, find *FindStorage) (*storepb.Storage, error) {",
          "104:  list, err := s.ListStoragesV1(ctx, find)",
          "",
          "[Added Lines]",
          "75: func (s *Store) GetStorage(ctx context.Context, find *FindStorage) (*storepb.Storage, error) {",
          "76:  list, err := s.ListStorages(ctx, find)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "119:  Config *storepb.StorageConfig",
          "120: }",
          "123:  updateRaw := &UpdateStorage{",
          "124:   ID: update.ID,",
          "125:  }",
          "",
          "[Removed Lines]",
          "122: func (s *Store) UpdateStorageV1(ctx context.Context, update *UpdateStorageV1) (*storepb.Storage, error) {",
          "",
          "[Added Lines]",
          "94: func (s *Store) UpdateStorage(ctx context.Context, update *UpdateStorageV1) (*storepb.Storage, error) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "144:  return storage, nil",
          "145: }",
          "147: func convertStorageFromRaw(storageRaw *Storage) (*storepb.Storage, error) {",
          "148:  storage := &storepb.Storage{",
          "149:   Id:   storageRaw.ID,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "119: func (s *Store) DeleteStorage(ctx context.Context, delete *DeleteStorage) error {",
          "120:  return s.driver.DeleteStorage(ctx, delete)",
          "121: }",
          "",
          "---------------"
        ],
        "store/store.go||store/store.go": [
          "File: store/store.go -> store/store.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:  workspaceSettingCache sync.Map // map[string]*storepb.WorkspaceSetting",
          "15:  userCache             sync.Map // map[int]*User",
          "16:  userSettingCache      sync.Map // map[string]*UserSetting",
          "19: }",
          "",
          "[Removed Lines]",
          "17:  idpCache              sync.Map // map[int]*IdentityProvider",
          "18:  idpV1Cache            sync.Map // map[int]*storepb.IdentityProvider",
          "",
          "[Added Lines]",
          "17:  idpCache              sync.Map // map[int]*storepb.IdentityProvider",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27: }",
          "29: func (s *Store) MigrateManually(ctx context.Context) error {",
          "33:  return nil",
          "34: }",
          "",
          "[Removed Lines]",
          "30:  if err := s.MigrateWorkspaceSetting(ctx); err != nil {",
          "31:   return err",
          "32:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "store/user_setting.go||store/user_setting.go": [
          "File: store/user_setting.go -> store/user_setting.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:  if err != nil {",
          "35:   return nil, err",
          "36:  }",
          "38:  return userSetting, nil",
          "39: }",
          "",
          "[Removed Lines]",
          "37:  s.userSettingCache.Store(getUserSettingV1CacheKey(userSetting.UserId, userSetting.Key.String()), userSetting)",
          "",
          "[Added Lines]",
          "37:  s.userSettingCache.Store(getUserSettingCacheKey(userSetting.UserId, userSetting.Key.String()), userSetting)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50:   if err != nil {",
          "51:    return nil, err",
          "52:   }",
          "54:   userSettings = append(userSettings, userSetting)",
          "55:  }",
          "56:  return userSettings, nil",
          "",
          "[Removed Lines]",
          "53:   s.userSettingCache.Store(getUserSettingV1CacheKey(userSetting.UserId, userSetting.Key.String()), userSetting)",
          "",
          "[Added Lines]",
          "53:   s.userSettingCache.Store(getUserSettingCacheKey(userSetting.UserId, userSetting.Key.String()), userSetting)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "59: func (s *Store) GetUserSetting(ctx context.Context, find *FindUserSetting) (*storepb.UserSetting, error) {",
          "60:  if find.UserID != nil {",
          "62:    return cache.(*storepb.UserSetting), nil",
          "63:   }",
          "64:  }",
          "",
          "[Removed Lines]",
          "61:   if cache, ok := s.userSettingCache.Load(getUserSettingV1CacheKey(*find.UserID, find.Key.String())); ok {",
          "",
          "[Added Lines]",
          "61:   if cache, ok := s.userSettingCache.Load(getUserSettingCacheKey(*find.UserID, find.Key.String())); ok {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "75:  }",
          "77:  userSetting := list[0]",
          "79:  return userSetting, nil",
          "80: }",
          "",
          "[Removed Lines]",
          "78:  s.userSettingCache.Store(getUserSettingV1CacheKey(userSetting.UserId, userSetting.Key.String()), userSetting)",
          "",
          "[Added Lines]",
          "78:  s.userSettingCache.Store(getUserSettingCacheKey(userSetting.UserId, userSetting.Key.String()), userSetting)",
          "",
          "---------------"
        ],
        "store/workspace_setting.go||store/workspace_setting.go": [
          "File: store/workspace_setting.go -> store/workspace_setting.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  Name string",
          "24: }",
          "61:  workspaceSettingRaw := &WorkspaceSetting{",
          "62:   Name: upsert.Key.String(),",
          "63:  }",
          "",
          "[Removed Lines]",
          "26: func (s *Store) UpsertWorkspaceSetting(ctx context.Context, upsert *WorkspaceSetting) (*WorkspaceSetting, error) {",
          "27:  return s.driver.UpsertWorkspaceSetting(ctx, upsert)",
          "28: }",
          "30: func (s *Store) ListWorkspaceSettings(ctx context.Context, find *FindWorkspaceSetting) ([]*WorkspaceSetting, error) {",
          "31:  list, err := s.driver.ListWorkspaceSettings(ctx, find)",
          "32:  if err != nil {",
          "33:   return nil, err",
          "34:  }",
          "35:  return list, nil",
          "36: }",
          "38: func (s *Store) GetWorkspaceSetting(ctx context.Context, find *FindWorkspaceSetting) (*WorkspaceSetting, error) {",
          "39:  list, err := s.ListWorkspaceSettings(ctx, find)",
          "40:  if err != nil {",
          "41:   return nil, err",
          "42:  }",
          "44:  if len(list) == 0 {",
          "45:   return nil, nil",
          "46:  }",
          "48:  systemSettingMessage := list[0]",
          "49:  return systemSettingMessage, nil",
          "50: }",
          "52: func (s *Store) DeleteWorkspaceSetting(ctx context.Context, delete *DeleteWorkspaceSetting) error {",
          "53:  err := s.driver.DeleteWorkspaceSetting(ctx, delete)",
          "54:  if err != nil {",
          "55:   return errors.Wrap(err, \"Failed to delete workspace setting\")",
          "56:  }",
          "57:  return nil",
          "58: }",
          "60: func (s *Store) UpsertWorkspaceSettingV1(ctx context.Context, upsert *storepb.WorkspaceSetting) (*storepb.WorkspaceSetting, error) {",
          "",
          "[Added Lines]",
          "26: func (s *Store) UpsertWorkspaceSetting(ctx context.Context, upsert *storepb.WorkspaceSetting) (*storepb.WorkspaceSetting, error) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "91:  return workspaceSetting, nil",
          "92: }",
          "95:  list, err := s.driver.ListWorkspaceSettings(ctx, find)",
          "96:  if err != nil {",
          "97:   return nil, err",
          "",
          "[Removed Lines]",
          "94: func (s *Store) ListWorkspaceSettingsV1(ctx context.Context, find *FindWorkspaceSetting) ([]*storepb.WorkspaceSetting, error) {",
          "",
          "[Added Lines]",
          "60: func (s *Store) ListWorkspaceSettings(ctx context.Context, find *FindWorkspaceSetting) ([]*storepb.WorkspaceSetting, error) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "109:  return workspaceSettings, nil",
          "110: }",
          "113:  if cache, ok := s.workspaceSettingCache.Load(find.Name); ok {",
          "114:   return cache.(*storepb.WorkspaceSetting), nil",
          "115:  }",
          "118:  if err != nil {",
          "119:   return nil, err",
          "120:  }",
          "",
          "[Removed Lines]",
          "112: func (s *Store) GetWorkspaceSettingV1(ctx context.Context, find *FindWorkspaceSetting) (*storepb.WorkspaceSetting, error) {",
          "117:  list, err := s.ListWorkspaceSettingsV1(ctx, find)",
          "",
          "[Added Lines]",
          "78: func (s *Store) GetWorkspaceSetting(ctx context.Context, find *FindWorkspaceSetting) (*storepb.WorkspaceSetting, error) {",
          "83:  list, err := s.ListWorkspaceSettings(ctx, find)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "128: }",
          "130: func (s *Store) GetWorkspaceBasicSetting(ctx context.Context) (*storepb.WorkspaceBasicSetting, error) {",
          "132:   Name: storepb.WorkspaceSettingKey_WORKSPACE_SETTING_BASIC.String(),",
          "133:  })",
          "134:  if err != nil {",
          "",
          "[Removed Lines]",
          "131:  workspaceSetting, err := s.GetWorkspaceSettingV1(ctx, &FindWorkspaceSetting{",
          "",
          "[Added Lines]",
          "97:  workspaceSetting, err := s.GetWorkspaceSetting(ctx, &FindWorkspaceSetting{",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "143: }",
          "145: func (s *Store) GetWorkspaceGeneralSetting(ctx context.Context) (*storepb.WorkspaceGeneralSetting, error) {",
          "147:   Name: storepb.WorkspaceSettingKey_WORKSPACE_SETTING_GENERAL.String(),",
          "148:  })",
          "149:  if err != nil {",
          "",
          "[Removed Lines]",
          "146:  workspaceSetting, err := s.GetWorkspaceSettingV1(ctx, &FindWorkspaceSetting{",
          "",
          "[Added Lines]",
          "112:  workspaceSetting, err := s.GetWorkspaceSetting(ctx, &FindWorkspaceSetting{",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "158: }",
          "160: func (s *Store) GetWorkspaceMemoRelatedSetting(ctx context.Context) (*storepb.WorkspaceMemoRelatedSetting, error) {",
          "162:   Name: storepb.WorkspaceSettingKey_WORKSPACE_SETTING_MEMO_RELATED.String(),",
          "163:  })",
          "164:  if err != nil {",
          "",
          "[Removed Lines]",
          "161:  workspaceSetting, err := s.GetWorkspaceSettingV1(ctx, &FindWorkspaceSetting{",
          "",
          "[Added Lines]",
          "127:  workspaceSetting, err := s.GetWorkspaceSetting(ctx, &FindWorkspaceSetting{",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "179: )",
          "181: func (s *Store) GetWorkspaceStorageSetting(ctx context.Context) (*storepb.WorkspaceStorageSetting, error) {",
          "183:   Name: storepb.WorkspaceSettingKey_WORKSPACE_SETTING_STORAGE.String(),",
          "184:  })",
          "185:  if err != nil {",
          "",
          "[Removed Lines]",
          "182:  workspaceSetting, err := s.GetWorkspaceSettingV1(ctx, &FindWorkspaceSetting{",
          "",
          "[Added Lines]",
          "148:  workspaceSetting, err := s.GetWorkspaceSetting(ctx, &FindWorkspaceSetting{",
          "",
          "---------------"
        ],
        "test/store/idp_test.go||test/store/idp_test.go": [
          "File: test/store/idp_test.go -> test/store/idp_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: func TestIdentityProviderStore(t *testing.T) {",
          "14:  ctx := context.Background()",
          "15:  ts := NewTestingStore(ctx, t)",
          "17:   Name:             \"GitHub OAuth\",",
          "18:   Type:             storepb.IdentityProvider_OAUTH2,",
          "19:   IdentifierFilter: \"\",",
          "",
          "[Removed Lines]",
          "16:  createdIDP, err := ts.CreateIdentityProviderV1(ctx, &storepb.IdentityProvider{",
          "",
          "[Added Lines]",
          "16:  createdIDP, err := ts.CreateIdentityProvider(ctx, &storepb.IdentityProvider{",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36:   },",
          "37:  })",
          "38:  require.NoError(t, err)",
          "40:   ID: &createdIDP.Id,",
          "41:  })",
          "42:  require.NoError(t, err)",
          "43:  require.NotNil(t, idp)",
          "44:  require.Equal(t, createdIDP, idp)",
          "45:  newName := \"My GitHub OAuth\"",
          "47:   ID:   idp.Id,",
          "48:   Name: &newName,",
          "49:  })",
          "",
          "[Removed Lines]",
          "39:  idp, err := ts.GetIdentityProviderV1(ctx, &store.FindIdentityProvider{",
          "46:  updatedIdp, err := ts.UpdateIdentityProviderV1(ctx, &store.UpdateIdentityProviderV1{",
          "",
          "[Added Lines]",
          "39:  idp, err := ts.GetIdentityProvider(ctx, &store.FindIdentityProvider{",
          "46:  updatedIdp, err := ts.UpdateIdentityProvider(ctx, &store.UpdateIdentityProviderV1{",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "53:   ID: idp.Id,",
          "54:  })",
          "55:  require.NoError(t, err)",
          "57:  require.NoError(t, err)",
          "58:  require.Equal(t, 0, len(idpList))",
          "59:  ts.Close()",
          "",
          "[Removed Lines]",
          "56:  idpList, err := ts.ListIdentityProvidersV1(ctx, &store.FindIdentityProvider{})",
          "",
          "[Added Lines]",
          "56:  idpList, err := ts.ListIdentityProviders(ctx, &store.FindIdentityProvider{})",
          "",
          "---------------"
        ],
        "test/store/storage_test.go||test/store/storage_test.go": [
          "File: test/store/storage_test.go -> test/store/storage_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  \"github.com/stretchr/testify/require\"",
          "9:  \"github.com/usememos/memos/store\"",
          "10: )",
          "12: func TestStorageStore(t *testing.T) {",
          "13:  ctx := context.Background()",
          "14:  ts := NewTestingStore(ctx, t)",
          "19:  })",
          "20:  require.NoError(t, err)",
          "21:  newStorageName := \"new_storage_name\"",
          "24:   Name: &newStorageName,",
          "25:  })",
          "26:  require.NoError(t, err)",
          "",
          "[Removed Lines]",
          "15:  storage, err := ts.CreateStorage(ctx, &store.Storage{",
          "16:   Name:   \"test_storage\",",
          "17:   Type:   \"S3\",",
          "18:   Config: \"{}\",",
          "22:  updatedStorage, err := ts.UpdateStorage(ctx, &store.UpdateStorage{",
          "23:   ID:   storage.ID,",
          "",
          "[Added Lines]",
          "9:  storepb \"github.com/usememos/memos/proto/gen/store\"",
          "16:  storage, err := ts.CreateStorage(ctx, &storepb.Storage{",
          "17:   Name: \"test_storage\",",
          "18:   Type: storepb.Storage_S3,",
          "19:   Config: &storepb.StorageConfig{",
          "20:    StorageConfig: &storepb.StorageConfig_S3Config{",
          "21:     S3Config: &storepb.S3Config{",
          "22:      EndPoint: \"http://localhost:9000\",",
          "23:     },",
          "24:    },",
          "25:   },",
          "29:  updatedStorage, err := ts.UpdateStorage(ctx, &store.UpdateStorageV1{",
          "30:   ID:   storage.Id,",
          "31:   Type: storage.Type,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30:  require.Equal(t, 1, len(storageList))",
          "31:  require.Equal(t, updatedStorage, storageList[0])",
          "32:  err = ts.DeleteStorage(ctx, &store.DeleteStorage{",
          "34:  })",
          "35:  require.NoError(t, err)",
          "36:  storageList, err = ts.ListStorages(ctx, &store.FindStorage{})",
          "",
          "[Removed Lines]",
          "33:   ID: storage.ID,",
          "",
          "[Added Lines]",
          "41:   ID: storage.Id,",
          "",
          "---------------"
        ],
        "test/store/workspace_setting_test.go||test/store/workspace_setting_test.go": [
          "File: test/store/workspace_setting_test.go -> test/store/workspace_setting_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: func TestWorkspaceSettingV1Store(t *testing.T) {",
          "14:  ctx := context.Background()",
          "15:  ts := NewTestingStore(ctx, t)",
          "17:   Key: storepb.WorkspaceSettingKey_WORKSPACE_SETTING_GENERAL,",
          "18:   Value: &storepb.WorkspaceSetting_GeneralSetting{",
          "19:    GeneralSetting: &storepb.WorkspaceGeneralSetting{",
          "",
          "[Removed Lines]",
          "16:  workspaceSetting, err := ts.UpsertWorkspaceSettingV1(ctx, &storepb.WorkspaceSetting{",
          "",
          "[Added Lines]",
          "16:  workspaceSetting, err := ts.UpsertWorkspaceSetting(ctx, &storepb.WorkspaceSetting{",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "22:   },",
          "23:  })",
          "24:  require.NoError(t, err)",
          "26:  require.NoError(t, err)",
          "27:  require.Equal(t, 1, len(list))",
          "28:  require.Equal(t, workspaceSetting, list[0])",
          "",
          "[Removed Lines]",
          "25:  list, err := ts.ListWorkspaceSettingsV1(ctx, &store.FindWorkspaceSetting{})",
          "",
          "[Added Lines]",
          "25:  list, err := ts.ListWorkspaceSettings(ctx, &store.FindWorkspaceSetting{})",
          "",
          "---------------"
        ]
      }
    }
  ]
}