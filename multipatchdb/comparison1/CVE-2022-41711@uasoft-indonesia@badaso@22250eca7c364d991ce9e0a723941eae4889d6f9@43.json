{
  "cve_id": "CVE-2022-41711",
  "cve_desc": "Badaso version 2.6.0 allows an unauthenticated remote attacker to execute arbitrary code remotely on the server. This is possible because the application does not properly validate the data uploaded by users.",
  "repo": "uasoft-indonesia/badaso",
  "patch_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
  "patch_info": {
    "commit_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
    "repo": "uasoft-indonesia/badaso",
    "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/22250eca7c364d991ce9e0a723941eae4889d6f9",
    "files": [
      "src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue"
    ],
    "message": "Merge pull request #807 from uasoft-indonesia/bugfix/v2/filter-mimeType\n\nBugfix[v2] add filter mimeType",
    "before_after_code_files": [
      "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue"
    ]
  },
  "patch_diff": {
    "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue": [
      "File: src/resources/js/components/BadasoUploadFile.vue -> src/resources/js/components/BadasoUploadFile.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "336:           });",
      "337:           return;",
      "338:         }",
      "340:         this.uploadFile(files[0]);",
      "341:       }",
      "342:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "339:         if (!this.availableMimetypes.file.validMime.includes(files[0].type)) {",
      "340:           this.$vs.notify({",
      "341:             title: this.$t(\"alert.danger\"),",
      "342:             text: \"File type not allowed\",",
      "343:             color: \"danger\",",
      "344:           });",
      "345:           return;",
      "346:         }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadFileMultiple.vue -> src/resources/js/components/BadasoUploadFileMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "367:             });",
      "368:             return;",
      "369:           }",
      "371:           this.uploadFile(file);",
      "372:         }",
      "373:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "370:           if (!this.availableMimetypes.file.validMime.includes(file.type)) {",
      "371:             this.$vs.notify({",
      "372:               title: this.$t(\"alert.danger\"),",
      "373:               text: \"File type not allowed\",",
      "374:               color: \"danger\",",
      "375:             });",
      "376:             return;",
      "377:           }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue": [
      "File: src/resources/js/components/BadasoUploadImage.vue -> src/resources/js/components/BadasoUploadImage.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "380:           });",
      "381:           return;",
      "382:         }",
      "384:         this.uploadImage(files[0]);",
      "385:       }",
      "386:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "383:         if (!this.availableMimetypes.image.validMime.includes(files[0].type)){",
      "384:           this.$vs.notify({",
      "385:             title: this.$t(\"alert.danger\"),",
      "386:             text: \"File type not allowed\",",
      "387:             color: \"danger\",",
      "388:           });",
      "389:           return;",
      "390:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "421:     uploadImage(file) {",
      "422:       const files = new FormData();",
      "423:       files.append(\"upload\", file);",
      "425:       files.append(\"working_dir\", this.getActiveFolder);",
      "426:       this.$api.badasoFile",
      "427:         .uploadUsingLfm(files)",
      "",
      "[Removed Lines]",
      "424:       files.append(\"type\", \"image\");",
      "",
      "[Added Lines]",
      "431:       files.append(\"type\", file.type);",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadImageMultiple.vue -> src/resources/js/components/BadasoUploadImageMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:             });",
      "396:             return;",
      "397:           }",
      "399:           this.uploadImage(file);",
      "400:         }",
      "401:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "398:           if (!this.availableMimetypes.image.validMime.includes(file.type)) {",
      "399:             this.$vs.notify({",
      "400:               title: this.$t(\"alert.danger\"),",
      "401:               text: \"File type not allowed\",",
      "402:               color: \"danger\",",
      "403:             });",
      "404:             return;",
      "405:           }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4cf5bbefbda58cb4f1db34cec3f472f2c7eb48d3",
      "candidate_info": {
        "commit_hash": "4cf5bbefbda58cb4f1db34cec3f472f2c7eb48d3",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/4cf5bbefbda58cb4f1db34cec3f472f2c7eb48d3",
        "files": [
          "tests/Feature/BadasoApiCrudManagementTest.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php": [
          "File: tests/Feature/BadasoApiCrudManagementTest.php -> tests/Feature/BadasoApiCrudManagementTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "301:                     'schema_type' => 'integer',",
          "302:                     'details' => json_encode((object) []),",
          "303:                     'example' => 1,",
          "305:                 ],",
          "306:                 [",
          "307:                     'badaso_type' => 'url',",
          "",
          "[Removed Lines]",
          "304:                     'example_update' => NULL,",
          "",
          "[Added Lines]",
          "304:                     'example_update' => null,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "398:                     'schema_type' => 'string',",
          "399:                     'details' => json_encode((object) []),",
          "400:                     'example' => \"[\\'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619582634819_badaso.png\\',\\'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619582634819_badaso.png\\']\",",
          "402:                 ],",
          "403:             ];",
          "404:     }",
          "",
          "[Removed Lines]",
          "401:                     'example_update' => \"[]\",",
          "",
          "[Added Lines]",
          "401:                     'example_update' => '[]',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "408:         $table_names = [];",
          "409:         for ($index = 1; $index <= $max_count_table_generate; $index++) {",
          "410:             $table_name = \"{$this->TABLE_TEST_PREFIX}{$index}\";",
          "412:                 Schema::create($table_name, function (Blueprint $table) use ($index, $table_names) {",
          "413:                     $table->id();",
          "",
          "[Removed Lines]",
          "411:             if (!Schema::hasTable($table_name)) {",
          "",
          "[Added Lines]",
          "411:             if (! Schema::hasTable($table_name)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "439:         $table_names = [];",
          "440:         for ($index = 1; $index <= $max_count_table_generate; $index++) {",
          "441:             $table_name = \"{$this->TABLE_TEST_EMPTY_VALUE_PREFIX}{$index}\";",
          "443:                 Schema::create($table_name, function (Blueprint $table) use ($index, $table_names) {",
          "444:                     $table->id();",
          "",
          "[Removed Lines]",
          "442:             if (!Schema::hasTable($table_name)) {",
          "",
          "[Added Lines]",
          "442:             if (! Schema::hasTable($table_name)) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "639:                 }",
          "640:                 PHP;",
          "641:                 $model_path = app_path(\"Models/$model_file_name\");",
          "643:                     file_put_contents($model_path, $model_body);",
          "644:                 }",
          "",
          "[Removed Lines]",
          "642:                 if (!file_exists($model_path)) {",
          "",
          "[Added Lines]",
          "642:                 if (! file_exists($model_path)) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "660:             $controller_data = [];",
          "661:             if (rand(0, 1)) {",
          "664:                 $controller_file_name = \"{$controller_name}.php\";",
          "665:                 $controller_body = <<<PHP",
          "666:                 <?php",
          "",
          "[Removed Lines]",
          "663:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)) . 'Controller';",
          "",
          "[Added Lines]",
          "663:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)).'Controller';",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "669:                 class {$controller_name} extends \\Uasoft\\Badaso\\Controllers\\BadasoBaseController {}",
          "670:                 PHP;",
          "671:                 $controller_path = app_path(\"/Http/Controllers/$controller_file_name\");",
          "673:                     file_put_contents($controller_path, $controller_body);",
          "674:                 }",
          "",
          "[Removed Lines]",
          "672:                 if (!file_exists($controller_path)) {",
          "",
          "[Added Lines]",
          "672:                 if (! file_exists($controller_path)) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1112:             if ($table['table'] == 'table_relation') {",
          "1113:                 for ($i = 0; $i < 2; $i++) {",
          "1114:                     $field[$i] = [",
          "1117:                         'fieldType' => 'bigint',",
          "1118:                         'fieldLength' => null,",
          "1119:                         'fieldNull' => false,",
          "",
          "[Removed Lines]",
          "1115:                         'id' => $name_table[$i] . '_id',",
          "1116:                         'fieldName' => $name_table[$i] . '_id',",
          "",
          "[Added Lines]",
          "1115:                         'id' => $name_table[$i].'_id',",
          "1116:                         'fieldName' => $name_table[$i].'_id',",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1126:                     array_push($table['rows'], $field[$i]);",
          "1127:                 }",
          "1128:                 $table['relations'] = [",
          "1131:                         'target_table' => $name_table[1],",
          "1132:                         'target_field' => 'id',",
          "1133:                         'on_delete' => 'cascade',",
          "1134:                         'on_update' => 'restrict',",
          "1135:                     ],",
          "1138:                         'target_table' => $name_table[0],",
          "1139:                         'target_field' => 'id',",
          "1140:                         'on_delete' => 'cascade',",
          "",
          "[Removed Lines]",
          "1129:                     $name_table[1] . '_id' => [",
          "1130:                         'source_field' => $name_table[1] . '_id',",
          "1136:                     $name_table[0] . '_id' => [",
          "1137:                         'source_field' => $name_table[0] . '_id',",
          "",
          "[Added Lines]",
          "1129:                     $name_table[1].'_id' => [",
          "1130:                         'source_field' => $name_table[1].'_id',",
          "1136:                     $name_table[0].'_id' => [",
          "1137:                         'source_field' => $name_table[0].'_id',",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1148:         foreach ($name_table as $key => $crud_table) {",
          "1149:             $crud_table = [",
          "1150:                 'name' => $crud_table,",
          "1152:                 'displayNameSingular' => $crud_table,",
          "1153:                 'displayNamePlural' => $crud_table,",
          "1154:                 'icon' => '',",
          "",
          "[Removed Lines]",
          "1151:                 'slug' => 'table-' . $key + 1,",
          "",
          "[Added Lines]",
          "1151:                 'slug' => 'table-'.$key + 1,",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1275:         foreach ($name_table as $key => $table) {",
          "1276:             if ($table == 'table-2') {",
          "1277:                 for ($i = 1; $i < 4; $i++) {",
          "1279:                         'data' => [",
          "1281:                         ],",
          "1282:                     ]);",
          "1283:                 }",
          "1284:             } else {",
          "1286:                 $response->assertSuccessful();",
          "1287:             }",
          "1288:         }",
          "1292:         $response->assertSuccessful();",
          "1293:         $data_browse = $response['data']['data'][0];",
          "1297:             'data' => [",
          "1298:                 'id' => $data_browse['id'],",
          "1299:                 'name' => 'lorem ipsum',",
          "",
          "[Removed Lines]",
          "1278:                     $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/add'), [",
          "1280:                             'name' => 'option ' . $i,",
          "1285:                 $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/add'), $data_table_primary);",
          "1291:         $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table));",
          "1296:         $response = CallHelperTest::withAuthorizeBearer($this)->json('PUT', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/edit'), [",
          "",
          "[Added Lines]",
          "1278:                     $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/add'), [",
          "1280:                             'name' => 'option '.$i,",
          "1285:                 $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/add'), $data_table_primary);",
          "1291:         $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table));",
          "1296:         $response = CallHelperTest::withAuthorizeBearer($this)->json('PUT', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/edit'), [",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1303:         $response->assertSuccessful();",
          "1307:             'slug' => $table,",
          "1308:             'data' => [",
          "1309:                 [",
          "",
          "[Removed Lines]",
          "1306:         $response = CallHelperTest::withAuthorizeBearer($this)->json('DELETE', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/delete'), [",
          "",
          "[Added Lines]",
          "1306:         $response = CallHelperTest::withAuthorizeBearer($this)->json('DELETE', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/delete'), [",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1653:                 }",
          "1654:                 PHP;",
          "1655:                 $model_path = app_path(\"Models/$model_file_name\");",
          "1657:                     file_put_contents($model_path, $model_body);",
          "1658:                 }",
          "",
          "[Removed Lines]",
          "1656:                 if (!file_exists($model_path)) {",
          "",
          "[Added Lines]",
          "1656:                 if (! file_exists($model_path)) {",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1674:             $controller_data = [];",
          "1675:             if (rand(0, 1)) {",
          "1678:                 $controller_file_name = \"{$controller_name}.php\";",
          "1679:                 $controller_body = <<<PHP",
          "1680:                 <?php",
          "",
          "[Removed Lines]",
          "1677:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)) . 'Controller';",
          "",
          "[Added Lines]",
          "1677:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)).'Controller';",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1683:                 class {$controller_name} extends \\Uasoft\\Badaso\\Controllers\\BadasoBaseController {}",
          "1684:                 PHP;",
          "1685:                 $controller_path = app_path(\"/Http/Controllers/$controller_file_name\");",
          "1687:                     file_put_contents($controller_path, $controller_body);",
          "1688:                 }",
          "",
          "[Removed Lines]",
          "1686:                 if (!file_exists($controller_path)) {",
          "",
          "[Added Lines]",
          "1686:                 if (! file_exists($controller_path)) {",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1963:                 }",
          "1964:                 PHP;",
          "1965:                 $model_path = app_path(\"Models/$model_file_name\");",
          "1967:                     file_put_contents($model_path, $model_body);",
          "1968:                 }",
          "",
          "[Removed Lines]",
          "1966:                 if (!file_exists($model_path)) {",
          "",
          "[Added Lines]",
          "1966:                 if (! file_exists($model_path)) {",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1984:             $controller_data = [];",
          "1985:             if (rand(0, 1)) {",
          "1988:                 $controller_file_name = \"{$controller_name}.php\";",
          "1989:                 $controller_body = <<<PHP",
          "1990:                 <?php",
          "",
          "[Removed Lines]",
          "1987:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)) . 'Controller';",
          "",
          "[Added Lines]",
          "1987:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)).'Controller';",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1993:                 class {$controller_name} extends \\Uasoft\\Badaso\\Controllers\\BadasoBaseController {}",
          "1994:                 PHP;",
          "1995:                 $controller_path = app_path(\"/Http/Controllers/$controller_file_name\");",
          "1997:                     file_put_contents($controller_path, $controller_body);",
          "1998:                 }",
          "",
          "[Removed Lines]",
          "1996:                 if (!file_exists($controller_path)) {",
          "",
          "[Added Lines]",
          "1996:                 if (! file_exists($controller_path)) {",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2013:             $request_body = [",
          "2014:                 'name' =>  $table_name,",
          "2015:                 'slug' =>  $table_name,",
          "2018:                 'icon' =>  'add',",
          "2019:                 'modelName' =>  $model,",
          "2020:                 'policyName' =>  '',",
          "",
          "[Removed Lines]",
          "2016:                 'displayNameSingular' =>  $table_label . '(update)',",
          "2017:                 'displayNamePlural' =>  $table_label . '(update)',",
          "",
          "[Added Lines]",
          "2016:                 'displayNameSingular' =>  $table_label.'(update)',",
          "2017:                 'displayNamePlural' =>  $table_label.'(update)',",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2100:             $controller_name = \"{$name}Controller.php\";",
          "2102:             if (file_exists($controller_path)) {",
          "2103:                 unlink($controller_path);",
          "2104:             }",
          "2107:             $model_name = \"{$name}.php\";",
          "2109:             if (file_exists($model_path)) {",
          "2110:                 unlink($model_path);",
          "2111:             }",
          "",
          "[Removed Lines]",
          "2101:             $controller_path = app_path('Http/Controllers/' . $controller_name);",
          "2108:             $model_path = app_path('Models/' . $model_name);",
          "",
          "[Added Lines]",
          "2101:             $controller_path = app_path('Http/Controllers/'.$controller_name);",
          "2108:             $model_path = app_path('Models/'.$model_name);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8480c8892ab8263547cdbafffbb8601132c41f0b",
      "candidate_info": {
        "commit_hash": "8480c8892ab8263547cdbafffbb8601132c41f0b",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/8480c8892ab8263547cdbafffbb8601132c41f0b",
        "files": [
          "src/ContentManager/FileGenerator.php",
          "src/Controllers/BadasoDatabaseController.php",
          "src/Helpers/MigrationParser.php"
        ],
        "message": "fix bug add foreign key on table",
        "before_after_code_files": [
          "src/ContentManager/FileGenerator.php||src/ContentManager/FileGenerator.php",
          "src/Controllers/BadasoDatabaseController.php||src/Controllers/BadasoDatabaseController.php",
          "src/Helpers/MigrationParser.php||src/Helpers/MigrationParser.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/ContentManager/FileGenerator.php||src/ContentManager/FileGenerator.php": [
          "File: src/ContentManager/FileGenerator.php -> src/ContentManager/FileGenerator.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "348:         $schema_down = '';",
          "350:         $schema_up .= $this->migration_parser->getAlterMigrationSchemaUp($table, $rows, $prefix, $relations);",
          "351:         if (array_key_exists('current_relations', $relations) && count($relations['current_relations']) > 0) {",
          "352:             $schema_up .= $this->migration_parser->getAlterMigrationRelationshipSchemaUp($table, $relations);",
          "353:             $schema_down .= $this->migration_parser->getAlterMigrationRelationshipSchemaDown($table, $relations).PHP_EOL;",
          "354:         }",
          "355:         $schema_down .= $this->migration_parser->getAlterMigrationSchemaDown($table, $rows, $prefix, $relations);",
          "357:         $stub = $this->content_manager->replaceString('{{class}}', $migration_class_name, $stub);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "358:         if (array_key_exists('modified_relations', $relations) && count($relations['modified_relations']) > 0) {",
          "359:             $schema_up .= $this->migration_parser->getAlterMigrationRelationshipSchemaUp($table, $relations);",
          "360:             $schema_down .= $this->migration_parser->getAlterMigrationRelationshipSchemaDown($table, $relations) . PHP_EOL;",
          "361:         }",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoDatabaseController.php||src/Controllers/BadasoDatabaseController.php": [
          "File: src/Controllers/BadasoDatabaseController.php -> src/Controllers/BadasoDatabaseController.php"
        ],
        "src/Helpers/MigrationParser.php||src/Helpers/MigrationParser.php": [
          "File: src/Helpers/MigrationParser.php -> src/Helpers/MigrationParser.php"
        ]
      }
    },
    {
      "candidate_hash": "7a5d4fb1b904e98f1afbe06dc706fba017dbf783",
      "candidate_info": {
        "commit_hash": "7a5d4fb1b904e98f1afbe06dc706fba017dbf783",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/7a5d4fb1b904e98f1afbe06dc706fba017dbf783",
        "files": [
          "src/Controllers/BadasoDatabaseController.php",
          "src/Helpers/MigrationParser.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "src/Controllers/BadasoDatabaseController.php||src/Controllers/BadasoDatabaseController.php",
          "src/Helpers/MigrationParser.php||src/Helpers/MigrationParser.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Controllers/BadasoDatabaseController.php||src/Controllers/BadasoDatabaseController.php": [
          "File: src/Controllers/BadasoDatabaseController.php -> src/Controllers/BadasoDatabaseController.php"
        ],
        "src/Helpers/MigrationParser.php||src/Helpers/MigrationParser.php": [
          "File: src/Helpers/MigrationParser.php -> src/Helpers/MigrationParser.php"
        ]
      }
    },
    {
      "candidate_hash": "6ee12c2bae5a2d27657ead665373443d9a2213b4",
      "candidate_info": {
        "commit_hash": "6ee12c2bae5a2d27657ead665373443d9a2213b4",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/6ee12c2bae5a2d27657ead665373443d9a2213b4",
        "files": [
          "src/resources/js/pages/database-management/browse.vue"
        ],
        "message": "updates crud database management",
        "before_after_code_files": [
          "src/resources/js/pages/database-management/browse.vue||src/resources/js/pages/database-management/browse.vue"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/resources/js/pages/database-management/browse.vue||src/resources/js/pages/database-management/browse.vue": [
          "File: src/resources/js/pages/database-management/browse.vue -> src/resources/js/pages/database-management/browse.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "387:         .then((response) => {",
          "388:           this.$closeLoader();",
          "389:           this.getTableList();",
          "390:         })",
          "391:         .catch((error) => {",
          "392:           this.$closeLoader();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "390:           this.$vs.notify({",
          "391:             title : this.$t(\"alert.success\"),",
          "392:             text  : response.data,",
          "393:             color : \"success\"",
          "394:           });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a52f5ade2a0302c6956b7a71ff986e73d74ac41b",
      "candidate_info": {
        "commit_hash": "a52f5ade2a0302c6956b7a71ff986e73d74ac41b",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/a52f5ade2a0302c6956b7a71ff986e73d74ac41b",
        "files": [
          "src/Helpers/GetData.php",
          "src/Migrations/2023_02_02_073310_alter_table_badaso_permissions_tables.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "src/Helpers/GetData.php||src/Helpers/GetData.php",
          "src/Migrations/2023_02_02_073310_alter_table_badaso_permissions_tables.php||src/Migrations/2023_02_02_073310_alter_table_badaso_permissions_tables.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Helpers/GetData.php||src/Helpers/GetData.php": [
          "File: src/Helpers/GetData.php -> src/Helpers/GetData.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: {",
          "12:     public static function serverSideWithModel($data_type, $builder_params, $only_data_soft_delete = false)",
          "13:     {",
          "15:         $fields = collect($data_type->dataRows)->where('browse', 1)->pluck('field')->all();",
          "16:         $ids = collect($data_type->dataRows)->where('field', 'id')->pluck('field')->all();",
          "17:         $fields = array_merge($fields, $ids, $fields_data_identifier);",
          "",
          "[Removed Lines]",
          "14:         $fields_data_identifier = collect($data_type->dataRows)->where('type', \"data_identifier\")->pluck('field')->all();",
          "",
          "[Added Lines]",
          "14:         $fields_data_identifier = collect($data_type->dataRows)->where('type', 'data_identifier')->pluck('field')->all();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "28:         $field_identify_related_user = null;",
          "29:         $roles_can_see_all_data = [];",
          "33:         $field_identify_related_user = $permissions[0]['field_identify_related_user'] ? $permissions[0]['field_identify_related_user'] : null;",
          "",
          "[Removed Lines]",
          "31:         $permissions = Permission::where('key', 'browse_' . $data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->get();",
          "",
          "[Added Lines]",
          "31:         $permissions = Permission::where('key', 'browse_'.$data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->get();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "38:         foreach ($user_roles as $key => $user_role) {",
          "39:             $is_roles = in_array($user_role->name, $roles_can_see_all_data);",
          "42:         $is_field = in_array($field_identify_related_user, array_merge($fields, $fields_data_identifier));",
          "44:         $records = [];",
          "45:         $query = $model::query()->select($fields);",
          "48:             if ($is_field) {",
          "49:                 $query = $model::query()->select($fields)->where($field_identify_related_user, auth()->user()->id);",
          "50:             }",
          "",
          "[Removed Lines]",
          "40:         };",
          "47:         if (!$is_roles) {",
          "",
          "[Added Lines]",
          "40:         }",
          "47:         if (! $is_roles) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "98:     public static function clientSideWithModel($data_type, $builder_params, $only_data_soft_delete = false)",
          "99:     {",
          "101:         $data_rows = collect($data_type->dataRows);",
          "102:         $fields = collect($data_type->dataRows)->where('browse', 1)->pluck('field')->all();",
          "103:         $ids = collect($data_type->dataRows)->where('field', 'id')->pluck('field')->all();",
          "",
          "[Removed Lines]",
          "100:         $fields_data_identifier = collect($data_type->dataRows)->where('type', \"data_identifier\")->pluck('field')->all();",
          "",
          "[Added Lines]",
          "100:         $fields_data_identifier = collect($data_type->dataRows)->where('type', 'data_identifier')->pluck('field')->all();",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "107:         $field_identify_related_user = null;",
          "108:         $roles_can_see_all_data = [];",
          "112:         $field_identify_related_user = $permissions[0]['field_identify_related_user'] ? $permissions[0]['field_identify_related_user'] : null;",
          "",
          "[Removed Lines]",
          "110:         $permissions = Permission::where('key', 'browse_' . $data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->get();",
          "",
          "[Added Lines]",
          "110:         $permissions = Permission::where('key', 'browse_'.$data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->get();",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "117:         foreach ($user_roles as $key => $user_role) {",
          "118:             $is_roles = in_array($user_role->name, $roles_can_see_all_data);",
          "121:         $is_field = in_array($field_identify_related_user, array_merge($fields, $fields_data_identifier));",
          "",
          "[Removed Lines]",
          "119:         };",
          "",
          "[Added Lines]",
          "119:         }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "137:         if ($order_field) {",
          "138:             $data = $model::query()->select($fields)->orderBy($order_field, $order_direction);",
          "140:                 if ($is_field) {",
          "141:                     $data = $model::query()->select($fields)->orderBy($order_field, $order_direction)->where($field_identify_related_user, auth()->user()->id);",
          "142:                 }",
          "143:             }",
          "144:         } else {",
          "145:             $data = $model::query()->select($fields);",
          "147:                 if ($is_field) {",
          "148:                     $data = $model::query()->select($fields)->where($field_identify_related_user, auth()->user()->id);",
          "149:                 }",
          "",
          "[Removed Lines]",
          "139:             if (!$is_roles) {",
          "146:             if (!$is_roles) {",
          "",
          "[Added Lines]",
          "139:             if (! $is_roles) {",
          "146:             if (! $is_roles) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "206:     public static function serverSideWithQueryBuilder($data_type, $builder_params, $only_data_soft_delete = false)",
          "207:     {",
          "209:         $fields = collect($data_type->dataRows)->where('browse', 1)->pluck('field')->all();",
          "210:         $ids = collect($data_type->dataRows)->where('field', 'id')->pluck('field')->all();",
          "211:         $fields = array_merge($fields, $ids, $fields_data_identifier);",
          "",
          "[Removed Lines]",
          "208:         $fields_data_identifier = collect($data_type->dataRows)->where('type', \"data_identifier\")->pluck('field')->all();",
          "",
          "[Added Lines]",
          "208:         $fields_data_identifier = collect($data_type->dataRows)->where('type', 'data_identifier')->pluck('field')->all();",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "222:         $field_identify_related_user = null;",
          "223:         $roles_can_see_all_data = [];",
          "227:         $field_identify_related_user = $permissions[0]['field_identify_related_user'] ? $permissions[0]['field_identify_related_user'] : null;",
          "229:         $roles_can_see_all_data = json_decode($permissions[0]['roles_can_see_all_data']) ? json_decode($permissions[0]['roles_can_see_all_data']) : [];",
          "230:         $user_roles = auth()->user()->roles;",
          "232:         foreach ($user_roles as $key => $user_role) {",
          "233:             $is_roles = in_array($user_role->name, $roles_can_see_all_data);",
          "236:         $is_field = in_array($field_identify_related_user, array_merge($fields, $fields_data_identifier));",
          "237:         $query = DB::table($data_type->name)->select($fields);",
          "240:             if ($is_field) {",
          "241:                 $query = DB::table($data_type->name)->select($fields)->where($field_identify_related_user, auth()->user()->id);",
          "242:             }",
          "243:         }",
          "246:         $is_soft_delete = $data_type->is_soft_delete;",
          "247:         if ($is_soft_delete) {",
          "",
          "[Removed Lines]",
          "225:         $permissions = Permission::where('key', 'browse_' . $data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->get();",
          "234:         };",
          "239:         if (!$is_roles) {",
          "",
          "[Added Lines]",
          "225:         $permissions = Permission::where('key', 'browse_'.$data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->get();",
          "234:         }",
          "239:         if (! $is_roles) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "299:     public static function clientSideWithQueryBuilder($data_type, $builder_params, $only_data_soft_delete = false)",
          "300:     {",
          "302:         $data_rows = collect($data_type->dataRows);",
          "303:         $fields = $data_rows->where('browse', 1)->pluck('field')->all();",
          "304:         $ids = $data_rows->where('field', 'id')->pluck('field')->all();",
          "",
          "[Removed Lines]",
          "301:         $fields_data_identifier = collect($data_type->dataRows)->where('type', \"data_identifier\")->pluck('field')->all();",
          "",
          "[Added Lines]",
          "301:         $fields_data_identifier = collect($data_type->dataRows)->where('type', 'data_identifier')->pluck('field')->all();",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "308:         $roles_can_see_all_data = [];",
          "310:         $permissions = Permission::where('key', 'browse_'.$data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->get();",
          "312:         $field_identify_related_user = $permissions[0]['field_identify_related_user'] ? $permissions[0]['field_identify_related_user'] : null;",
          "314:         $roles_can_see_all_data = json_decode($permissions[0]['roles_can_see_all_data']) ? json_decode($permissions[0]['roles_can_see_all_data']) : [];",
          "315:         $user_roles = auth()->user()->roles;",
          "317:         foreach ($user_roles as $key => $user_role) {",
          "318:             $is_roles = in_array($user_role->name, $roles_can_see_all_data);",
          "321:         foreach ($data_rows as $key => $data_row) {",
          "322:             if (isset($data_row['relation']) && $data_row['relation']['relation_type'] == 'belongs_to_many') {",
          "323:                 $field_manytomany[] = $data_row['field'];",
          "",
          "[Removed Lines]",
          "319:         };",
          "",
          "[Added Lines]",
          "319:         }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "395:             return $record;",
          "396:         });",
          "400:                 foreach ($records as $key => $record) {",
          "401:                     if (isset($record->{$field_identify_related_user}) &&",
          "402:                         $record->{$field_identify_related_user} != auth()->user()->id) {",
          "403:                         unset($records[$key]);",
          "405:                 }",
          "406:             }",
          "407:         }",
          "409:         $data = [];",
          "411:         foreach ($records as $row) {",
          "",
          "[Removed Lines]",
          "398:         if (!$is_roles) {",
          "399:             if($is_field){",
          "404:                     }",
          "",
          "[Added Lines]",
          "398:         if (! $is_roles) {",
          "399:             if ($is_field) {",
          "404:                     }",
          "",
          "---------------"
        ],
        "src/Migrations/2023_02_02_073310_alter_table_badaso_permissions_tables.php||src/Migrations/2023_02_02_073310_alter_table_badaso_permissions_tables.php": [
          "File: src/Migrations/2023_02_02_073310_alter_table_badaso_permissions_tables.php -> src/Migrations/2023_02_02_073310_alter_table_badaso_permissions_tables.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:     public function up()",
          "15:     {",
          "16:         try {",
          "18:                 $table->string('roles_can_see_all_data')->after('is_public')->nullable();",
          "19:                 $table->string('field_identify_related_user')->after('roles_can_see_all_data')->nullable();",
          "20:             });",
          "",
          "[Removed Lines]",
          "17:             Schema::table(config('badaso.database.prefix') . 'permissions', function (Blueprint $table) {",
          "",
          "[Added Lines]",
          "17:             Schema::table(config('badaso.database.prefix').'permissions', function (Blueprint $table) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}