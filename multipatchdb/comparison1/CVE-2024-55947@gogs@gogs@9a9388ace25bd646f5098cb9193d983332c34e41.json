{
  "cve_id": "CVE-2024-55947",
  "cve_desc": "Gogs is an open source self-hosted Git service. A malicious user is able to write a file to an arbitrary path on the server to gain SSH access to the server. The vulnerability is fixed in 0.13.1.",
  "repo": "gogs/gogs",
  "patch_hash": "9a9388ace25bd646f5098cb9193d983332c34e41",
  "patch_info": {
    "commit_hash": "9a9388ace25bd646f5098cb9193d983332c34e41",
    "repo": "gogs/gogs",
    "commit_url": "https://github.com/gogs/gogs/commit/9a9388ace25bd646f5098cb9193d983332c34e41",
    "files": [
      "internal/database/repo_editor.go",
      "internal/pathutil/pathutil.go",
      "internal/route/api/v1/repo/contents.go",
      "internal/route/repo/editor.go",
      "internal/route/repo/http.go"
    ],
    "message": "api: clean file path for updating repo contents (#7859)\n\n## Describe the pull request\n\nLink to the issue: closes https://github.com/gogs/gogs/issues/7582",
    "before_after_code_files": [
      "internal/database/repo_editor.go||internal/database/repo_editor.go",
      "internal/pathutil/pathutil.go||internal/pathutil/pathutil.go",
      "internal/route/api/v1/repo/contents.go||internal/route/api/v1/repo/contents.go",
      "internal/route/repo/editor.go||internal/route/repo/editor.go",
      "internal/route/repo/http.go||internal/route/repo/http.go"
    ]
  },
  "patch_diff": {
    "internal/database/repo_editor.go||internal/database/repo_editor.go": [
      "File: internal/database/repo_editor.go -> internal/database/repo_editor.go"
    ],
    "internal/pathutil/pathutil.go||internal/pathutil/pathutil.go": [
      "File: internal/pathutil/pathutil.go -> internal/pathutil/pathutil.go"
    ],
    "internal/route/api/v1/repo/contents.go||internal/route/api/v1/repo/contents.go": [
      "File: internal/route/api/v1/repo/contents.go -> internal/route/api/v1/repo/contents.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "16:  \"gogs.io/gogs/internal/context\"",
      "17:  \"gogs.io/gogs/internal/database\"",
      "18:  \"gogs.io/gogs/internal/gitutil\"",
      "19:  \"gogs.io/gogs/internal/repoutil\"",
      "20: )",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "19:  \"gogs.io/gogs/internal/pathutil\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "120:   return",
      "121:  }",
      "124:  entry, err := commit.TreeEntry(treePath)",
      "125:  if err != nil {",
      "126:   c.NotFoundOrError(gitutil.NewError(err), \"get tree entry\")",
      "",
      "[Removed Lines]",
      "123:  treePath := c.Params(\"*\")",
      "",
      "[Added Lines]",
      "125:  treePath := pathutil.Clean(c.Params(\"*\"))",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "188:  if r.Branch == \"\" {",
      "189:   r.Branch = c.Repo.Repository.DefaultBranch",
      "190:  }",
      "192:  err = c.Repo.Repository.UpdateRepoFile(",
      "193:   c.User,",
      "194:   database.UpdateRepoFileOptions{",
      "",
      "[Removed Lines]",
      "191:  treePath := c.Params(\"*\")",
      "",
      "[Added Lines]",
      "195:  treePath := pathutil.Clean(c.Params(\"*\"))",
      "",
      "---------------"
    ],
    "internal/route/repo/editor.go||internal/route/repo/editor.go": [
      "File: internal/route/repo/editor.go -> internal/route/repo/editor.go"
    ],
    "internal/route/repo/http.go||internal/route/repo/http.go": [
      "File: internal/route/repo/http.go -> internal/route/repo/http.go"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c94baec9ca923f38c19f0c7c5af722b9ec04022a",
      "candidate_info": {
        "commit_hash": "c94baec9ca923f38c19f0c7c5af722b9ec04022a",
        "repo": "gogs/gogs",
        "commit_url": "https://github.com/gogs/gogs/commit/c94baec9ca923f38c19f0c7c5af722b9ec04022a",
        "files": [
          "internal/route/repo/editor.go"
        ],
        "message": "repo/editor: disallow editing symlink while changing file name (#7857)\n\n## Describe the pull request\n\nLink to the issue: https://github.com/gogs/gogs/issues/7582",
        "before_after_code_files": [
          "internal/route/repo/editor.go||internal/route/repo/editor.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "internal/route/repo/editor.go||internal/route/repo/editor.go"
          ],
          "candidate": [
            "internal/route/repo/editor.go||internal/route/repo/editor.go"
          ]
        }
      },
      "candidate_diff": {
        "internal/route/repo/editor.go||internal/route/repo/editor.go": [
          "File: internal/route/repo/editor.go -> internal/route/repo/editor.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "205:  }",
          "207:  if !isNewFile {",
          "209:   if err != nil {",
          "210:    if gitutil.IsErrRevisionNotExist(err) {",
          "211:     c.FormErr(\"TreePath\")",
          "",
          "[Removed Lines]",
          "208:   _, err := c.Repo.Commit.TreeEntry(oldTreePath)",
          "",
          "[Added Lines]",
          "209:   entry, err := c.Repo.Commit.TreeEntry(oldTreePath)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "215:    }",
          "216:    return",
          "217:   }",
          "218:   if lastCommit != c.Repo.CommitID {",
          "219:    files, err := c.Repo.Commit.FilesChangedAfter(lastCommit)",
          "220:    if err != nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "221:   if entry.IsSymlink() {",
          "222:    c.FormErr(\"TreePath\")",
          "223:    c.RenderWithErr(c.Tr(\"repo.editor.file_is_a_symlink\", oldTreePath), tmplEditorEdit, &f)",
          "224:    return",
          "225:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c947affcfac967f8bf11f466a23b7aca753cd6cf",
      "candidate_info": {
        "commit_hash": "c947affcfac967f8bf11f466a23b7aca753cd6cf",
        "repo": "gogs/gogs",
        "commit_url": "https://github.com/gogs/gogs/commit/c947affcfac967f8bf11f466a23b7aca753cd6cf",
        "files": [
          "internal/db/repo_editor.go",
          "internal/pathutil/pathutil.go",
          "internal/route/api/v1/repo/contents.go",
          "internal/route/repo/editor.go",
          "internal/route/repo/http.go"
        ],
        "message": "api: clean file path for updating repo contents (#7859)\n\n## Describe the pull request\n\nLink to the issue: closes https://github.com/gogs/gogs/issues/7582",
        "before_after_code_files": [
          "internal/db/repo_editor.go||internal/drepo_editor.go",
          "internal/pathutil/pathutil.go||internal/pathutil/pathutil.go",
          "internal/route/api/v1/repo/contents.go||internal/route/api/v1/repo/contents.go",
          "internal/route/repo/editor.go||internal/route/repo/editor.go",
          "internal/route/repo/http.go||internal/route/repo/http.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "internal/pathutil/pathutil.go||internal/pathutil/pathutil.go",
            "internal/route/api/v1/repo/contents.go||internal/route/api/v1/repo/contents.go",
            "internal/route/repo/editor.go||internal/route/repo/editor.go",
            "internal/route/repo/http.go||internal/route/repo/http.go"
          ],
          "candidate": [
            "internal/pathutil/pathutil.go||internal/pathutil/pathutil.go",
            "internal/route/api/v1/repo/contents.go||internal/route/api/v1/repo/contents.go",
            "internal/route/repo/editor.go||internal/route/repo/editor.go",
            "internal/route/repo/http.go||internal/route/repo/http.go"
          ]
        }
      },
      "candidate_diff": {
        "internal/db/repo_editor.go||internal/drepo_editor.go": [
          "File: internal/db/repo_editor.go -> internal/drepo_editor.go"
        ],
        "internal/pathutil/pathutil.go||internal/pathutil/pathutil.go": [
          "File: internal/pathutil/pathutil.go -> internal/pathutil/pathutil.go"
        ],
        "internal/route/api/v1/repo/contents.go||internal/route/api/v1/repo/contents.go": [
          "File: internal/route/api/v1/repo/contents.go -> internal/route/api/v1/repo/contents.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "16:  \"gogs.io/gogs/internal/context\"",
          "17:  \"gogs.io/gogs/internal/db\"",
          "18:  \"gogs.io/gogs/internal/gitutil\"",
          "19:  \"gogs.io/gogs/internal/repoutil\"",
          "20: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19:  \"gogs.io/gogs/internal/pathutil\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "120:   return",
          "121:  }",
          "124:  entry, err := commit.TreeEntry(treePath)",
          "125:  if err != nil {",
          "126:   c.NotFoundOrError(gitutil.NewError(err), \"get tree entry\")",
          "",
          "[Removed Lines]",
          "123:  treePath := c.Params(\"*\")",
          "",
          "[Added Lines]",
          "125:  treePath := pathutil.Clean(c.Params(\"*\"))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "188:  if r.Branch == \"\" {",
          "189:   r.Branch = c.Repo.Repository.DefaultBranch",
          "190:  }",
          "192:  err = c.Repo.Repository.UpdateRepoFile(",
          "193:   c.User,",
          "194:   db.UpdateRepoFileOptions{",
          "",
          "[Removed Lines]",
          "191:  treePath := c.Params(\"*\")",
          "",
          "[Added Lines]",
          "195:  treePath := pathutil.Clean(c.Params(\"*\"))",
          "",
          "---------------"
        ],
        "internal/route/repo/editor.go||internal/route/repo/editor.go": [
          "File: internal/route/repo/editor.go -> internal/route/repo/editor.go"
        ],
        "internal/route/repo/http.go||internal/route/repo/http.go": [
          "File: internal/route/repo/http.go -> internal/route/repo/http.go"
        ]
      }
    }
  ]
}