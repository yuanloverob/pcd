{
  "cve_id": "CVE-2022-36107",
  "cve_desc": "TYPO3 is an open source PHP based web content management system released under the GNU GPL. It has been discovered that the `FileDumpController` (backend and frontend context) is vulnerable to cross-site scripting when malicious files are displayed using this component. A valid backend user account is needed to exploit this vulnerability. Update to TYPO3 version 7.6.58 ELTS, 8.7.48 ELTS, 9.5.37 ELTS, 10.4.32 or 11.5.16 that fix the problem. There are no known workarounds for this issue.",
  "repo": "TYPO3/typo3",
  "patch_hash": "546208428c861a09d62b86cde141eb19a81fae66",
  "patch_info": {
    "commit_hash": "546208428c861a09d62b86cde141eb19a81fae66",
    "repo": "TYPO3/typo3",
    "commit_url": "https://github.com/TYPO3/typo3/commit/546208428c861a09d62b86cde141eb19a81fae66",
    "files": [
      "typo3/sysext/core/Classes/Controller/FileDumpController.php"
    ],
    "message": "[SECURITY] Mitigate cross-site-scripting in FileDumpController\n\nFileDumpController is used to expose stored files from the backend\nuser interface through a corresponding service-side process. Since\ncontent-security-policy settings for files served directly by the\nweb server won't be applied, FileDumpController has to take care.\n\nResolves: #98221\nReleases: main, 11.5, 10.4\nChange-Id: I4fde10e48e33fa08452eddf876172f56b4f38e28\nSecurity-Bulletin: TYPO3-CORE-SA-2022-009\nSecurity-References: CVE-2022-36107\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/75712\nTested-by: Oliver Hader <oliver.hader@typo3.org>\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>",
    "before_after_code_files": [
      "typo3/sysext/core/Classes/Controller/FileDumpController.php||typo3/sysext/core/Classes/Controller/FileDumpController.php"
    ]
  },
  "patch_diff": {
    "typo3/sysext/core/Classes/Controller/FileDumpController.php||typo3/sysext/core/Classes/Controller/FileDumpController.php": [
      "File: typo3/sysext/core/Classes/Controller/FileDumpController.php -> typo3/sysext/core/Classes/Controller/FileDumpController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "31: use TYPO3\\CMS\\Core\\Resource\\ProcessedFile;",
      "32: use TYPO3\\CMS\\Core\\Resource\\ProcessedFileRepository;",
      "33: use TYPO3\\CMS\\Core\\Resource\\ResourceFactory;",
      "34: use TYPO3\\CMS\\Core\\Resource\\Security\\FileNameValidator;",
      "35: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "34: use TYPO3\\CMS\\Core\\Resource\\ResourceInterface;",
      "37: use TYPO3\\CMS\\Core\\Utility\\PathUtility;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "100:         $event = new ModifyFileDumpEvent($file, $request);",
      "101:         $event = $this->eventDispatcher->dispatch($event);",
      "102:         if ($event->isPropagationStopped()) {",
      "104:         }",
      "105:         $file = $event->getFile();",
      "",
      "[Removed Lines]",
      "103:             return $event->getResponse();",
      "",
      "[Added Lines]",
      "105:             return $this->applyContentSecurityPolicy($event->getFile(), $event->getResponse());",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "143:             $file = $file->process(ProcessedFile::CONTEXT_IMAGECROPSCALEMASK, $processingInstructions);",
      "144:         }",
      "147:             $file,",
      "150:         );",
      "151:     }",
      "",
      "[Removed Lines]",
      "146:         return $file->getStorage()->streamFile(",
      "148:             (bool)($parameters['dl'] ?? false),",
      "149:             $parameters['fn'] ?? null",
      "",
      "[Added Lines]",
      "148:         return $this->applyContentSecurityPolicy(",
      "150:             $file->getStorage()->streamFile(",
      "151:                 $file,",
      "152:                 (bool)($parameters['dl'] ?? false),",
      "153:                 $parameters['fn'] ?? null",
      "154:             )",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "253:             || GeneralUtility::makeInstance(FileNameValidator::class)",
      "254:                 ->isValid(basename($file->getIdentifier()));",
      "255:     }",
      "256: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "265:     protected function applyContentSecurityPolicy(ResourceInterface $file, ResponseInterface $response): ResponseInterface",
      "266:     {",
      "267:         $extension = PathUtility::pathinfo($file->getName(), PATHINFO_EXTENSION);",
      "269:         $policy = $extension === 'pdf' || $response->getHeaderLine('content-type') === 'application/pdf'",
      "270:             ? \"default-src 'self' 'unsafe-inline'; script-src 'none'; object-src 'self'; plugin-types application/pdf;\"",
      "271:             : \"default-src 'self'; script-src 'none'; style-src 'none'; object-src 'none';\";",
      "272:         return $response->withAddedHeader('content-security-policy', $policy);",
      "273:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a0c0e57a7b264fe527aee74062af5d3dbb882c51",
      "candidate_info": {
        "commit_hash": "a0c0e57a7b264fe527aee74062af5d3dbb882c51",
        "repo": "TYPO3/typo3",
        "commit_url": "https://github.com/TYPO3/typo3/commit/a0c0e57a7b264fe527aee74062af5d3dbb882c51",
        "files": [
          "typo3/sysext/core/Classes/Controller/FileDumpController.php",
          "typo3/sysext/install/Resources/Private/FolderStructureTemplateFiles/resources-root-htaccess"
        ],
        "message": "[BUGFIX] Allow CSP inline styles in directly requested SVG files\n\nUsing CSP directive `style-src 'unsafe-inline'` seems to be fine\nfor directly requested SVG files, since corresponding definitions\nare bound to the corresponding resource. Loading styles from any\nother external resource is still denied.\n\nResolves: #93884\nReleases: main, 11.5, 10.4\nChange-Id: Ifddf8782ecaa81bf26026ae8850d8c53b7977bd7\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/77456\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>\nTested-by: core-ci <typo3@b13.com>\nTested-by: Oliver Hader <oliver.hader@typo3.org>",
        "before_after_code_files": [
          "typo3/sysext/core/Classes/Controller/FileDumpController.php||typo3/sysext/core/Classes/Controller/FileDumpController.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "typo3/sysext/core/Classes/Controller/FileDumpController.php||typo3/sysext/core/Classes/Controller/FileDumpController.php"
          ],
          "candidate": [
            "typo3/sysext/core/Classes/Controller/FileDumpController.php||typo3/sysext/core/Classes/Controller/FileDumpController.php"
          ]
        }
      },
      "candidate_diff": {
        "typo3/sysext/core/Classes/Controller/FileDumpController.php||typo3/sysext/core/Classes/Controller/FileDumpController.php": [
          "File: typo3/sysext/core/Classes/Controller/FileDumpController.php -> typo3/sysext/core/Classes/Controller/FileDumpController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "266:     {",
          "267:         $extension = PathUtility::pathinfo($file->getName(), PATHINFO_EXTENSION);",
          "272:         return $response->withAddedHeader('content-security-policy', $policy);",
          "273:     }",
          "274: }",
          "",
          "[Removed Lines]",
          "269:         $policy = $extension === 'pdf' || $response->getHeaderLine('content-type') === 'application/pdf'",
          "270:             ? \"default-src 'self' 'unsafe-inline'; script-src 'none'; object-src 'self'; plugin-types application/pdf;\"",
          "271:             : \"default-src 'self'; script-src 'none'; style-src 'none'; object-src 'none';\";",
          "",
          "[Added Lines]",
          "269:         if ($extension === 'pdf' || $response->getHeaderLine('content-type') === 'application/pdf') {",
          "270:             $policy = \"default-src 'self' 'unsafe-inline'; script-src 'none'; object-src 'self'; plugin-types application/pdf;\";",
          "271:         } elseif ($extension === 'svg' || $response->getHeaderLine('content-type') === 'image/svg+xml') {",
          "272:             $policy = \"default-src 'self'; script-src 'none'; style-src 'unsafe-inline'; object-src 'none';\";",
          "273:         } else {",
          "274:             $policy = \"default-src 'self'; script-src 'none'; style-src 'none'; object-src 'none';\";",
          "275:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b880477e16881e57005dc22e7a14b455b8823fc6",
      "candidate_info": {
        "commit_hash": "b880477e16881e57005dc22e7a14b455b8823fc6",
        "repo": "TYPO3/typo3",
        "commit_url": "https://github.com/TYPO3/typo3/commit/b880477e16881e57005dc22e7a14b455b8823fc6",
        "files": [
          "typo3/sysext/core/Classes/Controller/FileDumpController.php"
        ],
        "message": "[SECURITY] Mitigate cross-site-scripting in FileDumpController\n\nFileDumpController is used to expose stored files from the backend\nuser interface through a corresponding service-side process. Since\ncontent-security-policy settings for files served directly by the\nweb server won't be applied, FileDumpController has to take care.\n\nResolves: #98221\nReleases: main, 11.5, 10.4\nChange-Id: I4fde10e48e33fa08452eddf876172f56b4f38e28\nSecurity-Bulletin: TYPO3-CORE-SA-2022-009\nSecurity-References: CVE-2022-36107\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/75706\nTested-by: Oliver Hader <oliver.hader@typo3.org>\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>",
        "before_after_code_files": [
          "typo3/sysext/core/Classes/Controller/FileDumpController.php||typo3/sysext/core/Classes/Controller/FileDumpController.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "typo3/sysext/core/Classes/Controller/FileDumpController.php||typo3/sysext/core/Classes/Controller/FileDumpController.php"
          ],
          "candidate": [
            "typo3/sysext/core/Classes/Controller/FileDumpController.php||typo3/sysext/core/Classes/Controller/FileDumpController.php"
          ]
        }
      },
      "candidate_diff": {
        "typo3/sysext/core/Classes/Controller/FileDumpController.php||typo3/sysext/core/Classes/Controller/FileDumpController.php": [
          "File: typo3/sysext/core/Classes/Controller/FileDumpController.php -> typo3/sysext/core/Classes/Controller/FileDumpController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: use TYPO3\\CMS\\Core\\Resource\\ProcessedFile;",
          "30: use TYPO3\\CMS\\Core\\Resource\\ProcessedFileRepository;",
          "31: use TYPO3\\CMS\\Core\\Resource\\ResourceFactory;",
          "32: use TYPO3\\CMS\\Core\\Resource\\Security\\FileNameValidator;",
          "33: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: use TYPO3\\CMS\\Core\\Resource\\ResourceInterface;",
          "35: use TYPO3\\CMS\\Core\\Utility\\PathUtility;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "77:             }",
          "78:             $response = $hookObject->checkFileAccess($file);",
          "79:             if ($response instanceof ResponseInterface) {",
          "81:             }",
          "82:         }",
          "",
          "[Removed Lines]",
          "80:                 return $response;",
          "",
          "[Added Lines]",
          "82:                 return $this->applyContentSecurityPolicy($file, $response);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "120:             $file = $file->process(ProcessedFile::CONTEXT_IMAGECROPSCALEMASK, $processingInstructions);",
          "121:         }",
          "124:     }",
          "126:     protected function buildParametersFromRequest(ServerRequestInterface $request): array",
          "",
          "[Removed Lines]",
          "123:         return $file->getStorage()->streamFile($file);",
          "",
          "[Added Lines]",
          "125:         return $this->applyContentSecurityPolicy(",
          "126:             $file,",
          "127:             $file->getStorage()->streamFile($file)",
          "128:         );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "216:             || GeneralUtility::makeInstance(FileNameValidator::class)",
          "217:                 ->isValid(basename($file->getIdentifier()));",
          "218:     }",
          "219: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "228:     protected function applyContentSecurityPolicy(ResourceInterface $file, ResponseInterface $response): ResponseInterface",
          "229:     {",
          "230:         $extension = PathUtility::pathinfo($file->getName(), PATHINFO_EXTENSION);",
          "232:         $policy = $extension === 'pdf' || $response->getHeaderLine('content-type') === 'application/pdf'",
          "233:             ? \"default-src 'self' 'unsafe-inline'; script-src 'none'; object-src 'self'; plugin-types application/pdf;\"",
          "234:             : \"default-src 'self'; script-src 'none'; style-src 'none'; object-src 'none';\";",
          "235:         return $response->withAddedHeader('content-security-policy', $policy);",
          "236:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}