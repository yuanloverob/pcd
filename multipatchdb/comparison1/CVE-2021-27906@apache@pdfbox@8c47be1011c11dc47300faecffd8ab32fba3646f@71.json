{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2d4aa4adf5bc370f2bf6774f87aee891ac83e947",
      "candidate_info": {
        "commit_hash": "2d4aa4adf5bc370f2bf6774f87aee891ac83e947",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/2d4aa4adf5bc370f2bf6774f87aee891ac83e947",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/pfb/PfbParser.java"
        ],
        "message": "PDFBOX-4892: avoid memory leak, as suggested by valerybokov; remove unneeded assignment; fix javadoc; rename method\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887218 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/pfb/PfbParser.java||fontbox/src/main/java/org/apache/fontbox/pfb/PfbParser.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/pfb/PfbParser.java||fontbox/src/main/java/org/apache/fontbox/pfb/PfbParser.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/pfb/PfbParser.java -> fontbox/src/main/java/org/apache/fontbox/pfb/PfbParser.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:     public PfbParser(final String filename) throws IOException",
          "90:     {",
          "92:     }",
          "",
          "[Removed Lines]",
          "91:         this( new BufferedInputStream(new FileInputStream(filename),BUFFER_SIZE) );",
          "",
          "[Added Lines]",
          "91:         BufferedInputStream in = null;",
          "92:         try",
          "93:         {",
          "94:             in = new BufferedInputStream(new FileInputStream(filename), BUFFER_SIZE);",
          "95:             byte[] pfb = readFully(in);",
          "96:             parsePfb(pfb);",
          "97:         }",
          "98:         finally",
          "99:         {",
          "100:             if (in != null)",
          "101:             {",
          "102:                 in.close();",
          "103:             }",
          "104:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "99:     public PfbParser(final InputStream in) throws IOException",
          "100:     {",
          "102:         parsePfb(pfb);",
          "103:     }",
          "",
          "[Removed Lines]",
          "101:         byte[] pfb = readPfbInput(in);",
          "",
          "[Added Lines]",
          "114:         byte[] pfb = readFully(in);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "165:     }",
          "174:     {",
          "176:         ByteArrayOutputStream out = new ByteArrayOutputStream();",
          "177:         byte[] tmpbuf = new byte[BUFFER_SIZE];",
          "179:         while ((amountRead = in.read(tmpbuf)) != -1)",
          "180:         {",
          "181:             out.write(tmpbuf, 0, amountRead);",
          "",
          "[Removed Lines]",
          "173:     private byte[] readPfbInput(final InputStream in) throws IOException",
          "178:         int amountRead = -1;",
          "",
          "[Added Lines]",
          "186:     private byte[] readFully(final InputStream in) throws IOException",
          "191:         int amountRead;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bd194889a2d48f403dc4178caa39ca54fb0249e5",
      "candidate_info": {
        "commit_hash": "bd194889a2d48f403dc4178caa39ca54fb0249e5",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/bd194889a2d48f403dc4178caa39ca54fb0249e5",
        "files": [
          "pdfbox/src/test/java/org/apache/pdfbox/util/TestDateUtil.java"
        ],
        "message": "PDFBOX-4892: Sonar fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1884435 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/test/java/org/apache/pdfbox/util/TestDateUtil.java||pdfbox/src/test/java/org/apache/pdfbox/util/TestDateUtil.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/test/java/org/apache/pdfbox/util/TestDateUtil.java||pdfbox/src/test/java/org/apache/pdfbox/util/TestDateUtil.java": [
          "File: pdfbox/src/test/java/org/apache/pdfbox/util/TestDateUtil.java -> pdfbox/src/test/java/org/apache/pdfbox/util/TestDateUtil.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "353:         checkToString(2015, 8, 28, 3, 14, 15, tzAdelaide, +9, 30);",
          "354:         checkToString(2016, 2, 28, 3, 14, 15, tzAdelaide, +10, 30);",
          "368:     }",
          "370:     private static void checkParseTZ(int expect, String src)",
          "",
          "[Removed Lines]",
          "356:         checkToString(1981, 1, 1, 1, 14, 15, tzMcMurdo, +0, 0);",
          "357:         checkToString(1982, 2, 1, 1, 14, 15, tzMcMurdo, +0, 0);",
          "358:         checkToString(1983, 3, 1, 1, 14, 15, tzMcMurdo, +0, 0);",
          "359:         checkToString(1984, 4, 1, 1, 14, 15, tzMcMurdo, +0, 0);",
          "360:         checkToString(1985, 5, 1, 1, 14, 15, tzMcMurdo, +0, 0);",
          "361:         checkToString(1986, 6, 1, 1, 14, 15, tzMcMurdo, +0, 0);",
          "362:         checkToString(1987, 7, 1, 1, 14, 15, tzMcMurdo, +0, 0);",
          "363:         checkToString(1988, 8, 1, 1, 14, 15, tzMcMurdo, +0, 0);",
          "364:         checkToString(1989, 9, 1, 1, 14, 15, tzMcMurdo, +0, 0);",
          "365:         checkToString(1990, 10, 1, 1, 14, 15, tzMcMurdo, +0, 0);",
          "366:         checkToString(1991, 11, 1, 1, 14, 15, tzMcMurdo, +0, 0);",
          "367:         checkToString(1992, 12, 1, 1, 14, 15, tzMcMurdo, +0, 0);",
          "",
          "[Added Lines]",
          "356:         for (int m = 1; m <= 12; ++m)",
          "357:         {",
          "358:             checkToString(1980 + m, m, 1, 1, 14, 15, tzMcMurdo, +0, 0);",
          "359:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cba5b69c1af628293a318124bcc9265011440d02",
      "candidate_info": {
        "commit_hash": "cba5b69c1af628293a318124bcc9265011440d02",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/cba5b69c1af628293a318124bcc9265011440d02",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java"
        ],
        "message": "PDFBOX-4892: simplify code, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890487 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "2596:         if ( headerStart > 0 )",
          "2597:         {",
          "2600:         }",
          "",
          "[Removed Lines]",
          "2599:             header = header.substring( headerStart, header.length() );",
          "",
          "[Added Lines]",
          "2599:             header = header.substring(headerStart);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3d81c23fc134f3c7ac7fa140acf5d5598a19c5b8",
      "candidate_info": {
        "commit_hash": "3d81c23fc134f3c7ac7fa140acf5d5598a19c5b8",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/3d81c23fc134f3c7ac7fa140acf5d5598a19c5b8",
        "files": [
          "preflight/src/main/java/org/apache/pdfbox/preflight/process/AcroFormValidationProcess.java"
        ],
        "message": "PDFBOX-4892: remove unneeded code, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1891447 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "preflight/src/main/java/org/apache/pdfbox/preflight/process/AcroFormValidationProcess.java||preflight/src/main/java/org/apache/pdfbox/preflight/process/AcroFormValidationProcess.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "preflight/src/main/java/org/apache/pdfbox/preflight/process/AcroFormValidationProcess.java||preflight/src/main/java/org/apache/pdfbox/preflight/process/AcroFormValidationProcess.java": [
          "File: preflight/src/main/java/org/apache/pdfbox/preflight/process/AcroFormValidationProcess.java -> preflight/src/main/java/org/apache/pdfbox/preflight/process/AcroFormValidationProcess.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: import org.apache.pdfbox.preflight.exception.ValidationException;",
          "38: import org.apache.pdfbox.preflight.utils.ContextHelper;",
          "41: import static org.apache.pdfbox.preflight.PreflightConfiguration.ANNOTATIONS_PROCESS;",
          "42: import static org.apache.pdfbox.preflight.PreflightConstants.ERROR_ACTION_FORBIDDEN_ADDITIONAL_ACTIONS_FIELD;",
          "43: import static org.apache.pdfbox.preflight.PreflightConstants.ERROR_ACTION_FORBIDDEN_WIDGET_ACTION_FIELD;",
          "45: import static org.apache.pdfbox.preflight.PreflightConstants.ERROR_SYNTAX_DICT_INVALID;",
          "46: import static org.apache.pdfbox.preflight.PreflightConstants.ERROR_SYNTAX_NOCATALOG;",
          "",
          "[Removed Lines]",
          "44: import static org.apache.pdfbox.preflight.PreflightConstants.ERROR_SYNTAX_BODY;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "105:     {",
          "107:         {",
          "110:             {",
          "124:                 {",
          "127:                 }",
          "128:             }",
          "129:         }",
          "",
          "[Removed Lines]",
          "104:     protected boolean exploreFields(PreflightContext ctx, List<PDField> lFields) throws IOException",
          "106:         if (lFields != null)",
          "109:             for (Object obj : lFields)",
          "111:                 if (obj instanceof PDField)",
          "112:                 {",
          "113:                     if (!validateField(ctx, (PDField) obj))",
          "114:                     {",
          "115:                         return false;",
          "116:                     }",
          "117:                 }",
          "118:                 else if (obj instanceof PDAnnotationWidget)",
          "119:                 {",
          "121:                     ContextHelper.validateElement(ctx, ((PDAnnotationWidget) obj).getCOSObject(), ANNOTATIONS_PROCESS);",
          "122:                 }",
          "123:                 else",
          "125:                     addValidationError(ctx, new ValidationError(ERROR_SYNTAX_BODY,",
          "126:                             \"Field can only have fields or widget annotations as KIDS\"));",
          "",
          "[Added Lines]",
          "103:     protected boolean exploreFields(PreflightContext ctx, List<PDField> fields) throws IOException",
          "105:         if (fields != null)",
          "108:             for (PDField field : fields)",
          "110:                 if (!validateField(ctx, field))",
          "112:                     return false;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1b94aa1a7b3f87171e1371149126f9a46fc883cb",
      "candidate_info": {
        "commit_hash": "1b94aa1a7b3f87171e1371149126f9a46fc883cb",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/1b94aa1a7b3f87171e1371149126f9a46fc883cb",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java"
        ],
        "message": "PDFBOX-4892: improve performance, as suggested by valerybokov; remove useless shift\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887272 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "986:     private String richContentsToString(Node node, boolean root)",
          "987:     {",
          "990:         NodeList nodelist = node.getChildNodes();",
          "991:         for (int i = 0; i < nodelist.getLength(); i++)",
          "",
          "[Removed Lines]",
          "988:         String subString = \"\";",
          "",
          "[Added Lines]",
          "988:         StringBuilder sb = new StringBuilder();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "993:             Node child = nodelist.item(i);",
          "994:             if (child instanceof Element)",
          "995:             {",
          "997:             }",
          "998:             else if (child instanceof CDATASection)",
          "999:             {",
          "1001:             }",
          "1002:             else if (child instanceof Text)",
          "1003:             {",
          "",
          "[Removed Lines]",
          "996:                 subString += richContentsToString(child, false);",
          "1000:              subString += \"<![CDATA[\" + ((CDATASection) child).getData() + \"]]>\";",
          "",
          "[Added Lines]",
          "996:                 sb.append(richContentsToString(child, false));",
          "1000:              sb.append(\"<![CDATA[\").append(((CDATASection) child).getData()).append(\"]]>\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1006:              {",
          "1007:               cdata = cdata.replace(\"&\", \"&amp;\").replace(\"<\", \"&lt;\");",
          "1008:              }",
          "1010:             }",
          "1011:         }",
          "1012:         if (root)",
          "1013:         {",
          "1015:         }",
          "1017:         NamedNodeMap attributes = node.getAttributes();",
          "",
          "[Removed Lines]",
          "1009:              subString += cdata;",
          "1014:             return subString;",
          "",
          "[Added Lines]",
          "1009:              sb.append(cdata);",
          "1014:             return sb.toString();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1028:                     attributeNodeValue));",
          "1029:         }",
          "1030:         return String.format(\"<%s%s>%s</%s>\", node.getNodeName(), builder.toString(),",
          "1032:     }",
          "1033: }",
          "",
          "[Removed Lines]",
          "1031:                 subString, node.getNodeName());",
          "",
          "[Added Lines]",
          "1031:                 sb.toString(), node.getNodeName());",
          "",
          "---------------"
        ]
      }
    }
  ]
}