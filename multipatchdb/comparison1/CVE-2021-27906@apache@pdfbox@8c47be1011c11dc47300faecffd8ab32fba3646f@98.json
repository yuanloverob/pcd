{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4ca8716ef392dca037c983ee49a3d1d032b05adf",
      "candidate_info": {
        "commit_hash": "4ca8716ef392dca037c983ee49a3d1d032b05adf",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/4ca8716ef392dca037c983ee49a3d1d032b05adf",
        "files": [
          "preflight/src/main/java/org/apache/pdfbox/preflight/parser/PreflightParser.java"
        ],
        "message": "PDFBOX-4892: optimize, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1891662 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "preflight/src/main/java/org/apache/pdfbox/preflight/parser/PreflightParser.java||preflight/src/main/java/org/apache/pdfbox/preflight/parser/PreflightParser.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "preflight/src/main/java/org/apache/pdfbox/preflight/parser/PreflightParser.java||preflight/src/main/java/org/apache/pdfbox/preflight/parser/PreflightParser.java": [
          "File: preflight/src/main/java/org/apache/pdfbox/preflight/parser/PreflightParser.java -> preflight/src/main/java/org/apache/pdfbox/preflight/parser/PreflightParser.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "411:         xrefTrailerResolver.nextXrefObj(startByteOffset,XRefType.TABLE);",
          "414:         while (true)",
          "415:         {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "413:         Pattern pattern = Pattern.compile(\"(\\\\d+)\\\\s(\\\\d+)(\\\\s*)\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "422:             long offset = source.getPosition();",
          "423:             String line = readLine();",
          "425:             Matcher matcher = pattern.matcher(line);",
          "426:             if (matcher.matches())",
          "427:             {",
          "",
          "[Removed Lines]",
          "424:             Pattern pattern = Pattern.compile(\"(\\\\d+)\\\\s(\\\\d+)(\\\\s*)\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fdaa414e9b02eb3533ac8b6a979b4234bcbd9a2b",
      "candidate_info": {
        "commit_hash": "fdaa414e9b02eb3533ac8b6a979b4234bcbd9a2b",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/fdaa414e9b02eb3533ac8b6a979b4234bcbd9a2b",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/pdmodel/ShowColorBoxes.java"
        ],
        "message": "PDFBOX-5116: add rotated box\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887251 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/pdmodel/ShowColorBoxes.java||examples/src/main/java/org/apache/pdfbox/examples/pdmodel/ShowColorBoxes.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/pdmodel/ShowColorBoxes.java||examples/src/main/java/org/apache/pdfbox/examples/pdmodel/ShowColorBoxes.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/pdmodel/ShowColorBoxes.java -> examples/src/main/java/org/apache/pdfbox/examples/pdmodel/ShowColorBoxes.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import org.apache.pdfbox.pdmodel.PDDocument;",
          "22: import org.apache.pdfbox.pdmodel.PDPage;",
          "23: import org.apache.pdfbox.pdmodel.PDPageContentStream;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: import org.apache.pdfbox.util.Matrix;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "60:             contents.addRect(10, 10, 100, 100);",
          "61:             contents.fill();",
          "63:             contents.close();",
          "64:             doc.save(filename);",
          "65:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "66:             contents.saveGraphicsState();",
          "67:             contents.setNonStrokingColor(Color.BLUE);",
          "68:             contents.transform(Matrix.getRotateInstance(Math.toRadians(105), 200, 500));",
          "69:             contents.addRect(0, 0, 200, 100);",
          "70:             contents.fill();",
          "71:             contents.restoreGraphicsState();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8eafb4b50c316e7307c60ca764679a81af15e1ed",
      "candidate_info": {
        "commit_hash": "8eafb4b50c316e7307c60ca764679a81af15e1ed",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/8eafb4b50c316e7307c60ca764679a81af15e1ed",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/OS2WindowsMetricsTable.java"
        ],
        "message": "PDFBOX-5123, PDFBOX-5124: gracefully recover from EOF in legacy version 0 segment\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887444 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/OS2WindowsMetricsTable.java||fontbox/src/main/java/org/apache/fontbox/ttf/OS2WindowsMetricsTable.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/ttf/OS2WindowsMetricsTable.java||fontbox/src/main/java/org/apache/fontbox/ttf/OS2WindowsMetricsTable.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/ttf/OS2WindowsMetricsTable.java -> fontbox/src/main/java/org/apache/fontbox/ttf/OS2WindowsMetricsTable.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "822:         fsSelection = data.readUnsignedShort();",
          "823:         firstCharIndex = data.readUnsignedShort();",
          "824:         lastCharIndex = data.readUnsignedShort();",
          "830:         if (version >= 1)",
          "831:         {",
          "832:             try",
          "",
          "[Removed Lines]",
          "825:         typoAscender = data.readSignedShort();",
          "826:         typoDescender = data.readSignedShort();",
          "827:         typoLineGap = data.readSignedShort();",
          "828:         winAscent = data.readUnsignedShort();",
          "829:         winDescent = data.readUnsignedShort();",
          "",
          "[Added Lines]",
          "825:         try",
          "826:         {",
          "827:             typoAscender = data.readSignedShort();",
          "828:             typoDescender = data.readSignedShort();",
          "829:             typoLineGap = data.readSignedShort();",
          "830:             winAscent = data.readUnsignedShort();",
          "831:             winDescent = data.readUnsignedShort();",
          "832:         }",
          "833:         catch (EOFException ex)",
          "834:         {",
          "835:             LOG.debug(\"EOF, probably some legacy TrueType font\");",
          "836:             initialized = true;",
          "837:             return;",
          "838:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6eecc3575ccb3cbe2afb9f8bde33e187f06601f3",
      "candidate_info": {
        "commit_hash": "6eecc3575ccb3cbe2afb9f8bde33e187f06601f3",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/6eecc3575ccb3cbe2afb9f8bde33e187f06601f3",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/state/SetLineMiterLimit.java"
        ],
        "message": "PDFBOX-5019: revert\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1883615 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/state/SetLineMiterLimit.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/state/SetLineMiterLimit.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/state/SetLineMiterLimit.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/state/SetLineMiterLimit.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/state/SetLineMiterLimit.java -> pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/state/SetLineMiterLimit.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: import java.io.IOException;",
          "20: import java.util.List;",
          "24: import org.apache.pdfbox.contentstream.operator.MissingOperandException;",
          "25: import org.apache.pdfbox.contentstream.operator.Operator;",
          "26: import org.apache.pdfbox.contentstream.operator.OperatorName;",
          "",
          "[Removed Lines]",
          "22: import org.apache.commons.logging.Log;",
          "23: import org.apache.commons.logging.LogFactory;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36: public class SetLineMiterLimit extends OperatorProcessor",
          "37: {",
          "40:     @Override",
          "41:     public void process(Operator operator, List<COSBase> arguments) throws IOException",
          "42:     {",
          "",
          "[Removed Lines]",
          "38:     private static final Log LOG = LogFactory.getLog(SetLineMiterLimit.class);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "45:             throw new MissingOperandException(operator, arguments);",
          "46:         }",
          "47:         COSNumber miterLimit = (COSNumber)arguments.get( 0 );",
          "54:     }",
          "56:     @Override",
          "",
          "[Removed Lines]",
          "48:         float lim = miterLimit.floatValue();",
          "49:         if (lim < 1)",
          "50:         {",
          "51:             LOG.warn(\"Miter limit must be >= 1, value \" + lim + \" is ignored\");",
          "52:         }",
          "53:         context.getGraphicsState().setMiterLimit(lim);",
          "",
          "[Added Lines]",
          "44:         context.getGraphicsState().setMiterLimit(miterLimit.floatValue());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "64d83dbaafa5f1e51dd0801ff75723a61ef46bc9",
      "candidate_info": {
        "commit_hash": "64d83dbaafa5f1e51dd0801ff75723a61ef46bc9",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/64d83dbaafa5f1e51dd0801ff75723a61ef46bc9",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java"
        ],
        "message": "PDFBOX-4892: improve javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1891548 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java"
        ]
      }
    }
  ]
}