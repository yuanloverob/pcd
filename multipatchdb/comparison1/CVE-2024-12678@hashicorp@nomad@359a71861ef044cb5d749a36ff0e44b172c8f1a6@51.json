{
  "cve_id": "CVE-2024-12678",
  "cve_desc": "Nomad Community and Nomad Enterprise (\"Nomad\") allocations are vulnerable to privilege escalation within a namespace through unredacted workload identity tokens. This vulnerability, identified as CVE-2024-12678, is fixed in Nomad Community Edition 1.9.4 and Nomad Enterprise 1.9.4, 1.8.8, and 1.7.16.",
  "repo": "hashicorp/nomad",
  "patch_hash": "359a71861ef044cb5d749a36ff0e44b172c8f1a6",
  "patch_info": {
    "commit_hash": "359a71861ef044cb5d749a36ff0e44b172c8f1a6",
    "repo": "hashicorp/nomad",
    "commit_url": "https://github.com/hashicorp/nomad/commit/359a71861ef044cb5d749a36ff0e44b172c8f1a6",
    "files": [
      ".changelog/24683.txt",
      "command/agent/node_endpoint.go",
      "nomad/alloc_endpoint.go",
      "nomad/structs/structs.go"
    ],
    "message": "Backport of sec: fix alloc workload identity namespace permission into release/1.9.x (#24685)\n\nCo-authored-by: Deniz Onur Duzgun <59659739+dduzgun-security@users.noreply.github.com>",
    "before_after_code_files": [
      "command/agent/node_endpoint.go||command/agent/node_endpoint.go",
      "nomad/alloc_endpoint.go||nomad/alloc_endpoint.go",
      "nomad/structs/structs.go||nomad/structs/structs.go"
    ]
  },
  "patch_diff": {
    "command/agent/node_endpoint.go||command/agent/node_endpoint.go": [
      "File: command/agent/node_endpoint.go -> command/agent/node_endpoint.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "105:   out.Allocs = make([]*structs.Allocation, 0)",
      "106:  }",
      "107:  for _, alloc := range out.Allocs {",
      "108:   alloc.SetEventDisplayMessages()",
      "109:  }",
      "110:  return out.Allocs, nil",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "108:   alloc = alloc.Sanitize()",
      "",
      "---------------"
    ],
    "nomad/alloc_endpoint.go||nomad/alloc_endpoint.go": [
      "File: nomad/alloc_endpoint.go -> nomad/alloc_endpoint.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "172:    }",
      "176:    if out != nil {",
      "178:     if !aclObj.AllowClientOp() && !allowNsOp(aclObj, out.Namespace) {",
      "179:      return structs.NewErrUnknownAllocation(args.AllocID)",
      "",
      "[Removed Lines]",
      "175:    reply.Alloc = out",
      "",
      "[Added Lines]",
      "176:     out = out.Sanitize()",
      "177:     reply.Alloc = out",
      "",
      "---------------"
    ],
    "nomad/structs/structs.go||nomad/structs/structs.go": [
      "File: nomad/structs/structs.go -> nomad/structs/structs.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "11199:  return a.ID",
      "11200: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "11205: func (a *Allocation) Sanitize() *Allocation {",
      "11206:  if a == nil {",
      "11207:   return nil",
      "11208:  }",
      "11210:  if a.SignedIdentities == nil {",
      "11211:   return a",
      "11212:  }",
      "11214:  clean := a.Copy()",
      "11215:  clean.SignedIdentities = nil",
      "11216:  return clean",
      "11217: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "dcf9fa7352d0db7439a2641d39e48c0d67b11fd8",
      "candidate_info": {
        "commit_hash": "dcf9fa7352d0db7439a2641d39e48c0d67b11fd8",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/dcf9fa7352d0db7439a2641d39e48c0d67b11fd8",
        "files": [
          "go.mod",
          "go.sum"
        ],
        "message": "backport of commit d9d5e7351a7287e6ae632790925ec39877e621fe (#25210)\n\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "224:  github.com/envoyproxy/protoc-gen-validate v1.1.0 // indirect",
          "225:  github.com/felixge/httpsnoop v1.0.4 // indirect",
          "226:  github.com/fsnotify/fsnotify v1.6.0 // indirect",
          "228:  github.com/go-logr/logr v1.4.2 // indirect",
          "229:  github.com/go-logr/stdr v1.2.2 // indirect",
          "230:  github.com/go-ole/go-ole v1.2.6 // indirect",
          "",
          "[Removed Lines]",
          "227:  github.com/go-jose/go-jose/v4 v4.0.4 // indirect",
          "",
          "[Added Lines]",
          "227:  github.com/go-jose/go-jose/v4 v4.0.5 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "954: github.com/go-jose/go-jose/v3 v3.0.0/go.mod h1:RNkWWRld676jZEYoV3+XK8L2ZnNSvIsxFMht0mSX+u8=",
          "955: github.com/go-jose/go-jose/v3 v3.0.3 h1:fFKWeig/irsp7XD2zBxvnmA/XaRWp5V3CBsZXJF7G7k=",
          "956: github.com/go-jose/go-jose/v3 v3.0.3/go.mod h1:5b+7YgP7ZICgJDBdfjZaIt+H/9L9T/YQrVfLAMboGkQ=",
          "959: github.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=",
          "960: github.com/go-kit/kit v0.9.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=",
          "961: github.com/go-kit/log v0.1.0/go.mod h1:zbhenjAZHb184qTLMA9ZjW7ThYL0H2mk7Q6pNt4vbaY=",
          "",
          "[Removed Lines]",
          "957: github.com/go-jose/go-jose/v4 v4.0.4 h1:VsjPI33J0SB9vQM6PLmNjoHqMQNGPiZ0rHL7Ni7Q6/E=",
          "958: github.com/go-jose/go-jose/v4 v4.0.4/go.mod h1:NKb5HO1EZccyMpiZNbdUw/14tiXNyUJh188dfnMCAfc=",
          "",
          "[Added Lines]",
          "957: github.com/go-jose/go-jose/v4 v4.0.5 h1:M6T8+mKZl/+fNNuFHvGIzDz7BTLQPIounk/b9dw3AaE=",
          "958: github.com/go-jose/go-jose/v4 v4.0.5/go.mod h1:s3P1lRrkT8igV8D9OjyL4WRyHvjB6a4JSllnOrmmBOA=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4d47e1a6ba58e8da82da3d5d3dd01627d8c6cd0d",
      "candidate_info": {
        "commit_hash": "4d47e1a6ba58e8da82da3d5d3dd01627d8c6cd0d",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/4d47e1a6ba58e8da82da3d5d3dd01627d8c6cd0d",
        "files": [
          "drivers/shared/executor/procstats/list_test.go",
          "drivers/shared/executor/procstats/list_windows.go",
          "drivers/shared/executor/procstats/list_windows_test.go",
          "drivers/shared/executor/procstats/procstats.go"
        ],
        "message": "Backport of windows: trade heap for stack to build process tree for stats in linear space into release/1.9.x (#24198)\n\nCo-authored-by: Tim Gross <tgross@hashicorp.com>",
        "before_after_code_files": [
          "drivers/shared/executor/procstats/list_test.go||drivers/shared/executor/procstats/list_test.go",
          "drivers/shared/executor/procstats/list_windows.go||drivers/shared/executor/procstats/list_windows.go",
          "drivers/shared/executor/procstats/list_windows_test.go||drivers/shared/executor/procstats/list_windows_test.go",
          "drivers/shared/executor/procstats/procstats.go||drivers/shared/executor/procstats/procstats.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/shared/executor/procstats/list_test.go||drivers/shared/executor/procstats/list_test.go": [
          "File: drivers/shared/executor/procstats/list_test.go -> drivers/shared/executor/procstats/list_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: package procstats",
          "6: import (",
          "7:  \"math/rand\"",
          "8:  \"testing\"",
          "10:  \"github.com/mitchellh/go-ps\"",
          "11:  \"github.com/shoenig/test/must\"",
          "12: )",
          "14: type mockProcess struct {",
          "15:  pid  int",
          "16:  ppid int",
          "17: }",
          "19: func (p *mockProcess) Pid() int {",
          "20:  return p.pid",
          "21: }",
          "23: func (p *mockProcess) PPid() int {",
          "24:  return p.ppid",
          "25: }",
          "27: func (p *mockProcess) Executable() string {",
          "28:  return \"\"",
          "29: }",
          "31: func mockProc(pid, ppid int) *mockProcess {",
          "32:  return &mockProcess{pid: pid, ppid: ppid}",
          "33: }",
          "35: func genMockProcs(needles, haystack int) ([]ps.Process, []ProcessID) {",
          "37:  procs := []ps.Process{mockProc(1, 1), mockProc(42, 1)}",
          "38:  expect := []ProcessID{42}",
          "41:  for i := 0; i < needles; i++ {",
          "42:   parent := 42 + i",
          "43:   pid := parent + 1",
          "44:   procs = append(procs, mockProc(pid, parent))",
          "45:   expect = append(expect, pid)",
          "46:  }",
          "48:  for i := 0; i < haystack; i++ {",
          "49:   parent := 200 + i",
          "50:   pid := parent + 1",
          "51:   procs = append(procs, mockProc(pid, parent))",
          "52:  }",
          "54:  rand.Shuffle(len(procs), func(i, j int) {",
          "55:   procs[i], procs[j] = procs[j], procs[i]",
          "56:  })",
          "58:  return procs, expect",
          "59: }",
          "61: func Test_list(t *testing.T) {",
          "62:  cases := []struct {",
          "63:   name     string",
          "64:   needles  int",
          "65:   haystack int",
          "66:   expect   int",
          "67:  }{",
          "68:   {",
          "69:    name:     \"minimal\",",
          "70:    needles:  2,",
          "71:    haystack: 10,",
          "72:    expect:   16,",
          "73:   },",
          "74:   {",
          "75:    name:     \"small needles small haystack\",",
          "76:    needles:  5,",
          "77:    haystack: 200,",
          "78:    expect:   212,",
          "79:   },",
          "80:   {",
          "81:    name:     \"small needles large haystack\",",
          "82:    needles:  10,",
          "83:    haystack: 1000,",
          "84:    expect:   1022,",
          "85:   },",
          "86:   {",
          "87:    name:     \"moderate needles giant haystack\",",
          "88:    needles:  20,",
          "89:    haystack: 2000,",
          "90:    expect:   2042,",
          "91:   },",
          "92:  }",
          "94:  for _, tc := range cases {",
          "95:   const executorPID = 42",
          "96:   t.Run(tc.name, func(t *testing.T) {",
          "98:    procs, expect := genMockProcs(tc.needles, tc.haystack)",
          "99:    lister := func() ([]ps.Process, error) {",
          "100:     return procs, nil",
          "101:    }",
          "103:    result, examined := list(executorPID, lister)",
          "104:    must.SliceContainsAll(t, expect, result.Slice(),",
          "105:     must.Sprintf(\"exp: %v; got: %v\", expect, result),",
          "106:    )",
          "107:    must.Eq(t, tc.expect, examined)",
          "108:   })",
          "109:  }",
          "110: }",
          "",
          "---------------"
        ],
        "drivers/shared/executor/procstats/list_windows.go||drivers/shared/executor/procstats/list_windows.go": [
          "File: drivers/shared/executor/procstats/list_windows.go -> drivers/shared/executor/procstats/list_windows.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:  \"github.com/mitchellh/go-ps\"",
          "11: )",
          "",
          "[Removed Lines]",
          "13: func gather(procs map[int]ps.Process, family set.Collection[int], root int, candidate ps.Process) bool {",
          "14:  if candidate == nil {",
          "15:   return false",
          "16:  }",
          "17:  pid := candidate.Pid()",
          "18:  if pid == 0 || pid == 1 {",
          "19:   return false",
          "20:  }",
          "21:  if pid == root {",
          "22:   return true",
          "23:  }",
          "24:  parent := procs[candidate.PPid()]",
          "25:  result := gather(procs, family, root, parent)",
          "26:  if result {",
          "27:   family.Insert(pid)",
          "28:  }",
          "29:  return result",
          "30: }",
          "32: func mapping(all []ps.Process) map[int]ps.Process {",
          "33:  result := make(map[int]ps.Process)",
          "34:  for _, process := range all {",
          "35:   result[process.Pid()] = process",
          "36:  }",
          "37:  return result",
          "38: }",
          "40: func list(executorPID int, processes func() ([]ps.Process, error)) set.Collection[ProcessID] {",
          "41:  family := set.From([]int{executorPID})",
          "43:  all, err := processes()",
          "44:  if err != nil {",
          "45:   return family",
          "46:  }",
          "48:  m := mapping(all)",
          "49:  for _, candidate := range all {",
          "50:   gather(m, family, executorPID, candidate)",
          "51:  }",
          "53:  return family",
          "54: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "71: func List(executorPID int) set.Collection[ProcessID] {",
          "73: }",
          "",
          "[Removed Lines]",
          "72:  return list(executorPID, ps.Processes)",
          "",
          "[Added Lines]",
          "29:  procs, _ := list(executorPID, ps.Processes)",
          "30:  return procs",
          "",
          "---------------"
        ],
        "drivers/shared/executor/procstats/list_windows_test.go||drivers/shared/executor/procstats/list_windows_test.go": [
          "File: drivers/shared/executor/procstats/list_windows_test.go -> drivers/shared/executor/procstats/list_windows_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "drivers/shared/executor/procstats/procstats.go||drivers/shared/executor/procstats/procstats.go": [
          "File: drivers/shared/executor/procstats/procstats.go -> drivers/shared/executor/procstats/procstats.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:  \"github.com/hashicorp/go-set/v3\"",
          "10:  \"github.com/hashicorp/nomad/client/lib/cpustats\"",
          "11:  \"github.com/hashicorp/nomad/plugins/drivers\"",
          "12: )",
          "14: var (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12:  \"github.com/mitchellh/go-ps\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80:   Pids:          procStats,",
          "81:  }",
          "82: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "85: func list(executorPID int, processes func() ([]ps.Process, error)) (set.Collection[ProcessID], int) {",
          "86:  family := set.From([]int{executorPID})",
          "88:  all, err := processes()",
          "89:  if err != nil {",
          "90:   return family, 0",
          "91:  }",
          "93:  parents, examined := mapping(all)",
          "94:  examined += gather(family, parents, executorPID)",
          "96:  return family, examined",
          "97: }",
          "99: func gather(family set.Collection[int], parents map[int]set.Collection[int], parent int) int {",
          "100:  examined := 0",
          "101:  candidates, ok := parents[parent]",
          "102:  if !ok {",
          "103:   return examined",
          "104:  }",
          "105:  for _, candidate := range candidates.Slice() {",
          "106:   examined++",
          "107:   family.Insert(candidate)",
          "108:   examined += gather(family, parents, candidate)",
          "109:  }",
          "111:  return examined",
          "112: }",
          "115: func mapping(all []ps.Process) (map[int]set.Collection[int], int) {",
          "117:  parents := map[int]set.Collection[int]{}",
          "118:  examined := 0",
          "120:  for _, candidate := range all {",
          "121:   if candidate != nil {",
          "122:    examined++",
          "123:    if children, ok := parents[candidate.PPid()]; ok {",
          "124:     children.Insert(candidate.Pid())",
          "125:    } else {",
          "126:     parents[candidate.PPid()] = set.From([]int{candidate.Pid()})",
          "127:    }",
          "128:   }",
          "129:  }",
          "131:  return parents, examined",
          "132: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4e84ea0cd481c727408120bfc55fe6e6dd7b57b7",
      "candidate_info": {
        "commit_hash": "4e84ea0cd481c727408120bfc55fe6e6dd7b57b7",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/4e84ea0cd481c727408120bfc55fe6e6dd7b57b7",
        "files": [
          "go.mod",
          "go.sum",
          "nomad/mock/variables.go",
          "nomad/variables_endpoint_test.go"
        ],
        "message": "backport of commit 87741dd9088eff31f523751adabcd8131afbdc9d (#25080)\n\nCo-authored-by: Tim Gross <tgross@hashicorp.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum",
          "nomad/mock/variables.go||nomad/mock/variables.go",
          "nomad/variables_endpoint_test.go||nomad/variables_endpoint_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.28",
          "24:  github.com/aws/aws-sdk-go-v2/service/ecs v1.53.0",
          "25:  github.com/aws/smithy-go v1.22.2",
          "27:  github.com/container-storage-interface/spec v1.10.0",
          "28:  github.com/containerd/go-cni v1.1.12",
          "29:  github.com/containernetworking/cni v1.2.3",
          "",
          "[Removed Lines]",
          "26:  github.com/brianvoe/gofakeit/v6 v6.20.1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "789: github.com/boltdb/bolt v1.3.1/go.mod h1:clJnj/oiGkjum5o1McbSZDSLxVThjynRyGBgiAx27Ps=",
          "790: github.com/boombuler/barcode v1.0.0/go.mod h1:paBWMcWSl3LHKBqUq+rly7CNSldXjb2rDl3JlRe0mD8=",
          "791: github.com/boombuler/barcode v1.0.1/go.mod h1:paBWMcWSl3LHKBqUq+rly7CNSldXjb2rDl3JlRe0mD8=",
          "794: github.com/bufbuild/protocompile v0.4.0 h1:LbFKd2XowZvQ/kajzguUp2DC9UEIQhIq77fZZlaQsNA=",
          "795: github.com/bufbuild/protocompile v0.4.0/go.mod h1:3v93+mbWn/v3xzN+31nwkJfrEpAUwp+BagBSZWx+TP8=",
          "796: github.com/cenkalti/backoff/v3 v3.0.0/go.mod h1:cIeZDE3IrqwwJl6VUwCN6trj1oXrTS4rc0ij+ULvLYs=",
          "",
          "[Removed Lines]",
          "792: github.com/brianvoe/gofakeit/v6 v6.20.1 h1:8ihJ60OvPnPJ2W6wZR7M+TTeaZ9bml0z6oy4gvyJ/ek=",
          "793: github.com/brianvoe/gofakeit/v6 v6.20.1/go.mod h1:Ow6qC71xtwm79anlwKRlWZW6zVq9D2XHE4QSSMP/rU8=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "nomad/mock/variables.go||nomad/mock/variables.go": [
          "File: nomad/mock/variables.go -> nomad/mock/variables.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  \"fmt\"",
          "8:  \"math/rand\"",
          "9:  \"sort\"",
          "11:  \"time\"",
          "14:  \"github.com/hashicorp/nomad/nomad/structs\"",
          "15: )",
          "",
          "[Removed Lines]",
          "10:  \"strings\"",
          "13:  \"github.com/brianvoe/gofakeit/v6\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "19: func Variable() *structs.VariableDecrypted {",
          "20:  return &structs.VariableDecrypted{",
          "22:   Items: structs.VariableItems{",
          "23:    \"key1\": \"value1\",",
          "24:    \"key2\": \"value2\",",
          "",
          "[Removed Lines]",
          "21:   VariableMetadata: mockVariableMetadata(),",
          "",
          "[Added Lines]",
          "19:   VariableMetadata: structs.VariableMetadata{",
          "20:    Namespace: \"default\",",
          "21:    Path:      \"/example/path\",",
          "22:   },",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "42:  paths := make(map[string]*structs.VariableDecrypted, vc)",
          "43:  for i := 0; i < vc; i++ {",
          "44:   nv := Variable()",
          "51:   paths[nv.Path] = nv",
          "52:   svs[i] = nv",
          "53:  }",
          "",
          "[Removed Lines]",
          "48:   if _, found := paths[nv.Path]; found {",
          "49:    nv.Path = nv.Path + \"/\" + fmt.Sprint(time.Now().UnixNano())",
          "50:   }",
          "",
          "[Added Lines]",
          "46:   nv.Path = fmt.Sprintf(\"%s/%d\", nv.Path, i)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "77: func VariableEncrypted() *structs.VariableEncrypted {",
          "78:  return &structs.VariableEncrypted{",
          "80:   VariableData: structs.VariableData{",
          "81:    KeyID: \"foo\",",
          "82:    Data:  []byte(\"foo\"),",
          "",
          "[Removed Lines]",
          "79:   VariableMetadata: mockVariableMetadata(),",
          "",
          "[Added Lines]",
          "75:   VariableMetadata: structs.VariableMetadata{",
          "76:    Namespace: \"default\",",
          "77:    Path:      \"/example/path\",",
          "78:   },",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "129:  }",
          "130:  return out",
          "131: }",
          "",
          "[Removed Lines]",
          "133: func mockVariableMetadata() structs.VariableMetadata {",
          "134:  envs := []string{\"dev\", \"test\", \"prod\"}",
          "135:  envIdx := rand.Intn(3)",
          "136:  env := envs[envIdx]",
          "137:  domain := gofakeit.DomainName()",
          "139:  out := structs.VariableMetadata{",
          "140:   Namespace:   \"default\",",
          "141:   Path:        strings.ReplaceAll(env+\".\"+domain, \".\", \"/\"),",
          "142:   CreateIndex: uint64(rand.Intn(100) + 100),",
          "143:   CreateTime:  gofakeit.DateRange(time.Now().AddDate(0, -1, 0), time.Now()).UnixNano(),",
          "144:  }",
          "145:  out.ModifyIndex = out.CreateIndex",
          "146:  out.ModifyTime = out.CreateTime",
          "149:  if gofakeit.Bool() {",
          "150:   out.ModifyTime = gofakeit.DateRange(time.Unix(0, out.CreateTime), time.Now()).UnixNano()",
          "151:   out.ModifyIndex = out.CreateIndex + uint64(rand.Intn(100))",
          "152:  }",
          "153:  return out",
          "154: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "nomad/variables_endpoint_test.go||nomad/variables_endpoint_test.go": [
          "File: nomad/variables_endpoint_test.go -> nomad/variables_endpoint_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1589:  state := srv.fsm.State()",
          "1591:  unlockedVar := mock.VariableEncrypted()",
          "1593:  vsResp := state.VarSet(102, &structs.VarApplyStateRequest{",
          "1594:   Op:  structs.VarOpSet,",
          "1595:   Var: unlockedVar,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1592:  unlockedVar.Path = \"/unlocked/var\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1597:  must.NoError(t, vsResp.Error)",
          "1599:  lockedVar := mock.VariableEncrypted()",
          "1600:  lockedVar.VariableMetadata.Lock = &structs.VariableLock{",
          "1601:   ID:        \"theLockID\",",
          "1602:   TTL:       24 * time.Hour,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1600:  lockedVar.Path = \"/locked/var\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "746d82cfcd5e6f948fa3e0b6b405a1cdf10f0f2b",
      "candidate_info": {
        "commit_hash": "746d82cfcd5e6f948fa3e0b6b405a1cdf10f0f2b",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/746d82cfcd5e6f948fa3e0b6b405a1cdf10f0f2b",
        "files": [
          "website/content/plugins/drivers/virt/task-config.mdx"
        ],
        "message": "backport of commit 0739095d2b750c42bcfbc6e8adf7ddba0a899501 (#25148)\n\nCo-authored-by: Etienne Bruines <e.bruines@q-mex.net>",
        "before_after_code_files": [
          "website/content/plugins/drivers/virt/task-config.mdx||website/content/plugins/drivers/virt/task-config.mdx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "website/content/plugins/drivers/virt/task-config.mdx||website/content/plugins/drivers/virt/task-config.mdx": [
          "File: website/content/plugins/drivers/virt/task-config.mdx -> website/content/plugins/drivers/virt/task-config.mdx",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:     network {",
          "115:       mode     = \"host\"",
          "117:       port \"ssh\" {",
          "118:         to = 22",
          "119:       }",
          "",
          "[Removed Lines]",
          "116:       provider = \"nomad\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6acca06e49fe2e9535692e58ecba8717dba9c1a0",
      "candidate_info": {
        "commit_hash": "6acca06e49fe2e9535692e58ecba8717dba9c1a0",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/6acca06e49fe2e9535692e58ecba8717dba9c1a0",
        "files": [
          "go.mod",
          "go.sum"
        ],
        "message": "chore(deps): bump github.com/aws/aws-sdk-go-v2/config from 1.28.6 to 1.29.4 (#25028)\n\nCo-authored-by: James Rasell <jrasell@hashicorp.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:  github.com/Microsoft/go-winio v0.6.1",
          "19:  github.com/armon/circbuf v0.0.0-20150827004946-bbbad097214e",
          "20:  github.com/armon/go-metrics v0.5.3",
          "24:  github.com/aws/aws-sdk-go-v2/service/ecs v1.53.0",
          "26:  github.com/brianvoe/gofakeit/v6 v6.20.1",
          "27:  github.com/container-storage-interface/spec v1.10.0",
          "28:  github.com/containerd/go-cni v1.1.11",
          "",
          "[Removed Lines]",
          "21:  github.com/aws/aws-sdk-go-v2 v1.32.7",
          "22:  github.com/aws/aws-sdk-go-v2/config v1.28.6",
          "23:  github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.21",
          "25:  github.com/aws/smithy-go v1.22.1",
          "",
          "[Added Lines]",
          "21:  github.com/aws/aws-sdk-go-v2 v1.36.0",
          "22:  github.com/aws/aws-sdk-go-v2/config v1.29.4",
          "23:  github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.27",
          "25:  github.com/aws/smithy-go v1.22.2",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "186:  github.com/apparentlymart/go-textseg/v15 v15.0.0 // indirect",
          "187:  github.com/armon/go-radix v1.0.0 // indirect",
          "188:  github.com/aws/aws-sdk-go v1.55.6 // indirect",
          "198:  github.com/beorn7/perks v1.0.1 // indirect",
          "199:  github.com/bgentry/go-netrc v0.0.0-20140422174119-9fd32a8b3d3d // indirect",
          "200:  github.com/bgentry/speakeasy v0.1.0 // indirect",
          "",
          "[Removed Lines]",
          "189:  github.com/aws/aws-sdk-go-v2/credentials v1.17.47 // indirect",
          "190:  github.com/aws/aws-sdk-go-v2/internal/configsources v1.3.26 // indirect",
          "191:  github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.26 // indirect",
          "192:  github.com/aws/aws-sdk-go-v2/internal/ini v1.8.1 // indirect",
          "193:  github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.12.1 // indirect",
          "194:  github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.6 // indirect",
          "195:  github.com/aws/aws-sdk-go-v2/service/sso v1.24.7 // indirect",
          "196:  github.com/aws/aws-sdk-go-v2/service/ssooidc v1.28.6 // indirect",
          "197:  github.com/aws/aws-sdk-go-v2/service/sts v1.33.2 // indirect",
          "",
          "[Added Lines]",
          "189:  github.com/aws/aws-sdk-go-v2/credentials v1.17.57 // indirect",
          "190:  github.com/aws/aws-sdk-go-v2/internal/configsources v1.3.31 // indirect",
          "191:  github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.31 // indirect",
          "192:  github.com/aws/aws-sdk-go-v2/internal/ini v1.8.2 // indirect",
          "193:  github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.12.2 // indirect",
          "194:  github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.12 // indirect",
          "195:  github.com/aws/aws-sdk-go-v2/service/sso v1.24.14 // indirect",
          "196:  github.com/aws/aws-sdk-go-v2/service/ssooidc v1.28.13 // indirect",
          "197:  github.com/aws/aws-sdk-go-v2/service/sts v1.33.12 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "742: github.com/aws/aws-sdk-go v1.44.122/go.mod h1:y4AeaBuwd2Lk+GepC1E9v0qOiTws0MIWAX4oIKwKHZo=",
          "743: github.com/aws/aws-sdk-go v1.55.6 h1:cSg4pvZ3m8dgYcgqB97MrcdjUmZ1BeMYKUxMMB89IPk=",
          "744: github.com/aws/aws-sdk-go v1.55.6/go.mod h1:eRwEWoyTWFMVYVQzKMNHWP5/RV4xIUGMQfXQHfHkpNU=",
          "759: github.com/aws/aws-sdk-go-v2/service/ecs v1.53.0 h1:TCQZX4ztlcWXAcZouKh9qJMcVaH/qTidFTfsvJwUI30=",
          "760: github.com/aws/aws-sdk-go-v2/service/ecs v1.53.0/go.mod h1:Ghi1OWUv4+VMEULWiHsKH2gNA3KAcMoLWsvU0eRXvIA=",
          "773: github.com/benbjohnson/clock v1.1.0/go.mod h1:J11/hYXuz8f4ySSvYwY0FKfm+ezbsZBKZxNJlLklBHA=",
          "774: github.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=",
          "775: github.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=",
          "",
          "[Removed Lines]",
          "745: github.com/aws/aws-sdk-go-v2 v1.32.7 h1:ky5o35oENWi0JYWUZkB7WYvVPP+bcRF5/Iq7JWSb5Rw=",
          "746: github.com/aws/aws-sdk-go-v2 v1.32.7/go.mod h1:P5WJBrYqqbWVaOxgH0X/FYYD47/nooaPOZPlQdmiN2U=",
          "747: github.com/aws/aws-sdk-go-v2/config v1.28.6 h1:D89IKtGrs/I3QXOLNTH93NJYtDhm8SYa9Q5CsPShmyo=",
          "748: github.com/aws/aws-sdk-go-v2/config v1.28.6/go.mod h1:GDzxJ5wyyFSCoLkS+UhGB0dArhb9mI+Co4dHtoTxbko=",
          "749: github.com/aws/aws-sdk-go-v2/credentials v1.17.47 h1:48bA+3/fCdi2yAwVt+3COvmatZ6jUDNkDTIsqDiMUdw=",
          "750: github.com/aws/aws-sdk-go-v2/credentials v1.17.47/go.mod h1:+KdckOejLW3Ks3b0E3b5rHsr2f9yuORBum0WPnE5o5w=",
          "751: github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.21 h1:AmoU1pziydclFT/xRV+xXE/Vb8fttJCLRPv8oAkprc0=",
          "752: github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.21/go.mod h1:AjUdLYe4Tgs6kpH4Bv7uMZo7pottoyHMn4eTcIcneaY=",
          "753: github.com/aws/aws-sdk-go-v2/internal/configsources v1.3.26 h1:I/5wmGMffY4happ8NOCuIUEWGUvvFp5NSeQcXl9RHcI=",
          "754: github.com/aws/aws-sdk-go-v2/internal/configsources v1.3.26/go.mod h1:FR8f4turZtNy6baO0KJ5FJUmXH/cSkI9fOngs0yl6mA=",
          "755: github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.26 h1:zXFLuEuMMUOvEARXFUVJdfqZ4bvvSgdGRq/ATcrQxzM=",
          "756: github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.26/go.mod h1:3o2Wpy0bogG1kyOPrgkXA8pgIfEEv0+m19O9D5+W8y8=",
          "757: github.com/aws/aws-sdk-go-v2/internal/ini v1.8.1 h1:VaRN3TlFdd6KxX1x3ILT5ynH6HvKgqdiXoTxAF4HQcQ=",
          "758: github.com/aws/aws-sdk-go-v2/internal/ini v1.8.1/go.mod h1:FbtygfRFze9usAadmnGJNc8KsP346kEe+y2/oyhGAGc=",
          "761: github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.12.1 h1:iXtILhvDxB6kPvEXgsDhGaZCSC6LQET5ZHSdJozeI0Y=",
          "762: github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.12.1/go.mod h1:9nu0fVANtYiAePIBh2/pFUSwtJ402hLnp854CNoDOeE=",
          "763: github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.6 h1:50+XsN70RS7dwJ2CkVNXzj7U2L1HKP8nqTd3XWEXBN4=",
          "764: github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.6/go.mod h1:WqgLmwY7so32kG01zD8CPTJWVWM+TzJoOVHwTg4aPug=",
          "765: github.com/aws/aws-sdk-go-v2/service/sso v1.24.7 h1:rLnYAfXQ3YAccocshIH5mzNNwZBkBo+bP6EhIxak6Hw=",
          "766: github.com/aws/aws-sdk-go-v2/service/sso v1.24.7/go.mod h1:ZHtuQJ6t9A/+YDuxOLnbryAmITtr8UysSny3qcyvJTc=",
          "767: github.com/aws/aws-sdk-go-v2/service/ssooidc v1.28.6 h1:JnhTZR3PiYDNKlXy50/pNeix9aGMo6lLpXwJ1mw8MD4=",
          "768: github.com/aws/aws-sdk-go-v2/service/ssooidc v1.28.6/go.mod h1:URronUEGfXZN1VpdktPSD1EkAL9mfrV+2F4sjH38qOY=",
          "769: github.com/aws/aws-sdk-go-v2/service/sts v1.33.2 h1:s4074ZO1Hk8qv65GqNXqDjmkf4HSQqJukaLuuW0TpDA=",
          "770: github.com/aws/aws-sdk-go-v2/service/sts v1.33.2/go.mod h1:mVggCnIWoM09jP71Wh+ea7+5gAp53q+49wDFs1SW5z8=",
          "771: github.com/aws/smithy-go v1.22.1 h1:/HPHZQ0g7f4eUeK6HKglFz8uwVfZKgoI25rb/J+dnro=",
          "772: github.com/aws/smithy-go v1.22.1/go.mod h1:irrKGvNn1InZwb2d7fkIRNucdfwR8R+Ts3wxYa/cJHg=",
          "",
          "[Added Lines]",
          "745: github.com/aws/aws-sdk-go-v2 v1.36.0 h1:b1wM5CcE65Ujwn565qcwgtOTT1aT4ADOHHgglKjG7fk=",
          "746: github.com/aws/aws-sdk-go-v2 v1.36.0/go.mod h1:5PMILGVKiW32oDzjj6RU52yrNrDPUHcbZQYr1sM7qmM=",
          "747: github.com/aws/aws-sdk-go-v2/config v1.29.4 h1:ObNqKsDYFGr2WxnoXKOhCvTlf3HhwtoGgc+KmZ4H5yg=",
          "748: github.com/aws/aws-sdk-go-v2/config v1.29.4/go.mod h1:j2/AF7j/qxVmsNIChw1tWfsVKOayJoGRDjg1Tgq7NPk=",
          "749: github.com/aws/aws-sdk-go-v2/credentials v1.17.57 h1:kFQDsbdBAR3GZsB8xA+51ptEnq9TIj3tS4MuP5b+TcQ=",
          "750: github.com/aws/aws-sdk-go-v2/credentials v1.17.57/go.mod h1:2kerxPUUbTagAr/kkaHiqvj/bcYHzi2qiJS/ZinllU0=",
          "751: github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.27 h1:7lOW8NUwE9UZekS1DYoiPdVAqZ6A+LheHWb+mHbNOq8=",
          "752: github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.27/go.mod h1:w1BASFIPOPUae7AgaH4SbjNbfdkxuggLyGfNFTn8ITY=",
          "753: github.com/aws/aws-sdk-go-v2/internal/configsources v1.3.31 h1:lWm9ucLSRFiI4dQQafLrEOmEDGry3Swrz0BIRdiHJqQ=",
          "754: github.com/aws/aws-sdk-go-v2/internal/configsources v1.3.31/go.mod h1:Huu6GG0YTfbPphQkDSo4dEGmQRTKb9k9G7RdtyQWxuI=",
          "755: github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.31 h1:ACxDklUKKXb48+eg5ROZXi1vDgfMyfIA/WyvqHcHI0o=",
          "756: github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.31/go.mod h1:yadnfsDwqXeVaohbGc/RaD287PuyRw2wugkh5ZL2J6k=",
          "757: github.com/aws/aws-sdk-go-v2/internal/ini v1.8.2 h1:Pg9URiobXy85kgFev3og2CuOZ8JZUBENF+dcgWBaYNk=",
          "758: github.com/aws/aws-sdk-go-v2/internal/ini v1.8.2/go.mod h1:FbtygfRFze9usAadmnGJNc8KsP346kEe+y2/oyhGAGc=",
          "761: github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.12.2 h1:D4oz8/CzT9bAEYtVhSBmFj2dNOtaHOtMKc2vHBwYizA=",
          "762: github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.12.2/go.mod h1:Za3IHqTQ+yNcRHxu1OFucBh0ACZT4j4VQFF0BqpZcLY=",
          "763: github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.12 h1:O+8vD2rGjfihBewr5bT+QUfYUHIxCVgG61LHoT59shM=",
          "764: github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.12/go.mod h1:usVdWJaosa66NMvmCrr08NcWDBRv4E6+YFG2pUdw1Lk=",
          "765: github.com/aws/aws-sdk-go-v2/service/sso v1.24.14 h1:c5WJ3iHz7rLIgArznb3JCSQT3uUMiz9DLZhIX+1G8ok=",
          "766: github.com/aws/aws-sdk-go-v2/service/sso v1.24.14/go.mod h1:+JJQTxB6N4niArC14YNtxcQtwEqzS3o9Z32n7q33Rfs=",
          "767: github.com/aws/aws-sdk-go-v2/service/ssooidc v1.28.13 h1:f1L/JtUkVODD+k1+IiSJUUv8A++2qVr+Xvb3xWXETMU=",
          "768: github.com/aws/aws-sdk-go-v2/service/ssooidc v1.28.13/go.mod h1:tvqlFoja8/s0o+UruA1Nrezo/df0PzdunMDDurUfg6U=",
          "769: github.com/aws/aws-sdk-go-v2/service/sts v1.33.12 h1:fqg6c1KVrc3SYWma/egWue5rKI4G2+M4wMQN2JosNAA=",
          "770: github.com/aws/aws-sdk-go-v2/service/sts v1.33.12/go.mod h1:7Yn+p66q/jt38qMoVfNvjbm3D89mGBnkwDcijgtih8w=",
          "771: github.com/aws/smithy-go v1.22.2 h1:6D9hW43xKFrRx/tXXfAlIZc4JI+yQe6snnWcQyxSyLQ=",
          "772: github.com/aws/smithy-go v1.22.2/go.mod h1:irrKGvNn1InZwb2d7fkIRNucdfwR8R+Ts3wxYa/cJHg=",
          "",
          "---------------"
        ]
      }
    }
  ]
}