{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ac7ab931069408d03fb9c81e68ee330fcf810f81",
      "candidate_info": {
        "commit_hash": "ac7ab931069408d03fb9c81e68ee330fcf810f81",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/ac7ab931069408d03fb9c81e68ee330fcf810f81",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java"
        ],
        "message": "PDFBOX-4892: remove double code\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887954 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "349:     public List<Object> getDecodeParms() throws IOException",
          "350:     {",
          "353:         if (dp instanceof COSDictionary)",
          "354:         {",
          "355:             Map<?, ?> map = COSDictionaryMap.convertBasicTypesToMap((COSDictionary) dp);",
          "357:         }",
          "359:         if (dp instanceof COSArray)",
          "",
          "[Removed Lines]",
          "352:         COSBase dp = stream.getDictionaryObject(COSName.DECODE_PARMS, COSName.DP);",
          "356:             return new COSArrayList<Object>(map, dp, stream, COSName.DECODE_PARMS);",
          "",
          "[Added Lines]",
          "352:         return internalGetDecodeParams(COSName.DECODE_PARMS, COSName.DP);",
          "353:     }",
          "362:     public List<Object> getFileDecodeParams() throws IOException",
          "363:     {",
          "364:         return internalGetDecodeParams(COSName.F_DECODE_PARMS, null);",
          "365:     }",
          "367:     private List<Object> internalGetDecodeParams(COSName name1, COSName name2) throws IOException",
          "368:     {",
          "369:         COSBase dp = stream.getDictionaryObject(name1, name2);",
          "373:             return new COSArrayList<Object>(map, dp, stream, name1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "447:         stream.setItem(COSName.F_FILTER, obj);",
          "448:     }",
          "",
          "[Removed Lines]",
          "457:     public List<Object> getFileDecodeParams() throws IOException",
          "458:     {",
          "459:         COSBase dp = stream.getDictionaryObject(COSName.F_DECODE_PARMS);",
          "460:         if (dp instanceof COSDictionary)",
          "461:         {",
          "462:             Map<?, ?> map = COSDictionaryMap.convertBasicTypesToMap((COSDictionary) dp);",
          "463:             return new COSArrayList<Object>(map, dp, stream, COSName.F_DECODE_PARMS);",
          "464:         }",
          "466:         if (dp instanceof COSArray)",
          "467:         {",
          "468:             COSArray array = (COSArray) dp;",
          "469:             List<Object> actuals = new ArrayList<Object>(array.size());",
          "470:             for (int i = 0; i < array.size(); i++)",
          "471:             {",
          "472:                 COSBase base = array.getObject(i);",
          "473:                 if (base instanceof COSDictionary)",
          "474:                 {",
          "475:                     actuals.add(COSDictionaryMap.convertBasicTypesToMap((COSDictionary) base));",
          "476:                 }",
          "477:                 else",
          "478:                 {",
          "479:                     LOG.warn(\"Expected COSDictionary, got \" + base + \", ignored\");",
          "480:                 }",
          "481:             }",
          "482:             return new COSArrayList<Object>(actuals, array);",
          "483:         }",
          "485:         return null;",
          "486:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c693e84376175a04c3bd48fa9300a563f476942a",
      "candidate_info": {
        "commit_hash": "c693e84376175a04c3bd48fa9300a563f476942a",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/c693e84376175a04c3bd48fa9300a563f476942a",
        "files": [
          "debugger/src/main/java/org/apache/pdfbox/debugger/streampane/StreamPane.java"
        ],
        "message": "PDFBOX-4971: show nice view only when decoded; fix view mixup after toggling\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1882091 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "debugger/src/main/java/org/apache/pdfbox/debugger/streampane/StreamPane.java||debugger/src/main/java/org/apache/pdfbox/debugger/streampane/StreamPane.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "debugger/src/main/java/org/apache/pdfbox/debugger/streampane/StreamPane.java||debugger/src/main/java/org/apache/pdfbox/debugger/streampane/StreamPane.java": [
          "File: debugger/src/main/java/org/apache/pdfbox/debugger/streampane/StreamPane.java -> debugger/src/main/java/org/apache/pdfbox/debugger/streampane/StreamPane.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "224:                     return;",
          "225:                 }",
          "226:                 tabbedPane.removeAll();",
          "228:                 {",
          "231:                     tabbedPane.add(\"Hex view\", hexView.getPane());",
          "232:                 }",
          "233:                 else",
          "",
          "[Removed Lines]",
          "227:                 if (isContentStream)",
          "229:                     tabbedPane.add(\"Nice view\", rawView.getStreamPanel());",
          "230:                     tabbedPane.add(\"Raw view\", niceView.getStreamPanel());",
          "",
          "[Added Lines]",
          "227:                 if (Stream.UNFILTERED.equals(currentFilter) && isContentStream)",
          "229:                     tabbedPane.add(\"Nice view\", niceView.getStreamPanel());",
          "230:                     tabbedPane.add(\"Raw view\", rawView.getStreamPanel());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8e102340173bdad3b2b574611a9b02daa15042d5",
      "candidate_info": {
        "commit_hash": "8e102340173bdad3b2b574611a9b02daa15042d5",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/8e102340173bdad3b2b574611a9b02daa15042d5",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java"
        ],
        "message": "PDFBOX-4892: fix typo, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887712 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java"
        ]
      }
    },
    {
      "candidate_hash": "819f5fd828f7d0724bf4e3ddce7de41ef62f96d4",
      "candidate_info": {
        "commit_hash": "819f5fd828f7d0724bf4e3ddce7de41ef62f96d4",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/819f5fd828f7d0724bf4e3ddce7de41ef62f96d4",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java"
        ],
        "message": "PDFBOX-4892: remove unneed code (keys are unique), as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890147 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/COSParser.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1782:             source.read();",
          "1783:         }",
          "1784:         source.seek(originOffset);",
          "1802:         if (trailerDicts.size() == 1)",
          "1803:         {",
          "1804:             boolean rootFound = false;",
          "1805:             boolean infoFound = false;",
          "1807:             COSBase rootObj = trailerDict.getItem(COSName.ROOT);",
          "1808:             if (rootObj instanceof COSObject)",
          "1809:             {",
          "",
          "[Removed Lines]",
          "1786:         int trailerdictsSize = trailerDicts.size();",
          "1787:         String firstEntry = null;",
          "1788:         if (trailerdictsSize > 0)",
          "1789:         {",
          "1790:             String[] keys = new String[trailerdictsSize];",
          "1791:             trailerDicts.keySet().toArray(keys);",
          "1792:             firstEntry = keys[0];",
          "1793:             for (int i = 1; i < trailerdictsSize; i++)",
          "1794:             {",
          "1795:                 if (firstEntry.equals(keys[i]))",
          "1796:                 {",
          "1797:                     trailerDicts.remove(keys[i]);",
          "1798:                 }",
          "1799:             }",
          "1800:         }",
          "1806:             COSDictionary trailerDict = trailerDicts.get(firstEntry);",
          "",
          "[Added Lines]",
          "1790:             COSDictionary trailerDict = trailerDicts.values().iterator().next();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a0dee41d2774b5e5e43f485897a40b95eca6fff9",
      "candidate_info": {
        "commit_hash": "a0dee41d2774b5e5e43f485897a40b95eca6fff9",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/a0dee41d2774b5e5e43f485897a40b95eca6fff9",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java"
        ],
        "message": "PDFBOX-4892: improve exception message\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890495 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java -> pdfbox/src/main/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "653:             }",
          "654:             else",
          "655:             {",
          "657:             }",
          "658:         }",
          "659:     }",
          "",
          "[Removed Lines]",
          "656:                 throw new IOException(\"Unknown type in array for TJ operation:\" + obj);",
          "",
          "[Added Lines]",
          "656:                 throw new IOException(\"Unknown type \" + obj.getClass().getSimpleName() +",
          "657:                         \" in array for TJ operation:\" + obj);",
          "",
          "---------------"
        ]
      }
    }
  ]
}