{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c26bd81eb516e6fecbfeddeea2899e18da0dae98",
      "candidate_info": {
        "commit_hash": "c26bd81eb516e6fecbfeddeea2899e18da0dae98",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/c26bd81eb516e6fecbfeddeea2899e18da0dae98",
        "files": [
          "ambari-server/src/main/resources/stacks/PERF/1.0/hooks/before-INSTALL/scripts/distro-select.py",
          "ambari-server/src/main/resources/stacks/PERF/1.0/hooks/before-INSTALL/scripts/hook.py"
        ],
        "message": "AMBARI-24332 - PERF 1.0 package not installed in the cluster at deploy time (#1861)",
        "before_after_code_files": [
          "ambari-server/src/main/resources/stacks/PERF/1.0/hooks/before-INSTALL/scripts/distro-select.py||ambari-server/src/main/resources/stacks/PERF/1.0/hooks/before-INSTALL/scripts/distro-select.py",
          "ambari-server/src/main/resources/stacks/PERF/1.0/hooks/before-INSTALL/scripts/hook.py||ambari-server/src/main/resources/stacks/PERF/1.0/hooks/before-INSTALL/scripts/hook.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/resources/stacks/PERF/1.0/hooks/before-INSTALL/scripts/distro-select.py||ambari-server/src/main/resources/stacks/PERF/1.0/hooks/before-INSTALL/scripts/distro-select.py": [
          "File: ambari-server/src/main/resources/stacks/PERF/1.0/hooks/before-INSTALL/scripts/distro-select.py -> ambari-server/src/main/resources/stacks/PERF/1.0/hooks/before-INSTALL/scripts/distro-select.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: limitations under the License.",
          "18: \"\"\"",
          "21: import os",
          "23: AMBARI_AGENT_HOST_DIR = \"AMBARI_AGENT_HOST_DIR\"",
          "",
          "[Removed Lines]",
          "20: import sys",
          "",
          "[Added Lines]",
          "21: import sys",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "125:       if args[1]:",
          "126:         f.write(args[1] + \"\\n\")",
          "128: def do_work(args):",
          "129:   \"\"\"",
          "130:   Check that all required args are passed in. If so, perform required action.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "128: def deploy_cluster(args):",
          "129:   dest = versions_file_destination()",
          "130:   with open(dest, 'w') as f:",
          "131:     if args[1]:",
          "132:       f.write(args[1] + \"\\n\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "138:     set_version(args)",
          "139:   elif args[0] == \"install\":",
          "140:     install_version(args)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "147:   elif args[0] == \"deploy_cluster\":",
          "148:     deploy_cluster(args)",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/stacks/PERF/1.0/hooks/before-INSTALL/scripts/hook.py||ambari-server/src/main/resources/stacks/PERF/1.0/hooks/before-INSTALL/scripts/hook.py": [
          "File: ambari-server/src/main/resources/stacks/PERF/1.0/hooks/before-INSTALL/scripts/hook.py -> ambari-server/src/main/resources/stacks/PERF/1.0/hooks/before-INSTALL/scripts/hook.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: \"\"\"",
          "19: import os",
          "21: from resource_management import ExecutionFailed",
          "23: from resource_management.libraries.script import Hook",
          "25: AMBARI_AGENT_CACHE_DIR = 'AMBARI_AGENT_CACHE_DIR'",
          "",
          "[Removed Lines]",
          "22: from resource_management.core.resources.system import Directory, File, Execute",
          "",
          "[Added Lines]",
          "21: from resource_management.core.resources.system import Execute",
          "22: from resource_management.core.shell import call",
          "23: from resource_management.libraries.functions.default import default",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56:     try:",
          "57:       Execute(\"cp -n %s %s\" % (dist_select, DISTRO_SELECT_DEST), user=\"root\")",
          "58:       Execute(\"chmod a+x %s\" % (DISTRO_SELECT_DEST), user=\"root\")",
          "59:     except ExecutionFailed:",
          "60:       pass   # Due to concurrent execution, may produce error",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "60:       stack_version_unformatted = str(default(\"/clusterLevelParams/stack_version\", \"\"))",
          "61:       call((DISTRO_SELECT_DEST, 'deploy_cluster', stack_version_unformatted))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aba871ed111c1131bde75226470b21c16df99fd9",
      "candidate_info": {
        "commit_hash": "aba871ed111c1131bde75226470b21c16df99fd9",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/aba871ed111c1131bde75226470b21c16df99fd9",
        "files": [
          "ambari-metrics/ambari-metrics-timelineservice/conf/unix/metrics_whitelist",
          "ambari-metrics/ambari-metrics-timelineservice/conf/windows/metrics_whitelist",
          "ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/HIVEMETASTORE.dat",
          "ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/HIVESERVER2.dat",
          "ambari-metrics/ambari-metrics-timelineservice/src/test/resources/test_data/full_whitelist.dat",
          "ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/files/grafana-dashboards/HDP/grafana-hive-hivemetastore.json",
          "ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/files/grafana-dashboards/HDP/grafana-hive-hiverserver2.json",
          "ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/files/grafana-dashboards/HDP/grafana-hive-home.json",
          "ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/files/service-metrics/HIVE.txt"
        ],
        "message": "AMBARI-25457 Hive 3 Grafana dashboards showing outdated metrics (#3168)\n\nSome of the metrics' name has been changed in Hive 3.\nDue to this change many graphs shows no data on Hive Home, HiveServer2\nand HiveMetastore dashboards.",
        "before_after_code_files": [
          "ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/HIVEMETASTORE.dat||ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/HIVEMETASTORE.dat",
          "ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/HIVESERVER2.dat||ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/HIVESERVER2.dat",
          "ambari-metrics/ambari-metrics-timelineservice/src/test/resources/test_data/full_whitelist.dat||ambari-metrics/ambari-metrics-timelineservice/src/test/resources/test_data/full_whitelist.dat"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/HIVEMETASTORE.dat||ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/HIVEMETASTORE.dat": [
          "File: ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/HIVEMETASTORE.dat -> ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/HIVEMETASTORE.dat",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: default.General.api_create_table_98thpercentile",
          "14: default.General.api_create_table_999thpercentile",
          "15: default.General.api_create_table_99thpercentile",
          "17: default.General.api_create_table_max",
          "18: default.General.api_create_table_mean",
          "19: default.General.api_create_table_mean_rate",
          "",
          "[Removed Lines]",
          "16: default.General.api_create_table_count",
          "",
          "[Added Lines]",
          "16: default.General.api_create_table_req_count",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38: default.General.api_get_all_databases_15min_rate",
          "39: default.General.api_get_all_databases_1min_rate",
          "40: default.General.api_get_all_databases_5min_rate",
          "42: default.General.api_get_all_databases_95thpercentile",
          "43: default.General.api_get_all_databases_98thpercentile",
          "45: default.General.api_get_all_databases_99thpercentile",
          "46: default.General.api_get_all_databases_count",
          "47: default.General.api_get_all_databases_max",
          "",
          "[Removed Lines]",
          "41: default.General.api_get_all_databases_75thpercentile",
          "44: default.General.api_get_all_databases_999thpercentile",
          "",
          "[Added Lines]",
          "41: default.General.api_get_databases_75thpercentile",
          "44: default.General.api_get_databases_999thpercentile",
          "45: default.General.api_get_partitions_by_names_75thpercentile",
          "46: default.General.api_get_partitions_by_names_999thpercentile",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "118: default.General.buffers.mapped.used",
          "119: default.General.classLoading.loaded",
          "120: default.General.classLoading.unloaded",
          "121: default.General.create_total_count_tables",
          "122: default.General.delete_total_count_tables",
          "123: default.General.gc.PS-MarkSweep.count",
          "124: default.General.gc.PS-MarkSweep.time",
          "125: default.General.gc.PS-Scavenge.count",
          "126: default.General.gc.PS-Scavenge.time",
          "130: default.General.jvm.pause.extraSleepTime",
          "141: default.General.memory.pools.Code-Cache.usage",
          "142: default.General.memory.pools.Compressed-Class-Space.usage",
          "143: default.General.memory.pools.Metaspace.usage",
          "",
          "[Removed Lines]",
          "127: default.General.init_total_count_dbs",
          "128: default.General.init_total_count_partitions",
          "129: default.General.init_total_count_tables",
          "131: default.General.memory.heap.committed",
          "132: default.General.memory.heap.init",
          "133: default.General.memory.heap.max",
          "134: default.General.memory.heap.usage",
          "135: default.General.memory.heap.used",
          "136: default.General.memory.non-heap.committed",
          "137: default.General.memory.non-heap.init",
          "138: default.General.memory.non-heap.max",
          "139: default.General.memory.non-heap.usage",
          "140: default.General.memory.non-heap.used",
          "",
          "[Added Lines]",
          "123: default.General.create_total_count_partitions",
          "130: default.General.total_count_dbs",
          "131: default.General.total_count_partitions",
          "132: default.General.total_count_tables",
          "134: default.General.heap.committed",
          "135: default.General.heap.init",
          "136: default.General.heap.max",
          "137: default.General.heap.usage",
          "138: default.General.heap.used",
          "139: default.General.non-heap.committed",
          "140: default.General.non-heap.init",
          "141: default.General.non-heap.max",
          "142: default.General.non-heap.usage",
          "143: default.General.non-heap.used",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/HIVESERVER2.dat||ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/HIVESERVER2.dat": [
          "File: ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/HIVESERVER2.dat -> ambari-metrics/ambari-metrics-timelineservice/src/main/resources/metrics_def/HIVESERVER2.dat",
          "--- Hunk 1 ---",
          "[Context before]",
          "60: default.General.gc.PS-MarkSweep.time",
          "61: default.General.gc.PS-Scavenge.count",
          "62: default.General.gc.PS-Scavenge.time",
          "66: default.General.jvm.pause.extraSleepTime",
          "67: default.General.memory.heap.committed",
          "68: default.General.memory.heap.init",
          "",
          "[Removed Lines]",
          "63: default.General.init_total_count_dbs",
          "64: default.General.init_total_count_partitions",
          "65: default.General.init_total_count_tables",
          "",
          "[Added Lines]",
          "63: default.General.total_count_dbs",
          "64: default.General.total_count_partitions",
          "65: default.General.total_count_tables",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-timelineservice/src/test/resources/test_data/full_whitelist.dat||ambari-metrics/ambari-metrics-timelineservice/src/test/resources/test_data/full_whitelist.dat": [
          "File: ambari-metrics/ambari-metrics-timelineservice/src/test/resources/test_data/full_whitelist.dat -> ambari-metrics/ambari-metrics-timelineservice/src/test/resources/test_data/full_whitelist.dat",
          "--- Hunk 1 ---",
          "[Context before]",
          "1263: default.General.api_create_table_999thpercentile",
          "1264: default.General.api_create_table_99thpercentile",
          "1265: default.General.api_create_table_count",
          "1266: default.General.api_create_table_max",
          "1267: default.General.api_create_table_mean",
          "1268: default.General.api_create_table_mean_rate",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1266: default.General.api_create_table_req_count",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1287: default.General.api_get_all_databases_15min_rate",
          "1288: default.General.api_get_all_databases_1min_rate",
          "1289: default.General.api_get_all_databases_5min_rate",
          "1291: default.General.api_get_all_databases_95thpercentile",
          "1292: default.General.api_get_all_databases_98thpercentile",
          "1294: default.General.api_get_all_databases_99thpercentile",
          "1295: default.General.api_get_all_databases_count",
          "1296: default.General.api_get_all_databases_max",
          "",
          "[Removed Lines]",
          "1290: default.General.api_get_all_databases_75thpercentile",
          "1293: default.General.api_get_all_databases_999thpercentile",
          "",
          "[Added Lines]",
          "1291: default.General.api_get_databases_75thpercentile",
          "1294: default.General.api_get_databases_999thpercentile",
          "1295: default.General.api_get_partitions_by_names_75thpercentile",
          "1296: default.General.api_get_partitions_by_names_999thpercentile",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1367: default.General.buffers.mapped.used",
          "1368: default.General.classLoading.loaded",
          "1369: default.General.classLoading.unloaded",
          "1370: default.General.create_total_count_tables",
          "1371: default.General.delete_total_count_tables",
          "1372: default.General.gc.PS-MarkSweep.count",
          "1373: default.General.gc.PS-MarkSweep.time",
          "1374: default.General.gc.PS-Scavenge.count",
          "1375: default.General.gc.PS-Scavenge.time",
          "1379: default.General.jvm.pause.extraSleepTime",
          "1380: default.General.memory.heap.committed",
          "1381: default.General.memory.heap.init",
          "1382: default.General.memory.heap.max",
          "1383: default.General.memory.heap.usage",
          "1384: default.General.memory.heap.used",
          "1385: default.General.memory.non-heap.committed",
          "1386: default.General.memory.non-heap.init",
          "1387: default.General.memory.non-heap.max",
          "1388: default.General.memory.non-heap.usage",
          "1389: default.General.memory.non-heap.used",
          "1390: default.General.memory.pools.Code-Cache.usage",
          "1391: default.General.memory.pools.Compressed-Class-Space.usage",
          "1392: default.General.memory.pools.Metaspace.usage",
          "",
          "[Removed Lines]",
          "1376: default.General.init_total_count_dbs",
          "1377: default.General.init_total_count_partitions",
          "1378: default.General.init_total_count_tables",
          "",
          "[Added Lines]",
          "1373: default.General.create_total_count_partitions",
          "1376: default.General.active_calls_api_hs2_operation_INITIALIZED",
          "1377: default.General.active_calls_api_hs2_operation_PENDING",
          "1378: default.General.active_calls_api_hs2_operation_RUNNING",
          "1379: default.General.api_hs2_operation_INITIALIZED_count",
          "1380: default.General.hs2_completed_operation_CLOSED",
          "1381: default.General.hs2_completed_operation_ERROR",
          "1382: default.General.hs2_completed_operation_FINISHED",
          "1387: default.General.total_count_dbs",
          "1388: default.General.total_count_partitions",
          "1389: default.General.total_count_tables",
          "1392: default.General.heap.committed",
          "1395: default.General.heap.max",
          "1398: default.General.heap.used",
          "1400: default.General.non-heap.committed",
          "1403: default.General.non-heap.max",
          "1406: default.General.non-heap.used",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8440289188d25faa6fc1e4bdc7eb1e6e19ca53c9",
      "candidate_info": {
        "commit_hash": "8440289188d25faa6fc1e4bdc7eb1e6e19ca53c9",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/8440289188d25faa6fc1e4bdc7eb1e6e19ca53c9",
        "files": [
          "contrib/views/wfmanager/src/main/java/org/apache/oozie/ambari/view/Utils.java"
        ],
        "message": "AMBARI-25447. Multiple filter conditions not working in Ambari workflow manager view (sree) (#3160)",
        "before_after_code_files": [
          "contrib/views/wfmanager/src/main/java/org/apache/oozie/ambari/view/Utils.java||contrib/views/wfmanager/src/main/java/org/apache/oozie/ambari/view/Utils.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "contrib/views/wfmanager/src/main/java/org/apache/oozie/ambari/view/Utils.java||contrib/views/wfmanager/src/main/java/org/apache/oozie/ambari/view/Utils.java": [
          "File: contrib/views/wfmanager/src/main/java/org/apache/oozie/ambari/view/Utils.java -> contrib/views/wfmanager/src/main/java/org/apache/oozie/ambari/view/Utils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: import java.util.Map;",
          "30: import java.util.Set;",
          "31: import java.util.Map.Entry;",
          "33: import javax.ws.rs.WebApplicationException;",
          "34: import javax.ws.rs.core.HttpHeaders;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: import java.net.URLEncoder;",
          "33: import java.io.UnsupportedEncodingException;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "148:    }",
          "149:    boolean firstVal = true;",
          "150:    for (String val : entry.getValue()) {",
          "151:     urlBuilder.append(firstVal ? \"\" : \"&\").append(entry.getKey())",
          "152:       .append(\"=\").append(val);",
          "153:     firstVal = false;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "153:     try {",
          "154:      val = URLEncoder.encode(val, \"UTF-8\");",
          "155:     } catch(UnsupportedEncodingException e) {",
          "156:      LOGGER.error(e.getMessage(), e);",
          "157:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "22c18e59a5dd067075d1e407a533297cbd97aefe",
      "candidate_info": {
        "commit_hash": "22c18e59a5dd067075d1e407a533297cbd97aefe",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/22c18e59a5dd067075d1e407a533297cbd97aefe",
        "files": [
          "ambari-web/app/controllers/main/host/details.js",
          "ambari-web/app/controllers/main/service/item.js",
          "ambari-web/app/mixins/common/configs/config_recommendations.js",
          "ambari-web/app/styles/application.less",
          "ambari-web/app/styles/bootstrap_overrides.less",
          "ambari-web/app/styles/common.less",
          "ambari-web/app/styles/modal_popups.less",
          "ambari-web/app/styles/top-nav.less",
          "ambari-web/app/templates/common/configs/services_config.hbs",
          "ambari-web/app/templates/common/modal_popups/config_recommendation_popup.hbs",
          "ambari-web/app/templates/common/modal_popups/dependent_configs_list.hbs",
          "ambari-web/app/templates/common/modal_popups/dependent_configs_table.hbs",
          "ambari-web/app/views/common/modal_popup.js",
          "ambari-web/app/views/common/modal_popups/config_validation/config_validation_popup.js",
          "ambari-web/app/views/common/modal_popups/dependent_configs_list_popup.js",
          "ambari-web/app/views/common/modal_popups/log_file_search_popup.js",
          "ambari-web/test/mixins/common/configs/config_recommendations_test.js"
        ],
        "message": "AMBARI-24362 Fixes for modal with config validations and dependent properties. (ababiichuk)",
        "before_after_code_files": [
          "ambari-web/app/controllers/main/host/details.js||ambari-web/app/controllers/main/host/details.js",
          "ambari-web/app/controllers/main/service/item.js||ambari-web/app/controllers/main/service/item.js",
          "ambari-web/app/mixins/common/configs/config_recommendations.js||ambari-web/app/mixins/common/configs/config_recommendations.js",
          "ambari-web/app/styles/application.less||ambari-web/app/styles/application.less",
          "ambari-web/app/styles/bootstrap_overrides.less||ambari-web/app/styles/bootstrap_overrides.less",
          "ambari-web/app/styles/common.less||ambari-web/app/styles/common.less",
          "ambari-web/app/styles/modal_popups.less||ambari-web/app/styles/modal_popups.less",
          "ambari-web/app/styles/top-nav.less||ambari-web/app/styles/top-nav.less",
          "ambari-web/app/templates/common/configs/services_config.hbs||ambari-web/app/templates/common/configs/services_config.hbs",
          "ambari-web/app/templates/common/modal_popups/config_recommendation_popup.hbs||ambari-web/app/templates/common/modal_popups/config_recommendation_popup.hbs",
          "ambari-web/app/templates/common/modal_popups/dependent_configs_list.hbs||ambari-web/app/templates/common/modal_popups/dependent_configs_list.hbs",
          "ambari-web/app/templates/common/modal_popups/dependent_configs_table.hbs||ambari-web/app/templates/common/modal_popups/dependent_configs_table.hbs",
          "ambari-web/app/views/common/modal_popup.js||ambari-web/app/views/common/modal_popup.js",
          "ambari-web/app/views/common/modal_popups/config_validation/config_validation_popup.js||ambari-web/app/views/common/modal_popups/config_validation/config_validation_popup.js",
          "ambari-web/app/views/common/modal_popups/dependent_configs_list_popup.js||ambari-web/app/views/common/modal_popups/dependent_configs_list_popup.js",
          "ambari-web/app/views/common/modal_popups/log_file_search_popup.js||ambari-web/app/views/common/modal_popups/log_file_search_popup.js",
          "ambari-web/test/mixins/common/configs/config_recommendations_test.js||ambari-web/test/mixins/common/configs/config_recommendations_test.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/controllers/main/host/details.js||ambari-web/app/controllers/main/host/details.js": [
          "File: ambari-web/app/controllers/main/host/details.js -> ambari-web/app/controllers/main/host/details.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "540:       header: Em.I18n.t('popup.confirmation.commonHeader'),",
          "541:       controller: this,",
          "542:       hasPropertiesToChange: false,",
          "544:       modalDialogClasses: function () {",
          "546:       }.property('controller.hasPropertiesToChange'),",
          "547:       primary: Em.I18n.t('hosts.host.deleteComponent.popup.confirm'),",
          "548:       bodyClass: this.get('addDeleteComponentPopupBody').extend({",
          "",
          "[Removed Lines]",
          "543:       classNameBindings: ['controller.hasPropertiesToChange:common-modal-wrapper', 'controller.hasPropertiesToChange:modal-full-width'],",
          "545:         return this.get('controller.hasPropertiesToChange') ? ['modal-lg'] : [];",
          "",
          "[Added Lines]",
          "543:       classNameBindings: ['controller.hasPropertiesToChange:common-modal-wrapper'],",
          "545:         return this.get('controller.hasPropertiesToChange') ? ['modal-xlg'] : [];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "808:       header: Em.I18n.t('popup.confirmation.commonHeader'),",
          "809:       controller: self,",
          "810:       hasPropertiesToChange: false,",
          "812:       modalDialogClasses: function () {",
          "814:       }.property('controller.hasPropertiesToChange'),",
          "815:       primary: Em.I18n.t('hosts.host.addComponent.popup.confirm'),",
          "816:       bodyClass: self.get('addDeleteComponentPopupBody').extend({",
          "",
          "[Removed Lines]",
          "811:       classNameBindings: ['hasPropertiesToChange:common-modal-wrapper', 'hasPropertiesToChange:modal-full-width'],",
          "813:         return this.get('controller.hasPropertiesToChange') ? ['modal-lg'] : [];",
          "",
          "[Added Lines]",
          "811:       classNameBindings: ['hasPropertiesToChange:common-modal-wrapper'],",
          "813:         return this.get('controller.hasPropertiesToChange') ? ['modal-xlg'] : [];",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "992:   updateZkConfigs: function (configs) {",
          "1002:     if (this.get('fromDeleteHost') || this.get('fromDeleteZkServer')) {",
          "1003:       this.set('fromDeleteHost', false);",
          "1004:       this.set('fromDeleteZkServer', false);",
          "1006:       if (!Em.isNone(removedHost)) {",
          "1007:         Em.set(removedHost, 'isInstalled', false);",
          "1008:       }",
          "",
          "[Removed Lines]",
          "993:     var portValue = configs['zoo.cfg'] && Em.get(configs['zoo.cfg'], 'clientPort');",
          "994:     var zkPort = typeof portValue === 'undefined' ? '2181' : portValue;",
          "995:     var infraSolrZnode = configs['infra-solr-env'] ? Em.get(configs['infra-solr-env'], 'infra_solr_znode') : '/ambari-solr';",
          "996:     var initializer = App.AddZooKeeperComponentsInitializer;",
          "997:     var hostComponentsTopology = {",
          "998:       masterComponentHosts: []",
          "999:     };",
          "1000:     var propertiesToChange = this.get('allPropertiesToChange');",
          "1001:     var masterComponents = this.bootstrapHostsMapping('ZOOKEEPER_SERVER');",
          "1005:       var removedHost = masterComponents.findProperty('hostName', this.get('content.hostName'));",
          "",
          "[Added Lines]",
          "993:     const portValue = configs['zoo.cfg'] && Em.get(configs['zoo.cfg'], 'clientPort'),",
          "994:       zkPort = typeof portValue === 'undefined' ? '2181' : portValue,",
          "995:       infraSolrZnode = configs['infra-solr-env'] ? Em.get(configs['infra-solr-env'], 'infra_solr_znode') : '/ambari-solr',",
          "996:       initializer = App.AddZooKeeperComponentsInitializer,",
          "997:       hostComponentsTopology = {",
          "998:         masterComponentHosts: []",
          "999:       },",
          "1000:       propertiesToChange = this.get('allPropertiesToChange'),",
          "1001:       masterComponents = this.bootstrapHostsMapping('ZOOKEEPER_SERVER');",
          "1005:       let removedHost = masterComponents.findProperty('hostName', this.get('content.hostName'));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1014:         isInstalled: true",
          "1015:       });",
          "1016:     }",
          "1018:       zkClientPort: zkPort,",
          "1020:     };",
          "1021:     hostComponentsTopology.masterComponentHosts = masterComponents;",
          "1026:           propertyDef = {",
          "1028:             name: propertyName,",
          "1029:             value: currentValue",
          "1030:           },",
          "1031:           configProperty = initializer.initialValue(propertyDef, hostComponentsTopology, dependencies);",
          "1032:         initializer.updateSiteObj(configs[fileName], configProperty);",
          "1033:         if (currentValue !== configs[fileName][propertyName]) {",
          "1035:           propertiesToChange.pushObject({",
          "1036:             propertyFileName: fileName,",
          "1038:             serviceDisplayName: service && service.get('displayName'),",
          "1039:             initialValue: currentValue,",
          "1040:             recommendedValue: propertyDef.value",
          "1041:           });",
          "1042:         }",
          "1045:   },",
          "",
          "[Removed Lines]",
          "1017:     var dependencies = {",
          "1019:       infraSolrZnode: infraSolrZnode",
          "1022:     Em.keys(configs).forEach(function(fileName) {",
          "1023:       var properties = configs[fileName];",
          "1024:       Em.keys(properties).forEach(function(propertyName) {",
          "1025:         var currentValue = properties[propertyName],",
          "1027:             fileName: fileName,",
          "1034:           var service = App.config.get('serviceByConfigTypeMap')[fileName];",
          "1037:             propertyName: propertyName,",
          "1043:       }, this);",
          "1044:     }, this);",
          "",
          "[Added Lines]",
          "1017:     const dependencies = {",
          "1019:       infraSolrZnode",
          "1022:     Em.keys(configs).forEach(fileName => {",
          "1023:       const properties = configs[fileName];",
          "1024:       Em.keys(properties).forEach(propertyName => {",
          "1025:         const currentValue = properties[propertyName],",
          "1027:             fileName,",
          "1034:           const service = App.config.get('serviceByConfigTypeMap')[fileName],",
          "1035:             configObject = App.configsCollection.getConfigByName(propertyName, fileName),",
          "1036:             displayName = configObject && configObject.displayName;",
          "1039:             propertyName,",
          "1040:             propertyTitle: configObject && Em.I18n.t('installer.controls.serviceConfigPopover.title').format(displayName, displayName === propertyName ? '' : propertyName),",
          "1041:             propertyDescription: configObject && configObject.description,",
          "1047:       });",
          "1048:     });",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1071:   onLoadStormConfigs: function (data) {",
          "1073:       stormNimbusHosts = this.getStormNimbusHosts(),",
          "1074:       configs = {},",
          "1075:       attributes = {},",
          "1076:       propertiesToChange = this.get('allPropertiesToChange');",
          "1078:     this.saveLoadedConfigs(data);",
          "1080:       configs[item.type] = item.properties;",
          "1081:       attributes[item.type] = item.properties_attributes || {};",
          "1084:     this.updateZkConfigs(configs);",
          "1087:       nimbusSeedsRecommended = JSON.stringify(stormNimbusHosts).replace(/\"/g, \"'\");",
          "1089:     if (this.get('isReconfigureRequired') && nimbusSeedsInit !== nimbusSeedsRecommended) {",
          "1091:       propertiesToChange.pushObject({",
          "1094:         serviceDisplayName: service && service.get('displayName'),",
          "1095:         initialValue: nimbusSeedsInit,",
          "1096:         recommendedValue: nimbusSeedsRecommended",
          "1097:       });",
          "1098:     }",
          "1100:       {",
          "1101:         properties: {",
          "1103:         },",
          "1104:         properties_attributes: {",
          "1106:         }",
          "1107:       }",
          "1108:     ];",
          "",
          "[Removed Lines]",
          "1072:     var nimbusHost = this.get('nimbusHost'),",
          "1079:     data.items.forEach(function (item) {",
          "1082:     }, this);",
          "1086:     var nimbusSeedsInit = configs['storm-site']['nimbus.seeds'],",
          "1088:     configs['storm-site']['nimbus.seeds'] = nimbusSeedsRecommended;",
          "1090:       var service = App.config.get('serviceByConfigTypeMap')['storm-site'];",
          "1092:         propertyFileName: 'storm-site',",
          "1093:         propertyName: 'nimbus.seeds',",
          "1099:     var groups = [",
          "1102:           'storm-site': configs['storm-site']",
          "1105:           'storm-site': attributes['storm-site']",
          "",
          "[Added Lines]",
          "1076:     const nimbusHost = this.get('nimbusHost'),",
          "1083:     data.items.forEach(item => {",
          "1086:     });",
          "1090:     const propertyName = 'nimbus.seeds',",
          "1091:       propertyFileName = 'storm-site',",
          "1092:       nimbusSeedsInit = configs[propertyFileName][propertyName],",
          "1094:     configs[propertyFileName][propertyName] = nimbusSeedsRecommended;",
          "1096:       const service = App.config.get('serviceByConfigTypeMap')[propertyFileName],",
          "1097:         configObject = App.configsCollection.getConfigByName(propertyName, propertyFileName),",
          "1098:         displayName = configObject && configObject.displayName;",
          "1100:         propertyFileName,",
          "1101:         propertyName,",
          "1102:         propertyTitle: configObject && Em.I18n.t('installer.controls.serviceConfigPopover.title').format(displayName, displayName === propertyName ? '' : propertyName),",
          "1103:         propertyDescription: configObject && configObject.description,",
          "1109:     const groups = [",
          "1112:           [propertyFileName]: configs[propertyFileName]",
          "1115:           [propertyFileName]: attributes[propertyFileName]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1110:   },",
          "1112:   onLoadAtlasConfigs: function(data) {",
          "1114:       atlasServerHosts = this.getAtlasServerHosts(),",
          "1115:       configs = {},",
          "1116:       attributes = {},",
          "1117:       propertiesToChange = this.get('allPropertiesToChange');",
          "1119:     this.saveLoadedConfigs(data);",
          "1121:       configs[item.type] = item.properties;",
          "1122:       attributes[item.type] = item.properties_attributes || {};",
          "1131:     if (this.get('isReconfigureRequired') && atlasAddresses !== atlasAddressesRecommended) {",
          "1133:       propertiesToChange.pushObject({",
          "1136:         serviceDisplayName: service && service.get('displayName'),",
          "1137:         initialValue: atlasAddresses,",
          "1138:         recommendedValue: atlasAddressesRecommended",
          "1139:       });",
          "1140:     }",
          "1142:       {",
          "1143:         properties: {",
          "1145:         },",
          "1146:         properties_attributes: {",
          "1148:         }",
          "1149:       }",
          "1150:     ];",
          "",
          "[Removed Lines]",
          "1113:     var atlasServer = this.get('atlasServer'),",
          "1120:     data.items.forEach(function (item) {",
          "1123:     }, this);",
          "1125:     var atlasAddresses = configs['application-properties']['atlas.rest.address'];",
          "1126:     var hostMask = atlasAddresses.split(',')[0].replace(/([https|http]*\\:\\/\\/)(.*?)(:[0-9]+)/, '$1{hostname}$3');",
          "1127:     var atlasAddressesRecommended = atlasServerHosts.map(function(hostName) {",
          "1128:       return hostMask.replace('{hostname}', hostName);",
          "1129:     }).join(',');",
          "1130:     configs['application-properties']['atlas.rest.address'] = atlasAddressesRecommended;",
          "1132:       var service = App.config.get('serviceByConfigTypeMap')['application-properties'];",
          "1134:         propertyFileName: 'application-properties',",
          "1135:         propertyName: 'atlas.rest.address',",
          "1141:     var groups = [",
          "1144:           'application-properties': configs['application-properties']",
          "1147:           'application-properties': attributes['application-properties']",
          "",
          "[Added Lines]",
          "1123:     const atlasServer = this.get('atlasServer'),",
          "1130:     data.items.forEach(item => {",
          "1133:     });",
          "1135:     const propertyFileName = 'application-properties',",
          "1136:       propertyName = 'atlas.rest.address',",
          "1137:       atlasAddresses = configs[propertyFileName][propertyName],",
          "1138:       hostMask = atlasAddresses.split(',')[0].replace(/([https|http]*\\:\\/\\/)(.*?)(:[0-9]+)/, '$1{hostname}$3'),",
          "1139:       atlasAddressesRecommended = atlasServerHosts.map(hostName => hostMask.replace('{hostname}', hostName)).join(',');",
          "1140:     configs[propertyFileName][propertyName] = atlasAddressesRecommended;",
          "1142:       var service = App.config.get('serviceByConfigTypeMap')[propertyFileName],",
          "1143:         configObject = App.configsCollection.getConfigByName(propertyName, propertyFileName),",
          "1144:         displayName = configObject && configObject.displayName;",
          "1146:         propertyFileName,",
          "1147:         propertyName,",
          "1148:         propertyTitle: configObject && Em.I18n.t('installer.controls.serviceConfigPopover.title').format(displayName, displayName === propertyName ? '' : propertyName),",
          "1149:         propertyDescription: configObject && configObject.description,",
          "1155:     const groups = [",
          "1158:           [propertyFileName]: configs[propertyFileName]",
          "1161:           [propertyFileName]: attributes[propertyFileName]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1204:   onLoadHiveConfigs: function (data, opt, params) {",
          "1216:     this.saveLoadedConfigs(data);",
          "1217:     this.set('configs.params', {",
          "1218:       webHCat: params.webHCat",
          "1219:     });",
          "1221:       configs[item.type] = item.properties;",
          "1222:       attributes[item.type] = item.properties_attributes || {};",
          "1226:     port = configs['hive-site']['hive.metastore.uris'].match(/:[0-9]{2,4}/);",
          "1227:     port = port ? port[0].slice(1) : \"9083\";",
          "",
          "[Removed Lines]",
          "1205:     var port = \"\";",
          "1206:     var configs = {};",
          "1207:     var attributes = {};",
          "1208:     var userSetup = {};",
          "1209:     var localDB = {",
          "1210:       masterComponentHosts: this.getHiveHosts()",
          "1211:     };",
          "1212:     var dependencies = {",
          "1213:       hiveMetastorePort: \"\"",
          "1214:     };",
          "1215:     var initializer = params.webHCat ? App.AddWebHCatComponentsInitializer : App.AddHiveComponentsInitializer;",
          "1220:     data.items.forEach(function (item) {",
          "1223:     }, this);",
          "1224:     var propertiesToChange = this.get('allPropertiesToChange');",
          "",
          "[Added Lines]",
          "1219:     let port = \"\";",
          "1220:     const configs = {},",
          "1221:       attributes = {},",
          "1222:       userSetup = {},",
          "1223:       localDB = {",
          "1224:         masterComponentHosts: this.getHiveHosts()",
          "1225:       },",
          "1226:       dependencies = {",
          "1227:         hiveMetastorePort: \"\"",
          "1228:       },",
          "1229:       initializer = params.webHCat ? App.AddWebHCatComponentsInitializer : App.AddHiveComponentsInitializer;",
          "1234:     data.items.forEach(item => {",
          "1237:     });",
          "1238:     const propertiesToChange = this.get('allPropertiesToChange');",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1237:     initializer.setup(userSetup);",
          "1240:       if (configs[fileName]) {",
          "1243:             propertyDef = {",
          "1245:               name: propertyName,",
          "1246:               value: currentValue",
          "1247:             },",
          "1248:             configProperty = initializer.initialValue(propertyDef, localDB, dependencies);",
          "1249:           initializer.updateSiteObj(configs[fileName], configProperty);",
          "1250:           if (this.get('isReconfigureRequired') && currentValue !== configs[fileName][propertyName]) {",
          "1252:             propertiesToChange.pushObject({",
          "1253:               propertyFileName: fileName,",
          "1255:               serviceDisplayName: service && service.get('displayName'),",
          "1256:               initialValue: currentValue,",
          "1257:               recommendedValue: propertyDef.value",
          "1258:             });",
          "1259:           }",
          "1261:       }",
          "1264:     initializer.cleanup();",
          "",
          "[Removed Lines]",
          "1239:     ['hive-site', 'webhcat-site', 'hive-env', 'core-site'].forEach(function(fileName) {",
          "1241:         Em.keys(configs[fileName]).forEach(function(propertyName) {",
          "1242:           var currentValue = configs[fileName][propertyName],",
          "1244:               fileName: fileName,",
          "1251:             var service = App.config.get('serviceByConfigTypeMap')[fileName];",
          "1254:               propertyName: propertyName,",
          "1260:         }, this);",
          "1262:     }, this);",
          "",
          "[Added Lines]",
          "1253:     ['hive-site', 'webhcat-site', 'hive-env', 'core-site'].forEach(fileName => {",
          "1255:         Em.keys(configs[fileName]).forEach(propertyName => {",
          "1256:           const currentValue = configs[fileName][propertyName],",
          "1258:               fileName,",
          "1265:             const service = App.config.get('serviceByConfigTypeMap')[fileName],",
          "1266:               configObject = App.configsCollection.getConfigByName(propertyName, fileName),",
          "1267:               displayName = configObject && configObject.displayName;",
          "1270:               propertyName,",
          "1271:               propertyTitle: configObject && Em.I18n.t('installer.controls.serviceConfigPopover.title').format(displayName, displayName === propertyName ? '' : propertyName),",
          "1272:               propertyDescription: configObject && configObject.description,",
          "1278:         });",
          "1280:     });",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1418:   onLoadRangerConfigs: function (data) {",
          "1420:         {",
          "1421:           type: 'core-site',",
          "1422:           name: 'hadoop.security.key.provider.path'",
          "",
          "[Removed Lines]",
          "1419:     var hdfsProperties = [",
          "",
          "[Added Lines]",
          "1437:     const hdfsProperties = [",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1491:     this.saveLoadedConfigs(data);",
          "1495:         currentValue = typeConfigs[property.name],",
          "1496:         pattern = new RegExp('^kms:\\\\/\\\\/http@(.+):' + rkmsPort + '\\\\/kms$'),",
          "1497:         patternMatch = currentValue && currentValue.match(pattern),",
          "",
          "[Removed Lines]",
          "1493:     hdfsProperties.forEach(function (property) {",
          "1494:       var typeConfigs = data.items.findProperty('type', property.type).properties,",
          "",
          "[Added Lines]",
          "1511:     hdfsProperties.forEach(property => {",
          "1512:       const typeConfigs = data.items.findProperty('type', property.type).properties,",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1499:       if (currentHostsList !== rkmsHostsStr) {",
          "1500:         typeConfigs[property.name] = newValue;",
          "1501:         if (this.get('isReconfigureRequired')) {",
          "1503:           propertiesToChange.pushObject({",
          "1506:             serviceDisplayName: service && service.get('displayName'),",
          "1507:             initialValue: currentValue,",
          "1508:             recommendedValue: newValue,",
          "",
          "[Removed Lines]",
          "1502:           var service = App.config.get('serviceByConfigTypeMap')[property.type];",
          "1504:             propertyFileName: property.type,",
          "1505:             propertyName: property.name,",
          "",
          "[Added Lines]",
          "1520:           const propertyFileName = property.type,",
          "1521:             propertyName = property.name,",
          "1522:             service = App.config.get('serviceByConfigTypeMap')[propertyFileName],",
          "1523:             configObject = App.configsCollection.getConfigByName(propertyName, propertyFileName),",
          "1524:             displayName = configObject && configObject.displayName;",
          "1526:             propertyFileName,",
          "1527:             propertyName,",
          "1528:             propertyTitle: configObject && Em.I18n.t('installer.controls.serviceConfigPopover.title').format(displayName, displayName === propertyName ? '' : propertyName),",
          "1529:             propertyDescription: configObject && configObject.description,",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1510:           });",
          "1511:         }",
          "1512:       }",
          "1515:     kmsSiteProperties.forEach(function (property) {",
          "1516:       var currentValue = kmsSiteConfigs.properties[property.name];",
          "",
          "[Removed Lines]",
          "1513:     }, this);",
          "",
          "[Added Lines]",
          "1537:     });",
          "",
          "---------------"
        ],
        "ambari-web/app/controllers/main/service/item.js||ambari-web/app/controllers/main/service/item.js": [
          "File: ambari-web/app/controllers/main/service/item.js -> ambari-web/app/controllers/main/service/item.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1521:       primary: popupPrimary,",
          "1522:       primaryClass: 'btn-danger',",
          "1523:       disablePrimary: Em.computed.alias('controller.isRecommendationInProgress'),",
          "1526:       bodyClass: Em.View.extend({",
          "1527:         templateName: require('templates/main/service/info/delete_service_warning_popup'),",
          "1528:         warningMessage: new Em.Handlebars.SafeString(warningMessage)",
          "",
          "[Removed Lines]",
          "1524:       classNameBindings: ['controller.changedProperties.length:common-modal-wrapper', 'controller.changedProperties.length:modal-full-width'],",
          "1525:       modalDialogClasses: Em.computed.ifThenElse('controller.changedProperties.length', ['modal-lg'], []),",
          "",
          "[Added Lines]",
          "1524:       classNameBindings: ['controller.changedProperties.length:common-modal-wrapper'],",
          "1525:       modalDialogClasses: Em.computed.ifThenElse('controller.changedProperties.length', ['modal-xlg'], []),",
          "",
          "---------------"
        ],
        "ambari-web/app/mixins/common/configs/config_recommendations.js||ambari-web/app/mixins/common/configs/config_recommendations.js": [
          "File: ambari-web/app/mixins/common/configs/config_recommendations.js -> ambari-web/app/mixins/common/configs/config_recommendations.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "97:   addRecommendation: function (name, fileName, configGroupName, recommendedValue, initialValue, parentPropertyIds, isEditable) {",
          "98:     Em.assert('name and fileName should be defined', name && fileName);",
          "103:       saveRecommended: true,",
          "104:       saveRecommendedDefault: true,",
          "105:       propertyFileName: site,",
          "106:       propertyName: name,",
          "108:       isDeleted: Em.isNone(recommendedValue),",
          "109:       notDefined: Em.isNone(initialValue),",
          "111:       configGroup: configGroupName || \"Default\",",
          "113:       parentConfigs: parentPropertyIds || [],",
          "114:       serviceName: service.get('serviceName'),",
          "115:       allowChangeGroup: false,//TODO groupName!= \"Default\" && (service.get('serviceName') != this.get('selectedService.serviceName'))",
          "",
          "[Removed Lines]",
          "99:     var site = App.config.getConfigTagFromFileName(fileName);",
          "100:     var service = App.config.get('serviceByConfigTypeMap')[site];",
          "102:     var recommendation = {",
          "112:       initialValue: initialValue,",
          "",
          "[Added Lines]",
          "99:     const site = App.config.getConfigTagFromFileName(fileName);",
          "100:     const service = App.config.get('serviceByConfigTypeMap')[site];",
          "101:     const configObject = App.configsCollection.getConfigByName(name, fileName);",
          "102:     const displayName = configObject && configObject.displayName;",
          "104:     const recommendation = {",
          "109:       propertyTitle: configObject && Em.I18n.t('installer.controls.serviceConfigPopover.title').format(displayName, displayName === name ? '' : name),",
          "110:       propertyDescription: configObject && configObject.description,",
          "116:       initialValue,",
          "",
          "---------------"
        ],
        "ambari-web/app/styles/application.less||ambari-web/app/styles/application.less": [
          "File: ambari-web/app/styles/application.less -> ambari-web/app/styles/application.less",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: body {",
          "22:   overflow-y: scroll;",
          "24: }",
          "26: html, body {",
          "",
          "[Removed Lines]",
          "23:   line-height: 1.3em;",
          "",
          "[Added Lines]",
          "23:   line-height: @default-line-height;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2172: .config-validation-warnings {",
          "2173:   table {",
          "2174:     tbody{",
          "2175:       tr {",
          "2176:         &.warning {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2174:     table-layout: fixed;",
          "2175:     td, th {",
          "2176:       &.issue-type-cell {",
          "2177:         width: 5%;",
          "2178:       }",
          "2179:       &.service-name-cell {",
          "2180:         width: 15%;",
          "2181:       }",
          "2182:       &.property-name-cell {",
          "2183:         width: 15%;",
          "2184:       }",
          "2185:       &.property-value-cell {",
          "2186:         width: 25%;",
          "2187:         overflow: hidden;",
          "2188:         overflow-wrap: break-word;",
          "2189:       }",
          "2190:       &.property-description-cell {",
          "2191:         width: 40%;",
          "2192:       }",
          "2193:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2221: #config-dependencies {",
          "2222:   max-height: 500px;",
          "2223:   overflow-y: visible;",
          "2227:     &.check-box-col {",
          "2228:       min-width: 5px;",
          "2229:       width: 5px;",
          "2230:     }",
          "2231:     &.config-dependency-name {",
          "2232:       min-width: @config-dependency-t-name-width;",
          "2233:     }",
          "",
          "[Removed Lines]",
          "2224:   td {",
          "2225:     min-width: 120px;",
          "2226:     word-break: break-all;",
          "",
          "[Added Lines]",
          "2244:   td, th {",
          "2248:       .checkbox {",
          "2249:         display: inline-block;",
          "2250:       }",
          "2252:   }",
          "2253:   td {",
          "2254:     min-width: 120px;",
          "2255:     word-break: break-all;",
          "",
          "---------------"
        ],
        "ambari-web/app/styles/bootstrap_overrides.less||ambari-web/app/styles/bootstrap_overrides.less": [
          "File: ambari-web/app/styles/bootstrap_overrides.less -> ambari-web/app/styles/bootstrap_overrides.less",
          "--- Hunk 1 ---",
          "[Context before]",
          "433: .btn-group.open .dropdown-menu input[type=\"checkbox\"] + label,",
          "434: .dropdown.open .dropdown-menu input[type=\"checkbox\"] + label {",
          "436: }",
          "438: .navigation-bar-container.collapsed ul.nav.side-nav-menu li ul.sub-menu,",
          "",
          "[Removed Lines]",
          "435:   line-height: 1.3em;",
          "",
          "[Added Lines]",
          "435:   line-height: @default-line-height;",
          "",
          "---------------"
        ],
        "ambari-web/app/styles/common.less||ambari-web/app/styles/common.less": [
          "File: ambari-web/app/styles/common.less -> ambari-web/app/styles/common.less",
          "--- Hunk 1 ---",
          "[Context before]",
          "189: @default-font-size: 14px;",
          "190: @smaller-font-size: 12px;",
          "191: @default-button-height: 34px;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "192: @default-line-height: 1.3em;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "199: @modal-header-height: 57px;",
          "201: @modal-footer-height: 75px;",
          "203: .ellipsis-overflow {",
          "204:   overflow: hidden;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "204: @modal-dialog-margin-top-default: 10px;",
          "206: @modal-dialog-margin-top-wide-screen: 30px;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "211: }",
          "213: @dashboard-widget-height: 157px;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "223: @navbar-header-vertical-padding: 19px;",
          "224: @navbar-header-padding-right: 15px;",
          "225: @navbar-header-padding-left: 0;",
          "226: @navbar-header-font-size: 20px;",
          "",
          "---------------"
        ],
        "ambari-web/app/styles/modal_popups.less||ambari-web/app/styles/modal_popups.less": [
          "File: ambari-web/app/styles/modal_popups.less -> ambari-web/app/styles/modal_popups.less",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: @import 'common.less';",
          "20: #modal {",
          "21:   outline: none;",
          "22: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: @modal-top-calculated-without-margin: @navbar-header-vertical-padding + (@navbar-header-font-size * unit(@default-line-height));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25:   margin-left: 20px;",
          "26:   margin-right: 20px;",
          "27:   text-indent: -20px;",
          "30:   a:not(.disabled) {",
          "31:       cursor: pointer;",
          "",
          "[Removed Lines]",
          "28:   line-height: 1.3em;",
          "",
          "[Added Lines]",
          "30:   line-height: @default-line-height;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "97: }",
          "99: .modal {",
          "101:   .modal-body {",
          "102:     .top-wrap {",
          "103:       &.top-wrap-header {",
          "",
          "[Removed Lines]",
          "100:   top: 5%;",
          "",
          "[Added Lines]",
          "102:   top: @modal-top-calculated-without-margin - @modal-dialog-margin-top-default;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "107:     }",
          "108:   }",
          "109: }",
          "110: .modal-body {",
          "111:   max-height: 600px;",
          "112:   overflow-y: auto;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "113: @media (min-width: 768px) {",
          "114:   .modal {",
          "115:     top: @modal-top-calculated-without-margin - @modal-dialog-margin-top-wide-screen;",
          "116:   }",
          "117: }",
          "",
          "---------------"
        ],
        "ambari-web/app/styles/top-nav.less||ambari-web/app/styles/top-nav.less": [
          "File: ambari-web/app/styles/top-nav.less -> ambari-web/app/styles/top-nav.less",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:     margin-bottom: 10px;",
          "28:     .navbar-header {",
          "30:       margin-top: -5px;",
          "32:       width: ~\"calc(100% - 400px)\";",
          "33:       a {",
          "34:         color: #313D54;",
          "",
          "[Removed Lines]",
          "29:       padding: 19px 15px 19px 0;",
          "31:       font-size: 20px;",
          "",
          "[Added Lines]",
          "29:       padding: @navbar-header-vertical-padding @navbar-header-padding-right @navbar-header-vertical-padding @navbar-header-padding-left;",
          "31:       font-size: @navbar-header-font-size;",
          "",
          "---------------"
        ],
        "ambari-web/app/templates/common/configs/services_config.hbs||ambari-web/app/templates/common/configs/services_config.hbs": [
          "File: ambari-web/app/templates/common/configs/services_config.hbs -> ambari-web/app/templates/common/configs/services_config.hbs",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:       <div id=\"notifications-dropdown\" class=\"dropdown-menu row\">",
          "73:         <div class=\"popover-content\">",
          "74:           <div class=\"popup-arrow-up\"></div>",
          "76:         </div>",
          "77:       </div>",
          "78:     </div>",
          "",
          "[Removed Lines]",
          "75:           {{view App.DependentConfigsListView recommendationsBinding=\"controller.recommendations\" requiredChangesBinding=\"controller.requiredChanges\"}}",
          "",
          "[Added Lines]",
          "75:           {{view App.DependentConfigsListView recommendationsBinding=\"controller.recommendations\"",
          "76:             requiredChangesBinding=\"controller.requiredChanges\" isRecommendationsClickable=true",
          "77:             showRecommendationsPopovers=false}}",
          "",
          "---------------"
        ],
        "ambari-web/app/templates/common/modal_popups/config_recommendation_popup.hbs||ambari-web/app/templates/common/modal_popups/config_recommendation_popup.hbs": [
          "File: ambari-web/app/templates/common/modal_popups/config_recommendation_popup.hbs -> ambari-web/app/templates/common/modal_popups/config_recommendation_popup.hbs",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:     <table class=\"table table-hover\">",
          "26:       <thead>",
          "27:       <tr>",
          "33:       </tr>",
          "34:       </thead>",
          "35:       <tbody>",
          "36:       {{#each error in view.configErrors.criticalIssues}}",
          "37:         <tr {{bindAttr class=\"error.cssClass\"}}>",
          "39:             {{t common.critical}}",
          "40:           </td>",
          "43:             {{#if controller.isInstallWizard}}",
          "44:               <a href=\"#\" {{action \"showConfigProperty\" error target=\"controller\"}}>{{error.propertyName}}</a>",
          "45:             {{else}}",
          "46:               {{error.propertyName}}",
          "47:             {{/if}}",
          "48:           </td>",
          "51:             {{#each message in error.messages}}",
          "52:               <div class=\"property-message\">{{message}}</div>",
          "53:             {{/each}}",
          "",
          "[Removed Lines]",
          "28:         <th>{{t common.type}}</th>",
          "29:         <th>{{t common.service}}</th>",
          "30:         <th>{{t common.property}}</th>",
          "31:         <th>{{t common.value}}</th>",
          "32:         <th>{{t common.description}}</th>",
          "38:           <td>",
          "41:           <td>{{error.serviceName}}</td>",
          "42:           <td>",
          "49:           <td>{{error.value}}</td>",
          "50:           <td>",
          "",
          "[Added Lines]",
          "28:         <th class=\"issue-type-cell\">{{t common.type}}</th>",
          "29:         <th class=\"service-name-cell\">{{t common.service}}</th>",
          "30:         <th class=\"property-name-cell\">{{t common.property}}</th>",
          "31:         <th class=\"property-value-cell\">{{t common.value}}</th>",
          "32:         <th class=\"property-description-cell\">{{t common.description}}</th>",
          "38:           <td class=\"issue-type-cell\">",
          "41:           <td class=\"service-name-cell\">{{error.serviceName}}</td>",
          "42:           <td class=\"property-name-cell\">",
          "49:           <td class=\"property-value-cell\">{{error.value}}</td>",
          "50:           <td class=\"property-description-cell\">",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "71:     <table class=\"table table-hover\">",
          "72:       <thead>",
          "73:       <tr>",
          "79:       </tr>",
          "80:       </thead>",
          "81:       <tbody>",
          "82:       {{#each error in view.configErrors.issues}}",
          "83:         <tr {{bindAttr class=\"error.cssClass\"}}>",
          "85:             {{#if error.isError}}",
          "86:               {{t common.error}}",
          "87:             {{else}}",
          "",
          "[Removed Lines]",
          "74:         <th>{{t common.type}}</th>",
          "75:         <th>{{t common.service}}</th>",
          "76:         <th>{{t common.property}}</th>",
          "77:         <th>{{t installer.step7.popup.currentValue}}</th>",
          "78:         <th>{{t common.description}}</th>",
          "84:           <td>",
          "",
          "[Added Lines]",
          "74:         <th class=\"issue-type-cell\">{{t common.type}}</th>",
          "75:         <th class=\"service-name-cell\">{{t common.service}}</th>",
          "76:         <th class=\"property-name-cell\">{{t common.property}}</th>",
          "77:         <th class=\"property-value-cell\">{{t installer.step7.popup.currentValue}}</th>",
          "78:         <th class=\"property-description-cell\">{{t common.description}}</th>",
          "84:           <td class=\"issue-type-cell\">",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "94:               <td colspan=\"4\">{{error.message}}</td>",
          "95:             {{/each}}",
          "96:           {{else}}",
          "99:               {{#if controller.isInstallWizard}}",
          "100:                 <a href=\"#\" {{action \"showConfigProperty\" error target=\"controller\"}}>{{error.propertyName}}</a>",
          "101:               {{else}}",
          "102:                 {{error.propertyName}}",
          "103:               {{/if}}",
          "104:             </td>",
          "107:               {{#each message in error.messages}}",
          "108:                 <div class=\"property-message\">{{message}}</div>",
          "109:               {{/each}}",
          "",
          "[Removed Lines]",
          "97:             <td>{{error.serviceName}}</td>",
          "98:             <td>",
          "105:             <td>{{error.value}}</td>",
          "106:             <td>",
          "",
          "[Added Lines]",
          "97:             <td class=\"service-name-cell\">{{error.serviceName}}</td>",
          "98:             <td class=\"property-name-cell\">",
          "105:             <td class=\"property-value-cell\">{{error.value}}</td>",
          "106:             <td class=\"property-description-cell\">",
          "",
          "---------------"
        ],
        "ambari-web/app/templates/common/modal_popups/dependent_configs_list.hbs||ambari-web/app/templates/common/modal_popups/dependent_configs_list.hbs": [
          "File: ambari-web/app/templates/common/modal_popups/dependent_configs_list.hbs -> ambari-web/app/templates/common/modal_popups/dependent_configs_list.hbs",
          "--- Hunk 1 ---",
          "[Context before]",
          "63: {{/if}}",
          "64: <span id=\"config-dependencies\" class=\"limited-height-2\">",
          "65:   {{#if view.recommendations.length}}",
          "67:   {{/if}}",
          "68:   {{#if view.requiredChanges.length}}",
          "70:   {{/if}}",
          "71: </span>",
          "",
          "[Removed Lines]",
          "66:     {{view App.DependentConfigsTableView recommendationsBinding=\"view.recommendations\" checkboxesFirstBinding=\"controller.isInstallWizard\" isClickable=true}}",
          "69:     {{view App.DependentConfigsTableView recommendationsBinding=\"view.requiredChanges\" isEditable=false checkboxesFirstBinding=\"controller.isInstallWizard\" isClickable=true}}",
          "",
          "[Added Lines]",
          "66:     {{view App.DependentConfigsTableView recommendationsBinding=\"view.recommendations\"",
          "67:       isClickableBinding=\"view.isRecommendationsClickable\" showPopoversBinding=\"view.showRecommendationsPopovers\"}}",
          "70:     {{view App.DependentConfigsTableView recommendationsBinding=\"view.requiredChanges\" isEditable=false",
          "71:       isClickableBinding=\"view.isRecommendationsClickable\" showPopoversBinding=\"view.showRecommendationsPopovers\"}}",
          "",
          "---------------"
        ],
        "ambari-web/app/templates/common/modal_popups/dependent_configs_table.hbs||ambari-web/app/templates/common/modal_popups/dependent_configs_table.hbs": [
          "File: ambari-web/app/templates/common/modal_popups/dependent_configs_table.hbs -> ambari-web/app/templates/common/modal_popups/dependent_configs_table.hbs",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: <table class=\"table table-hover\">",
          "23:   <thead>",
          "24:     <tr>",
          "29:       {{/if}}",
          "30:       <th>{{t common.property}}</th>",
          "31:       <th>{{t common.service}}</th>",
          "",
          "[Removed Lines]",
          "25:       {{#if view.checkboxesFirst}}",
          "26:         {{#if view.isEditable}}",
          "27:           <th class=\"check-box-col\">{{view view.parentView.toggleAll}}<label {{bindAttr for=\"view.parentView.toggleAllId\"}}></label></th>",
          "28:         {{/if}}",
          "",
          "[Added Lines]",
          "25:       {{#if view.isEditable}}",
          "26:         <th class=\"check-box-col\">{{view view.parentView.toggleAll}}<label {{bindAttr for=\"view.parentView.toggleAllId\"}}></label></th>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:           </div>",
          "46:         </div>",
          "47:       </th>",
          "53:     </tr>",
          "54:   </thead>",
          "55:   <tbody>",
          "56:   {{#each recommendation in view.recommendations}}",
          "57:     <tr {{bindAttr class=\"recommendation.saveRecommended:active\"}}>",
          "62:       {{/if}}",
          "64:         {{#if view.isClickable}}",
          "65:           <a href=\"#\" {{action \"showConfigProperty\" recommendation target=\"controller\"}}>{{recommendation.propertyName}}</a>",
          "66:         {{else}}",
          "",
          "[Removed Lines]",
          "48:       {{#unless view.checkboxesFirst}}",
          "49:         {{#if view.isEditable}}",
          "50:           <th class=\"check-box-col\">{{view view.parentView.toggleAll}}<label {{bindAttr for=\"view.parentView.toggleAllId\"}}></label></th>",
          "51:         {{/if}}",
          "52:       {{/unless}}",
          "58:       {{#if view.checkboxesFirst}}",
          "59:         {{#if view.isEditable}}",
          "60:           <td class=\"check-box-col\">{{view App.CheckboxView checkedBinding=\"recommendation.saveRecommended\"}}</td>",
          "61:         {{/if}}",
          "63:       <td class=\"config-dependency-name\">",
          "",
          "[Added Lines]",
          "51:       {{#if view.isEditable}}",
          "52:         <td class=\"check-box-col\">{{view App.CheckboxView checkedBinding=\"recommendation.saveRecommended\"}}</td>",
          "54:       <td class=\"config-dependency-name\" {{bindAttr data-original-title=\"recommendation.propertyTitle\" data-content=\"recommendation.propertyDescription\"}}>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "82:           {{view App.ConfigDiffView configBinding=\"recommendation\"}}",
          "83:         </div>",
          "84:       </td>",
          "90:     </tr>",
          "91:   {{/each}}",
          "92:   </tbody>",
          "",
          "[Removed Lines]",
          "85:       {{#unless view.checkboxesFirst}}",
          "86:         {{#if view.isEditable}}",
          "87:           <td class=\"check-box-col\">{{view App.CheckboxView checkedBinding=\"recommendation.saveRecommended\"}}</td>",
          "88:         {{/if}}",
          "89:       {{/unless}}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ambari-web/app/views/common/modal_popup.js||ambari-web/app/views/common/modal_popup.js": [
          "File: ambari-web/app/views/common/modal_popup.js -> ambari-web/app/views/common/modal_popup.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "163:   fitHeight: function () {",
          "164:     if (this.get('state') === 'destroyed') return;",
          "166:       wrapper = $(popup).find('.modal-dialog'),",
          "167:       block = $(popup).find('.modal-body'),",
          "168:       wh = $(window).height(),",
          "172:     popup.css({",
          "173:       'top': top + 'px',",
          "",
          "[Removed Lines]",
          "165:     var popup = this.$().find('#modal'),",
          "169:       top = wh * 0.05,",
          "170:       newMaxHeight = wh - top * 2 - (wrapper.height() - block.height());",
          "",
          "[Added Lines]",
          "165:     const popup = this.$().find('#modal'),",
          "169:       ww = $(window).width(),",
          "170:       topNavPaddingTop = 19, // from ambari-web/app/styles/common.less",
          "171:       topNavFontSize = 20, // from ambari-web/app/styles/common.less",
          "172:       topNavLineHeight = 1.3, // from ambari-web/app/styles/common.less",
          "173:       modalMarginTopDefault = 10, // from ambari-web/app/styles/common.less",
          "174:       modalMarginTopWide = 30, // from ambari-web/app/styles/common.less",
          "175:       modalMarginTop = ww < 768 ? modalMarginTopDefault : modalMarginTopWide, // from ambari-web/vendor/styles/bootstrap.css",
          "176:       top = topNavPaddingTop + topNavFontSize * topNavLineHeight - modalMarginTop;",
          "177:     let newMaxHeight = wh - top * 2 - (wrapper.height() - block.height());",
          "",
          "---------------"
        ],
        "ambari-web/app/views/common/modal_popups/config_validation/config_validation_popup.js||ambari-web/app/views/common/modal_popups/config_validation/config_validation_popup.js": [
          "File: ambari-web/app/views/common/modal_popups/config_validation/config_validation_popup.js -> ambari-web/app/views/common/modal_popups/config_validation/config_validation_popup.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: App.showConfigValidationPopup = function (configErrors, primary, secondary, controller) {",
          "27:   return App.ModalPopup.show({",
          "28:     header: Em.I18n.t('installer.step7.popup.validation.warning.header'),",
          "31:     primary: Em.I18n.t('common.proceedAnyway'),",
          "32:     primaryClass: 'btn-danger',",
          "33:     marginBottom: 200,",
          "",
          "[Removed Lines]",
          "29:     classNames: ['common-modal-wrapper','modal-full-width'],",
          "30:     modalDialogClasses: ['modal-lg'],",
          "",
          "[Added Lines]",
          "29:     classNames: ['common-modal-wrapper'],",
          "30:     modalDialogClasses: ['modal-xlg'],",
          "",
          "---------------"
        ],
        "ambari-web/app/views/common/modal_popups/dependent_configs_list_popup.js||ambari-web/app/views/common/modal_popups/dependent_configs_list_popup.js": [
          "File: ambari-web/app/views/common/modal_popups/dependent_configs_list_popup.js -> ambari-web/app/views/common/modal_popups/dependent_configs_list_popup.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: App.DependentConfigsTableView = Em.View.extend({",
          "22:   templateName: require('templates/common/modal_popups/dependent_configs_table'),",
          "23:   recommendations: [],",
          "25:   isClickable: false,",
          "26:   hideMessage: function () {",
          "27:     return this.get('controller.isInstallWizard');",
          "28:   }.property('controller.isInstallWizard'),",
          "",
          "[Removed Lines]",
          "24:   checkboxesFirst: false,",
          "",
          "[Added Lines]",
          "25:   showPopovers: true,",
          "26:   elementsWithPopover: function () {",
          "27:     return this.$('td.config-dependency-name');",
          "28:   }.property(),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47:       message += Em.I18n.t('popup.dependent.configs.title.required');",
          "48:     }",
          "49:     return message;",
          "51: });",
          "53: App.DependentConfigsListView = Em.View.extend({",
          "54:   templateName: require('templates/common/modal_popups/dependent_configs_list'),",
          "55:   isAfterRecommendation: true,",
          "56:   recommendations: [],",
          "57:   requiredChanges: [],",
          "58:   allConfigsWithErrors: [],",
          "",
          "[Removed Lines]",
          "50:   }.property('isEditable')",
          "",
          "[Added Lines]",
          "53:   }.property('isEditable'),",
          "54:   didInsertElement: function () {",
          "55:     if (this.get('showPopovers')) {",
          "56:       App.popover(this.get('elementsWithPopover'), {",
          "57:         placement: 'auto right',",
          "58:         trigger: 'hover',",
          "59:         html: true",
          "60:       });",
          "61:     }",
          "62:   },",
          "63:   willDestroyElement: function () {",
          "64:     if (this.get('showPopovers')) {",
          "65:       this.get('elementsWithPopover').popover('destroy');",
          "66:     }",
          "67:   }",
          "73:   isRecommendationsClickable: false,",
          "74:   showRecommendationsPopovers: true,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "107:   return App.ModalPopup.show({",
          "108:     encodeBody: false,",
          "109:     header: Em.I18n.t('popup.dependent.configs.header'),",
          "112:     secondaryClass: 'cancel-button',",
          "113:     bodyClass: App.DependentConfigsListView.extend({",
          "117:     }),",
          "118:     saveChanges: function() {",
          "120:         Em.set(c, 'saveRecommendedDefault', Em.get(c, 'saveRecommended'));",
          "121:       });",
          "122:     },",
          "123:     discardChanges: function() {",
          "125:         Em.set(c, 'saveRecommended', Em.get(c, 'saveRecommendedDefault'));",
          "126:       });",
          "127:     },",
          "",
          "[Removed Lines]",
          "106: App.showDependentConfigsPopup = function (recommendedChanges, requiredChanges, primary, secondary, controller) {",
          "110:     classNames: ['common-modal-wrapper','modal-full-width'],",
          "111:     modalDialogClasses: ['modal-lg'],",
          "114:       recommendations: recommendedChanges,",
          "115:       requiredChanges: requiredChanges,",
          "116:       controller: controller",
          "119:       recommendedChanges.forEach(function (c) {",
          "124:       recommendedChanges.forEach(function(c) {",
          "",
          "[Added Lines]",
          "127: App.showDependentConfigsPopup = function (recommendations, requiredChanges, primary, secondary, controller, isRecommendationsClickable = false, showRecommendationsPopovers = true) {",
          "131:     classNames: ['common-modal-wrapper'],",
          "132:     modalDialogClasses: ['modal-xlg'],",
          "135:       recommendations,",
          "136:       requiredChanges,",
          "137:       controller,",
          "138:       isRecommendationsClickable,",
          "139:       showRecommendationsPopovers",
          "142:       recommendations.forEach(function (c) {",
          "147:       recommendations.forEach(function(c) {",
          "",
          "---------------"
        ],
        "ambari-web/app/views/common/modal_popups/log_file_search_popup.js||ambari-web/app/views/common/modal_popups/log_file_search_popup.js": [
          "File: ambari-web/app/views/common/modal_popups/log_file_search_popup.js -> ambari-web/app/views/common/modal_popups/log_file_search_popup.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: App.LogFileSearchPopup = function(header) {",
          "22:   return App.ModalPopup.show({",
          "24:     modalDialogClasses: ['modal-lg'],",
          "25:     header: header,",
          "26:     bodyView: null,",
          "",
          "[Removed Lines]",
          "23:     classNames: ['modal-full-width', 'common-modal-wrapper', 'log-file-search-popup'],",
          "",
          "[Added Lines]",
          "23:     classNames: ['common-modal-wrapper', 'log-file-search-popup'],",
          "",
          "---------------"
        ],
        "ambari-web/test/mixins/common/configs/config_recommendations_test.js||ambari-web/test/mixins/common/configs/config_recommendations_test.js": [
          "File: ambari-web/test/mixins/common/configs/config_recommendations_test.js -> ambari-web/test/mixins/common/configs/config_recommendations_test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:       sinon.stub(App.config, 'get').withArgs('serviceByConfigTypeMap').returns({",
          "33:         'pFile': Em.Object.create({serviceName: 'sName', displayName: 'sDisplayName'})",
          "34:       });",
          "36:     });",
          "37:     afterEach(function() {",
          "38:       instanceObject.formatParentProperties.restore();",
          "39:       App.config.get.restore();",
          "41:     });",
          "43:     it('adds new recommendation', function() {",
          "",
          "[Removed Lines]",
          "35:     sinon.stub(Handlebars, 'SafeString');",
          "40:     Handlebars.SafeString.restore();",
          "",
          "[Added Lines]",
          "35:       sinon.stub(App.configsCollection, 'getConfigByName').withArgs('pName', 'pFile').returns({",
          "36:         displayName: 'pDisplayName',",
          "37:         description: 'pDescription'",
          "38:       });",
          "39:       sinon.stub(Handlebars, 'SafeString');",
          "44:       App.configsCollection.getConfigByName.restore();",
          "45:       Handlebars.SafeString.restore();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47:         saveRecommendedDefault: true,",
          "48:         propertyFileName: 'pFile',",
          "49:         propertyName: 'pName',",
          "50:         isDeleted: false,",
          "51:         notDefined: false,",
          "52:         configGroup: 'pGroup',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55:         propertyTitle: 'pDisplayName<br><small>pName</small>',",
          "56:         propertyDescription: 'pDescription',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "123:           saveRecommendedDefault: true,",
          "124:           propertyFileName: 'pFile',",
          "125:           propertyName: 'pName',",
          "126:           isDeleted: false,",
          "127:           notDefined: false,",
          "128:           configGroup: 'pGroup',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "133:           propertyTitle: 'pDisplayName<br><small>pName</small>',",
          "134:           propertyDescription: 'pDescription',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "144:           saveRecommendedDefault: true,",
          "145:           propertyFileName: 'pFile',",
          "146:           propertyName: 'pName',",
          "147:           isDeleted: false,",
          "148:           notDefined: false,",
          "149:           configGroup: 'pGroup',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "156:           propertyTitle: 'pDisplayName<br><small>pName</small>',",
          "157:           propertyDescription: 'pDescription',",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "165:           saveRecommendedDefault: true,",
          "166:           propertyFileName: 'pFile',",
          "167:           propertyName: 'pName',",
          "168:           isDeleted: true,",
          "169:           notDefined: true,",
          "170:           configGroup: 'Default',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "179:           propertyTitle: 'pDisplayName<br><small>pName</small>',",
          "180:           propertyDescription: 'pDescription',",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "187:             'pFile': c.service",
          "188:           });",
          "189:           sinon.stub(Handlebars, 'SafeString');",
          "190:           recommendation = instanceObject.addRecommendation(c.name, c.file, c.group, c.recommended, c.initial, c.parent, c.isEditable);",
          "191:         });",
          "193:         afterEach(function() {",
          "194:           App.config.get.restore();",
          "195:           Handlebars.SafeString.restore();",
          "196:         });",
          "198:         it(c.title, function() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "203:           sinon.stub(App.configsCollection, 'getConfigByName').withArgs('pName', 'pFile.xml').returns({",
          "204:             displayName: 'pDisplayName',",
          "205:             description: 'pDescription'",
          "206:           });",
          "213:           App.configsCollection.getConfigByName.restore();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f2f21177a78e9b0a793233a58a78ac1fa7d01e1d",
      "candidate_info": {
        "commit_hash": "f2f21177a78e9b0a793233a58a78ac1fa7d01e1d",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/f2f21177a78e9b0a793233a58a78ac1fa7d01e1d",
        "files": [
          "ambari-infra/ambari-infra-solr-client/src/main/python/migrationHelper.py"
        ],
        "message": "AMBARI-25473 Upgrade Infra Solr Clients fails if it is installed on only one host (santal) (#3178)",
        "before_after_code_files": [
          "ambari-infra/ambari-infra-solr-client/src/main/python/migrationHelper.py||ambari-infra/ambari-infra-solr-client/src/main/python/migrationHelper.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-infra/ambari-infra-solr-client/src/main/python/migrationHelper.py||ambari-infra/ambari-infra-solr-client/src/main/python/migrationHelper.py": [
          "File: ambari-infra/ambari-infra-solr-client/src/main/python/migrationHelper.py -> ambari-infra/ambari-infra-solr-client/src/main/python/migrationHelper.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "509:   host = socket.gethostname()",
          "510:   if host in solr_client_hosts:",
          "511:     solr_client_hosts.remove(host)",
          "512:   context = \"Upgrade Solr Clients\"",
          "513:   sys.stdout.write(\"Sending upgrade request: [{0}] \".format(context))",
          "514:   sys.stdout.flush()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "513:   if not len(solr_client_hosts):",
          "514:     print 'The Solr Clients upgrade request has been aborted because no other host can be upgraded.'",
          "515:     sys.exit(0)",
          "",
          "---------------"
        ]
      }
    }
  ]
}