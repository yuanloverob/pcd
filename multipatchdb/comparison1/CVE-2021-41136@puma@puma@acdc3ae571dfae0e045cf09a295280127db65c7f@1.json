{
  "cve_id": "CVE-2021-41136",
  "cve_desc": "Puma is a HTTP 1.1 server for Ruby/Rack applications. Prior to versions 5.5.1 and 4.3.9, using `puma` with a proxy which forwards HTTP header values which contain the LF character could allow HTTP request smugggling. A client could smuggle a request through a proxy, causing the proxy to send a response back to another unknown client. The only proxy which has this behavior, as far as the Puma team is aware of, is Apache Traffic Server. If the proxy uses persistent connections and the client adds another request in via HTTP pipelining, the proxy may mistake it as the first request's body. Puma, however, would see it as two requests, and when processing the second request, send back a response that the proxy does not expect. If the proxy has reused the persistent connection to Puma to send another request for a different client, the second response from the first client will be sent to the second client. This vulnerability was patched in Puma 5.5.1 and 4.3.9. As a workaround, do not use Apache Traffic Server with `puma`.",
  "repo": "puma/puma",
  "patch_hash": "acdc3ae571dfae0e045cf09a295280127db65c7f",
  "patch_info": {
    "commit_hash": "acdc3ae571dfae0e045cf09a295280127db65c7f",
    "repo": "puma/puma",
    "commit_url": "https://github.com/puma/puma/commit/acdc3ae571dfae0e045cf09a295280127db65c7f",
    "files": [
      "History.md",
      "ext/puma_http11/http11_parser.c",
      "ext/puma_http11/http11_parser_common.rl",
      "ext/puma_http11/org/jruby/puma/Http11Parser.java",
      "lib/puma/const.rb",
      "test/test_http11.rb"
    ],
    "message": "Merge pull request from GHSA-48w2-rm65-62xx\n\n* Fix HTTP request smuggling vulnerability\n\nSee GHSA-48w2-rm65-62xx or CVE-2021-41136 for more info.\n\n* 4.3.9 release note\n\n* 5.5.1 release note\n\n* 5.5.1",
    "before_after_code_files": [
      "ext/puma_http11/http11_parser.c||ext/puma_http11/http11_parser.c",
      "ext/puma_http11/http11_parser_common.rl||ext/puma_http11/http11_parser_common.rl",
      "ext/puma_http11/org/jruby/puma/Http11Parser.java||ext/puma_http11/org/jruby/puma/Http11Parser.java",
      "lib/puma/const.rb||lib/puma/const.rb",
      "test/test_http11.rb||test/test_http11.rb"
    ]
  },
  "patch_diff": {
    "ext/puma_http11/http11_parser.c||ext/puma_http11/http11_parser.c": [
      "File: ext/puma_http11/http11_parser.c -> ext/puma_http11/http11_parser.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "426: case 18:",
      "427: #line 428 \"ext/puma_http11/http11_parser.c\"",
      "428:  switch( (*p) ) {",
      "429:   case 13: goto tr26;",
      "430:   case 32: goto tr27;",
      "431:  }",
      "433: tr25:",
      "434: #line 46 \"ext/puma_http11/http11_parser.rl\"",
      "435:  { MARK(mark, p); }",
      "",
      "[Removed Lines]",
      "432:  goto tr25;",
      "",
      "[Added Lines]",
      "429:   case 9: goto tr25;",
      "433:  if ( 33 <= (*p) && (*p) <= 126 )",
      "434:   goto tr25;",
      "435:  goto st0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "438:  if ( ++p == pe )",
      "439:   goto _test_eof19;",
      "440: case 19:",
      "445: tr9:",
      "446: #line 53 \"ext/puma_http11/http11_parser.rl\"",
      "447:  {",
      "",
      "[Removed Lines]",
      "441: #line 442 \"ext/puma_http11/http11_parser.c\"",
      "442:  if ( (*p) == 13 )",
      "443:   goto tr29;",
      "444:  goto st19;",
      "",
      "[Added Lines]",
      "444: #line 445 \"ext/puma_http11/http11_parser.c\"",
      "445:  switch( (*p) ) {",
      "446:   case 9: goto st19;",
      "447:   case 13: goto tr29;",
      "448:  }",
      "449:  if ( 32 <= (*p) && (*p) <= 126 )",
      "450:   goto st19;",
      "451:  goto st0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "484:  if ( ++p == pe )",
      "485:   goto _test_eof20;",
      "486: case 20:",
      "488:  switch( (*p) ) {",
      "489:   case 32: goto tr31;",
      "490:   case 60: goto st0;",
      "",
      "[Removed Lines]",
      "487: #line 488 \"ext/puma_http11/http11_parser.c\"",
      "",
      "[Added Lines]",
      "494: #line 495 \"ext/puma_http11/http11_parser.c\"",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "505:  if ( ++p == pe )",
      "506:   goto _test_eof21;",
      "507: case 21:",
      "509:  switch( (*p) ) {",
      "510:   case 32: goto tr33;",
      "511:   case 60: goto st0;",
      "",
      "[Removed Lines]",
      "508: #line 509 \"ext/puma_http11/http11_parser.c\"",
      "",
      "[Added Lines]",
      "515: #line 516 \"ext/puma_http11/http11_parser.c\"",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "526:  if ( ++p == pe )",
      "527:   goto _test_eof22;",
      "528: case 22:",
      "530:  switch( (*p) ) {",
      "531:   case 43: goto st22;",
      "532:   case 58: goto st23;",
      "",
      "[Removed Lines]",
      "529: #line 530 \"ext/puma_http11/http11_parser.c\"",
      "",
      "[Added Lines]",
      "536: #line 537 \"ext/puma_http11/http11_parser.c\"",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "551:  if ( ++p == pe )",
      "552:   goto _test_eof23;",
      "553: case 23:",
      "555:  switch( (*p) ) {",
      "556:   case 32: goto tr8;",
      "557:   case 34: goto st0;",
      "",
      "[Removed Lines]",
      "554: #line 555 \"ext/puma_http11/http11_parser.c\"",
      "",
      "[Added Lines]",
      "561: #line 562 \"ext/puma_http11/http11_parser.c\"",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "571:  if ( ++p == pe )",
      "572:   goto _test_eof24;",
      "573: case 24:",
      "575:  switch( (*p) ) {",
      "576:   case 32: goto tr37;",
      "577:   case 34: goto st0;",
      "",
      "[Removed Lines]",
      "574: #line 575 \"ext/puma_http11/http11_parser.c\"",
      "",
      "[Added Lines]",
      "581: #line 582 \"ext/puma_http11/http11_parser.c\"",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "594:  if ( ++p == pe )",
      "595:   goto _test_eof25;",
      "596: case 25:",
      "598:  switch( (*p) ) {",
      "599:   case 32: goto tr41;",
      "600:   case 34: goto st0;",
      "",
      "[Removed Lines]",
      "597: #line 598 \"ext/puma_http11/http11_parser.c\"",
      "",
      "[Added Lines]",
      "604: #line 605 \"ext/puma_http11/http11_parser.c\"",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "614:  if ( ++p == pe )",
      "615:   goto _test_eof26;",
      "616: case 26:",
      "618:  switch( (*p) ) {",
      "619:   case 32: goto tr44;",
      "620:   case 34: goto st0;",
      "",
      "[Removed Lines]",
      "617: #line 618 \"ext/puma_http11/http11_parser.c\"",
      "",
      "[Added Lines]",
      "624: #line 625 \"ext/puma_http11/http11_parser.c\"",
      "",
      "---------------"
    ],
    "ext/puma_http11/http11_parser_common.rl||ext/puma_http11/http11_parser_common.rl": [
      "File: ext/puma_http11/http11_parser_common.rl -> ext/puma_http11/http11_parser_common.rl",
      "--- Hunk 1 ---",
      "[Context before]",
      "44:   field_name = ( token -- \":\" )+ >start_field $snake_upcase_field %write_field;",
      "48:   message_header = field_name \":\" \" \"* field_value :> CRLF;",
      "",
      "[Removed Lines]",
      "46:   field_value = any* >start_value %write_value;",
      "",
      "[Added Lines]",
      "46:   field_value = ( print | \"\\t\" )* >start_value %write_value;",
      "",
      "---------------"
    ],
    "ext/puma_http11/org/jruby/puma/Http11Parser.java||ext/puma_http11/org/jruby/puma/Http11Parser.java": [
      "File: ext/puma_http11/org/jruby/puma/Http11Parser.java -> ext/puma_http11/org/jruby/puma/Http11Parser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "34: {",
      "35:  return new short [] {",
      "36:      0,    0,    8,   17,   27,   29,   30,   31,   32,   33,   34,   36,",
      "40:  };",
      "41: }",
      "",
      "[Removed Lines]",
      "37:     39,   41,   44,   45,   61,   62,   78,   80,   81,   89,   97,  107,",
      "38:    115,  124,  132,  140,  149,  158,  167,  176,  185,  194,  203,  212,",
      "39:    221,  230,  239,  248,  257,  266,  275,  284,  293,  302,  303",
      "",
      "[Added Lines]",
      "37:     39,   41,   44,   45,   61,   62,   78,   83,   87,   95,  103,  113,",
      "38:    121,  130,  138,  146,  155,  164,  173,  182,  191,  200,  209,  218,",
      "39:    227,  236,  245,  254,  263,  272,  281,  290,  299,  308,  309",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "52:     46,   48,   57,   48,   57,   13,   48,   57,   10,   13,   33,  124,",
      "53:    126,   35,   39,   42,   43,   45,   46,   48,   57,   65,   90,   94,",
      "54:    122,   10,   33,   58,  124,  126,   35,   39,   42,   43,   45,   46,",
      "63:     36,   95,   45,   46,   48,   57,   65,   90,   32,   36,   95,   45,",
      "64:     46,   48,   57,   65,   90,   32,   36,   95,   45,   46,   48,   57,",
      "65:     65,   90,   32,   36,   95,   45,   46,   48,   57,   65,   90,   32,",
      "",
      "[Removed Lines]",
      "55:     48,   57,   65,   90,   94,  122,   13,   32,   13,   32,   60,   62,",
      "56:    127,    0,   31,   34,   35,   32,   60,   62,  127,    0,   31,   34,",
      "57:     35,   43,   58,   45,   46,   48,   57,   65,   90,   97,  122,   32,",
      "58:     34,   35,   60,   62,  127,    0,   31,   32,   34,   35,   60,   62,",
      "59:     63,  127,    0,   31,   32,   34,   35,   60,   62,  127,    0,   31,",
      "60:     32,   34,   35,   60,   62,  127,    0,   31,   32,   36,   95,   45,",
      "61:     46,   48,   57,   65,   90,   32,   36,   95,   45,   46,   48,   57,",
      "62:     65,   90,   32,   36,   95,   45,   46,   48,   57,   65,   90,   32,",
      "",
      "[Added Lines]",
      "55:     48,   57,   65,   90,   94,  122,    9,   13,   32,   33,  126,    9,",
      "56:     13,   32,  126,   32,   60,   62,  127,    0,   31,   34,   35,   32,",
      "57:     60,   62,  127,    0,   31,   34,   35,   43,   58,   45,   46,   48,",
      "58:     57,   65,   90,   97,  122,   32,   34,   35,   60,   62,  127,    0,",
      "59:     31,   32,   34,   35,   60,   62,   63,  127,    0,   31,   32,   34,",
      "60:     35,   60,   62,  127,    0,   31,   32,   34,   35,   60,   62,  127,",
      "61:      0,   31,   32,   36,   95,   45,   46,   48,   57,   65,   90,   32,",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "71:     65,   90,   32,   36,   95,   45,   46,   48,   57,   65,   90,   32,",
      "72:     36,   95,   45,   46,   48,   57,   65,   90,   32,   36,   95,   45,",
      "73:     46,   48,   57,   65,   90,   32,   36,   95,   45,   46,   48,   57,",
      "75:  };",
      "76: }",
      "",
      "[Removed Lines]",
      "74:     65,   90,   32,    0",
      "",
      "[Added Lines]",
      "73:     65,   90,   32,   36,   95,   45,   46,   48,   57,   65,   90,   32,",
      "74:     36,   95,   45,   46,   48,   57,   65,   90,   32,    0",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "82: {",
      "83:  return new byte [] {",
      "84:      0,    2,    3,    4,    2,    1,    1,    1,    1,    1,    0,    1,",
      "86:      7,    6,    6,    3,    3,    3,    3,    3,    3,    3,    3,    3,",
      "87:      3,    3,    3,    3,    3,    3,    3,    3,    3,    1,    0",
      "88:  };",
      "",
      "[Removed Lines]",
      "85:      0,    1,    1,    4,    1,    4,    2,    1,    4,    4,    2,    6,",
      "",
      "[Added Lines]",
      "85:      0,    1,    1,    4,    1,    4,    3,    2,    4,    4,    2,    6,",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "95: {",
      "96:  return new byte [] {",
      "97:      0,    3,    3,    3,    0,    0,    0,    0,    0,    0,    1,    1,",
      "99:      1,    1,    1,    3,    3,    3,    3,    3,    3,    3,    3,    3,",
      "100:      3,    3,    3,    3,    3,    3,    3,    3,    3,    0,    0",
      "101:  };",
      "",
      "[Removed Lines]",
      "98:      1,    1,    0,    6,    0,    6,    0,    0,    2,    2,    4,    1,",
      "",
      "[Added Lines]",
      "98:      1,    1,    0,    6,    0,    6,    1,    1,    2,    2,    4,    1,",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "108: {",
      "109:  return new short [] {",
      "110:      0,    0,    6,   13,   21,   24,   26,   28,   30,   32,   34,   36,",
      "114:  };",
      "115: }",
      "",
      "[Removed Lines]",
      "111:     39,   41,   44,   46,   57,   59,   70,   73,   75,   82,   89,   96,",
      "112:    104,  113,  121,  129,  136,  143,  150,  157,  164,  171,  178,  185,",
      "113:    192,  199,  206,  213,  220,  227,  234,  241,  248,  255,  257",
      "",
      "[Added Lines]",
      "111:     39,   41,   44,   46,   57,   59,   70,   75,   79,   86,   93,  100,",
      "112:    108,  117,  125,  133,  140,  147,  154,  161,  168,  175,  182,  189,",
      "113:    196,  203,  210,  217,  224,  231,  238,  245,  252,  259,  261",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "125:     10,    1,   11,    1,   12,    1,   13,    1,   14,    1,   15,    1,",
      "126:     16,   15,    1,   17,    1,   18,   17,    1,   19,    1,   20,   21,",
      "127:     21,   21,   21,   21,   21,   21,   21,   21,    1,   22,    1,   23,",
      "145:  };",
      "146: }",
      "",
      "[Removed Lines]",
      "128:     24,   23,   23,   23,   23,   23,   23,   23,   23,    1,   26,   27,",
      "129:     25,   29,   28,   30,    1,    1,    1,    1,    1,   31,   32,    1,",
      "130:      1,    1,    1,    1,   33,   34,   35,   34,   34,   34,   34,    1,",
      "131:      8,    1,    9,    1,    1,    1,    1,   35,   36,    1,   38,    1,",
      "132:      1,   39,    1,    1,   37,   40,    1,   42,    1,    1,    1,    1,",
      "133:     41,   43,    1,   45,    1,    1,    1,    1,   44,    2,   46,   46,",
      "134:     46,   46,   46,    1,    2,   47,   47,   47,   47,   47,    1,    2,",
      "135:     48,   48,   48,   48,   48,    1,    2,   49,   49,   49,   49,   49,",
      "136:      1,    2,   50,   50,   50,   50,   50,    1,    2,   51,   51,   51,",
      "137:     51,   51,    1,    2,   52,   52,   52,   52,   52,    1,    2,   53,",
      "138:     53,   53,   53,   53,    1,    2,   54,   54,   54,   54,   54,    1,",
      "139:      2,   55,   55,   55,   55,   55,    1,    2,   56,   56,   56,   56,",
      "140:     56,    1,    2,   57,   57,   57,   57,   57,    1,    2,   58,   58,",
      "141:     58,   58,   58,    1,    2,   59,   59,   59,   59,   59,    1,    2,",
      "142:     60,   60,   60,   60,   60,    1,    2,   61,   61,   61,   61,   61,",
      "143:      1,    2,   62,   62,   62,   62,   62,    1,    2,   63,   63,   63,",
      "144:     63,   63,    1,    2,    1,    1,    0",
      "",
      "[Added Lines]",
      "128:     24,   23,   23,   23,   23,   23,   23,   23,   23,    1,   25,   26,",
      "129:     27,   25,    1,   28,   29,   28,    1,   30,    1,    1,    1,    1,",
      "130:      1,   31,   32,    1,    1,    1,    1,    1,   33,   34,   35,   34,",
      "131:     34,   34,   34,    1,    8,    1,    9,    1,    1,    1,    1,   35,",
      "132:     36,    1,   38,    1,    1,   39,    1,    1,   37,   40,    1,   42,",
      "133:      1,    1,    1,    1,   41,   43,    1,   45,    1,    1,    1,    1,",
      "134:     44,    2,   46,   46,   46,   46,   46,    1,    2,   47,   47,   47,",
      "135:     47,   47,    1,    2,   48,   48,   48,   48,   48,    1,    2,   49,",
      "136:     49,   49,   49,   49,    1,    2,   50,   50,   50,   50,   50,    1,",
      "137:      2,   51,   51,   51,   51,   51,    1,    2,   52,   52,   52,   52,",
      "138:     52,    1,    2,   53,   53,   53,   53,   53,    1,    2,   54,   54,",
      "139:     54,   54,   54,    1,    2,   55,   55,   55,   55,   55,    1,    2,",
      "140:     56,   56,   56,   56,   56,    1,    2,   57,   57,   57,   57,   57,",
      "141:      1,    2,   58,   58,   58,   58,   58,    1,    2,   59,   59,   59,",
      "142:     59,   59,    1,    2,   60,   60,   60,   60,   60,    1,    2,   61,",
      "143:     61,   61,   61,   61,    1,    2,   62,   62,   62,   62,   62,    1,",
      "144:      2,   63,   63,   63,   63,   63,    1,    2,    1,    1,    0",
      "",
      "---------------"
    ],
    "lib/puma/const.rb||lib/puma/const.rb": [
      "File: lib/puma/const.rb -> lib/puma/const.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "100:   # too taxing on performance.",
      "101:   module Const",
      "104:     CODE_NAME = \"Zawgyi\".freeze",
      "106:     PUMA_SERVER_STRING = ['puma', PUMA_VERSION, CODE_NAME].join(' ').freeze",
      "",
      "[Removed Lines]",
      "103:     PUMA_VERSION = VERSION = \"5.5.0\".freeze",
      "",
      "[Added Lines]",
      "103:     PUMA_VERSION = VERSION = \"5.5.1\".freeze",
      "",
      "---------------"
    ],
    "test/test_http11.rb||test/test_http11.rb": [
      "File: test/test_http11.rb -> test/test_http11.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "209:     assert_equal \"Strip This\", req[\"HTTP_X_STRIP_ME\"]",
      "210:   end",
      "211: end",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "212:   def test_newline_smuggler",
      "213:     parser = Puma::HttpParser.new",
      "214:     req = {}",
      "215:     http = \"GET / HTTP/1.1\\r\\nHost: localhost:8080\\r\\nDummy: x\\nDummy2: y\\r\\n\\r\\n\"",
      "217:     parser.execute(req, http, 0) rescue nil # We test the raise elsewhere.",
      "219:     assert parser.error?, \"Parser SHOULD have error\"",
      "220:   end",
      "222:   def test_newline_smuggler_two",
      "223:     parser = Puma::HttpParser.new",
      "224:     req = {}",
      "225:     http = \"GET / HTTP/1.1\\r\\nHost: localhost:8080\\r\\nDummy: x\\r\\nDummy: y\\nDummy2: z\\r\\n\\r\\n\"",
      "227:     parser.execute(req, http, 0) rescue nil",
      "229:     assert parser.error?, \"Parser SHOULD have error\"",
      "230:   end",
      "232:   def test_htab_in_header_val",
      "233:     parser = Puma::HttpParser.new",
      "234:     req = {}",
      "235:     http = \"GET / HTTP/1.1\\r\\nHost: localhost:8080\\r\\nDummy: Valid\\tValue\\r\\n\\r\\n\"",
      "237:     parser.execute(req, http, 0)",
      "239:     assert_equal \"Valid\\tValue\", req['HTTP_DUMMY']",
      "240:   end",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "643daa1db7637fb6079a5a07054398f39c753a75",
      "candidate_info": {
        "commit_hash": "643daa1db7637fb6079a5a07054398f39c753a75",
        "repo": "puma/puma",
        "commit_url": "https://github.com/puma/puma/commit/643daa1db7637fb6079a5a07054398f39c753a75",
        "files": [
          "History.md",
          "lib/puma/const.rb"
        ],
        "message": "5.6.3\n\n[ci skip]",
        "before_after_code_files": [
          "lib/puma/const.rb||lib/puma/const.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/puma/const.rb||lib/puma/const.rb"
          ],
          "candidate": [
            "lib/puma/const.rb||lib/puma/const.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/puma/const.rb||lib/puma/const.rb": [
          "File: lib/puma/const.rb -> lib/puma/const.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:   # too taxing on performance.",
          "101:   module Const",
          "104:     CODE_NAME = \"Birdie's Version\".freeze",
          "106:     PUMA_SERVER_STRING = ['puma', PUMA_VERSION, CODE_NAME].join(' ').freeze",
          "",
          "[Removed Lines]",
          "103:     PUMA_VERSION = VERSION = \"5.6.2\".freeze",
          "",
          "[Added Lines]",
          "103:     PUMA_VERSION = VERSION = \"5.6.3\".freeze",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3bace01d3009dabc6a7ea269b97bdfea455128cb",
      "candidate_info": {
        "commit_hash": "3bace01d3009dabc6a7ea269b97bdfea455128cb",
        "repo": "puma/puma",
        "commit_url": "https://github.com/puma/puma/commit/3bace01d3009dabc6a7ea269b97bdfea455128cb",
        "files": [
          "lib/puma/const.rb"
        ],
        "message": "5.6.5",
        "before_after_code_files": [
          "lib/puma/const.rb||lib/puma/const.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/puma/const.rb||lib/puma/const.rb"
          ],
          "candidate": [
            "lib/puma/const.rb||lib/puma/const.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/puma/const.rb||lib/puma/const.rb": [
          "File: lib/puma/const.rb -> lib/puma/const.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:   # too taxing on performance.",
          "101:   module Const",
          "104:     CODE_NAME = \"Birdie's Version\".freeze",
          "106:     PUMA_SERVER_STRING = ['puma', PUMA_VERSION, CODE_NAME].join(' ').freeze",
          "",
          "[Removed Lines]",
          "103:     PUMA_VERSION = VERSION = \"5.6.4\".freeze",
          "",
          "[Added Lines]",
          "103:     PUMA_VERSION = VERSION = \"5.6.5\".freeze",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b127d4cdf950264c96683e62faeae7e022d8f7cd",
      "candidate_info": {
        "commit_hash": "b127d4cdf950264c96683e62faeae7e022d8f7cd",
        "repo": "puma/puma",
        "commit_url": "https://github.com/puma/puma/commit/b127d4cdf950264c96683e62faeae7e022d8f7cd",
        "files": [
          "History.md",
          "lib/puma/const.rb"
        ],
        "message": "5.0.4",
        "before_after_code_files": [
          "lib/puma/const.rb||lib/puma/const.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/puma/const.rb||lib/puma/const.rb"
          ],
          "candidate": [
            "lib/puma/const.rb||lib/puma/const.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/puma/const.rb||lib/puma/const.rb": [
          "File: lib/puma/const.rb -> lib/puma/const.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:   # too taxing on performance.",
          "101:   module Const",
          "104:     CODE_NAME = \"Spoony Bard\".freeze",
          "106:     PUMA_SERVER_STRING = ['puma', PUMA_VERSION, CODE_NAME].join(' ').freeze",
          "",
          "[Removed Lines]",
          "103:     PUMA_VERSION = VERSION = \"5.0.3\".freeze",
          "",
          "[Added Lines]",
          "103:     PUMA_VERSION = VERSION = \"5.0.4\".freeze",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ea81fba045ce191644129cc772608765d1595511",
      "candidate_info": {
        "commit_hash": "ea81fba045ce191644129cc772608765d1595511",
        "repo": "puma/puma",
        "commit_url": "https://github.com/puma/puma/commit/ea81fba045ce191644129cc772608765d1595511",
        "files": [
          "History.md",
          "docs/compile_options.md",
          "ext/puma_http11/http11_parser.c",
          "ext/puma_http11/puma_http11.c"
        ],
        "message": "Allow configuring query string max length (#2485)\n\n* Allow configuring query string max length\n\n* Expand changable variable in puma_http11.c to make error messages helpful\n\n* Add compile options document and update changelog",
        "before_after_code_files": [
          "ext/puma_http11/http11_parser.c||ext/puma_http11/http11_parser.c",
          "ext/puma_http11/puma_http11.c||ext/puma_http11/puma_http11.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/puma_http11/http11_parser.c||ext/puma_http11/http11_parser.c"
          ],
          "candidate": [
            "ext/puma_http11/http11_parser.c||ext/puma_http11/http11_parser.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/puma_http11/http11_parser.c||ext/puma_http11/http11_parser.c": [
          "File: ext/puma_http11/http11_parser.c -> ext/puma_http11/http11_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "42: static const int puma_parser_start = 1;",
          "43: static const int puma_parser_first_final = 46;",
          "44: static const int puma_parser_error = 0;",
          "",
          "[Removed Lines]",
          "36: #line 79 \"ext/puma_http11/http11_parser.rl\"",
          "41: #line 40 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "36: #line 81 \"ext/puma_http11/http11_parser.rl\"",
          "41: #line 42 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46: static const int puma_parser_en_main = 1;",
          "51: int puma_parser_init(puma_parser *parser)  {",
          "52:   int cs = 0;",
          "55:  {",
          "56:  cs = puma_parser_start;",
          "57:  }",
          "60:   parser->cs = cs;",
          "61:   parser->body_start = 0;",
          "62:   parser->content_len = 0;",
          "",
          "[Removed Lines]",
          "49: #line 83 \"ext/puma_http11/http11_parser.rl\"",
          "54: #line 53 \"ext/puma_http11/http11_parser.c\"",
          "59: #line 87 \"ext/puma_http11/http11_parser.rl\"",
          "",
          "[Added Lines]",
          "49: #line 85 \"ext/puma_http11/http11_parser.rl\"",
          "54: #line 55 \"ext/puma_http11/http11_parser.c\"",
          "59: #line 89 \"ext/puma_http11/http11_parser.rl\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "85:   assert((size_t) (pe - p) == len - off && \"pointers aren't same distance\");",
          "89:  {",
          "90:  if ( p == pe )",
          "91:   goto _test_eof;",
          "",
          "[Removed Lines]",
          "88: #line 87 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "88: #line 89 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "109: cs = 0;",
          "110:  goto _out;",
          "111: tr0:",
          "113:  { MARK(mark, p); }",
          "114:  goto st2;",
          "115: st2:",
          "116:  if ( ++p == pe )",
          "117:   goto _test_eof2;",
          "118: case 2:",
          "120:  switch( (*p) ) {",
          "121:   case 32: goto tr2;",
          "122:   case 36: goto st27;",
          "",
          "[Removed Lines]",
          "112: #line 35 \"ext/puma_http11/http11_parser.rl\"",
          "119: #line 118 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "112: #line 37 \"ext/puma_http11/http11_parser.rl\"",
          "119: #line 120 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "132:   goto st27;",
          "133:  goto st0;",
          "134: tr2:",
          "136:  {",
          "137:     parser->request_method(parser, PTR_TO(mark), LEN(mark, p));",
          "138:   }",
          "",
          "[Removed Lines]",
          "135: #line 48 \"ext/puma_http11/http11_parser.rl\"",
          "",
          "[Added Lines]",
          "135: #line 50 \"ext/puma_http11/http11_parser.rl\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "141:  if ( ++p == pe )",
          "142:   goto _test_eof3;",
          "143: case 3:",
          "145:  switch( (*p) ) {",
          "146:   case 42: goto tr4;",
          "147:   case 43: goto tr5;",
          "",
          "[Removed Lines]",
          "144: #line 143 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "144: #line 145 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "158:   goto tr5;",
          "159:  goto st0;",
          "160: tr4:",
          "162:  { MARK(mark, p); }",
          "163:  goto st4;",
          "164: st4:",
          "165:  if ( ++p == pe )",
          "166:   goto _test_eof4;",
          "167: case 4:",
          "169:  switch( (*p) ) {",
          "170:   case 32: goto tr8;",
          "171:   case 35: goto tr9;",
          "172:  }",
          "173:  goto st0;",
          "174: tr8:",
          "176:  {",
          "177:     parser->request_uri(parser, PTR_TO(mark), LEN(mark, p));",
          "178:   }",
          "179:  goto st5;",
          "180: tr31:",
          "182:  { MARK(mark, p); }",
          "184:  {",
          "185:     parser->fragment(parser, PTR_TO(mark), LEN(mark, p));",
          "186:   }",
          "187:  goto st5;",
          "188: tr33:",
          "190:  {",
          "191:     parser->fragment(parser, PTR_TO(mark), LEN(mark, p));",
          "192:   }",
          "193:  goto st5;",
          "194: tr37:",
          "196:  {",
          "197:     parser->request_path(parser, PTR_TO(mark), LEN(mark,p));",
          "198:   }",
          "200:  {",
          "201:     parser->request_uri(parser, PTR_TO(mark), LEN(mark, p));",
          "202:   }",
          "203:  goto st5;",
          "204: tr41:",
          "206:  { MARK(query_start, p); }",
          "208:  {",
          "209:     parser->query_string(parser, PTR_TO(query_start), LEN(query_start, p));",
          "210:   }",
          "212:  {",
          "213:     parser->request_uri(parser, PTR_TO(mark), LEN(mark, p));",
          "214:   }",
          "215:  goto st5;",
          "216: tr44:",
          "218:  {",
          "219:     parser->query_string(parser, PTR_TO(query_start), LEN(query_start, p));",
          "220:   }",
          "222:  {",
          "223:     parser->request_uri(parser, PTR_TO(mark), LEN(mark, p));",
          "224:   }",
          "",
          "[Removed Lines]",
          "161: #line 35 \"ext/puma_http11/http11_parser.rl\"",
          "168: #line 167 \"ext/puma_http11/http11_parser.c\"",
          "175: #line 51 \"ext/puma_http11/http11_parser.rl\"",
          "181: #line 35 \"ext/puma_http11/http11_parser.rl\"",
          "183: #line 54 \"ext/puma_http11/http11_parser.rl\"",
          "189: #line 54 \"ext/puma_http11/http11_parser.rl\"",
          "195: #line 67 \"ext/puma_http11/http11_parser.rl\"",
          "199: #line 51 \"ext/puma_http11/http11_parser.rl\"",
          "205: #line 58 \"ext/puma_http11/http11_parser.rl\"",
          "207: #line 59 \"ext/puma_http11/http11_parser.rl\"",
          "211: #line 51 \"ext/puma_http11/http11_parser.rl\"",
          "217: #line 59 \"ext/puma_http11/http11_parser.rl\"",
          "221: #line 51 \"ext/puma_http11/http11_parser.rl\"",
          "",
          "[Added Lines]",
          "161: #line 37 \"ext/puma_http11/http11_parser.rl\"",
          "168: #line 169 \"ext/puma_http11/http11_parser.c\"",
          "175: #line 53 \"ext/puma_http11/http11_parser.rl\"",
          "181: #line 37 \"ext/puma_http11/http11_parser.rl\"",
          "183: #line 56 \"ext/puma_http11/http11_parser.rl\"",
          "189: #line 56 \"ext/puma_http11/http11_parser.rl\"",
          "195: #line 69 \"ext/puma_http11/http11_parser.rl\"",
          "199: #line 53 \"ext/puma_http11/http11_parser.rl\"",
          "205: #line 60 \"ext/puma_http11/http11_parser.rl\"",
          "207: #line 61 \"ext/puma_http11/http11_parser.rl\"",
          "211: #line 53 \"ext/puma_http11/http11_parser.rl\"",
          "217: #line 61 \"ext/puma_http11/http11_parser.rl\"",
          "221: #line 53 \"ext/puma_http11/http11_parser.rl\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "227:  if ( ++p == pe )",
          "228:   goto _test_eof5;",
          "229: case 5:",
          "231:  if ( (*p) == 72 )",
          "232:   goto tr10;",
          "233:  goto st0;",
          "234: tr10:",
          "236:  { MARK(mark, p); }",
          "237:  goto st6;",
          "238: st6:",
          "239:  if ( ++p == pe )",
          "240:   goto _test_eof6;",
          "241: case 6:",
          "243:  if ( (*p) == 84 )",
          "244:   goto st7;",
          "245:  goto st0;",
          "",
          "[Removed Lines]",
          "230: #line 229 \"ext/puma_http11/http11_parser.c\"",
          "235: #line 35 \"ext/puma_http11/http11_parser.rl\"",
          "242: #line 241 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "230: #line 231 \"ext/puma_http11/http11_parser.c\"",
          "235: #line 37 \"ext/puma_http11/http11_parser.rl\"",
          "242: #line 243 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "297:   goto st13;",
          "298:  goto st0;",
          "299: tr18:",
          "301:  {",
          "302:     parser->http_version(parser, PTR_TO(mark), LEN(mark, p));",
          "303:   }",
          "304:  goto st14;",
          "305: tr26:",
          "307:  { MARK(mark, p); }",
          "309:  {",
          "310:     parser->http_field(parser, PTR_TO(field_start), parser->field_len, PTR_TO(mark), LEN(mark, p));",
          "311:   }",
          "312:  goto st14;",
          "313: tr29:",
          "315:  {",
          "316:     parser->http_field(parser, PTR_TO(field_start), parser->field_len, PTR_TO(mark), LEN(mark, p));",
          "317:   }",
          "",
          "[Removed Lines]",
          "300: #line 63 \"ext/puma_http11/http11_parser.rl\"",
          "306: #line 44 \"ext/puma_http11/http11_parser.rl\"",
          "308: #line 45 \"ext/puma_http11/http11_parser.rl\"",
          "314: #line 45 \"ext/puma_http11/http11_parser.rl\"",
          "",
          "[Added Lines]",
          "300: #line 65 \"ext/puma_http11/http11_parser.rl\"",
          "306: #line 46 \"ext/puma_http11/http11_parser.rl\"",
          "308: #line 47 \"ext/puma_http11/http11_parser.rl\"",
          "314: #line 47 \"ext/puma_http11/http11_parser.rl\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "320:  if ( ++p == pe )",
          "321:   goto _test_eof14;",
          "322: case 14:",
          "324:  if ( (*p) == 10 )",
          "325:   goto st15;",
          "326:  goto st0;",
          "",
          "[Removed Lines]",
          "323: #line 322 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "323: #line 324 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "360:   goto tr22;",
          "361:  goto st0;",
          "362: tr22:",
          "364:  {",
          "365:     parser->body_start = p - buffer + 1;",
          "366:     parser->header_done(parser, p + 1, pe - p - 1);",
          "",
          "[Removed Lines]",
          "363: #line 71 \"ext/puma_http11/http11_parser.rl\"",
          "",
          "[Added Lines]",
          "363: #line 73 \"ext/puma_http11/http11_parser.rl\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "371:  if ( ++p == pe )",
          "372:   goto _test_eof46;",
          "373: case 46:",
          "375:  goto st0;",
          "376: tr21:",
          "378:  { MARK(field_start, p); }",
          "380:  { snake_upcase_char((char *)p); }",
          "381:  goto st17;",
          "382: tr23:",
          "384:  { snake_upcase_char((char *)p); }",
          "385:  goto st17;",
          "386: st17:",
          "387:  if ( ++p == pe )",
          "388:   goto _test_eof17;",
          "389: case 17:",
          "391:  switch( (*p) ) {",
          "392:   case 33: goto tr23;",
          "393:   case 58: goto tr24;",
          "",
          "[Removed Lines]",
          "374: #line 373 \"ext/puma_http11/http11_parser.c\"",
          "377: #line 38 \"ext/puma_http11/http11_parser.rl\"",
          "379: #line 39 \"ext/puma_http11/http11_parser.rl\"",
          "383: #line 39 \"ext/puma_http11/http11_parser.rl\"",
          "390: #line 389 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "374: #line 375 \"ext/puma_http11/http11_parser.c\"",
          "377: #line 40 \"ext/puma_http11/http11_parser.rl\"",
          "379: #line 41 \"ext/puma_http11/http11_parser.rl\"",
          "383: #line 41 \"ext/puma_http11/http11_parser.rl\"",
          "390: #line 391 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "413:   goto tr23;",
          "414:  goto st0;",
          "415: tr24:",
          "417:  {",
          "418:     parser->field_len = LEN(field_start, p);",
          "419:   }",
          "420:  goto st18;",
          "421: tr27:",
          "423:  { MARK(mark, p); }",
          "424:  goto st18;",
          "425: st18:",
          "426:  if ( ++p == pe )",
          "427:   goto _test_eof18;",
          "428: case 18:",
          "430:  switch( (*p) ) {",
          "431:   case 13: goto tr26;",
          "432:   case 32: goto tr27;",
          "433:  }",
          "434:  goto tr25;",
          "435: tr25:",
          "437:  { MARK(mark, p); }",
          "438:  goto st19;",
          "439: st19:",
          "440:  if ( ++p == pe )",
          "441:   goto _test_eof19;",
          "442: case 19:",
          "444:  if ( (*p) == 13 )",
          "445:   goto tr29;",
          "446:  goto st19;",
          "447: tr9:",
          "449:  {",
          "450:     parser->request_uri(parser, PTR_TO(mark), LEN(mark, p));",
          "451:   }",
          "452:  goto st20;",
          "453: tr38:",
          "455:  {",
          "456:     parser->request_path(parser, PTR_TO(mark), LEN(mark,p));",
          "457:   }",
          "459:  {",
          "460:     parser->request_uri(parser, PTR_TO(mark), LEN(mark, p));",
          "461:   }",
          "462:  goto st20;",
          "463: tr42:",
          "465:  { MARK(query_start, p); }",
          "467:  {",
          "468:     parser->query_string(parser, PTR_TO(query_start), LEN(query_start, p));",
          "469:   }",
          "471:  {",
          "472:     parser->request_uri(parser, PTR_TO(mark), LEN(mark, p));",
          "473:   }",
          "474:  goto st20;",
          "475: tr45:",
          "477:  {",
          "478:     parser->query_string(parser, PTR_TO(query_start), LEN(query_start, p));",
          "479:   }",
          "481:  {",
          "482:     parser->request_uri(parser, PTR_TO(mark), LEN(mark, p));",
          "483:   }",
          "",
          "[Removed Lines]",
          "416: #line 40 \"ext/puma_http11/http11_parser.rl\"",
          "422: #line 44 \"ext/puma_http11/http11_parser.rl\"",
          "429: #line 428 \"ext/puma_http11/http11_parser.c\"",
          "436: #line 44 \"ext/puma_http11/http11_parser.rl\"",
          "443: #line 442 \"ext/puma_http11/http11_parser.c\"",
          "448: #line 51 \"ext/puma_http11/http11_parser.rl\"",
          "454: #line 67 \"ext/puma_http11/http11_parser.rl\"",
          "458: #line 51 \"ext/puma_http11/http11_parser.rl\"",
          "464: #line 58 \"ext/puma_http11/http11_parser.rl\"",
          "466: #line 59 \"ext/puma_http11/http11_parser.rl\"",
          "470: #line 51 \"ext/puma_http11/http11_parser.rl\"",
          "476: #line 59 \"ext/puma_http11/http11_parser.rl\"",
          "480: #line 51 \"ext/puma_http11/http11_parser.rl\"",
          "",
          "[Added Lines]",
          "416: #line 42 \"ext/puma_http11/http11_parser.rl\"",
          "422: #line 46 \"ext/puma_http11/http11_parser.rl\"",
          "429: #line 430 \"ext/puma_http11/http11_parser.c\"",
          "436: #line 46 \"ext/puma_http11/http11_parser.rl\"",
          "443: #line 444 \"ext/puma_http11/http11_parser.c\"",
          "448: #line 53 \"ext/puma_http11/http11_parser.rl\"",
          "454: #line 69 \"ext/puma_http11/http11_parser.rl\"",
          "458: #line 53 \"ext/puma_http11/http11_parser.rl\"",
          "464: #line 60 \"ext/puma_http11/http11_parser.rl\"",
          "466: #line 61 \"ext/puma_http11/http11_parser.rl\"",
          "470: #line 53 \"ext/puma_http11/http11_parser.rl\"",
          "476: #line 61 \"ext/puma_http11/http11_parser.rl\"",
          "480: #line 53 \"ext/puma_http11/http11_parser.rl\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "486:  if ( ++p == pe )",
          "487:   goto _test_eof20;",
          "488: case 20:",
          "490:  switch( (*p) ) {",
          "491:   case 32: goto tr31;",
          "492:   case 60: goto st0;",
          "",
          "[Removed Lines]",
          "489: #line 488 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "489: #line 490 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "500:   goto st0;",
          "501:  goto tr30;",
          "502: tr30:",
          "504:  { MARK(mark, p); }",
          "505:  goto st21;",
          "506: st21:",
          "507:  if ( ++p == pe )",
          "508:   goto _test_eof21;",
          "509: case 21:",
          "511:  switch( (*p) ) {",
          "512:   case 32: goto tr33;",
          "513:   case 60: goto st0;",
          "",
          "[Removed Lines]",
          "503: #line 35 \"ext/puma_http11/http11_parser.rl\"",
          "510: #line 509 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "503: #line 37 \"ext/puma_http11/http11_parser.rl\"",
          "510: #line 511 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "521:   goto st0;",
          "522:  goto st21;",
          "523: tr5:",
          "525:  { MARK(mark, p); }",
          "526:  goto st22;",
          "527: st22:",
          "528:  if ( ++p == pe )",
          "529:   goto _test_eof22;",
          "530: case 22:",
          "532:  switch( (*p) ) {",
          "533:   case 43: goto st22;",
          "534:   case 58: goto st23;",
          "",
          "[Removed Lines]",
          "524: #line 35 \"ext/puma_http11/http11_parser.rl\"",
          "531: #line 530 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "524: #line 37 \"ext/puma_http11/http11_parser.rl\"",
          "531: #line 532 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "546:   goto st22;",
          "547:  goto st0;",
          "548: tr7:",
          "550:  { MARK(mark, p); }",
          "551:  goto st23;",
          "552: st23:",
          "553:  if ( ++p == pe )",
          "554:   goto _test_eof23;",
          "555: case 23:",
          "557:  switch( (*p) ) {",
          "558:   case 32: goto tr8;",
          "559:   case 34: goto st0;",
          "",
          "[Removed Lines]",
          "549: #line 35 \"ext/puma_http11/http11_parser.rl\"",
          "556: #line 555 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "549: #line 37 \"ext/puma_http11/http11_parser.rl\"",
          "556: #line 557 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "566:   goto st0;",
          "567:  goto st23;",
          "568: tr6:",
          "570:  { MARK(mark, p); }",
          "571:  goto st24;",
          "572: st24:",
          "573:  if ( ++p == pe )",
          "574:   goto _test_eof24;",
          "575: case 24:",
          "577:  switch( (*p) ) {",
          "578:   case 32: goto tr37;",
          "579:   case 34: goto st0;",
          "",
          "[Removed Lines]",
          "569: #line 35 \"ext/puma_http11/http11_parser.rl\"",
          "576: #line 575 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "569: #line 37 \"ext/puma_http11/http11_parser.rl\"",
          "576: #line 577 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "587:   goto st0;",
          "588:  goto st24;",
          "589: tr39:",
          "591:  {",
          "592:     parser->request_path(parser, PTR_TO(mark), LEN(mark,p));",
          "593:   }",
          "",
          "[Removed Lines]",
          "590: #line 67 \"ext/puma_http11/http11_parser.rl\"",
          "",
          "[Added Lines]",
          "590: #line 69 \"ext/puma_http11/http11_parser.rl\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "596:  if ( ++p == pe )",
          "597:   goto _test_eof25;",
          "598: case 25:",
          "600:  switch( (*p) ) {",
          "601:   case 32: goto tr41;",
          "602:   case 34: goto st0;",
          "",
          "[Removed Lines]",
          "599: #line 598 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "599: #line 600 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "609:   goto st0;",
          "610:  goto tr40;",
          "611: tr40:",
          "613:  { MARK(query_start, p); }",
          "614:  goto st26;",
          "615: st26:",
          "616:  if ( ++p == pe )",
          "617:   goto _test_eof26;",
          "618: case 26:",
          "620:  switch( (*p) ) {",
          "621:   case 32: goto tr44;",
          "622:   case 34: goto st0;",
          "",
          "[Removed Lines]",
          "612: #line 58 \"ext/puma_http11/http11_parser.rl\"",
          "619: #line 618 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "612: #line 60 \"ext/puma_http11/http11_parser.rl\"",
          "619: #line 620 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1010:  _out: {}",
          "1011:  }",
          "1015:   if (!puma_parser_has_error(parser))",
          "1016:     parser->cs = cs;",
          "",
          "[Removed Lines]",
          "1013: #line 115 \"ext/puma_http11/http11_parser.rl\"",
          "",
          "[Added Lines]",
          "1013: #line 117 \"ext/puma_http11/http11_parser.rl\"",
          "",
          "---------------"
        ],
        "ext/puma_http11/puma_http11.c||ext/puma_http11/puma_http11.c": [
          "File: ext/puma_http11/puma_http11.c -> ext/puma_http11/puma_http11.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "40: static VALUE global_request_path;",
          "46: #define VALIDATE_MAX_LENGTH(len, N) if(len > MAX_##N##_LENGTH) { rb_raise(eHttpParserError, MAX_##N##_LENGTH_ERR, len); }",
          "",
          "[Removed Lines]",
          "43: #define DEF_MAX_LENGTH(N,length) const size_t MAX_##N##_LENGTH = length; const char *MAX_##N##_LENGTH_ERR = \"HTTP element \" # N  \" is longer than the \" # length \" allowed length (was %d)\"",
          "",
          "[Added Lines]",
          "43: #define QUOTE(s) #s",
          "44: #define EXPLAND_MAX_LENGHT_VALUE(s) QUOTE(s)",
          "45: #define DEF_MAX_LENGTH(N,length) const size_t MAX_##N##_LENGTH = length; const char *MAX_##N##_LENGTH_ERR = \"HTTP element \" # N  \" is longer than the \" EXPLAND_MAX_LENGHT_VALUE(length) \" allowed length (was %d)\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53: DEF_MAX_LENGTH(FIELD_NAME, 256);",
          "54: DEF_MAX_LENGTH(FIELD_VALUE, 80 * 1024);",
          "55: DEF_MAX_LENGTH(REQUEST_URI, 1024 * 12);",
          "57: DEF_MAX_LENGTH(REQUEST_PATH, 8192);",
          "59: DEF_MAX_LENGTH(HEADER, (1024 * (80 + 32)));",
          "61: struct common_field {",
          "",
          "[Removed Lines]",
          "58: DEF_MAX_LENGTH(QUERY_STRING, (1024 * 10));",
          "",
          "[Added Lines]",
          "55: #ifndef PUMA_QUERY_STRING_MAX_LENGTH",
          "56: #define PUMA_QUERY_STRING_MAX_LENGTH (1024 * 10)",
          "57: #endif",
          "64: DEF_MAX_LENGTH(QUERY_STRING, PUMA_QUERY_STRING_MAX_LENGTH);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a2bcda414377ee3f5855a66ed83aa41ce6f0a29d",
      "candidate_info": {
        "commit_hash": "a2bcda414377ee3f5855a66ed83aa41ce6f0a29d",
        "repo": "puma/puma",
        "commit_url": "https://github.com/puma/puma/commit/a2bcda414377ee3f5855a66ed83aa41ce6f0a29d",
        "files": [
          "History.md",
          "lib/puma/const.rb"
        ],
        "message": "5.5.2",
        "before_after_code_files": [
          "lib/puma/const.rb||lib/puma/const.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/puma/const.rb||lib/puma/const.rb"
          ],
          "candidate": [
            "lib/puma/const.rb||lib/puma/const.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/puma/const.rb||lib/puma/const.rb": [
          "File: lib/puma/const.rb -> lib/puma/const.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:   # too taxing on performance.",
          "101:   module Const",
          "104:     CODE_NAME = \"Zawgyi\".freeze",
          "106:     PUMA_SERVER_STRING = ['puma', PUMA_VERSION, CODE_NAME].join(' ').freeze",
          "",
          "[Removed Lines]",
          "103:     PUMA_VERSION = VERSION = \"5.5.1\".freeze",
          "",
          "[Added Lines]",
          "103:     PUMA_VERSION = VERSION = \"5.5.2\".freeze",
          "",
          "---------------"
        ]
      }
    }
  ]
}