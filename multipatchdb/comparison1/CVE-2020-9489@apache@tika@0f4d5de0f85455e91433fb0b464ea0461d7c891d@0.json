{
  "cve_id": "CVE-2020-9489",
  "cve_desc": "A carefully crafted or corrupt file may trigger a System.exit in Tika's OneNote Parser. Crafted or corrupted files can also cause out of memory errors and/or infinite loops in Tika's ICNSParser, MP3Parser, MP4Parser, SAS7BDATParser, OneNoteParser and ImageParser. Apache Tika users should upgrade to 1.24.1 or later. The vulnerabilities in the MP4Parser were partially fixed by upgrading the com.googlecode:isoparser:1.1.22 dependency to org.tallison:isoparser:1.9.41.2. For unrelated security reasons, we upgraded org.apache.cxf to 3.3.6 as part of the 1.24.1 release.",
  "repo": "apache/tika",
  "patch_hash": "0f4d5de0f85455e91433fb0b464ea0461d7c891d",
  "patch_info": {
    "commit_hash": "0f4d5de0f85455e91433fb0b464ea0461d7c891d",
    "repo": "apache/tika",
    "commit_url": "https://github.com/apache/tika/commit/0f4d5de0f85455e91433fb0b464ea0461d7c891d",
    "files": [
      "tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java",
      "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/onenote/OneNotePtr.java"
    ],
    "message": "TIKA-3081 -- convert TikaInputStream's skip to the equivalent of skipFully",
    "before_after_code_files": [
      "tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java||tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java",
      "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/onenote/OneNotePtr.java||tika-parsers/src/main/java/org/apache/tika/parser/microsoft/onenote/OneNotePtr.java"
    ]
  },
  "patch_diff": {
    "tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java||tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java": [
      "File: tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java -> tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "64: public class TikaInputStream extends TaggedInputStream {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "72:     private static final int MAX_CONSECUTIVE_EOFS = 1000;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "686:         return position;",
      "687:     }",
      "689:     @Override",
      "690:     public long skip(long ln) throws IOException {",
      "692:         position += n;",
      "693:         return n;",
      "694:     }",
      "",
      "[Removed Lines]",
      "691:         long n = super.skip(ln);",
      "",
      "[Added Lines]",
      "708:         long n = IOUtils.skip(super.in, ln);",
      "709:         if (n != ln) {",
      "710:             throw new IOException(\"tried to skip \"+ln + \" but actually skipped: \"+n);",
      "711:         }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "732:             position += n;",
      "733:         } else {",
      "734:             consecutiveEOFs++;",
      "736:                 throw new IOException(\"Read too many -1 (EOFs); there could be an infinite loop.\" +",
      "737:                         \"If you think your file is not corrupt, please open an issue on Tika's JIRA\");",
      "738:             }",
      "",
      "[Removed Lines]",
      "735:             if (consecutiveEOFs > 1000) {",
      "",
      "[Added Lines]",
      "755:             if (consecutiveEOFs > MAX_CONSECUTIVE_EOFS) {",
      "",
      "---------------"
    ],
    "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/onenote/OneNotePtr.java||tika-parsers/src/main/java/org/apache/tika/parser/microsoft/onenote/OneNotePtr.java": [
      "File: tika-parsers/src/main/java/org/apache/tika/parser/microsoft/onenote/OneNotePtr.java -> tika-parsers/src/main/java/org/apache/tika/parser/microsoft/onenote/OneNotePtr.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "338:             CheckedFileNodePushBack pushBack = new CheckedFileNodePushBack(data);",
      "339:             try {",
      "340:                 FileNode fileNode = deserializeFileNode(data.children.get(data.children.size() - 1), curPath);",
      "341:                 if (fileNode.id == FndStructureConstants.ChunkTerminatorFND || fileNode.id == 0) {",
      "342:                     terminated = true;",
      "343:                     break;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "340:                 long initialOffset = offset;",
      "342:                 if (initialOffset == offset) {",
      "344:                     break;",
      "345:                 }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "678:         end = backup.end;",
      "680:         if (reserved != 1) {",
      "682:             throw new TikaException(\"RESERVED_NONZERO\");",
      "683:         }",
      "",
      "[Removed Lines]",
      "681:             System.exit(1);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e9b2c38663f61dce533d9490afa32e88221d5c73",
      "candidate_info": {
        "commit_hash": "e9b2c38663f61dce533d9490afa32e88221d5c73",
        "repo": "apache/tika",
        "commit_url": "https://github.com/apache/tika/commit/e9b2c38663f61dce533d9490afa32e88221d5c73",
        "files": [
          "tika-core/src/main/java/org/apache/tika/io/IOUtils.java",
          "tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java",
          "tika-core/src/test/java/org/apache/tika/MultiThreadedTikaTest.java",
          "tika-parsers/src/main/java/org/apache/tika/parser/hwp/HwpStreamReader.java",
          "tika-parsers/src/main/java/org/apache/tika/parser/hwp/HwpTextExtractorV5.java",
          "tika-parsers/src/test/java/org/apache/tika/parser/hwp/HwpV5ParserTest.java"
        ],
        "message": "TIKA-3092 -- fix multithreaded skipfully in HWP parser",
        "before_after_code_files": [
          "tika-core/src/main/java/org/apache/tika/io/IOUtils.java||tika-core/src/main/java/org/apache/tika/io/IOUtils.java",
          "tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java||tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java",
          "tika-core/src/test/java/org/apache/tika/MultiThreadedTikaTest.java||tika-core/src/test/java/org/apache/tika/MultiThreadedTikaTest.java",
          "tika-parsers/src/main/java/org/apache/tika/parser/hwp/HwpStreamReader.java||tika-parsers/src/main/java/org/apache/tika/parser/hwp/HwpStreamReader.java",
          "tika-parsers/src/main/java/org/apache/tika/parser/hwp/HwpTextExtractorV5.java||tika-parsers/src/main/java/org/apache/tika/parser/hwp/HwpTextExtractorV5.java",
          "tika-parsers/src/test/java/org/apache/tika/parser/hwp/HwpV5ParserTest.java||tika-parsers/src/test/java/org/apache/tika/parser/hwp/HwpV5ParserTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java||tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java"
          ],
          "candidate": [
            "tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java||tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java"
          ]
        }
      },
      "candidate_diff": {
        "tika-core/src/main/java/org/apache/tika/io/IOUtils.java||tika-core/src/main/java/org/apache/tika/io/IOUtils.java": [
          "File: tika-core/src/main/java/org/apache/tika/io/IOUtils.java -> tika-core/src/main/java/org/apache/tika/io/IOUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1264:         return toSkip - remain;",
          "1265:     }",
          "1267: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1267:     public static long skip(final InputStream input, final long toSkip, byte[] buffer) throws IOException {",
          "1268:         if (toSkip < 0) {",
          "1269:             throw new IllegalArgumentException(\"Skip count must be non-negative, actual: \" + toSkip);",
          "1270:         }",
          "1276:         long remain = toSkip;",
          "1277:         while (remain > 0) {",
          "1279:             final long n = input.read(buffer, 0, (int) Math.min(remain, buffer.length));",
          "1280:             if (n < 0) { // EOF",
          "1281:                 break;",
          "1282:             }",
          "1283:             remain -= n;",
          "1284:         }",
          "1285:         return toSkip - remain;",
          "1286:     }",
          "",
          "---------------"
        ],
        "tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java||tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java": [
          "File: tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java -> tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "480:     private int consecutiveEOFs = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "482:     private byte[] skipBuffer;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "706:     @Override",
          "707:     public long skip(long ln) throws IOException {",
          "709:         if (n != ln) {",
          "710:             throw new IOException(\"tried to skip \"+ln + \" but actually skipped: \"+n);",
          "711:         }",
          "",
          "[Removed Lines]",
          "708:         long n = IOUtils.skip(super.in, ln);",
          "",
          "[Added Lines]",
          "712:         if (skipBuffer == null) {",
          "713:             skipBuffer = new byte[4096];",
          "714:         }",
          "715:         long n = IOUtils.skip(super.in, ln, skipBuffer);",
          "",
          "---------------"
        ],
        "tika-core/src/test/java/org/apache/tika/MultiThreadedTikaTest.java||tika-core/src/test/java/org/apache/tika/MultiThreadedTikaTest.java": [
          "File: tika-core/src/test/java/org/apache/tika/MultiThreadedTikaTest.java -> tika-core/src/test/java/org/apache/tika/MultiThreadedTikaTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: import org.apache.tika.mime.MediaType;",
          "26: import org.apache.tika.parser.ParseContext;",
          "27: import org.apache.tika.parser.Parser;",
          "29: import org.apache.tika.sax.AbstractRecursiveParserWrapperHandler;",
          "30: import org.apache.tika.sax.BasicContentHandlerFactory;",
          "31: import org.apache.tika.sax.RecursiveParserWrapperHandler;",
          "",
          "[Removed Lines]",
          "28: import org.apache.tika.parser.RecursiveParserWrapper;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tika-parsers/src/main/java/org/apache/tika/parser/hwp/HwpStreamReader.java||tika-parsers/src/main/java/org/apache/tika/parser/hwp/HwpStreamReader.java": [
          "File: tika-parsers/src/main/java/org/apache/tika/parser/hwp/HwpStreamReader.java -> tika-parsers/src/main/java/org/apache/tika/parser/hwp/HwpStreamReader.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: import org.apache.poi.util.LittleEndian;",
          "26: public class HwpStreamReader {",
          "27:     private InputStream input;",
          "28:     private byte[] buf;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27:     private byte[] skipBuffer = new byte[4096];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32:         buf = new byte[4];",
          "33:     }",
          "",
          "[Removed Lines]",
          "41:     public boolean available() throws IOException {",
          "42:         return input.available() > 0;",
          "43:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "131:     public void ensureSkip(long n) throws IOException {",
          "133:     }",
          "134: }",
          "",
          "[Removed Lines]",
          "132:         IOUtils.skipFully(input, n);",
          "",
          "[Added Lines]",
          "127:         long skipped = org.apache.tika.io.IOUtils.skip(input, n, skipBuffer);",
          "128:         if (skipped != n) {",
          "129:             throw new EOFException();",
          "130:         }",
          "",
          "---------------"
        ],
        "tika-parsers/src/main/java/org/apache/tika/parser/hwp/HwpTextExtractorV5.java||tika-parsers/src/main/java/org/apache/tika/parser/hwp/HwpTextExtractorV5.java": [
          "File: tika-parsers/src/main/java/org/apache/tika/parser/hwp/HwpTextExtractorV5.java -> tika-parsers/src/main/java/org/apache/tika/parser/hwp/HwpTextExtractorV5.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: import java.util.zip.Inflater;",
          "38: import java.util.zip.InflaterInputStream;",
          "40: import org.apache.poi.hpsf.NoPropertySetStreamException;",
          "41: import org.apache.poi.hpsf.Property;",
          "42: import org.apache.poi.hpsf.PropertySet;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40: import org.apache.commons.compress.compressors.deflate.DeflateParameters;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "385:     private void parse(HwpStreamReader reader, XHTMLContentHandler xhtml)",
          "386:             throws IOException, SAXException {",
          "388:         TagInfo tag = new TagInfo();",
          "390:         while (true) {",
          "",
          "[Removed Lines]",
          "387:         StringBuffer buf = new StringBuffer(1024);",
          "",
          "[Added Lines]",
          "387:         StringBuilder buf = new StringBuilder();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "423:     private void writeParaText(HwpStreamReader reader, long datasize,",
          "425:         int[] chars = reader.uint16((int) (datasize / 2));",
          "427:         for (int index = 0; index < chars.length; index++) {",
          "",
          "[Removed Lines]",
          "424:                                StringBuffer buf) throws IOException {",
          "",
          "[Added Lines]",
          "424:                                StringBuilder buf) throws IOException {",
          "",
          "---------------"
        ],
        "tika-parsers/src/test/java/org/apache/tika/parser/hwp/HwpV5ParserTest.java||tika-parsers/src/test/java/org/apache/tika/parser/hwp/HwpV5ParserTest.java": [
          "File: tika-parsers/src/test/java/org/apache/tika/parser/hwp/HwpV5ParserTest.java -> tika-parsers/src/test/java/org/apache/tika/parser/hwp/HwpV5ParserTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: import static org.junit.Assert.assertEquals;",
          "21: import org.apache.tika.TikaTest;",
          "22: import org.apache.tika.metadata.Metadata;",
          "23: import org.apache.tika.metadata.TikaCoreProperties;",
          "24: import org.apache.tika.parser.Parser;",
          "25: import org.junit.Test;",
          "29:     @Test",
          "30:     public void testHwpV5Parser() throws Exception {",
          "",
          "[Removed Lines]",
          "27: public class HwpV5ParserTest extends TikaTest {",
          "",
          "[Added Lines]",
          "21: import org.apache.commons.io.filefilter.RegexFileFilter;",
          "22: import org.apache.tika.MultiThreadedTikaTest;",
          "26: import org.apache.tika.parser.ParseContext;",
          "28: import org.apache.tika.parser.RecursiveParserWrapper;",
          "31: import java.nio.file.Paths;",
          "33: public class HwpV5ParserTest extends MultiThreadedTikaTest {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "65:         assertEquals(\"next1009\", metadata.get(TikaCoreProperties.CREATOR));",
          "66:         assertEquals(\"\\uD14C\\uC2A4\\uD2B8\", metadata.get(TikaCoreProperties.TITLE));",
          "67:     }",
          "68: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "75:     @Test",
          "76:     public void testMultiThreadedSkipFully() throws Exception {",
          "78:         int numThreads = 2;",
          "79:         int numIterations = 50;",
          "80:         ParseContext[] parseContexts = new ParseContext[numThreads];",
          "82:         testMultiThreaded(new RecursiveParserWrapper(AUTO_DETECT_PARSER), parseContexts, numThreads, numIterations,",
          "83:                 new RegexFileFilter(\".*\\\\.hwp\"));",
          "84:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aaa9f40e3c8119f1a155e3f1eea5c2ffe7f4f26f",
      "candidate_info": {
        "commit_hash": "aaa9f40e3c8119f1a155e3f1eea5c2ffe7f4f26f",
        "repo": "apache/tika",
        "commit_url": "https://github.com/apache/tika/commit/aaa9f40e3c8119f1a155e3f1eea5c2ffe7f4f26f",
        "files": [
          "tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java",
          "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/onenote/OneNotePtr.java"
        ],
        "message": "TIKA-3081 -- convert TikaInputStream's skip to the equivalent of skipFully",
        "before_after_code_files": [
          "tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java||tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java",
          "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/onenote/OneNotePtr.java||tika-parsers/src/main/java/org/apache/tika/parser/microsoft/onenote/OneNotePtr.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java||tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java",
            "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/onenote/OneNotePtr.java||tika-parsers/src/main/java/org/apache/tika/parser/microsoft/onenote/OneNotePtr.java"
          ],
          "candidate": [
            "tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java||tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java",
            "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/onenote/OneNotePtr.java||tika-parsers/src/main/java/org/apache/tika/parser/microsoft/onenote/OneNotePtr.java"
          ]
        }
      },
      "candidate_diff": {
        "tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java||tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java": [
          "File: tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java -> tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "66: public class TikaInputStream extends TaggedInputStream {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74:     private static final int MAX_CONSECUTIVE_EOFS = 1000;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "731:         return position;",
          "732:     }",
          "734:     @Override",
          "735:     public long skip(long ln) throws IOException {",
          "737:         position += n;",
          "738:         return n;",
          "739:     }",
          "",
          "[Removed Lines]",
          "736:         long n = super.skip(ln);",
          "",
          "[Added Lines]",
          "753:         long n = IOUtils.skip(super.in, ln);",
          "754:         if (n != ln) {",
          "755:             throw new IOException(\"tried to skip \"+ln + \" but actually skipped: \"+n);",
          "756:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "777:             position += n;",
          "778:         } else {",
          "779:             consecutiveEOFs++;",
          "781:                 throw new IOException(\"Read too many -1 (EOFs); there could be an infinite loop.\" +",
          "782:                         \"If you think your file is not corrupt, please open an issue on Tika's JIRA\");",
          "783:             }",
          "",
          "[Removed Lines]",
          "780:             if (consecutiveEOFs > 1000) {",
          "",
          "[Added Lines]",
          "800:             if (consecutiveEOFs > MAX_CONSECUTIVE_EOFS) {",
          "",
          "---------------"
        ],
        "tika-parsers/src/main/java/org/apache/tika/parser/microsoft/onenote/OneNotePtr.java||tika-parsers/src/main/java/org/apache/tika/parser/microsoft/onenote/OneNotePtr.java": [
          "File: tika-parsers/src/main/java/org/apache/tika/parser/microsoft/onenote/OneNotePtr.java -> tika-parsers/src/main/java/org/apache/tika/parser/microsoft/onenote/OneNotePtr.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "338:             CheckedFileNodePushBack pushBack = new CheckedFileNodePushBack(data);",
          "339:             try {",
          "340:                 FileNode fileNode = deserializeFileNode(data.children.get(data.children.size() - 1), curPath);",
          "341:                 if (fileNode.id == FndStructureConstants.ChunkTerminatorFND || fileNode.id == 0) {",
          "342:                     terminated = true;",
          "343:                     break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "340:                 long initialOffset = offset;",
          "342:                 if (initialOffset == offset) {",
          "344:                     break;",
          "345:                 }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "678:         end = backup.end;",
          "680:         if (reserved != 1) {",
          "682:             throw new TikaException(\"RESERVED_NONZERO\");",
          "683:         }",
          "",
          "[Removed Lines]",
          "681:             System.exit(1);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}