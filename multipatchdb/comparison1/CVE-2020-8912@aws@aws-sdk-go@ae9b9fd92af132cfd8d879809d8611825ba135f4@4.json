{
  "cve_id": "CVE-2020-8912",
  "cve_desc": "A vulnerability in the in-band key negotiation exists in the AWS S3 Crypto SDK for GoLang versions prior to V2. An attacker with write access to the targeted bucket can change the encryption algorithm of an object in the bucket, which can then allow them to change AES-GCM to AES-CTR. Using this in combination with a decryption oracle can reveal the authentication key used by AES-GCM as decrypting the GMAC tag leaves the authentication key recoverable as an algebraic equation. It is recommended to update your SDK to V2 or later, and re-encrypt your files.",
  "repo": "aws/aws-sdk-go",
  "patch_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
  "patch_info": {
    "commit_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
    "repo": "aws/aws-sdk-go",
    "commit_url": "https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4",
    "files": [
      "CHANGELOG.md",
      "CHANGELOG_PENDING.md",
      "aws/endpoints/defaults.go",
      "aws/version.go",
      "models/apis/glue/2017-03-31/api-2.json",
      "models/apis/glue/2017-03-31/docs-2.json",
      "models/apis/organizations/2016-11-28/api-2.json",
      "models/apis/organizations/2016-11-28/docs-2.json",
      "models/apis/s3/2006-03-01/docs-2.json",
      "models/apis/s3/2006-03-01/examples-1.json",
      "models/apis/sms/2016-10-24/api-2.json",
      "models/apis/sms/2016-10-24/docs-2.json",
      "models/endpoints/endpoints.json",
      "service/glue/api.go",
      "service/organizations/api.go",
      "service/s3/api.go",
      "service/s3/examples_test.go",
      "service/s3/s3manager/upload_input.go",
      "service/sms/api.go",
      "service/sms/doc.go",
      "service/sms/errors.go",
      "service/sms/smsiface/interface.go"
    ],
    "message": "Release v1.34.0 (2020-08-07) ===\n\n### Service Client Updates\n* `service/glue`: Updates service API and documentation\n  * AWS Glue now adds support for Network connection type enabling you to access resources inside your VPC using Glue crawlers and Glue ETL jobs.\n* `service/organizations`: Updates service API and documentation\n  * Documentation updates for some new error reasons.\n* `service/s3`: Updates service documentation and examples\n  * Updates Amazon S3 API reference documentation.\n* `service/sms`: Updates service API and documentation\n  * In this release, AWS Server Migration Service (SMS) has added new features: 1. APIs to work with application and instance level validation 2. Import application catalog from AWS Application Discovery Service 3. For an application you can start on-demand replication\n\n### SDK Features\n* `service/s3/s3crypto`: Updates to the Amazon S3 Encryption Client - This change includes fixes for issues that were reported by Sophie Schmieg from the Google ISE team, and for issues that were discovered by AWS Cryptography.",
    "before_after_code_files": [
      "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
      "aws/version.go||aws/version.go",
      "service/glue/api.go||service/glue/api.go",
      "service/organizations/api.go||service/organizations/api.go",
      "service/s3/api.go||service/s3/api.go",
      "service/s3/examples_test.go||service/s3/examples_test.go",
      "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go",
      "service/sms/api.go||service/sms/api.go",
      "service/sms/doc.go||service/sms/doc.go",
      "service/sms/errors.go||service/sms/errors.go",
      "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go"
    ]
  },
  "patch_diff": {
    "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
      "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "2084:     Protocols: []string{\"http\", \"https\"},",
      "2085:    },",
      "2086:    Endpoints: endpoints{",
      "2087:     \"ap-east-1\":      endpoint{},",
      "2088:     \"ap-northeast-1\": endpoint{},",
      "2089:     \"ap-northeast-2\": endpoint{},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2087:     \"af-south-1\":     endpoint{},",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2093:     \"ca-central-1\":   endpoint{},",
      "2094:     \"eu-central-1\":   endpoint{},",
      "2095:     \"eu-north-1\":     endpoint{},",
      "2096:     \"eu-west-1\":      endpoint{},",
      "2097:     \"eu-west-2\":      endpoint{},",
      "2098:     \"eu-west-3\":      endpoint{},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2097:     \"eu-south-1\":     endpoint{},",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3959:   \"neptune\": service{",
      "3961:    Endpoints: endpoints{",
      "3962:     \"ap-northeast-1\": endpoint{",
      "3963:      Hostname: \"rds.ap-northeast-1.amazonaws.com\",",
      "3964:      CredentialScope: credentialScope{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3964:     \"ap-east-1\": endpoint{",
      "3965:      Hostname: \"rds.ap-east-1.amazonaws.com\",",
      "3966:      CredentialScope: credentialScope{",
      "3967:       Region: \"ap-east-1\",",
      "3968:      },",
      "3969:     },",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "4031:       Region: \"me-south-1\",",
      "4032:      },",
      "4033:     },",
      "4034:     \"us-east-1\": endpoint{",
      "4035:      Hostname: \"rds.us-east-1.amazonaws.com\",",
      "4036:      CredentialScope: credentialScope{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4042:     \"sa-east-1\": endpoint{",
      "4043:      Hostname: \"rds.sa-east-1.amazonaws.com\",",
      "4044:      CredentialScope: credentialScope{",
      "4045:       Region: \"sa-east-1\",",
      "4046:      },",
      "4047:     },",
      "",
      "---------------"
    ],
    "aws/version.go||aws/version.go": [
      "File: aws/version.go -> aws/version.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: const SDKName = \"aws-sdk-go\"",
      "",
      "[Removed Lines]",
      "8: const SDKVersion = \"1.33.21\"",
      "",
      "[Added Lines]",
      "8: const SDKVersion = \"1.34.0\"",
      "",
      "---------------"
    ],
    "service/glue/api.go||service/glue/api.go": [
      "File: service/glue/api.go -> service/glue/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "31277: type S3Target struct {",
      "31278:  _ struct{} `type:\"structure\"`",
      "31282:  Exclusions []*string `type:\"list\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31285:  ConnectionName *string `type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "31295:  return s.String()",
      "31296: }",
      "31299: func (s *S3Target) SetExclusions(v []*string) *S3Target {",
      "31300:  s.Exclusions = v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31306: func (s *S3Target) SetConnectionName(v string) *S3Target {",
      "31307:  s.ConnectionName = &v",
      "31308:  return s",
      "31309: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "37451:  ConnectionTypeKafka = \"KAFKA\"",
      "37452: )",
      "37454: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "37467:  ConnectionTypeNetwork = \"NETWORK\"",
      "",
      "---------------"
    ],
    "service/organizations/api.go||service/organizations/api.go": [
      "File: service/organizations/api.go -> service/organizations/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "22129:  CreateAccountFailureReasonGovcloudAccountAlreadyExists = \"GOVCLOUD_ACCOUNT_ALREADY_EXISTS\"",
      "22130: )",
      "22132: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22141:  CreateAccountFailureReasonMissingBusinessValidation = \"MISSING_BUSINESS_VALIDATION\"",
      "22144:  CreateAccountFailureReasonMissingPaymentInstrument = \"MISSING_PAYMENT_INSTRUMENT\"",
      "",
      "---------------"
    ],
    "service/s3/api.go||service/s3/api.go": [
      "File: service/s3/api.go -> service/s3/api.go"
    ],
    "service/s3/examples_test.go||service/s3/examples_test.go": [
      "File: service/s3/examples_test.go -> service/s3/examples_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "467:  fmt.Println(result)",
      "468: }",
      "474: func ExampleS3_DeleteObjectTagging_shared00() {",
      "475:  svc := s3.New(session.New())",
      "476:  input := &s3.DeleteObjectTaggingInput{",
      "480:  }",
      "482:  result, err := svc.DeleteObjectTagging(input)",
      "",
      "[Removed Lines]",
      "477:   Bucket:    aws.String(\"examplebucket\"),",
      "478:   Key:       aws.String(\"HappyFace.jpg\"),",
      "479:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
      "",
      "[Added Lines]",
      "478:   Bucket: aws.String(\"examplebucket\"),",
      "479:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "497:  fmt.Println(result)",
      "498: }",
      "505: func ExampleS3_DeleteObjectTagging_shared01() {",
      "506:  svc := s3.New(session.New())",
      "507:  input := &s3.DeleteObjectTaggingInput{",
      "510:  }",
      "512:  result, err := svc.DeleteObjectTagging(input)",
      "",
      "[Removed Lines]",
      "508:   Bucket: aws.String(\"examplebucket\"),",
      "509:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "[Added Lines]",
      "507:   Bucket:    aws.String(\"examplebucket\"),",
      "508:   Key:       aws.String(\"HappyFace.jpg\"),",
      "509:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1197:  fmt.Println(result)",
      "1198: }",
      "1204: func ExampleS3_ListMultipartUploads_shared00() {",
      "1205:  svc := s3.New(session.New())",
      "1206:  input := &s3.ListMultipartUploadsInput{",
      "1211:  }",
      "1213:  result, err := svc.ListMultipartUploads(input)",
      "",
      "[Removed Lines]",
      "1207:   Bucket:         aws.String(\"examplebucket\"),",
      "1208:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
      "1209:   MaxUploads:     aws.Int64(2),",
      "1210:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
      "",
      "[Added Lines]",
      "1206:   Bucket: aws.String(\"examplebucket\"),",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1228:  fmt.Println(result)",
      "1229: }",
      "1234: func ExampleS3_ListMultipartUploads_shared01() {",
      "1235:  svc := s3.New(session.New())",
      "1236:  input := &s3.ListMultipartUploadsInput{",
      "1238:  }",
      "1240:  result, err := svc.ListMultipartUploads(input)",
      "",
      "[Removed Lines]",
      "1237:   Bucket: aws.String(\"examplebucket\"),",
      "",
      "[Added Lines]",
      "1234:   Bucket:         aws.String(\"examplebucket\"),",
      "1235:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
      "1236:   MaxUploads:     aws.Int64(2),",
      "1237:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1804:  fmt.Println(result)",
      "1805: }",
      "1812: func ExampleS3_PutObject_shared00() {",
      "1813:  svc := s3.New(session.New())",
      "1814:  input := &s3.PutObjectInput{",
      "1820:  }",
      "1822:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1815:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1816:   Bucket:               aws.String(\"examplebucket\"),",
      "1817:   Key:                  aws.String(\"exampleobject\"),",
      "1818:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1819:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
      "",
      "[Added Lines]",
      "1814:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1815:   Bucket: aws.String(\"examplebucket\"),",
      "1816:   Key:    aws.String(\"exampleobject\"),",
      "1817:   Metadata: map[string]*string{",
      "1818:    \"metadata1\": aws.String(\"value1\"),",
      "1819:    \"metadata2\": aws.String(\"value2\"),",
      "1820:   },",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1837:  fmt.Println(result)",
      "1838: }",
      "1844: func ExampleS3_PutObject_shared01() {",
      "1845:  svc := s3.New(session.New())",
      "1846:  input := &s3.PutObjectInput{",
      "1847:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1848:   Bucket: aws.String(\"examplebucket\"),",
      "1850:  }",
      "1852:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1849:   Key:    aws.String(\"objectkey\"),",
      "",
      "[Added Lines]",
      "1849:   ACL:    aws.String(\"authenticated-read\"),",
      "1852:   Key:    aws.String(\"exampleobject\"),",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1867:  fmt.Println(result)",
      "1868: }",
      "1874: func ExampleS3_PutObject_shared02() {",
      "1875:  svc := s3.New(session.New())",
      "1876:  input := &s3.PutObjectInput{",
      "1881:  }",
      "1883:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1877:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
      "1878:   Bucket:  aws.String(\"examplebucket\"),",
      "1879:   Key:     aws.String(\"HappyFace.jpg\"),",
      "1880:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
      "",
      "[Added Lines]",
      "1880:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1881:   Bucket: aws.String(\"examplebucket\"),",
      "1882:   Key:    aws.String(\"objectkey\"),",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1898:  fmt.Println(result)",
      "1899: }",
      "1905: func ExampleS3_PutObject_shared03() {",
      "1906:  svc := s3.New(session.New())",
      "1907:  input := &s3.PutObjectInput{",
      "1913:  }",
      "1915:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1908:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "1909:   Bucket:               aws.String(\"examplebucket\"),",
      "1910:   Key:                  aws.String(\"HappyFace.jpg\"),",
      "1911:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1912:   StorageClass:         aws.String(\"STANDARD_IA\"),",
      "",
      "[Added Lines]",
      "1911:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "1912:   Bucket: aws.String(\"examplebucket\"),",
      "1913:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1930:  fmt.Println(result)",
      "1931: }",
      "1937: func ExampleS3_PutObject_shared04() {",
      "1938:  svc := s3.New(session.New())",
      "1939:  input := &s3.PutObjectInput{",
      "1947:  }",
      "1949:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1940:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1941:   Bucket: aws.String(\"examplebucket\"),",
      "1942:   Key:    aws.String(\"exampleobject\"),",
      "1943:   Metadata: map[string]*string{",
      "1944:    \"metadata1\": aws.String(\"value1\"),",
      "1945:    \"metadata2\": aws.String(\"value2\"),",
      "1946:   },",
      "",
      "[Added Lines]",
      "1941:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
      "1942:   Bucket:  aws.String(\"examplebucket\"),",
      "1943:   Key:     aws.String(\"HappyFace.jpg\"),",
      "1944:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1964:  fmt.Println(result)",
      "1965: }",
      "1972: func ExampleS3_PutObject_shared05() {",
      "1973:  svc := s3.New(session.New())",
      "1974:  input := &s3.PutObjectInput{",
      "1979:  }",
      "1981:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1975:   ACL:    aws.String(\"authenticated-read\"),",
      "1976:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1977:   Bucket: aws.String(\"examplebucket\"),",
      "1978:   Key:    aws.String(\"exampleobject\"),",
      "",
      "[Added Lines]",
      "1973:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1974:   Bucket:               aws.String(\"examplebucket\"),",
      "1975:   Key:                  aws.String(\"exampleobject\"),",
      "1976:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1977:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1996:  fmt.Println(result)",
      "1997: }",
      "2004: func ExampleS3_PutObject_shared06() {",
      "2005:  svc := s3.New(session.New())",
      "2006:  input := &s3.PutObjectInput{",
      "2010:  }",
      "2012:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "2007:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "2008:   Bucket: aws.String(\"examplebucket\"),",
      "2009:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "[Added Lines]",
      "2005:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "2006:   Bucket:               aws.String(\"examplebucket\"),",
      "2007:   Key:                  aws.String(\"HappyFace.jpg\"),",
      "2008:   ServerSideEncryption: aws.String(\"AES256\"),",
      "2009:   StorageClass:         aws.String(\"STANDARD_IA\"),",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "2171:  fmt.Println(result)",
      "2172: }",
      "2178: func ExampleS3_UploadPartCopy_shared00() {",
      "2179:  svc := s3.New(session.New())",
      "2180:  input := &s3.UploadPartCopyInput{",
      "2186:  }",
      "2188:  result, err := svc.UploadPartCopy(input)",
      "",
      "[Removed Lines]",
      "2181:   Bucket:     aws.String(\"examplebucket\"),",
      "2182:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
      "2183:   Key:        aws.String(\"examplelargeobject\"),",
      "2184:   PartNumber: aws.Int64(1),",
      "2185:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "[Added Lines]",
      "2181:   Bucket:          aws.String(\"examplebucket\"),",
      "2182:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
      "2183:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
      "2184:   Key:             aws.String(\"examplelargeobject\"),",
      "2185:   PartNumber:      aws.Int64(2),",
      "2186:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "2203:  fmt.Println(result)",
      "2204: }",
      "2210: func ExampleS3_UploadPartCopy_shared01() {",
      "2211:  svc := s3.New(session.New())",
      "2212:  input := &s3.UploadPartCopyInput{",
      "2219:  }",
      "2221:  result, err := svc.UploadPartCopy(input)",
      "",
      "[Removed Lines]",
      "2213:   Bucket:          aws.String(\"examplebucket\"),",
      "2214:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
      "2215:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
      "2216:   Key:             aws.String(\"examplelargeobject\"),",
      "2217:   PartNumber:      aws.Int64(2),",
      "2218:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "[Added Lines]",
      "2214:   Bucket:     aws.String(\"examplebucket\"),",
      "2215:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
      "2216:   Key:        aws.String(\"examplelargeobject\"),",
      "2217:   PartNumber: aws.Int64(1),",
      "2218:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "---------------"
    ],
    "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go": [
      "File: service/s3/s3manager/upload_input.go -> service/s3/s3manager/upload_input.go"
    ],
    "service/sms/api.go||service/sms/api.go": [
      "File: service/sms/api.go -> service/sms/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "493:  return out, req.Send()",
      "494: }",
      "496: const opDeleteReplicationJob = \"DeleteReplicationJob\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "496: const opDeleteAppValidationConfiguration = \"DeleteAppValidationConfiguration\"",
      "522: func (c *SMS) DeleteAppValidationConfigurationRequest(input *DeleteAppValidationConfigurationInput) (req *request.Request, output *DeleteAppValidationConfigurationOutput) {",
      "523:  op := &request.Operation{",
      "524:   Name:       opDeleteAppValidationConfiguration,",
      "525:   HTTPMethod: \"POST\",",
      "526:   HTTPPath:   \"/\",",
      "527:  }",
      "529:  if input == nil {",
      "530:   input = &DeleteAppValidationConfigurationInput{}",
      "531:  }",
      "533:  output = &DeleteAppValidationConfigurationOutput{}",
      "534:  req = c.newRequest(op, input, output)",
      "535:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "536:  return",
      "537: }",
      "568: func (c *SMS) DeleteAppValidationConfiguration(input *DeleteAppValidationConfigurationInput) (*DeleteAppValidationConfigurationOutput, error) {",
      "569:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
      "570:  return out, req.Send()",
      "571: }",
      "582: func (c *SMS) DeleteAppValidationConfigurationWithContext(ctx aws.Context, input *DeleteAppValidationConfigurationInput, opts ...request.Option) (*DeleteAppValidationConfigurationOutput, error) {",
      "583:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
      "584:  req.SetContext(ctx)",
      "585:  req.ApplyOptions(opts...)",
      "586:  return out, req.Send()",
      "587: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1235:  return out, req.Send()",
      "1236: }",
      "1238: const opGetConnectors = \"GetConnectors\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1333: const opGetAppValidationConfiguration = \"GetAppValidationConfiguration\"",
      "1359: func (c *SMS) GetAppValidationConfigurationRequest(input *GetAppValidationConfigurationInput) (req *request.Request, output *GetAppValidationConfigurationOutput) {",
      "1360:  op := &request.Operation{",
      "1361:   Name:       opGetAppValidationConfiguration,",
      "1362:   HTTPMethod: \"POST\",",
      "1363:   HTTPPath:   \"/\",",
      "1364:  }",
      "1366:  if input == nil {",
      "1367:   input = &GetAppValidationConfigurationInput{}",
      "1368:  }",
      "1370:  output = &GetAppValidationConfigurationOutput{}",
      "1371:  req = c.newRequest(op, input, output)",
      "1372:  return",
      "1373: }",
      "1404: func (c *SMS) GetAppValidationConfiguration(input *GetAppValidationConfigurationInput) (*GetAppValidationConfigurationOutput, error) {",
      "1405:  req, out := c.GetAppValidationConfigurationRequest(input)",
      "1406:  return out, req.Send()",
      "1407: }",
      "1418: func (c *SMS) GetAppValidationConfigurationWithContext(ctx aws.Context, input *GetAppValidationConfigurationInput, opts ...request.Option) (*GetAppValidationConfigurationOutput, error) {",
      "1419:  req, out := c.GetAppValidationConfigurationRequest(input)",
      "1420:  req.SetContext(ctx)",
      "1421:  req.ApplyOptions(opts...)",
      "1422:  return out, req.Send()",
      "1423: }",
      "1425: const opGetAppValidationOutput = \"GetAppValidationOutput\"",
      "1451: func (c *SMS) GetAppValidationOutputRequest(input *GetAppValidationOutputInput) (req *request.Request, output *GetAppValidationOutputOutput) {",
      "1452:  op := &request.Operation{",
      "1453:   Name:       opGetAppValidationOutput,",
      "1454:   HTTPMethod: \"POST\",",
      "1455:   HTTPPath:   \"/\",",
      "1456:  }",
      "1458:  if input == nil {",
      "1459:   input = &GetAppValidationOutputInput{}",
      "1460:  }",
      "1462:  output = &GetAppValidationOutputOutput{}",
      "1463:  req = c.newRequest(op, input, output)",
      "1464:  return",
      "1465: }",
      "1496: func (c *SMS) GetAppValidationOutput(input *GetAppValidationOutputInput) (*GetAppValidationOutputOutput, error) {",
      "1497:  req, out := c.GetAppValidationOutputRequest(input)",
      "1498:  return out, req.Send()",
      "1499: }",
      "1510: func (c *SMS) GetAppValidationOutputWithContext(ctx aws.Context, input *GetAppValidationOutputInput, opts ...request.Option) (*GetAppValidationOutputOutput, error) {",
      "1511:  req, out := c.GetAppValidationOutputRequest(input)",
      "1512:  req.SetContext(ctx)",
      "1513:  req.ApplyOptions(opts...)",
      "1514:  return out, req.Send()",
      "1515: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1801:  return p.Err()",
      "1802: }",
      "1831:  op := &request.Operation{",
      "1833:   HTTPMethod: \"POST\",",
      "1834:   HTTPPath:   \"/\",",
      "1835:  }",
      "1837:  if input == nil {",
      "1839:  }",
      "1842:  req = c.newRequest(op, input, output)",
      "1843:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "1844:  return",
      "1845: }",
      "1882:  return out, req.Send()",
      "1883: }",
      "",
      "[Removed Lines]",
      "1804: const opImportServerCatalog = \"ImportServerCatalog\"",
      "1830: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
      "1832:   Name:       opImportServerCatalog,",
      "1838:   input = &ImportServerCatalogInput{}",
      "1841:  output = &ImportServerCatalogOutput{}",
      "1880: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
      "1881:  req, out := c.ImportServerCatalogRequest(input)",
      "",
      "[Added Lines]",
      "2092: const opImportAppCatalog = \"ImportAppCatalog\"",
      "2118: func (c *SMS) ImportAppCatalogRequest(input *ImportAppCatalogInput) (req *request.Request, output *ImportAppCatalogOutput) {",
      "2120:   Name:       opImportAppCatalog,",
      "2126:   input = &ImportAppCatalogInput{}",
      "2129:  output = &ImportAppCatalogOutput{}",
      "2164: func (c *SMS) ImportAppCatalog(input *ImportAppCatalogInput) (*ImportAppCatalogOutput, error) {",
      "2165:  req, out := c.ImportAppCatalogRequest(input)",
      "2166:  return out, req.Send()",
      "2167: }",
      "2178: func (c *SMS) ImportAppCatalogWithContext(ctx aws.Context, input *ImportAppCatalogInput, opts ...request.Option) (*ImportAppCatalogOutput, error) {",
      "2179:  req, out := c.ImportAppCatalogRequest(input)",
      "2180:  req.SetContext(ctx)",
      "2181:  req.ApplyOptions(opts...)",
      "2182:  return out, req.Send()",
      "2183: }",
      "2185: const opImportServerCatalog = \"ImportServerCatalog\"",
      "2211: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
      "2212:  op := &request.Operation{",
      "2213:   Name:       opImportServerCatalog,",
      "2214:   HTTPMethod: \"POST\",",
      "2215:   HTTPPath:   \"/\",",
      "2216:  }",
      "2218:  if input == nil {",
      "2219:   input = &ImportServerCatalogInput{}",
      "2220:  }",
      "2222:  output = &ImportServerCatalogOutput{}",
      "2223:  req = c.newRequest(op, input, output)",
      "2224:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2225:  return",
      "2226: }",
      "2261: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
      "2262:  req, out := c.ImportServerCatalogRequest(input)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2083:  return out, req.Send()",
      "2084: }",
      "2086: const opPutAppLaunchConfiguration = \"PutAppLaunchConfiguration\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2467: const opNotifyAppValidationOutput = \"NotifyAppValidationOutput\"",
      "2493: func (c *SMS) NotifyAppValidationOutputRequest(input *NotifyAppValidationOutputInput) (req *request.Request, output *NotifyAppValidationOutputOutput) {",
      "2494:  op := &request.Operation{",
      "2495:   Name:       opNotifyAppValidationOutput,",
      "2496:   HTTPMethod: \"POST\",",
      "2497:   HTTPPath:   \"/\",",
      "2498:  }",
      "2500:  if input == nil {",
      "2501:   input = &NotifyAppValidationOutputInput{}",
      "2502:  }",
      "2504:  output = &NotifyAppValidationOutputOutput{}",
      "2505:  req = c.newRequest(op, input, output)",
      "2506:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2507:  return",
      "2508: }",
      "2539: func (c *SMS) NotifyAppValidationOutput(input *NotifyAppValidationOutputInput) (*NotifyAppValidationOutputOutput, error) {",
      "2540:  req, out := c.NotifyAppValidationOutputRequest(input)",
      "2541:  return out, req.Send()",
      "2542: }",
      "2553: func (c *SMS) NotifyAppValidationOutputWithContext(ctx aws.Context, input *NotifyAppValidationOutputInput, opts ...request.Option) (*NotifyAppValidationOutputOutput, error) {",
      "2554:  req, out := c.NotifyAppValidationOutputRequest(input)",
      "2555:  req.SetContext(ctx)",
      "2556:  req.ApplyOptions(opts...)",
      "2557:  return out, req.Send()",
      "2558: }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2269:  return out, req.Send()",
      "2270: }",
      "2272: const opStartAppReplication = \"StartAppReplication\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2746: const opPutAppValidationConfiguration = \"PutAppValidationConfiguration\"",
      "2772: func (c *SMS) PutAppValidationConfigurationRequest(input *PutAppValidationConfigurationInput) (req *request.Request, output *PutAppValidationConfigurationOutput) {",
      "2773:  op := &request.Operation{",
      "2774:   Name:       opPutAppValidationConfiguration,",
      "2775:   HTTPMethod: \"POST\",",
      "2776:   HTTPPath:   \"/\",",
      "2777:  }",
      "2779:  if input == nil {",
      "2780:   input = &PutAppValidationConfigurationInput{}",
      "2781:  }",
      "2783:  output = &PutAppValidationConfigurationOutput{}",
      "2784:  req = c.newRequest(op, input, output)",
      "2785:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2786:  return",
      "2787: }",
      "2818: func (c *SMS) PutAppValidationConfiguration(input *PutAppValidationConfigurationInput) (*PutAppValidationConfigurationOutput, error) {",
      "2819:  req, out := c.PutAppValidationConfigurationRequest(input)",
      "2820:  return out, req.Send()",
      "2821: }",
      "2832: func (c *SMS) PutAppValidationConfigurationWithContext(ctx aws.Context, input *PutAppValidationConfigurationInput, opts ...request.Option) (*PutAppValidationConfigurationOutput, error) {",
      "2833:  req, out := c.PutAppValidationConfigurationRequest(input)",
      "2834:  req.SetContext(ctx)",
      "2835:  req.ApplyOptions(opts...)",
      "2836:  return out, req.Send()",
      "2837: }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2362:  return out, req.Send()",
      "2363: }",
      "2365: const opStartOnDemandReplicationRun = \"StartOnDemandReplicationRun\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2933: const opStartOnDemandAppReplication = \"StartOnDemandAppReplication\"",
      "2959: func (c *SMS) StartOnDemandAppReplicationRequest(input *StartOnDemandAppReplicationInput) (req *request.Request, output *StartOnDemandAppReplicationOutput) {",
      "2960:  op := &request.Operation{",
      "2961:   Name:       opStartOnDemandAppReplication,",
      "2962:   HTTPMethod: \"POST\",",
      "2963:   HTTPPath:   \"/\",",
      "2964:  }",
      "2966:  if input == nil {",
      "2967:   input = &StartOnDemandAppReplicationInput{}",
      "2968:  }",
      "2970:  output = &StartOnDemandAppReplicationOutput{}",
      "2971:  req = c.newRequest(op, input, output)",
      "2972:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2973:  return",
      "2974: }",
      "3005: func (c *SMS) StartOnDemandAppReplication(input *StartOnDemandAppReplicationInput) (*StartOnDemandAppReplicationOutput, error) {",
      "3006:  req, out := c.StartOnDemandAppReplicationRequest(input)",
      "3007:  return out, req.Send()",
      "3008: }",
      "3019: func (c *SMS) StartOnDemandAppReplicationWithContext(ctx aws.Context, input *StartOnDemandAppReplicationInput, opts ...request.Option) (*StartOnDemandAppReplicationOutput, error) {",
      "3020:  req, out := c.StartOnDemandAppReplicationRequest(input)",
      "3021:  req.SetContext(ctx)",
      "3022:  req.ApplyOptions(opts...)",
      "3023:  return out, req.Send()",
      "3024: }",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "2844: type AppSummary struct {",
      "2845:  _ struct{} `type:\"structure\"`",
      "2848:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "2851:  CreationTime *time.Time `locationName:\"creationTime\" type:\"timestamp\"`",
      "2854:  Description *string `locationName:\"description\" type:\"string\"`",
      "2857:  LastModified *time.Time `locationName:\"lastModified\" type:\"timestamp\"`",
      "2860:  LatestReplicationTime *time.Time `locationName:\"latestReplicationTime\" type:\"timestamp\"`",
      "2863:  LaunchDetails *LaunchDetails `locationName:\"launchDetails\" type:\"structure\"`",
      "2866:  LaunchStatus *string `locationName:\"launchStatus\" type:\"string\" enum:\"AppLaunchStatus\"`",
      "2869:  LaunchStatusMessage *string `locationName:\"launchStatusMessage\" type:\"string\"`",
      "2872:  Name *string `locationName:\"name\" type:\"string\"`",
      "2875:  ReplicationStatus *string `locationName:\"replicationStatus\" type:\"string\" enum:\"AppReplicationStatus\"`",
      "2878:  ReplicationStatusMessage *string `locationName:\"replicationStatusMessage\" type:\"string\"`",
      "2881:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3523:  ImportedAppId *string `locationName:\"importedAppId\" type:\"string\"`",
      "3532:  LaunchConfigurationStatus *string `locationName:\"launchConfigurationStatus\" type:\"string\" enum:\"AppLaunchConfigurationStatus\"`",
      "3547:  ReplicationConfigurationStatus *string `locationName:\"replicationConfigurationStatus\" type:\"string\" enum:\"AppReplicationConfigurationStatus\"`",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "2921:  return s",
      "2922: }",
      "2925: func (s *AppSummary) SetLastModified(v time.Time) *AppSummary {",
      "2926:  s.LastModified = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3600: func (s *AppSummary) SetImportedAppId(v string) *AppSummary {",
      "3601:  s.ImportedAppId = &v",
      "3602:  return s",
      "3603: }",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "2933:  return s",
      "2934: }",
      "2937: func (s *AppSummary) SetLaunchDetails(v *LaunchDetails) *AppSummary {",
      "2938:  s.LaunchDetails = v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3618: func (s *AppSummary) SetLaunchConfigurationStatus(v string) *AppSummary {",
      "3619:  s.LaunchConfigurationStatus = &v",
      "3620:  return s",
      "3621: }",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "2957:  return s",
      "2958: }",
      "2961: func (s *AppSummary) SetReplicationStatus(v string) *AppSummary {",
      "2962:  s.ReplicationStatus = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3648: func (s *AppSummary) SetReplicationConfigurationStatus(v string) *AppSummary {",
      "3649:  s.ReplicationConfigurationStatus = &v",
      "3650:  return s",
      "3651: }",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "2999:  return s",
      "3000: }",
      "3003: type Connector struct {",
      "3004:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3696: type AppValidationConfiguration struct {",
      "3697:  _ struct{} `type:\"structure\"`",
      "3700:  AppValidationStrategy *string `locationName:\"appValidationStrategy\" type:\"string\" enum:\"AppValidationStrategy\"`",
      "3703:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "3706:  SsmValidationParameters *SSMValidationParameters `locationName:\"ssmValidationParameters\" type:\"structure\"`",
      "3709:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "3710: }",
      "3713: func (s AppValidationConfiguration) String() string {",
      "3714:  return awsutil.Prettify(s)",
      "3715: }",
      "3718: func (s AppValidationConfiguration) GoString() string {",
      "3719:  return s.String()",
      "3720: }",
      "3723: func (s *AppValidationConfiguration) Validate() error {",
      "3724:  invalidParams := request.ErrInvalidParams{Context: \"AppValidationConfiguration\"}",
      "3725:  if s.Name != nil && len(*s.Name) < 1 {",
      "3726:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
      "3727:  }",
      "3728:  if s.SsmValidationParameters != nil {",
      "3729:   if err := s.SsmValidationParameters.Validate(); err != nil {",
      "3730:    invalidParams.AddNested(\"SsmValidationParameters\", err.(request.ErrInvalidParams))",
      "3731:   }",
      "3732:  }",
      "3734:  if invalidParams.Len() > 0 {",
      "3735:   return invalidParams",
      "3736:  }",
      "3737:  return nil",
      "3738: }",
      "3741: func (s *AppValidationConfiguration) SetAppValidationStrategy(v string) *AppValidationConfiguration {",
      "3742:  s.AppValidationStrategy = &v",
      "3743:  return s",
      "3744: }",
      "3747: func (s *AppValidationConfiguration) SetName(v string) *AppValidationConfiguration {",
      "3748:  s.Name = &v",
      "3749:  return s",
      "3750: }",
      "3753: func (s *AppValidationConfiguration) SetSsmValidationParameters(v *SSMValidationParameters) *AppValidationConfiguration {",
      "3754:  s.SsmValidationParameters = v",
      "3755:  return s",
      "3756: }",
      "3759: func (s *AppValidationConfiguration) SetValidationId(v string) *AppValidationConfiguration {",
      "3760:  s.ValidationId = &v",
      "3761:  return s",
      "3762: }",
      "3765: type AppValidationOutput struct {",
      "3766:  _ struct{} `type:\"structure\"`",
      "3769:  SsmOutput *SSMOutput `locationName:\"ssmOutput\" type:\"structure\"`",
      "3770: }",
      "3773: func (s AppValidationOutput) String() string {",
      "3774:  return awsutil.Prettify(s)",
      "3775: }",
      "3778: func (s AppValidationOutput) GoString() string {",
      "3779:  return s.String()",
      "3780: }",
      "3783: func (s *AppValidationOutput) SetSsmOutput(v *SSMOutput) *AppValidationOutput {",
      "3784:  s.SsmOutput = v",
      "3785:  return s",
      "3786: }",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "3481:  return awsutil.Prettify(s)",
      "3482: }",
      "3487: }",
      "3491:  s.AppId = &v",
      "3492:  return s",
      "3493: }",
      "3496:  _ struct{} `type:\"structure\"`",
      "3497: }",
      "3501:  return awsutil.Prettify(s)",
      "3502: }",
      "3506:  return s.String()",
      "3507: }",
      "3509: type DeleteReplicationJobInput struct {",
      "3510:  _ struct{} `type:\"structure\"`",
      "3515:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
      "",
      "[Removed Lines]",
      "3485: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
      "3486:  return s.String()",
      "3490: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
      "3495: type DeleteAppReplicationConfigurationOutput struct {",
      "3500: func (s DeleteAppReplicationConfigurationOutput) String() string {",
      "3505: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
      "",
      "[Added Lines]",
      "4272: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
      "4273:  return s.String()",
      "4274: }",
      "4277: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
      "4278:  s.AppId = &v",
      "4279:  return s",
      "4280: }",
      "4282: type DeleteAppReplicationConfigurationOutput struct {",
      "4283:  _ struct{} `type:\"structure\"`",
      "4284: }",
      "4287: func (s DeleteAppReplicationConfigurationOutput) String() string {",
      "4288:  return awsutil.Prettify(s)",
      "4289: }",
      "4292: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
      "4293:  return s.String()",
      "4294: }",
      "4296: type DeleteAppValidationConfigurationInput struct {",
      "4297:  _ struct{} `type:\"structure\"`",
      "4302:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4303: }",
      "4306: func (s DeleteAppValidationConfigurationInput) String() string {",
      "4307:  return awsutil.Prettify(s)",
      "4308: }",
      "4311: func (s DeleteAppValidationConfigurationInput) GoString() string {",
      "4312:  return s.String()",
      "4313: }",
      "4316: func (s *DeleteAppValidationConfigurationInput) Validate() error {",
      "4317:  invalidParams := request.ErrInvalidParams{Context: \"DeleteAppValidationConfigurationInput\"}",
      "4318:  if s.AppId == nil {",
      "4319:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4320:  }",
      "4322:  if invalidParams.Len() > 0 {",
      "4323:   return invalidParams",
      "4324:  }",
      "4325:  return nil",
      "4329: func (s *DeleteAppValidationConfigurationInput) SetAppId(v string) *DeleteAppValidationConfigurationInput {",
      "4334: type DeleteAppValidationConfigurationOutput struct {",
      "4339: func (s DeleteAppValidationConfigurationOutput) String() string {",
      "4344: func (s DeleteAppValidationConfigurationOutput) GoString() string {",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "3638:  return s.String()",
      "3639: }",
      "3641: type GenerateChangeSetInput struct {",
      "3642:  _ struct{} `type:\"structure\"`",
      "3645:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "3648:  ChangesetFormat *string `locationName:\"changesetFormat\" type:\"string\" enum:\"OutputFormat\"`",
      "3649: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4482: type DryRunOperationException struct {",
      "4483:  _            struct{}                  `type:\"structure\"`",
      "4484:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
      "4486:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "4487: }",
      "4490: func (s DryRunOperationException) String() string {",
      "4491:  return awsutil.Prettify(s)",
      "4492: }",
      "4495: func (s DryRunOperationException) GoString() string {",
      "4496:  return s.String()",
      "4497: }",
      "4499: func newErrorDryRunOperationException(v protocol.ResponseMetadata) error {",
      "4500:  return &DryRunOperationException{",
      "4501:   RespMetadata: v,",
      "4502:  }",
      "4503: }",
      "4506: func (s *DryRunOperationException) Code() string {",
      "4507:  return \"DryRunOperationException\"",
      "4508: }",
      "4511: func (s *DryRunOperationException) Message() string {",
      "4512:  if s.Message_ != nil {",
      "4513:   return *s.Message_",
      "4514:  }",
      "4515:  return \"\"",
      "4516: }",
      "4519: func (s *DryRunOperationException) OrigErr() error {",
      "4520:  return nil",
      "4521: }",
      "4523: func (s *DryRunOperationException) Error() string {",
      "4524:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "4525: }",
      "4528: func (s *DryRunOperationException) StatusCode() int {",
      "4529:  return s.RespMetadata.StatusCode",
      "4530: }",
      "4533: func (s *DryRunOperationException) RequestID() string {",
      "4534:  return s.RespMetadata.RequestID",
      "4535: }",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "3797: type GetAppLaunchConfigurationOutput struct {",
      "3798:  _ struct{} `type:\"structure\"`",
      "3801:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "3805:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "3808:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
      "3809: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4701:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "3824:  return s",
      "3825: }",
      "3828: func (s *GetAppLaunchConfigurationOutput) SetRoleName(v string) *GetAppLaunchConfigurationOutput {",
      "3829:  s.RoleName = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4728: func (s *GetAppLaunchConfigurationOutput) SetAutoLaunch(v bool) *GetAppLaunchConfigurationOutput {",
      "4729:  s.AutoLaunch = &v",
      "4730:  return s",
      "4731: }",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "3923:  return s",
      "3924: }",
      "3926: type GetConnectorsInput struct {",
      "3927:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4832: type GetAppValidationConfigurationInput struct {",
      "4833:  _ struct{} `type:\"structure\"`",
      "4838:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4839: }",
      "4842: func (s GetAppValidationConfigurationInput) String() string {",
      "4843:  return awsutil.Prettify(s)",
      "4844: }",
      "4847: func (s GetAppValidationConfigurationInput) GoString() string {",
      "4848:  return s.String()",
      "4849: }",
      "4852: func (s *GetAppValidationConfigurationInput) Validate() error {",
      "4853:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationConfigurationInput\"}",
      "4854:  if s.AppId == nil {",
      "4855:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4856:  }",
      "4858:  if invalidParams.Len() > 0 {",
      "4859:   return invalidParams",
      "4860:  }",
      "4861:  return nil",
      "4862: }",
      "4865: func (s *GetAppValidationConfigurationInput) SetAppId(v string) *GetAppValidationConfigurationInput {",
      "4866:  s.AppId = &v",
      "4867:  return s",
      "4868: }",
      "4870: type GetAppValidationConfigurationOutput struct {",
      "4871:  _ struct{} `type:\"structure\"`",
      "4874:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
      "4877:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
      "4878: }",
      "4881: func (s GetAppValidationConfigurationOutput) String() string {",
      "4882:  return awsutil.Prettify(s)",
      "4883: }",
      "4886: func (s GetAppValidationConfigurationOutput) GoString() string {",
      "4887:  return s.String()",
      "4888: }",
      "4891: func (s *GetAppValidationConfigurationOutput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *GetAppValidationConfigurationOutput {",
      "4892:  s.AppValidationConfigurations = v",
      "4893:  return s",
      "4894: }",
      "4897: func (s *GetAppValidationConfigurationOutput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *GetAppValidationConfigurationOutput {",
      "4898:  s.ServerGroupValidationConfigurations = v",
      "4899:  return s",
      "4900: }",
      "4902: type GetAppValidationOutputInput struct {",
      "4903:  _ struct{} `type:\"structure\"`",
      "4908:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4909: }",
      "4912: func (s GetAppValidationOutputInput) String() string {",
      "4913:  return awsutil.Prettify(s)",
      "4914: }",
      "4917: func (s GetAppValidationOutputInput) GoString() string {",
      "4918:  return s.String()",
      "4919: }",
      "4922: func (s *GetAppValidationOutputInput) Validate() error {",
      "4923:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationOutputInput\"}",
      "4924:  if s.AppId == nil {",
      "4925:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4926:  }",
      "4928:  if invalidParams.Len() > 0 {",
      "4929:   return invalidParams",
      "4930:  }",
      "4931:  return nil",
      "4932: }",
      "4935: func (s *GetAppValidationOutputInput) SetAppId(v string) *GetAppValidationOutputInput {",
      "4936:  s.AppId = &v",
      "4937:  return s",
      "4938: }",
      "4940: type GetAppValidationOutputOutput struct {",
      "4941:  _ struct{} `type:\"structure\"`",
      "4944:  ValidationOutputList []*ValidationOutput `locationName:\"validationOutputList\" type:\"list\"`",
      "4945: }",
      "4948: func (s GetAppValidationOutputOutput) String() string {",
      "4949:  return awsutil.Prettify(s)",
      "4950: }",
      "4953: func (s GetAppValidationOutputOutput) GoString() string {",
      "4954:  return s.String()",
      "4955: }",
      "4958: func (s *GetAppValidationOutputOutput) SetValidationOutputList(v []*ValidationOutput) *GetAppValidationOutputOutput {",
      "4959:  s.ValidationOutputList = v",
      "4960:  return s",
      "4961: }",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "4260:  return s",
      "4261: }",
      "4263: type ImportServerCatalogInput struct {",
      "4264:  _ struct{} `type:\"structure\"`",
      "4265: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5300: type ImportAppCatalogInput struct {",
      "5301:  _ struct{} `type:\"structure\"`",
      "5307:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "5308: }",
      "5311: func (s ImportAppCatalogInput) String() string {",
      "5312:  return awsutil.Prettify(s)",
      "5313: }",
      "5316: func (s ImportAppCatalogInput) GoString() string {",
      "5317:  return s.String()",
      "5318: }",
      "5321: func (s *ImportAppCatalogInput) SetRoleName(v string) *ImportAppCatalogInput {",
      "5322:  s.RoleName = &v",
      "5323:  return s",
      "5324: }",
      "5326: type ImportAppCatalogOutput struct {",
      "5327:  _ struct{} `type:\"structure\"`",
      "5328: }",
      "5331: func (s ImportAppCatalogOutput) String() string {",
      "5332:  return awsutil.Prettify(s)",
      "5333: }",
      "5336: func (s ImportAppCatalogOutput) GoString() string {",
      "5337:  return s.String()",
      "5338: }",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "4615:  _            struct{}                  `type:\"structure\"`",
      "4616:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
      "4619: }",
      "4623:  return awsutil.Prettify(s)",
      "4624: }",
      "4628:  return s.String()",
      "4629: }",
      "4634:  }",
      "4640: }",
      "4648: }",
      "4653: }",
      "4657: }",
      "4662: }",
      "4667: }",
      "",
      "[Removed Lines]",
      "4618:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "4622: func (s NoConnectorsAvailableException) String() string {",
      "4627: func (s NoConnectorsAvailableException) GoString() string {",
      "4631: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
      "4632:  return &NoConnectorsAvailableException{",
      "4633:   RespMetadata: v,",
      "4635: }",
      "4638: func (s *NoConnectorsAvailableException) Code() string {",
      "4639:  return \"NoConnectorsAvailableException\"",
      "4643: func (s *NoConnectorsAvailableException) Message() string {",
      "4644:  if s.Message_ != nil {",
      "4645:   return *s.Message_",
      "4646:  }",
      "4647:  return \"\"",
      "4651: func (s *NoConnectorsAvailableException) OrigErr() error {",
      "4652:  return nil",
      "4655: func (s *NoConnectorsAvailableException) Error() string {",
      "4656:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "4660: func (s *NoConnectorsAvailableException) StatusCode() int {",
      "4661:  return s.RespMetadata.StatusCode",
      "4665: func (s *NoConnectorsAvailableException) RequestID() string {",
      "4666:  return s.RespMetadata.RequestID",
      "",
      "[Added Lines]",
      "5696:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "5697: }",
      "5700: func (s NoConnectorsAvailableException) String() string {",
      "5701:  return awsutil.Prettify(s)",
      "5702: }",
      "5705: func (s NoConnectorsAvailableException) GoString() string {",
      "5706:  return s.String()",
      "5707: }",
      "5709: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
      "5710:  return &NoConnectorsAvailableException{",
      "5711:   RespMetadata: v,",
      "5712:  }",
      "5713: }",
      "5716: func (s *NoConnectorsAvailableException) Code() string {",
      "5717:  return \"NoConnectorsAvailableException\"",
      "5718: }",
      "5721: func (s *NoConnectorsAvailableException) Message() string {",
      "5722:  if s.Message_ != nil {",
      "5723:   return *s.Message_",
      "5724:  }",
      "5725:  return \"\"",
      "5726: }",
      "5729: func (s *NoConnectorsAvailableException) OrigErr() error {",
      "5730:  return nil",
      "5731: }",
      "5733: func (s *NoConnectorsAvailableException) Error() string {",
      "5734:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "5735: }",
      "5738: func (s *NoConnectorsAvailableException) StatusCode() int {",
      "5739:  return s.RespMetadata.StatusCode",
      "5740: }",
      "5743: func (s *NoConnectorsAvailableException) RequestID() string {",
      "5744:  return s.RespMetadata.RequestID",
      "5745: }",
      "5748: type NotificationContext struct {",
      "5749:  _ struct{} `type:\"structure\"`",
      "5752:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
      "5755:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
      "5758:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "5759: }",
      "5762: func (s NotificationContext) String() string {",
      "5763:  return awsutil.Prettify(s)",
      "5764: }",
      "5767: func (s NotificationContext) GoString() string {",
      "5768:  return s.String()",
      "5769: }",
      "5772: func (s *NotificationContext) SetStatus(v string) *NotificationContext {",
      "5773:  s.Status = &v",
      "5774:  return s",
      "5775: }",
      "5778: func (s *NotificationContext) SetStatusMessage(v string) *NotificationContext {",
      "5779:  s.StatusMessage = &v",
      "5780:  return s",
      "5781: }",
      "5784: func (s *NotificationContext) SetValidationId(v string) *NotificationContext {",
      "5785:  s.ValidationId = &v",
      "5786:  return s",
      "5787: }",
      "5789: type NotifyAppValidationOutputInput struct {",
      "5790:  _ struct{} `type:\"structure\"`",
      "5795:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "5798:  NotificationContext *NotificationContext `locationName:\"notificationContext\" type:\"structure\"`",
      "5802: func (s NotifyAppValidationOutputInput) String() string {",
      "5807: func (s NotifyAppValidationOutputInput) GoString() string {",
      "5812: func (s *NotifyAppValidationOutputInput) Validate() error {",
      "5813:  invalidParams := request.ErrInvalidParams{Context: \"NotifyAppValidationOutputInput\"}",
      "5814:  if s.AppId == nil {",
      "5815:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "5818:  if invalidParams.Len() > 0 {",
      "5819:   return invalidParams",
      "5820:  }",
      "5821:  return nil",
      "5825: func (s *NotifyAppValidationOutputInput) SetAppId(v string) *NotifyAppValidationOutputInput {",
      "5826:  s.AppId = &v",
      "5827:  return s",
      "5831: func (s *NotifyAppValidationOutputInput) SetNotificationContext(v *NotificationContext) *NotifyAppValidationOutputInput {",
      "5832:  s.NotificationContext = v",
      "5833:  return s",
      "5836: type NotifyAppValidationOutputOutput struct {",
      "5837:  _ struct{} `type:\"structure\"`",
      "5841: func (s NotifyAppValidationOutputOutput) String() string {",
      "5842:  return awsutil.Prettify(s)",
      "5846: func (s NotifyAppValidationOutputOutput) GoString() string {",
      "5847:  return s.String()",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "4725: type PutAppLaunchConfigurationInput struct {",
      "4726:  _ struct{} `type:\"structure\"`",
      "4729:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "4733:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "4736:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
      "4737: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5914:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "4746:  return s.String()",
      "4747: }",
      "4750: func (s *PutAppLaunchConfigurationInput) SetAppId(v string) *PutAppLaunchConfigurationInput {",
      "4751:  s.AppId = &v",
      "4752:  return s",
      "4753: }",
      "4756: func (s *PutAppLaunchConfigurationInput) SetRoleName(v string) *PutAppLaunchConfigurationInput {",
      "4757:  s.RoleName = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5935: func (s *PutAppLaunchConfigurationInput) Validate() error {",
      "5936:  invalidParams := request.ErrInvalidParams{Context: \"PutAppLaunchConfigurationInput\"}",
      "5937:  if s.ServerGroupLaunchConfigurations != nil {",
      "5938:   for i, v := range s.ServerGroupLaunchConfigurations {",
      "5939:    if v == nil {",
      "5940:     continue",
      "5941:    }",
      "5942:    if err := v.Validate(); err != nil {",
      "5943:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
      "5944:    }",
      "5945:   }",
      "5946:  }",
      "5948:  if invalidParams.Len() > 0 {",
      "5949:   return invalidParams",
      "5950:  }",
      "5951:  return nil",
      "5952: }",
      "5961: func (s *PutAppLaunchConfigurationInput) SetAutoLaunch(v bool) *PutAppLaunchConfigurationInput {",
      "5962:  s.AutoLaunch = &v",
      "5963:  return s",
      "5964: }",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "4824:  return s.String()",
      "4825: }",
      "4828: type ReplicationJob struct {",
      "4829:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6039: type PutAppValidationConfigurationInput struct {",
      "6040:  _ struct{} `type:\"structure\"`",
      "6045:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "6048:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
      "6051:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
      "6052: }",
      "6055: func (s PutAppValidationConfigurationInput) String() string {",
      "6056:  return awsutil.Prettify(s)",
      "6057: }",
      "6060: func (s PutAppValidationConfigurationInput) GoString() string {",
      "6061:  return s.String()",
      "6062: }",
      "6065: func (s *PutAppValidationConfigurationInput) Validate() error {",
      "6066:  invalidParams := request.ErrInvalidParams{Context: \"PutAppValidationConfigurationInput\"}",
      "6067:  if s.AppId == nil {",
      "6068:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "6069:  }",
      "6070:  if s.AppValidationConfigurations != nil {",
      "6071:   for i, v := range s.AppValidationConfigurations {",
      "6072:    if v == nil {",
      "6073:     continue",
      "6074:    }",
      "6075:    if err := v.Validate(); err != nil {",
      "6076:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"AppValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "6077:    }",
      "6078:   }",
      "6079:  }",
      "6080:  if s.ServerGroupValidationConfigurations != nil {",
      "6081:   for i, v := range s.ServerGroupValidationConfigurations {",
      "6082:    if v == nil {",
      "6083:     continue",
      "6084:    }",
      "6085:    if err := v.Validate(); err != nil {",
      "6086:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "6087:    }",
      "6088:   }",
      "6089:  }",
      "6091:  if invalidParams.Len() > 0 {",
      "6092:   return invalidParams",
      "6093:  }",
      "6094:  return nil",
      "6095: }",
      "6098: func (s *PutAppValidationConfigurationInput) SetAppId(v string) *PutAppValidationConfigurationInput {",
      "6099:  s.AppId = &v",
      "6100:  return s",
      "6101: }",
      "6104: func (s *PutAppValidationConfigurationInput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *PutAppValidationConfigurationInput {",
      "6105:  s.AppValidationConfigurations = v",
      "6106:  return s",
      "6107: }",
      "6110: func (s *PutAppValidationConfigurationInput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *PutAppValidationConfigurationInput {",
      "6111:  s.ServerGroupValidationConfigurations = v",
      "6112:  return s",
      "6113: }",
      "6115: type PutAppValidationConfigurationOutput struct {",
      "6116:  _ struct{} `type:\"structure\"`",
      "6117: }",
      "6120: func (s PutAppValidationConfigurationOutput) String() string {",
      "6121:  return awsutil.Prettify(s)",
      "6122: }",
      "6125: func (s PutAppValidationConfigurationOutput) GoString() string {",
      "6126:  return s.String()",
      "6127: }",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "5344:  return s",
      "5345: }",
      "5348: type S3Location struct {",
      "5349:  _ struct{} `type:\"structure\"`",
      "5355:  Key *string `locationName:\"key\" type:\"string\"`",
      "5356: }",
      "",
      "[Removed Lines]",
      "5352:  Bucket *string `locationName:\"bucket\" type:\"string\"`",
      "",
      "[Added Lines]",
      "6653:  Bucket *string `locationName:\"bucket\" min:\"3\" type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "5365:  return s.String()",
      "5366: }",
      "5369: func (s *S3Location) SetBucket(v string) *S3Location {",
      "5370:  s.Bucket = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6670: func (s *S3Location) Validate() error {",
      "6671:  invalidParams := request.ErrInvalidParams{Context: \"S3Location\"}",
      "6672:  if s.Bucket != nil && len(*s.Bucket) < 3 {",
      "6673:   invalidParams.Add(request.NewErrParamMinLen(\"Bucket\", 3))",
      "6674:  }",
      "6676:  if invalidParams.Len() > 0 {",
      "6677:   return invalidParams",
      "6678:  }",
      "6679:  return nil",
      "6680: }",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "5377:  return s",
      "5378: }",
      "5381: type Server struct {",
      "5382:  _ struct{} `type:\"structure\"`",
      "5385:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\"`",
      "5388:  ReplicationJobTerminated *bool `locationName:\"replicationJobTerminated\" type:\"boolean\"`",
      "5391:  ServerId *string `locationName:\"serverId\" type:\"string\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6695: type SSMOutput struct {",
      "6696:  _ struct{} `type:\"structure\"`",
      "6699:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
      "6700: }",
      "6703: func (s SSMOutput) String() string {",
      "6704:  return awsutil.Prettify(s)",
      "6705: }",
      "6708: func (s SSMOutput) GoString() string {",
      "6709:  return s.String()",
      "6710: }",
      "6713: func (s *SSMOutput) SetS3Location(v *S3Location) *SSMOutput {",
      "6714:  s.S3Location = v",
      "6715:  return s",
      "6716: }",
      "6719: type SSMValidationParameters struct {",
      "6720:  _ struct{} `type:\"structure\"`",
      "6723:  Command *string `locationName:\"command\" min:\"1\" type:\"string\"`",
      "6726:  ExecutionTimeoutSeconds *int64 `locationName:\"executionTimeoutSeconds\" min:\"60\" type:\"integer\"`",
      "6729:  InstanceId *string `locationName:\"instanceId\" type:\"string\"`",
      "6732:  OutputS3BucketName *string `locationName:\"outputS3BucketName\" type:\"string\"`",
      "6735:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
      "6738:  Source *Source `locationName:\"source\" type:\"structure\"`",
      "6739: }",
      "6742: func (s SSMValidationParameters) String() string {",
      "6743:  return awsutil.Prettify(s)",
      "6744: }",
      "6747: func (s SSMValidationParameters) GoString() string {",
      "6748:  return s.String()",
      "6749: }",
      "6752: func (s *SSMValidationParameters) Validate() error {",
      "6753:  invalidParams := request.ErrInvalidParams{Context: \"SSMValidationParameters\"}",
      "6754:  if s.Command != nil && len(*s.Command) < 1 {",
      "6755:   invalidParams.Add(request.NewErrParamMinLen(\"Command\", 1))",
      "6756:  }",
      "6757:  if s.ExecutionTimeoutSeconds != nil && *s.ExecutionTimeoutSeconds < 60 {",
      "6758:   invalidParams.Add(request.NewErrParamMinValue(\"ExecutionTimeoutSeconds\", 60))",
      "6759:  }",
      "6760:  if s.Source != nil {",
      "6761:   if err := s.Source.Validate(); err != nil {",
      "6762:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
      "6763:   }",
      "6764:  }",
      "6766:  if invalidParams.Len() > 0 {",
      "6767:   return invalidParams",
      "6768:  }",
      "6769:  return nil",
      "6770: }",
      "6773: func (s *SSMValidationParameters) SetCommand(v string) *SSMValidationParameters {",
      "6774:  s.Command = &v",
      "6775:  return s",
      "6776: }",
      "6779: func (s *SSMValidationParameters) SetExecutionTimeoutSeconds(v int64) *SSMValidationParameters {",
      "6780:  s.ExecutionTimeoutSeconds = &v",
      "6781:  return s",
      "6782: }",
      "6785: func (s *SSMValidationParameters) SetInstanceId(v string) *SSMValidationParameters {",
      "6786:  s.InstanceId = &v",
      "6787:  return s",
      "6788: }",
      "6791: func (s *SSMValidationParameters) SetOutputS3BucketName(v string) *SSMValidationParameters {",
      "6792:  s.OutputS3BucketName = &v",
      "6793:  return s",
      "6794: }",
      "6797: func (s *SSMValidationParameters) SetScriptType(v string) *SSMValidationParameters {",
      "6798:  s.ScriptType = &v",
      "6799:  return s",
      "6800: }",
      "6803: func (s *SSMValidationParameters) SetSource(v *Source) *SSMValidationParameters {",
      "6804:  s.Source = v",
      "6805:  return s",
      "6806: }",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "5559:  return s.String()",
      "5560: }",
      "5563: func (s *ServerGroupLaunchConfiguration) SetLaunchOrder(v int64) *ServerGroupLaunchConfiguration {",
      "5564:  s.LaunchOrder = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6991: func (s *ServerGroupLaunchConfiguration) Validate() error {",
      "6992:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupLaunchConfiguration\"}",
      "6993:  if s.ServerLaunchConfigurations != nil {",
      "6994:   for i, v := range s.ServerLaunchConfigurations {",
      "6995:    if v == nil {",
      "6996:     continue",
      "6997:    }",
      "6998:    if err := v.Validate(); err != nil {",
      "6999:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
      "7000:    }",
      "7001:   }",
      "7002:  }",
      "7004:  if invalidParams.Len() > 0 {",
      "7005:   return invalidParams",
      "7006:  }",
      "7007:  return nil",
      "7008: }",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "5611:  return s",
      "5612: }",
      "5615: type ServerLaunchConfiguration struct {",
      "5616:  _ struct{} `type:\"structure\"`",
      "5619:  AssociatePublicIpAddress *bool `locationName:\"associatePublicIpAddress\" type:\"boolean\"`",
      "5622:  Ec2KeyName *string `locationName:\"ec2KeyName\" type:\"string\"`",
      "5625:  InstanceType *string `locationName:\"instanceType\" type:\"string\"`",
      "5628:  LogicalId *string `locationName:\"logicalId\" type:\"string\"`",
      "5631:  SecurityGroup *string `locationName:\"securityGroup\" type:\"string\"`",
      "5634:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "5637:  Subnet *string `locationName:\"subnet\" type:\"string\"`",
      "5640:  UserData *UserData `locationName:\"userData\" type:\"structure\"`",
      "5643:  Vpc *string `locationName:\"vpc\" type:\"string\"`",
      "5644: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7062: type ServerGroupValidationConfiguration struct {",
      "7063:  _ struct{} `type:\"structure\"`",
      "7066:  ServerGroupId *string `locationName:\"serverGroupId\" type:\"string\"`",
      "7069:  ServerValidationConfigurations []*ServerValidationConfiguration `locationName:\"serverValidationConfigurations\" type:\"list\"`",
      "7070: }",
      "7073: func (s ServerGroupValidationConfiguration) String() string {",
      "7074:  return awsutil.Prettify(s)",
      "7075: }",
      "7078: func (s ServerGroupValidationConfiguration) GoString() string {",
      "7079:  return s.String()",
      "7080: }",
      "7083: func (s *ServerGroupValidationConfiguration) Validate() error {",
      "7084:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupValidationConfiguration\"}",
      "7085:  if s.ServerValidationConfigurations != nil {",
      "7086:   for i, v := range s.ServerValidationConfigurations {",
      "7087:    if v == nil {",
      "7088:     continue",
      "7089:    }",
      "7090:    if err := v.Validate(); err != nil {",
      "7091:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "7092:    }",
      "7093:   }",
      "7094:  }",
      "7096:  if invalidParams.Len() > 0 {",
      "7097:   return invalidParams",
      "7098:  }",
      "7099:  return nil",
      "7100: }",
      "7103: func (s *ServerGroupValidationConfiguration) SetServerGroupId(v string) *ServerGroupValidationConfiguration {",
      "7104:  s.ServerGroupId = &v",
      "7105:  return s",
      "7106: }",
      "7109: func (s *ServerGroupValidationConfiguration) SetServerValidationConfigurations(v []*ServerValidationConfiguration) *ServerGroupValidationConfiguration {",
      "7110:  s.ServerValidationConfigurations = v",
      "7111:  return s",
      "7112: }",
      "7123:  ConfigureScript *S3Location `locationName:\"configureScript\" type:\"structure\"`",
      "7126:  ConfigureScriptType *string `locationName:\"configureScriptType\" type:\"string\" enum:\"ScriptType\"`",
      "7133:  IamInstanceProfileName *string `locationName:\"iamInstanceProfileName\" type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 27 ---",
      "[Context before]",
      "5653:  return s.String()",
      "5654: }",
      "5657: func (s *ServerLaunchConfiguration) SetAssociatePublicIpAddress(v bool) *ServerLaunchConfiguration {",
      "5658:  s.AssociatePublicIpAddress = &v",
      "5659:  return s",
      "5660: }",
      "5663: func (s *ServerLaunchConfiguration) SetEc2KeyName(v string) *ServerLaunchConfiguration {",
      "5664:  s.Ec2KeyName = &v",
      "5665:  return s",
      "5666: }",
      "5669: func (s *ServerLaunchConfiguration) SetInstanceType(v string) *ServerLaunchConfiguration {",
      "5670:  s.InstanceType = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7168: func (s *ServerLaunchConfiguration) Validate() error {",
      "7169:  invalidParams := request.ErrInvalidParams{Context: \"ServerLaunchConfiguration\"}",
      "7170:  if s.ConfigureScript != nil {",
      "7171:   if err := s.ConfigureScript.Validate(); err != nil {",
      "7172:    invalidParams.AddNested(\"ConfigureScript\", err.(request.ErrInvalidParams))",
      "7173:   }",
      "7174:  }",
      "7175:  if s.UserData != nil {",
      "7176:   if err := s.UserData.Validate(); err != nil {",
      "7177:    invalidParams.AddNested(\"UserData\", err.(request.ErrInvalidParams))",
      "7178:   }",
      "7179:  }",
      "7181:  if invalidParams.Len() > 0 {",
      "7182:   return invalidParams",
      "7183:  }",
      "7184:  return nil",
      "7185: }",
      "7194: func (s *ServerLaunchConfiguration) SetConfigureScript(v *S3Location) *ServerLaunchConfiguration {",
      "7195:  s.ConfigureScript = v",
      "7196:  return s",
      "7197: }",
      "7200: func (s *ServerLaunchConfiguration) SetConfigureScriptType(v string) *ServerLaunchConfiguration {",
      "7201:  s.ConfigureScriptType = &v",
      "7202:  return s",
      "7203: }",
      "7212: func (s *ServerLaunchConfiguration) SetIamInstanceProfileName(v string) *ServerLaunchConfiguration {",
      "7213:  s.IamInstanceProfileName = &v",
      "7214:  return s",
      "7215: }",
      "",
      "---------------",
      "--- Hunk 28 ---",
      "[Context before]",
      "5830:  return s",
      "5831: }",
      "5833: type StartAppReplicationInput struct {",
      "5834:  _ struct{} `type:\"structure\"`",
      "5837:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "5838: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7384: type ServerValidationConfiguration struct {",
      "7385:  _ struct{} `type:\"structure\"`",
      "7388:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "7391:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "7394:  ServerValidationStrategy *string `locationName:\"serverValidationStrategy\" type:\"string\" enum:\"ServerValidationStrategy\"`",
      "7397:  UserDataValidationParameters *UserDataValidationParameters `locationName:\"userDataValidationParameters\" type:\"structure\"`",
      "7400:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "7401: }",
      "7404: func (s ServerValidationConfiguration) String() string {",
      "7405:  return awsutil.Prettify(s)",
      "7406: }",
      "7409: func (s ServerValidationConfiguration) GoString() string {",
      "7410:  return s.String()",
      "7411: }",
      "7414: func (s *ServerValidationConfiguration) Validate() error {",
      "7415:  invalidParams := request.ErrInvalidParams{Context: \"ServerValidationConfiguration\"}",
      "7416:  if s.Name != nil && len(*s.Name) < 1 {",
      "7417:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
      "7418:  }",
      "7419:  if s.UserDataValidationParameters != nil {",
      "7420:   if err := s.UserDataValidationParameters.Validate(); err != nil {",
      "7421:    invalidParams.AddNested(\"UserDataValidationParameters\", err.(request.ErrInvalidParams))",
      "7422:   }",
      "7423:  }",
      "7425:  if invalidParams.Len() > 0 {",
      "7426:   return invalidParams",
      "7427:  }",
      "7428:  return nil",
      "7429: }",
      "7432: func (s *ServerValidationConfiguration) SetName(v string) *ServerValidationConfiguration {",
      "7433:  s.Name = &v",
      "7434:  return s",
      "7435: }",
      "7438: func (s *ServerValidationConfiguration) SetServer(v *Server) *ServerValidationConfiguration {",
      "7439:  s.Server = v",
      "7440:  return s",
      "7441: }",
      "7444: func (s *ServerValidationConfiguration) SetServerValidationStrategy(v string) *ServerValidationConfiguration {",
      "7445:  s.ServerValidationStrategy = &v",
      "7446:  return s",
      "7447: }",
      "7450: func (s *ServerValidationConfiguration) SetUserDataValidationParameters(v *UserDataValidationParameters) *ServerValidationConfiguration {",
      "7451:  s.UserDataValidationParameters = v",
      "7452:  return s",
      "7453: }",
      "7456: func (s *ServerValidationConfiguration) SetValidationId(v string) *ServerValidationConfiguration {",
      "7457:  s.ValidationId = &v",
      "7458:  return s",
      "7459: }",
      "7462: type ServerValidationOutput struct {",
      "7463:  _ struct{} `type:\"structure\"`",
      "7466:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "7467: }",
      "7470: func (s ServerValidationOutput) String() string {",
      "7471:  return awsutil.Prettify(s)",
      "7472: }",
      "7475: func (s ServerValidationOutput) GoString() string {",
      "7476:  return s.String()",
      "7477: }",
      "7480: func (s *ServerValidationOutput) SetServer(v *Server) *ServerValidationOutput {",
      "7481:  s.Server = v",
      "7482:  return s",
      "7483: }",
      "7486: type Source struct {",
      "7487:  _ struct{} `type:\"structure\"`",
      "7490:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
      "7491: }",
      "7494: func (s Source) String() string {",
      "7495:  return awsutil.Prettify(s)",
      "7496: }",
      "7499: func (s Source) GoString() string {",
      "7500:  return s.String()",
      "7501: }",
      "7504: func (s *Source) Validate() error {",
      "7505:  invalidParams := request.ErrInvalidParams{Context: \"Source\"}",
      "7506:  if s.S3Location != nil {",
      "7507:   if err := s.S3Location.Validate(); err != nil {",
      "7508:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
      "7509:   }",
      "7510:  }",
      "7512:  if invalidParams.Len() > 0 {",
      "7513:   return invalidParams",
      "7514:  }",
      "7515:  return nil",
      "7516: }",
      "7519: func (s *Source) SetS3Location(v *S3Location) *Source {",
      "7520:  s.S3Location = v",
      "7521:  return s",
      "7522: }",
      "",
      "---------------",
      "--- Hunk 29 ---",
      "[Context before]",
      "5867:  return s.String()",
      "5868: }",
      "5870: type StartOnDemandReplicationRunInput struct {",
      "5871:  _ struct{} `type:\"structure\"`",
      "5874:  Description *string `locationName:\"description\" type:\"string\"`",
      "5879:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7561: type StartOnDemandAppReplicationInput struct {",
      "7562:  _ struct{} `type:\"structure\"`",
      "7567:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "7570:  Description *string `locationName:\"description\" type:\"string\"`",
      "7571: }",
      "7574: func (s StartOnDemandAppReplicationInput) String() string {",
      "7575:  return awsutil.Prettify(s)",
      "7576: }",
      "7579: func (s StartOnDemandAppReplicationInput) GoString() string {",
      "7580:  return s.String()",
      "7581: }",
      "7584: func (s *StartOnDemandAppReplicationInput) Validate() error {",
      "7585:  invalidParams := request.ErrInvalidParams{Context: \"StartOnDemandAppReplicationInput\"}",
      "7586:  if s.AppId == nil {",
      "7587:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "7588:  }",
      "7590:  if invalidParams.Len() > 0 {",
      "7591:   return invalidParams",
      "7592:  }",
      "7593:  return nil",
      "7594: }",
      "7597: func (s *StartOnDemandAppReplicationInput) SetAppId(v string) *StartOnDemandAppReplicationInput {",
      "7598:  s.AppId = &v",
      "7599:  return s",
      "7600: }",
      "7603: func (s *StartOnDemandAppReplicationInput) SetDescription(v string) *StartOnDemandAppReplicationInput {",
      "7604:  s.Description = &v",
      "7605:  return s",
      "7606: }",
      "7608: type StartOnDemandAppReplicationOutput struct {",
      "7609:  _ struct{} `type:\"structure\"`",
      "7610: }",
      "7613: func (s StartOnDemandAppReplicationOutput) String() string {",
      "7614:  return awsutil.Prettify(s)",
      "7615: }",
      "7618: func (s StartOnDemandAppReplicationOutput) GoString() string {",
      "7619:  return s.String()",
      "7620: }",
      "",
      "---------------",
      "--- Hunk 30 ---",
      "[Context before]",
      "6424:  return s.String()",
      "6425: }",
      "6428: func (s *UserData) SetS3Location(v *S3Location) *UserData {",
      "6429:  s.S3Location = v",
      "6430:  return s",
      "6431: }",
      "6434: type VmServer struct {",
      "6435:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8180: func (s *UserData) Validate() error {",
      "8181:  invalidParams := request.ErrInvalidParams{Context: \"UserData\"}",
      "8182:  if s.S3Location != nil {",
      "8183:   if err := s.S3Location.Validate(); err != nil {",
      "8184:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
      "8185:   }",
      "8186:  }",
      "8188:  if invalidParams.Len() > 0 {",
      "8189:   return invalidParams",
      "8190:  }",
      "8191:  return nil",
      "8192: }",
      "8201: type UserDataValidationParameters struct {",
      "8202:  _ struct{} `type:\"structure\"`",
      "8205:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
      "8208:  Source *Source `locationName:\"source\" type:\"structure\"`",
      "8209: }",
      "8212: func (s UserDataValidationParameters) String() string {",
      "8213:  return awsutil.Prettify(s)",
      "8214: }",
      "8217: func (s UserDataValidationParameters) GoString() string {",
      "8218:  return s.String()",
      "8219: }",
      "8222: func (s *UserDataValidationParameters) Validate() error {",
      "8223:  invalidParams := request.ErrInvalidParams{Context: \"UserDataValidationParameters\"}",
      "8224:  if s.Source != nil {",
      "8225:   if err := s.Source.Validate(); err != nil {",
      "8226:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
      "8227:   }",
      "8228:  }",
      "8230:  if invalidParams.Len() > 0 {",
      "8231:   return invalidParams",
      "8232:  }",
      "8233:  return nil",
      "8234: }",
      "8237: func (s *UserDataValidationParameters) SetScriptType(v string) *UserDataValidationParameters {",
      "8238:  s.ScriptType = &v",
      "8239:  return s",
      "8240: }",
      "8243: func (s *UserDataValidationParameters) SetSource(v *Source) *UserDataValidationParameters {",
      "8244:  s.Source = v",
      "8245:  return s",
      "8246: }",
      "8249: type ValidationOutput struct {",
      "8250:  _ struct{} `type:\"structure\"`",
      "8253:  AppValidationOutput *AppValidationOutput `locationName:\"appValidationOutput\" type:\"structure\"`",
      "8256:  LatestValidationTime *time.Time `locationName:\"latestValidationTime\" type:\"timestamp\"`",
      "8259:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "8262:  ServerValidationOutput *ServerValidationOutput `locationName:\"serverValidationOutput\" type:\"structure\"`",
      "8265:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
      "8268:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
      "8271:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "8272: }",
      "8275: func (s ValidationOutput) String() string {",
      "8276:  return awsutil.Prettify(s)",
      "8277: }",
      "8280: func (s ValidationOutput) GoString() string {",
      "8281:  return s.String()",
      "8282: }",
      "8285: func (s *ValidationOutput) SetAppValidationOutput(v *AppValidationOutput) *ValidationOutput {",
      "8286:  s.AppValidationOutput = v",
      "8287:  return s",
      "8288: }",
      "8291: func (s *ValidationOutput) SetLatestValidationTime(v time.Time) *ValidationOutput {",
      "8292:  s.LatestValidationTime = &v",
      "8293:  return s",
      "8294: }",
      "8297: func (s *ValidationOutput) SetName(v string) *ValidationOutput {",
      "8298:  s.Name = &v",
      "8299:  return s",
      "8300: }",
      "8303: func (s *ValidationOutput) SetServerValidationOutput(v *ServerValidationOutput) *ValidationOutput {",
      "8304:  s.ServerValidationOutput = v",
      "8305:  return s",
      "8306: }",
      "8309: func (s *ValidationOutput) SetStatus(v string) *ValidationOutput {",
      "8310:  s.Status = &v",
      "8311:  return s",
      "8312: }",
      "8315: func (s *ValidationOutput) SetStatusMessage(v string) *ValidationOutput {",
      "8316:  s.StatusMessage = &v",
      "8317:  return s",
      "8318: }",
      "8321: func (s *ValidationOutput) SetValidationId(v string) *ValidationOutput {",
      "8322:  s.ValidationId = &v",
      "8323:  return s",
      "8324: }",
      "",
      "---------------",
      "--- Hunk 31 ---",
      "[Context before]",
      "6523:  return s",
      "6524: }",
      "6526: const (",
      "6528:  AppLaunchStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8419: const (",
      "8421:  AppLaunchConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
      "8424:  AppLaunchConfigurationStatusConfigured = \"CONFIGURED\"",
      "8425: )",
      "",
      "---------------",
      "--- Hunk 32 ---",
      "[Context before]",
      "6549:  AppLaunchStatusLaunched = \"LAUNCHED\"",
      "6552:  AppLaunchStatusDeltaLaunchInProgress = \"DELTA_LAUNCH_IN_PROGRESS\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8453:  AppLaunchStatusPartiallyLaunched = \"PARTIALLY_LAUNCHED\"",
      "",
      "---------------",
      "--- Hunk 33 ---",
      "[Context before]",
      "6567:  AppLaunchStatusTerminated = \"TERMINATED\"",
      "6568: )",
      "6570: const (",
      "6572:  AppReplicationStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8474: const (",
      "8476:  AppReplicationConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
      "8479:  AppReplicationConfigurationStatusConfigured = \"CONFIGURED\"",
      "8480: )",
      "",
      "---------------",
      "--- Hunk 34 ---",
      "[Context before]",
      "6593:  AppReplicationStatusReplicated = \"REPLICATED\"",
      "6596:  AppReplicationStatusDeltaReplicationInProgress = \"DELTA_REPLICATION_IN_PROGRESS\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8508:  AppReplicationStatusPartiallyReplicated = \"PARTIALLY_REPLICATED\"",
      "",
      "---------------",
      "--- Hunk 35 ---",
      "[Context before]",
      "6634:  AppStatusDeleteFailed = \"DELETE_FAILED\"",
      "6635: )",
      "6637: const (",
      "6639:  ConnectorCapabilityVsphere = \"VSPHERE\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8552: const (",
      "8554:  AppValidationStrategySsm = \"SSM\"",
      "8555: )",
      "",
      "---------------",
      "--- Hunk 36 ---",
      "[Context before]",
      "6648:  ConnectorCapabilitySnapshotBatching = \"SNAPSHOT_BATCHING\"",
      "6649: )",
      "6651: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8571:  ConnectorCapabilitySmsOptimized = \"SMS_OPTIMIZED\"",
      "",
      "---------------",
      "--- Hunk 37 ---",
      "[Context before]",
      "6729:  ReplicationRunTypeAutomatic = \"AUTOMATIC\"",
      "6730: )",
      "6732: const (",
      "6734:  ServerCatalogStatusNotImported = \"NOT_IMPORTED\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8655: const (",
      "8657:  ScriptTypeShellScript = \"SHELL_SCRIPT\"",
      "8660:  ScriptTypePowershellScript = \"POWERSHELL_SCRIPT\"",
      "8661: )",
      "",
      "---------------",
      "--- Hunk 38 ---",
      "[Context before]",
      "6751:  ServerTypeVirtualMachine = \"VIRTUAL_MACHINE\"",
      "6752: )",
      "6754: const (",
      "6756:  VmManagerTypeVsphere = \"VSPHERE\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8685: const (",
      "8687:  ServerValidationStrategyUserdata = \"USERDATA\"",
      "8688: )",
      "8690: const (",
      "8692:  ValidationStatusReadyForValidation = \"READY_FOR_VALIDATION\"",
      "8695:  ValidationStatusPending = \"PENDING\"",
      "8698:  ValidationStatusInProgress = \"IN_PROGRESS\"",
      "8701:  ValidationStatusSucceeded = \"SUCCEEDED\"",
      "8704:  ValidationStatusFailed = \"FAILED\"",
      "8705: )",
      "",
      "---------------"
    ],
    "service/sms/doc.go||service/sms/doc.go": [
      "File: service/sms/doc.go -> service/sms/doc.go"
    ],
    "service/sms/errors.go||service/sms/errors.go": [
      "File: service/sms/errors.go -> service/sms/errors.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "9: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "16:  ErrCodeDryRunOperationException = \"DryRunOperationException\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "78: )",
      "80: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
      "81:  \"InternalError\":                        newErrorInternalError,",
      "82:  \"InvalidParameterException\":            newErrorInvalidParameterException,",
      "83:  \"MissingRequiredParameterException\":    newErrorMissingRequiredParameterException,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "88:  \"DryRunOperationException\":             newErrorDryRunOperationException,",
      "",
      "---------------"
    ],
    "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go": [
      "File: service/sms/smsiface/interface.go -> service/sms/smsiface/interface.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "80:  DeleteAppReplicationConfigurationWithContext(aws.Context, *sms.DeleteAppReplicationConfigurationInput, ...request.Option) (*sms.DeleteAppReplicationConfigurationOutput, error)",
      "81:  DeleteAppReplicationConfigurationRequest(*sms.DeleteAppReplicationConfigurationInput) (*request.Request, *sms.DeleteAppReplicationConfigurationOutput)",
      "83:  DeleteReplicationJob(*sms.DeleteReplicationJobInput) (*sms.DeleteReplicationJobOutput, error)",
      "84:  DeleteReplicationJobWithContext(aws.Context, *sms.DeleteReplicationJobInput, ...request.Option) (*sms.DeleteReplicationJobOutput, error)",
      "85:  DeleteReplicationJobRequest(*sms.DeleteReplicationJobInput) (*request.Request, *sms.DeleteReplicationJobOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "83:  DeleteAppValidationConfiguration(*sms.DeleteAppValidationConfigurationInput) (*sms.DeleteAppValidationConfigurationOutput, error)",
      "84:  DeleteAppValidationConfigurationWithContext(aws.Context, *sms.DeleteAppValidationConfigurationInput, ...request.Option) (*sms.DeleteAppValidationConfigurationOutput, error)",
      "85:  DeleteAppValidationConfigurationRequest(*sms.DeleteAppValidationConfigurationInput) (*request.Request, *sms.DeleteAppValidationConfigurationOutput)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "112:  GetAppReplicationConfigurationWithContext(aws.Context, *sms.GetAppReplicationConfigurationInput, ...request.Option) (*sms.GetAppReplicationConfigurationOutput, error)",
      "113:  GetAppReplicationConfigurationRequest(*sms.GetAppReplicationConfigurationInput) (*request.Request, *sms.GetAppReplicationConfigurationOutput)",
      "115:  GetConnectors(*sms.GetConnectorsInput) (*sms.GetConnectorsOutput, error)",
      "116:  GetConnectorsWithContext(aws.Context, *sms.GetConnectorsInput, ...request.Option) (*sms.GetConnectorsOutput, error)",
      "117:  GetConnectorsRequest(*sms.GetConnectorsInput) (*request.Request, *sms.GetConnectorsOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "119:  GetAppValidationConfiguration(*sms.GetAppValidationConfigurationInput) (*sms.GetAppValidationConfigurationOutput, error)",
      "120:  GetAppValidationConfigurationWithContext(aws.Context, *sms.GetAppValidationConfigurationInput, ...request.Option) (*sms.GetAppValidationConfigurationOutput, error)",
      "121:  GetAppValidationConfigurationRequest(*sms.GetAppValidationConfigurationInput) (*request.Request, *sms.GetAppValidationConfigurationOutput)",
      "123:  GetAppValidationOutput(*sms.GetAppValidationOutputInput) (*sms.GetAppValidationOutputOutput, error)",
      "124:  GetAppValidationOutputWithContext(aws.Context, *sms.GetAppValidationOutputInput, ...request.Option) (*sms.GetAppValidationOutputOutput, error)",
      "125:  GetAppValidationOutputRequest(*sms.GetAppValidationOutputInput) (*request.Request, *sms.GetAppValidationOutputOutput)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "140:  GetServersPages(*sms.GetServersInput, func(*sms.GetServersOutput, bool) bool) error",
      "141:  GetServersPagesWithContext(aws.Context, *sms.GetServersInput, func(*sms.GetServersOutput, bool) bool, ...request.Option) error",
      "143:  ImportServerCatalog(*sms.ImportServerCatalogInput) (*sms.ImportServerCatalogOutput, error)",
      "144:  ImportServerCatalogWithContext(aws.Context, *sms.ImportServerCatalogInput, ...request.Option) (*sms.ImportServerCatalogOutput, error)",
      "145:  ImportServerCatalogRequest(*sms.ImportServerCatalogInput) (*request.Request, *sms.ImportServerCatalogOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "155:  ImportAppCatalog(*sms.ImportAppCatalogInput) (*sms.ImportAppCatalogOutput, error)",
      "156:  ImportAppCatalogWithContext(aws.Context, *sms.ImportAppCatalogInput, ...request.Option) (*sms.ImportAppCatalogOutput, error)",
      "157:  ImportAppCatalogRequest(*sms.ImportAppCatalogInput) (*request.Request, *sms.ImportAppCatalogOutput)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "152:  ListAppsWithContext(aws.Context, *sms.ListAppsInput, ...request.Option) (*sms.ListAppsOutput, error)",
      "153:  ListAppsRequest(*sms.ListAppsInput) (*request.Request, *sms.ListAppsOutput)",
      "155:  PutAppLaunchConfiguration(*sms.PutAppLaunchConfigurationInput) (*sms.PutAppLaunchConfigurationOutput, error)",
      "156:  PutAppLaunchConfigurationWithContext(aws.Context, *sms.PutAppLaunchConfigurationInput, ...request.Option) (*sms.PutAppLaunchConfigurationOutput, error)",
      "157:  PutAppLaunchConfigurationRequest(*sms.PutAppLaunchConfigurationInput) (*request.Request, *sms.PutAppLaunchConfigurationOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "171:  NotifyAppValidationOutput(*sms.NotifyAppValidationOutputInput) (*sms.NotifyAppValidationOutputOutput, error)",
      "172:  NotifyAppValidationOutputWithContext(aws.Context, *sms.NotifyAppValidationOutputInput, ...request.Option) (*sms.NotifyAppValidationOutputOutput, error)",
      "173:  NotifyAppValidationOutputRequest(*sms.NotifyAppValidationOutputInput) (*request.Request, *sms.NotifyAppValidationOutputOutput)",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "160:  PutAppReplicationConfigurationWithContext(aws.Context, *sms.PutAppReplicationConfigurationInput, ...request.Option) (*sms.PutAppReplicationConfigurationOutput, error)",
      "161:  PutAppReplicationConfigurationRequest(*sms.PutAppReplicationConfigurationInput) (*request.Request, *sms.PutAppReplicationConfigurationOutput)",
      "163:  StartAppReplication(*sms.StartAppReplicationInput) (*sms.StartAppReplicationOutput, error)",
      "164:  StartAppReplicationWithContext(aws.Context, *sms.StartAppReplicationInput, ...request.Option) (*sms.StartAppReplicationOutput, error)",
      "165:  StartAppReplicationRequest(*sms.StartAppReplicationInput) (*request.Request, *sms.StartAppReplicationOutput)",
      "167:  StartOnDemandReplicationRun(*sms.StartOnDemandReplicationRunInput) (*sms.StartOnDemandReplicationRunOutput, error)",
      "168:  StartOnDemandReplicationRunWithContext(aws.Context, *sms.StartOnDemandReplicationRunInput, ...request.Option) (*sms.StartOnDemandReplicationRunOutput, error)",
      "169:  StartOnDemandReplicationRunRequest(*sms.StartOnDemandReplicationRunInput) (*request.Request, *sms.StartOnDemandReplicationRunOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "183:  PutAppValidationConfiguration(*sms.PutAppValidationConfigurationInput) (*sms.PutAppValidationConfigurationOutput, error)",
      "184:  PutAppValidationConfigurationWithContext(aws.Context, *sms.PutAppValidationConfigurationInput, ...request.Option) (*sms.PutAppValidationConfigurationOutput, error)",
      "185:  PutAppValidationConfigurationRequest(*sms.PutAppValidationConfigurationInput) (*request.Request, *sms.PutAppValidationConfigurationOutput)",
      "191:  StartOnDemandAppReplication(*sms.StartOnDemandAppReplicationInput) (*sms.StartOnDemandAppReplicationOutput, error)",
      "192:  StartOnDemandAppReplicationWithContext(aws.Context, *sms.StartOnDemandAppReplicationInput, ...request.Option) (*sms.StartOnDemandAppReplicationOutput, error)",
      "193:  StartOnDemandAppReplicationRequest(*sms.StartOnDemandAppReplicationInput) (*request.Request, *sms.StartOnDemandAppReplicationOutput)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9caaeed785b2f481b1c848e1e34322baec131ce4",
      "candidate_info": {
        "commit_hash": "9caaeed785b2f481b1c848e1e34322baec131ce4",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/9caaeed785b2f481b1c848e1e34322baec131ce4",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/appflow/2020-08-23/api-2.json",
          "models/apis/appflow/2020-08-23/docs-2.json",
          "models/apis/appflow/2020-08-23/examples-1.json",
          "models/apis/appflow/2020-08-23/paginators-1.json",
          "models/apis/route53resolver/2018-04-01/api-2.json",
          "models/apis/route53resolver/2018-04-01/docs-2.json",
          "models/apis/route53resolver/2018-04-01/paginators-1.json",
          "models/endpoints/endpoints.json",
          "service/appflow/api.go",
          "service/appflow/appflowiface/interface.go",
          "service/appflow/doc.go",
          "service/appflow/errors.go",
          "service/appflow/service.go",
          "service/route53resolver/api.go",
          "service/route53resolver/doc.go",
          "service/route53resolver/errors.go",
          "service/route53resolver/route53resolveriface/interface.go"
        ],
        "message": "Release v1.34.11 (2020-08-26) ===\n\n### Service Client Updates\n* `service/appflow`: Adds new service\n* `service/route53resolver`: Updates service API, documentation, and paginators",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/appflow/api.go||service/appflow/api.go",
          "service/appflow/appflowiface/interface.go||service/appflow/appflowiface/interface.go",
          "service/appflow/doc.go||service/appflow/doc.go",
          "service/appflow/errors.go||service/appflow/errors.go",
          "service/appflow/service.go||service/appflow/service.go",
          "service/route53resolver/api.go||service/route53resolver/api.go",
          "service/route53resolver/doc.go||service/route53resolver/doc.go",
          "service/route53resolver/errors.go||service/route53resolver/errors.go",
          "service/route53resolver/route53resolveriface/interface.go||service/route53resolver/route53resolveriface/interface.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3305:     \"ca-central-1\":   endpoint{},",
          "3306:     \"eu-central-1\":   endpoint{},",
          "3307:     \"eu-north-1\":     endpoint{},",
          "3308:     \"eu-west-1\":      endpoint{},",
          "3309:     \"eu-west-2\":      endpoint{},",
          "3310:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3308:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8092:     },",
          "8093:    },",
          "8094:    Endpoints: endpoints{",
          "8095:     \"us-gov-west-1\": endpoint{},",
          "8096:    },",
          "8097:   },",
          "8098:   \"iotsecuredtunneling\": service{",
          "8100:    Endpoints: endpoints{",
          "8101:     \"us-gov-west-1\": endpoint{},",
          "8102:    },",
          "8103:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8096:     \"us-gov-east-1\": endpoint{},",
          "8103:     \"us-gov-east-1\": endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.34.10\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.34.11\"",
          "",
          "---------------"
        ],
        "service/appflow/api.go||service/appflow/api.go": [
          "File: service/appflow/api.go -> service/appflow/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: package appflow",
          "5: import (",
          "6:  \"fmt\"",
          "7:  \"time\"",
          "9:  \"github.com/aws/aws-sdk-go/aws\"",
          "10:  \"github.com/aws/aws-sdk-go/aws/awsutil\"",
          "11:  \"github.com/aws/aws-sdk-go/aws/request\"",
          "12:  \"github.com/aws/aws-sdk-go/private/protocol\"",
          "13:  \"github.com/aws/aws-sdk-go/private/protocol/restjson\"",
          "14: )",
          "16: const opCreateConnectorProfile = \"CreateConnectorProfile\"",
          "42: func (c *Appflow) CreateConnectorProfileRequest(input *CreateConnectorProfileInput) (req *request.Request, output *CreateConnectorProfileOutput) {",
          "43:  op := &request.Operation{",
          "44:   Name:       opCreateConnectorProfile,",
          "45:   HTTPMethod: \"POST\",",
          "46:   HTTPPath:   \"/create-connector-profile\",",
          "47:  }",
          "49:  if input == nil {",
          "50:   input = &CreateConnectorProfileInput{}",
          "51:  }",
          "53:  output = &CreateConnectorProfileOutput{}",
          "54:  req = c.newRequest(op, input, output)",
          "55:  return",
          "56: }",
          "93: func (c *Appflow) CreateConnectorProfile(input *CreateConnectorProfileInput) (*CreateConnectorProfileOutput, error) {",
          "94:  req, out := c.CreateConnectorProfileRequest(input)",
          "95:  return out, req.Send()",
          "96: }",
          "107: func (c *Appflow) CreateConnectorProfileWithContext(ctx aws.Context, input *CreateConnectorProfileInput, opts ...request.Option) (*CreateConnectorProfileOutput, error) {",
          "108:  req, out := c.CreateConnectorProfileRequest(input)",
          "109:  req.SetContext(ctx)",
          "110:  req.ApplyOptions(opts...)",
          "111:  return out, req.Send()",
          "112: }",
          "114: const opCreateFlow = \"CreateFlow\"",
          "140: func (c *Appflow) CreateFlowRequest(input *CreateFlowInput) (req *request.Request, output *CreateFlowOutput) {",
          "141:  op := &request.Operation{",
          "142:   Name:       opCreateFlow,",
          "143:   HTTPMethod: \"POST\",",
          "144:   HTTPPath:   \"/create-flow\",",
          "145:  }",
          "147:  if input == nil {",
          "148:   input = &CreateFlowInput{}",
          "149:  }",
          "151:  output = &CreateFlowOutput{}",
          "152:  req = c.newRequest(op, input, output)",
          "153:  return",
          "154: }",
          "199: func (c *Appflow) CreateFlow(input *CreateFlowInput) (*CreateFlowOutput, error) {",
          "200:  req, out := c.CreateFlowRequest(input)",
          "201:  return out, req.Send()",
          "202: }",
          "213: func (c *Appflow) CreateFlowWithContext(ctx aws.Context, input *CreateFlowInput, opts ...request.Option) (*CreateFlowOutput, error) {",
          "214:  req, out := c.CreateFlowRequest(input)",
          "215:  req.SetContext(ctx)",
          "216:  req.ApplyOptions(opts...)",
          "217:  return out, req.Send()",
          "218: }",
          "220: const opDeleteConnectorProfile = \"DeleteConnectorProfile\"",
          "246: func (c *Appflow) DeleteConnectorProfileRequest(input *DeleteConnectorProfileInput) (req *request.Request, output *DeleteConnectorProfileOutput) {",
          "247:  op := &request.Operation{",
          "248:   Name:       opDeleteConnectorProfile,",
          "249:   HTTPMethod: \"POST\",",
          "250:   HTTPPath:   \"/delete-connector-profile\",",
          "251:  }",
          "253:  if input == nil {",
          "254:   input = &DeleteConnectorProfileInput{}",
          "255:  }",
          "257:  output = &DeleteConnectorProfileOutput{}",
          "258:  req = c.newRequest(op, input, output)",
          "259:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "260:  return",
          "261: }",
          "289: func (c *Appflow) DeleteConnectorProfile(input *DeleteConnectorProfileInput) (*DeleteConnectorProfileOutput, error) {",
          "290:  req, out := c.DeleteConnectorProfileRequest(input)",
          "291:  return out, req.Send()",
          "292: }",
          "303: func (c *Appflow) DeleteConnectorProfileWithContext(ctx aws.Context, input *DeleteConnectorProfileInput, opts ...request.Option) (*DeleteConnectorProfileOutput, error) {",
          "304:  req, out := c.DeleteConnectorProfileRequest(input)",
          "305:  req.SetContext(ctx)",
          "306:  req.ApplyOptions(opts...)",
          "307:  return out, req.Send()",
          "308: }",
          "310: const opDeleteFlow = \"DeleteFlow\"",
          "336: func (c *Appflow) DeleteFlowRequest(input *DeleteFlowInput) (req *request.Request, output *DeleteFlowOutput) {",
          "337:  op := &request.Operation{",
          "338:   Name:       opDeleteFlow,",
          "339:   HTTPMethod: \"POST\",",
          "340:   HTTPPath:   \"/delete-flow\",",
          "341:  }",
          "343:  if input == nil {",
          "344:   input = &DeleteFlowInput{}",
          "345:  }",
          "347:  output = &DeleteFlowOutput{}",
          "348:  req = c.newRequest(op, input, output)",
          "349:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "350:  return",
          "351: }",
          "381: func (c *Appflow) DeleteFlow(input *DeleteFlowInput) (*DeleteFlowOutput, error) {",
          "382:  req, out := c.DeleteFlowRequest(input)",
          "383:  return out, req.Send()",
          "384: }",
          "395: func (c *Appflow) DeleteFlowWithContext(ctx aws.Context, input *DeleteFlowInput, opts ...request.Option) (*DeleteFlowOutput, error) {",
          "396:  req, out := c.DeleteFlowRequest(input)",
          "397:  req.SetContext(ctx)",
          "398:  req.ApplyOptions(opts...)",
          "399:  return out, req.Send()",
          "400: }",
          "402: const opDescribeConnectorEntity = \"DescribeConnectorEntity\"",
          "428: func (c *Appflow) DescribeConnectorEntityRequest(input *DescribeConnectorEntityInput) (req *request.Request, output *DescribeConnectorEntityOutput) {",
          "429:  op := &request.Operation{",
          "430:   Name:       opDescribeConnectorEntity,",
          "431:   HTTPMethod: \"POST\",",
          "432:   HTTPPath:   \"/describe-connector-entity\",",
          "433:  }",
          "435:  if input == nil {",
          "436:   input = &DescribeConnectorEntityInput{}",
          "437:  }",
          "439:  output = &DescribeConnectorEntityOutput{}",
          "440:  req = c.newRequest(op, input, output)",
          "441:  return",
          "442: }",
          "475: func (c *Appflow) DescribeConnectorEntity(input *DescribeConnectorEntityInput) (*DescribeConnectorEntityOutput, error) {",
          "476:  req, out := c.DescribeConnectorEntityRequest(input)",
          "477:  return out, req.Send()",
          "478: }",
          "489: func (c *Appflow) DescribeConnectorEntityWithContext(ctx aws.Context, input *DescribeConnectorEntityInput, opts ...request.Option) (*DescribeConnectorEntityOutput, error) {",
          "490:  req, out := c.DescribeConnectorEntityRequest(input)",
          "491:  req.SetContext(ctx)",
          "492:  req.ApplyOptions(opts...)",
          "493:  return out, req.Send()",
          "494: }",
          "496: const opDescribeConnectorProfiles = \"DescribeConnectorProfiles\"",
          "522: func (c *Appflow) DescribeConnectorProfilesRequest(input *DescribeConnectorProfilesInput) (req *request.Request, output *DescribeConnectorProfilesOutput) {",
          "523:  op := &request.Operation{",
          "524:   Name:       opDescribeConnectorProfiles,",
          "525:   HTTPMethod: \"POST\",",
          "526:   HTTPPath:   \"/describe-connector-profiles\",",
          "527:   Paginator: &request.Paginator{",
          "528:    InputTokens:     []string{\"nextToken\"},",
          "529:    OutputTokens:    []string{\"nextToken\"},",
          "530:    LimitToken:      \"maxResults\",",
          "531:    TruncationToken: \"\",",
          "532:   },",
          "533:  }",
          "535:  if input == nil {",
          "536:   input = &DescribeConnectorProfilesInput{}",
          "537:  }",
          "539:  output = &DescribeConnectorProfilesOutput{}",
          "540:  req = c.newRequest(op, input, output)",
          "541:  return",
          "542: }",
          "570: func (c *Appflow) DescribeConnectorProfiles(input *DescribeConnectorProfilesInput) (*DescribeConnectorProfilesOutput, error) {",
          "571:  req, out := c.DescribeConnectorProfilesRequest(input)",
          "572:  return out, req.Send()",
          "573: }",
          "584: func (c *Appflow) DescribeConnectorProfilesWithContext(ctx aws.Context, input *DescribeConnectorProfilesInput, opts ...request.Option) (*DescribeConnectorProfilesOutput, error) {",
          "585:  req, out := c.DescribeConnectorProfilesRequest(input)",
          "586:  req.SetContext(ctx)",
          "587:  req.ApplyOptions(opts...)",
          "588:  return out, req.Send()",
          "589: }",
          "608: func (c *Appflow) DescribeConnectorProfilesPages(input *DescribeConnectorProfilesInput, fn func(*DescribeConnectorProfilesOutput, bool) bool) error {",
          "609:  return c.DescribeConnectorProfilesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "610: }",
          "619: func (c *Appflow) DescribeConnectorProfilesPagesWithContext(ctx aws.Context, input *DescribeConnectorProfilesInput, fn func(*DescribeConnectorProfilesOutput, bool) bool, opts ...request.Option) error {",
          "620:  p := request.Pagination{",
          "621:   NewRequest: func() (*request.Request, error) {",
          "622:    var inCpy *DescribeConnectorProfilesInput",
          "623:    if input != nil {",
          "624:     tmp := *input",
          "625:     inCpy = &tmp",
          "626:    }",
          "627:    req, _ := c.DescribeConnectorProfilesRequest(inCpy)",
          "628:    req.SetContext(ctx)",
          "629:    req.ApplyOptions(opts...)",
          "630:    return req, nil",
          "631:   },",
          "632:  }",
          "634:  for p.Next() {",
          "635:   if !fn(p.Page().(*DescribeConnectorProfilesOutput), !p.HasNextPage()) {",
          "636:    break",
          "637:   }",
          "638:  }",
          "640:  return p.Err()",
          "641: }",
          "643: const opDescribeConnectors = \"DescribeConnectors\"",
          "669: func (c *Appflow) DescribeConnectorsRequest(input *DescribeConnectorsInput) (req *request.Request, output *DescribeConnectorsOutput) {",
          "670:  op := &request.Operation{",
          "671:   Name:       opDescribeConnectors,",
          "672:   HTTPMethod: \"POST\",",
          "673:   HTTPPath:   \"/describe-connectors\",",
          "674:   Paginator: &request.Paginator{",
          "675:    InputTokens:     []string{\"nextToken\"},",
          "676:    OutputTokens:    []string{\"nextToken\"},",
          "677:    LimitToken:      \"\",",
          "678:    TruncationToken: \"\",",
          "679:   },",
          "680:  }",
          "682:  if input == nil {",
          "683:   input = &DescribeConnectorsInput{}",
          "684:  }",
          "686:  output = &DescribeConnectorsOutput{}",
          "687:  req = c.newRequest(op, input, output)",
          "688:  return",
          "689: }",
          "716: func (c *Appflow) DescribeConnectors(input *DescribeConnectorsInput) (*DescribeConnectorsOutput, error) {",
          "717:  req, out := c.DescribeConnectorsRequest(input)",
          "718:  return out, req.Send()",
          "719: }",
          "730: func (c *Appflow) DescribeConnectorsWithContext(ctx aws.Context, input *DescribeConnectorsInput, opts ...request.Option) (*DescribeConnectorsOutput, error) {",
          "731:  req, out := c.DescribeConnectorsRequest(input)",
          "732:  req.SetContext(ctx)",
          "733:  req.ApplyOptions(opts...)",
          "734:  return out, req.Send()",
          "735: }",
          "754: func (c *Appflow) DescribeConnectorsPages(input *DescribeConnectorsInput, fn func(*DescribeConnectorsOutput, bool) bool) error {",
          "755:  return c.DescribeConnectorsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "756: }",
          "765: func (c *Appflow) DescribeConnectorsPagesWithContext(ctx aws.Context, input *DescribeConnectorsInput, fn func(*DescribeConnectorsOutput, bool) bool, opts ...request.Option) error {",
          "766:  p := request.Pagination{",
          "767:   NewRequest: func() (*request.Request, error) {",
          "768:    var inCpy *DescribeConnectorsInput",
          "769:    if input != nil {",
          "770:     tmp := *input",
          "771:     inCpy = &tmp",
          "772:    }",
          "773:    req, _ := c.DescribeConnectorsRequest(inCpy)",
          "774:    req.SetContext(ctx)",
          "775:    req.ApplyOptions(opts...)",
          "776:    return req, nil",
          "777:   },",
          "778:  }",
          "780:  for p.Next() {",
          "781:   if !fn(p.Page().(*DescribeConnectorsOutput), !p.HasNextPage()) {",
          "782:    break",
          "783:   }",
          "784:  }",
          "786:  return p.Err()",
          "787: }",
          "789: const opDescribeFlow = \"DescribeFlow\"",
          "815: func (c *Appflow) DescribeFlowRequest(input *DescribeFlowInput) (req *request.Request, output *DescribeFlowOutput) {",
          "816:  op := &request.Operation{",
          "817:   Name:       opDescribeFlow,",
          "818:   HTTPMethod: \"POST\",",
          "819:   HTTPPath:   \"/describe-flow\",",
          "820:  }",
          "822:  if input == nil {",
          "823:   input = &DescribeFlowInput{}",
          "824:  }",
          "826:  output = &DescribeFlowOutput{}",
          "827:  req = c.newRequest(op, input, output)",
          "828:  return",
          "829: }",
          "852: func (c *Appflow) DescribeFlow(input *DescribeFlowInput) (*DescribeFlowOutput, error) {",
          "853:  req, out := c.DescribeFlowRequest(input)",
          "854:  return out, req.Send()",
          "855: }",
          "866: func (c *Appflow) DescribeFlowWithContext(ctx aws.Context, input *DescribeFlowInput, opts ...request.Option) (*DescribeFlowOutput, error) {",
          "867:  req, out := c.DescribeFlowRequest(input)",
          "868:  req.SetContext(ctx)",
          "869:  req.ApplyOptions(opts...)",
          "870:  return out, req.Send()",
          "871: }",
          "873: const opDescribeFlowExecutionRecords = \"DescribeFlowExecutionRecords\"",
          "899: func (c *Appflow) DescribeFlowExecutionRecordsRequest(input *DescribeFlowExecutionRecordsInput) (req *request.Request, output *DescribeFlowExecutionRecordsOutput) {",
          "900:  op := &request.Operation{",
          "901:   Name:       opDescribeFlowExecutionRecords,",
          "902:   HTTPMethod: \"POST\",",
          "903:   HTTPPath:   \"/describe-flow-execution-records\",",
          "904:   Paginator: &request.Paginator{",
          "905:    InputTokens:     []string{\"nextToken\"},",
          "906:    OutputTokens:    []string{\"nextToken\"},",
          "907:    LimitToken:      \"maxResults\",",
          "908:    TruncationToken: \"\",",
          "909:   },",
          "910:  }",
          "912:  if input == nil {",
          "913:   input = &DescribeFlowExecutionRecordsInput{}",
          "914:  }",
          "916:  output = &DescribeFlowExecutionRecordsOutput{}",
          "917:  req = c.newRequest(op, input, output)",
          "918:  return",
          "919: }",
          "945: func (c *Appflow) DescribeFlowExecutionRecords(input *DescribeFlowExecutionRecordsInput) (*DescribeFlowExecutionRecordsOutput, error) {",
          "946:  req, out := c.DescribeFlowExecutionRecordsRequest(input)",
          "947:  return out, req.Send()",
          "948: }",
          "959: func (c *Appflow) DescribeFlowExecutionRecordsWithContext(ctx aws.Context, input *DescribeFlowExecutionRecordsInput, opts ...request.Option) (*DescribeFlowExecutionRecordsOutput, error) {",
          "960:  req, out := c.DescribeFlowExecutionRecordsRequest(input)",
          "961:  req.SetContext(ctx)",
          "962:  req.ApplyOptions(opts...)",
          "963:  return out, req.Send()",
          "964: }",
          "983: func (c *Appflow) DescribeFlowExecutionRecordsPages(input *DescribeFlowExecutionRecordsInput, fn func(*DescribeFlowExecutionRecordsOutput, bool) bool) error {",
          "984:  return c.DescribeFlowExecutionRecordsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "985: }",
          "994: func (c *Appflow) DescribeFlowExecutionRecordsPagesWithContext(ctx aws.Context, input *DescribeFlowExecutionRecordsInput, fn func(*DescribeFlowExecutionRecordsOutput, bool) bool, opts ...request.Option) error {",
          "995:  p := request.Pagination{",
          "996:   NewRequest: func() (*request.Request, error) {",
          "997:    var inCpy *DescribeFlowExecutionRecordsInput",
          "998:    if input != nil {",
          "999:     tmp := *input",
          "1000:     inCpy = &tmp",
          "1001:    }",
          "1002:    req, _ := c.DescribeFlowExecutionRecordsRequest(inCpy)",
          "1003:    req.SetContext(ctx)",
          "1004:    req.ApplyOptions(opts...)",
          "1005:    return req, nil",
          "1006:   },",
          "1007:  }",
          "1009:  for p.Next() {",
          "1010:   if !fn(p.Page().(*DescribeFlowExecutionRecordsOutput), !p.HasNextPage()) {",
          "1011:    break",
          "1012:   }",
          "1013:  }",
          "1015:  return p.Err()",
          "1016: }",
          "1018: const opListConnectorEntities = \"ListConnectorEntities\"",
          "1044: func (c *Appflow) ListConnectorEntitiesRequest(input *ListConnectorEntitiesInput) (req *request.Request, output *ListConnectorEntitiesOutput) {",
          "1045:  op := &request.Operation{",
          "1046:   Name:       opListConnectorEntities,",
          "1047:   HTTPMethod: \"POST\",",
          "1048:   HTTPPath:   \"/list-connector-entities\",",
          "1049:  }",
          "1051:  if input == nil {",
          "1052:   input = &ListConnectorEntitiesInput{}",
          "1053:  }",
          "1055:  output = &ListConnectorEntitiesOutput{}",
          "1056:  req = c.newRequest(op, input, output)",
          "1057:  return",
          "1058: }",
          "1092: func (c *Appflow) ListConnectorEntities(input *ListConnectorEntitiesInput) (*ListConnectorEntitiesOutput, error) {",
          "1093:  req, out := c.ListConnectorEntitiesRequest(input)",
          "1094:  return out, req.Send()",
          "1095: }",
          "1106: func (c *Appflow) ListConnectorEntitiesWithContext(ctx aws.Context, input *ListConnectorEntitiesInput, opts ...request.Option) (*ListConnectorEntitiesOutput, error) {",
          "1107:  req, out := c.ListConnectorEntitiesRequest(input)",
          "1108:  req.SetContext(ctx)",
          "1109:  req.ApplyOptions(opts...)",
          "1110:  return out, req.Send()",
          "1111: }",
          "1113: const opListFlows = \"ListFlows\"",
          "1139: func (c *Appflow) ListFlowsRequest(input *ListFlowsInput) (req *request.Request, output *ListFlowsOutput) {",
          "1140:  op := &request.Operation{",
          "1141:   Name:       opListFlows,",
          "1142:   HTTPMethod: \"POST\",",
          "1143:   HTTPPath:   \"/list-flows\",",
          "1144:   Paginator: &request.Paginator{",
          "1145:    InputTokens:     []string{\"nextToken\"},",
          "1146:    OutputTokens:    []string{\"nextToken\"},",
          "1147:    LimitToken:      \"maxResults\",",
          "1148:    TruncationToken: \"\",",
          "1149:   },",
          "1150:  }",
          "1152:  if input == nil {",
          "1153:   input = &ListFlowsInput{}",
          "1154:  }",
          "1156:  output = &ListFlowsOutput{}",
          "1157:  req = c.newRequest(op, input, output)",
          "1158:  return",
          "1159: }",
          "1181: func (c *Appflow) ListFlows(input *ListFlowsInput) (*ListFlowsOutput, error) {",
          "1182:  req, out := c.ListFlowsRequest(input)",
          "1183:  return out, req.Send()",
          "1184: }",
          "1195: func (c *Appflow) ListFlowsWithContext(ctx aws.Context, input *ListFlowsInput, opts ...request.Option) (*ListFlowsOutput, error) {",
          "1196:  req, out := c.ListFlowsRequest(input)",
          "1197:  req.SetContext(ctx)",
          "1198:  req.ApplyOptions(opts...)",
          "1199:  return out, req.Send()",
          "1200: }",
          "1219: func (c *Appflow) ListFlowsPages(input *ListFlowsInput, fn func(*ListFlowsOutput, bool) bool) error {",
          "1220:  return c.ListFlowsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1221: }",
          "1230: func (c *Appflow) ListFlowsPagesWithContext(ctx aws.Context, input *ListFlowsInput, fn func(*ListFlowsOutput, bool) bool, opts ...request.Option) error {",
          "1231:  p := request.Pagination{",
          "1232:   NewRequest: func() (*request.Request, error) {",
          "1233:    var inCpy *ListFlowsInput",
          "1234:    if input != nil {",
          "1235:     tmp := *input",
          "1236:     inCpy = &tmp",
          "1237:    }",
          "1238:    req, _ := c.ListFlowsRequest(inCpy)",
          "1239:    req.SetContext(ctx)",
          "1240:    req.ApplyOptions(opts...)",
          "1241:    return req, nil",
          "1242:   },",
          "1243:  }",
          "1245:  for p.Next() {",
          "1246:   if !fn(p.Page().(*ListFlowsOutput), !p.HasNextPage()) {",
          "1247:    break",
          "1248:   }",
          "1249:  }",
          "1251:  return p.Err()",
          "1252: }",
          "1254: const opListTagsForResource = \"ListTagsForResource\"",
          "1280: func (c *Appflow) ListTagsForResourceRequest(input *ListTagsForResourceInput) (req *request.Request, output *ListTagsForResourceOutput) {",
          "1281:  op := &request.Operation{",
          "1282:   Name:       opListTagsForResource,",
          "1283:   HTTPMethod: \"GET\",",
          "1284:   HTTPPath:   \"/tags/{resourceArn}\",",
          "1285:  }",
          "1287:  if input == nil {",
          "1288:   input = &ListTagsForResourceInput{}",
          "1289:  }",
          "1291:  output = &ListTagsForResourceOutput{}",
          "1292:  req = c.newRequest(op, input, output)",
          "1293:  return",
          "1294: }",
          "1320: func (c *Appflow) ListTagsForResource(input *ListTagsForResourceInput) (*ListTagsForResourceOutput, error) {",
          "1321:  req, out := c.ListTagsForResourceRequest(input)",
          "1322:  return out, req.Send()",
          "1323: }",
          "1334: func (c *Appflow) ListTagsForResourceWithContext(ctx aws.Context, input *ListTagsForResourceInput, opts ...request.Option) (*ListTagsForResourceOutput, error) {",
          "1335:  req, out := c.ListTagsForResourceRequest(input)",
          "1336:  req.SetContext(ctx)",
          "1337:  req.ApplyOptions(opts...)",
          "1338:  return out, req.Send()",
          "1339: }",
          "1341: const opStartFlow = \"StartFlow\"",
          "1367: func (c *Appflow) StartFlowRequest(input *StartFlowInput) (req *request.Request, output *StartFlowOutput) {",
          "1368:  op := &request.Operation{",
          "1369:   Name:       opStartFlow,",
          "1370:   HTTPMethod: \"POST\",",
          "1371:   HTTPPath:   \"/start-flow\",",
          "1372:  }",
          "1374:  if input == nil {",
          "1375:   input = &StartFlowInput{}",
          "1376:  }",
          "1378:  output = &StartFlowOutput{}",
          "1379:  req = c.newRequest(op, input, output)",
          "1380:  return",
          "1381: }",
          "1415: func (c *Appflow) StartFlow(input *StartFlowInput) (*StartFlowOutput, error) {",
          "1416:  req, out := c.StartFlowRequest(input)",
          "1417:  return out, req.Send()",
          "1418: }",
          "1429: func (c *Appflow) StartFlowWithContext(ctx aws.Context, input *StartFlowInput, opts ...request.Option) (*StartFlowOutput, error) {",
          "1430:  req, out := c.StartFlowRequest(input)",
          "1431:  req.SetContext(ctx)",
          "1432:  req.ApplyOptions(opts...)",
          "1433:  return out, req.Send()",
          "1434: }",
          "1436: const opStopFlow = \"StopFlow\"",
          "1462: func (c *Appflow) StopFlowRequest(input *StopFlowInput) (req *request.Request, output *StopFlowOutput) {",
          "1463:  op := &request.Operation{",
          "1464:   Name:       opStopFlow,",
          "1465:   HTTPMethod: \"POST\",",
          "1466:   HTTPPath:   \"/stop-flow\",",
          "1467:  }",
          "1469:  if input == nil {",
          "1470:   input = &StopFlowInput{}",
          "1471:  }",
          "1473:  output = &StopFlowOutput{}",
          "1474:  req = c.newRequest(op, input, output)",
          "1475:  return",
          "1476: }",
          "1509: func (c *Appflow) StopFlow(input *StopFlowInput) (*StopFlowOutput, error) {",
          "1510:  req, out := c.StopFlowRequest(input)",
          "1511:  return out, req.Send()",
          "1512: }",
          "1523: func (c *Appflow) StopFlowWithContext(ctx aws.Context, input *StopFlowInput, opts ...request.Option) (*StopFlowOutput, error) {",
          "1524:  req, out := c.StopFlowRequest(input)",
          "1525:  req.SetContext(ctx)",
          "1526:  req.ApplyOptions(opts...)",
          "1527:  return out, req.Send()",
          "1528: }",
          "1530: const opTagResource = \"TagResource\"",
          "1556: func (c *Appflow) TagResourceRequest(input *TagResourceInput) (req *request.Request, output *TagResourceOutput) {",
          "1557:  op := &request.Operation{",
          "1558:   Name:       opTagResource,",
          "1559:   HTTPMethod: \"POST\",",
          "1560:   HTTPPath:   \"/tags/{resourceArn}\",",
          "1561:  }",
          "1563:  if input == nil {",
          "1564:   input = &TagResourceInput{}",
          "1565:  }",
          "1567:  output = &TagResourceOutput{}",
          "1568:  req = c.newRequest(op, input, output)",
          "1569:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "1570:  return",
          "1571: }",
          "1597: func (c *Appflow) TagResource(input *TagResourceInput) (*TagResourceOutput, error) {",
          "1598:  req, out := c.TagResourceRequest(input)",
          "1599:  return out, req.Send()",
          "1600: }",
          "1611: func (c *Appflow) TagResourceWithContext(ctx aws.Context, input *TagResourceInput, opts ...request.Option) (*TagResourceOutput, error) {",
          "1612:  req, out := c.TagResourceRequest(input)",
          "1613:  req.SetContext(ctx)",
          "1614:  req.ApplyOptions(opts...)",
          "1615:  return out, req.Send()",
          "1616: }",
          "1618: const opUntagResource = \"UntagResource\"",
          "1644: func (c *Appflow) UntagResourceRequest(input *UntagResourceInput) (req *request.Request, output *UntagResourceOutput) {",
          "1645:  op := &request.Operation{",
          "1646:   Name:       opUntagResource,",
          "1647:   HTTPMethod: \"DELETE\",",
          "1648:   HTTPPath:   \"/tags/{resourceArn}\",",
          "1649:  }",
          "1651:  if input == nil {",
          "1652:   input = &UntagResourceInput{}",
          "1653:  }",
          "1655:  output = &UntagResourceOutput{}",
          "1656:  req = c.newRequest(op, input, output)",
          "1657:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "1658:  return",
          "1659: }",
          "1685: func (c *Appflow) UntagResource(input *UntagResourceInput) (*UntagResourceOutput, error) {",
          "1686:  req, out := c.UntagResourceRequest(input)",
          "1687:  return out, req.Send()",
          "1688: }",
          "1699: func (c *Appflow) UntagResourceWithContext(ctx aws.Context, input *UntagResourceInput, opts ...request.Option) (*UntagResourceOutput, error) {",
          "1700:  req, out := c.UntagResourceRequest(input)",
          "1701:  req.SetContext(ctx)",
          "1702:  req.ApplyOptions(opts...)",
          "1703:  return out, req.Send()",
          "1704: }",
          "1706: const opUpdateConnectorProfile = \"UpdateConnectorProfile\"",
          "1732: func (c *Appflow) UpdateConnectorProfileRequest(input *UpdateConnectorProfileInput) (req *request.Request, output *UpdateConnectorProfileOutput) {",
          "1733:  op := &request.Operation{",
          "1734:   Name:       opUpdateConnectorProfile,",
          "1735:   HTTPMethod: \"POST\",",
          "1736:   HTTPPath:   \"/update-connector-profile\",",
          "1737:  }",
          "1739:  if input == nil {",
          "1740:   input = &UpdateConnectorProfileInput{}",
          "1741:  }",
          "1743:  output = &UpdateConnectorProfileOutput{}",
          "1744:  req = c.newRequest(op, input, output)",
          "1745:  return",
          "1746: }",
          "1780: func (c *Appflow) UpdateConnectorProfile(input *UpdateConnectorProfileInput) (*UpdateConnectorProfileOutput, error) {",
          "1781:  req, out := c.UpdateConnectorProfileRequest(input)",
          "1782:  return out, req.Send()",
          "1783: }",
          "1794: func (c *Appflow) UpdateConnectorProfileWithContext(ctx aws.Context, input *UpdateConnectorProfileInput, opts ...request.Option) (*UpdateConnectorProfileOutput, error) {",
          "1795:  req, out := c.UpdateConnectorProfileRequest(input)",
          "1796:  req.SetContext(ctx)",
          "1797:  req.ApplyOptions(opts...)",
          "1798:  return out, req.Send()",
          "1799: }",
          "1801: const opUpdateFlow = \"UpdateFlow\"",
          "1827: func (c *Appflow) UpdateFlowRequest(input *UpdateFlowInput) (req *request.Request, output *UpdateFlowOutput) {",
          "1828:  op := &request.Operation{",
          "1829:   Name:       opUpdateFlow,",
          "1830:   HTTPMethod: \"POST\",",
          "1831:   HTTPPath:   \"/update-flow\",",
          "1832:  }",
          "1834:  if input == nil {",
          "1835:   input = &UpdateFlowInput{}",
          "1836:  }",
          "1838:  output = &UpdateFlowOutput{}",
          "1839:  req = c.newRequest(op, input, output)",
          "1840:  return",
          "1841: }",
          "1882: func (c *Appflow) UpdateFlow(input *UpdateFlowInput) (*UpdateFlowOutput, error) {",
          "1883:  req, out := c.UpdateFlowRequest(input)",
          "1884:  return out, req.Send()",
          "1885: }",
          "1896: func (c *Appflow) UpdateFlowWithContext(ctx aws.Context, input *UpdateFlowInput, opts ...request.Option) (*UpdateFlowOutput, error) {",
          "1897:  req, out := c.UpdateFlowRequest(input)",
          "1898:  req.SetContext(ctx)",
          "1899:  req.ApplyOptions(opts...)",
          "1900:  return out, req.Send()",
          "1901: }",
          "1905: type AggregationConfig struct {",
          "1906:  _ struct{} `type:\"structure\"`",
          "1910:  AggregationType *string `locationName:\"aggregationType\" type:\"string\" enum:\"AggregationType\"`",
          "1911: }",
          "1914: func (s AggregationConfig) String() string {",
          "1915:  return awsutil.Prettify(s)",
          "1916: }",
          "1919: func (s AggregationConfig) GoString() string {",
          "1920:  return s.String()",
          "1921: }",
          "1924: func (s *AggregationConfig) SetAggregationType(v string) *AggregationConfig {",
          "1925:  s.AggregationType = &v",
          "1926:  return s",
          "1927: }",
          "1930: type AmplitudeConnectorProfileCredentials struct {",
          "1931:  _ struct{} `type:\"structure\"`",
          "1937:  ApiKey *string `locationName:\"apiKey\" type:\"string\" required:\"true\"`",
          "1942:  SecretKey *string `locationName:\"secretKey\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "1943: }",
          "1946: func (s AmplitudeConnectorProfileCredentials) String() string {",
          "1947:  return awsutil.Prettify(s)",
          "1948: }",
          "1951: func (s AmplitudeConnectorProfileCredentials) GoString() string {",
          "1952:  return s.String()",
          "1953: }",
          "1956: func (s *AmplitudeConnectorProfileCredentials) Validate() error {",
          "1957:  invalidParams := request.ErrInvalidParams{Context: \"AmplitudeConnectorProfileCredentials\"}",
          "1958:  if s.ApiKey == nil {",
          "1959:   invalidParams.Add(request.NewErrParamRequired(\"ApiKey\"))",
          "1960:  }",
          "1961:  if s.SecretKey == nil {",
          "1962:   invalidParams.Add(request.NewErrParamRequired(\"SecretKey\"))",
          "1963:  }",
          "1965:  if invalidParams.Len() > 0 {",
          "1966:   return invalidParams",
          "1967:  }",
          "1968:  return nil",
          "1969: }",
          "1972: func (s *AmplitudeConnectorProfileCredentials) SetApiKey(v string) *AmplitudeConnectorProfileCredentials {",
          "1973:  s.ApiKey = &v",
          "1974:  return s",
          "1975: }",
          "1978: func (s *AmplitudeConnectorProfileCredentials) SetSecretKey(v string) *AmplitudeConnectorProfileCredentials {",
          "1979:  s.SecretKey = &v",
          "1980:  return s",
          "1981: }",
          "1984: type AmplitudeConnectorProfileProperties struct {",
          "1985:  _ struct{} `type:\"structure\"`",
          "1986: }",
          "1989: func (s AmplitudeConnectorProfileProperties) String() string {",
          "1990:  return awsutil.Prettify(s)",
          "1991: }",
          "1994: func (s AmplitudeConnectorProfileProperties) GoString() string {",
          "1995:  return s.String()",
          "1996: }",
          "1999: type AmplitudeMetadata struct {",
          "2000:  _ struct{} `type:\"structure\"`",
          "2001: }",
          "2004: func (s AmplitudeMetadata) String() string {",
          "2005:  return awsutil.Prettify(s)",
          "2006: }",
          "2009: func (s AmplitudeMetadata) GoString() string {",
          "2010:  return s.String()",
          "2011: }",
          "2014: type AmplitudeSourceProperties struct {",
          "2015:  _ struct{} `type:\"structure\"`",
          "2020:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "2021: }",
          "2024: func (s AmplitudeSourceProperties) String() string {",
          "2025:  return awsutil.Prettify(s)",
          "2026: }",
          "2029: func (s AmplitudeSourceProperties) GoString() string {",
          "2030:  return s.String()",
          "2031: }",
          "2034: func (s *AmplitudeSourceProperties) Validate() error {",
          "2035:  invalidParams := request.ErrInvalidParams{Context: \"AmplitudeSourceProperties\"}",
          "2036:  if s.Object == nil {",
          "2037:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "2038:  }",
          "2040:  if invalidParams.Len() > 0 {",
          "2041:   return invalidParams",
          "2042:  }",
          "2043:  return nil",
          "2044: }",
          "2047: func (s *AmplitudeSourceProperties) SetObject(v string) *AmplitudeSourceProperties {",
          "2048:  s.Object = &v",
          "2049:  return s",
          "2050: }",
          "2055: type ConflictException struct {",
          "2056:  _            struct{}                  `type:\"structure\"`",
          "2057:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "2059:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "2060: }",
          "2063: func (s ConflictException) String() string {",
          "2064:  return awsutil.Prettify(s)",
          "2065: }",
          "2068: func (s ConflictException) GoString() string {",
          "2069:  return s.String()",
          "2070: }",
          "2072: func newErrorConflictException(v protocol.ResponseMetadata) error {",
          "2073:  return &ConflictException{",
          "2074:   RespMetadata: v,",
          "2075:  }",
          "2076: }",
          "2079: func (s *ConflictException) Code() string {",
          "2080:  return \"ConflictException\"",
          "2081: }",
          "2084: func (s *ConflictException) Message() string {",
          "2085:  if s.Message_ != nil {",
          "2086:   return *s.Message_",
          "2087:  }",
          "2088:  return \"\"",
          "2089: }",
          "2092: func (s *ConflictException) OrigErr() error {",
          "2093:  return nil",
          "2094: }",
          "2096: func (s *ConflictException) Error() string {",
          "2097:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "2098: }",
          "2101: func (s *ConflictException) StatusCode() int {",
          "2102:  return s.RespMetadata.StatusCode",
          "2103: }",
          "2106: func (s *ConflictException) RequestID() string {",
          "2107:  return s.RespMetadata.RequestID",
          "2108: }",
          "2111: type ConnectorAuthenticationException struct {",
          "2112:  _            struct{}                  `type:\"structure\"`",
          "2113:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "2115:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "2116: }",
          "2119: func (s ConnectorAuthenticationException) String() string {",
          "2120:  return awsutil.Prettify(s)",
          "2121: }",
          "2124: func (s ConnectorAuthenticationException) GoString() string {",
          "2125:  return s.String()",
          "2126: }",
          "2128: func newErrorConnectorAuthenticationException(v protocol.ResponseMetadata) error {",
          "2129:  return &ConnectorAuthenticationException{",
          "2130:   RespMetadata: v,",
          "2131:  }",
          "2132: }",
          "2135: func (s *ConnectorAuthenticationException) Code() string {",
          "2136:  return \"ConnectorAuthenticationException\"",
          "2137: }",
          "2140: func (s *ConnectorAuthenticationException) Message() string {",
          "2141:  if s.Message_ != nil {",
          "2142:   return *s.Message_",
          "2143:  }",
          "2144:  return \"\"",
          "2145: }",
          "2148: func (s *ConnectorAuthenticationException) OrigErr() error {",
          "2149:  return nil",
          "2150: }",
          "2152: func (s *ConnectorAuthenticationException) Error() string {",
          "2153:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "2154: }",
          "2157: func (s *ConnectorAuthenticationException) StatusCode() int {",
          "2158:  return s.RespMetadata.StatusCode",
          "2159: }",
          "2162: func (s *ConnectorAuthenticationException) RequestID() string {",
          "2163:  return s.RespMetadata.RequestID",
          "2164: }",
          "2167: type ConnectorConfiguration struct {",
          "2168:  _ struct{} `type:\"structure\"`",
          "2171:  CanUseAsDestination *bool `locationName:\"canUseAsDestination\" type:\"boolean\"`",
          "2174:  CanUseAsSource *bool `locationName:\"canUseAsSource\" type:\"boolean\"`",
          "2178:  ConnectorMetadata *ConnectorMetadata `locationName:\"connectorMetadata\" type:\"structure\"`",
          "2181:  IsPrivateLinkEnabled *bool `locationName:\"isPrivateLinkEnabled\" type:\"boolean\"`",
          "2184:  IsPrivateLinkEndpointUrlRequired *bool `locationName:\"isPrivateLinkEndpointUrlRequired\" type:\"boolean\"`",
          "2187:  SupportedDestinationConnectors []*string `locationName:\"supportedDestinationConnectors\" type:\"list\"`",
          "2190:  SupportedSchedulingFrequencies []*string `locationName:\"supportedSchedulingFrequencies\" type:\"list\"`",
          "2193:  SupportedTriggerTypes []*string `locationName:\"supportedTriggerTypes\" type:\"list\"`",
          "2194: }",
          "2197: func (s ConnectorConfiguration) String() string {",
          "2198:  return awsutil.Prettify(s)",
          "2199: }",
          "2202: func (s ConnectorConfiguration) GoString() string {",
          "2203:  return s.String()",
          "2204: }",
          "2207: func (s *ConnectorConfiguration) SetCanUseAsDestination(v bool) *ConnectorConfiguration {",
          "2208:  s.CanUseAsDestination = &v",
          "2209:  return s",
          "2210: }",
          "2213: func (s *ConnectorConfiguration) SetCanUseAsSource(v bool) *ConnectorConfiguration {",
          "2214:  s.CanUseAsSource = &v",
          "2215:  return s",
          "2216: }",
          "2219: func (s *ConnectorConfiguration) SetConnectorMetadata(v *ConnectorMetadata) *ConnectorConfiguration {",
          "2220:  s.ConnectorMetadata = v",
          "2221:  return s",
          "2222: }",
          "2225: func (s *ConnectorConfiguration) SetIsPrivateLinkEnabled(v bool) *ConnectorConfiguration {",
          "2226:  s.IsPrivateLinkEnabled = &v",
          "2227:  return s",
          "2228: }",
          "2231: func (s *ConnectorConfiguration) SetIsPrivateLinkEndpointUrlRequired(v bool) *ConnectorConfiguration {",
          "2232:  s.IsPrivateLinkEndpointUrlRequired = &v",
          "2233:  return s",
          "2234: }",
          "2237: func (s *ConnectorConfiguration) SetSupportedDestinationConnectors(v []*string) *ConnectorConfiguration {",
          "2238:  s.SupportedDestinationConnectors = v",
          "2239:  return s",
          "2240: }",
          "2243: func (s *ConnectorConfiguration) SetSupportedSchedulingFrequencies(v []*string) *ConnectorConfiguration {",
          "2244:  s.SupportedSchedulingFrequencies = v",
          "2245:  return s",
          "2246: }",
          "2249: func (s *ConnectorConfiguration) SetSupportedTriggerTypes(v []*string) *ConnectorConfiguration {",
          "2250:  s.SupportedTriggerTypes = v",
          "2251:  return s",
          "2252: }",
          "2257: type ConnectorEntity struct {",
          "2258:  _ struct{} `type:\"structure\"`",
          "2265:  HasNestedEntities *bool `locationName:\"hasNestedEntities\" type:\"boolean\"`",
          "2268:  Label *string `locationName:\"label\" type:\"string\"`",
          "2273:  Name *string `locationName:\"name\" type:\"string\" required:\"true\"`",
          "2274: }",
          "2277: func (s ConnectorEntity) String() string {",
          "2278:  return awsutil.Prettify(s)",
          "2279: }",
          "2282: func (s ConnectorEntity) GoString() string {",
          "2283:  return s.String()",
          "2284: }",
          "2287: func (s *ConnectorEntity) SetHasNestedEntities(v bool) *ConnectorEntity {",
          "2288:  s.HasNestedEntities = &v",
          "2289:  return s",
          "2290: }",
          "2293: func (s *ConnectorEntity) SetLabel(v string) *ConnectorEntity {",
          "2294:  s.Label = &v",
          "2295:  return s",
          "2296: }",
          "2299: func (s *ConnectorEntity) SetName(v string) *ConnectorEntity {",
          "2300:  s.Name = &v",
          "2301:  return s",
          "2302: }",
          "2306: type ConnectorEntityField struct {",
          "2307:  _ struct{} `type:\"structure\"`",
          "2310:  Description *string `locationName:\"description\" type:\"string\"`",
          "2313:  DestinationProperties *DestinationFieldProperties `locationName:\"destinationProperties\" type:\"structure\"`",
          "2318:  Identifier *string `locationName:\"identifier\" type:\"string\" required:\"true\"`",
          "2321:  Label *string `locationName:\"label\" type:\"string\"`",
          "2325:  SourceProperties *SourceFieldProperties `locationName:\"sourceProperties\" type:\"structure\"`",
          "2329:  SupportedFieldTypeDetails *SupportedFieldTypeDetails `locationName:\"supportedFieldTypeDetails\" type:\"structure\"`",
          "2330: }",
          "2333: func (s ConnectorEntityField) String() string {",
          "2334:  return awsutil.Prettify(s)",
          "2335: }",
          "2338: func (s ConnectorEntityField) GoString() string {",
          "2339:  return s.String()",
          "2340: }",
          "2343: func (s *ConnectorEntityField) SetDescription(v string) *ConnectorEntityField {",
          "2344:  s.Description = &v",
          "2345:  return s",
          "2346: }",
          "2349: func (s *ConnectorEntityField) SetDestinationProperties(v *DestinationFieldProperties) *ConnectorEntityField {",
          "2350:  s.DestinationProperties = v",
          "2351:  return s",
          "2352: }",
          "2355: func (s *ConnectorEntityField) SetIdentifier(v string) *ConnectorEntityField {",
          "2356:  s.Identifier = &v",
          "2357:  return s",
          "2358: }",
          "2361: func (s *ConnectorEntityField) SetLabel(v string) *ConnectorEntityField {",
          "2362:  s.Label = &v",
          "2363:  return s",
          "2364: }",
          "2367: func (s *ConnectorEntityField) SetSourceProperties(v *SourceFieldProperties) *ConnectorEntityField {",
          "2368:  s.SourceProperties = v",
          "2369:  return s",
          "2370: }",
          "2373: func (s *ConnectorEntityField) SetSupportedFieldTypeDetails(v *SupportedFieldTypeDetails) *ConnectorEntityField {",
          "2374:  s.SupportedFieldTypeDetails = v",
          "2375:  return s",
          "2376: }",
          "2380: type ConnectorMetadata struct {",
          "2381:  _ struct{} `type:\"structure\"`",
          "2384:  Amplitude *AmplitudeMetadata `type:\"structure\"`",
          "2387:  Datadog *DatadogMetadata `type:\"structure\"`",
          "2390:  Dynatrace *DynatraceMetadata `type:\"structure\"`",
          "2393:  EventBridge *EventBridgeMetadata `type:\"structure\"`",
          "2396:  GoogleAnalytics *GoogleAnalyticsMetadata `type:\"structure\"`",
          "2399:  InforNexus *InforNexusMetadata `type:\"structure\"`",
          "2402:  Marketo *MarketoMetadata `type:\"structure\"`",
          "2405:  Redshift *RedshiftMetadata `type:\"structure\"`",
          "2408:  S3 *S3Metadata `type:\"structure\"`",
          "2411:  Salesforce *SalesforceMetadata `type:\"structure\"`",
          "2414:  ServiceNow *ServiceNowMetadata `type:\"structure\"`",
          "2417:  Singular *SingularMetadata `type:\"structure\"`",
          "2420:  Slack *SlackMetadata `type:\"structure\"`",
          "2423:  Snowflake *SnowflakeMetadata `type:\"structure\"`",
          "2426:  Trendmicro *TrendmicroMetadata `type:\"structure\"`",
          "2429:  Veeva *VeevaMetadata `type:\"structure\"`",
          "2432:  Zendesk *ZendeskMetadata `type:\"structure\"`",
          "2433: }",
          "2436: func (s ConnectorMetadata) String() string {",
          "2437:  return awsutil.Prettify(s)",
          "2438: }",
          "2441: func (s ConnectorMetadata) GoString() string {",
          "2442:  return s.String()",
          "2443: }",
          "2446: func (s *ConnectorMetadata) SetAmplitude(v *AmplitudeMetadata) *ConnectorMetadata {",
          "2447:  s.Amplitude = v",
          "2448:  return s",
          "2449: }",
          "2452: func (s *ConnectorMetadata) SetDatadog(v *DatadogMetadata) *ConnectorMetadata {",
          "2453:  s.Datadog = v",
          "2454:  return s",
          "2455: }",
          "2458: func (s *ConnectorMetadata) SetDynatrace(v *DynatraceMetadata) *ConnectorMetadata {",
          "2459:  s.Dynatrace = v",
          "2460:  return s",
          "2461: }",
          "2464: func (s *ConnectorMetadata) SetEventBridge(v *EventBridgeMetadata) *ConnectorMetadata {",
          "2465:  s.EventBridge = v",
          "2466:  return s",
          "2467: }",
          "2470: func (s *ConnectorMetadata) SetGoogleAnalytics(v *GoogleAnalyticsMetadata) *ConnectorMetadata {",
          "2471:  s.GoogleAnalytics = v",
          "2472:  return s",
          "2473: }",
          "2476: func (s *ConnectorMetadata) SetInforNexus(v *InforNexusMetadata) *ConnectorMetadata {",
          "2477:  s.InforNexus = v",
          "2478:  return s",
          "2479: }",
          "2482: func (s *ConnectorMetadata) SetMarketo(v *MarketoMetadata) *ConnectorMetadata {",
          "2483:  s.Marketo = v",
          "2484:  return s",
          "2485: }",
          "2488: func (s *ConnectorMetadata) SetRedshift(v *RedshiftMetadata) *ConnectorMetadata {",
          "2489:  s.Redshift = v",
          "2490:  return s",
          "2491: }",
          "2494: func (s *ConnectorMetadata) SetS3(v *S3Metadata) *ConnectorMetadata {",
          "2495:  s.S3 = v",
          "2496:  return s",
          "2497: }",
          "2500: func (s *ConnectorMetadata) SetSalesforce(v *SalesforceMetadata) *ConnectorMetadata {",
          "2501:  s.Salesforce = v",
          "2502:  return s",
          "2503: }",
          "2506: func (s *ConnectorMetadata) SetServiceNow(v *ServiceNowMetadata) *ConnectorMetadata {",
          "2507:  s.ServiceNow = v",
          "2508:  return s",
          "2509: }",
          "2512: func (s *ConnectorMetadata) SetSingular(v *SingularMetadata) *ConnectorMetadata {",
          "2513:  s.Singular = v",
          "2514:  return s",
          "2515: }",
          "2518: func (s *ConnectorMetadata) SetSlack(v *SlackMetadata) *ConnectorMetadata {",
          "2519:  s.Slack = v",
          "2520:  return s",
          "2521: }",
          "2524: func (s *ConnectorMetadata) SetSnowflake(v *SnowflakeMetadata) *ConnectorMetadata {",
          "2525:  s.Snowflake = v",
          "2526:  return s",
          "2527: }",
          "2530: func (s *ConnectorMetadata) SetTrendmicro(v *TrendmicroMetadata) *ConnectorMetadata {",
          "2531:  s.Trendmicro = v",
          "2532:  return s",
          "2533: }",
          "2536: func (s *ConnectorMetadata) SetVeeva(v *VeevaMetadata) *ConnectorMetadata {",
          "2537:  s.Veeva = v",
          "2538:  return s",
          "2539: }",
          "2542: func (s *ConnectorMetadata) SetZendesk(v *ZendeskMetadata) *ConnectorMetadata {",
          "2543:  s.Zendesk = v",
          "2544:  return s",
          "2545: }",
          "2549: type ConnectorOAuthRequest struct {",
          "2550:  _ struct{} `type:\"structure\"`",
          "2554:  AuthCode *string `locationName:\"authCode\" type:\"string\"`",
          "2558:  RedirectUri *string `locationName:\"redirectUri\" type:\"string\"`",
          "2559: }",
          "2562: func (s ConnectorOAuthRequest) String() string {",
          "2563:  return awsutil.Prettify(s)",
          "2564: }",
          "2567: func (s ConnectorOAuthRequest) GoString() string {",
          "2568:  return s.String()",
          "2569: }",
          "2572: func (s *ConnectorOAuthRequest) SetAuthCode(v string) *ConnectorOAuthRequest {",
          "2573:  s.AuthCode = &v",
          "2574:  return s",
          "2575: }",
          "2578: func (s *ConnectorOAuthRequest) SetRedirectUri(v string) *ConnectorOAuthRequest {",
          "2579:  s.RedirectUri = &v",
          "2580:  return s",
          "2581: }",
          "2584: type ConnectorOperator struct {",
          "2585:  _ struct{} `type:\"structure\"`",
          "2588:  Amplitude *string `type:\"string\" enum:\"AmplitudeConnectorOperator\"`",
          "2591:  Datadog *string `type:\"string\" enum:\"DatadogConnectorOperator\"`",
          "2594:  Dynatrace *string `type:\"string\" enum:\"DynatraceConnectorOperator\"`",
          "2597:  GoogleAnalytics *string `type:\"string\" enum:\"GoogleAnalyticsConnectorOperator\"`",
          "2600:  InforNexus *string `type:\"string\" enum:\"InforNexusConnectorOperator\"`",
          "2603:  Marketo *string `type:\"string\" enum:\"MarketoConnectorOperator\"`",
          "2606:  S3 *string `type:\"string\" enum:\"S3ConnectorOperator\"`",
          "2609:  Salesforce *string `type:\"string\" enum:\"SalesforceConnectorOperator\"`",
          "2612:  ServiceNow *string `type:\"string\" enum:\"ServiceNowConnectorOperator\"`",
          "2615:  Singular *string `type:\"string\" enum:\"SingularConnectorOperator\"`",
          "2618:  Slack *string `type:\"string\" enum:\"SlackConnectorOperator\"`",
          "2621:  Trendmicro *string `type:\"string\" enum:\"TrendmicroConnectorOperator\"`",
          "2624:  Veeva *string `type:\"string\" enum:\"VeevaConnectorOperator\"`",
          "2627:  Zendesk *string `type:\"string\" enum:\"ZendeskConnectorOperator\"`",
          "2628: }",
          "2631: func (s ConnectorOperator) String() string {",
          "2632:  return awsutil.Prettify(s)",
          "2633: }",
          "2636: func (s ConnectorOperator) GoString() string {",
          "2637:  return s.String()",
          "2638: }",
          "2641: func (s *ConnectorOperator) SetAmplitude(v string) *ConnectorOperator {",
          "2642:  s.Amplitude = &v",
          "2643:  return s",
          "2644: }",
          "2647: func (s *ConnectorOperator) SetDatadog(v string) *ConnectorOperator {",
          "2648:  s.Datadog = &v",
          "2649:  return s",
          "2650: }",
          "2653: func (s *ConnectorOperator) SetDynatrace(v string) *ConnectorOperator {",
          "2654:  s.Dynatrace = &v",
          "2655:  return s",
          "2656: }",
          "2659: func (s *ConnectorOperator) SetGoogleAnalytics(v string) *ConnectorOperator {",
          "2660:  s.GoogleAnalytics = &v",
          "2661:  return s",
          "2662: }",
          "2665: func (s *ConnectorOperator) SetInforNexus(v string) *ConnectorOperator {",
          "2666:  s.InforNexus = &v",
          "2667:  return s",
          "2668: }",
          "2671: func (s *ConnectorOperator) SetMarketo(v string) *ConnectorOperator {",
          "2672:  s.Marketo = &v",
          "2673:  return s",
          "2674: }",
          "2677: func (s *ConnectorOperator) SetS3(v string) *ConnectorOperator {",
          "2678:  s.S3 = &v",
          "2679:  return s",
          "2680: }",
          "2683: func (s *ConnectorOperator) SetSalesforce(v string) *ConnectorOperator {",
          "2684:  s.Salesforce = &v",
          "2685:  return s",
          "2686: }",
          "2689: func (s *ConnectorOperator) SetServiceNow(v string) *ConnectorOperator {",
          "2690:  s.ServiceNow = &v",
          "2691:  return s",
          "2692: }",
          "2695: func (s *ConnectorOperator) SetSingular(v string) *ConnectorOperator {",
          "2696:  s.Singular = &v",
          "2697:  return s",
          "2698: }",
          "2701: func (s *ConnectorOperator) SetSlack(v string) *ConnectorOperator {",
          "2702:  s.Slack = &v",
          "2703:  return s",
          "2704: }",
          "2707: func (s *ConnectorOperator) SetTrendmicro(v string) *ConnectorOperator {",
          "2708:  s.Trendmicro = &v",
          "2709:  return s",
          "2710: }",
          "2713: func (s *ConnectorOperator) SetVeeva(v string) *ConnectorOperator {",
          "2714:  s.Veeva = &v",
          "2715:  return s",
          "2716: }",
          "2719: func (s *ConnectorOperator) SetZendesk(v string) *ConnectorOperator {",
          "2720:  s.Zendesk = &v",
          "2721:  return s",
          "2722: }",
          "2729: type ConnectorProfile struct {",
          "2730:  _ struct{} `type:\"structure\"`",
          "2733:  ConnectionMode *string `locationName:\"connectionMode\" type:\"string\" enum:\"ConnectionMode\"`",
          "2736:  ConnectorProfileArn *string `locationName:\"connectorProfileArn\" type:\"string\"`",
          "2740:  ConnectorProfileName *string `locationName:\"connectorProfileName\" type:\"string\"`",
          "2743:  ConnectorProfileProperties *ConnectorProfileProperties `locationName:\"connectorProfileProperties\" type:\"structure\"`",
          "2746:  ConnectorType *string `locationName:\"connectorType\" type:\"string\" enum:\"ConnectorType\"`",
          "2749:  CreatedAt *time.Time `locationName:\"createdAt\" type:\"timestamp\"`",
          "2752:  CredentialsArn *string `locationName:\"credentialsArn\" type:\"string\"`",
          "2755:  LastUpdatedAt *time.Time `locationName:\"lastUpdatedAt\" type:\"timestamp\"`",
          "2756: }",
          "2759: func (s ConnectorProfile) String() string {",
          "2760:  return awsutil.Prettify(s)",
          "2761: }",
          "2764: func (s ConnectorProfile) GoString() string {",
          "2765:  return s.String()",
          "2766: }",
          "2769: func (s *ConnectorProfile) SetConnectionMode(v string) *ConnectorProfile {",
          "2770:  s.ConnectionMode = &v",
          "2771:  return s",
          "2772: }",
          "2775: func (s *ConnectorProfile) SetConnectorProfileArn(v string) *ConnectorProfile {",
          "2776:  s.ConnectorProfileArn = &v",
          "2777:  return s",
          "2778: }",
          "2781: func (s *ConnectorProfile) SetConnectorProfileName(v string) *ConnectorProfile {",
          "2782:  s.ConnectorProfileName = &v",
          "2783:  return s",
          "2784: }",
          "2787: func (s *ConnectorProfile) SetConnectorProfileProperties(v *ConnectorProfileProperties) *ConnectorProfile {",
          "2788:  s.ConnectorProfileProperties = v",
          "2789:  return s",
          "2790: }",
          "2793: func (s *ConnectorProfile) SetConnectorType(v string) *ConnectorProfile {",
          "2794:  s.ConnectorType = &v",
          "2795:  return s",
          "2796: }",
          "2799: func (s *ConnectorProfile) SetCreatedAt(v time.Time) *ConnectorProfile {",
          "2800:  s.CreatedAt = &v",
          "2801:  return s",
          "2802: }",
          "2805: func (s *ConnectorProfile) SetCredentialsArn(v string) *ConnectorProfile {",
          "2806:  s.CredentialsArn = &v",
          "2807:  return s",
          "2808: }",
          "2811: func (s *ConnectorProfile) SetLastUpdatedAt(v time.Time) *ConnectorProfile {",
          "2812:  s.LastUpdatedAt = &v",
          "2813:  return s",
          "2814: }",
          "2818: type ConnectorProfileConfig struct {",
          "2819:  _ struct{} `type:\"structure\"`",
          "2824:  ConnectorProfileCredentials *ConnectorProfileCredentials `locationName:\"connectorProfileCredentials\" type:\"structure\" required:\"true\"`",
          "2829:  ConnectorProfileProperties *ConnectorProfileProperties `locationName:\"connectorProfileProperties\" type:\"structure\" required:\"true\"`",
          "2830: }",
          "2833: func (s ConnectorProfileConfig) String() string {",
          "2834:  return awsutil.Prettify(s)",
          "2835: }",
          "2838: func (s ConnectorProfileConfig) GoString() string {",
          "2839:  return s.String()",
          "2840: }",
          "2843: func (s *ConnectorProfileConfig) Validate() error {",
          "2844:  invalidParams := request.ErrInvalidParams{Context: \"ConnectorProfileConfig\"}",
          "2845:  if s.ConnectorProfileCredentials == nil {",
          "2846:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorProfileCredentials\"))",
          "2847:  }",
          "2848:  if s.ConnectorProfileProperties == nil {",
          "2849:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorProfileProperties\"))",
          "2850:  }",
          "2851:  if s.ConnectorProfileCredentials != nil {",
          "2852:   if err := s.ConnectorProfileCredentials.Validate(); err != nil {",
          "2853:    invalidParams.AddNested(\"ConnectorProfileCredentials\", err.(request.ErrInvalidParams))",
          "2854:   }",
          "2855:  }",
          "2856:  if s.ConnectorProfileProperties != nil {",
          "2857:   if err := s.ConnectorProfileProperties.Validate(); err != nil {",
          "2858:    invalidParams.AddNested(\"ConnectorProfileProperties\", err.(request.ErrInvalidParams))",
          "2859:   }",
          "2860:  }",
          "2862:  if invalidParams.Len() > 0 {",
          "2863:   return invalidParams",
          "2864:  }",
          "2865:  return nil",
          "2866: }",
          "2869: func (s *ConnectorProfileConfig) SetConnectorProfileCredentials(v *ConnectorProfileCredentials) *ConnectorProfileConfig {",
          "2870:  s.ConnectorProfileCredentials = v",
          "2871:  return s",
          "2872: }",
          "2875: func (s *ConnectorProfileConfig) SetConnectorProfileProperties(v *ConnectorProfileProperties) *ConnectorProfileConfig {",
          "2876:  s.ConnectorProfileProperties = v",
          "2877:  return s",
          "2878: }",
          "2881: type ConnectorProfileCredentials struct {",
          "2882:  _ struct{} `type:\"structure\"`",
          "2885:  Amplitude *AmplitudeConnectorProfileCredentials `type:\"structure\"`",
          "2888:  Datadog *DatadogConnectorProfileCredentials `type:\"structure\"`",
          "2891:  Dynatrace *DynatraceConnectorProfileCredentials `type:\"structure\"`",
          "2894:  GoogleAnalytics *GoogleAnalyticsConnectorProfileCredentials `type:\"structure\"`",
          "2897:  InforNexus *InforNexusConnectorProfileCredentials `type:\"structure\"`",
          "2900:  Marketo *MarketoConnectorProfileCredentials `type:\"structure\"`",
          "2903:  Redshift *RedshiftConnectorProfileCredentials `type:\"structure\"`",
          "2906:  Salesforce *SalesforceConnectorProfileCredentials `type:\"structure\"`",
          "2909:  ServiceNow *ServiceNowConnectorProfileCredentials `type:\"structure\"`",
          "2912:  Singular *SingularConnectorProfileCredentials `type:\"structure\"`",
          "2915:  Slack *SlackConnectorProfileCredentials `type:\"structure\"`",
          "2918:  Snowflake *SnowflakeConnectorProfileCredentials `type:\"structure\"`",
          "2921:  Trendmicro *TrendmicroConnectorProfileCredentials `type:\"structure\"`",
          "2924:  Veeva *VeevaConnectorProfileCredentials `type:\"structure\"`",
          "2927:  Zendesk *ZendeskConnectorProfileCredentials `type:\"structure\"`",
          "2928: }",
          "2931: func (s ConnectorProfileCredentials) String() string {",
          "2932:  return awsutil.Prettify(s)",
          "2933: }",
          "2936: func (s ConnectorProfileCredentials) GoString() string {",
          "2937:  return s.String()",
          "2938: }",
          "2941: func (s *ConnectorProfileCredentials) Validate() error {",
          "2942:  invalidParams := request.ErrInvalidParams{Context: \"ConnectorProfileCredentials\"}",
          "2943:  if s.Amplitude != nil {",
          "2944:   if err := s.Amplitude.Validate(); err != nil {",
          "2945:    invalidParams.AddNested(\"Amplitude\", err.(request.ErrInvalidParams))",
          "2946:   }",
          "2947:  }",
          "2948:  if s.Datadog != nil {",
          "2949:   if err := s.Datadog.Validate(); err != nil {",
          "2950:    invalidParams.AddNested(\"Datadog\", err.(request.ErrInvalidParams))",
          "2951:   }",
          "2952:  }",
          "2953:  if s.Dynatrace != nil {",
          "2954:   if err := s.Dynatrace.Validate(); err != nil {",
          "2955:    invalidParams.AddNested(\"Dynatrace\", err.(request.ErrInvalidParams))",
          "2956:   }",
          "2957:  }",
          "2958:  if s.GoogleAnalytics != nil {",
          "2959:   if err := s.GoogleAnalytics.Validate(); err != nil {",
          "2960:    invalidParams.AddNested(\"GoogleAnalytics\", err.(request.ErrInvalidParams))",
          "2961:   }",
          "2962:  }",
          "2963:  if s.InforNexus != nil {",
          "2964:   if err := s.InforNexus.Validate(); err != nil {",
          "2965:    invalidParams.AddNested(\"InforNexus\", err.(request.ErrInvalidParams))",
          "2966:   }",
          "2967:  }",
          "2968:  if s.Marketo != nil {",
          "2969:   if err := s.Marketo.Validate(); err != nil {",
          "2970:    invalidParams.AddNested(\"Marketo\", err.(request.ErrInvalidParams))",
          "2971:   }",
          "2972:  }",
          "2973:  if s.Redshift != nil {",
          "2974:   if err := s.Redshift.Validate(); err != nil {",
          "2975:    invalidParams.AddNested(\"Redshift\", err.(request.ErrInvalidParams))",
          "2976:   }",
          "2977:  }",
          "2978:  if s.ServiceNow != nil {",
          "2979:   if err := s.ServiceNow.Validate(); err != nil {",
          "2980:    invalidParams.AddNested(\"ServiceNow\", err.(request.ErrInvalidParams))",
          "2981:   }",
          "2982:  }",
          "2983:  if s.Singular != nil {",
          "2984:   if err := s.Singular.Validate(); err != nil {",
          "2985:    invalidParams.AddNested(\"Singular\", err.(request.ErrInvalidParams))",
          "2986:   }",
          "2987:  }",
          "2988:  if s.Slack != nil {",
          "2989:   if err := s.Slack.Validate(); err != nil {",
          "2990:    invalidParams.AddNested(\"Slack\", err.(request.ErrInvalidParams))",
          "2991:   }",
          "2992:  }",
          "2993:  if s.Snowflake != nil {",
          "2994:   if err := s.Snowflake.Validate(); err != nil {",
          "2995:    invalidParams.AddNested(\"Snowflake\", err.(request.ErrInvalidParams))",
          "2996:   }",
          "2997:  }",
          "2998:  if s.Trendmicro != nil {",
          "2999:   if err := s.Trendmicro.Validate(); err != nil {",
          "3000:    invalidParams.AddNested(\"Trendmicro\", err.(request.ErrInvalidParams))",
          "3001:   }",
          "3002:  }",
          "3003:  if s.Veeva != nil {",
          "3004:   if err := s.Veeva.Validate(); err != nil {",
          "3005:    invalidParams.AddNested(\"Veeva\", err.(request.ErrInvalidParams))",
          "3006:   }",
          "3007:  }",
          "3008:  if s.Zendesk != nil {",
          "3009:   if err := s.Zendesk.Validate(); err != nil {",
          "3010:    invalidParams.AddNested(\"Zendesk\", err.(request.ErrInvalidParams))",
          "3011:   }",
          "3012:  }",
          "3014:  if invalidParams.Len() > 0 {",
          "3015:   return invalidParams",
          "3016:  }",
          "3017:  return nil",
          "3018: }",
          "3021: func (s *ConnectorProfileCredentials) SetAmplitude(v *AmplitudeConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3022:  s.Amplitude = v",
          "3023:  return s",
          "3024: }",
          "3027: func (s *ConnectorProfileCredentials) SetDatadog(v *DatadogConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3028:  s.Datadog = v",
          "3029:  return s",
          "3030: }",
          "3033: func (s *ConnectorProfileCredentials) SetDynatrace(v *DynatraceConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3034:  s.Dynatrace = v",
          "3035:  return s",
          "3036: }",
          "3039: func (s *ConnectorProfileCredentials) SetGoogleAnalytics(v *GoogleAnalyticsConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3040:  s.GoogleAnalytics = v",
          "3041:  return s",
          "3042: }",
          "3045: func (s *ConnectorProfileCredentials) SetInforNexus(v *InforNexusConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3046:  s.InforNexus = v",
          "3047:  return s",
          "3048: }",
          "3051: func (s *ConnectorProfileCredentials) SetMarketo(v *MarketoConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3052:  s.Marketo = v",
          "3053:  return s",
          "3054: }",
          "3057: func (s *ConnectorProfileCredentials) SetRedshift(v *RedshiftConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3058:  s.Redshift = v",
          "3059:  return s",
          "3060: }",
          "3063: func (s *ConnectorProfileCredentials) SetSalesforce(v *SalesforceConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3064:  s.Salesforce = v",
          "3065:  return s",
          "3066: }",
          "3069: func (s *ConnectorProfileCredentials) SetServiceNow(v *ServiceNowConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3070:  s.ServiceNow = v",
          "3071:  return s",
          "3072: }",
          "3075: func (s *ConnectorProfileCredentials) SetSingular(v *SingularConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3076:  s.Singular = v",
          "3077:  return s",
          "3078: }",
          "3081: func (s *ConnectorProfileCredentials) SetSlack(v *SlackConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3082:  s.Slack = v",
          "3083:  return s",
          "3084: }",
          "3087: func (s *ConnectorProfileCredentials) SetSnowflake(v *SnowflakeConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3088:  s.Snowflake = v",
          "3089:  return s",
          "3090: }",
          "3093: func (s *ConnectorProfileCredentials) SetTrendmicro(v *TrendmicroConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3094:  s.Trendmicro = v",
          "3095:  return s",
          "3096: }",
          "3099: func (s *ConnectorProfileCredentials) SetVeeva(v *VeevaConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3100:  s.Veeva = v",
          "3101:  return s",
          "3102: }",
          "3105: func (s *ConnectorProfileCredentials) SetZendesk(v *ZendeskConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3106:  s.Zendesk = v",
          "3107:  return s",
          "3108: }",
          "3111: type ConnectorProfileProperties struct {",
          "3112:  _ struct{} `type:\"structure\"`",
          "3115:  Amplitude *AmplitudeConnectorProfileProperties `type:\"structure\"`",
          "3118:  Datadog *DatadogConnectorProfileProperties `type:\"structure\"`",
          "3121:  Dynatrace *DynatraceConnectorProfileProperties `type:\"structure\"`",
          "3124:  GoogleAnalytics *GoogleAnalyticsConnectorProfileProperties `type:\"structure\"`",
          "3127:  InforNexus *InforNexusConnectorProfileProperties `type:\"structure\"`",
          "3130:  Marketo *MarketoConnectorProfileProperties `type:\"structure\"`",
          "3133:  Redshift *RedshiftConnectorProfileProperties `type:\"structure\"`",
          "3136:  Salesforce *SalesforceConnectorProfileProperties `type:\"structure\"`",
          "3139:  ServiceNow *ServiceNowConnectorProfileProperties `type:\"structure\"`",
          "3142:  Singular *SingularConnectorProfileProperties `type:\"structure\"`",
          "3145:  Slack *SlackConnectorProfileProperties `type:\"structure\"`",
          "3148:  Snowflake *SnowflakeConnectorProfileProperties `type:\"structure\"`",
          "3151:  Trendmicro *TrendmicroConnectorProfileProperties `type:\"structure\"`",
          "3154:  Veeva *VeevaConnectorProfileProperties `type:\"structure\"`",
          "3157:  Zendesk *ZendeskConnectorProfileProperties `type:\"structure\"`",
          "3158: }",
          "3161: func (s ConnectorProfileProperties) String() string {",
          "3162:  return awsutil.Prettify(s)",
          "3163: }",
          "3166: func (s ConnectorProfileProperties) GoString() string {",
          "3167:  return s.String()",
          "3168: }",
          "3171: func (s *ConnectorProfileProperties) Validate() error {",
          "3172:  invalidParams := request.ErrInvalidParams{Context: \"ConnectorProfileProperties\"}",
          "3173:  if s.Datadog != nil {",
          "3174:   if err := s.Datadog.Validate(); err != nil {",
          "3175:    invalidParams.AddNested(\"Datadog\", err.(request.ErrInvalidParams))",
          "3176:   }",
          "3177:  }",
          "3178:  if s.Dynatrace != nil {",
          "3179:   if err := s.Dynatrace.Validate(); err != nil {",
          "3180:    invalidParams.AddNested(\"Dynatrace\", err.(request.ErrInvalidParams))",
          "3181:   }",
          "3182:  }",
          "3183:  if s.InforNexus != nil {",
          "3184:   if err := s.InforNexus.Validate(); err != nil {",
          "3185:    invalidParams.AddNested(\"InforNexus\", err.(request.ErrInvalidParams))",
          "3186:   }",
          "3187:  }",
          "3188:  if s.Marketo != nil {",
          "3189:   if err := s.Marketo.Validate(); err != nil {",
          "3190:    invalidParams.AddNested(\"Marketo\", err.(request.ErrInvalidParams))",
          "3191:   }",
          "3192:  }",
          "3193:  if s.Redshift != nil {",
          "3194:   if err := s.Redshift.Validate(); err != nil {",
          "3195:    invalidParams.AddNested(\"Redshift\", err.(request.ErrInvalidParams))",
          "3196:   }",
          "3197:  }",
          "3198:  if s.ServiceNow != nil {",
          "3199:   if err := s.ServiceNow.Validate(); err != nil {",
          "3200:    invalidParams.AddNested(\"ServiceNow\", err.(request.ErrInvalidParams))",
          "3201:   }",
          "3202:  }",
          "3203:  if s.Slack != nil {",
          "3204:   if err := s.Slack.Validate(); err != nil {",
          "3205:    invalidParams.AddNested(\"Slack\", err.(request.ErrInvalidParams))",
          "3206:   }",
          "3207:  }",
          "3208:  if s.Snowflake != nil {",
          "3209:   if err := s.Snowflake.Validate(); err != nil {",
          "3210:    invalidParams.AddNested(\"Snowflake\", err.(request.ErrInvalidParams))",
          "3211:   }",
          "3212:  }",
          "3213:  if s.Veeva != nil {",
          "3214:   if err := s.Veeva.Validate(); err != nil {",
          "3215:    invalidParams.AddNested(\"Veeva\", err.(request.ErrInvalidParams))",
          "3216:   }",
          "3217:  }",
          "3218:  if s.Zendesk != nil {",
          "3219:   if err := s.Zendesk.Validate(); err != nil {",
          "3220:    invalidParams.AddNested(\"Zendesk\", err.(request.ErrInvalidParams))",
          "3221:   }",
          "3222:  }",
          "3224:  if invalidParams.Len() > 0 {",
          "3225:   return invalidParams",
          "3226:  }",
          "3227:  return nil",
          "3228: }",
          "3231: func (s *ConnectorProfileProperties) SetAmplitude(v *AmplitudeConnectorProfileProperties) *ConnectorProfileProperties {",
          "3232:  s.Amplitude = v",
          "3233:  return s",
          "3234: }",
          "3237: func (s *ConnectorProfileProperties) SetDatadog(v *DatadogConnectorProfileProperties) *ConnectorProfileProperties {",
          "3238:  s.Datadog = v",
          "3239:  return s",
          "3240: }",
          "3243: func (s *ConnectorProfileProperties) SetDynatrace(v *DynatraceConnectorProfileProperties) *ConnectorProfileProperties {",
          "3244:  s.Dynatrace = v",
          "3245:  return s",
          "3246: }",
          "3249: func (s *ConnectorProfileProperties) SetGoogleAnalytics(v *GoogleAnalyticsConnectorProfileProperties) *ConnectorProfileProperties {",
          "3250:  s.GoogleAnalytics = v",
          "3251:  return s",
          "3252: }",
          "3255: func (s *ConnectorProfileProperties) SetInforNexus(v *InforNexusConnectorProfileProperties) *ConnectorProfileProperties {",
          "3256:  s.InforNexus = v",
          "3257:  return s",
          "3258: }",
          "3261: func (s *ConnectorProfileProperties) SetMarketo(v *MarketoConnectorProfileProperties) *ConnectorProfileProperties {",
          "3262:  s.Marketo = v",
          "3263:  return s",
          "3264: }",
          "3267: func (s *ConnectorProfileProperties) SetRedshift(v *RedshiftConnectorProfileProperties) *ConnectorProfileProperties {",
          "3268:  s.Redshift = v",
          "3269:  return s",
          "3270: }",
          "3273: func (s *ConnectorProfileProperties) SetSalesforce(v *SalesforceConnectorProfileProperties) *ConnectorProfileProperties {",
          "3274:  s.Salesforce = v",
          "3275:  return s",
          "3276: }",
          "3279: func (s *ConnectorProfileProperties) SetServiceNow(v *ServiceNowConnectorProfileProperties) *ConnectorProfileProperties {",
          "3280:  s.ServiceNow = v",
          "3281:  return s",
          "3282: }",
          "3285: func (s *ConnectorProfileProperties) SetSingular(v *SingularConnectorProfileProperties) *ConnectorProfileProperties {",
          "3286:  s.Singular = v",
          "3287:  return s",
          "3288: }",
          "3291: func (s *ConnectorProfileProperties) SetSlack(v *SlackConnectorProfileProperties) *ConnectorProfileProperties {",
          "3292:  s.Slack = v",
          "3293:  return s",
          "3294: }",
          "3297: func (s *ConnectorProfileProperties) SetSnowflake(v *SnowflakeConnectorProfileProperties) *ConnectorProfileProperties {",
          "3298:  s.Snowflake = v",
          "3299:  return s",
          "3300: }",
          "3303: func (s *ConnectorProfileProperties) SetTrendmicro(v *TrendmicroConnectorProfileProperties) *ConnectorProfileProperties {",
          "3304:  s.Trendmicro = v",
          "3305:  return s",
          "3306: }",
          "3309: func (s *ConnectorProfileProperties) SetVeeva(v *VeevaConnectorProfileProperties) *ConnectorProfileProperties {",
          "3310:  s.Veeva = v",
          "3311:  return s",
          "3312: }",
          "3315: func (s *ConnectorProfileProperties) SetZendesk(v *ZendeskConnectorProfileProperties) *ConnectorProfileProperties {",
          "3316:  s.Zendesk = v",
          "3317:  return s",
          "3318: }",
          "3321: type ConnectorServerException struct {",
          "3322:  _            struct{}                  `type:\"structure\"`",
          "3323:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "3325:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "3326: }",
          "3329: func (s ConnectorServerException) String() string {",
          "3330:  return awsutil.Prettify(s)",
          "3331: }",
          "3334: func (s ConnectorServerException) GoString() string {",
          "3335:  return s.String()",
          "3336: }",
          "3338: func newErrorConnectorServerException(v protocol.ResponseMetadata) error {",
          "3339:  return &ConnectorServerException{",
          "3340:   RespMetadata: v,",
          "3341:  }",
          "3342: }",
          "3345: func (s *ConnectorServerException) Code() string {",
          "3346:  return \"ConnectorServerException\"",
          "3347: }",
          "3350: func (s *ConnectorServerException) Message() string {",
          "3351:  if s.Message_ != nil {",
          "3352:   return *s.Message_",
          "3353:  }",
          "3354:  return \"\"",
          "3355: }",
          "3358: func (s *ConnectorServerException) OrigErr() error {",
          "3359:  return nil",
          "3360: }",
          "3362: func (s *ConnectorServerException) Error() string {",
          "3363:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "3364: }",
          "3367: func (s *ConnectorServerException) StatusCode() int {",
          "3368:  return s.RespMetadata.StatusCode",
          "3369: }",
          "3372: func (s *ConnectorServerException) RequestID() string {",
          "3373:  return s.RespMetadata.RequestID",
          "3374: }",
          "3376: type CreateConnectorProfileInput struct {",
          "3377:  _ struct{} `type:\"structure\"`",
          "3384:  ConnectionMode *string `locationName:\"connectionMode\" type:\"string\" required:\"true\" enum:\"ConnectionMode\"`",
          "3389:  ConnectorProfileConfig *ConnectorProfileConfig `locationName:\"connectorProfileConfig\" type:\"structure\" required:\"true\"`",
          "3395:  ConnectorProfileName *string `locationName:\"connectorProfileName\" type:\"string\" required:\"true\"`",
          "3400:  ConnectorType *string `locationName:\"connectorType\" type:\"string\" required:\"true\" enum:\"ConnectorType\"`",
          "3406:  KmsArn *string `locationName:\"kmsArn\" min:\"20\" type:\"string\"`",
          "3407: }",
          "3410: func (s CreateConnectorProfileInput) String() string {",
          "3411:  return awsutil.Prettify(s)",
          "3412: }",
          "3415: func (s CreateConnectorProfileInput) GoString() string {",
          "3416:  return s.String()",
          "3417: }",
          "3420: func (s *CreateConnectorProfileInput) Validate() error {",
          "3421:  invalidParams := request.ErrInvalidParams{Context: \"CreateConnectorProfileInput\"}",
          "3422:  if s.ConnectionMode == nil {",
          "3423:   invalidParams.Add(request.NewErrParamRequired(\"ConnectionMode\"))",
          "3424:  }",
          "3425:  if s.ConnectorProfileConfig == nil {",
          "3426:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorProfileConfig\"))",
          "3427:  }",
          "3428:  if s.ConnectorProfileName == nil {",
          "3429:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorProfileName\"))",
          "3430:  }",
          "3431:  if s.ConnectorType == nil {",
          "3432:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorType\"))",
          "3433:  }",
          "3434:  if s.KmsArn != nil && len(*s.KmsArn) < 20 {",
          "3435:   invalidParams.Add(request.NewErrParamMinLen(\"KmsArn\", 20))",
          "3436:  }",
          "3437:  if s.ConnectorProfileConfig != nil {",
          "3438:   if err := s.ConnectorProfileConfig.Validate(); err != nil {",
          "3439:    invalidParams.AddNested(\"ConnectorProfileConfig\", err.(request.ErrInvalidParams))",
          "3440:   }",
          "3441:  }",
          "3443:  if invalidParams.Len() > 0 {",
          "3444:   return invalidParams",
          "3445:  }",
          "3446:  return nil",
          "3447: }",
          "3450: func (s *CreateConnectorProfileInput) SetConnectionMode(v string) *CreateConnectorProfileInput {",
          "3451:  s.ConnectionMode = &v",
          "3452:  return s",
          "3453: }",
          "3456: func (s *CreateConnectorProfileInput) SetConnectorProfileConfig(v *ConnectorProfileConfig) *CreateConnectorProfileInput {",
          "3457:  s.ConnectorProfileConfig = v",
          "3458:  return s",
          "3459: }",
          "3462: func (s *CreateConnectorProfileInput) SetConnectorProfileName(v string) *CreateConnectorProfileInput {",
          "3463:  s.ConnectorProfileName = &v",
          "3464:  return s",
          "3465: }",
          "3468: func (s *CreateConnectorProfileInput) SetConnectorType(v string) *CreateConnectorProfileInput {",
          "3469:  s.ConnectorType = &v",
          "3470:  return s",
          "3471: }",
          "3474: func (s *CreateConnectorProfileInput) SetKmsArn(v string) *CreateConnectorProfileInput {",
          "3475:  s.KmsArn = &v",
          "3476:  return s",
          "3477: }",
          "3479: type CreateConnectorProfileOutput struct {",
          "3480:  _ struct{} `type:\"structure\"`",
          "3483:  ConnectorProfileArn *string `locationName:\"connectorProfileArn\" type:\"string\"`",
          "3484: }",
          "3487: func (s CreateConnectorProfileOutput) String() string {",
          "3488:  return awsutil.Prettify(s)",
          "3489: }",
          "3492: func (s CreateConnectorProfileOutput) GoString() string {",
          "3493:  return s.String()",
          "3494: }",
          "3497: func (s *CreateConnectorProfileOutput) SetConnectorProfileArn(v string) *CreateConnectorProfileOutput {",
          "3498:  s.ConnectorProfileArn = &v",
          "3499:  return s",
          "3500: }",
          "3502: type CreateFlowInput struct {",
          "3503:  _ struct{} `type:\"structure\"`",
          "3506:  Description *string `locationName:\"description\" type:\"string\"`",
          "3512:  DestinationFlowConfigList []*DestinationFlowConfig `locationName:\"destinationFlowConfigList\" type:\"list\" required:\"true\"`",
          "3518:  FlowName *string `locationName:\"flowName\" type:\"string\" required:\"true\"`",
          "3524:  KmsArn *string `locationName:\"kmsArn\" min:\"20\" type:\"string\"`",
          "3530:  SourceFlowConfig *SourceFlowConfig `locationName:\"sourceFlowConfig\" type:\"structure\" required:\"true\"`",
          "3533:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "3539:  Tasks []*Task `locationName:\"tasks\" type:\"list\" required:\"true\"`",
          "3544:  TriggerConfig *TriggerConfig `locationName:\"triggerConfig\" type:\"structure\" required:\"true\"`",
          "3545: }",
          "3548: func (s CreateFlowInput) String() string {",
          "3549:  return awsutil.Prettify(s)",
          "3550: }",
          "3553: func (s CreateFlowInput) GoString() string {",
          "3554:  return s.String()",
          "3555: }",
          "3558: func (s *CreateFlowInput) Validate() error {",
          "3559:  invalidParams := request.ErrInvalidParams{Context: \"CreateFlowInput\"}",
          "3560:  if s.DestinationFlowConfigList == nil {",
          "3561:   invalidParams.Add(request.NewErrParamRequired(\"DestinationFlowConfigList\"))",
          "3562:  }",
          "3563:  if s.FlowName == nil {",
          "3564:   invalidParams.Add(request.NewErrParamRequired(\"FlowName\"))",
          "3565:  }",
          "3566:  if s.KmsArn != nil && len(*s.KmsArn) < 20 {",
          "3567:   invalidParams.Add(request.NewErrParamMinLen(\"KmsArn\", 20))",
          "3568:  }",
          "3569:  if s.SourceFlowConfig == nil {",
          "3570:   invalidParams.Add(request.NewErrParamRequired(\"SourceFlowConfig\"))",
          "3571:  }",
          "3572:  if s.Tasks == nil {",
          "3573:   invalidParams.Add(request.NewErrParamRequired(\"Tasks\"))",
          "3574:  }",
          "3575:  if s.TriggerConfig == nil {",
          "3576:   invalidParams.Add(request.NewErrParamRequired(\"TriggerConfig\"))",
          "3577:  }",
          "3578:  if s.DestinationFlowConfigList != nil {",
          "3579:   for i, v := range s.DestinationFlowConfigList {",
          "3580:    if v == nil {",
          "3581:     continue",
          "3582:    }",
          "3583:    if err := v.Validate(); err != nil {",
          "3584:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"DestinationFlowConfigList\", i), err.(request.ErrInvalidParams))",
          "3585:    }",
          "3586:   }",
          "3587:  }",
          "3588:  if s.SourceFlowConfig != nil {",
          "3589:   if err := s.SourceFlowConfig.Validate(); err != nil {",
          "3590:    invalidParams.AddNested(\"SourceFlowConfig\", err.(request.ErrInvalidParams))",
          "3591:   }",
          "3592:  }",
          "3593:  if s.Tasks != nil {",
          "3594:   for i, v := range s.Tasks {",
          "3595:    if v == nil {",
          "3596:     continue",
          "3597:    }",
          "3598:    if err := v.Validate(); err != nil {",
          "3599:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tasks\", i), err.(request.ErrInvalidParams))",
          "3600:    }",
          "3601:   }",
          "3602:  }",
          "3603:  if s.TriggerConfig != nil {",
          "3604:   if err := s.TriggerConfig.Validate(); err != nil {",
          "3605:    invalidParams.AddNested(\"TriggerConfig\", err.(request.ErrInvalidParams))",
          "3606:   }",
          "3607:  }",
          "3609:  if invalidParams.Len() > 0 {",
          "3610:   return invalidParams",
          "3611:  }",
          "3612:  return nil",
          "3613: }",
          "3616: func (s *CreateFlowInput) SetDescription(v string) *CreateFlowInput {",
          "3617:  s.Description = &v",
          "3618:  return s",
          "3619: }",
          "3622: func (s *CreateFlowInput) SetDestinationFlowConfigList(v []*DestinationFlowConfig) *CreateFlowInput {",
          "3623:  s.DestinationFlowConfigList = v",
          "3624:  return s",
          "3625: }",
          "3628: func (s *CreateFlowInput) SetFlowName(v string) *CreateFlowInput {",
          "3629:  s.FlowName = &v",
          "3630:  return s",
          "3631: }",
          "3634: func (s *CreateFlowInput) SetKmsArn(v string) *CreateFlowInput {",
          "3635:  s.KmsArn = &v",
          "3636:  return s",
          "3637: }",
          "3640: func (s *CreateFlowInput) SetSourceFlowConfig(v *SourceFlowConfig) *CreateFlowInput {",
          "3641:  s.SourceFlowConfig = v",
          "3642:  return s",
          "3643: }",
          "3646: func (s *CreateFlowInput) SetTags(v map[string]*string) *CreateFlowInput {",
          "3647:  s.Tags = v",
          "3648:  return s",
          "3649: }",
          "3652: func (s *CreateFlowInput) SetTasks(v []*Task) *CreateFlowInput {",
          "3653:  s.Tasks = v",
          "3654:  return s",
          "3655: }",
          "3658: func (s *CreateFlowInput) SetTriggerConfig(v *TriggerConfig) *CreateFlowInput {",
          "3659:  s.TriggerConfig = v",
          "3660:  return s",
          "3661: }",
          "3663: type CreateFlowOutput struct {",
          "3664:  _ struct{} `type:\"structure\"`",
          "3667:  FlowArn *string `locationName:\"flowArn\" type:\"string\"`",
          "3670:  FlowStatus *string `locationName:\"flowStatus\" type:\"string\" enum:\"FlowStatus\"`",
          "3671: }",
          "3674: func (s CreateFlowOutput) String() string {",
          "3675:  return awsutil.Prettify(s)",
          "3676: }",
          "3679: func (s CreateFlowOutput) GoString() string {",
          "3680:  return s.String()",
          "3681: }",
          "3684: func (s *CreateFlowOutput) SetFlowArn(v string) *CreateFlowOutput {",
          "3685:  s.FlowArn = &v",
          "3686:  return s",
          "3687: }",
          "3690: func (s *CreateFlowOutput) SetFlowStatus(v string) *CreateFlowOutput {",
          "3691:  s.FlowStatus = &v",
          "3692:  return s",
          "3693: }",
          "3696: type DatadogConnectorProfileCredentials struct {",
          "3697:  _ struct{} `type:\"structure\"`",
          "3703:  ApiKey *string `locationName:\"apiKey\" type:\"string\" required:\"true\"`",
          "3711:  ApplicationKey *string `locationName:\"applicationKey\" type:\"string\" required:\"true\"`",
          "3712: }",
          "3715: func (s DatadogConnectorProfileCredentials) String() string {",
          "3716:  return awsutil.Prettify(s)",
          "3717: }",
          "3720: func (s DatadogConnectorProfileCredentials) GoString() string {",
          "3721:  return s.String()",
          "3722: }",
          "3725: func (s *DatadogConnectorProfileCredentials) Validate() error {",
          "3726:  invalidParams := request.ErrInvalidParams{Context: \"DatadogConnectorProfileCredentials\"}",
          "3727:  if s.ApiKey == nil {",
          "3728:   invalidParams.Add(request.NewErrParamRequired(\"ApiKey\"))",
          "3729:  }",
          "3730:  if s.ApplicationKey == nil {",
          "3731:   invalidParams.Add(request.NewErrParamRequired(\"ApplicationKey\"))",
          "3732:  }",
          "3734:  if invalidParams.Len() > 0 {",
          "3735:   return invalidParams",
          "3736:  }",
          "3737:  return nil",
          "3738: }",
          "3741: func (s *DatadogConnectorProfileCredentials) SetApiKey(v string) *DatadogConnectorProfileCredentials {",
          "3742:  s.ApiKey = &v",
          "3743:  return s",
          "3744: }",
          "3747: func (s *DatadogConnectorProfileCredentials) SetApplicationKey(v string) *DatadogConnectorProfileCredentials {",
          "3748:  s.ApplicationKey = &v",
          "3749:  return s",
          "3750: }",
          "3753: type DatadogConnectorProfileProperties struct {",
          "3754:  _ struct{} `type:\"structure\"`",
          "3759:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\" required:\"true\"`",
          "3760: }",
          "3763: func (s DatadogConnectorProfileProperties) String() string {",
          "3764:  return awsutil.Prettify(s)",
          "3765: }",
          "3768: func (s DatadogConnectorProfileProperties) GoString() string {",
          "3769:  return s.String()",
          "3770: }",
          "3773: func (s *DatadogConnectorProfileProperties) Validate() error {",
          "3774:  invalidParams := request.ErrInvalidParams{Context: \"DatadogConnectorProfileProperties\"}",
          "3775:  if s.InstanceUrl == nil {",
          "3776:   invalidParams.Add(request.NewErrParamRequired(\"InstanceUrl\"))",
          "3777:  }",
          "3779:  if invalidParams.Len() > 0 {",
          "3780:   return invalidParams",
          "3781:  }",
          "3782:  return nil",
          "3783: }",
          "3786: func (s *DatadogConnectorProfileProperties) SetInstanceUrl(v string) *DatadogConnectorProfileProperties {",
          "3787:  s.InstanceUrl = &v",
          "3788:  return s",
          "3789: }",
          "3792: type DatadogMetadata struct {",
          "3793:  _ struct{} `type:\"structure\"`",
          "3794: }",
          "3797: func (s DatadogMetadata) String() string {",
          "3798:  return awsutil.Prettify(s)",
          "3799: }",
          "3802: func (s DatadogMetadata) GoString() string {",
          "3803:  return s.String()",
          "3804: }",
          "3807: type DatadogSourceProperties struct {",
          "3808:  _ struct{} `type:\"structure\"`",
          "3813:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "3814: }",
          "3817: func (s DatadogSourceProperties) String() string {",
          "3818:  return awsutil.Prettify(s)",
          "3819: }",
          "3822: func (s DatadogSourceProperties) GoString() string {",
          "3823:  return s.String()",
          "3824: }",
          "3827: func (s *DatadogSourceProperties) Validate() error {",
          "3828:  invalidParams := request.ErrInvalidParams{Context: \"DatadogSourceProperties\"}",
          "3829:  if s.Object == nil {",
          "3830:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "3831:  }",
          "3833:  if invalidParams.Len() > 0 {",
          "3834:   return invalidParams",
          "3835:  }",
          "3836:  return nil",
          "3837: }",
          "3840: func (s *DatadogSourceProperties) SetObject(v string) *DatadogSourceProperties {",
          "3841:  s.Object = &v",
          "3842:  return s",
          "3843: }",
          "3845: type DeleteConnectorProfileInput struct {",
          "3846:  _ struct{} `type:\"structure\"`",
          "3852:  ConnectorProfileName *string `locationName:\"connectorProfileName\" type:\"string\" required:\"true\"`",
          "3856:  ForceDelete *bool `locationName:\"forceDelete\" type:\"boolean\"`",
          "3857: }",
          "3860: func (s DeleteConnectorProfileInput) String() string {",
          "3861:  return awsutil.Prettify(s)",
          "3862: }",
          "3865: func (s DeleteConnectorProfileInput) GoString() string {",
          "3866:  return s.String()",
          "3867: }",
          "3870: func (s *DeleteConnectorProfileInput) Validate() error {",
          "3871:  invalidParams := request.ErrInvalidParams{Context: \"DeleteConnectorProfileInput\"}",
          "3872:  if s.ConnectorProfileName == nil {",
          "3873:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorProfileName\"))",
          "3874:  }",
          "3876:  if invalidParams.Len() > 0 {",
          "3877:   return invalidParams",
          "3878:  }",
          "3879:  return nil",
          "3880: }",
          "3883: func (s *DeleteConnectorProfileInput) SetConnectorProfileName(v string) *DeleteConnectorProfileInput {",
          "3884:  s.ConnectorProfileName = &v",
          "3885:  return s",
          "3886: }",
          "3889: func (s *DeleteConnectorProfileInput) SetForceDelete(v bool) *DeleteConnectorProfileInput {",
          "3890:  s.ForceDelete = &v",
          "3891:  return s",
          "3892: }",
          "3894: type DeleteConnectorProfileOutput struct {",
          "3895:  _ struct{} `type:\"structure\"`",
          "3896: }",
          "3899: func (s DeleteConnectorProfileOutput) String() string {",
          "3900:  return awsutil.Prettify(s)",
          "3901: }",
          "3904: func (s DeleteConnectorProfileOutput) GoString() string {",
          "3905:  return s.String()",
          "3906: }",
          "3908: type DeleteFlowInput struct {",
          "3909:  _ struct{} `type:\"structure\"`",
          "3915:  FlowName *string `locationName:\"flowName\" type:\"string\" required:\"true\"`",
          "3919:  ForceDelete *bool `locationName:\"forceDelete\" type:\"boolean\"`",
          "3920: }",
          "3923: func (s DeleteFlowInput) String() string {",
          "3924:  return awsutil.Prettify(s)",
          "3925: }",
          "3928: func (s DeleteFlowInput) GoString() string {",
          "3929:  return s.String()",
          "3930: }",
          "3933: func (s *DeleteFlowInput) Validate() error {",
          "3934:  invalidParams := request.ErrInvalidParams{Context: \"DeleteFlowInput\"}",
          "3935:  if s.FlowName == nil {",
          "3936:   invalidParams.Add(request.NewErrParamRequired(\"FlowName\"))",
          "3937:  }",
          "3939:  if invalidParams.Len() > 0 {",
          "3940:   return invalidParams",
          "3941:  }",
          "3942:  return nil",
          "3943: }",
          "3946: func (s *DeleteFlowInput) SetFlowName(v string) *DeleteFlowInput {",
          "3947:  s.FlowName = &v",
          "3948:  return s",
          "3949: }",
          "3952: func (s *DeleteFlowInput) SetForceDelete(v bool) *DeleteFlowInput {",
          "3953:  s.ForceDelete = &v",
          "3954:  return s",
          "3955: }",
          "3957: type DeleteFlowOutput struct {",
          "3958:  _ struct{} `type:\"structure\"`",
          "3959: }",
          "3962: func (s DeleteFlowOutput) String() string {",
          "3963:  return awsutil.Prettify(s)",
          "3964: }",
          "3967: func (s DeleteFlowOutput) GoString() string {",
          "3968:  return s.String()",
          "3969: }",
          "3971: type DescribeConnectorEntityInput struct {",
          "3972:  _ struct{} `type:\"structure\"`",
          "3977:  ConnectorEntityName *string `locationName:\"connectorEntityName\" type:\"string\" required:\"true\"`",
          "3981:  ConnectorProfileName *string `locationName:\"connectorProfileName\" type:\"string\"`",
          "3985:  ConnectorType *string `locationName:\"connectorType\" type:\"string\" enum:\"ConnectorType\"`",
          "3986: }",
          "3989: func (s DescribeConnectorEntityInput) String() string {",
          "3990:  return awsutil.Prettify(s)",
          "3991: }",
          "3994: func (s DescribeConnectorEntityInput) GoString() string {",
          "3995:  return s.String()",
          "3996: }",
          "3999: func (s *DescribeConnectorEntityInput) Validate() error {",
          "4000:  invalidParams := request.ErrInvalidParams{Context: \"DescribeConnectorEntityInput\"}",
          "4001:  if s.ConnectorEntityName == nil {",
          "4002:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorEntityName\"))",
          "4003:  }",
          "4005:  if invalidParams.Len() > 0 {",
          "4006:   return invalidParams",
          "4007:  }",
          "4008:  return nil",
          "4009: }",
          "4012: func (s *DescribeConnectorEntityInput) SetConnectorEntityName(v string) *DescribeConnectorEntityInput {",
          "4013:  s.ConnectorEntityName = &v",
          "4014:  return s",
          "4015: }",
          "4018: func (s *DescribeConnectorEntityInput) SetConnectorProfileName(v string) *DescribeConnectorEntityInput {",
          "4019:  s.ConnectorProfileName = &v",
          "4020:  return s",
          "4021: }",
          "4024: func (s *DescribeConnectorEntityInput) SetConnectorType(v string) *DescribeConnectorEntityInput {",
          "4025:  s.ConnectorType = &v",
          "4026:  return s",
          "4027: }",
          "4029: type DescribeConnectorEntityOutput struct {",
          "4030:  _ struct{} `type:\"structure\"`",
          "4036:  ConnectorEntityFields []*ConnectorEntityField `locationName:\"connectorEntityFields\" type:\"list\" required:\"true\"`",
          "4037: }",
          "4040: func (s DescribeConnectorEntityOutput) String() string {",
          "4041:  return awsutil.Prettify(s)",
          "4042: }",
          "4045: func (s DescribeConnectorEntityOutput) GoString() string {",
          "4046:  return s.String()",
          "4047: }",
          "4050: func (s *DescribeConnectorEntityOutput) SetConnectorEntityFields(v []*ConnectorEntityField) *DescribeConnectorEntityOutput {",
          "4051:  s.ConnectorEntityFields = v",
          "4052:  return s",
          "4053: }",
          "4055: type DescribeConnectorProfilesInput struct {",
          "4056:  _ struct{} `type:\"structure\"`",
          "4060:  ConnectorProfileNames []*string `locationName:\"connectorProfileNames\" type:\"list\"`",
          "4063:  ConnectorType *string `locationName:\"connectorType\" type:\"string\" enum:\"ConnectorType\"`",
          "4067:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "4070:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "4071: }",
          "4074: func (s DescribeConnectorProfilesInput) String() string {",
          "4075:  return awsutil.Prettify(s)",
          "4076: }",
          "4079: func (s DescribeConnectorProfilesInput) GoString() string {",
          "4080:  return s.String()",
          "4081: }",
          "4084: func (s *DescribeConnectorProfilesInput) Validate() error {",
          "4085:  invalidParams := request.ErrInvalidParams{Context: \"DescribeConnectorProfilesInput\"}",
          "4086:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "4087:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "4088:  }",
          "4090:  if invalidParams.Len() > 0 {",
          "4091:   return invalidParams",
          "4092:  }",
          "4093:  return nil",
          "4094: }",
          "4097: func (s *DescribeConnectorProfilesInput) SetConnectorProfileNames(v []*string) *DescribeConnectorProfilesInput {",
          "4098:  s.ConnectorProfileNames = v",
          "4099:  return s",
          "4100: }",
          "4103: func (s *DescribeConnectorProfilesInput) SetConnectorType(v string) *DescribeConnectorProfilesInput {",
          "4104:  s.ConnectorType = &v",
          "4105:  return s",
          "4106: }",
          "4109: func (s *DescribeConnectorProfilesInput) SetMaxResults(v int64) *DescribeConnectorProfilesInput {",
          "4110:  s.MaxResults = &v",
          "4111:  return s",
          "4112: }",
          "4115: func (s *DescribeConnectorProfilesInput) SetNextToken(v string) *DescribeConnectorProfilesInput {",
          "4116:  s.NextToken = &v",
          "4117:  return s",
          "4118: }",
          "4120: type DescribeConnectorProfilesOutput struct {",
          "4121:  _ struct{} `type:\"structure\"`",
          "4124:  ConnectorProfileDetails []*ConnectorProfile `locationName:\"connectorProfileDetails\" type:\"list\"`",
          "4128:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "4129: }",
          "4132: func (s DescribeConnectorProfilesOutput) String() string {",
          "4133:  return awsutil.Prettify(s)",
          "4134: }",
          "4137: func (s DescribeConnectorProfilesOutput) GoString() string {",
          "4138:  return s.String()",
          "4139: }",
          "4142: func (s *DescribeConnectorProfilesOutput) SetConnectorProfileDetails(v []*ConnectorProfile) *DescribeConnectorProfilesOutput {",
          "4143:  s.ConnectorProfileDetails = v",
          "4144:  return s",
          "4145: }",
          "4148: func (s *DescribeConnectorProfilesOutput) SetNextToken(v string) *DescribeConnectorProfilesOutput {",
          "4149:  s.NextToken = &v",
          "4150:  return s",
          "4151: }",
          "4153: type DescribeConnectorsInput struct {",
          "4154:  _ struct{} `type:\"structure\"`",
          "4157:  ConnectorTypes []*string `locationName:\"connectorTypes\" type:\"list\"`",
          "4160:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "4161: }",
          "4164: func (s DescribeConnectorsInput) String() string {",
          "4165:  return awsutil.Prettify(s)",
          "4166: }",
          "4169: func (s DescribeConnectorsInput) GoString() string {",
          "4170:  return s.String()",
          "4171: }",
          "4174: func (s *DescribeConnectorsInput) SetConnectorTypes(v []*string) *DescribeConnectorsInput {",
          "4175:  s.ConnectorTypes = v",
          "4176:  return s",
          "4177: }",
          "4180: func (s *DescribeConnectorsInput) SetNextToken(v string) *DescribeConnectorsInput {",
          "4181:  s.NextToken = &v",
          "4182:  return s",
          "4183: }",
          "4185: type DescribeConnectorsOutput struct {",
          "4186:  _ struct{} `type:\"structure\"`",
          "4189:  ConnectorConfigurations map[string]*ConnectorConfiguration `locationName:\"connectorConfigurations\" type:\"map\"`",
          "4192:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "4193: }",
          "4196: func (s DescribeConnectorsOutput) String() string {",
          "4197:  return awsutil.Prettify(s)",
          "4198: }",
          "4201: func (s DescribeConnectorsOutput) GoString() string {",
          "4202:  return s.String()",
          "4203: }",
          "4206: func (s *DescribeConnectorsOutput) SetConnectorConfigurations(v map[string]*ConnectorConfiguration) *DescribeConnectorsOutput {",
          "4207:  s.ConnectorConfigurations = v",
          "4208:  return s",
          "4209: }",
          "4212: func (s *DescribeConnectorsOutput) SetNextToken(v string) *DescribeConnectorsOutput {",
          "4213:  s.NextToken = &v",
          "4214:  return s",
          "4215: }",
          "4217: type DescribeFlowExecutionRecordsInput struct {",
          "4218:  _ struct{} `type:\"structure\"`",
          "4224:  FlowName *string `locationName:\"flowName\" type:\"string\" required:\"true\"`",
          "4228:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "4231:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "4232: }",
          "4235: func (s DescribeFlowExecutionRecordsInput) String() string {",
          "4236:  return awsutil.Prettify(s)",
          "4237: }",
          "4240: func (s DescribeFlowExecutionRecordsInput) GoString() string {",
          "4241:  return s.String()",
          "4242: }",
          "4245: func (s *DescribeFlowExecutionRecordsInput) Validate() error {",
          "4246:  invalidParams := request.ErrInvalidParams{Context: \"DescribeFlowExecutionRecordsInput\"}",
          "4247:  if s.FlowName == nil {",
          "4248:   invalidParams.Add(request.NewErrParamRequired(\"FlowName\"))",
          "4249:  }",
          "4250:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "4251:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "4252:  }",
          "4254:  if invalidParams.Len() > 0 {",
          "4255:   return invalidParams",
          "4256:  }",
          "4257:  return nil",
          "4258: }",
          "4261: func (s *DescribeFlowExecutionRecordsInput) SetFlowName(v string) *DescribeFlowExecutionRecordsInput {",
          "4262:  s.FlowName = &v",
          "4263:  return s",
          "4264: }",
          "4267: func (s *DescribeFlowExecutionRecordsInput) SetMaxResults(v int64) *DescribeFlowExecutionRecordsInput {",
          "4268:  s.MaxResults = &v",
          "4269:  return s",
          "4270: }",
          "4273: func (s *DescribeFlowExecutionRecordsInput) SetNextToken(v string) *DescribeFlowExecutionRecordsInput {",
          "4274:  s.NextToken = &v",
          "4275:  return s",
          "4276: }",
          "4278: type DescribeFlowExecutionRecordsOutput struct {",
          "4279:  _ struct{} `type:\"structure\"`",
          "4282:  FlowExecutions []*ExecutionRecord `locationName:\"flowExecutions\" type:\"list\"`",
          "4285:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "4286: }",
          "4289: func (s DescribeFlowExecutionRecordsOutput) String() string {",
          "4290:  return awsutil.Prettify(s)",
          "4291: }",
          "4294: func (s DescribeFlowExecutionRecordsOutput) GoString() string {",
          "4295:  return s.String()",
          "4296: }",
          "4299: func (s *DescribeFlowExecutionRecordsOutput) SetFlowExecutions(v []*ExecutionRecord) *DescribeFlowExecutionRecordsOutput {",
          "4300:  s.FlowExecutions = v",
          "4301:  return s",
          "4302: }",
          "4305: func (s *DescribeFlowExecutionRecordsOutput) SetNextToken(v string) *DescribeFlowExecutionRecordsOutput {",
          "4306:  s.NextToken = &v",
          "4307:  return s",
          "4308: }",
          "4310: type DescribeFlowInput struct {",
          "4311:  _ struct{} `type:\"structure\"`",
          "4317:  FlowName *string `locationName:\"flowName\" type:\"string\" required:\"true\"`",
          "4318: }",
          "4321: func (s DescribeFlowInput) String() string {",
          "4322:  return awsutil.Prettify(s)",
          "4323: }",
          "4326: func (s DescribeFlowInput) GoString() string {",
          "4327:  return s.String()",
          "4328: }",
          "4331: func (s *DescribeFlowInput) Validate() error {",
          "4332:  invalidParams := request.ErrInvalidParams{Context: \"DescribeFlowInput\"}",
          "4333:  if s.FlowName == nil {",
          "4334:   invalidParams.Add(request.NewErrParamRequired(\"FlowName\"))",
          "4335:  }",
          "4337:  if invalidParams.Len() > 0 {",
          "4338:   return invalidParams",
          "4339:  }",
          "4340:  return nil",
          "4341: }",
          "4344: func (s *DescribeFlowInput) SetFlowName(v string) *DescribeFlowInput {",
          "4345:  s.FlowName = &v",
          "4346:  return s",
          "4347: }",
          "4349: type DescribeFlowOutput struct {",
          "4350:  _ struct{} `type:\"structure\"`",
          "4353:  CreatedAt *time.Time `locationName:\"createdAt\" type:\"timestamp\"`",
          "4356:  CreatedBy *string `locationName:\"createdBy\" type:\"string\"`",
          "4359:  Description *string `locationName:\"description\" type:\"string\"`",
          "4363:  DestinationFlowConfigList []*DestinationFlowConfig `locationName:\"destinationFlowConfigList\" type:\"list\"`",
          "4366:  FlowArn *string `locationName:\"flowArn\" type:\"string\"`",
          "4370:  FlowName *string `locationName:\"flowName\" type:\"string\"`",
          "4373:  FlowStatus *string `locationName:\"flowStatus\" type:\"string\" enum:\"FlowStatus\"`",
          "4377:  FlowStatusMessage *string `locationName:\"flowStatusMessage\" type:\"string\"`",
          "4383:  KmsArn *string `locationName:\"kmsArn\" min:\"20\" type:\"string\"`",
          "4386:  LastRunExecutionDetails *ExecutionDetails `locationName:\"lastRunExecutionDetails\" type:\"structure\"`",
          "4389:  LastUpdatedAt *time.Time `locationName:\"lastUpdatedAt\" type:\"timestamp\"`",
          "4392:  LastUpdatedBy *string `locationName:\"lastUpdatedBy\" type:\"string\"`",
          "4396:  SourceFlowConfig *SourceFlowConfig `locationName:\"sourceFlowConfig\" type:\"structure\"`",
          "4399:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "4403:  Tasks []*Task `locationName:\"tasks\" type:\"list\"`",
          "4406:  TriggerConfig *TriggerConfig `locationName:\"triggerConfig\" type:\"structure\"`",
          "4407: }",
          "4410: func (s DescribeFlowOutput) String() string {",
          "4411:  return awsutil.Prettify(s)",
          "4412: }",
          "4415: func (s DescribeFlowOutput) GoString() string {",
          "4416:  return s.String()",
          "4417: }",
          "4420: func (s *DescribeFlowOutput) SetCreatedAt(v time.Time) *DescribeFlowOutput {",
          "4421:  s.CreatedAt = &v",
          "4422:  return s",
          "4423: }",
          "4426: func (s *DescribeFlowOutput) SetCreatedBy(v string) *DescribeFlowOutput {",
          "4427:  s.CreatedBy = &v",
          "4428:  return s",
          "4429: }",
          "4432: func (s *DescribeFlowOutput) SetDescription(v string) *DescribeFlowOutput {",
          "4433:  s.Description = &v",
          "4434:  return s",
          "4435: }",
          "4438: func (s *DescribeFlowOutput) SetDestinationFlowConfigList(v []*DestinationFlowConfig) *DescribeFlowOutput {",
          "4439:  s.DestinationFlowConfigList = v",
          "4440:  return s",
          "4441: }",
          "4444: func (s *DescribeFlowOutput) SetFlowArn(v string) *DescribeFlowOutput {",
          "4445:  s.FlowArn = &v",
          "4446:  return s",
          "4447: }",
          "4450: func (s *DescribeFlowOutput) SetFlowName(v string) *DescribeFlowOutput {",
          "4451:  s.FlowName = &v",
          "4452:  return s",
          "4453: }",
          "4456: func (s *DescribeFlowOutput) SetFlowStatus(v string) *DescribeFlowOutput {",
          "4457:  s.FlowStatus = &v",
          "4458:  return s",
          "4459: }",
          "4462: func (s *DescribeFlowOutput) SetFlowStatusMessage(v string) *DescribeFlowOutput {",
          "4463:  s.FlowStatusMessage = &v",
          "4464:  return s",
          "4465: }",
          "4468: func (s *DescribeFlowOutput) SetKmsArn(v string) *DescribeFlowOutput {",
          "4469:  s.KmsArn = &v",
          "4470:  return s",
          "4471: }",
          "4474: func (s *DescribeFlowOutput) SetLastRunExecutionDetails(v *ExecutionDetails) *DescribeFlowOutput {",
          "4475:  s.LastRunExecutionDetails = v",
          "4476:  return s",
          "4477: }",
          "4480: func (s *DescribeFlowOutput) SetLastUpdatedAt(v time.Time) *DescribeFlowOutput {",
          "4481:  s.LastUpdatedAt = &v",
          "4482:  return s",
          "4483: }",
          "4486: func (s *DescribeFlowOutput) SetLastUpdatedBy(v string) *DescribeFlowOutput {",
          "4487:  s.LastUpdatedBy = &v",
          "4488:  return s",
          "4489: }",
          "4492: func (s *DescribeFlowOutput) SetSourceFlowConfig(v *SourceFlowConfig) *DescribeFlowOutput {",
          "4493:  s.SourceFlowConfig = v",
          "4494:  return s",
          "4495: }",
          "4498: func (s *DescribeFlowOutput) SetTags(v map[string]*string) *DescribeFlowOutput {",
          "4499:  s.Tags = v",
          "4500:  return s",
          "4501: }",
          "4504: func (s *DescribeFlowOutput) SetTasks(v []*Task) *DescribeFlowOutput {",
          "4505:  s.Tasks = v",
          "4506:  return s",
          "4507: }",
          "4510: func (s *DescribeFlowOutput) SetTriggerConfig(v *TriggerConfig) *DescribeFlowOutput {",
          "4511:  s.TriggerConfig = v",
          "4512:  return s",
          "4513: }",
          "4516: type DestinationConnectorProperties struct {",
          "4517:  _ struct{} `type:\"structure\"`",
          "4520:  EventBridge *EventBridgeDestinationProperties `type:\"structure\"`",
          "4523:  Redshift *RedshiftDestinationProperties `type:\"structure\"`",
          "4526:  S3 *S3DestinationProperties `type:\"structure\"`",
          "4529:  Salesforce *SalesforceDestinationProperties `type:\"structure\"`",
          "4532:  Snowflake *SnowflakeDestinationProperties `type:\"structure\"`",
          "4533: }",
          "4536: func (s DestinationConnectorProperties) String() string {",
          "4537:  return awsutil.Prettify(s)",
          "4538: }",
          "4541: func (s DestinationConnectorProperties) GoString() string {",
          "4542:  return s.String()",
          "4543: }",
          "4546: func (s *DestinationConnectorProperties) Validate() error {",
          "4547:  invalidParams := request.ErrInvalidParams{Context: \"DestinationConnectorProperties\"}",
          "4548:  if s.EventBridge != nil {",
          "4549:   if err := s.EventBridge.Validate(); err != nil {",
          "4550:    invalidParams.AddNested(\"EventBridge\", err.(request.ErrInvalidParams))",
          "4551:   }",
          "4552:  }",
          "4553:  if s.Redshift != nil {",
          "4554:   if err := s.Redshift.Validate(); err != nil {",
          "4555:    invalidParams.AddNested(\"Redshift\", err.(request.ErrInvalidParams))",
          "4556:   }",
          "4557:  }",
          "4558:  if s.S3 != nil {",
          "4559:   if err := s.S3.Validate(); err != nil {",
          "4560:    invalidParams.AddNested(\"S3\", err.(request.ErrInvalidParams))",
          "4561:   }",
          "4562:  }",
          "4563:  if s.Salesforce != nil {",
          "4564:   if err := s.Salesforce.Validate(); err != nil {",
          "4565:    invalidParams.AddNested(\"Salesforce\", err.(request.ErrInvalidParams))",
          "4566:   }",
          "4567:  }",
          "4568:  if s.Snowflake != nil {",
          "4569:   if err := s.Snowflake.Validate(); err != nil {",
          "4570:    invalidParams.AddNested(\"Snowflake\", err.(request.ErrInvalidParams))",
          "4571:   }",
          "4572:  }",
          "4574:  if invalidParams.Len() > 0 {",
          "4575:   return invalidParams",
          "4576:  }",
          "4577:  return nil",
          "4578: }",
          "4581: func (s *DestinationConnectorProperties) SetEventBridge(v *EventBridgeDestinationProperties) *DestinationConnectorProperties {",
          "4582:  s.EventBridge = v",
          "4583:  return s",
          "4584: }",
          "4587: func (s *DestinationConnectorProperties) SetRedshift(v *RedshiftDestinationProperties) *DestinationConnectorProperties {",
          "4588:  s.Redshift = v",
          "4589:  return s",
          "4590: }",
          "4593: func (s *DestinationConnectorProperties) SetS3(v *S3DestinationProperties) *DestinationConnectorProperties {",
          "4594:  s.S3 = v",
          "4595:  return s",
          "4596: }",
          "4599: func (s *DestinationConnectorProperties) SetSalesforce(v *SalesforceDestinationProperties) *DestinationConnectorProperties {",
          "4600:  s.Salesforce = v",
          "4601:  return s",
          "4602: }",
          "4605: func (s *DestinationConnectorProperties) SetSnowflake(v *SnowflakeDestinationProperties) *DestinationConnectorProperties {",
          "4606:  s.Snowflake = v",
          "4607:  return s",
          "4608: }",
          "4612: type DestinationFieldProperties struct {",
          "4613:  _ struct{} `type:\"structure\"`",
          "4616:  IsCreatable *bool `locationName:\"isCreatable\" type:\"boolean\"`",
          "4619:  IsNullable *bool `locationName:\"isNullable\" type:\"boolean\"`",
          "4623:  IsUpsertable *bool `locationName:\"isUpsertable\" type:\"boolean\"`",
          "4624: }",
          "4627: func (s DestinationFieldProperties) String() string {",
          "4628:  return awsutil.Prettify(s)",
          "4629: }",
          "4632: func (s DestinationFieldProperties) GoString() string {",
          "4633:  return s.String()",
          "4634: }",
          "4637: func (s *DestinationFieldProperties) SetIsCreatable(v bool) *DestinationFieldProperties {",
          "4638:  s.IsCreatable = &v",
          "4639:  return s",
          "4640: }",
          "4643: func (s *DestinationFieldProperties) SetIsNullable(v bool) *DestinationFieldProperties {",
          "4644:  s.IsNullable = &v",
          "4645:  return s",
          "4646: }",
          "4649: func (s *DestinationFieldProperties) SetIsUpsertable(v bool) *DestinationFieldProperties {",
          "4650:  s.IsUpsertable = &v",
          "4651:  return s",
          "4652: }",
          "4656: type DestinationFlowConfig struct {",
          "4657:  _ struct{} `type:\"structure\"`",
          "4661:  ConnectorProfileName *string `locationName:\"connectorProfileName\" type:\"string\"`",
          "4666:  ConnectorType *string `locationName:\"connectorType\" type:\"string\" required:\"true\" enum:\"ConnectorType\"`",
          "4671:  DestinationConnectorProperties *DestinationConnectorProperties `locationName:\"destinationConnectorProperties\" type:\"structure\" required:\"true\"`",
          "4672: }",
          "4675: func (s DestinationFlowConfig) String() string {",
          "4676:  return awsutil.Prettify(s)",
          "4677: }",
          "4680: func (s DestinationFlowConfig) GoString() string {",
          "4681:  return s.String()",
          "4682: }",
          "4685: func (s *DestinationFlowConfig) Validate() error {",
          "4686:  invalidParams := request.ErrInvalidParams{Context: \"DestinationFlowConfig\"}",
          "4687:  if s.ConnectorType == nil {",
          "4688:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorType\"))",
          "4689:  }",
          "4690:  if s.DestinationConnectorProperties == nil {",
          "4691:   invalidParams.Add(request.NewErrParamRequired(\"DestinationConnectorProperties\"))",
          "4692:  }",
          "4693:  if s.DestinationConnectorProperties != nil {",
          "4694:   if err := s.DestinationConnectorProperties.Validate(); err != nil {",
          "4695:    invalidParams.AddNested(\"DestinationConnectorProperties\", err.(request.ErrInvalidParams))",
          "4696:   }",
          "4697:  }",
          "4699:  if invalidParams.Len() > 0 {",
          "4700:   return invalidParams",
          "4701:  }",
          "4702:  return nil",
          "4703: }",
          "4706: func (s *DestinationFlowConfig) SetConnectorProfileName(v string) *DestinationFlowConfig {",
          "4707:  s.ConnectorProfileName = &v",
          "4708:  return s",
          "4709: }",
          "4712: func (s *DestinationFlowConfig) SetConnectorType(v string) *DestinationFlowConfig {",
          "4713:  s.ConnectorType = &v",
          "4714:  return s",
          "4715: }",
          "4718: func (s *DestinationFlowConfig) SetDestinationConnectorProperties(v *DestinationConnectorProperties) *DestinationFlowConfig {",
          "4719:  s.DestinationConnectorProperties = v",
          "4720:  return s",
          "4721: }",
          "4724: type DynatraceConnectorProfileCredentials struct {",
          "4725:  _ struct{} `type:\"structure\"`",
          "4730:  ApiToken *string `locationName:\"apiToken\" type:\"string\" required:\"true\"`",
          "4731: }",
          "4734: func (s DynatraceConnectorProfileCredentials) String() string {",
          "4735:  return awsutil.Prettify(s)",
          "4736: }",
          "4739: func (s DynatraceConnectorProfileCredentials) GoString() string {",
          "4740:  return s.String()",
          "4741: }",
          "4744: func (s *DynatraceConnectorProfileCredentials) Validate() error {",
          "4745:  invalidParams := request.ErrInvalidParams{Context: \"DynatraceConnectorProfileCredentials\"}",
          "4746:  if s.ApiToken == nil {",
          "4747:   invalidParams.Add(request.NewErrParamRequired(\"ApiToken\"))",
          "4748:  }",
          "4750:  if invalidParams.Len() > 0 {",
          "4751:   return invalidParams",
          "4752:  }",
          "4753:  return nil",
          "4754: }",
          "4757: func (s *DynatraceConnectorProfileCredentials) SetApiToken(v string) *DynatraceConnectorProfileCredentials {",
          "4758:  s.ApiToken = &v",
          "4759:  return s",
          "4760: }",
          "4763: type DynatraceConnectorProfileProperties struct {",
          "4764:  _ struct{} `type:\"structure\"`",
          "4769:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\" required:\"true\"`",
          "4770: }",
          "4773: func (s DynatraceConnectorProfileProperties) String() string {",
          "4774:  return awsutil.Prettify(s)",
          "4775: }",
          "4778: func (s DynatraceConnectorProfileProperties) GoString() string {",
          "4779:  return s.String()",
          "4780: }",
          "4783: func (s *DynatraceConnectorProfileProperties) Validate() error {",
          "4784:  invalidParams := request.ErrInvalidParams{Context: \"DynatraceConnectorProfileProperties\"}",
          "4785:  if s.InstanceUrl == nil {",
          "4786:   invalidParams.Add(request.NewErrParamRequired(\"InstanceUrl\"))",
          "4787:  }",
          "4789:  if invalidParams.Len() > 0 {",
          "4790:   return invalidParams",
          "4791:  }",
          "4792:  return nil",
          "4793: }",
          "4796: func (s *DynatraceConnectorProfileProperties) SetInstanceUrl(v string) *DynatraceConnectorProfileProperties {",
          "4797:  s.InstanceUrl = &v",
          "4798:  return s",
          "4799: }",
          "4802: type DynatraceMetadata struct {",
          "4803:  _ struct{} `type:\"structure\"`",
          "4804: }",
          "4807: func (s DynatraceMetadata) String() string {",
          "4808:  return awsutil.Prettify(s)",
          "4809: }",
          "4812: func (s DynatraceMetadata) GoString() string {",
          "4813:  return s.String()",
          "4814: }",
          "4817: type DynatraceSourceProperties struct {",
          "4818:  _ struct{} `type:\"structure\"`",
          "4823:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "4824: }",
          "4827: func (s DynatraceSourceProperties) String() string {",
          "4828:  return awsutil.Prettify(s)",
          "4829: }",
          "4832: func (s DynatraceSourceProperties) GoString() string {",
          "4833:  return s.String()",
          "4834: }",
          "4837: func (s *DynatraceSourceProperties) Validate() error {",
          "4838:  invalidParams := request.ErrInvalidParams{Context: \"DynatraceSourceProperties\"}",
          "4839:  if s.Object == nil {",
          "4840:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "4841:  }",
          "4843:  if invalidParams.Len() > 0 {",
          "4844:   return invalidParams",
          "4845:  }",
          "4846:  return nil",
          "4847: }",
          "4850: func (s *DynatraceSourceProperties) SetObject(v string) *DynatraceSourceProperties {",
          "4851:  s.Object = &v",
          "4852:  return s",
          "4853: }",
          "4860: type ErrorHandlingConfig struct {",
          "4861:  _ struct{} `type:\"structure\"`",
          "4864:  BucketName *string `locationName:\"bucketName\" min:\"3\" type:\"string\"`",
          "4867:  BucketPrefix *string `locationName:\"bucketPrefix\" type:\"string\"`",
          "4871:  FailOnFirstDestinationError *bool `locationName:\"failOnFirstDestinationError\" type:\"boolean\"`",
          "4872: }",
          "4875: func (s ErrorHandlingConfig) String() string {",
          "4876:  return awsutil.Prettify(s)",
          "4877: }",
          "4880: func (s ErrorHandlingConfig) GoString() string {",
          "4881:  return s.String()",
          "4882: }",
          "4885: func (s *ErrorHandlingConfig) Validate() error {",
          "4886:  invalidParams := request.ErrInvalidParams{Context: \"ErrorHandlingConfig\"}",
          "4887:  if s.BucketName != nil && len(*s.BucketName) < 3 {",
          "4888:   invalidParams.Add(request.NewErrParamMinLen(\"BucketName\", 3))",
          "4889:  }",
          "4891:  if invalidParams.Len() > 0 {",
          "4892:   return invalidParams",
          "4893:  }",
          "4894:  return nil",
          "4895: }",
          "4898: func (s *ErrorHandlingConfig) SetBucketName(v string) *ErrorHandlingConfig {",
          "4899:  s.BucketName = &v",
          "4900:  return s",
          "4901: }",
          "4904: func (s *ErrorHandlingConfig) SetBucketPrefix(v string) *ErrorHandlingConfig {",
          "4905:  s.BucketPrefix = &v",
          "4906:  return s",
          "4907: }",
          "4910: func (s *ErrorHandlingConfig) SetFailOnFirstDestinationError(v bool) *ErrorHandlingConfig {",
          "4911:  s.FailOnFirstDestinationError = &v",
          "4912:  return s",
          "4913: }",
          "4917: type ErrorInfo struct {",
          "4918:  _ struct{} `type:\"structure\"`",
          "4921:  ExecutionMessage *string `locationName:\"executionMessage\" type:\"string\"`",
          "4924:  PutFailuresCount *int64 `locationName:\"putFailuresCount\" type:\"long\"`",
          "4925: }",
          "4928: func (s ErrorInfo) String() string {",
          "4929:  return awsutil.Prettify(s)",
          "4930: }",
          "4933: func (s ErrorInfo) GoString() string {",
          "4934:  return s.String()",
          "4935: }",
          "4938: func (s *ErrorInfo) SetExecutionMessage(v string) *ErrorInfo {",
          "4939:  s.ExecutionMessage = &v",
          "4940:  return s",
          "4941: }",
          "4944: func (s *ErrorInfo) SetPutFailuresCount(v int64) *ErrorInfo {",
          "4945:  s.PutFailuresCount = &v",
          "4946:  return s",
          "4947: }",
          "4951: type EventBridgeDestinationProperties struct {",
          "4952:  _ struct{} `type:\"structure\"`",
          "4959:  ErrorHandlingConfig *ErrorHandlingConfig `locationName:\"errorHandlingConfig\" type:\"structure\"`",
          "4964:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "4965: }",
          "4968: func (s EventBridgeDestinationProperties) String() string {",
          "4969:  return awsutil.Prettify(s)",
          "4970: }",
          "4973: func (s EventBridgeDestinationProperties) GoString() string {",
          "4974:  return s.String()",
          "4975: }",
          "4978: func (s *EventBridgeDestinationProperties) Validate() error {",
          "4979:  invalidParams := request.ErrInvalidParams{Context: \"EventBridgeDestinationProperties\"}",
          "4980:  if s.Object == nil {",
          "4981:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "4982:  }",
          "4983:  if s.ErrorHandlingConfig != nil {",
          "4984:   if err := s.ErrorHandlingConfig.Validate(); err != nil {",
          "4985:    invalidParams.AddNested(\"ErrorHandlingConfig\", err.(request.ErrInvalidParams))",
          "4986:   }",
          "4987:  }",
          "4989:  if invalidParams.Len() > 0 {",
          "4990:   return invalidParams",
          "4991:  }",
          "4992:  return nil",
          "4993: }",
          "4996: func (s *EventBridgeDestinationProperties) SetErrorHandlingConfig(v *ErrorHandlingConfig) *EventBridgeDestinationProperties {",
          "4997:  s.ErrorHandlingConfig = v",
          "4998:  return s",
          "4999: }",
          "5002: func (s *EventBridgeDestinationProperties) SetObject(v string) *EventBridgeDestinationProperties {",
          "5003:  s.Object = &v",
          "5004:  return s",
          "5005: }",
          "5008: type EventBridgeMetadata struct {",
          "5009:  _ struct{} `type:\"structure\"`",
          "5010: }",
          "5013: func (s EventBridgeMetadata) String() string {",
          "5014:  return awsutil.Prettify(s)",
          "5015: }",
          "5018: func (s EventBridgeMetadata) GoString() string {",
          "5019:  return s.String()",
          "5020: }",
          "5024: type ExecutionDetails struct {",
          "5025:  _ struct{} `type:\"structure\"`",
          "5028:  MostRecentExecutionMessage *string `locationName:\"mostRecentExecutionMessage\" type:\"string\"`",
          "5031:  MostRecentExecutionStatus *string `locationName:\"mostRecentExecutionStatus\" type:\"string\" enum:\"ExecutionStatus\"`",
          "5034:  MostRecentExecutionTime *time.Time `locationName:\"mostRecentExecutionTime\" type:\"timestamp\"`",
          "5035: }",
          "5038: func (s ExecutionDetails) String() string {",
          "5039:  return awsutil.Prettify(s)",
          "5040: }",
          "5043: func (s ExecutionDetails) GoString() string {",
          "5044:  return s.String()",
          "5045: }",
          "5048: func (s *ExecutionDetails) SetMostRecentExecutionMessage(v string) *ExecutionDetails {",
          "5049:  s.MostRecentExecutionMessage = &v",
          "5050:  return s",
          "5051: }",
          "5054: func (s *ExecutionDetails) SetMostRecentExecutionStatus(v string) *ExecutionDetails {",
          "5055:  s.MostRecentExecutionStatus = &v",
          "5056:  return s",
          "5057: }",
          "5060: func (s *ExecutionDetails) SetMostRecentExecutionTime(v time.Time) *ExecutionDetails {",
          "5061:  s.MostRecentExecutionTime = &v",
          "5062:  return s",
          "5063: }",
          "5066: type ExecutionRecord struct {",
          "5067:  _ struct{} `type:\"structure\"`",
          "5070:  ExecutionId *string `locationName:\"executionId\" type:\"string\"`",
          "5073:  ExecutionResult *ExecutionResult `locationName:\"executionResult\" type:\"structure\"`",
          "5077:  ExecutionStatus *string `locationName:\"executionStatus\" type:\"string\" enum:\"ExecutionStatus\"`",
          "5080:  LastUpdatedAt *time.Time `locationName:\"lastUpdatedAt\" type:\"timestamp\"`",
          "5083:  StartedAt *time.Time `locationName:\"startedAt\" type:\"timestamp\"`",
          "5084: }",
          "5087: func (s ExecutionRecord) String() string {",
          "5088:  return awsutil.Prettify(s)",
          "5089: }",
          "5092: func (s ExecutionRecord) GoString() string {",
          "5093:  return s.String()",
          "5094: }",
          "5097: func (s *ExecutionRecord) SetExecutionId(v string) *ExecutionRecord {",
          "5098:  s.ExecutionId = &v",
          "5099:  return s",
          "5100: }",
          "5103: func (s *ExecutionRecord) SetExecutionResult(v *ExecutionResult) *ExecutionRecord {",
          "5104:  s.ExecutionResult = v",
          "5105:  return s",
          "5106: }",
          "5109: func (s *ExecutionRecord) SetExecutionStatus(v string) *ExecutionRecord {",
          "5110:  s.ExecutionStatus = &v",
          "5111:  return s",
          "5112: }",
          "5115: func (s *ExecutionRecord) SetLastUpdatedAt(v time.Time) *ExecutionRecord {",
          "5116:  s.LastUpdatedAt = &v",
          "5117:  return s",
          "5118: }",
          "5121: func (s *ExecutionRecord) SetStartedAt(v time.Time) *ExecutionRecord {",
          "5122:  s.StartedAt = &v",
          "5123:  return s",
          "5124: }",
          "5127: type ExecutionResult struct {",
          "5128:  _ struct{} `type:\"structure\"`",
          "5131:  BytesProcessed *int64 `locationName:\"bytesProcessed\" type:\"long\"`",
          "5134:  BytesWritten *int64 `locationName:\"bytesWritten\" type:\"long\"`",
          "5137:  ErrorInfo *ErrorInfo `locationName:\"errorInfo\" type:\"structure\"`",
          "5140:  RecordsProcessed *int64 `locationName:\"recordsProcessed\" type:\"long\"`",
          "5141: }",
          "5144: func (s ExecutionResult) String() string {",
          "5145:  return awsutil.Prettify(s)",
          "5146: }",
          "5149: func (s ExecutionResult) GoString() string {",
          "5150:  return s.String()",
          "5151: }",
          "5154: func (s *ExecutionResult) SetBytesProcessed(v int64) *ExecutionResult {",
          "5155:  s.BytesProcessed = &v",
          "5156:  return s",
          "5157: }",
          "5160: func (s *ExecutionResult) SetBytesWritten(v int64) *ExecutionResult {",
          "5161:  s.BytesWritten = &v",
          "5162:  return s",
          "5163: }",
          "5166: func (s *ExecutionResult) SetErrorInfo(v *ErrorInfo) *ExecutionResult {",
          "5167:  s.ErrorInfo = v",
          "5168:  return s",
          "5169: }",
          "5172: func (s *ExecutionResult) SetRecordsProcessed(v int64) *ExecutionResult {",
          "5173:  s.RecordsProcessed = &v",
          "5174:  return s",
          "5175: }",
          "5179: type FieldTypeDetails struct {",
          "5180:  _ struct{} `type:\"structure\"`",
          "5185:  FieldType *string `locationName:\"fieldType\" type:\"string\" required:\"true\"`",
          "5190:  FilterOperators []*string `locationName:\"filterOperators\" type:\"list\" required:\"true\"`",
          "5194:  SupportedValues []*string `locationName:\"supportedValues\" type:\"list\"`",
          "5195: }",
          "5198: func (s FieldTypeDetails) String() string {",
          "5199:  return awsutil.Prettify(s)",
          "5200: }",
          "5203: func (s FieldTypeDetails) GoString() string {",
          "5204:  return s.String()",
          "5205: }",
          "5208: func (s *FieldTypeDetails) SetFieldType(v string) *FieldTypeDetails {",
          "5209:  s.FieldType = &v",
          "5210:  return s",
          "5211: }",
          "5214: func (s *FieldTypeDetails) SetFilterOperators(v []*string) *FieldTypeDetails {",
          "5215:  s.FilterOperators = v",
          "5216:  return s",
          "5217: }",
          "5220: func (s *FieldTypeDetails) SetSupportedValues(v []*string) *FieldTypeDetails {",
          "5221:  s.SupportedValues = v",
          "5222:  return s",
          "5223: }",
          "5227: type FlowDefinition struct {",
          "5228:  _ struct{} `type:\"structure\"`",
          "5231:  CreatedAt *time.Time `locationName:\"createdAt\" type:\"timestamp\"`",
          "5234:  CreatedBy *string `locationName:\"createdBy\" type:\"string\"`",
          "5237:  Description *string `locationName:\"description\" type:\"string\"`",
          "5241:  DestinationConnectorType *string `locationName:\"destinationConnectorType\" type:\"string\" enum:\"ConnectorType\"`",
          "5244:  FlowArn *string `locationName:\"flowArn\" type:\"string\"`",
          "5248:  FlowName *string `locationName:\"flowName\" type:\"string\"`",
          "5251:  FlowStatus *string `locationName:\"flowStatus\" type:\"string\" enum:\"FlowStatus\"`",
          "5254:  LastRunExecutionDetails *ExecutionDetails `locationName:\"lastRunExecutionDetails\" type:\"structure\"`",
          "5257:  LastUpdatedAt *time.Time `locationName:\"lastUpdatedAt\" type:\"timestamp\"`",
          "5260:  LastUpdatedBy *string `locationName:\"lastUpdatedBy\" type:\"string\"`",
          "5264:  SourceConnectorType *string `locationName:\"sourceConnectorType\" type:\"string\" enum:\"ConnectorType\"`",
          "5267:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "5270:  TriggerType *string `locationName:\"triggerType\" type:\"string\" enum:\"TriggerType\"`",
          "5271: }",
          "5274: func (s FlowDefinition) String() string {",
          "5275:  return awsutil.Prettify(s)",
          "5276: }",
          "5279: func (s FlowDefinition) GoString() string {",
          "5280:  return s.String()",
          "5281: }",
          "5284: func (s *FlowDefinition) SetCreatedAt(v time.Time) *FlowDefinition {",
          "5285:  s.CreatedAt = &v",
          "5286:  return s",
          "5287: }",
          "5290: func (s *FlowDefinition) SetCreatedBy(v string) *FlowDefinition {",
          "5291:  s.CreatedBy = &v",
          "5292:  return s",
          "5293: }",
          "5296: func (s *FlowDefinition) SetDescription(v string) *FlowDefinition {",
          "5297:  s.Description = &v",
          "5298:  return s",
          "5299: }",
          "5302: func (s *FlowDefinition) SetDestinationConnectorType(v string) *FlowDefinition {",
          "5303:  s.DestinationConnectorType = &v",
          "5304:  return s",
          "5305: }",
          "5308: func (s *FlowDefinition) SetFlowArn(v string) *FlowDefinition {",
          "5309:  s.FlowArn = &v",
          "5310:  return s",
          "5311: }",
          "5314: func (s *FlowDefinition) SetFlowName(v string) *FlowDefinition {",
          "5315:  s.FlowName = &v",
          "5316:  return s",
          "5317: }",
          "5320: func (s *FlowDefinition) SetFlowStatus(v string) *FlowDefinition {",
          "5321:  s.FlowStatus = &v",
          "5322:  return s",
          "5323: }",
          "5326: func (s *FlowDefinition) SetLastRunExecutionDetails(v *ExecutionDetails) *FlowDefinition {",
          "5327:  s.LastRunExecutionDetails = v",
          "5328:  return s",
          "5329: }",
          "5332: func (s *FlowDefinition) SetLastUpdatedAt(v time.Time) *FlowDefinition {",
          "5333:  s.LastUpdatedAt = &v",
          "5334:  return s",
          "5335: }",
          "5338: func (s *FlowDefinition) SetLastUpdatedBy(v string) *FlowDefinition {",
          "5339:  s.LastUpdatedBy = &v",
          "5340:  return s",
          "5341: }",
          "5344: func (s *FlowDefinition) SetSourceConnectorType(v string) *FlowDefinition {",
          "5345:  s.SourceConnectorType = &v",
          "5346:  return s",
          "5347: }",
          "5350: func (s *FlowDefinition) SetTags(v map[string]*string) *FlowDefinition {",
          "5351:  s.Tags = v",
          "5352:  return s",
          "5353: }",
          "5356: func (s *FlowDefinition) SetTriggerType(v string) *FlowDefinition {",
          "5357:  s.TriggerType = &v",
          "5358:  return s",
          "5359: }",
          "5362: type GoogleAnalyticsConnectorProfileCredentials struct {",
          "5363:  _ struct{} `type:\"structure\"`",
          "5366:  AccessToken *string `locationName:\"accessToken\" type:\"string\" sensitive:\"true\"`",
          "5371:  ClientId *string `locationName:\"clientId\" type:\"string\" required:\"true\"`",
          "5377:  ClientSecret *string `locationName:\"clientSecret\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "5381:  OAuthRequest *ConnectorOAuthRequest `locationName:\"oAuthRequest\" type:\"structure\"`",
          "5385:  RefreshToken *string `locationName:\"refreshToken\" type:\"string\"`",
          "5386: }",
          "5389: func (s GoogleAnalyticsConnectorProfileCredentials) String() string {",
          "5390:  return awsutil.Prettify(s)",
          "5391: }",
          "5394: func (s GoogleAnalyticsConnectorProfileCredentials) GoString() string {",
          "5395:  return s.String()",
          "5396: }",
          "5399: func (s *GoogleAnalyticsConnectorProfileCredentials) Validate() error {",
          "5400:  invalidParams := request.ErrInvalidParams{Context: \"GoogleAnalyticsConnectorProfileCredentials\"}",
          "5401:  if s.ClientId == nil {",
          "5402:   invalidParams.Add(request.NewErrParamRequired(\"ClientId\"))",
          "5403:  }",
          "5404:  if s.ClientSecret == nil {",
          "5405:   invalidParams.Add(request.NewErrParamRequired(\"ClientSecret\"))",
          "5406:  }",
          "5408:  if invalidParams.Len() > 0 {",
          "5409:   return invalidParams",
          "5410:  }",
          "5411:  return nil",
          "5412: }",
          "5415: func (s *GoogleAnalyticsConnectorProfileCredentials) SetAccessToken(v string) *GoogleAnalyticsConnectorProfileCredentials {",
          "5416:  s.AccessToken = &v",
          "5417:  return s",
          "5418: }",
          "5421: func (s *GoogleAnalyticsConnectorProfileCredentials) SetClientId(v string) *GoogleAnalyticsConnectorProfileCredentials {",
          "5422:  s.ClientId = &v",
          "5423:  return s",
          "5424: }",
          "5427: func (s *GoogleAnalyticsConnectorProfileCredentials) SetClientSecret(v string) *GoogleAnalyticsConnectorProfileCredentials {",
          "5428:  s.ClientSecret = &v",
          "5429:  return s",
          "5430: }",
          "5433: func (s *GoogleAnalyticsConnectorProfileCredentials) SetOAuthRequest(v *ConnectorOAuthRequest) *GoogleAnalyticsConnectorProfileCredentials {",
          "5434:  s.OAuthRequest = v",
          "5435:  return s",
          "5436: }",
          "5439: func (s *GoogleAnalyticsConnectorProfileCredentials) SetRefreshToken(v string) *GoogleAnalyticsConnectorProfileCredentials {",
          "5440:  s.RefreshToken = &v",
          "5441:  return s",
          "5442: }",
          "5445: type GoogleAnalyticsConnectorProfileProperties struct {",
          "5446:  _ struct{} `type:\"structure\"`",
          "5447: }",
          "5450: func (s GoogleAnalyticsConnectorProfileProperties) String() string {",
          "5451:  return awsutil.Prettify(s)",
          "5452: }",
          "5455: func (s GoogleAnalyticsConnectorProfileProperties) GoString() string {",
          "5456:  return s.String()",
          "5457: }",
          "5460: type GoogleAnalyticsMetadata struct {",
          "5461:  _ struct{} `type:\"structure\"`",
          "5464:  OAuthScopes []*string `locationName:\"oAuthScopes\" type:\"list\"`",
          "5465: }",
          "5468: func (s GoogleAnalyticsMetadata) String() string {",
          "5469:  return awsutil.Prettify(s)",
          "5470: }",
          "5473: func (s GoogleAnalyticsMetadata) GoString() string {",
          "5474:  return s.String()",
          "5475: }",
          "5478: func (s *GoogleAnalyticsMetadata) SetOAuthScopes(v []*string) *GoogleAnalyticsMetadata {",
          "5479:  s.OAuthScopes = v",
          "5480:  return s",
          "5481: }",
          "5485: type GoogleAnalyticsSourceProperties struct {",
          "5486:  _ struct{} `type:\"structure\"`",
          "5491:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "5492: }",
          "5495: func (s GoogleAnalyticsSourceProperties) String() string {",
          "5496:  return awsutil.Prettify(s)",
          "5497: }",
          "5500: func (s GoogleAnalyticsSourceProperties) GoString() string {",
          "5501:  return s.String()",
          "5502: }",
          "5505: func (s *GoogleAnalyticsSourceProperties) Validate() error {",
          "5506:  invalidParams := request.ErrInvalidParams{Context: \"GoogleAnalyticsSourceProperties\"}",
          "5507:  if s.Object == nil {",
          "5508:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "5509:  }",
          "5511:  if invalidParams.Len() > 0 {",
          "5512:   return invalidParams",
          "5513:  }",
          "5514:  return nil",
          "5515: }",
          "5518: func (s *GoogleAnalyticsSourceProperties) SetObject(v string) *GoogleAnalyticsSourceProperties {",
          "5519:  s.Object = &v",
          "5520:  return s",
          "5521: }",
          "5524: type InforNexusConnectorProfileCredentials struct {",
          "5525:  _ struct{} `type:\"structure\"`",
          "5530:  AccessKeyId *string `locationName:\"accessKeyId\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "5535:  Datakey *string `locationName:\"datakey\" type:\"string\" required:\"true\"`",
          "5540:  SecretAccessKey *string `locationName:\"secretAccessKey\" type:\"string\" required:\"true\"`",
          "5545:  UserId *string `locationName:\"userId\" type:\"string\" required:\"true\"`",
          "5546: }",
          "5549: func (s InforNexusConnectorProfileCredentials) String() string {",
          "5550:  return awsutil.Prettify(s)",
          "5551: }",
          "5554: func (s InforNexusConnectorProfileCredentials) GoString() string {",
          "5555:  return s.String()",
          "5556: }",
          "5559: func (s *InforNexusConnectorProfileCredentials) Validate() error {",
          "5560:  invalidParams := request.ErrInvalidParams{Context: \"InforNexusConnectorProfileCredentials\"}",
          "5561:  if s.AccessKeyId == nil {",
          "5562:   invalidParams.Add(request.NewErrParamRequired(\"AccessKeyId\"))",
          "5563:  }",
          "5564:  if s.Datakey == nil {",
          "5565:   invalidParams.Add(request.NewErrParamRequired(\"Datakey\"))",
          "5566:  }",
          "5567:  if s.SecretAccessKey == nil {",
          "5568:   invalidParams.Add(request.NewErrParamRequired(\"SecretAccessKey\"))",
          "5569:  }",
          "5570:  if s.UserId == nil {",
          "5571:   invalidParams.Add(request.NewErrParamRequired(\"UserId\"))",
          "5572:  }",
          "5574:  if invalidParams.Len() > 0 {",
          "5575:   return invalidParams",
          "5576:  }",
          "5577:  return nil",
          "5578: }",
          "5581: func (s *InforNexusConnectorProfileCredentials) SetAccessKeyId(v string) *InforNexusConnectorProfileCredentials {",
          "5582:  s.AccessKeyId = &v",
          "5583:  return s",
          "5584: }",
          "5587: func (s *InforNexusConnectorProfileCredentials) SetDatakey(v string) *InforNexusConnectorProfileCredentials {",
          "5588:  s.Datakey = &v",
          "5589:  return s",
          "5590: }",
          "5593: func (s *InforNexusConnectorProfileCredentials) SetSecretAccessKey(v string) *InforNexusConnectorProfileCredentials {",
          "5594:  s.SecretAccessKey = &v",
          "5595:  return s",
          "5596: }",
          "5599: func (s *InforNexusConnectorProfileCredentials) SetUserId(v string) *InforNexusConnectorProfileCredentials {",
          "5600:  s.UserId = &v",
          "5601:  return s",
          "5602: }",
          "5605: type InforNexusConnectorProfileProperties struct {",
          "5606:  _ struct{} `type:\"structure\"`",
          "5611:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\" required:\"true\"`",
          "5612: }",
          "5615: func (s InforNexusConnectorProfileProperties) String() string {",
          "5616:  return awsutil.Prettify(s)",
          "5617: }",
          "5620: func (s InforNexusConnectorProfileProperties) GoString() string {",
          "5621:  return s.String()",
          "5622: }",
          "5625: func (s *InforNexusConnectorProfileProperties) Validate() error {",
          "5626:  invalidParams := request.ErrInvalidParams{Context: \"InforNexusConnectorProfileProperties\"}",
          "5627:  if s.InstanceUrl == nil {",
          "5628:   invalidParams.Add(request.NewErrParamRequired(\"InstanceUrl\"))",
          "5629:  }",
          "5631:  if invalidParams.Len() > 0 {",
          "5632:   return invalidParams",
          "5633:  }",
          "5634:  return nil",
          "5635: }",
          "5638: func (s *InforNexusConnectorProfileProperties) SetInstanceUrl(v string) *InforNexusConnectorProfileProperties {",
          "5639:  s.InstanceUrl = &v",
          "5640:  return s",
          "5641: }",
          "5644: type InforNexusMetadata struct {",
          "5645:  _ struct{} `type:\"structure\"`",
          "5646: }",
          "5649: func (s InforNexusMetadata) String() string {",
          "5650:  return awsutil.Prettify(s)",
          "5651: }",
          "5654: func (s InforNexusMetadata) GoString() string {",
          "5655:  return s.String()",
          "5656: }",
          "5659: type InforNexusSourceProperties struct {",
          "5660:  _ struct{} `type:\"structure\"`",
          "5665:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "5666: }",
          "5669: func (s InforNexusSourceProperties) String() string {",
          "5670:  return awsutil.Prettify(s)",
          "5671: }",
          "5674: func (s InforNexusSourceProperties) GoString() string {",
          "5675:  return s.String()",
          "5676: }",
          "5679: func (s *InforNexusSourceProperties) Validate() error {",
          "5680:  invalidParams := request.ErrInvalidParams{Context: \"InforNexusSourceProperties\"}",
          "5681:  if s.Object == nil {",
          "5682:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "5683:  }",
          "5685:  if invalidParams.Len() > 0 {",
          "5686:   return invalidParams",
          "5687:  }",
          "5688:  return nil",
          "5689: }",
          "5692: func (s *InforNexusSourceProperties) SetObject(v string) *InforNexusSourceProperties {",
          "5693:  s.Object = &v",
          "5694:  return s",
          "5695: }",
          "5699: type InternalServerException struct {",
          "5700:  _            struct{}                  `type:\"structure\"`",
          "5701:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "5703:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "5704: }",
          "5707: func (s InternalServerException) String() string {",
          "5708:  return awsutil.Prettify(s)",
          "5709: }",
          "5712: func (s InternalServerException) GoString() string {",
          "5713:  return s.String()",
          "5714: }",
          "5716: func newErrorInternalServerException(v protocol.ResponseMetadata) error {",
          "5717:  return &InternalServerException{",
          "5718:   RespMetadata: v,",
          "5719:  }",
          "5720: }",
          "5723: func (s *InternalServerException) Code() string {",
          "5724:  return \"InternalServerException\"",
          "5725: }",
          "5728: func (s *InternalServerException) Message() string {",
          "5729:  if s.Message_ != nil {",
          "5730:   return *s.Message_",
          "5731:  }",
          "5732:  return \"\"",
          "5733: }",
          "5736: func (s *InternalServerException) OrigErr() error {",
          "5737:  return nil",
          "5738: }",
          "5740: func (s *InternalServerException) Error() string {",
          "5741:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "5742: }",
          "5745: func (s *InternalServerException) StatusCode() int {",
          "5746:  return s.RespMetadata.StatusCode",
          "5747: }",
          "5750: func (s *InternalServerException) RequestID() string {",
          "5751:  return s.RespMetadata.RequestID",
          "5752: }",
          "5754: type ListConnectorEntitiesInput struct {",
          "5755:  _ struct{} `type:\"structure\"`",
          "5759:  ConnectorProfileName *string `locationName:\"connectorProfileName\" type:\"string\"`",
          "5762:  ConnectorType *string `locationName:\"connectorType\" type:\"string\" enum:\"ConnectorType\"`",
          "5770:  EntitiesPath *string `locationName:\"entitiesPath\" type:\"string\"`",
          "5771: }",
          "5774: func (s ListConnectorEntitiesInput) String() string {",
          "5775:  return awsutil.Prettify(s)",
          "5776: }",
          "5779: func (s ListConnectorEntitiesInput) GoString() string {",
          "5780:  return s.String()",
          "5781: }",
          "5784: func (s *ListConnectorEntitiesInput) SetConnectorProfileName(v string) *ListConnectorEntitiesInput {",
          "5785:  s.ConnectorProfileName = &v",
          "5786:  return s",
          "5787: }",
          "5790: func (s *ListConnectorEntitiesInput) SetConnectorType(v string) *ListConnectorEntitiesInput {",
          "5791:  s.ConnectorType = &v",
          "5792:  return s",
          "5793: }",
          "5796: func (s *ListConnectorEntitiesInput) SetEntitiesPath(v string) *ListConnectorEntitiesInput {",
          "5797:  s.EntitiesPath = &v",
          "5798:  return s",
          "5799: }",
          "5801: type ListConnectorEntitiesOutput struct {",
          "5802:  _ struct{} `type:\"structure\"`",
          "5809:  ConnectorEntityMap map[string][]*ConnectorEntity `locationName:\"connectorEntityMap\" type:\"map\" required:\"true\"`",
          "5810: }",
          "5813: func (s ListConnectorEntitiesOutput) String() string {",
          "5814:  return awsutil.Prettify(s)",
          "5815: }",
          "5818: func (s ListConnectorEntitiesOutput) GoString() string {",
          "5819:  return s.String()",
          "5820: }",
          "5823: func (s *ListConnectorEntitiesOutput) SetConnectorEntityMap(v map[string][]*ConnectorEntity) *ListConnectorEntitiesOutput {",
          "5824:  s.ConnectorEntityMap = v",
          "5825:  return s",
          "5826: }",
          "5828: type ListFlowsInput struct {",
          "5829:  _ struct{} `type:\"structure\"`",
          "5833:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "5836:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "5837: }",
          "5840: func (s ListFlowsInput) String() string {",
          "5841:  return awsutil.Prettify(s)",
          "5842: }",
          "5845: func (s ListFlowsInput) GoString() string {",
          "5846:  return s.String()",
          "5847: }",
          "5850: func (s *ListFlowsInput) Validate() error {",
          "5851:  invalidParams := request.ErrInvalidParams{Context: \"ListFlowsInput\"}",
          "5852:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "5853:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "5854:  }",
          "5856:  if invalidParams.Len() > 0 {",
          "5857:   return invalidParams",
          "5858:  }",
          "5859:  return nil",
          "5860: }",
          "5863: func (s *ListFlowsInput) SetMaxResults(v int64) *ListFlowsInput {",
          "5864:  s.MaxResults = &v",
          "5865:  return s",
          "5866: }",
          "5869: func (s *ListFlowsInput) SetNextToken(v string) *ListFlowsInput {",
          "5870:  s.NextToken = &v",
          "5871:  return s",
          "5872: }",
          "5874: type ListFlowsOutput struct {",
          "5875:  _ struct{} `type:\"structure\"`",
          "5878:  Flows []*FlowDefinition `locationName:\"flows\" type:\"list\"`",
          "5881:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "5882: }",
          "5885: func (s ListFlowsOutput) String() string {",
          "5886:  return awsutil.Prettify(s)",
          "5887: }",
          "5890: func (s ListFlowsOutput) GoString() string {",
          "5891:  return s.String()",
          "5892: }",
          "5895: func (s *ListFlowsOutput) SetFlows(v []*FlowDefinition) *ListFlowsOutput {",
          "5896:  s.Flows = v",
          "5897:  return s",
          "5898: }",
          "5901: func (s *ListFlowsOutput) SetNextToken(v string) *ListFlowsOutput {",
          "5902:  s.NextToken = &v",
          "5903:  return s",
          "5904: }",
          "5906: type ListTagsForResourceInput struct {",
          "5907:  _ struct{} `type:\"structure\"`",
          "5912:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" type:\"string\" required:\"true\"`",
          "5913: }",
          "5916: func (s ListTagsForResourceInput) String() string {",
          "5917:  return awsutil.Prettify(s)",
          "5918: }",
          "5921: func (s ListTagsForResourceInput) GoString() string {",
          "5922:  return s.String()",
          "5923: }",
          "5926: func (s *ListTagsForResourceInput) Validate() error {",
          "5927:  invalidParams := request.ErrInvalidParams{Context: \"ListTagsForResourceInput\"}",
          "5928:  if s.ResourceArn == nil {",
          "5929:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "5930:  }",
          "5931:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "5932:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "5933:  }",
          "5935:  if invalidParams.Len() > 0 {",
          "5936:   return invalidParams",
          "5937:  }",
          "5938:  return nil",
          "5939: }",
          "5942: func (s *ListTagsForResourceInput) SetResourceArn(v string) *ListTagsForResourceInput {",
          "5943:  s.ResourceArn = &v",
          "5944:  return s",
          "5945: }",
          "5947: type ListTagsForResourceOutput struct {",
          "5948:  _ struct{} `type:\"structure\"`",
          "5951:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "5952: }",
          "5955: func (s ListTagsForResourceOutput) String() string {",
          "5956:  return awsutil.Prettify(s)",
          "5957: }",
          "5960: func (s ListTagsForResourceOutput) GoString() string {",
          "5961:  return s.String()",
          "5962: }",
          "5965: func (s *ListTagsForResourceOutput) SetTags(v map[string]*string) *ListTagsForResourceOutput {",
          "5966:  s.Tags = v",
          "5967:  return s",
          "5968: }",
          "5971: type MarketoConnectorProfileCredentials struct {",
          "5972:  _ struct{} `type:\"structure\"`",
          "5975:  AccessToken *string `locationName:\"accessToken\" type:\"string\" sensitive:\"true\"`",
          "5980:  ClientId *string `locationName:\"clientId\" type:\"string\" required:\"true\"`",
          "5986:  ClientSecret *string `locationName:\"clientSecret\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "5990:  OAuthRequest *ConnectorOAuthRequest `locationName:\"oAuthRequest\" type:\"structure\"`",
          "5991: }",
          "5994: func (s MarketoConnectorProfileCredentials) String() string {",
          "5995:  return awsutil.Prettify(s)",
          "5996: }",
          "5999: func (s MarketoConnectorProfileCredentials) GoString() string {",
          "6000:  return s.String()",
          "6001: }",
          "6004: func (s *MarketoConnectorProfileCredentials) Validate() error {",
          "6005:  invalidParams := request.ErrInvalidParams{Context: \"MarketoConnectorProfileCredentials\"}",
          "6006:  if s.ClientId == nil {",
          "6007:   invalidParams.Add(request.NewErrParamRequired(\"ClientId\"))",
          "6008:  }",
          "6009:  if s.ClientSecret == nil {",
          "6010:   invalidParams.Add(request.NewErrParamRequired(\"ClientSecret\"))",
          "6011:  }",
          "6013:  if invalidParams.Len() > 0 {",
          "6014:   return invalidParams",
          "6015:  }",
          "6016:  return nil",
          "6017: }",
          "6020: func (s *MarketoConnectorProfileCredentials) SetAccessToken(v string) *MarketoConnectorProfileCredentials {",
          "6021:  s.AccessToken = &v",
          "6022:  return s",
          "6023: }",
          "6026: func (s *MarketoConnectorProfileCredentials) SetClientId(v string) *MarketoConnectorProfileCredentials {",
          "6027:  s.ClientId = &v",
          "6028:  return s",
          "6029: }",
          "6032: func (s *MarketoConnectorProfileCredentials) SetClientSecret(v string) *MarketoConnectorProfileCredentials {",
          "6033:  s.ClientSecret = &v",
          "6034:  return s",
          "6035: }",
          "6038: func (s *MarketoConnectorProfileCredentials) SetOAuthRequest(v *ConnectorOAuthRequest) *MarketoConnectorProfileCredentials {",
          "6039:  s.OAuthRequest = v",
          "6040:  return s",
          "6041: }",
          "6044: type MarketoConnectorProfileProperties struct {",
          "6045:  _ struct{} `type:\"structure\"`",
          "6050:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\" required:\"true\"`",
          "6051: }",
          "6054: func (s MarketoConnectorProfileProperties) String() string {",
          "6055:  return awsutil.Prettify(s)",
          "6056: }",
          "6059: func (s MarketoConnectorProfileProperties) GoString() string {",
          "6060:  return s.String()",
          "6061: }",
          "6064: func (s *MarketoConnectorProfileProperties) Validate() error {",
          "6065:  invalidParams := request.ErrInvalidParams{Context: \"MarketoConnectorProfileProperties\"}",
          "6066:  if s.InstanceUrl == nil {",
          "6067:   invalidParams.Add(request.NewErrParamRequired(\"InstanceUrl\"))",
          "6068:  }",
          "6070:  if invalidParams.Len() > 0 {",
          "6071:   return invalidParams",
          "6072:  }",
          "6073:  return nil",
          "6074: }",
          "6077: func (s *MarketoConnectorProfileProperties) SetInstanceUrl(v string) *MarketoConnectorProfileProperties {",
          "6078:  s.InstanceUrl = &v",
          "6079:  return s",
          "6080: }",
          "6083: type MarketoMetadata struct {",
          "6084:  _ struct{} `type:\"structure\"`",
          "6085: }",
          "6088: func (s MarketoMetadata) String() string {",
          "6089:  return awsutil.Prettify(s)",
          "6090: }",
          "6093: func (s MarketoMetadata) GoString() string {",
          "6094:  return s.String()",
          "6095: }",
          "6098: type MarketoSourceProperties struct {",
          "6099:  _ struct{} `type:\"structure\"`",
          "6104:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "6105: }",
          "6108: func (s MarketoSourceProperties) String() string {",
          "6109:  return awsutil.Prettify(s)",
          "6110: }",
          "6113: func (s MarketoSourceProperties) GoString() string {",
          "6114:  return s.String()",
          "6115: }",
          "6118: func (s *MarketoSourceProperties) Validate() error {",
          "6119:  invalidParams := request.ErrInvalidParams{Context: \"MarketoSourceProperties\"}",
          "6120:  if s.Object == nil {",
          "6121:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "6122:  }",
          "6124:  if invalidParams.Len() > 0 {",
          "6125:   return invalidParams",
          "6126:  }",
          "6127:  return nil",
          "6128: }",
          "6131: func (s *MarketoSourceProperties) SetObject(v string) *MarketoSourceProperties {",
          "6132:  s.Object = &v",
          "6133:  return s",
          "6134: }",
          "6139: type PrefixConfig struct {",
          "6140:  _ struct{} `type:\"structure\"`",
          "6144:  PrefixFormat *string `locationName:\"prefixFormat\" type:\"string\" enum:\"PrefixFormat\"`",
          "6147:  PrefixType *string `locationName:\"prefixType\" type:\"string\" enum:\"PrefixType\"`",
          "6148: }",
          "6151: func (s PrefixConfig) String() string {",
          "6152:  return awsutil.Prettify(s)",
          "6153: }",
          "6156: func (s PrefixConfig) GoString() string {",
          "6157:  return s.String()",
          "6158: }",
          "6161: func (s *PrefixConfig) SetPrefixFormat(v string) *PrefixConfig {",
          "6162:  s.PrefixFormat = &v",
          "6163:  return s",
          "6164: }",
          "6167: func (s *PrefixConfig) SetPrefixType(v string) *PrefixConfig {",
          "6168:  s.PrefixType = &v",
          "6169:  return s",
          "6170: }",
          "6173: type RedshiftConnectorProfileCredentials struct {",
          "6174:  _ struct{} `type:\"structure\"`",
          "6179:  Password *string `locationName:\"password\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "6184:  Username *string `locationName:\"username\" type:\"string\" required:\"true\"`",
          "6185: }",
          "6188: func (s RedshiftConnectorProfileCredentials) String() string {",
          "6189:  return awsutil.Prettify(s)",
          "6190: }",
          "6193: func (s RedshiftConnectorProfileCredentials) GoString() string {",
          "6194:  return s.String()",
          "6195: }",
          "6198: func (s *RedshiftConnectorProfileCredentials) Validate() error {",
          "6199:  invalidParams := request.ErrInvalidParams{Context: \"RedshiftConnectorProfileCredentials\"}",
          "6200:  if s.Password == nil {",
          "6201:   invalidParams.Add(request.NewErrParamRequired(\"Password\"))",
          "6202:  }",
          "6203:  if s.Username == nil {",
          "6204:   invalidParams.Add(request.NewErrParamRequired(\"Username\"))",
          "6205:  }",
          "6207:  if invalidParams.Len() > 0 {",
          "6208:   return invalidParams",
          "6209:  }",
          "6210:  return nil",
          "6211: }",
          "6214: func (s *RedshiftConnectorProfileCredentials) SetPassword(v string) *RedshiftConnectorProfileCredentials {",
          "6215:  s.Password = &v",
          "6216:  return s",
          "6217: }",
          "6220: func (s *RedshiftConnectorProfileCredentials) SetUsername(v string) *RedshiftConnectorProfileCredentials {",
          "6221:  s.Username = &v",
          "6222:  return s",
          "6223: }",
          "6226: type RedshiftConnectorProfileProperties struct {",
          "6227:  _ struct{} `type:\"structure\"`",
          "6232:  BucketName *string `locationName:\"bucketName\" min:\"3\" type:\"string\" required:\"true\"`",
          "6236:  BucketPrefix *string `locationName:\"bucketPrefix\" type:\"string\"`",
          "6241:  DatabaseUrl *string `locationName:\"databaseUrl\" type:\"string\" required:\"true\"`",
          "6246:  RoleArn *string `locationName:\"roleArn\" type:\"string\" required:\"true\"`",
          "6247: }",
          "6250: func (s RedshiftConnectorProfileProperties) String() string {",
          "6251:  return awsutil.Prettify(s)",
          "6252: }",
          "6255: func (s RedshiftConnectorProfileProperties) GoString() string {",
          "6256:  return s.String()",
          "6257: }",
          "6260: func (s *RedshiftConnectorProfileProperties) Validate() error {",
          "6261:  invalidParams := request.ErrInvalidParams{Context: \"RedshiftConnectorProfileProperties\"}",
          "6262:  if s.BucketName == nil {",
          "6263:   invalidParams.Add(request.NewErrParamRequired(\"BucketName\"))",
          "6264:  }",
          "6265:  if s.BucketName != nil && len(*s.BucketName) < 3 {",
          "6266:   invalidParams.Add(request.NewErrParamMinLen(\"BucketName\", 3))",
          "6267:  }",
          "6268:  if s.DatabaseUrl == nil {",
          "6269:   invalidParams.Add(request.NewErrParamRequired(\"DatabaseUrl\"))",
          "6270:  }",
          "6271:  if s.RoleArn == nil {",
          "6272:   invalidParams.Add(request.NewErrParamRequired(\"RoleArn\"))",
          "6273:  }",
          "6275:  if invalidParams.Len() > 0 {",
          "6276:   return invalidParams",
          "6277:  }",
          "6278:  return nil",
          "6279: }",
          "6282: func (s *RedshiftConnectorProfileProperties) SetBucketName(v string) *RedshiftConnectorProfileProperties {",
          "6283:  s.BucketName = &v",
          "6284:  return s",
          "6285: }",
          "6288: func (s *RedshiftConnectorProfileProperties) SetBucketPrefix(v string) *RedshiftConnectorProfileProperties {",
          "6289:  s.BucketPrefix = &v",
          "6290:  return s",
          "6291: }",
          "6294: func (s *RedshiftConnectorProfileProperties) SetDatabaseUrl(v string) *RedshiftConnectorProfileProperties {",
          "6295:  s.DatabaseUrl = &v",
          "6296:  return s",
          "6297: }",
          "6300: func (s *RedshiftConnectorProfileProperties) SetRoleArn(v string) *RedshiftConnectorProfileProperties {",
          "6301:  s.RoleArn = &v",
          "6302:  return s",
          "6303: }",
          "6306: type RedshiftDestinationProperties struct {",
          "6307:  _ struct{} `type:\"structure\"`",
          "6311:  BucketPrefix *string `locationName:\"bucketPrefix\" type:\"string\"`",
          "6318:  ErrorHandlingConfig *ErrorHandlingConfig `locationName:\"errorHandlingConfig\" type:\"structure\"`",
          "6324:  IntermediateBucketName *string `locationName:\"intermediateBucketName\" min:\"3\" type:\"string\" required:\"true\"`",
          "6329:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "6330: }",
          "6333: func (s RedshiftDestinationProperties) String() string {",
          "6334:  return awsutil.Prettify(s)",
          "6335: }",
          "6338: func (s RedshiftDestinationProperties) GoString() string {",
          "6339:  return s.String()",
          "6340: }",
          "6343: func (s *RedshiftDestinationProperties) Validate() error {",
          "6344:  invalidParams := request.ErrInvalidParams{Context: \"RedshiftDestinationProperties\"}",
          "6345:  if s.IntermediateBucketName == nil {",
          "6346:   invalidParams.Add(request.NewErrParamRequired(\"IntermediateBucketName\"))",
          "6347:  }",
          "6348:  if s.IntermediateBucketName != nil && len(*s.IntermediateBucketName) < 3 {",
          "6349:   invalidParams.Add(request.NewErrParamMinLen(\"IntermediateBucketName\", 3))",
          "6350:  }",
          "6351:  if s.Object == nil {",
          "6352:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "6353:  }",
          "6354:  if s.ErrorHandlingConfig != nil {",
          "6355:   if err := s.ErrorHandlingConfig.Validate(); err != nil {",
          "6356:    invalidParams.AddNested(\"ErrorHandlingConfig\", err.(request.ErrInvalidParams))",
          "6357:   }",
          "6358:  }",
          "6360:  if invalidParams.Len() > 0 {",
          "6361:   return invalidParams",
          "6362:  }",
          "6363:  return nil",
          "6364: }",
          "6367: func (s *RedshiftDestinationProperties) SetBucketPrefix(v string) *RedshiftDestinationProperties {",
          "6368:  s.BucketPrefix = &v",
          "6369:  return s",
          "6370: }",
          "6373: func (s *RedshiftDestinationProperties) SetErrorHandlingConfig(v *ErrorHandlingConfig) *RedshiftDestinationProperties {",
          "6374:  s.ErrorHandlingConfig = v",
          "6375:  return s",
          "6376: }",
          "6379: func (s *RedshiftDestinationProperties) SetIntermediateBucketName(v string) *RedshiftDestinationProperties {",
          "6380:  s.IntermediateBucketName = &v",
          "6381:  return s",
          "6382: }",
          "6385: func (s *RedshiftDestinationProperties) SetObject(v string) *RedshiftDestinationProperties {",
          "6386:  s.Object = &v",
          "6387:  return s",
          "6388: }",
          "6391: type RedshiftMetadata struct {",
          "6392:  _ struct{} `type:\"structure\"`",
          "6393: }",
          "6396: func (s RedshiftMetadata) String() string {",
          "6397:  return awsutil.Prettify(s)",
          "6398: }",
          "6401: func (s RedshiftMetadata) GoString() string {",
          "6402:  return s.String()",
          "6403: }",
          "6407: type ResourceNotFoundException struct {",
          "6408:  _            struct{}                  `type:\"structure\"`",
          "6409:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "6411:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "6412: }",
          "6415: func (s ResourceNotFoundException) String() string {",
          "6416:  return awsutil.Prettify(s)",
          "6417: }",
          "6420: func (s ResourceNotFoundException) GoString() string {",
          "6421:  return s.String()",
          "6422: }",
          "6424: func newErrorResourceNotFoundException(v protocol.ResponseMetadata) error {",
          "6425:  return &ResourceNotFoundException{",
          "6426:   RespMetadata: v,",
          "6427:  }",
          "6428: }",
          "6431: func (s *ResourceNotFoundException) Code() string {",
          "6432:  return \"ResourceNotFoundException\"",
          "6433: }",
          "6436: func (s *ResourceNotFoundException) Message() string {",
          "6437:  if s.Message_ != nil {",
          "6438:   return *s.Message_",
          "6439:  }",
          "6440:  return \"\"",
          "6441: }",
          "6444: func (s *ResourceNotFoundException) OrigErr() error {",
          "6445:  return nil",
          "6446: }",
          "6448: func (s *ResourceNotFoundException) Error() string {",
          "6449:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "6450: }",
          "6453: func (s *ResourceNotFoundException) StatusCode() int {",
          "6454:  return s.RespMetadata.StatusCode",
          "6455: }",
          "6458: func (s *ResourceNotFoundException) RequestID() string {",
          "6459:  return s.RespMetadata.RequestID",
          "6460: }",
          "6463: type S3DestinationProperties struct {",
          "6464:  _ struct{} `type:\"structure\"`",
          "6470:  BucketName *string `locationName:\"bucketName\" min:\"3\" type:\"string\" required:\"true\"`",
          "6474:  BucketPrefix *string `locationName:\"bucketPrefix\" type:\"string\"`",
          "6478:  S3OutputFormatConfig *S3OutputFormatConfig `locationName:\"s3OutputFormatConfig\" type:\"structure\"`",
          "6479: }",
          "6482: func (s S3DestinationProperties) String() string {",
          "6483:  return awsutil.Prettify(s)",
          "6484: }",
          "6487: func (s S3DestinationProperties) GoString() string {",
          "6488:  return s.String()",
          "6489: }",
          "6492: func (s *S3DestinationProperties) Validate() error {",
          "6493:  invalidParams := request.ErrInvalidParams{Context: \"S3DestinationProperties\"}",
          "6494:  if s.BucketName == nil {",
          "6495:   invalidParams.Add(request.NewErrParamRequired(\"BucketName\"))",
          "6496:  }",
          "6497:  if s.BucketName != nil && len(*s.BucketName) < 3 {",
          "6498:   invalidParams.Add(request.NewErrParamMinLen(\"BucketName\", 3))",
          "6499:  }",
          "6501:  if invalidParams.Len() > 0 {",
          "6502:   return invalidParams",
          "6503:  }",
          "6504:  return nil",
          "6505: }",
          "6508: func (s *S3DestinationProperties) SetBucketName(v string) *S3DestinationProperties {",
          "6509:  s.BucketName = &v",
          "6510:  return s",
          "6511: }",
          "6514: func (s *S3DestinationProperties) SetBucketPrefix(v string) *S3DestinationProperties {",
          "6515:  s.BucketPrefix = &v",
          "6516:  return s",
          "6517: }",
          "6520: func (s *S3DestinationProperties) SetS3OutputFormatConfig(v *S3OutputFormatConfig) *S3DestinationProperties {",
          "6521:  s.S3OutputFormatConfig = v",
          "6522:  return s",
          "6523: }",
          "6526: type S3Metadata struct {",
          "6527:  _ struct{} `type:\"structure\"`",
          "6528: }",
          "6531: func (s S3Metadata) String() string {",
          "6532:  return awsutil.Prettify(s)",
          "6533: }",
          "6536: func (s S3Metadata) GoString() string {",
          "6537:  return s.String()",
          "6538: }",
          "6542: type S3OutputFormatConfig struct {",
          "6543:  _ struct{} `type:\"structure\"`",
          "6547:  AggregationConfig *AggregationConfig `locationName:\"aggregationConfig\" type:\"structure\"`",
          "6550:  FileType *string `locationName:\"fileType\" type:\"string\" enum:\"FileType\"`",
          "6555:  PrefixConfig *PrefixConfig `locationName:\"prefixConfig\" type:\"structure\"`",
          "6556: }",
          "6559: func (s S3OutputFormatConfig) String() string {",
          "6560:  return awsutil.Prettify(s)",
          "6561: }",
          "6564: func (s S3OutputFormatConfig) GoString() string {",
          "6565:  return s.String()",
          "6566: }",
          "6569: func (s *S3OutputFormatConfig) SetAggregationConfig(v *AggregationConfig) *S3OutputFormatConfig {",
          "6570:  s.AggregationConfig = v",
          "6571:  return s",
          "6572: }",
          "6575: func (s *S3OutputFormatConfig) SetFileType(v string) *S3OutputFormatConfig {",
          "6576:  s.FileType = &v",
          "6577:  return s",
          "6578: }",
          "6581: func (s *S3OutputFormatConfig) SetPrefixConfig(v *PrefixConfig) *S3OutputFormatConfig {",
          "6582:  s.PrefixConfig = v",
          "6583:  return s",
          "6584: }",
          "6588: type S3SourceProperties struct {",
          "6589:  _ struct{} `type:\"structure\"`",
          "6594:  BucketName *string `locationName:\"bucketName\" min:\"3\" type:\"string\" required:\"true\"`",
          "6597:  BucketPrefix *string `locationName:\"bucketPrefix\" type:\"string\"`",
          "6598: }",
          "6601: func (s S3SourceProperties) String() string {",
          "6602:  return awsutil.Prettify(s)",
          "6603: }",
          "6606: func (s S3SourceProperties) GoString() string {",
          "6607:  return s.String()",
          "6608: }",
          "6611: func (s *S3SourceProperties) Validate() error {",
          "6612:  invalidParams := request.ErrInvalidParams{Context: \"S3SourceProperties\"}",
          "6613:  if s.BucketName == nil {",
          "6614:   invalidParams.Add(request.NewErrParamRequired(\"BucketName\"))",
          "6615:  }",
          "6616:  if s.BucketName != nil && len(*s.BucketName) < 3 {",
          "6617:   invalidParams.Add(request.NewErrParamMinLen(\"BucketName\", 3))",
          "6618:  }",
          "6620:  if invalidParams.Len() > 0 {",
          "6621:   return invalidParams",
          "6622:  }",
          "6623:  return nil",
          "6624: }",
          "6627: func (s *S3SourceProperties) SetBucketName(v string) *S3SourceProperties {",
          "6628:  s.BucketName = &v",
          "6629:  return s",
          "6630: }",
          "6633: func (s *S3SourceProperties) SetBucketPrefix(v string) *S3SourceProperties {",
          "6634:  s.BucketPrefix = &v",
          "6635:  return s",
          "6636: }",
          "6639: type SalesforceConnectorProfileCredentials struct {",
          "6640:  _ struct{} `type:\"structure\"`",
          "6643:  AccessToken *string `locationName:\"accessToken\" type:\"string\" sensitive:\"true\"`",
          "6647:  OAuthRequest *ConnectorOAuthRequest `locationName:\"oAuthRequest\" type:\"structure\"`",
          "6650:  RefreshToken *string `locationName:\"refreshToken\" type:\"string\"`",
          "6651: }",
          "6654: func (s SalesforceConnectorProfileCredentials) String() string {",
          "6655:  return awsutil.Prettify(s)",
          "6656: }",
          "6659: func (s SalesforceConnectorProfileCredentials) GoString() string {",
          "6660:  return s.String()",
          "6661: }",
          "6664: func (s *SalesforceConnectorProfileCredentials) SetAccessToken(v string) *SalesforceConnectorProfileCredentials {",
          "6665:  s.AccessToken = &v",
          "6666:  return s",
          "6667: }",
          "6670: func (s *SalesforceConnectorProfileCredentials) SetOAuthRequest(v *ConnectorOAuthRequest) *SalesforceConnectorProfileCredentials {",
          "6671:  s.OAuthRequest = v",
          "6672:  return s",
          "6673: }",
          "6676: func (s *SalesforceConnectorProfileCredentials) SetRefreshToken(v string) *SalesforceConnectorProfileCredentials {",
          "6677:  s.RefreshToken = &v",
          "6678:  return s",
          "6679: }",
          "6682: type SalesforceConnectorProfileProperties struct {",
          "6683:  _ struct{} `type:\"structure\"`",
          "6686:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\"`",
          "6690:  IsSandboxEnvironment *bool `locationName:\"isSandboxEnvironment\" type:\"boolean\"`",
          "6691: }",
          "6694: func (s SalesforceConnectorProfileProperties) String() string {",
          "6695:  return awsutil.Prettify(s)",
          "6696: }",
          "6699: func (s SalesforceConnectorProfileProperties) GoString() string {",
          "6700:  return s.String()",
          "6701: }",
          "6704: func (s *SalesforceConnectorProfileProperties) SetInstanceUrl(v string) *SalesforceConnectorProfileProperties {",
          "6705:  s.InstanceUrl = &v",
          "6706:  return s",
          "6707: }",
          "6710: func (s *SalesforceConnectorProfileProperties) SetIsSandboxEnvironment(v bool) *SalesforceConnectorProfileProperties {",
          "6711:  s.IsSandboxEnvironment = &v",
          "6712:  return s",
          "6713: }",
          "6716: type SalesforceDestinationProperties struct {",
          "6717:  _ struct{} `type:\"structure\"`",
          "6724:  ErrorHandlingConfig *ErrorHandlingConfig `locationName:\"errorHandlingConfig\" type:\"structure\"`",
          "6729:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "6730: }",
          "6733: func (s SalesforceDestinationProperties) String() string {",
          "6734:  return awsutil.Prettify(s)",
          "6735: }",
          "6738: func (s SalesforceDestinationProperties) GoString() string {",
          "6739:  return s.String()",
          "6740: }",
          "6743: func (s *SalesforceDestinationProperties) Validate() error {",
          "6744:  invalidParams := request.ErrInvalidParams{Context: \"SalesforceDestinationProperties\"}",
          "6745:  if s.Object == nil {",
          "6746:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "6747:  }",
          "6748:  if s.ErrorHandlingConfig != nil {",
          "6749:   if err := s.ErrorHandlingConfig.Validate(); err != nil {",
          "6750:    invalidParams.AddNested(\"ErrorHandlingConfig\", err.(request.ErrInvalidParams))",
          "6751:   }",
          "6752:  }",
          "6754:  if invalidParams.Len() > 0 {",
          "6755:   return invalidParams",
          "6756:  }",
          "6757:  return nil",
          "6758: }",
          "6761: func (s *SalesforceDestinationProperties) SetErrorHandlingConfig(v *ErrorHandlingConfig) *SalesforceDestinationProperties {",
          "6762:  s.ErrorHandlingConfig = v",
          "6763:  return s",
          "6764: }",
          "6767: func (s *SalesforceDestinationProperties) SetObject(v string) *SalesforceDestinationProperties {",
          "6768:  s.Object = &v",
          "6769:  return s",
          "6770: }",
          "6773: type SalesforceMetadata struct {",
          "6774:  _ struct{} `type:\"structure\"`",
          "6777:  OAuthScopes []*string `locationName:\"oAuthScopes\" type:\"list\"`",
          "6778: }",
          "6781: func (s SalesforceMetadata) String() string {",
          "6782:  return awsutil.Prettify(s)",
          "6783: }",
          "6786: func (s SalesforceMetadata) GoString() string {",
          "6787:  return s.String()",
          "6788: }",
          "6791: func (s *SalesforceMetadata) SetOAuthScopes(v []*string) *SalesforceMetadata {",
          "6792:  s.OAuthScopes = v",
          "6793:  return s",
          "6794: }",
          "6797: type SalesforceSourceProperties struct {",
          "6798:  _ struct{} `type:\"structure\"`",
          "6802:  EnableDynamicFieldUpdate *bool `locationName:\"enableDynamicFieldUpdate\" type:\"boolean\"`",
          "6805:  IncludeDeletedRecords *bool `locationName:\"includeDeletedRecords\" type:\"boolean\"`",
          "6810:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "6811: }",
          "6814: func (s SalesforceSourceProperties) String() string {",
          "6815:  return awsutil.Prettify(s)",
          "6816: }",
          "6819: func (s SalesforceSourceProperties) GoString() string {",
          "6820:  return s.String()",
          "6821: }",
          "6824: func (s *SalesforceSourceProperties) Validate() error {",
          "6825:  invalidParams := request.ErrInvalidParams{Context: \"SalesforceSourceProperties\"}",
          "6826:  if s.Object == nil {",
          "6827:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "6828:  }",
          "6830:  if invalidParams.Len() > 0 {",
          "6831:   return invalidParams",
          "6832:  }",
          "6833:  return nil",
          "6834: }",
          "6837: func (s *SalesforceSourceProperties) SetEnableDynamicFieldUpdate(v bool) *SalesforceSourceProperties {",
          "6838:  s.EnableDynamicFieldUpdate = &v",
          "6839:  return s",
          "6840: }",
          "6843: func (s *SalesforceSourceProperties) SetIncludeDeletedRecords(v bool) *SalesforceSourceProperties {",
          "6844:  s.IncludeDeletedRecords = &v",
          "6845:  return s",
          "6846: }",
          "6849: func (s *SalesforceSourceProperties) SetObject(v string) *SalesforceSourceProperties {",
          "6850:  s.Object = &v",
          "6851:  return s",
          "6852: }",
          "6857: type ScheduledTriggerProperties struct {",
          "6858:  _ struct{} `type:\"structure\"`",
          "6862:  DataPullMode *string `locationName:\"dataPullMode\" type:\"string\" enum:\"DataPullMode\"`",
          "6865:  ScheduleEndTime *time.Time `locationName:\"scheduleEndTime\" type:\"timestamp\"`",
          "6870:  ScheduleExpression *string `locationName:\"scheduleExpression\" type:\"string\" required:\"true\"`",
          "6873:  ScheduleStartTime *time.Time `locationName:\"scheduleStartTime\" type:\"timestamp\"`",
          "6877:  Timezone *string `locationName:\"timezone\" type:\"string\"`",
          "6878: }",
          "6881: func (s ScheduledTriggerProperties) String() string {",
          "6882:  return awsutil.Prettify(s)",
          "6883: }",
          "6886: func (s ScheduledTriggerProperties) GoString() string {",
          "6887:  return s.String()",
          "6888: }",
          "6891: func (s *ScheduledTriggerProperties) Validate() error {",
          "6892:  invalidParams := request.ErrInvalidParams{Context: \"ScheduledTriggerProperties\"}",
          "6893:  if s.ScheduleExpression == nil {",
          "6894:   invalidParams.Add(request.NewErrParamRequired(\"ScheduleExpression\"))",
          "6895:  }",
          "6897:  if invalidParams.Len() > 0 {",
          "6898:   return invalidParams",
          "6899:  }",
          "6900:  return nil",
          "6901: }",
          "6904: func (s *ScheduledTriggerProperties) SetDataPullMode(v string) *ScheduledTriggerProperties {",
          "6905:  s.DataPullMode = &v",
          "6906:  return s",
          "6907: }",
          "6910: func (s *ScheduledTriggerProperties) SetScheduleEndTime(v time.Time) *ScheduledTriggerProperties {",
          "6911:  s.ScheduleEndTime = &v",
          "6912:  return s",
          "6913: }",
          "6916: func (s *ScheduledTriggerProperties) SetScheduleExpression(v string) *ScheduledTriggerProperties {",
          "6917:  s.ScheduleExpression = &v",
          "6918:  return s",
          "6919: }",
          "6922: func (s *ScheduledTriggerProperties) SetScheduleStartTime(v time.Time) *ScheduledTriggerProperties {",
          "6923:  s.ScheduleStartTime = &v",
          "6924:  return s",
          "6925: }",
          "6928: func (s *ScheduledTriggerProperties) SetTimezone(v string) *ScheduledTriggerProperties {",
          "6929:  s.Timezone = &v",
          "6930:  return s",
          "6931: }",
          "6934: type ServiceNowConnectorProfileCredentials struct {",
          "6935:  _ struct{} `type:\"structure\"`",
          "6940:  Password *string `locationName:\"password\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "6945:  Username *string `locationName:\"username\" type:\"string\" required:\"true\"`",
          "6946: }",
          "6949: func (s ServiceNowConnectorProfileCredentials) String() string {",
          "6950:  return awsutil.Prettify(s)",
          "6951: }",
          "6954: func (s ServiceNowConnectorProfileCredentials) GoString() string {",
          "6955:  return s.String()",
          "6956: }",
          "6959: func (s *ServiceNowConnectorProfileCredentials) Validate() error {",
          "6960:  invalidParams := request.ErrInvalidParams{Context: \"ServiceNowConnectorProfileCredentials\"}",
          "6961:  if s.Password == nil {",
          "6962:   invalidParams.Add(request.NewErrParamRequired(\"Password\"))",
          "6963:  }",
          "6964:  if s.Username == nil {",
          "6965:   invalidParams.Add(request.NewErrParamRequired(\"Username\"))",
          "6966:  }",
          "6968:  if invalidParams.Len() > 0 {",
          "6969:   return invalidParams",
          "6970:  }",
          "6971:  return nil",
          "6972: }",
          "6975: func (s *ServiceNowConnectorProfileCredentials) SetPassword(v string) *ServiceNowConnectorProfileCredentials {",
          "6976:  s.Password = &v",
          "6977:  return s",
          "6978: }",
          "6981: func (s *ServiceNowConnectorProfileCredentials) SetUsername(v string) *ServiceNowConnectorProfileCredentials {",
          "6982:  s.Username = &v",
          "6983:  return s",
          "6984: }",
          "6987: type ServiceNowConnectorProfileProperties struct {",
          "6988:  _ struct{} `type:\"structure\"`",
          "6993:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\" required:\"true\"`",
          "6994: }",
          "6997: func (s ServiceNowConnectorProfileProperties) String() string {",
          "6998:  return awsutil.Prettify(s)",
          "6999: }",
          "7002: func (s ServiceNowConnectorProfileProperties) GoString() string {",
          "7003:  return s.String()",
          "7004: }",
          "7007: func (s *ServiceNowConnectorProfileProperties) Validate() error {",
          "7008:  invalidParams := request.ErrInvalidParams{Context: \"ServiceNowConnectorProfileProperties\"}",
          "7009:  if s.InstanceUrl == nil {",
          "7010:   invalidParams.Add(request.NewErrParamRequired(\"InstanceUrl\"))",
          "7011:  }",
          "7013:  if invalidParams.Len() > 0 {",
          "7014:   return invalidParams",
          "7015:  }",
          "7016:  return nil",
          "7017: }",
          "7020: func (s *ServiceNowConnectorProfileProperties) SetInstanceUrl(v string) *ServiceNowConnectorProfileProperties {",
          "7021:  s.InstanceUrl = &v",
          "7022:  return s",
          "7023: }",
          "7026: type ServiceNowMetadata struct {",
          "7027:  _ struct{} `type:\"structure\"`",
          "7028: }",
          "7031: func (s ServiceNowMetadata) String() string {",
          "7032:  return awsutil.Prettify(s)",
          "7033: }",
          "7036: func (s ServiceNowMetadata) GoString() string {",
          "7037:  return s.String()",
          "7038: }",
          "7041: type ServiceNowSourceProperties struct {",
          "7042:  _ struct{} `type:\"structure\"`",
          "7047:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "7048: }",
          "7051: func (s ServiceNowSourceProperties) String() string {",
          "7052:  return awsutil.Prettify(s)",
          "7053: }",
          "7056: func (s ServiceNowSourceProperties) GoString() string {",
          "7057:  return s.String()",
          "7058: }",
          "7061: func (s *ServiceNowSourceProperties) Validate() error {",
          "7062:  invalidParams := request.ErrInvalidParams{Context: \"ServiceNowSourceProperties\"}",
          "7063:  if s.Object == nil {",
          "7064:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "7065:  }",
          "7067:  if invalidParams.Len() > 0 {",
          "7068:   return invalidParams",
          "7069:  }",
          "7070:  return nil",
          "7071: }",
          "7074: func (s *ServiceNowSourceProperties) SetObject(v string) *ServiceNowSourceProperties {",
          "7075:  s.Object = &v",
          "7076:  return s",
          "7077: }",
          "7081: type ServiceQuotaExceededException struct {",
          "7082:  _            struct{}                  `type:\"structure\"`",
          "7083:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "7085:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "7086: }",
          "7089: func (s ServiceQuotaExceededException) String() string {",
          "7090:  return awsutil.Prettify(s)",
          "7091: }",
          "7094: func (s ServiceQuotaExceededException) GoString() string {",
          "7095:  return s.String()",
          "7096: }",
          "7098: func newErrorServiceQuotaExceededException(v protocol.ResponseMetadata) error {",
          "7099:  return &ServiceQuotaExceededException{",
          "7100:   RespMetadata: v,",
          "7101:  }",
          "7102: }",
          "7105: func (s *ServiceQuotaExceededException) Code() string {",
          "7106:  return \"ServiceQuotaExceededException\"",
          "7107: }",
          "7110: func (s *ServiceQuotaExceededException) Message() string {",
          "7111:  if s.Message_ != nil {",
          "7112:   return *s.Message_",
          "7113:  }",
          "7114:  return \"\"",
          "7115: }",
          "7118: func (s *ServiceQuotaExceededException) OrigErr() error {",
          "7119:  return nil",
          "7120: }",
          "7122: func (s *ServiceQuotaExceededException) Error() string {",
          "7123:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "7124: }",
          "7127: func (s *ServiceQuotaExceededException) StatusCode() int {",
          "7128:  return s.RespMetadata.StatusCode",
          "7129: }",
          "7132: func (s *ServiceQuotaExceededException) RequestID() string {",
          "7133:  return s.RespMetadata.RequestID",
          "7134: }",
          "7137: type SingularConnectorProfileCredentials struct {",
          "7138:  _ struct{} `type:\"structure\"`",
          "7144:  ApiKey *string `locationName:\"apiKey\" type:\"string\" required:\"true\"`",
          "7145: }",
          "7148: func (s SingularConnectorProfileCredentials) String() string {",
          "7149:  return awsutil.Prettify(s)",
          "7150: }",
          "7153: func (s SingularConnectorProfileCredentials) GoString() string {",
          "7154:  return s.String()",
          "7155: }",
          "7158: func (s *SingularConnectorProfileCredentials) Validate() error {",
          "7159:  invalidParams := request.ErrInvalidParams{Context: \"SingularConnectorProfileCredentials\"}",
          "7160:  if s.ApiKey == nil {",
          "7161:   invalidParams.Add(request.NewErrParamRequired(\"ApiKey\"))",
          "7162:  }",
          "7164:  if invalidParams.Len() > 0 {",
          "7165:   return invalidParams",
          "7166:  }",
          "7167:  return nil",
          "7168: }",
          "7171: func (s *SingularConnectorProfileCredentials) SetApiKey(v string) *SingularConnectorProfileCredentials {",
          "7172:  s.ApiKey = &v",
          "7173:  return s",
          "7174: }",
          "7177: type SingularConnectorProfileProperties struct {",
          "7178:  _ struct{} `type:\"structure\"`",
          "7179: }",
          "7182: func (s SingularConnectorProfileProperties) String() string {",
          "7183:  return awsutil.Prettify(s)",
          "7184: }",
          "7187: func (s SingularConnectorProfileProperties) GoString() string {",
          "7188:  return s.String()",
          "7189: }",
          "7192: type SingularMetadata struct {",
          "7193:  _ struct{} `type:\"structure\"`",
          "7194: }",
          "7197: func (s SingularMetadata) String() string {",
          "7198:  return awsutil.Prettify(s)",
          "7199: }",
          "7202: func (s SingularMetadata) GoString() string {",
          "7203:  return s.String()",
          "7204: }",
          "7207: type SingularSourceProperties struct {",
          "7208:  _ struct{} `type:\"structure\"`",
          "7213:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "7214: }",
          "7217: func (s SingularSourceProperties) String() string {",
          "7218:  return awsutil.Prettify(s)",
          "7219: }",
          "7222: func (s SingularSourceProperties) GoString() string {",
          "7223:  return s.String()",
          "7224: }",
          "7227: func (s *SingularSourceProperties) Validate() error {",
          "7228:  invalidParams := request.ErrInvalidParams{Context: \"SingularSourceProperties\"}",
          "7229:  if s.Object == nil {",
          "7230:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "7231:  }",
          "7233:  if invalidParams.Len() > 0 {",
          "7234:   return invalidParams",
          "7235:  }",
          "7236:  return nil",
          "7237: }",
          "7240: func (s *SingularSourceProperties) SetObject(v string) *SingularSourceProperties {",
          "7241:  s.Object = &v",
          "7242:  return s",
          "7243: }",
          "7246: type SlackConnectorProfileCredentials struct {",
          "7247:  _ struct{} `type:\"structure\"`",
          "7250:  AccessToken *string `locationName:\"accessToken\" type:\"string\" sensitive:\"true\"`",
          "7255:  ClientId *string `locationName:\"clientId\" type:\"string\" required:\"true\"`",
          "7261:  ClientSecret *string `locationName:\"clientSecret\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "7265:  OAuthRequest *ConnectorOAuthRequest `locationName:\"oAuthRequest\" type:\"structure\"`",
          "7266: }",
          "7269: func (s SlackConnectorProfileCredentials) String() string {",
          "7270:  return awsutil.Prettify(s)",
          "7271: }",
          "7274: func (s SlackConnectorProfileCredentials) GoString() string {",
          "7275:  return s.String()",
          "7276: }",
          "7279: func (s *SlackConnectorProfileCredentials) Validate() error {",
          "7280:  invalidParams := request.ErrInvalidParams{Context: \"SlackConnectorProfileCredentials\"}",
          "7281:  if s.ClientId == nil {",
          "7282:   invalidParams.Add(request.NewErrParamRequired(\"ClientId\"))",
          "7283:  }",
          "7284:  if s.ClientSecret == nil {",
          "7285:   invalidParams.Add(request.NewErrParamRequired(\"ClientSecret\"))",
          "7286:  }",
          "7288:  if invalidParams.Len() > 0 {",
          "7289:   return invalidParams",
          "7290:  }",
          "7291:  return nil",
          "7292: }",
          "7295: func (s *SlackConnectorProfileCredentials) SetAccessToken(v string) *SlackConnectorProfileCredentials {",
          "7296:  s.AccessToken = &v",
          "7297:  return s",
          "7298: }",
          "7301: func (s *SlackConnectorProfileCredentials) SetClientId(v string) *SlackConnectorProfileCredentials {",
          "7302:  s.ClientId = &v",
          "7303:  return s",
          "7304: }",
          "7307: func (s *SlackConnectorProfileCredentials) SetClientSecret(v string) *SlackConnectorProfileCredentials {",
          "7308:  s.ClientSecret = &v",
          "7309:  return s",
          "7310: }",
          "7313: func (s *SlackConnectorProfileCredentials) SetOAuthRequest(v *ConnectorOAuthRequest) *SlackConnectorProfileCredentials {",
          "7314:  s.OAuthRequest = v",
          "7315:  return s",
          "7316: }",
          "7319: type SlackConnectorProfileProperties struct {",
          "7320:  _ struct{} `type:\"structure\"`",
          "7325:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\" required:\"true\"`",
          "7326: }",
          "7329: func (s SlackConnectorProfileProperties) String() string {",
          "7330:  return awsutil.Prettify(s)",
          "7331: }",
          "7334: func (s SlackConnectorProfileProperties) GoString() string {",
          "7335:  return s.String()",
          "7336: }",
          "7339: func (s *SlackConnectorProfileProperties) Validate() error {",
          "7340:  invalidParams := request.ErrInvalidParams{Context: \"SlackConnectorProfileProperties\"}",
          "7341:  if s.InstanceUrl == nil {",
          "7342:   invalidParams.Add(request.NewErrParamRequired(\"InstanceUrl\"))",
          "7343:  }",
          "7345:  if invalidParams.Len() > 0 {",
          "7346:   return invalidParams",
          "7347:  }",
          "7348:  return nil",
          "7349: }",
          "7352: func (s *SlackConnectorProfileProperties) SetInstanceUrl(v string) *SlackConnectorProfileProperties {",
          "7353:  s.InstanceUrl = &v",
          "7354:  return s",
          "7355: }",
          "7358: type SlackMetadata struct {",
          "7359:  _ struct{} `type:\"structure\"`",
          "7362:  OAuthScopes []*string `locationName:\"oAuthScopes\" type:\"list\"`",
          "7363: }",
          "7366: func (s SlackMetadata) String() string {",
          "7367:  return awsutil.Prettify(s)",
          "7368: }",
          "7371: func (s SlackMetadata) GoString() string {",
          "7372:  return s.String()",
          "7373: }",
          "7376: func (s *SlackMetadata) SetOAuthScopes(v []*string) *SlackMetadata {",
          "7377:  s.OAuthScopes = v",
          "7378:  return s",
          "7379: }",
          "7382: type SlackSourceProperties struct {",
          "7383:  _ struct{} `type:\"structure\"`",
          "7388:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "7389: }",
          "7392: func (s SlackSourceProperties) String() string {",
          "7393:  return awsutil.Prettify(s)",
          "7394: }",
          "7397: func (s SlackSourceProperties) GoString() string {",
          "7398:  return s.String()",
          "7399: }",
          "7402: func (s *SlackSourceProperties) Validate() error {",
          "7403:  invalidParams := request.ErrInvalidParams{Context: \"SlackSourceProperties\"}",
          "7404:  if s.Object == nil {",
          "7405:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "7406:  }",
          "7408:  if invalidParams.Len() > 0 {",
          "7409:   return invalidParams",
          "7410:  }",
          "7411:  return nil",
          "7412: }",
          "7415: func (s *SlackSourceProperties) SetObject(v string) *SlackSourceProperties {",
          "7416:  s.Object = &v",
          "7417:  return s",
          "7418: }",
          "7421: type SnowflakeConnectorProfileCredentials struct {",
          "7422:  _ struct{} `type:\"structure\"`",
          "7427:  Password *string `locationName:\"password\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "7432:  Username *string `locationName:\"username\" type:\"string\" required:\"true\"`",
          "7433: }",
          "7436: func (s SnowflakeConnectorProfileCredentials) String() string {",
          "7437:  return awsutil.Prettify(s)",
          "7438: }",
          "7441: func (s SnowflakeConnectorProfileCredentials) GoString() string {",
          "7442:  return s.String()",
          "7443: }",
          "7446: func (s *SnowflakeConnectorProfileCredentials) Validate() error {",
          "7447:  invalidParams := request.ErrInvalidParams{Context: \"SnowflakeConnectorProfileCredentials\"}",
          "7448:  if s.Password == nil {",
          "7449:   invalidParams.Add(request.NewErrParamRequired(\"Password\"))",
          "7450:  }",
          "7451:  if s.Username == nil {",
          "7452:   invalidParams.Add(request.NewErrParamRequired(\"Username\"))",
          "7453:  }",
          "7455:  if invalidParams.Len() > 0 {",
          "7456:   return invalidParams",
          "7457:  }",
          "7458:  return nil",
          "7459: }",
          "7462: func (s *SnowflakeConnectorProfileCredentials) SetPassword(v string) *SnowflakeConnectorProfileCredentials {",
          "7463:  s.Password = &v",
          "7464:  return s",
          "7465: }",
          "7468: func (s *SnowflakeConnectorProfileCredentials) SetUsername(v string) *SnowflakeConnectorProfileCredentials {",
          "7469:  s.Username = &v",
          "7470:  return s",
          "7471: }",
          "7474: type SnowflakeConnectorProfileProperties struct {",
          "7475:  _ struct{} `type:\"structure\"`",
          "7478:  AccountName *string `locationName:\"accountName\" type:\"string\"`",
          "7483:  BucketName *string `locationName:\"bucketName\" min:\"3\" type:\"string\" required:\"true\"`",
          "7486:  BucketPrefix *string `locationName:\"bucketPrefix\" type:\"string\"`",
          "7489:  PrivateLinkServiceName *string `locationName:\"privateLinkServiceName\" type:\"string\"`",
          "7492:  Region *string `locationName:\"region\" type:\"string\"`",
          "7499:  Stage *string `locationName:\"stage\" type:\"string\" required:\"true\"`",
          "7504:  Warehouse *string `locationName:\"warehouse\" type:\"string\" required:\"true\"`",
          "7505: }",
          "7508: func (s SnowflakeConnectorProfileProperties) String() string {",
          "7509:  return awsutil.Prettify(s)",
          "7510: }",
          "7513: func (s SnowflakeConnectorProfileProperties) GoString() string {",
          "7514:  return s.String()",
          "7515: }",
          "7518: func (s *SnowflakeConnectorProfileProperties) Validate() error {",
          "7519:  invalidParams := request.ErrInvalidParams{Context: \"SnowflakeConnectorProfileProperties\"}",
          "7520:  if s.BucketName == nil {",
          "7521:   invalidParams.Add(request.NewErrParamRequired(\"BucketName\"))",
          "7522:  }",
          "7523:  if s.BucketName != nil && len(*s.BucketName) < 3 {",
          "7524:   invalidParams.Add(request.NewErrParamMinLen(\"BucketName\", 3))",
          "7525:  }",
          "7526:  if s.Stage == nil {",
          "7527:   invalidParams.Add(request.NewErrParamRequired(\"Stage\"))",
          "7528:  }",
          "7529:  if s.Warehouse == nil {",
          "7530:   invalidParams.Add(request.NewErrParamRequired(\"Warehouse\"))",
          "7531:  }",
          "7533:  if invalidParams.Len() > 0 {",
          "7534:   return invalidParams",
          "7535:  }",
          "7536:  return nil",
          "7537: }",
          "7540: func (s *SnowflakeConnectorProfileProperties) SetAccountName(v string) *SnowflakeConnectorProfileProperties {",
          "7541:  s.AccountName = &v",
          "7542:  return s",
          "7543: }",
          "7546: func (s *SnowflakeConnectorProfileProperties) SetBucketName(v string) *SnowflakeConnectorProfileProperties {",
          "7547:  s.BucketName = &v",
          "7548:  return s",
          "7549: }",
          "7552: func (s *SnowflakeConnectorProfileProperties) SetBucketPrefix(v string) *SnowflakeConnectorProfileProperties {",
          "7553:  s.BucketPrefix = &v",
          "7554:  return s",
          "7555: }",
          "7558: func (s *SnowflakeConnectorProfileProperties) SetPrivateLinkServiceName(v string) *SnowflakeConnectorProfileProperties {",
          "7559:  s.PrivateLinkServiceName = &v",
          "7560:  return s",
          "7561: }",
          "7564: func (s *SnowflakeConnectorProfileProperties) SetRegion(v string) *SnowflakeConnectorProfileProperties {",
          "7565:  s.Region = &v",
          "7566:  return s",
          "7567: }",
          "7570: func (s *SnowflakeConnectorProfileProperties) SetStage(v string) *SnowflakeConnectorProfileProperties {",
          "7571:  s.Stage = &v",
          "7572:  return s",
          "7573: }",
          "7576: func (s *SnowflakeConnectorProfileProperties) SetWarehouse(v string) *SnowflakeConnectorProfileProperties {",
          "7577:  s.Warehouse = &v",
          "7578:  return s",
          "7579: }",
          "7582: type SnowflakeDestinationProperties struct {",
          "7583:  _ struct{} `type:\"structure\"`",
          "7587:  BucketPrefix *string `locationName:\"bucketPrefix\" type:\"string\"`",
          "7594:  ErrorHandlingConfig *ErrorHandlingConfig `locationName:\"errorHandlingConfig\" type:\"structure\"`",
          "7599:  IntermediateBucketName *string `locationName:\"intermediateBucketName\" min:\"3\" type:\"string\" required:\"true\"`",
          "7604:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "7605: }",
          "7608: func (s SnowflakeDestinationProperties) String() string {",
          "7609:  return awsutil.Prettify(s)",
          "7610: }",
          "7613: func (s SnowflakeDestinationProperties) GoString() string {",
          "7614:  return s.String()",
          "7615: }",
          "7618: func (s *SnowflakeDestinationProperties) Validate() error {",
          "7619:  invalidParams := request.ErrInvalidParams{Context: \"SnowflakeDestinationProperties\"}",
          "7620:  if s.IntermediateBucketName == nil {",
          "7621:   invalidParams.Add(request.NewErrParamRequired(\"IntermediateBucketName\"))",
          "7622:  }",
          "7623:  if s.IntermediateBucketName != nil && len(*s.IntermediateBucketName) < 3 {",
          "7624:   invalidParams.Add(request.NewErrParamMinLen(\"IntermediateBucketName\", 3))",
          "7625:  }",
          "7626:  if s.Object == nil {",
          "7627:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "7628:  }",
          "7629:  if s.ErrorHandlingConfig != nil {",
          "7630:   if err := s.ErrorHandlingConfig.Validate(); err != nil {",
          "7631:    invalidParams.AddNested(\"ErrorHandlingConfig\", err.(request.ErrInvalidParams))",
          "7632:   }",
          "7633:  }",
          "7635:  if invalidParams.Len() > 0 {",
          "7636:   return invalidParams",
          "7637:  }",
          "7638:  return nil",
          "7639: }",
          "7642: func (s *SnowflakeDestinationProperties) SetBucketPrefix(v string) *SnowflakeDestinationProperties {",
          "7643:  s.BucketPrefix = &v",
          "7644:  return s",
          "7645: }",
          "7648: func (s *SnowflakeDestinationProperties) SetErrorHandlingConfig(v *ErrorHandlingConfig) *SnowflakeDestinationProperties {",
          "7649:  s.ErrorHandlingConfig = v",
          "7650:  return s",
          "7651: }",
          "7654: func (s *SnowflakeDestinationProperties) SetIntermediateBucketName(v string) *SnowflakeDestinationProperties {",
          "7655:  s.IntermediateBucketName = &v",
          "7656:  return s",
          "7657: }",
          "7660: func (s *SnowflakeDestinationProperties) SetObject(v string) *SnowflakeDestinationProperties {",
          "7661:  s.Object = &v",
          "7662:  return s",
          "7663: }",
          "7666: type SnowflakeMetadata struct {",
          "7667:  _ struct{} `type:\"structure\"`",
          "7670:  SupportedRegions []*string `locationName:\"supportedRegions\" type:\"list\"`",
          "7671: }",
          "7674: func (s SnowflakeMetadata) String() string {",
          "7675:  return awsutil.Prettify(s)",
          "7676: }",
          "7679: func (s SnowflakeMetadata) GoString() string {",
          "7680:  return s.String()",
          "7681: }",
          "7684: func (s *SnowflakeMetadata) SetSupportedRegions(v []*string) *SnowflakeMetadata {",
          "7685:  s.SupportedRegions = v",
          "7686:  return s",
          "7687: }",
          "7690: type SourceConnectorProperties struct {",
          "7691:  _ struct{} `type:\"structure\"`",
          "7694:  Amplitude *AmplitudeSourceProperties `type:\"structure\"`",
          "7697:  Datadog *DatadogSourceProperties `type:\"structure\"`",
          "7700:  Dynatrace *DynatraceSourceProperties `type:\"structure\"`",
          "7703:  GoogleAnalytics *GoogleAnalyticsSourceProperties `type:\"structure\"`",
          "7706:  InforNexus *InforNexusSourceProperties `type:\"structure\"`",
          "7709:  Marketo *MarketoSourceProperties `type:\"structure\"`",
          "7712:  S3 *S3SourceProperties `type:\"structure\"`",
          "7715:  Salesforce *SalesforceSourceProperties `type:\"structure\"`",
          "7718:  ServiceNow *ServiceNowSourceProperties `type:\"structure\"`",
          "7721:  Singular *SingularSourceProperties `type:\"structure\"`",
          "7724:  Slack *SlackSourceProperties `type:\"structure\"`",
          "7727:  Trendmicro *TrendmicroSourceProperties `type:\"structure\"`",
          "7730:  Veeva *VeevaSourceProperties `type:\"structure\"`",
          "7733:  Zendesk *ZendeskSourceProperties `type:\"structure\"`",
          "7734: }",
          "7737: func (s SourceConnectorProperties) String() string {",
          "7738:  return awsutil.Prettify(s)",
          "7739: }",
          "7742: func (s SourceConnectorProperties) GoString() string {",
          "7743:  return s.String()",
          "7744: }",
          "7747: func (s *SourceConnectorProperties) Validate() error {",
          "7748:  invalidParams := request.ErrInvalidParams{Context: \"SourceConnectorProperties\"}",
          "7749:  if s.Amplitude != nil {",
          "7750:   if err := s.Amplitude.Validate(); err != nil {",
          "7751:    invalidParams.AddNested(\"Amplitude\", err.(request.ErrInvalidParams))",
          "7752:   }",
          "7753:  }",
          "7754:  if s.Datadog != nil {",
          "7755:   if err := s.Datadog.Validate(); err != nil {",
          "7756:    invalidParams.AddNested(\"Datadog\", err.(request.ErrInvalidParams))",
          "7757:   }",
          "7758:  }",
          "7759:  if s.Dynatrace != nil {",
          "7760:   if err := s.Dynatrace.Validate(); err != nil {",
          "7761:    invalidParams.AddNested(\"Dynatrace\", err.(request.ErrInvalidParams))",
          "7762:   }",
          "7763:  }",
          "7764:  if s.GoogleAnalytics != nil {",
          "7765:   if err := s.GoogleAnalytics.Validate(); err != nil {",
          "7766:    invalidParams.AddNested(\"GoogleAnalytics\", err.(request.ErrInvalidParams))",
          "7767:   }",
          "7768:  }",
          "7769:  if s.InforNexus != nil {",
          "7770:   if err := s.InforNexus.Validate(); err != nil {",
          "7771:    invalidParams.AddNested(\"InforNexus\", err.(request.ErrInvalidParams))",
          "7772:   }",
          "7773:  }",
          "7774:  if s.Marketo != nil {",
          "7775:   if err := s.Marketo.Validate(); err != nil {",
          "7776:    invalidParams.AddNested(\"Marketo\", err.(request.ErrInvalidParams))",
          "7777:   }",
          "7778:  }",
          "7779:  if s.S3 != nil {",
          "7780:   if err := s.S3.Validate(); err != nil {",
          "7781:    invalidParams.AddNested(\"S3\", err.(request.ErrInvalidParams))",
          "7782:   }",
          "7783:  }",
          "7784:  if s.Salesforce != nil {",
          "7785:   if err := s.Salesforce.Validate(); err != nil {",
          "7786:    invalidParams.AddNested(\"Salesforce\", err.(request.ErrInvalidParams))",
          "7787:   }",
          "7788:  }",
          "7789:  if s.ServiceNow != nil {",
          "7790:   if err := s.ServiceNow.Validate(); err != nil {",
          "7791:    invalidParams.AddNested(\"ServiceNow\", err.(request.ErrInvalidParams))",
          "7792:   }",
          "7793:  }",
          "7794:  if s.Singular != nil {",
          "7795:   if err := s.Singular.Validate(); err != nil {",
          "7796:    invalidParams.AddNested(\"Singular\", err.(request.ErrInvalidParams))",
          "7797:   }",
          "7798:  }",
          "7799:  if s.Slack != nil {",
          "7800:   if err := s.Slack.Validate(); err != nil {",
          "7801:    invalidParams.AddNested(\"Slack\", err.(request.ErrInvalidParams))",
          "7802:   }",
          "7803:  }",
          "7804:  if s.Trendmicro != nil {",
          "7805:   if err := s.Trendmicro.Validate(); err != nil {",
          "7806:    invalidParams.AddNested(\"Trendmicro\", err.(request.ErrInvalidParams))",
          "7807:   }",
          "7808:  }",
          "7809:  if s.Veeva != nil {",
          "7810:   if err := s.Veeva.Validate(); err != nil {",
          "7811:    invalidParams.AddNested(\"Veeva\", err.(request.ErrInvalidParams))",
          "7812:   }",
          "7813:  }",
          "7814:  if s.Zendesk != nil {",
          "7815:   if err := s.Zendesk.Validate(); err != nil {",
          "7816:    invalidParams.AddNested(\"Zendesk\", err.(request.ErrInvalidParams))",
          "7817:   }",
          "7818:  }",
          "7820:  if invalidParams.Len() > 0 {",
          "7821:   return invalidParams",
          "7822:  }",
          "7823:  return nil",
          "7824: }",
          "7827: func (s *SourceConnectorProperties) SetAmplitude(v *AmplitudeSourceProperties) *SourceConnectorProperties {",
          "7828:  s.Amplitude = v",
          "7829:  return s",
          "7830: }",
          "7833: func (s *SourceConnectorProperties) SetDatadog(v *DatadogSourceProperties) *SourceConnectorProperties {",
          "7834:  s.Datadog = v",
          "7835:  return s",
          "7836: }",
          "7839: func (s *SourceConnectorProperties) SetDynatrace(v *DynatraceSourceProperties) *SourceConnectorProperties {",
          "7840:  s.Dynatrace = v",
          "7841:  return s",
          "7842: }",
          "7845: func (s *SourceConnectorProperties) SetGoogleAnalytics(v *GoogleAnalyticsSourceProperties) *SourceConnectorProperties {",
          "7846:  s.GoogleAnalytics = v",
          "7847:  return s",
          "7848: }",
          "7851: func (s *SourceConnectorProperties) SetInforNexus(v *InforNexusSourceProperties) *SourceConnectorProperties {",
          "7852:  s.InforNexus = v",
          "7853:  return s",
          "7854: }",
          "7857: func (s *SourceConnectorProperties) SetMarketo(v *MarketoSourceProperties) *SourceConnectorProperties {",
          "7858:  s.Marketo = v",
          "7859:  return s",
          "7860: }",
          "7863: func (s *SourceConnectorProperties) SetS3(v *S3SourceProperties) *SourceConnectorProperties {",
          "7864:  s.S3 = v",
          "7865:  return s",
          "7866: }",
          "7869: func (s *SourceConnectorProperties) SetSalesforce(v *SalesforceSourceProperties) *SourceConnectorProperties {",
          "7870:  s.Salesforce = v",
          "7871:  return s",
          "7872: }",
          "7875: func (s *SourceConnectorProperties) SetServiceNow(v *ServiceNowSourceProperties) *SourceConnectorProperties {",
          "7876:  s.ServiceNow = v",
          "7877:  return s",
          "7878: }",
          "7881: func (s *SourceConnectorProperties) SetSingular(v *SingularSourceProperties) *SourceConnectorProperties {",
          "7882:  s.Singular = v",
          "7883:  return s",
          "7884: }",
          "7887: func (s *SourceConnectorProperties) SetSlack(v *SlackSourceProperties) *SourceConnectorProperties {",
          "7888:  s.Slack = v",
          "7889:  return s",
          "7890: }",
          "7893: func (s *SourceConnectorProperties) SetTrendmicro(v *TrendmicroSourceProperties) *SourceConnectorProperties {",
          "7894:  s.Trendmicro = v",
          "7895:  return s",
          "7896: }",
          "7899: func (s *SourceConnectorProperties) SetVeeva(v *VeevaSourceProperties) *SourceConnectorProperties {",
          "7900:  s.Veeva = v",
          "7901:  return s",
          "7902: }",
          "7905: func (s *SourceConnectorProperties) SetZendesk(v *ZendeskSourceProperties) *SourceConnectorProperties {",
          "7906:  s.Zendesk = v",
          "7907:  return s",
          "7908: }",
          "7912: type SourceFieldProperties struct {",
          "7913:  _ struct{} `type:\"structure\"`",
          "7916:  IsQueryable *bool `locationName:\"isQueryable\" type:\"boolean\"`",
          "7919:  IsRetrievable *bool `locationName:\"isRetrievable\" type:\"boolean\"`",
          "7920: }",
          "7923: func (s SourceFieldProperties) String() string {",
          "7924:  return awsutil.Prettify(s)",
          "7925: }",
          "7928: func (s SourceFieldProperties) GoString() string {",
          "7929:  return s.String()",
          "7930: }",
          "7933: func (s *SourceFieldProperties) SetIsQueryable(v bool) *SourceFieldProperties {",
          "7934:  s.IsQueryable = &v",
          "7935:  return s",
          "7936: }",
          "7939: func (s *SourceFieldProperties) SetIsRetrievable(v bool) *SourceFieldProperties {",
          "7940:  s.IsRetrievable = &v",
          "7941:  return s",
          "7942: }",
          "7946: type SourceFlowConfig struct {",
          "7947:  _ struct{} `type:\"structure\"`",
          "7951:  ConnectorProfileName *string `locationName:\"connectorProfileName\" type:\"string\"`",
          "7956:  ConnectorType *string `locationName:\"connectorType\" type:\"string\" required:\"true\" enum:\"ConnectorType\"`",
          "7961:  SourceConnectorProperties *SourceConnectorProperties `locationName:\"sourceConnectorProperties\" type:\"structure\" required:\"true\"`",
          "7962: }",
          "7965: func (s SourceFlowConfig) String() string {",
          "7966:  return awsutil.Prettify(s)",
          "7967: }",
          "7970: func (s SourceFlowConfig) GoString() string {",
          "7971:  return s.String()",
          "7972: }",
          "7975: func (s *SourceFlowConfig) Validate() error {",
          "7976:  invalidParams := request.ErrInvalidParams{Context: \"SourceFlowConfig\"}",
          "7977:  if s.ConnectorType == nil {",
          "7978:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorType\"))",
          "7979:  }",
          "7980:  if s.SourceConnectorProperties == nil {",
          "7981:   invalidParams.Add(request.NewErrParamRequired(\"SourceConnectorProperties\"))",
          "7982:  }",
          "7983:  if s.SourceConnectorProperties != nil {",
          "7984:   if err := s.SourceConnectorProperties.Validate(); err != nil {",
          "7985:    invalidParams.AddNested(\"SourceConnectorProperties\", err.(request.ErrInvalidParams))",
          "7986:   }",
          "7987:  }",
          "7989:  if invalidParams.Len() > 0 {",
          "7990:   return invalidParams",
          "7991:  }",
          "7992:  return nil",
          "7993: }",
          "7996: func (s *SourceFlowConfig) SetConnectorProfileName(v string) *SourceFlowConfig {",
          "7997:  s.ConnectorProfileName = &v",
          "7998:  return s",
          "7999: }",
          "8002: func (s *SourceFlowConfig) SetConnectorType(v string) *SourceFlowConfig {",
          "8003:  s.ConnectorType = &v",
          "8004:  return s",
          "8005: }",
          "8008: func (s *SourceFlowConfig) SetSourceConnectorProperties(v *SourceConnectorProperties) *SourceFlowConfig {",
          "8009:  s.SourceConnectorProperties = v",
          "8010:  return s",
          "8011: }",
          "8013: type StartFlowInput struct {",
          "8014:  _ struct{} `type:\"structure\"`",
          "8020:  FlowName *string `locationName:\"flowName\" type:\"string\" required:\"true\"`",
          "8021: }",
          "8024: func (s StartFlowInput) String() string {",
          "8025:  return awsutil.Prettify(s)",
          "8026: }",
          "8029: func (s StartFlowInput) GoString() string {",
          "8030:  return s.String()",
          "8031: }",
          "8034: func (s *StartFlowInput) Validate() error {",
          "8035:  invalidParams := request.ErrInvalidParams{Context: \"StartFlowInput\"}",
          "8036:  if s.FlowName == nil {",
          "8037:   invalidParams.Add(request.NewErrParamRequired(\"FlowName\"))",
          "8038:  }",
          "8040:  if invalidParams.Len() > 0 {",
          "8041:   return invalidParams",
          "8042:  }",
          "8043:  return nil",
          "8044: }",
          "8047: func (s *StartFlowInput) SetFlowName(v string) *StartFlowInput {",
          "8048:  s.FlowName = &v",
          "8049:  return s",
          "8050: }",
          "8052: type StartFlowOutput struct {",
          "8053:  _ struct{} `type:\"structure\"`",
          "8056:  FlowArn *string `locationName:\"flowArn\" type:\"string\"`",
          "8059:  FlowStatus *string `locationName:\"flowStatus\" type:\"string\" enum:\"FlowStatus\"`",
          "8060: }",
          "8063: func (s StartFlowOutput) String() string {",
          "8064:  return awsutil.Prettify(s)",
          "8065: }",
          "8068: func (s StartFlowOutput) GoString() string {",
          "8069:  return s.String()",
          "8070: }",
          "8073: func (s *StartFlowOutput) SetFlowArn(v string) *StartFlowOutput {",
          "8074:  s.FlowArn = &v",
          "8075:  return s",
          "8076: }",
          "8079: func (s *StartFlowOutput) SetFlowStatus(v string) *StartFlowOutput {",
          "8080:  s.FlowStatus = &v",
          "8081:  return s",
          "8082: }",
          "8084: type StopFlowInput struct {",
          "8085:  _ struct{} `type:\"structure\"`",
          "8091:  FlowName *string `locationName:\"flowName\" type:\"string\" required:\"true\"`",
          "8092: }",
          "8095: func (s StopFlowInput) String() string {",
          "8096:  return awsutil.Prettify(s)",
          "8097: }",
          "8100: func (s StopFlowInput) GoString() string {",
          "8101:  return s.String()",
          "8102: }",
          "8105: func (s *StopFlowInput) Validate() error {",
          "8106:  invalidParams := request.ErrInvalidParams{Context: \"StopFlowInput\"}",
          "8107:  if s.FlowName == nil {",
          "8108:   invalidParams.Add(request.NewErrParamRequired(\"FlowName\"))",
          "8109:  }",
          "8111:  if invalidParams.Len() > 0 {",
          "8112:   return invalidParams",
          "8113:  }",
          "8114:  return nil",
          "8115: }",
          "8118: func (s *StopFlowInput) SetFlowName(v string) *StopFlowInput {",
          "8119:  s.FlowName = &v",
          "8120:  return s",
          "8121: }",
          "8123: type StopFlowOutput struct {",
          "8124:  _ struct{} `type:\"structure\"`",
          "8127:  FlowArn *string `locationName:\"flowArn\" type:\"string\"`",
          "8130:  FlowStatus *string `locationName:\"flowStatus\" type:\"string\" enum:\"FlowStatus\"`",
          "8131: }",
          "8134: func (s StopFlowOutput) String() string {",
          "8135:  return awsutil.Prettify(s)",
          "8136: }",
          "8139: func (s StopFlowOutput) GoString() string {",
          "8140:  return s.String()",
          "8141: }",
          "8144: func (s *StopFlowOutput) SetFlowArn(v string) *StopFlowOutput {",
          "8145:  s.FlowArn = &v",
          "8146:  return s",
          "8147: }",
          "8150: func (s *StopFlowOutput) SetFlowStatus(v string) *StopFlowOutput {",
          "8151:  s.FlowStatus = &v",
          "8152:  return s",
          "8153: }",
          "8157: type SupportedFieldTypeDetails struct {",
          "8158:  _ struct{} `type:\"structure\"`",
          "8164:  V1 *FieldTypeDetails `locationName:\"v1\" type:\"structure\" required:\"true\"`",
          "8165: }",
          "8168: func (s SupportedFieldTypeDetails) String() string {",
          "8169:  return awsutil.Prettify(s)",
          "8170: }",
          "8173: func (s SupportedFieldTypeDetails) GoString() string {",
          "8174:  return s.String()",
          "8175: }",
          "8178: func (s *SupportedFieldTypeDetails) SetV1(v *FieldTypeDetails) *SupportedFieldTypeDetails {",
          "8179:  s.V1 = v",
          "8180:  return s",
          "8181: }",
          "8183: type TagResourceInput struct {",
          "8184:  _ struct{} `type:\"structure\"`",
          "8189:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" type:\"string\" required:\"true\"`",
          "8194:  Tags map[string]*string `locationName:\"tags\" type:\"map\" required:\"true\"`",
          "8195: }",
          "8198: func (s TagResourceInput) String() string {",
          "8199:  return awsutil.Prettify(s)",
          "8200: }",
          "8203: func (s TagResourceInput) GoString() string {",
          "8204:  return s.String()",
          "8205: }",
          "8208: func (s *TagResourceInput) Validate() error {",
          "8209:  invalidParams := request.ErrInvalidParams{Context: \"TagResourceInput\"}",
          "8210:  if s.ResourceArn == nil {",
          "8211:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "8212:  }",
          "8213:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "8214:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "8215:  }",
          "8216:  if s.Tags == nil {",
          "8217:   invalidParams.Add(request.NewErrParamRequired(\"Tags\"))",
          "8218:  }",
          "8220:  if invalidParams.Len() > 0 {",
          "8221:   return invalidParams",
          "8222:  }",
          "8223:  return nil",
          "8224: }",
          "8227: func (s *TagResourceInput) SetResourceArn(v string) *TagResourceInput {",
          "8228:  s.ResourceArn = &v",
          "8229:  return s",
          "8230: }",
          "8233: func (s *TagResourceInput) SetTags(v map[string]*string) *TagResourceInput {",
          "8234:  s.Tags = v",
          "8235:  return s",
          "8236: }",
          "8238: type TagResourceOutput struct {",
          "8239:  _ struct{} `type:\"structure\"`",
          "8240: }",
          "8243: func (s TagResourceOutput) String() string {",
          "8244:  return awsutil.Prettify(s)",
          "8245: }",
          "8248: func (s TagResourceOutput) GoString() string {",
          "8249:  return s.String()",
          "8250: }",
          "8254: type Task struct {",
          "8255:  _ struct{} `type:\"structure\"`",
          "8258:  ConnectorOperator *ConnectorOperator `locationName:\"connectorOperator\" type:\"structure\"`",
          "8262:  DestinationField *string `locationName:\"destinationField\" type:\"string\"`",
          "8267:  SourceFields []*string `locationName:\"sourceFields\" type:\"list\" required:\"true\"`",
          "8271:  TaskProperties map[string]*string `locationName:\"taskProperties\" type:\"map\"`",
          "8276:  TaskType *string `locationName:\"taskType\" type:\"string\" required:\"true\" enum:\"TaskType\"`",
          "8277: }",
          "8280: func (s Task) String() string {",
          "8281:  return awsutil.Prettify(s)",
          "8282: }",
          "8285: func (s Task) GoString() string {",
          "8286:  return s.String()",
          "8287: }",
          "8290: func (s *Task) Validate() error {",
          "8291:  invalidParams := request.ErrInvalidParams{Context: \"Task\"}",
          "8292:  if s.SourceFields == nil {",
          "8293:   invalidParams.Add(request.NewErrParamRequired(\"SourceFields\"))",
          "8294:  }",
          "8295:  if s.TaskType == nil {",
          "8296:   invalidParams.Add(request.NewErrParamRequired(\"TaskType\"))",
          "8297:  }",
          "8299:  if invalidParams.Len() > 0 {",
          "8300:   return invalidParams",
          "8301:  }",
          "8302:  return nil",
          "8303: }",
          "8306: func (s *Task) SetConnectorOperator(v *ConnectorOperator) *Task {",
          "8307:  s.ConnectorOperator = v",
          "8308:  return s",
          "8309: }",
          "8312: func (s *Task) SetDestinationField(v string) *Task {",
          "8313:  s.DestinationField = &v",
          "8314:  return s",
          "8315: }",
          "8318: func (s *Task) SetSourceFields(v []*string) *Task {",
          "8319:  s.SourceFields = v",
          "8320:  return s",
          "8321: }",
          "8324: func (s *Task) SetTaskProperties(v map[string]*string) *Task {",
          "8325:  s.TaskProperties = v",
          "8326:  return s",
          "8327: }",
          "8330: func (s *Task) SetTaskType(v string) *Task {",
          "8331:  s.TaskType = &v",
          "8332:  return s",
          "8333: }",
          "8336: type TrendmicroConnectorProfileCredentials struct {",
          "8337:  _ struct{} `type:\"structure\"`",
          "8342:  ApiSecretKey *string `locationName:\"apiSecretKey\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "8343: }",
          "8346: func (s TrendmicroConnectorProfileCredentials) String() string {",
          "8347:  return awsutil.Prettify(s)",
          "8348: }",
          "8351: func (s TrendmicroConnectorProfileCredentials) GoString() string {",
          "8352:  return s.String()",
          "8353: }",
          "8356: func (s *TrendmicroConnectorProfileCredentials) Validate() error {",
          "8357:  invalidParams := request.ErrInvalidParams{Context: \"TrendmicroConnectorProfileCredentials\"}",
          "8358:  if s.ApiSecretKey == nil {",
          "8359:   invalidParams.Add(request.NewErrParamRequired(\"ApiSecretKey\"))",
          "8360:  }",
          "8362:  if invalidParams.Len() > 0 {",
          "8363:   return invalidParams",
          "8364:  }",
          "8365:  return nil",
          "8366: }",
          "8369: func (s *TrendmicroConnectorProfileCredentials) SetApiSecretKey(v string) *TrendmicroConnectorProfileCredentials {",
          "8370:  s.ApiSecretKey = &v",
          "8371:  return s",
          "8372: }",
          "8375: type TrendmicroConnectorProfileProperties struct {",
          "8376:  _ struct{} `type:\"structure\"`",
          "8377: }",
          "8380: func (s TrendmicroConnectorProfileProperties) String() string {",
          "8381:  return awsutil.Prettify(s)",
          "8382: }",
          "8385: func (s TrendmicroConnectorProfileProperties) GoString() string {",
          "8386:  return s.String()",
          "8387: }",
          "8390: type TrendmicroMetadata struct {",
          "8391:  _ struct{} `type:\"structure\"`",
          "8392: }",
          "8395: func (s TrendmicroMetadata) String() string {",
          "8396:  return awsutil.Prettify(s)",
          "8397: }",
          "8400: func (s TrendmicroMetadata) GoString() string {",
          "8401:  return s.String()",
          "8402: }",
          "8405: type TrendmicroSourceProperties struct {",
          "8406:  _ struct{} `type:\"structure\"`",
          "8411:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "8412: }",
          "8415: func (s TrendmicroSourceProperties) String() string {",
          "8416:  return awsutil.Prettify(s)",
          "8417: }",
          "8420: func (s TrendmicroSourceProperties) GoString() string {",
          "8421:  return s.String()",
          "8422: }",
          "8425: func (s *TrendmicroSourceProperties) Validate() error {",
          "8426:  invalidParams := request.ErrInvalidParams{Context: \"TrendmicroSourceProperties\"}",
          "8427:  if s.Object == nil {",
          "8428:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "8429:  }",
          "8431:  if invalidParams.Len() > 0 {",
          "8432:   return invalidParams",
          "8433:  }",
          "8434:  return nil",
          "8435: }",
          "8438: func (s *TrendmicroSourceProperties) SetObject(v string) *TrendmicroSourceProperties {",
          "8439:  s.Object = &v",
          "8440:  return s",
          "8441: }",
          "8445: type TriggerConfig struct {",
          "8446:  _ struct{} `type:\"structure\"`",
          "8451:  TriggerProperties *TriggerProperties `locationName:\"triggerProperties\" type:\"structure\"`",
          "8456:  TriggerType *string `locationName:\"triggerType\" type:\"string\" required:\"true\" enum:\"TriggerType\"`",
          "8457: }",
          "8460: func (s TriggerConfig) String() string {",
          "8461:  return awsutil.Prettify(s)",
          "8462: }",
          "8465: func (s TriggerConfig) GoString() string {",
          "8466:  return s.String()",
          "8467: }",
          "8470: func (s *TriggerConfig) Validate() error {",
          "8471:  invalidParams := request.ErrInvalidParams{Context: \"TriggerConfig\"}",
          "8472:  if s.TriggerType == nil {",
          "8473:   invalidParams.Add(request.NewErrParamRequired(\"TriggerType\"))",
          "8474:  }",
          "8475:  if s.TriggerProperties != nil {",
          "8476:   if err := s.TriggerProperties.Validate(); err != nil {",
          "8477:    invalidParams.AddNested(\"TriggerProperties\", err.(request.ErrInvalidParams))",
          "8478:   }",
          "8479:  }",
          "8481:  if invalidParams.Len() > 0 {",
          "8482:   return invalidParams",
          "8483:  }",
          "8484:  return nil",
          "8485: }",
          "8488: func (s *TriggerConfig) SetTriggerProperties(v *TriggerProperties) *TriggerConfig {",
          "8489:  s.TriggerProperties = v",
          "8490:  return s",
          "8491: }",
          "8494: func (s *TriggerConfig) SetTriggerType(v string) *TriggerConfig {",
          "8495:  s.TriggerType = &v",
          "8496:  return s",
          "8497: }",
          "8501: type TriggerProperties struct {",
          "8502:  _ struct{} `type:\"structure\"`",
          "8506:  Scheduled *ScheduledTriggerProperties `type:\"structure\"`",
          "8507: }",
          "8510: func (s TriggerProperties) String() string {",
          "8511:  return awsutil.Prettify(s)",
          "8512: }",
          "8515: func (s TriggerProperties) GoString() string {",
          "8516:  return s.String()",
          "8517: }",
          "8520: func (s *TriggerProperties) Validate() error {",
          "8521:  invalidParams := request.ErrInvalidParams{Context: \"TriggerProperties\"}",
          "8522:  if s.Scheduled != nil {",
          "8523:   if err := s.Scheduled.Validate(); err != nil {",
          "8524:    invalidParams.AddNested(\"Scheduled\", err.(request.ErrInvalidParams))",
          "8525:   }",
          "8526:  }",
          "8528:  if invalidParams.Len() > 0 {",
          "8529:   return invalidParams",
          "8530:  }",
          "8531:  return nil",
          "8532: }",
          "8535: func (s *TriggerProperties) SetScheduled(v *ScheduledTriggerProperties) *TriggerProperties {",
          "8536:  s.Scheduled = v",
          "8537:  return s",
          "8538: }",
          "8541: type UnsupportedOperationException struct {",
          "8542:  _            struct{}                  `type:\"structure\"`",
          "8543:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "8545:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "8546: }",
          "8549: func (s UnsupportedOperationException) String() string {",
          "8550:  return awsutil.Prettify(s)",
          "8551: }",
          "8554: func (s UnsupportedOperationException) GoString() string {",
          "8555:  return s.String()",
          "8556: }",
          "8558: func newErrorUnsupportedOperationException(v protocol.ResponseMetadata) error {",
          "8559:  return &UnsupportedOperationException{",
          "8560:   RespMetadata: v,",
          "8561:  }",
          "8562: }",
          "8565: func (s *UnsupportedOperationException) Code() string {",
          "8566:  return \"UnsupportedOperationException\"",
          "8567: }",
          "8570: func (s *UnsupportedOperationException) Message() string {",
          "8571:  if s.Message_ != nil {",
          "8572:   return *s.Message_",
          "8573:  }",
          "8574:  return \"\"",
          "8575: }",
          "8578: func (s *UnsupportedOperationException) OrigErr() error {",
          "8579:  return nil",
          "8580: }",
          "8582: func (s *UnsupportedOperationException) Error() string {",
          "8583:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "8584: }",
          "8587: func (s *UnsupportedOperationException) StatusCode() int {",
          "8588:  return s.RespMetadata.StatusCode",
          "8589: }",
          "8592: func (s *UnsupportedOperationException) RequestID() string {",
          "8593:  return s.RespMetadata.RequestID",
          "8594: }",
          "8596: type UntagResourceInput struct {",
          "8597:  _ struct{} `type:\"structure\"`",
          "8602:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" type:\"string\" required:\"true\"`",
          "8607:  TagKeys []*string `location:\"querystring\" locationName:\"tagKeys\" type:\"list\" required:\"true\"`",
          "8608: }",
          "8611: func (s UntagResourceInput) String() string {",
          "8612:  return awsutil.Prettify(s)",
          "8613: }",
          "8616: func (s UntagResourceInput) GoString() string {",
          "8617:  return s.String()",
          "8618: }",
          "8621: func (s *UntagResourceInput) Validate() error {",
          "8622:  invalidParams := request.ErrInvalidParams{Context: \"UntagResourceInput\"}",
          "8623:  if s.ResourceArn == nil {",
          "8624:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "8625:  }",
          "8626:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "8627:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "8628:  }",
          "8629:  if s.TagKeys == nil {",
          "8630:   invalidParams.Add(request.NewErrParamRequired(\"TagKeys\"))",
          "8631:  }",
          "8633:  if invalidParams.Len() > 0 {",
          "8634:   return invalidParams",
          "8635:  }",
          "8636:  return nil",
          "8637: }",
          "8640: func (s *UntagResourceInput) SetResourceArn(v string) *UntagResourceInput {",
          "8641:  s.ResourceArn = &v",
          "8642:  return s",
          "8643: }",
          "8646: func (s *UntagResourceInput) SetTagKeys(v []*string) *UntagResourceInput {",
          "8647:  s.TagKeys = v",
          "8648:  return s",
          "8649: }",
          "8651: type UntagResourceOutput struct {",
          "8652:  _ struct{} `type:\"structure\"`",
          "8653: }",
          "8656: func (s UntagResourceOutput) String() string {",
          "8657:  return awsutil.Prettify(s)",
          "8658: }",
          "8661: func (s UntagResourceOutput) GoString() string {",
          "8662:  return s.String()",
          "8663: }",
          "8665: type UpdateConnectorProfileInput struct {",
          "8666:  _ struct{} `type:\"structure\"`",
          "8671:  ConnectionMode *string `locationName:\"connectionMode\" type:\"string\" required:\"true\" enum:\"ConnectionMode\"`",
          "8676:  ConnectorProfileConfig *ConnectorProfileConfig `locationName:\"connectorProfileConfig\" type:\"structure\" required:\"true\"`",
          "8682:  ConnectorProfileName *string `locationName:\"connectorProfileName\" type:\"string\" required:\"true\"`",
          "8683: }",
          "8686: func (s UpdateConnectorProfileInput) String() string {",
          "8687:  return awsutil.Prettify(s)",
          "8688: }",
          "8691: func (s UpdateConnectorProfileInput) GoString() string {",
          "8692:  return s.String()",
          "8693: }",
          "8696: func (s *UpdateConnectorProfileInput) Validate() error {",
          "8697:  invalidParams := request.ErrInvalidParams{Context: \"UpdateConnectorProfileInput\"}",
          "8698:  if s.ConnectionMode == nil {",
          "8699:   invalidParams.Add(request.NewErrParamRequired(\"ConnectionMode\"))",
          "8700:  }",
          "8701:  if s.ConnectorProfileConfig == nil {",
          "8702:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorProfileConfig\"))",
          "8703:  }",
          "8704:  if s.ConnectorProfileName == nil {",
          "8705:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorProfileName\"))",
          "8706:  }",
          "8707:  if s.ConnectorProfileConfig != nil {",
          "8708:   if err := s.ConnectorProfileConfig.Validate(); err != nil {",
          "8709:    invalidParams.AddNested(\"ConnectorProfileConfig\", err.(request.ErrInvalidParams))",
          "8710:   }",
          "8711:  }",
          "8713:  if invalidParams.Len() > 0 {",
          "8714:   return invalidParams",
          "8715:  }",
          "8716:  return nil",
          "8717: }",
          "8720: func (s *UpdateConnectorProfileInput) SetConnectionMode(v string) *UpdateConnectorProfileInput {",
          "8721:  s.ConnectionMode = &v",
          "8722:  return s",
          "8723: }",
          "8726: func (s *UpdateConnectorProfileInput) SetConnectorProfileConfig(v *ConnectorProfileConfig) *UpdateConnectorProfileInput {",
          "8727:  s.ConnectorProfileConfig = v",
          "8728:  return s",
          "8729: }",
          "8732: func (s *UpdateConnectorProfileInput) SetConnectorProfileName(v string) *UpdateConnectorProfileInput {",
          "8733:  s.ConnectorProfileName = &v",
          "8734:  return s",
          "8735: }",
          "8737: type UpdateConnectorProfileOutput struct {",
          "8738:  _ struct{} `type:\"structure\"`",
          "8741:  ConnectorProfileArn *string `locationName:\"connectorProfileArn\" type:\"string\"`",
          "8742: }",
          "8745: func (s UpdateConnectorProfileOutput) String() string {",
          "8746:  return awsutil.Prettify(s)",
          "8747: }",
          "8750: func (s UpdateConnectorProfileOutput) GoString() string {",
          "8751:  return s.String()",
          "8752: }",
          "8755: func (s *UpdateConnectorProfileOutput) SetConnectorProfileArn(v string) *UpdateConnectorProfileOutput {",
          "8756:  s.ConnectorProfileArn = &v",
          "8757:  return s",
          "8758: }",
          "8760: type UpdateFlowInput struct {",
          "8761:  _ struct{} `type:\"structure\"`",
          "8764:  Description *string `locationName:\"description\" type:\"string\"`",
          "8770:  DestinationFlowConfigList []*DestinationFlowConfig `locationName:\"destinationFlowConfigList\" type:\"list\" required:\"true\"`",
          "8776:  FlowName *string `locationName:\"flowName\" type:\"string\" required:\"true\"`",
          "8780:  SourceFlowConfig *SourceFlowConfig `locationName:\"sourceFlowConfig\" type:\"structure\"`",
          "8786:  Tasks []*Task `locationName:\"tasks\" type:\"list\" required:\"true\"`",
          "8791:  TriggerConfig *TriggerConfig `locationName:\"triggerConfig\" type:\"structure\" required:\"true\"`",
          "8792: }",
          "8795: func (s UpdateFlowInput) String() string {",
          "8796:  return awsutil.Prettify(s)",
          "8797: }",
          "8800: func (s UpdateFlowInput) GoString() string {",
          "8801:  return s.String()",
          "8802: }",
          "8805: func (s *UpdateFlowInput) Validate() error {",
          "8806:  invalidParams := request.ErrInvalidParams{Context: \"UpdateFlowInput\"}",
          "8807:  if s.DestinationFlowConfigList == nil {",
          "8808:   invalidParams.Add(request.NewErrParamRequired(\"DestinationFlowConfigList\"))",
          "8809:  }",
          "8810:  if s.FlowName == nil {",
          "8811:   invalidParams.Add(request.NewErrParamRequired(\"FlowName\"))",
          "8812:  }",
          "8813:  if s.Tasks == nil {",
          "8814:   invalidParams.Add(request.NewErrParamRequired(\"Tasks\"))",
          "8815:  }",
          "8816:  if s.TriggerConfig == nil {",
          "8817:   invalidParams.Add(request.NewErrParamRequired(\"TriggerConfig\"))",
          "8818:  }",
          "8819:  if s.DestinationFlowConfigList != nil {",
          "8820:   for i, v := range s.DestinationFlowConfigList {",
          "8821:    if v == nil {",
          "8822:     continue",
          "8823:    }",
          "8824:    if err := v.Validate(); err != nil {",
          "8825:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"DestinationFlowConfigList\", i), err.(request.ErrInvalidParams))",
          "8826:    }",
          "8827:   }",
          "8828:  }",
          "8829:  if s.SourceFlowConfig != nil {",
          "8830:   if err := s.SourceFlowConfig.Validate(); err != nil {",
          "8831:    invalidParams.AddNested(\"SourceFlowConfig\", err.(request.ErrInvalidParams))",
          "8832:   }",
          "8833:  }",
          "8834:  if s.Tasks != nil {",
          "8835:   for i, v := range s.Tasks {",
          "8836:    if v == nil {",
          "8837:     continue",
          "8838:    }",
          "8839:    if err := v.Validate(); err != nil {",
          "8840:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tasks\", i), err.(request.ErrInvalidParams))",
          "8841:    }",
          "8842:   }",
          "8843:  }",
          "8844:  if s.TriggerConfig != nil {",
          "8845:   if err := s.TriggerConfig.Validate(); err != nil {",
          "8846:    invalidParams.AddNested(\"TriggerConfig\", err.(request.ErrInvalidParams))",
          "8847:   }",
          "8848:  }",
          "8850:  if invalidParams.Len() > 0 {",
          "8851:   return invalidParams",
          "8852:  }",
          "8853:  return nil",
          "8854: }",
          "8857: func (s *UpdateFlowInput) SetDescription(v string) *UpdateFlowInput {",
          "8858:  s.Description = &v",
          "8859:  return s",
          "8860: }",
          "8863: func (s *UpdateFlowInput) SetDestinationFlowConfigList(v []*DestinationFlowConfig) *UpdateFlowInput {",
          "8864:  s.DestinationFlowConfigList = v",
          "8865:  return s",
          "8866: }",
          "8869: func (s *UpdateFlowInput) SetFlowName(v string) *UpdateFlowInput {",
          "8870:  s.FlowName = &v",
          "8871:  return s",
          "8872: }",
          "8875: func (s *UpdateFlowInput) SetSourceFlowConfig(v *SourceFlowConfig) *UpdateFlowInput {",
          "8876:  s.SourceFlowConfig = v",
          "8877:  return s",
          "8878: }",
          "8881: func (s *UpdateFlowInput) SetTasks(v []*Task) *UpdateFlowInput {",
          "8882:  s.Tasks = v",
          "8883:  return s",
          "8884: }",
          "8887: func (s *UpdateFlowInput) SetTriggerConfig(v *TriggerConfig) *UpdateFlowInput {",
          "8888:  s.TriggerConfig = v",
          "8889:  return s",
          "8890: }",
          "8892: type UpdateFlowOutput struct {",
          "8893:  _ struct{} `type:\"structure\"`",
          "8896:  FlowStatus *string `locationName:\"flowStatus\" type:\"string\" enum:\"FlowStatus\"`",
          "8897: }",
          "8900: func (s UpdateFlowOutput) String() string {",
          "8901:  return awsutil.Prettify(s)",
          "8902: }",
          "8905: func (s UpdateFlowOutput) GoString() string {",
          "8906:  return s.String()",
          "8907: }",
          "8910: func (s *UpdateFlowOutput) SetFlowStatus(v string) *UpdateFlowOutput {",
          "8911:  s.FlowStatus = &v",
          "8912:  return s",
          "8913: }",
          "8916: type ValidationException struct {",
          "8917:  _            struct{}                  `type:\"structure\"`",
          "8918:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "8920:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "8921: }",
          "8924: func (s ValidationException) String() string {",
          "8925:  return awsutil.Prettify(s)",
          "8926: }",
          "8929: func (s ValidationException) GoString() string {",
          "8930:  return s.String()",
          "8931: }",
          "8933: func newErrorValidationException(v protocol.ResponseMetadata) error {",
          "8934:  return &ValidationException{",
          "8935:   RespMetadata: v,",
          "8936:  }",
          "8937: }",
          "8940: func (s *ValidationException) Code() string {",
          "8941:  return \"ValidationException\"",
          "8942: }",
          "8945: func (s *ValidationException) Message() string {",
          "8946:  if s.Message_ != nil {",
          "8947:   return *s.Message_",
          "8948:  }",
          "8949:  return \"\"",
          "8950: }",
          "8953: func (s *ValidationException) OrigErr() error {",
          "8954:  return nil",
          "8955: }",
          "8957: func (s *ValidationException) Error() string {",
          "8958:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "8959: }",
          "8962: func (s *ValidationException) StatusCode() int {",
          "8963:  return s.RespMetadata.StatusCode",
          "8964: }",
          "8967: func (s *ValidationException) RequestID() string {",
          "8968:  return s.RespMetadata.RequestID",
          "8969: }",
          "8972: type VeevaConnectorProfileCredentials struct {",
          "8973:  _ struct{} `type:\"structure\"`",
          "8978:  Password *string `locationName:\"password\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "8983:  Username *string `locationName:\"username\" type:\"string\" required:\"true\"`",
          "8984: }",
          "8987: func (s VeevaConnectorProfileCredentials) String() string {",
          "8988:  return awsutil.Prettify(s)",
          "8989: }",
          "8992: func (s VeevaConnectorProfileCredentials) GoString() string {",
          "8993:  return s.String()",
          "8994: }",
          "8997: func (s *VeevaConnectorProfileCredentials) Validate() error {",
          "8998:  invalidParams := request.ErrInvalidParams{Context: \"VeevaConnectorProfileCredentials\"}",
          "8999:  if s.Password == nil {",
          "9000:   invalidParams.Add(request.NewErrParamRequired(\"Password\"))",
          "9001:  }",
          "9002:  if s.Username == nil {",
          "9003:   invalidParams.Add(request.NewErrParamRequired(\"Username\"))",
          "9004:  }",
          "9006:  if invalidParams.Len() > 0 {",
          "9007:   return invalidParams",
          "9008:  }",
          "9009:  return nil",
          "9010: }",
          "9013: func (s *VeevaConnectorProfileCredentials) SetPassword(v string) *VeevaConnectorProfileCredentials {",
          "9014:  s.Password = &v",
          "9015:  return s",
          "9016: }",
          "9019: func (s *VeevaConnectorProfileCredentials) SetUsername(v string) *VeevaConnectorProfileCredentials {",
          "9020:  s.Username = &v",
          "9021:  return s",
          "9022: }",
          "9025: type VeevaConnectorProfileProperties struct {",
          "9026:  _ struct{} `type:\"structure\"`",
          "9031:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\" required:\"true\"`",
          "9032: }",
          "9035: func (s VeevaConnectorProfileProperties) String() string {",
          "9036:  return awsutil.Prettify(s)",
          "9037: }",
          "9040: func (s VeevaConnectorProfileProperties) GoString() string {",
          "9041:  return s.String()",
          "9042: }",
          "9045: func (s *VeevaConnectorProfileProperties) Validate() error {",
          "9046:  invalidParams := request.ErrInvalidParams{Context: \"VeevaConnectorProfileProperties\"}",
          "9047:  if s.InstanceUrl == nil {",
          "9048:   invalidParams.Add(request.NewErrParamRequired(\"InstanceUrl\"))",
          "9049:  }",
          "9051:  if invalidParams.Len() > 0 {",
          "9052:   return invalidParams",
          "9053:  }",
          "9054:  return nil",
          "9055: }",
          "9058: func (s *VeevaConnectorProfileProperties) SetInstanceUrl(v string) *VeevaConnectorProfileProperties {",
          "9059:  s.InstanceUrl = &v",
          "9060:  return s",
          "9061: }",
          "9064: type VeevaMetadata struct {",
          "9065:  _ struct{} `type:\"structure\"`",
          "9066: }",
          "9069: func (s VeevaMetadata) String() string {",
          "9070:  return awsutil.Prettify(s)",
          "9071: }",
          "9074: func (s VeevaMetadata) GoString() string {",
          "9075:  return s.String()",
          "9076: }",
          "9079: type VeevaSourceProperties struct {",
          "9080:  _ struct{} `type:\"structure\"`",
          "9085:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "9086: }",
          "9089: func (s VeevaSourceProperties) String() string {",
          "9090:  return awsutil.Prettify(s)",
          "9091: }",
          "9094: func (s VeevaSourceProperties) GoString() string {",
          "9095:  return s.String()",
          "9096: }",
          "9099: func (s *VeevaSourceProperties) Validate() error {",
          "9100:  invalidParams := request.ErrInvalidParams{Context: \"VeevaSourceProperties\"}",
          "9101:  if s.Object == nil {",
          "9102:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "9103:  }",
          "9105:  if invalidParams.Len() > 0 {",
          "9106:   return invalidParams",
          "9107:  }",
          "9108:  return nil",
          "9109: }",
          "9112: func (s *VeevaSourceProperties) SetObject(v string) *VeevaSourceProperties {",
          "9113:  s.Object = &v",
          "9114:  return s",
          "9115: }",
          "9118: type ZendeskConnectorProfileCredentials struct {",
          "9119:  _ struct{} `type:\"structure\"`",
          "9122:  AccessToken *string `locationName:\"accessToken\" type:\"string\" sensitive:\"true\"`",
          "9127:  ClientId *string `locationName:\"clientId\" type:\"string\" required:\"true\"`",
          "9133:  ClientSecret *string `locationName:\"clientSecret\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "9137:  OAuthRequest *ConnectorOAuthRequest `locationName:\"oAuthRequest\" type:\"structure\"`",
          "9138: }",
          "9141: func (s ZendeskConnectorProfileCredentials) String() string {",
          "9142:  return awsutil.Prettify(s)",
          "9143: }",
          "9146: func (s ZendeskConnectorProfileCredentials) GoString() string {",
          "9147:  return s.String()",
          "9148: }",
          "9151: func (s *ZendeskConnectorProfileCredentials) Validate() error {",
          "9152:  invalidParams := request.ErrInvalidParams{Context: \"ZendeskConnectorProfileCredentials\"}",
          "9153:  if s.ClientId == nil {",
          "9154:   invalidParams.Add(request.NewErrParamRequired(\"ClientId\"))",
          "9155:  }",
          "9156:  if s.ClientSecret == nil {",
          "9157:   invalidParams.Add(request.NewErrParamRequired(\"ClientSecret\"))",
          "9158:  }",
          "9160:  if invalidParams.Len() > 0 {",
          "9161:   return invalidParams",
          "9162:  }",
          "9163:  return nil",
          "9164: }",
          "9167: func (s *ZendeskConnectorProfileCredentials) SetAccessToken(v string) *ZendeskConnectorProfileCredentials {",
          "9168:  s.AccessToken = &v",
          "9169:  return s",
          "9170: }",
          "9173: func (s *ZendeskConnectorProfileCredentials) SetClientId(v string) *ZendeskConnectorProfileCredentials {",
          "9174:  s.ClientId = &v",
          "9175:  return s",
          "9176: }",
          "9179: func (s *ZendeskConnectorProfileCredentials) SetClientSecret(v string) *ZendeskConnectorProfileCredentials {",
          "9180:  s.ClientSecret = &v",
          "9181:  return s",
          "9182: }",
          "9185: func (s *ZendeskConnectorProfileCredentials) SetOAuthRequest(v *ConnectorOAuthRequest) *ZendeskConnectorProfileCredentials {",
          "9186:  s.OAuthRequest = v",
          "9187:  return s",
          "9188: }",
          "9191: type ZendeskConnectorProfileProperties struct {",
          "9192:  _ struct{} `type:\"structure\"`",
          "9197:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\" required:\"true\"`",
          "9198: }",
          "9201: func (s ZendeskConnectorProfileProperties) String() string {",
          "9202:  return awsutil.Prettify(s)",
          "9203: }",
          "9206: func (s ZendeskConnectorProfileProperties) GoString() string {",
          "9207:  return s.String()",
          "9208: }",
          "9211: func (s *ZendeskConnectorProfileProperties) Validate() error {",
          "9212:  invalidParams := request.ErrInvalidParams{Context: \"ZendeskConnectorProfileProperties\"}",
          "9213:  if s.InstanceUrl == nil {",
          "9214:   invalidParams.Add(request.NewErrParamRequired(\"InstanceUrl\"))",
          "9215:  }",
          "9217:  if invalidParams.Len() > 0 {",
          "9218:   return invalidParams",
          "9219:  }",
          "9220:  return nil",
          "9221: }",
          "9224: func (s *ZendeskConnectorProfileProperties) SetInstanceUrl(v string) *ZendeskConnectorProfileProperties {",
          "9225:  s.InstanceUrl = &v",
          "9226:  return s",
          "9227: }",
          "9230: type ZendeskMetadata struct {",
          "9231:  _ struct{} `type:\"structure\"`",
          "9234:  OAuthScopes []*string `locationName:\"oAuthScopes\" type:\"list\"`",
          "9235: }",
          "9238: func (s ZendeskMetadata) String() string {",
          "9239:  return awsutil.Prettify(s)",
          "9240: }",
          "9243: func (s ZendeskMetadata) GoString() string {",
          "9244:  return s.String()",
          "9245: }",
          "9248: func (s *ZendeskMetadata) SetOAuthScopes(v []*string) *ZendeskMetadata {",
          "9249:  s.OAuthScopes = v",
          "9250:  return s",
          "9251: }",
          "9254: type ZendeskSourceProperties struct {",
          "9255:  _ struct{} `type:\"structure\"`",
          "9260:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "9261: }",
          "9264: func (s ZendeskSourceProperties) String() string {",
          "9265:  return awsutil.Prettify(s)",
          "9266: }",
          "9269: func (s ZendeskSourceProperties) GoString() string {",
          "9270:  return s.String()",
          "9271: }",
          "9274: func (s *ZendeskSourceProperties) Validate() error {",
          "9275:  invalidParams := request.ErrInvalidParams{Context: \"ZendeskSourceProperties\"}",
          "9276:  if s.Object == nil {",
          "9277:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "9278:  }",
          "9280:  if invalidParams.Len() > 0 {",
          "9281:   return invalidParams",
          "9282:  }",
          "9283:  return nil",
          "9284: }",
          "9287: func (s *ZendeskSourceProperties) SetObject(v string) *ZendeskSourceProperties {",
          "9288:  s.Object = &v",
          "9289:  return s",
          "9290: }",
          "9292: const (",
          "9294:  AggregationTypeNone = \"None\"",
          "9297:  AggregationTypeSingleFile = \"SingleFile\"",
          "9298: )",
          "9301: func AggregationType_Values() []string {",
          "9302:  return []string{",
          "9303:   AggregationTypeNone,",
          "9304:   AggregationTypeSingleFile,",
          "9305:  }",
          "9306: }",
          "9308: const (",
          "9310:  AmplitudeConnectorOperatorBetween = \"BETWEEN\"",
          "9311: )",
          "9314: func AmplitudeConnectorOperator_Values() []string {",
          "9315:  return []string{",
          "9316:   AmplitudeConnectorOperatorBetween,",
          "9317:  }",
          "9318: }",
          "9320: const (",
          "9322:  ConnectionModePublic = \"Public\"",
          "9325:  ConnectionModePrivate = \"Private\"",
          "9326: )",
          "9329: func ConnectionMode_Values() []string {",
          "9330:  return []string{",
          "9331:   ConnectionModePublic,",
          "9332:   ConnectionModePrivate,",
          "9333:  }",
          "9334: }",
          "9336: const (",
          "9338:  ConnectorTypeSalesforce = \"Salesforce\"",
          "9341:  ConnectorTypeSingular = \"Singular\"",
          "9344:  ConnectorTypeSlack = \"Slack\"",
          "9347:  ConnectorTypeRedshift = \"Redshift\"",
          "9350:  ConnectorTypeS3 = \"S3\"",
          "9353:  ConnectorTypeMarketo = \"Marketo\"",
          "9356:  ConnectorTypeGoogleanalytics = \"Googleanalytics\"",
          "9359:  ConnectorTypeZendesk = \"Zendesk\"",
          "9362:  ConnectorTypeServicenow = \"Servicenow\"",
          "9365:  ConnectorTypeDatadog = \"Datadog\"",
          "9368:  ConnectorTypeTrendmicro = \"Trendmicro\"",
          "9371:  ConnectorTypeSnowflake = \"Snowflake\"",
          "9374:  ConnectorTypeDynatrace = \"Dynatrace\"",
          "9377:  ConnectorTypeInfornexus = \"Infornexus\"",
          "9380:  ConnectorTypeAmplitude = \"Amplitude\"",
          "9383:  ConnectorTypeVeeva = \"Veeva\"",
          "9386:  ConnectorTypeEventBridge = \"EventBridge\"",
          "9387: )",
          "9390: func ConnectorType_Values() []string {",
          "9391:  return []string{",
          "9392:   ConnectorTypeSalesforce,",
          "9393:   ConnectorTypeSingular,",
          "9394:   ConnectorTypeSlack,",
          "9395:   ConnectorTypeRedshift,",
          "9396:   ConnectorTypeS3,",
          "9397:   ConnectorTypeMarketo,",
          "9398:   ConnectorTypeGoogleanalytics,",
          "9399:   ConnectorTypeZendesk,",
          "9400:   ConnectorTypeServicenow,",
          "9401:   ConnectorTypeDatadog,",
          "9402:   ConnectorTypeTrendmicro,",
          "9403:   ConnectorTypeSnowflake,",
          "9404:   ConnectorTypeDynatrace,",
          "9405:   ConnectorTypeInfornexus,",
          "9406:   ConnectorTypeAmplitude,",
          "9407:   ConnectorTypeVeeva,",
          "9408:   ConnectorTypeEventBridge,",
          "9409:  }",
          "9410: }",
          "9412: const (",
          "9414:  DataPullModeIncremental = \"Incremental\"",
          "9417:  DataPullModeComplete = \"Complete\"",
          "9418: )",
          "9421: func DataPullMode_Values() []string {",
          "9422:  return []string{",
          "9423:   DataPullModeIncremental,",
          "9424:   DataPullModeComplete,",
          "9425:  }",
          "9426: }",
          "9428: const (",
          "9430:  DatadogConnectorOperatorProjection = \"PROJECTION\"",
          "9433:  DatadogConnectorOperatorBetween = \"BETWEEN\"",
          "9436:  DatadogConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "9439:  DatadogConnectorOperatorAddition = \"ADDITION\"",
          "9442:  DatadogConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "9445:  DatadogConnectorOperatorDivision = \"DIVISION\"",
          "9448:  DatadogConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "9451:  DatadogConnectorOperatorMaskAll = \"MASK_ALL\"",
          "9454:  DatadogConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "9457:  DatadogConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "9460:  DatadogConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "9463:  DatadogConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "9466:  DatadogConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "9469:  DatadogConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "9472:  DatadogConnectorOperatorNoOp = \"NO_OP\"",
          "9473: )",
          "9476: func DatadogConnectorOperator_Values() []string {",
          "9477:  return []string{",
          "9478:   DatadogConnectorOperatorProjection,",
          "9479:   DatadogConnectorOperatorBetween,",
          "9480:   DatadogConnectorOperatorEqualTo,",
          "9481:   DatadogConnectorOperatorAddition,",
          "9482:   DatadogConnectorOperatorMultiplication,",
          "9483:   DatadogConnectorOperatorDivision,",
          "9484:   DatadogConnectorOperatorSubtraction,",
          "9485:   DatadogConnectorOperatorMaskAll,",
          "9486:   DatadogConnectorOperatorMaskFirstN,",
          "9487:   DatadogConnectorOperatorMaskLastN,",
          "9488:   DatadogConnectorOperatorValidateNonNull,",
          "9489:   DatadogConnectorOperatorValidateNonZero,",
          "9490:   DatadogConnectorOperatorValidateNonNegative,",
          "9491:   DatadogConnectorOperatorValidateNumeric,",
          "9492:   DatadogConnectorOperatorNoOp,",
          "9493:  }",
          "9494: }",
          "9496: const (",
          "9498:  DynatraceConnectorOperatorProjection = \"PROJECTION\"",
          "9501:  DynatraceConnectorOperatorBetween = \"BETWEEN\"",
          "9504:  DynatraceConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "9507:  DynatraceConnectorOperatorAddition = \"ADDITION\"",
          "9510:  DynatraceConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "9513:  DynatraceConnectorOperatorDivision = \"DIVISION\"",
          "9516:  DynatraceConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "9519:  DynatraceConnectorOperatorMaskAll = \"MASK_ALL\"",
          "9522:  DynatraceConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "9525:  DynatraceConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "9528:  DynatraceConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "9531:  DynatraceConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "9534:  DynatraceConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "9537:  DynatraceConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "9540:  DynatraceConnectorOperatorNoOp = \"NO_OP\"",
          "9541: )",
          "9544: func DynatraceConnectorOperator_Values() []string {",
          "9545:  return []string{",
          "9546:   DynatraceConnectorOperatorProjection,",
          "9547:   DynatraceConnectorOperatorBetween,",
          "9548:   DynatraceConnectorOperatorEqualTo,",
          "9549:   DynatraceConnectorOperatorAddition,",
          "9550:   DynatraceConnectorOperatorMultiplication,",
          "9551:   DynatraceConnectorOperatorDivision,",
          "9552:   DynatraceConnectorOperatorSubtraction,",
          "9553:   DynatraceConnectorOperatorMaskAll,",
          "9554:   DynatraceConnectorOperatorMaskFirstN,",
          "9555:   DynatraceConnectorOperatorMaskLastN,",
          "9556:   DynatraceConnectorOperatorValidateNonNull,",
          "9557:   DynatraceConnectorOperatorValidateNonZero,",
          "9558:   DynatraceConnectorOperatorValidateNonNegative,",
          "9559:   DynatraceConnectorOperatorValidateNumeric,",
          "9560:   DynatraceConnectorOperatorNoOp,",
          "9561:  }",
          "9562: }",
          "9564: const (",
          "9566:  ExecutionStatusInProgress = \"InProgress\"",
          "9569:  ExecutionStatusSuccessful = \"Successful\"",
          "9572:  ExecutionStatusError = \"Error\"",
          "9573: )",
          "9576: func ExecutionStatus_Values() []string {",
          "9577:  return []string{",
          "9578:   ExecutionStatusInProgress,",
          "9579:   ExecutionStatusSuccessful,",
          "9580:   ExecutionStatusError,",
          "9581:  }",
          "9582: }",
          "9584: const (",
          "9586:  FileTypeCsv = \"CSV\"",
          "9589:  FileTypeJson = \"JSON\"",
          "9592:  FileTypeParquet = \"PARQUET\"",
          "9593: )",
          "9596: func FileType_Values() []string {",
          "9597:  return []string{",
          "9598:   FileTypeCsv,",
          "9599:   FileTypeJson,",
          "9600:   FileTypeParquet,",
          "9601:  }",
          "9602: }",
          "9604: const (",
          "9606:  FlowStatusActive = \"Active\"",
          "9609:  FlowStatusDeprecated = \"Deprecated\"",
          "9612:  FlowStatusDeleted = \"Deleted\"",
          "9615:  FlowStatusDraft = \"Draft\"",
          "9618:  FlowStatusErrored = \"Errored\"",
          "9621:  FlowStatusSuspended = \"Suspended\"",
          "9622: )",
          "9625: func FlowStatus_Values() []string {",
          "9626:  return []string{",
          "9627:   FlowStatusActive,",
          "9628:   FlowStatusDeprecated,",
          "9629:   FlowStatusDeleted,",
          "9630:   FlowStatusDraft,",
          "9631:   FlowStatusErrored,",
          "9632:   FlowStatusSuspended,",
          "9633:  }",
          "9634: }",
          "9636: const (",
          "9638:  GoogleAnalyticsConnectorOperatorProjection = \"PROJECTION\"",
          "9641:  GoogleAnalyticsConnectorOperatorBetween = \"BETWEEN\"",
          "9642: )",
          "9645: func GoogleAnalyticsConnectorOperator_Values() []string {",
          "9646:  return []string{",
          "9647:   GoogleAnalyticsConnectorOperatorProjection,",
          "9648:   GoogleAnalyticsConnectorOperatorBetween,",
          "9649:  }",
          "9650: }",
          "9652: const (",
          "9654:  InforNexusConnectorOperatorProjection = \"PROJECTION\"",
          "9657:  InforNexusConnectorOperatorBetween = \"BETWEEN\"",
          "9660:  InforNexusConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "9663:  InforNexusConnectorOperatorAddition = \"ADDITION\"",
          "9666:  InforNexusConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "9669:  InforNexusConnectorOperatorDivision = \"DIVISION\"",
          "9672:  InforNexusConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "9675:  InforNexusConnectorOperatorMaskAll = \"MASK_ALL\"",
          "9678:  InforNexusConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "9681:  InforNexusConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "9684:  InforNexusConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "9687:  InforNexusConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "9690:  InforNexusConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "9693:  InforNexusConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "9696:  InforNexusConnectorOperatorNoOp = \"NO_OP\"",
          "9697: )",
          "9700: func InforNexusConnectorOperator_Values() []string {",
          "9701:  return []string{",
          "9702:   InforNexusConnectorOperatorProjection,",
          "9703:   InforNexusConnectorOperatorBetween,",
          "9704:   InforNexusConnectorOperatorEqualTo,",
          "9705:   InforNexusConnectorOperatorAddition,",
          "9706:   InforNexusConnectorOperatorMultiplication,",
          "9707:   InforNexusConnectorOperatorDivision,",
          "9708:   InforNexusConnectorOperatorSubtraction,",
          "9709:   InforNexusConnectorOperatorMaskAll,",
          "9710:   InforNexusConnectorOperatorMaskFirstN,",
          "9711:   InforNexusConnectorOperatorMaskLastN,",
          "9712:   InforNexusConnectorOperatorValidateNonNull,",
          "9713:   InforNexusConnectorOperatorValidateNonZero,",
          "9714:   InforNexusConnectorOperatorValidateNonNegative,",
          "9715:   InforNexusConnectorOperatorValidateNumeric,",
          "9716:   InforNexusConnectorOperatorNoOp,",
          "9717:  }",
          "9718: }",
          "9720: const (",
          "9722:  MarketoConnectorOperatorProjection = \"PROJECTION\"",
          "9725:  MarketoConnectorOperatorLessThan = \"LESS_THAN\"",
          "9728:  MarketoConnectorOperatorGreaterThan = \"GREATER_THAN\"",
          "9731:  MarketoConnectorOperatorBetween = \"BETWEEN\"",
          "9734:  MarketoConnectorOperatorAddition = \"ADDITION\"",
          "9737:  MarketoConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "9740:  MarketoConnectorOperatorDivision = \"DIVISION\"",
          "9743:  MarketoConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "9746:  MarketoConnectorOperatorMaskAll = \"MASK_ALL\"",
          "9749:  MarketoConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "9752:  MarketoConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "9755:  MarketoConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "9758:  MarketoConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "9761:  MarketoConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "9764:  MarketoConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "9767:  MarketoConnectorOperatorNoOp = \"NO_OP\"",
          "9768: )",
          "9771: func MarketoConnectorOperator_Values() []string {",
          "9772:  return []string{",
          "9773:   MarketoConnectorOperatorProjection,",
          "9774:   MarketoConnectorOperatorLessThan,",
          "9775:   MarketoConnectorOperatorGreaterThan,",
          "9776:   MarketoConnectorOperatorBetween,",
          "9777:   MarketoConnectorOperatorAddition,",
          "9778:   MarketoConnectorOperatorMultiplication,",
          "9779:   MarketoConnectorOperatorDivision,",
          "9780:   MarketoConnectorOperatorSubtraction,",
          "9781:   MarketoConnectorOperatorMaskAll,",
          "9782:   MarketoConnectorOperatorMaskFirstN,",
          "9783:   MarketoConnectorOperatorMaskLastN,",
          "9784:   MarketoConnectorOperatorValidateNonNull,",
          "9785:   MarketoConnectorOperatorValidateNonZero,",
          "9786:   MarketoConnectorOperatorValidateNonNegative,",
          "9787:   MarketoConnectorOperatorValidateNumeric,",
          "9788:   MarketoConnectorOperatorNoOp,",
          "9789:  }",
          "9790: }",
          "9792: const (",
          "9794:  OperatorProjection = \"PROJECTION\"",
          "9797:  OperatorLessThan = \"LESS_THAN\"",
          "9800:  OperatorGreaterThan = \"GREATER_THAN\"",
          "9803:  OperatorContains = \"CONTAINS\"",
          "9806:  OperatorBetween = \"BETWEEN\"",
          "9809:  OperatorLessThanOrEqualTo = \"LESS_THAN_OR_EQUAL_TO\"",
          "9812:  OperatorGreaterThanOrEqualTo = \"GREATER_THAN_OR_EQUAL_TO\"",
          "9815:  OperatorEqualTo = \"EQUAL_TO\"",
          "9818:  OperatorNotEqualTo = \"NOT_EQUAL_TO\"",
          "9821:  OperatorAddition = \"ADDITION\"",
          "9824:  OperatorMultiplication = \"MULTIPLICATION\"",
          "9827:  OperatorDivision = \"DIVISION\"",
          "9830:  OperatorSubtraction = \"SUBTRACTION\"",
          "9833:  OperatorMaskAll = \"MASK_ALL\"",
          "9836:  OperatorMaskFirstN = \"MASK_FIRST_N\"",
          "9839:  OperatorMaskLastN = \"MASK_LAST_N\"",
          "9842:  OperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "9845:  OperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "9848:  OperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "9851:  OperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "9854:  OperatorNoOp = \"NO_OP\"",
          "9855: )",
          "9858: func Operator_Values() []string {",
          "9859:  return []string{",
          "9860:   OperatorProjection,",
          "9861:   OperatorLessThan,",
          "9862:   OperatorGreaterThan,",
          "9863:   OperatorContains,",
          "9864:   OperatorBetween,",
          "9865:   OperatorLessThanOrEqualTo,",
          "9866:   OperatorGreaterThanOrEqualTo,",
          "9867:   OperatorEqualTo,",
          "9868:   OperatorNotEqualTo,",
          "9869:   OperatorAddition,",
          "9870:   OperatorMultiplication,",
          "9871:   OperatorDivision,",
          "9872:   OperatorSubtraction,",
          "9873:   OperatorMaskAll,",
          "9874:   OperatorMaskFirstN,",
          "9875:   OperatorMaskLastN,",
          "9876:   OperatorValidateNonNull,",
          "9877:   OperatorValidateNonZero,",
          "9878:   OperatorValidateNonNegative,",
          "9879:   OperatorValidateNumeric,",
          "9880:   OperatorNoOp,",
          "9881:  }",
          "9882: }",
          "9884: const (",
          "9886:  OperatorPropertiesKeysValue = \"VALUE\"",
          "9889:  OperatorPropertiesKeysValues = \"VALUES\"",
          "9892:  OperatorPropertiesKeysDataType = \"DATA_TYPE\"",
          "9895:  OperatorPropertiesKeysUpperBound = \"UPPER_BOUND\"",
          "9898:  OperatorPropertiesKeysLowerBound = \"LOWER_BOUND\"",
          "9901:  OperatorPropertiesKeysSourceDataType = \"SOURCE_DATA_TYPE\"",
          "9904:  OperatorPropertiesKeysDestinationDataType = \"DESTINATION_DATA_TYPE\"",
          "9907:  OperatorPropertiesKeysValidationAction = \"VALIDATION_ACTION\"",
          "9910:  OperatorPropertiesKeysMaskValue = \"MASK_VALUE\"",
          "9913:  OperatorPropertiesKeysMaskLength = \"MASK_LENGTH\"",
          "9916:  OperatorPropertiesKeysTruncateLength = \"TRUNCATE_LENGTH\"",
          "9919:  OperatorPropertiesKeysMathOperationFieldsOrder = \"MATH_OPERATION_FIELDS_ORDER\"",
          "9922:  OperatorPropertiesKeysConcatFormat = \"CONCAT_FORMAT\"",
          "9925:  OperatorPropertiesKeysSubfieldCategoryMap = \"SUBFIELD_CATEGORY_MAP\"",
          "9926: )",
          "9929: func OperatorPropertiesKeys_Values() []string {",
          "9930:  return []string{",
          "9931:   OperatorPropertiesKeysValue,",
          "9932:   OperatorPropertiesKeysValues,",
          "9933:   OperatorPropertiesKeysDataType,",
          "9934:   OperatorPropertiesKeysUpperBound,",
          "9935:   OperatorPropertiesKeysLowerBound,",
          "9936:   OperatorPropertiesKeysSourceDataType,",
          "9937:   OperatorPropertiesKeysDestinationDataType,",
          "9938:   OperatorPropertiesKeysValidationAction,",
          "9939:   OperatorPropertiesKeysMaskValue,",
          "9940:   OperatorPropertiesKeysMaskLength,",
          "9941:   OperatorPropertiesKeysTruncateLength,",
          "9942:   OperatorPropertiesKeysMathOperationFieldsOrder,",
          "9943:   OperatorPropertiesKeysConcatFormat,",
          "9944:   OperatorPropertiesKeysSubfieldCategoryMap,",
          "9945:  }",
          "9946: }",
          "9948: const (",
          "9950:  PrefixFormatYear = \"YEAR\"",
          "9953:  PrefixFormatMonth = \"MONTH\"",
          "9956:  PrefixFormatDay = \"DAY\"",
          "9959:  PrefixFormatHour = \"HOUR\"",
          "9962:  PrefixFormatMinute = \"MINUTE\"",
          "9963: )",
          "9966: func PrefixFormat_Values() []string {",
          "9967:  return []string{",
          "9968:   PrefixFormatYear,",
          "9969:   PrefixFormatMonth,",
          "9970:   PrefixFormatDay,",
          "9971:   PrefixFormatHour,",
          "9972:   PrefixFormatMinute,",
          "9973:  }",
          "9974: }",
          "9976: const (",
          "9978:  PrefixTypeFilename = \"FILENAME\"",
          "9981:  PrefixTypePath = \"PATH\"",
          "9984:  PrefixTypePathAndFilename = \"PATH_AND_FILENAME\"",
          "9985: )",
          "9988: func PrefixType_Values() []string {",
          "9989:  return []string{",
          "9990:   PrefixTypeFilename,",
          "9991:   PrefixTypePath,",
          "9992:   PrefixTypePathAndFilename,",
          "9993:  }",
          "9994: }",
          "9996: const (",
          "9998:  S3ConnectorOperatorProjection = \"PROJECTION\"",
          "10001:  S3ConnectorOperatorLessThan = \"LESS_THAN\"",
          "10004:  S3ConnectorOperatorGreaterThan = \"GREATER_THAN\"",
          "10007:  S3ConnectorOperatorBetween = \"BETWEEN\"",
          "10010:  S3ConnectorOperatorLessThanOrEqualTo = \"LESS_THAN_OR_EQUAL_TO\"",
          "10013:  S3ConnectorOperatorGreaterThanOrEqualTo = \"GREATER_THAN_OR_EQUAL_TO\"",
          "10016:  S3ConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "10019:  S3ConnectorOperatorNotEqualTo = \"NOT_EQUAL_TO\"",
          "10022:  S3ConnectorOperatorAddition = \"ADDITION\"",
          "10025:  S3ConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "10028:  S3ConnectorOperatorDivision = \"DIVISION\"",
          "10031:  S3ConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "10034:  S3ConnectorOperatorMaskAll = \"MASK_ALL\"",
          "10037:  S3ConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "10040:  S3ConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "10043:  S3ConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "10046:  S3ConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "10049:  S3ConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "10052:  S3ConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "10055:  S3ConnectorOperatorNoOp = \"NO_OP\"",
          "10056: )",
          "10059: func S3ConnectorOperator_Values() []string {",
          "10060:  return []string{",
          "10061:   S3ConnectorOperatorProjection,",
          "10062:   S3ConnectorOperatorLessThan,",
          "10063:   S3ConnectorOperatorGreaterThan,",
          "10064:   S3ConnectorOperatorBetween,",
          "10065:   S3ConnectorOperatorLessThanOrEqualTo,",
          "10066:   S3ConnectorOperatorGreaterThanOrEqualTo,",
          "10067:   S3ConnectorOperatorEqualTo,",
          "10068:   S3ConnectorOperatorNotEqualTo,",
          "10069:   S3ConnectorOperatorAddition,",
          "10070:   S3ConnectorOperatorMultiplication,",
          "10071:   S3ConnectorOperatorDivision,",
          "10072:   S3ConnectorOperatorSubtraction,",
          "10073:   S3ConnectorOperatorMaskAll,",
          "10074:   S3ConnectorOperatorMaskFirstN,",
          "10075:   S3ConnectorOperatorMaskLastN,",
          "10076:   S3ConnectorOperatorValidateNonNull,",
          "10077:   S3ConnectorOperatorValidateNonZero,",
          "10078:   S3ConnectorOperatorValidateNonNegative,",
          "10079:   S3ConnectorOperatorValidateNumeric,",
          "10080:   S3ConnectorOperatorNoOp,",
          "10081:  }",
          "10082: }",
          "10084: const (",
          "10086:  SalesforceConnectorOperatorProjection = \"PROJECTION\"",
          "10089:  SalesforceConnectorOperatorLessThan = \"LESS_THAN\"",
          "10092:  SalesforceConnectorOperatorContains = \"CONTAINS\"",
          "10095:  SalesforceConnectorOperatorGreaterThan = \"GREATER_THAN\"",
          "10098:  SalesforceConnectorOperatorBetween = \"BETWEEN\"",
          "10101:  SalesforceConnectorOperatorLessThanOrEqualTo = \"LESS_THAN_OR_EQUAL_TO\"",
          "10104:  SalesforceConnectorOperatorGreaterThanOrEqualTo = \"GREATER_THAN_OR_EQUAL_TO\"",
          "10107:  SalesforceConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "10110:  SalesforceConnectorOperatorNotEqualTo = \"NOT_EQUAL_TO\"",
          "10113:  SalesforceConnectorOperatorAddition = \"ADDITION\"",
          "10116:  SalesforceConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "10119:  SalesforceConnectorOperatorDivision = \"DIVISION\"",
          "10122:  SalesforceConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "10125:  SalesforceConnectorOperatorMaskAll = \"MASK_ALL\"",
          "10128:  SalesforceConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "10131:  SalesforceConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "10134:  SalesforceConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "10137:  SalesforceConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "10140:  SalesforceConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "10143:  SalesforceConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "10146:  SalesforceConnectorOperatorNoOp = \"NO_OP\"",
          "10147: )",
          "10150: func SalesforceConnectorOperator_Values() []string {",
          "10151:  return []string{",
          "10152:   SalesforceConnectorOperatorProjection,",
          "10153:   SalesforceConnectorOperatorLessThan,",
          "10154:   SalesforceConnectorOperatorContains,",
          "10155:   SalesforceConnectorOperatorGreaterThan,",
          "10156:   SalesforceConnectorOperatorBetween,",
          "10157:   SalesforceConnectorOperatorLessThanOrEqualTo,",
          "10158:   SalesforceConnectorOperatorGreaterThanOrEqualTo,",
          "10159:   SalesforceConnectorOperatorEqualTo,",
          "10160:   SalesforceConnectorOperatorNotEqualTo,",
          "10161:   SalesforceConnectorOperatorAddition,",
          "10162:   SalesforceConnectorOperatorMultiplication,",
          "10163:   SalesforceConnectorOperatorDivision,",
          "10164:   SalesforceConnectorOperatorSubtraction,",
          "10165:   SalesforceConnectorOperatorMaskAll,",
          "10166:   SalesforceConnectorOperatorMaskFirstN,",
          "10167:   SalesforceConnectorOperatorMaskLastN,",
          "10168:   SalesforceConnectorOperatorValidateNonNull,",
          "10169:   SalesforceConnectorOperatorValidateNonZero,",
          "10170:   SalesforceConnectorOperatorValidateNonNegative,",
          "10171:   SalesforceConnectorOperatorValidateNumeric,",
          "10172:   SalesforceConnectorOperatorNoOp,",
          "10173:  }",
          "10174: }",
          "10176: const (",
          "10178:  ScheduleFrequencyTypeByminute = \"BYMINUTE\"",
          "10181:  ScheduleFrequencyTypeHourly = \"HOURLY\"",
          "10184:  ScheduleFrequencyTypeDaily = \"DAILY\"",
          "10187:  ScheduleFrequencyTypeWeekly = \"WEEKLY\"",
          "10190:  ScheduleFrequencyTypeMonthly = \"MONTHLY\"",
          "10193:  ScheduleFrequencyTypeOnce = \"ONCE\"",
          "10194: )",
          "10197: func ScheduleFrequencyType_Values() []string {",
          "10198:  return []string{",
          "10199:   ScheduleFrequencyTypeByminute,",
          "10200:   ScheduleFrequencyTypeHourly,",
          "10201:   ScheduleFrequencyTypeDaily,",
          "10202:   ScheduleFrequencyTypeWeekly,",
          "10203:   ScheduleFrequencyTypeMonthly,",
          "10204:   ScheduleFrequencyTypeOnce,",
          "10205:  }",
          "10206: }",
          "10208: const (",
          "10210:  ServiceNowConnectorOperatorProjection = \"PROJECTION\"",
          "10213:  ServiceNowConnectorOperatorContains = \"CONTAINS\"",
          "10216:  ServiceNowConnectorOperatorLessThan = \"LESS_THAN\"",
          "10219:  ServiceNowConnectorOperatorGreaterThan = \"GREATER_THAN\"",
          "10222:  ServiceNowConnectorOperatorBetween = \"BETWEEN\"",
          "10225:  ServiceNowConnectorOperatorLessThanOrEqualTo = \"LESS_THAN_OR_EQUAL_TO\"",
          "10228:  ServiceNowConnectorOperatorGreaterThanOrEqualTo = \"GREATER_THAN_OR_EQUAL_TO\"",
          "10231:  ServiceNowConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "10234:  ServiceNowConnectorOperatorNotEqualTo = \"NOT_EQUAL_TO\"",
          "10237:  ServiceNowConnectorOperatorAddition = \"ADDITION\"",
          "10240:  ServiceNowConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "10243:  ServiceNowConnectorOperatorDivision = \"DIVISION\"",
          "10246:  ServiceNowConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "10249:  ServiceNowConnectorOperatorMaskAll = \"MASK_ALL\"",
          "10252:  ServiceNowConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "10255:  ServiceNowConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "10258:  ServiceNowConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "10261:  ServiceNowConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "10264:  ServiceNowConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "10267:  ServiceNowConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "10270:  ServiceNowConnectorOperatorNoOp = \"NO_OP\"",
          "10271: )",
          "10274: func ServiceNowConnectorOperator_Values() []string {",
          "10275:  return []string{",
          "10276:   ServiceNowConnectorOperatorProjection,",
          "10277:   ServiceNowConnectorOperatorContains,",
          "10278:   ServiceNowConnectorOperatorLessThan,",
          "10279:   ServiceNowConnectorOperatorGreaterThan,",
          "10280:   ServiceNowConnectorOperatorBetween,",
          "10281:   ServiceNowConnectorOperatorLessThanOrEqualTo,",
          "10282:   ServiceNowConnectorOperatorGreaterThanOrEqualTo,",
          "10283:   ServiceNowConnectorOperatorEqualTo,",
          "10284:   ServiceNowConnectorOperatorNotEqualTo,",
          "10285:   ServiceNowConnectorOperatorAddition,",
          "10286:   ServiceNowConnectorOperatorMultiplication,",
          "10287:   ServiceNowConnectorOperatorDivision,",
          "10288:   ServiceNowConnectorOperatorSubtraction,",
          "10289:   ServiceNowConnectorOperatorMaskAll,",
          "10290:   ServiceNowConnectorOperatorMaskFirstN,",
          "10291:   ServiceNowConnectorOperatorMaskLastN,",
          "10292:   ServiceNowConnectorOperatorValidateNonNull,",
          "10293:   ServiceNowConnectorOperatorValidateNonZero,",
          "10294:   ServiceNowConnectorOperatorValidateNonNegative,",
          "10295:   ServiceNowConnectorOperatorValidateNumeric,",
          "10296:   ServiceNowConnectorOperatorNoOp,",
          "10297:  }",
          "10298: }",
          "10300: const (",
          "10302:  SingularConnectorOperatorProjection = \"PROJECTION\"",
          "10305:  SingularConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "10308:  SingularConnectorOperatorAddition = \"ADDITION\"",
          "10311:  SingularConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "10314:  SingularConnectorOperatorDivision = \"DIVISION\"",
          "10317:  SingularConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "10320:  SingularConnectorOperatorMaskAll = \"MASK_ALL\"",
          "10323:  SingularConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "10326:  SingularConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "10329:  SingularConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "10332:  SingularConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "10335:  SingularConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "10338:  SingularConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "10341:  SingularConnectorOperatorNoOp = \"NO_OP\"",
          "10342: )",
          "10345: func SingularConnectorOperator_Values() []string {",
          "10346:  return []string{",
          "10347:   SingularConnectorOperatorProjection,",
          "10348:   SingularConnectorOperatorEqualTo,",
          "10349:   SingularConnectorOperatorAddition,",
          "10350:   SingularConnectorOperatorMultiplication,",
          "10351:   SingularConnectorOperatorDivision,",
          "10352:   SingularConnectorOperatorSubtraction,",
          "10353:   SingularConnectorOperatorMaskAll,",
          "10354:   SingularConnectorOperatorMaskFirstN,",
          "10355:   SingularConnectorOperatorMaskLastN,",
          "10356:   SingularConnectorOperatorValidateNonNull,",
          "10357:   SingularConnectorOperatorValidateNonZero,",
          "10358:   SingularConnectorOperatorValidateNonNegative,",
          "10359:   SingularConnectorOperatorValidateNumeric,",
          "10360:   SingularConnectorOperatorNoOp,",
          "10361:  }",
          "10362: }",
          "10364: const (",
          "10366:  SlackConnectorOperatorProjection = \"PROJECTION\"",
          "10369:  SlackConnectorOperatorLessThan = \"LESS_THAN\"",
          "10372:  SlackConnectorOperatorGreaterThan = \"GREATER_THAN\"",
          "10375:  SlackConnectorOperatorBetween = \"BETWEEN\"",
          "10378:  SlackConnectorOperatorLessThanOrEqualTo = \"LESS_THAN_OR_EQUAL_TO\"",
          "10381:  SlackConnectorOperatorGreaterThanOrEqualTo = \"GREATER_THAN_OR_EQUAL_TO\"",
          "10384:  SlackConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "10387:  SlackConnectorOperatorAddition = \"ADDITION\"",
          "10390:  SlackConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "10393:  SlackConnectorOperatorDivision = \"DIVISION\"",
          "10396:  SlackConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "10399:  SlackConnectorOperatorMaskAll = \"MASK_ALL\"",
          "10402:  SlackConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "10405:  SlackConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "10408:  SlackConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "10411:  SlackConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "10414:  SlackConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "10417:  SlackConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "10420:  SlackConnectorOperatorNoOp = \"NO_OP\"",
          "10421: )",
          "10424: func SlackConnectorOperator_Values() []string {",
          "10425:  return []string{",
          "10426:   SlackConnectorOperatorProjection,",
          "10427:   SlackConnectorOperatorLessThan,",
          "10428:   SlackConnectorOperatorGreaterThan,",
          "10429:   SlackConnectorOperatorBetween,",
          "10430:   SlackConnectorOperatorLessThanOrEqualTo,",
          "10431:   SlackConnectorOperatorGreaterThanOrEqualTo,",
          "10432:   SlackConnectorOperatorEqualTo,",
          "10433:   SlackConnectorOperatorAddition,",
          "10434:   SlackConnectorOperatorMultiplication,",
          "10435:   SlackConnectorOperatorDivision,",
          "10436:   SlackConnectorOperatorSubtraction,",
          "10437:   SlackConnectorOperatorMaskAll,",
          "10438:   SlackConnectorOperatorMaskFirstN,",
          "10439:   SlackConnectorOperatorMaskLastN,",
          "10440:   SlackConnectorOperatorValidateNonNull,",
          "10441:   SlackConnectorOperatorValidateNonZero,",
          "10442:   SlackConnectorOperatorValidateNonNegative,",
          "10443:   SlackConnectorOperatorValidateNumeric,",
          "10444:   SlackConnectorOperatorNoOp,",
          "10445:  }",
          "10446: }",
          "10448: const (",
          "10450:  TaskTypeArithmetic = \"Arithmetic\"",
          "10453:  TaskTypeFilter = \"Filter\"",
          "10456:  TaskTypeMap = \"Map\"",
          "10459:  TaskTypeMask = \"Mask\"",
          "10462:  TaskTypeMerge = \"Merge\"",
          "10465:  TaskTypeTruncate = \"Truncate\"",
          "10468:  TaskTypeValidate = \"Validate\"",
          "10469: )",
          "10472: func TaskType_Values() []string {",
          "10473:  return []string{",
          "10474:   TaskTypeArithmetic,",
          "10475:   TaskTypeFilter,",
          "10476:   TaskTypeMap,",
          "10477:   TaskTypeMask,",
          "10478:   TaskTypeMerge,",
          "10479:   TaskTypeTruncate,",
          "10480:   TaskTypeValidate,",
          "10481:  }",
          "10482: }",
          "10484: const (",
          "10486:  TrendmicroConnectorOperatorProjection = \"PROJECTION\"",
          "10489:  TrendmicroConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "10492:  TrendmicroConnectorOperatorAddition = \"ADDITION\"",
          "10495:  TrendmicroConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "10498:  TrendmicroConnectorOperatorDivision = \"DIVISION\"",
          "10501:  TrendmicroConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "10504:  TrendmicroConnectorOperatorMaskAll = \"MASK_ALL\"",
          "10507:  TrendmicroConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "10510:  TrendmicroConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "10513:  TrendmicroConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "10516:  TrendmicroConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "10519:  TrendmicroConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "10522:  TrendmicroConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "10525:  TrendmicroConnectorOperatorNoOp = \"NO_OP\"",
          "10526: )",
          "10529: func TrendmicroConnectorOperator_Values() []string {",
          "10530:  return []string{",
          "10531:   TrendmicroConnectorOperatorProjection,",
          "10532:   TrendmicroConnectorOperatorEqualTo,",
          "10533:   TrendmicroConnectorOperatorAddition,",
          "10534:   TrendmicroConnectorOperatorMultiplication,",
          "10535:   TrendmicroConnectorOperatorDivision,",
          "10536:   TrendmicroConnectorOperatorSubtraction,",
          "10537:   TrendmicroConnectorOperatorMaskAll,",
          "10538:   TrendmicroConnectorOperatorMaskFirstN,",
          "10539:   TrendmicroConnectorOperatorMaskLastN,",
          "10540:   TrendmicroConnectorOperatorValidateNonNull,",
          "10541:   TrendmicroConnectorOperatorValidateNonZero,",
          "10542:   TrendmicroConnectorOperatorValidateNonNegative,",
          "10543:   TrendmicroConnectorOperatorValidateNumeric,",
          "10544:   TrendmicroConnectorOperatorNoOp,",
          "10545:  }",
          "10546: }",
          "10548: const (",
          "10550:  TriggerTypeScheduled = \"Scheduled\"",
          "10553:  TriggerTypeEvent = \"Event\"",
          "10556:  TriggerTypeOnDemand = \"OnDemand\"",
          "10557: )",
          "10560: func TriggerType_Values() []string {",
          "10561:  return []string{",
          "10562:   TriggerTypeScheduled,",
          "10563:   TriggerTypeEvent,",
          "10564:   TriggerTypeOnDemand,",
          "10565:  }",
          "10566: }",
          "10568: const (",
          "10570:  VeevaConnectorOperatorProjection = \"PROJECTION\"",
          "10573:  VeevaConnectorOperatorLessThan = \"LESS_THAN\"",
          "10576:  VeevaConnectorOperatorGreaterThan = \"GREATER_THAN\"",
          "10579:  VeevaConnectorOperatorContains = \"CONTAINS\"",
          "10582:  VeevaConnectorOperatorBetween = \"BETWEEN\"",
          "10585:  VeevaConnectorOperatorLessThanOrEqualTo = \"LESS_THAN_OR_EQUAL_TO\"",
          "10588:  VeevaConnectorOperatorGreaterThanOrEqualTo = \"GREATER_THAN_OR_EQUAL_TO\"",
          "10591:  VeevaConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "10594:  VeevaConnectorOperatorNotEqualTo = \"NOT_EQUAL_TO\"",
          "10597:  VeevaConnectorOperatorAddition = \"ADDITION\"",
          "10600:  VeevaConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "10603:  VeevaConnectorOperatorDivision = \"DIVISION\"",
          "10606:  VeevaConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "10609:  VeevaConnectorOperatorMaskAll = \"MASK_ALL\"",
          "10612:  VeevaConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "10615:  VeevaConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "10618:  VeevaConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "10621:  VeevaConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "10624:  VeevaConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "10627:  VeevaConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "10630:  VeevaConnectorOperatorNoOp = \"NO_OP\"",
          "10631: )",
          "10634: func VeevaConnectorOperator_Values() []string {",
          "10635:  return []string{",
          "10636:   VeevaConnectorOperatorProjection,",
          "10637:   VeevaConnectorOperatorLessThan,",
          "10638:   VeevaConnectorOperatorGreaterThan,",
          "10639:   VeevaConnectorOperatorContains,",
          "10640:   VeevaConnectorOperatorBetween,",
          "10641:   VeevaConnectorOperatorLessThanOrEqualTo,",
          "10642:   VeevaConnectorOperatorGreaterThanOrEqualTo,",
          "10643:   VeevaConnectorOperatorEqualTo,",
          "10644:   VeevaConnectorOperatorNotEqualTo,",
          "10645:   VeevaConnectorOperatorAddition,",
          "10646:   VeevaConnectorOperatorMultiplication,",
          "10647:   VeevaConnectorOperatorDivision,",
          "10648:   VeevaConnectorOperatorSubtraction,",
          "10649:   VeevaConnectorOperatorMaskAll,",
          "10650:   VeevaConnectorOperatorMaskFirstN,",
          "10651:   VeevaConnectorOperatorMaskLastN,",
          "10652:   VeevaConnectorOperatorValidateNonNull,",
          "10653:   VeevaConnectorOperatorValidateNonZero,",
          "10654:   VeevaConnectorOperatorValidateNonNegative,",
          "10655:   VeevaConnectorOperatorValidateNumeric,",
          "10656:   VeevaConnectorOperatorNoOp,",
          "10657:  }",
          "10658: }",
          "10660: const (",
          "10662:  ZendeskConnectorOperatorProjection = \"PROJECTION\"",
          "10665:  ZendeskConnectorOperatorGreaterThan = \"GREATER_THAN\"",
          "10668:  ZendeskConnectorOperatorAddition = \"ADDITION\"",
          "10671:  ZendeskConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "10674:  ZendeskConnectorOperatorDivision = \"DIVISION\"",
          "10677:  ZendeskConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "10680:  ZendeskConnectorOperatorMaskAll = \"MASK_ALL\"",
          "10683:  ZendeskConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "10686:  ZendeskConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "10689:  ZendeskConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "10692:  ZendeskConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "10695:  ZendeskConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "10698:  ZendeskConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "10701:  ZendeskConnectorOperatorNoOp = \"NO_OP\"",
          "10702: )",
          "10705: func ZendeskConnectorOperator_Values() []string {",
          "10706:  return []string{",
          "10707:   ZendeskConnectorOperatorProjection,",
          "10708:   ZendeskConnectorOperatorGreaterThan,",
          "10709:   ZendeskConnectorOperatorAddition,",
          "10710:   ZendeskConnectorOperatorMultiplication,",
          "10711:   ZendeskConnectorOperatorDivision,",
          "10712:   ZendeskConnectorOperatorSubtraction,",
          "10713:   ZendeskConnectorOperatorMaskAll,",
          "10714:   ZendeskConnectorOperatorMaskFirstN,",
          "10715:   ZendeskConnectorOperatorMaskLastN,",
          "10716:   ZendeskConnectorOperatorValidateNonNull,",
          "10717:   ZendeskConnectorOperatorValidateNonZero,",
          "10718:   ZendeskConnectorOperatorValidateNonNegative,",
          "10719:   ZendeskConnectorOperatorValidateNumeric,",
          "10720:   ZendeskConnectorOperatorNoOp,",
          "10721:  }",
          "10722: }",
          "",
          "---------------"
        ],
        "service/appflow/appflowiface/interface.go||service/appflow/appflowiface/interface.go": [
          "File: service/appflow/appflowiface/interface.go -> service/appflow/appflowiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9: package appflowiface",
          "11: import (",
          "12:  \"github.com/aws/aws-sdk-go/aws\"",
          "13:  \"github.com/aws/aws-sdk-go/aws/request\"",
          "14:  \"github.com/aws/aws-sdk-go/service/appflow\"",
          "15: )",
          "62: type AppflowAPI interface {",
          "63:  CreateConnectorProfile(*appflow.CreateConnectorProfileInput) (*appflow.CreateConnectorProfileOutput, error)",
          "64:  CreateConnectorProfileWithContext(aws.Context, *appflow.CreateConnectorProfileInput, ...request.Option) (*appflow.CreateConnectorProfileOutput, error)",
          "65:  CreateConnectorProfileRequest(*appflow.CreateConnectorProfileInput) (*request.Request, *appflow.CreateConnectorProfileOutput)",
          "67:  CreateFlow(*appflow.CreateFlowInput) (*appflow.CreateFlowOutput, error)",
          "68:  CreateFlowWithContext(aws.Context, *appflow.CreateFlowInput, ...request.Option) (*appflow.CreateFlowOutput, error)",
          "69:  CreateFlowRequest(*appflow.CreateFlowInput) (*request.Request, *appflow.CreateFlowOutput)",
          "71:  DeleteConnectorProfile(*appflow.DeleteConnectorProfileInput) (*appflow.DeleteConnectorProfileOutput, error)",
          "72:  DeleteConnectorProfileWithContext(aws.Context, *appflow.DeleteConnectorProfileInput, ...request.Option) (*appflow.DeleteConnectorProfileOutput, error)",
          "73:  DeleteConnectorProfileRequest(*appflow.DeleteConnectorProfileInput) (*request.Request, *appflow.DeleteConnectorProfileOutput)",
          "75:  DeleteFlow(*appflow.DeleteFlowInput) (*appflow.DeleteFlowOutput, error)",
          "76:  DeleteFlowWithContext(aws.Context, *appflow.DeleteFlowInput, ...request.Option) (*appflow.DeleteFlowOutput, error)",
          "77:  DeleteFlowRequest(*appflow.DeleteFlowInput) (*request.Request, *appflow.DeleteFlowOutput)",
          "79:  DescribeConnectorEntity(*appflow.DescribeConnectorEntityInput) (*appflow.DescribeConnectorEntityOutput, error)",
          "80:  DescribeConnectorEntityWithContext(aws.Context, *appflow.DescribeConnectorEntityInput, ...request.Option) (*appflow.DescribeConnectorEntityOutput, error)",
          "81:  DescribeConnectorEntityRequest(*appflow.DescribeConnectorEntityInput) (*request.Request, *appflow.DescribeConnectorEntityOutput)",
          "83:  DescribeConnectorProfiles(*appflow.DescribeConnectorProfilesInput) (*appflow.DescribeConnectorProfilesOutput, error)",
          "84:  DescribeConnectorProfilesWithContext(aws.Context, *appflow.DescribeConnectorProfilesInput, ...request.Option) (*appflow.DescribeConnectorProfilesOutput, error)",
          "85:  DescribeConnectorProfilesRequest(*appflow.DescribeConnectorProfilesInput) (*request.Request, *appflow.DescribeConnectorProfilesOutput)",
          "87:  DescribeConnectorProfilesPages(*appflow.DescribeConnectorProfilesInput, func(*appflow.DescribeConnectorProfilesOutput, bool) bool) error",
          "88:  DescribeConnectorProfilesPagesWithContext(aws.Context, *appflow.DescribeConnectorProfilesInput, func(*appflow.DescribeConnectorProfilesOutput, bool) bool, ...request.Option) error",
          "90:  DescribeConnectors(*appflow.DescribeConnectorsInput) (*appflow.DescribeConnectorsOutput, error)",
          "91:  DescribeConnectorsWithContext(aws.Context, *appflow.DescribeConnectorsInput, ...request.Option) (*appflow.DescribeConnectorsOutput, error)",
          "92:  DescribeConnectorsRequest(*appflow.DescribeConnectorsInput) (*request.Request, *appflow.DescribeConnectorsOutput)",
          "94:  DescribeConnectorsPages(*appflow.DescribeConnectorsInput, func(*appflow.DescribeConnectorsOutput, bool) bool) error",
          "95:  DescribeConnectorsPagesWithContext(aws.Context, *appflow.DescribeConnectorsInput, func(*appflow.DescribeConnectorsOutput, bool) bool, ...request.Option) error",
          "97:  DescribeFlow(*appflow.DescribeFlowInput) (*appflow.DescribeFlowOutput, error)",
          "98:  DescribeFlowWithContext(aws.Context, *appflow.DescribeFlowInput, ...request.Option) (*appflow.DescribeFlowOutput, error)",
          "99:  DescribeFlowRequest(*appflow.DescribeFlowInput) (*request.Request, *appflow.DescribeFlowOutput)",
          "101:  DescribeFlowExecutionRecords(*appflow.DescribeFlowExecutionRecordsInput) (*appflow.DescribeFlowExecutionRecordsOutput, error)",
          "102:  DescribeFlowExecutionRecordsWithContext(aws.Context, *appflow.DescribeFlowExecutionRecordsInput, ...request.Option) (*appflow.DescribeFlowExecutionRecordsOutput, error)",
          "103:  DescribeFlowExecutionRecordsRequest(*appflow.DescribeFlowExecutionRecordsInput) (*request.Request, *appflow.DescribeFlowExecutionRecordsOutput)",
          "105:  DescribeFlowExecutionRecordsPages(*appflow.DescribeFlowExecutionRecordsInput, func(*appflow.DescribeFlowExecutionRecordsOutput, bool) bool) error",
          "106:  DescribeFlowExecutionRecordsPagesWithContext(aws.Context, *appflow.DescribeFlowExecutionRecordsInput, func(*appflow.DescribeFlowExecutionRecordsOutput, bool) bool, ...request.Option) error",
          "108:  ListConnectorEntities(*appflow.ListConnectorEntitiesInput) (*appflow.ListConnectorEntitiesOutput, error)",
          "109:  ListConnectorEntitiesWithContext(aws.Context, *appflow.ListConnectorEntitiesInput, ...request.Option) (*appflow.ListConnectorEntitiesOutput, error)",
          "110:  ListConnectorEntitiesRequest(*appflow.ListConnectorEntitiesInput) (*request.Request, *appflow.ListConnectorEntitiesOutput)",
          "112:  ListFlows(*appflow.ListFlowsInput) (*appflow.ListFlowsOutput, error)",
          "113:  ListFlowsWithContext(aws.Context, *appflow.ListFlowsInput, ...request.Option) (*appflow.ListFlowsOutput, error)",
          "114:  ListFlowsRequest(*appflow.ListFlowsInput) (*request.Request, *appflow.ListFlowsOutput)",
          "116:  ListFlowsPages(*appflow.ListFlowsInput, func(*appflow.ListFlowsOutput, bool) bool) error",
          "117:  ListFlowsPagesWithContext(aws.Context, *appflow.ListFlowsInput, func(*appflow.ListFlowsOutput, bool) bool, ...request.Option) error",
          "119:  ListTagsForResource(*appflow.ListTagsForResourceInput) (*appflow.ListTagsForResourceOutput, error)",
          "120:  ListTagsForResourceWithContext(aws.Context, *appflow.ListTagsForResourceInput, ...request.Option) (*appflow.ListTagsForResourceOutput, error)",
          "121:  ListTagsForResourceRequest(*appflow.ListTagsForResourceInput) (*request.Request, *appflow.ListTagsForResourceOutput)",
          "123:  StartFlow(*appflow.StartFlowInput) (*appflow.StartFlowOutput, error)",
          "124:  StartFlowWithContext(aws.Context, *appflow.StartFlowInput, ...request.Option) (*appflow.StartFlowOutput, error)",
          "125:  StartFlowRequest(*appflow.StartFlowInput) (*request.Request, *appflow.StartFlowOutput)",
          "127:  StopFlow(*appflow.StopFlowInput) (*appflow.StopFlowOutput, error)",
          "128:  StopFlowWithContext(aws.Context, *appflow.StopFlowInput, ...request.Option) (*appflow.StopFlowOutput, error)",
          "129:  StopFlowRequest(*appflow.StopFlowInput) (*request.Request, *appflow.StopFlowOutput)",
          "131:  TagResource(*appflow.TagResourceInput) (*appflow.TagResourceOutput, error)",
          "132:  TagResourceWithContext(aws.Context, *appflow.TagResourceInput, ...request.Option) (*appflow.TagResourceOutput, error)",
          "133:  TagResourceRequest(*appflow.TagResourceInput) (*request.Request, *appflow.TagResourceOutput)",
          "135:  UntagResource(*appflow.UntagResourceInput) (*appflow.UntagResourceOutput, error)",
          "136:  UntagResourceWithContext(aws.Context, *appflow.UntagResourceInput, ...request.Option) (*appflow.UntagResourceOutput, error)",
          "137:  UntagResourceRequest(*appflow.UntagResourceInput) (*request.Request, *appflow.UntagResourceOutput)",
          "139:  UpdateConnectorProfile(*appflow.UpdateConnectorProfileInput) (*appflow.UpdateConnectorProfileOutput, error)",
          "140:  UpdateConnectorProfileWithContext(aws.Context, *appflow.UpdateConnectorProfileInput, ...request.Option) (*appflow.UpdateConnectorProfileOutput, error)",
          "141:  UpdateConnectorProfileRequest(*appflow.UpdateConnectorProfileInput) (*request.Request, *appflow.UpdateConnectorProfileOutput)",
          "143:  UpdateFlow(*appflow.UpdateFlowInput) (*appflow.UpdateFlowOutput, error)",
          "144:  UpdateFlowWithContext(aws.Context, *appflow.UpdateFlowInput, ...request.Option) (*appflow.UpdateFlowOutput, error)",
          "145:  UpdateFlowRequest(*appflow.UpdateFlowInput) (*request.Request, *appflow.UpdateFlowOutput)",
          "146: }",
          "148: var _ AppflowAPI = (*appflow.Appflow)(nil)",
          "",
          "---------------"
        ],
        "service/appflow/doc.go||service/appflow/doc.go": [
          "File: service/appflow/doc.go -> service/appflow/doc.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59: package appflow",
          "",
          "---------------"
        ],
        "service/appflow/errors.go||service/appflow/errors.go": [
          "File: service/appflow/errors.go -> service/appflow/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: package appflow",
          "5: import (",
          "6:  \"github.com/aws/aws-sdk-go/private/protocol\"",
          "7: )",
          "9: const (",
          "17:  ErrCodeConflictException = \"ConflictException\"",
          "23:  ErrCodeConnectorAuthenticationException = \"ConnectorAuthenticationException\"",
          "29:  ErrCodeConnectorServerException = \"ConnectorServerException\"",
          "36:  ErrCodeInternalServerException = \"InternalServerException\"",
          "43:  ErrCodeResourceNotFoundException = \"ResourceNotFoundException\"",
          "50:  ErrCodeServiceQuotaExceededException = \"ServiceQuotaExceededException\"",
          "56:  ErrCodeUnsupportedOperationException = \"UnsupportedOperationException\"",
          "62:  ErrCodeValidationException = \"ValidationException\"",
          "63: )",
          "65: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
          "66:  \"ConflictException\":                newErrorConflictException,",
          "67:  \"ConnectorAuthenticationException\": newErrorConnectorAuthenticationException,",
          "68:  \"ConnectorServerException\":         newErrorConnectorServerException,",
          "69:  \"InternalServerException\":          newErrorInternalServerException,",
          "70:  \"ResourceNotFoundException\":        newErrorResourceNotFoundException,",
          "71:  \"ServiceQuotaExceededException\":    newErrorServiceQuotaExceededException,",
          "72:  \"UnsupportedOperationException\":    newErrorUnsupportedOperationException,",
          "73:  \"ValidationException\":              newErrorValidationException,",
          "74: }",
          "",
          "---------------"
        ],
        "service/appflow/service.go||service/appflow/service.go": [
          "File: service/appflow/service.go -> service/appflow/service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: package appflow",
          "5: import (",
          "6:  \"github.com/aws/aws-sdk-go/aws\"",
          "7:  \"github.com/aws/aws-sdk-go/aws/client\"",
          "8:  \"github.com/aws/aws-sdk-go/aws/client/metadata\"",
          "9:  \"github.com/aws/aws-sdk-go/aws/request\"",
          "10:  \"github.com/aws/aws-sdk-go/aws/signer/v4\"",
          "11:  \"github.com/aws/aws-sdk-go/private/protocol\"",
          "12:  \"github.com/aws/aws-sdk-go/private/protocol/restjson\"",
          "13: )",
          "21: type Appflow struct {",
          "23: }",
          "26: var initClient func(*client.Client)",
          "29: var initRequest func(*request.Request)",
          "32: const (",
          "33:  ServiceName = \"Appflow\" // Name of service.",
          "34:  EndpointsID = \"appflow\" // ID to lookup a service endpoint with.",
          "35:  ServiceID   = \"Appflow\" // ServiceID is a unique identifier of a specific service.",
          "36: )",
          "50: func New(p client.ConfigProvider, cfgs ...*aws.Config) *Appflow {",
          "51:  c := p.ClientConfig(EndpointsID, cfgs...)",
          "52:  if c.SigningNameDerived || len(c.SigningName) == 0 {",
          "53:   c.SigningName = \"appflow\"",
          "54:  }",
          "55:  return newClient(*c.Config, c.Handlers, c.PartitionID, c.Endpoint, c.SigningRegion, c.SigningName)",
          "56: }",
          "59: func newClient(cfg aws.Config, handlers request.Handlers, partitionID, endpoint, signingRegion, signingName string) *Appflow {",
          "60:  svc := &Appflow{",
          "61:   Client: client.New(",
          "62:    cfg,",
          "63:    metadata.ClientInfo{",
          "64:     ServiceName:   ServiceName,",
          "65:     ServiceID:     ServiceID,",
          "66:     SigningName:   signingName,",
          "67:     SigningRegion: signingRegion,",
          "68:     PartitionID:   partitionID,",
          "69:     Endpoint:      endpoint,",
          "70:     APIVersion:    \"2020-08-23\",",
          "71:    },",
          "72:    handlers,",
          "73:   ),",
          "74:  }",
          "77:  svc.Handlers.Sign.PushBackNamed(v4.SignRequestHandler)",
          "78:  svc.Handlers.Build.PushBackNamed(restjson.BuildHandler)",
          "79:  svc.Handlers.Unmarshal.PushBackNamed(restjson.UnmarshalHandler)",
          "80:  svc.Handlers.UnmarshalMeta.PushBackNamed(restjson.UnmarshalMetaHandler)",
          "81:  svc.Handlers.UnmarshalError.PushBackNamed(",
          "82:   protocol.NewUnmarshalErrorHandler(restjson.NewUnmarshalTypedError(exceptionFromCode)).NamedHandler(),",
          "83:  )",
          "86:  if initClient != nil {",
          "87:   initClient(svc.Client)",
          "88:  }",
          "90:  return svc",
          "91: }",
          "95: func (c *Appflow) newRequest(op *request.Operation, params, data interface{}) *request.Request {",
          "96:  req := c.NewRequest(op, params, data)",
          "99:  if initRequest != nil {",
          "100:   initRequest(req)",
          "101:  }",
          "103:  return req",
          "104: }",
          "",
          "---------------"
        ],
        "service/route53resolver/api.go||service/route53resolver/api.go": [
          "File: service/route53resolver/api.go -> service/route53resolver/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "113:  return out, req.Send()",
          "114: }",
          "116: const opAssociateResolverRule = \"AssociateResolverRule\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117: const opAssociateResolverQueryLogConfig = \"AssociateResolverQueryLogConfig\"",
          "143: func (c *Route53Resolver) AssociateResolverQueryLogConfigRequest(input *AssociateResolverQueryLogConfigInput) (req *request.Request, output *AssociateResolverQueryLogConfigOutput) {",
          "144:  op := &request.Operation{",
          "145:   Name:       opAssociateResolverQueryLogConfig,",
          "146:   HTTPMethod: \"POST\",",
          "147:   HTTPPath:   \"/\",",
          "148:  }",
          "150:  if input == nil {",
          "151:   input = &AssociateResolverQueryLogConfigInput{}",
          "152:  }",
          "154:  output = &AssociateResolverQueryLogConfigOutput{}",
          "155:  req = c.newRequest(op, input, output)",
          "156:  return",
          "157: }",
          "207: func (c *Route53Resolver) AssociateResolverQueryLogConfig(input *AssociateResolverQueryLogConfigInput) (*AssociateResolverQueryLogConfigOutput, error) {",
          "208:  req, out := c.AssociateResolverQueryLogConfigRequest(input)",
          "209:  return out, req.Send()",
          "210: }",
          "221: func (c *Route53Resolver) AssociateResolverQueryLogConfigWithContext(ctx aws.Context, input *AssociateResolverQueryLogConfigInput, opts ...request.Option) (*AssociateResolverQueryLogConfigOutput, error) {",
          "222:  req, out := c.AssociateResolverQueryLogConfigRequest(input)",
          "223:  req.SetContext(ctx)",
          "224:  req.ApplyOptions(opts...)",
          "225:  return out, req.Send()",
          "226: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "318:  return out, req.Send()",
          "319: }",
          "321: const opCreateResolverRule = \"CreateResolverRule\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "436: const opCreateResolverQueryLogConfig = \"CreateResolverQueryLogConfig\"",
          "462: func (c *Route53Resolver) CreateResolverQueryLogConfigRequest(input *CreateResolverQueryLogConfigInput) (req *request.Request, output *CreateResolverQueryLogConfigOutput) {",
          "463:  op := &request.Operation{",
          "464:   Name:       opCreateResolverQueryLogConfig,",
          "465:   HTTPMethod: \"POST\",",
          "466:   HTTPPath:   \"/\",",
          "467:  }",
          "469:  if input == nil {",
          "470:   input = &CreateResolverQueryLogConfigInput{}",
          "471:  }",
          "473:  output = &CreateResolverQueryLogConfigOutput{}",
          "474:  req = c.newRequest(op, input, output)",
          "475:  return",
          "476: }",
          "528: func (c *Route53Resolver) CreateResolverQueryLogConfig(input *CreateResolverQueryLogConfigInput) (*CreateResolverQueryLogConfigOutput, error) {",
          "529:  req, out := c.CreateResolverQueryLogConfigRequest(input)",
          "530:  return out, req.Send()",
          "531: }",
          "542: func (c *Route53Resolver) CreateResolverQueryLogConfigWithContext(ctx aws.Context, input *CreateResolverQueryLogConfigInput, opts ...request.Option) (*CreateResolverQueryLogConfigOutput, error) {",
          "543:  req, out := c.CreateResolverQueryLogConfigRequest(input)",
          "544:  req.SetContext(ctx)",
          "545:  req.ApplyOptions(opts...)",
          "546:  return out, req.Send()",
          "547: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "518:  return out, req.Send()",
          "519: }",
          "521: const opDeleteResolverRule = \"DeleteResolverRule\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "748: const opDeleteResolverQueryLogConfig = \"DeleteResolverQueryLogConfig\"",
          "774: func (c *Route53Resolver) DeleteResolverQueryLogConfigRequest(input *DeleteResolverQueryLogConfigInput) (req *request.Request, output *DeleteResolverQueryLogConfigOutput) {",
          "775:  op := &request.Operation{",
          "776:   Name:       opDeleteResolverQueryLogConfig,",
          "777:   HTTPMethod: \"POST\",",
          "778:   HTTPPath:   \"/\",",
          "779:  }",
          "781:  if input == nil {",
          "782:   input = &DeleteResolverQueryLogConfigInput{}",
          "783:  }",
          "785:  output = &DeleteResolverQueryLogConfigOutput{}",
          "786:  req = c.newRequest(op, input, output)",
          "787:  return",
          "788: }",
          "836: func (c *Route53Resolver) DeleteResolverQueryLogConfig(input *DeleteResolverQueryLogConfigInput) (*DeleteResolverQueryLogConfigOutput, error) {",
          "837:  req, out := c.DeleteResolverQueryLogConfigRequest(input)",
          "838:  return out, req.Send()",
          "839: }",
          "850: func (c *Route53Resolver) DeleteResolverQueryLogConfigWithContext(ctx aws.Context, input *DeleteResolverQueryLogConfigInput, opts ...request.Option) (*DeleteResolverQueryLogConfigOutput, error) {",
          "851:  req, out := c.DeleteResolverQueryLogConfigRequest(input)",
          "852:  req.SetContext(ctx)",
          "853:  req.ApplyOptions(opts...)",
          "854:  return out, req.Send()",
          "855: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "709:  return out, req.Send()",
          "710: }",
          "739:  op := &request.Operation{",
          "741:   HTTPMethod: \"POST\",",
          "742:   HTTPPath:   \"/\",",
          "743:  }",
          "745:  if input == nil {",
          "747:  }",
          "750:  req = c.newRequest(op, input, output)",
          "751:  return",
          "752: }",
          "",
          "[Removed Lines]",
          "712: const opDisassociateResolverRule = \"DisassociateResolverRule\"",
          "738: func (c *Route53Resolver) DisassociateResolverRuleRequest(input *DisassociateResolverRuleInput) (req *request.Request, output *DisassociateResolverRuleOutput) {",
          "740:   Name:       opDisassociateResolverRule,",
          "746:   input = &DisassociateResolverRuleInput{}",
          "749:  output = &DisassociateResolverRuleOutput{}",
          "",
          "[Added Lines]",
          "1049: const opDisassociateResolverQueryLogConfig = \"DisassociateResolverQueryLogConfig\"",
          "1075: func (c *Route53Resolver) DisassociateResolverQueryLogConfigRequest(input *DisassociateResolverQueryLogConfigInput) (req *request.Request, output *DisassociateResolverQueryLogConfigOutput) {",
          "1077:   Name:       opDisassociateResolverQueryLogConfig,",
          "1083:   input = &DisassociateResolverQueryLogConfigInput{}",
          "1086:  output = &DisassociateResolverQueryLogConfigOutput{}",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "785:  return out, req.Send()",
          "786: }",
          "",
          "[Removed Lines]",
          "783: func (c *Route53Resolver) DisassociateResolverRule(input *DisassociateResolverRuleInput) (*DisassociateResolverRuleOutput, error) {",
          "784:  req, out := c.DisassociateResolverRuleRequest(input)",
          "",
          "[Added Lines]",
          "1133: func (c *Route53Resolver) DisassociateResolverQueryLogConfig(input *DisassociateResolverQueryLogConfigInput) (*DisassociateResolverQueryLogConfigOutput, error) {",
          "1134:  req, out := c.DisassociateResolverQueryLogConfigRequest(input)",
          "1135:  return out, req.Send()",
          "1136: }",
          "1147: func (c *Route53Resolver) DisassociateResolverQueryLogConfigWithContext(ctx aws.Context, input *DisassociateResolverQueryLogConfigInput, opts ...request.Option) (*DisassociateResolverQueryLogConfigOutput, error) {",
          "1148:  req, out := c.DisassociateResolverQueryLogConfigRequest(input)",
          "1149:  req.SetContext(ctx)",
          "1150:  req.ApplyOptions(opts...)",
          "1151:  return out, req.Send()",
          "1152: }",
          "1154: const opDisassociateResolverRule = \"DisassociateResolverRule\"",
          "1180: func (c *Route53Resolver) DisassociateResolverRuleRequest(input *DisassociateResolverRuleInput) (req *request.Request, output *DisassociateResolverRuleOutput) {",
          "1181:  op := &request.Operation{",
          "1182:   Name:       opDisassociateResolverRule,",
          "1183:   HTTPMethod: \"POST\",",
          "1184:   HTTPPath:   \"/\",",
          "1185:  }",
          "1187:  if input == nil {",
          "1188:   input = &DisassociateResolverRuleInput{}",
          "1189:  }",
          "1191:  output = &DisassociateResolverRuleOutput{}",
          "1192:  req = c.newRequest(op, input, output)",
          "1193:  return",
          "1194: }",
          "1225: func (c *Route53Resolver) DisassociateResolverRule(input *DisassociateResolverRuleInput) (*DisassociateResolverRuleOutput, error) {",
          "1226:  req, out := c.DisassociateResolverRuleRequest(input)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "891:  return out, req.Send()",
          "892: }",
          "921:  op := &request.Operation{",
          "923:   HTTPMethod: \"POST\",",
          "924:   HTTPPath:   \"/\",",
          "925:  }",
          "927:  if input == nil {",
          "929:  }",
          "932:  req = c.newRequest(op, input, output)",
          "933:  return",
          "934: }",
          "",
          "[Removed Lines]",
          "894: const opGetResolverRule = \"GetResolverRule\"",
          "920: func (c *Route53Resolver) GetResolverRuleRequest(input *GetResolverRuleInput) (req *request.Request, output *GetResolverRuleOutput) {",
          "922:   Name:       opGetResolverRule,",
          "928:   input = &GetResolverRuleInput{}",
          "931:  output = &GetResolverRuleOutput{}",
          "",
          "[Added Lines]",
          "1336: const opGetResolverQueryLogConfig = \"GetResolverQueryLogConfig\"",
          "1362: func (c *Route53Resolver) GetResolverQueryLogConfigRequest(input *GetResolverQueryLogConfigInput) (req *request.Request, output *GetResolverQueryLogConfigOutput) {",
          "1364:   Name:       opGetResolverQueryLogConfig,",
          "1370:   input = &GetResolverQueryLogConfigInput{}",
          "1373:  output = &GetResolverQueryLogConfigOutput{}",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "965:  return out, req.Send()",
          "966: }",
          "979:  req.SetContext(ctx)",
          "980:  req.ApplyOptions(opts...)",
          "981:  return out, req.Send()",
          "982: }",
          "1011:  op := &request.Operation{",
          "1013:   HTTPMethod: \"POST\",",
          "1014:   HTTPPath:   \"/\",",
          "1015:  }",
          "1017:  if input == nil {",
          "1019:  }",
          "1022:  req = c.newRequest(op, input, output)",
          "1023:  return",
          "1024: }",
          "",
          "[Removed Lines]",
          "963: func (c *Route53Resolver) GetResolverRule(input *GetResolverRuleInput) (*GetResolverRuleOutput, error) {",
          "964:  req, out := c.GetResolverRuleRequest(input)",
          "977: func (c *Route53Resolver) GetResolverRuleWithContext(ctx aws.Context, input *GetResolverRuleInput, opts ...request.Option) (*GetResolverRuleOutput, error) {",
          "978:  req, out := c.GetResolverRuleRequest(input)",
          "984: const opGetResolverRuleAssociation = \"GetResolverRuleAssociation\"",
          "1010: func (c *Route53Resolver) GetResolverRuleAssociationRequest(input *GetResolverRuleAssociationInput) (req *request.Request, output *GetResolverRuleAssociationOutput) {",
          "1012:   Name:       opGetResolverRuleAssociation,",
          "1018:   input = &GetResolverRuleAssociationInput{}",
          "1021:  output = &GetResolverRuleAssociationOutput{}",
          "",
          "[Added Lines]",
          "1412: func (c *Route53Resolver) GetResolverQueryLogConfig(input *GetResolverQueryLogConfigInput) (*GetResolverQueryLogConfigOutput, error) {",
          "1413:  req, out := c.GetResolverQueryLogConfigRequest(input)",
          "1426: func (c *Route53Resolver) GetResolverQueryLogConfigWithContext(ctx aws.Context, input *GetResolverQueryLogConfigInput, opts ...request.Option) (*GetResolverQueryLogConfigOutput, error) {",
          "1427:  req, out := c.GetResolverQueryLogConfigRequest(input)",
          "1433: const opGetResolverQueryLogConfigAssociation = \"GetResolverQueryLogConfigAssociation\"",
          "1459: func (c *Route53Resolver) GetResolverQueryLogConfigAssociationRequest(input *GetResolverQueryLogConfigAssociationInput) (req *request.Request, output *GetResolverQueryLogConfigAssociationOutput) {",
          "1461:   Name:       opGetResolverQueryLogConfigAssociation,",
          "1467:   input = &GetResolverQueryLogConfigAssociationInput{}",
          "1470:  output = &GetResolverQueryLogConfigAssociationOutput{}",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1054:  return out, req.Send()",
          "1055: }",
          "1068:  req.SetContext(ctx)",
          "1069:  req.ApplyOptions(opts...)",
          "1070:  return out, req.Send()",
          "1071: }",
          "1100:  op := &request.Operation{",
          "1102:   HTTPMethod: \"POST\",",
          "1103:   HTTPPath:   \"/\",",
          "1104:  }",
          "1106:  if input == nil {",
          "1108:  }",
          "1111:  req = c.newRequest(op, input, output)",
          "1112:  return",
          "1113: }",
          "1141:  return out, req.Send()",
          "1142: }",
          "1155:  req.SetContext(ctx)",
          "1156:  req.ApplyOptions(opts...)",
          "1157:  return out, req.Send()",
          "1158: }",
          "1187:  op := &request.Operation{",
          "1189:   HTTPMethod: \"POST\",",
          "1190:   HTTPPath:   \"/\",",
          "1197:  }",
          "1199:  if input == nil {",
          "1201:  }",
          "1204:  req = c.newRequest(op, input, output)",
          "1205:  return",
          "1206: }",
          "",
          "[Removed Lines]",
          "1052: func (c *Route53Resolver) GetResolverRuleAssociation(input *GetResolverRuleAssociationInput) (*GetResolverRuleAssociationOutput, error) {",
          "1053:  req, out := c.GetResolverRuleAssociationRequest(input)",
          "1066: func (c *Route53Resolver) GetResolverRuleAssociationWithContext(ctx aws.Context, input *GetResolverRuleAssociationInput, opts ...request.Option) (*GetResolverRuleAssociationOutput, error) {",
          "1067:  req, out := c.GetResolverRuleAssociationRequest(input)",
          "1073: const opGetResolverRulePolicy = \"GetResolverRulePolicy\"",
          "1099: func (c *Route53Resolver) GetResolverRulePolicyRequest(input *GetResolverRulePolicyInput) (req *request.Request, output *GetResolverRulePolicyOutput) {",
          "1101:   Name:       opGetResolverRulePolicy,",
          "1107:   input = &GetResolverRulePolicyInput{}",
          "1110:  output = &GetResolverRulePolicyOutput{}",
          "1139: func (c *Route53Resolver) GetResolverRulePolicy(input *GetResolverRulePolicyInput) (*GetResolverRulePolicyOutput, error) {",
          "1140:  req, out := c.GetResolverRulePolicyRequest(input)",
          "1153: func (c *Route53Resolver) GetResolverRulePolicyWithContext(ctx aws.Context, input *GetResolverRulePolicyInput, opts ...request.Option) (*GetResolverRulePolicyOutput, error) {",
          "1154:  req, out := c.GetResolverRulePolicyRequest(input)",
          "1160: const opListResolverEndpointIpAddresses = \"ListResolverEndpointIpAddresses\"",
          "1186: func (c *Route53Resolver) ListResolverEndpointIpAddressesRequest(input *ListResolverEndpointIpAddressesInput) (req *request.Request, output *ListResolverEndpointIpAddressesOutput) {",
          "1188:   Name:       opListResolverEndpointIpAddresses,",
          "1191:   Paginator: &request.Paginator{",
          "1192:    InputTokens:     []string{\"NextToken\"},",
          "1193:    OutputTokens:    []string{\"NextToken\"},",
          "1194:    LimitToken:      \"MaxResults\",",
          "1195:    TruncationToken: \"\",",
          "1196:   },",
          "1200:   input = &ListResolverEndpointIpAddressesInput{}",
          "1203:  output = &ListResolverEndpointIpAddressesOutput{}",
          "",
          "[Added Lines]",
          "1509: func (c *Route53Resolver) GetResolverQueryLogConfigAssociation(input *GetResolverQueryLogConfigAssociationInput) (*GetResolverQueryLogConfigAssociationOutput, error) {",
          "1510:  req, out := c.GetResolverQueryLogConfigAssociationRequest(input)",
          "1523: func (c *Route53Resolver) GetResolverQueryLogConfigAssociationWithContext(ctx aws.Context, input *GetResolverQueryLogConfigAssociationInput, opts ...request.Option) (*GetResolverQueryLogConfigAssociationOutput, error) {",
          "1524:  req, out := c.GetResolverQueryLogConfigAssociationRequest(input)",
          "1530: const opGetResolverQueryLogConfigPolicy = \"GetResolverQueryLogConfigPolicy\"",
          "1556: func (c *Route53Resolver) GetResolverQueryLogConfigPolicyRequest(input *GetResolverQueryLogConfigPolicyInput) (req *request.Request, output *GetResolverQueryLogConfigPolicyOutput) {",
          "1558:   Name:       opGetResolverQueryLogConfigPolicy,",
          "1564:   input = &GetResolverQueryLogConfigPolicyInput{}",
          "1567:  output = &GetResolverQueryLogConfigPolicyOutput{}",
          "1603: func (c *Route53Resolver) GetResolverQueryLogConfigPolicy(input *GetResolverQueryLogConfigPolicyInput) (*GetResolverQueryLogConfigPolicyOutput, error) {",
          "1604:  req, out := c.GetResolverQueryLogConfigPolicyRequest(input)",
          "1617: func (c *Route53Resolver) GetResolverQueryLogConfigPolicyWithContext(ctx aws.Context, input *GetResolverQueryLogConfigPolicyInput, opts ...request.Option) (*GetResolverQueryLogConfigPolicyOutput, error) {",
          "1618:  req, out := c.GetResolverQueryLogConfigPolicyRequest(input)",
          "1624: const opGetResolverRule = \"GetResolverRule\"",
          "1650: func (c *Route53Resolver) GetResolverRuleRequest(input *GetResolverRuleInput) (req *request.Request, output *GetResolverRuleOutput) {",
          "1652:   Name:       opGetResolverRule,",
          "1658:   input = &GetResolverRuleInput{}",
          "1661:  output = &GetResolverRuleOutput{}",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1238:  return out, req.Send()",
          "1239: }",
          "1252:  req.SetContext(ctx)",
          "1253:  req.ApplyOptions(opts...)",
          "1254:  return out, req.Send()",
          "1255: }",
          "1295:    req.ApplyOptions(opts...)",
          "1296:    return req, nil",
          "1297:   },",
          "1298:  }",
          "1300:  for p.Next() {",
          "1302:    break",
          "1303:   }",
          "1304:  }",
          "",
          "[Removed Lines]",
          "1236: func (c *Route53Resolver) ListResolverEndpointIpAddresses(input *ListResolverEndpointIpAddressesInput) (*ListResolverEndpointIpAddressesOutput, error) {",
          "1237:  req, out := c.ListResolverEndpointIpAddressesRequest(input)",
          "1250: func (c *Route53Resolver) ListResolverEndpointIpAddressesWithContext(ctx aws.Context, input *ListResolverEndpointIpAddressesInput, opts ...request.Option) (*ListResolverEndpointIpAddressesOutput, error) {",
          "1251:  req, out := c.ListResolverEndpointIpAddressesRequest(input)",
          "1274: func (c *Route53Resolver) ListResolverEndpointIpAddressesPages(input *ListResolverEndpointIpAddressesInput, fn func(*ListResolverEndpointIpAddressesOutput, bool) bool) error {",
          "1275:  return c.ListResolverEndpointIpAddressesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1276: }",
          "1285: func (c *Route53Resolver) ListResolverEndpointIpAddressesPagesWithContext(ctx aws.Context, input *ListResolverEndpointIpAddressesInput, fn func(*ListResolverEndpointIpAddressesOutput, bool) bool, opts ...request.Option) error {",
          "1286:  p := request.Pagination{",
          "1287:   NewRequest: func() (*request.Request, error) {",
          "1288:    var inCpy *ListResolverEndpointIpAddressesInput",
          "1289:    if input != nil {",
          "1290:     tmp := *input",
          "1291:     inCpy = &tmp",
          "1292:    }",
          "1293:    req, _ := c.ListResolverEndpointIpAddressesRequest(inCpy)",
          "1294:    req.SetContext(ctx)",
          "1301:   if !fn(p.Page().(*ListResolverEndpointIpAddressesOutput), !p.HasNextPage()) {",
          "",
          "[Added Lines]",
          "1693: func (c *Route53Resolver) GetResolverRule(input *GetResolverRuleInput) (*GetResolverRuleOutput, error) {",
          "1694:  req, out := c.GetResolverRuleRequest(input)",
          "1707: func (c *Route53Resolver) GetResolverRuleWithContext(ctx aws.Context, input *GetResolverRuleInput, opts ...request.Option) (*GetResolverRuleOutput, error) {",
          "1708:  req, out := c.GetResolverRuleRequest(input)",
          "1714: const opGetResolverRuleAssociation = \"GetResolverRuleAssociation\"",
          "1740: func (c *Route53Resolver) GetResolverRuleAssociationRequest(input *GetResolverRuleAssociationInput) (req *request.Request, output *GetResolverRuleAssociationOutput) {",
          "1741:  op := &request.Operation{",
          "1742:   Name:       opGetResolverRuleAssociation,",
          "1743:   HTTPMethod: \"POST\",",
          "1744:   HTTPPath:   \"/\",",
          "1745:  }",
          "1747:  if input == nil {",
          "1748:   input = &GetResolverRuleAssociationInput{}",
          "1749:  }",
          "1751:  output = &GetResolverRuleAssociationOutput{}",
          "1752:  req = c.newRequest(op, input, output)",
          "1753:  return",
          "1754: }",
          "1783: func (c *Route53Resolver) GetResolverRuleAssociation(input *GetResolverRuleAssociationInput) (*GetResolverRuleAssociationOutput, error) {",
          "1784:  req, out := c.GetResolverRuleAssociationRequest(input)",
          "1785:  return out, req.Send()",
          "1786: }",
          "1797: func (c *Route53Resolver) GetResolverRuleAssociationWithContext(ctx aws.Context, input *GetResolverRuleAssociationInput, opts ...request.Option) (*GetResolverRuleAssociationOutput, error) {",
          "1798:  req, out := c.GetResolverRuleAssociationRequest(input)",
          "1799:  req.SetContext(ctx)",
          "1800:  req.ApplyOptions(opts...)",
          "1801:  return out, req.Send()",
          "1802: }",
          "1804: const opGetResolverRulePolicy = \"GetResolverRulePolicy\"",
          "1830: func (c *Route53Resolver) GetResolverRulePolicyRequest(input *GetResolverRulePolicyInput) (req *request.Request, output *GetResolverRulePolicyOutput) {",
          "1831:  op := &request.Operation{",
          "1832:   Name:       opGetResolverRulePolicy,",
          "1833:   HTTPMethod: \"POST\",",
          "1834:   HTTPPath:   \"/\",",
          "1835:  }",
          "1837:  if input == nil {",
          "1838:   input = &GetResolverRulePolicyInput{}",
          "1839:  }",
          "1841:  output = &GetResolverRulePolicyOutput{}",
          "1842:  req = c.newRequest(op, input, output)",
          "1843:  return",
          "1844: }",
          "1870: func (c *Route53Resolver) GetResolverRulePolicy(input *GetResolverRulePolicyInput) (*GetResolverRulePolicyOutput, error) {",
          "1871:  req, out := c.GetResolverRulePolicyRequest(input)",
          "1872:  return out, req.Send()",
          "1873: }",
          "1884: func (c *Route53Resolver) GetResolverRulePolicyWithContext(ctx aws.Context, input *GetResolverRulePolicyInput, opts ...request.Option) (*GetResolverRulePolicyOutput, error) {",
          "1885:  req, out := c.GetResolverRulePolicyRequest(input)",
          "1886:  req.SetContext(ctx)",
          "1887:  req.ApplyOptions(opts...)",
          "1888:  return out, req.Send()",
          "1889: }",
          "1891: const opListResolverEndpointIpAddresses = \"ListResolverEndpointIpAddresses\"",
          "1917: func (c *Route53Resolver) ListResolverEndpointIpAddressesRequest(input *ListResolverEndpointIpAddressesInput) (req *request.Request, output *ListResolverEndpointIpAddressesOutput) {",
          "1918:  op := &request.Operation{",
          "1919:   Name:       opListResolverEndpointIpAddresses,",
          "1920:   HTTPMethod: \"POST\",",
          "1921:   HTTPPath:   \"/\",",
          "1922:   Paginator: &request.Paginator{",
          "1923:    InputTokens:     []string{\"NextToken\"},",
          "1924:    OutputTokens:    []string{\"NextToken\"},",
          "1925:    LimitToken:      \"MaxResults\",",
          "1926:    TruncationToken: \"\",",
          "1927:   },",
          "1928:  }",
          "1930:  if input == nil {",
          "1931:   input = &ListResolverEndpointIpAddressesInput{}",
          "1932:  }",
          "1934:  output = &ListResolverEndpointIpAddressesOutput{}",
          "1935:  req = c.newRequest(op, input, output)",
          "1936:  return",
          "1937: }",
          "1967: func (c *Route53Resolver) ListResolverEndpointIpAddresses(input *ListResolverEndpointIpAddressesInput) (*ListResolverEndpointIpAddressesOutput, error) {",
          "1968:  req, out := c.ListResolverEndpointIpAddressesRequest(input)",
          "1969:  return out, req.Send()",
          "1970: }",
          "1981: func (c *Route53Resolver) ListResolverEndpointIpAddressesWithContext(ctx aws.Context, input *ListResolverEndpointIpAddressesInput, opts ...request.Option) (*ListResolverEndpointIpAddressesOutput, error) {",
          "1982:  req, out := c.ListResolverEndpointIpAddressesRequest(input)",
          "1983:  req.SetContext(ctx)",
          "1984:  req.ApplyOptions(opts...)",
          "1985:  return out, req.Send()",
          "1986: }",
          "2005: func (c *Route53Resolver) ListResolverEndpointIpAddressesPages(input *ListResolverEndpointIpAddressesInput, fn func(*ListResolverEndpointIpAddressesOutput, bool) bool) error {",
          "2006:  return c.ListResolverEndpointIpAddressesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2007: }",
          "2016: func (c *Route53Resolver) ListResolverEndpointIpAddressesPagesWithContext(ctx aws.Context, input *ListResolverEndpointIpAddressesInput, fn func(*ListResolverEndpointIpAddressesOutput, bool) bool, opts ...request.Option) error {",
          "2017:  p := request.Pagination{",
          "2018:   NewRequest: func() (*request.Request, error) {",
          "2019:    var inCpy *ListResolverEndpointIpAddressesInput",
          "2020:    if input != nil {",
          "2021:     tmp := *input",
          "2022:     inCpy = &tmp",
          "2023:    }",
          "2024:    req, _ := c.ListResolverEndpointIpAddressesRequest(inCpy)",
          "2025:    req.SetContext(ctx)",
          "2026:    req.ApplyOptions(opts...)",
          "2027:    return req, nil",
          "2028:   },",
          "2029:  }",
          "2031:  for p.Next() {",
          "2032:   if !fn(p.Page().(*ListResolverEndpointIpAddressesOutput), !p.HasNextPage()) {",
          "2033:    break",
          "2034:   }",
          "2035:  }",
          "2037:  return p.Err()",
          "2038: }",
          "2040: const opListResolverEndpoints = \"ListResolverEndpoints\"",
          "2066: func (c *Route53Resolver) ListResolverEndpointsRequest(input *ListResolverEndpointsInput) (req *request.Request, output *ListResolverEndpointsOutput) {",
          "2067:  op := &request.Operation{",
          "2068:   Name:       opListResolverEndpoints,",
          "2069:   HTTPMethod: \"POST\",",
          "2070:   HTTPPath:   \"/\",",
          "2071:   Paginator: &request.Paginator{",
          "2072:    InputTokens:     []string{\"NextToken\"},",
          "2073:    OutputTokens:    []string{\"NextToken\"},",
          "2074:    LimitToken:      \"MaxResults\",",
          "2075:    TruncationToken: \"\",",
          "2076:   },",
          "2077:  }",
          "2079:  if input == nil {",
          "2080:   input = &ListResolverEndpointsInput{}",
          "2081:  }",
          "2083:  output = &ListResolverEndpointsOutput{}",
          "2084:  req = c.newRequest(op, input, output)",
          "2085:  return",
          "2086: }",
          "2117: func (c *Route53Resolver) ListResolverEndpoints(input *ListResolverEndpointsInput) (*ListResolverEndpointsOutput, error) {",
          "2118:  req, out := c.ListResolverEndpointsRequest(input)",
          "2119:  return out, req.Send()",
          "2120: }",
          "2131: func (c *Route53Resolver) ListResolverEndpointsWithContext(ctx aws.Context, input *ListResolverEndpointsInput, opts ...request.Option) (*ListResolverEndpointsOutput, error) {",
          "2132:  req, out := c.ListResolverEndpointsRequest(input)",
          "2133:  req.SetContext(ctx)",
          "2134:  req.ApplyOptions(opts...)",
          "2135:  return out, req.Send()",
          "2136: }",
          "2155: func (c *Route53Resolver) ListResolverEndpointsPages(input *ListResolverEndpointsInput, fn func(*ListResolverEndpointsOutput, bool) bool) error {",
          "2156:  return c.ListResolverEndpointsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2157: }",
          "2166: func (c *Route53Resolver) ListResolverEndpointsPagesWithContext(ctx aws.Context, input *ListResolverEndpointsInput, fn func(*ListResolverEndpointsOutput, bool) bool, opts ...request.Option) error {",
          "2167:  p := request.Pagination{",
          "2168:   NewRequest: func() (*request.Request, error) {",
          "2169:    var inCpy *ListResolverEndpointsInput",
          "2170:    if input != nil {",
          "2171:     tmp := *input",
          "2172:     inCpy = &tmp",
          "2173:    }",
          "2174:    req, _ := c.ListResolverEndpointsRequest(inCpy)",
          "2175:    req.SetContext(ctx)",
          "2176:    req.ApplyOptions(opts...)",
          "2177:    return req, nil",
          "2178:   },",
          "2179:  }",
          "2181:  for p.Next() {",
          "2182:   if !fn(p.Page().(*ListResolverEndpointsOutput), !p.HasNextPage()) {",
          "2183:    break",
          "2184:   }",
          "2185:  }",
          "2187:  return p.Err()",
          "2188: }",
          "2190: const opListResolverQueryLogConfigAssociations = \"ListResolverQueryLogConfigAssociations\"",
          "2216: func (c *Route53Resolver) ListResolverQueryLogConfigAssociationsRequest(input *ListResolverQueryLogConfigAssociationsInput) (req *request.Request, output *ListResolverQueryLogConfigAssociationsOutput) {",
          "2217:  op := &request.Operation{",
          "2218:   Name:       opListResolverQueryLogConfigAssociations,",
          "2219:   HTTPMethod: \"POST\",",
          "2220:   HTTPPath:   \"/\",",
          "2221:   Paginator: &request.Paginator{",
          "2222:    InputTokens:     []string{\"NextToken\"},",
          "2223:    OutputTokens:    []string{\"NextToken\"},",
          "2224:    LimitToken:      \"MaxResults\",",
          "2225:    TruncationToken: \"\",",
          "2226:   },",
          "2227:  }",
          "2229:  if input == nil {",
          "2230:   input = &ListResolverQueryLogConfigAssociationsInput{}",
          "2231:  }",
          "2233:  output = &ListResolverQueryLogConfigAssociationsOutput{}",
          "2234:  req = c.newRequest(op, input, output)",
          "2235:  return",
          "2236: }",
          "2271: func (c *Route53Resolver) ListResolverQueryLogConfigAssociations(input *ListResolverQueryLogConfigAssociationsInput) (*ListResolverQueryLogConfigAssociationsOutput, error) {",
          "2272:  req, out := c.ListResolverQueryLogConfigAssociationsRequest(input)",
          "2273:  return out, req.Send()",
          "2274: }",
          "2285: func (c *Route53Resolver) ListResolverQueryLogConfigAssociationsWithContext(ctx aws.Context, input *ListResolverQueryLogConfigAssociationsInput, opts ...request.Option) (*ListResolverQueryLogConfigAssociationsOutput, error) {",
          "2286:  req, out := c.ListResolverQueryLogConfigAssociationsRequest(input)",
          "2287:  req.SetContext(ctx)",
          "2288:  req.ApplyOptions(opts...)",
          "2289:  return out, req.Send()",
          "2290: }",
          "2309: func (c *Route53Resolver) ListResolverQueryLogConfigAssociationsPages(input *ListResolverQueryLogConfigAssociationsInput, fn func(*ListResolverQueryLogConfigAssociationsOutput, bool) bool) error {",
          "2310:  return c.ListResolverQueryLogConfigAssociationsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2311: }",
          "2320: func (c *Route53Resolver) ListResolverQueryLogConfigAssociationsPagesWithContext(ctx aws.Context, input *ListResolverQueryLogConfigAssociationsInput, fn func(*ListResolverQueryLogConfigAssociationsOutput, bool) bool, opts ...request.Option) error {",
          "2321:  p := request.Pagination{",
          "2322:   NewRequest: func() (*request.Request, error) {",
          "2323:    var inCpy *ListResolverQueryLogConfigAssociationsInput",
          "2324:    if input != nil {",
          "2325:     tmp := *input",
          "2326:     inCpy = &tmp",
          "2327:    }",
          "2328:    req, _ := c.ListResolverQueryLogConfigAssociationsRequest(inCpy)",
          "2329:    req.SetContext(ctx)",
          "2336:   if !fn(p.Page().(*ListResolverQueryLogConfigAssociationsOutput), !p.HasNextPage()) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1306:  return p.Err()",
          "1307: }",
          "1336:  op := &request.Operation{",
          "1338:   HTTPMethod: \"POST\",",
          "1339:   HTTPPath:   \"/\",",
          "1340:   Paginator: &request.Paginator{",
          "",
          "[Removed Lines]",
          "1309: const opListResolverEndpoints = \"ListResolverEndpoints\"",
          "1335: func (c *Route53Resolver) ListResolverEndpointsRequest(input *ListResolverEndpointsInput) (req *request.Request, output *ListResolverEndpointsOutput) {",
          "1337:   Name:       opListResolverEndpoints,",
          "",
          "[Added Lines]",
          "2344: const opListResolverQueryLogConfigs = \"ListResolverQueryLogConfigs\"",
          "2370: func (c *Route53Resolver) ListResolverQueryLogConfigsRequest(input *ListResolverQueryLogConfigsInput) (req *request.Request, output *ListResolverQueryLogConfigsOutput) {",
          "2372:   Name:       opListResolverQueryLogConfigs,",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1346:  }",
          "1348:  if input == nil {",
          "1350:  }",
          "1353:  req = c.newRequest(op, input, output)",
          "1354:  return",
          "1355: }",
          "",
          "[Removed Lines]",
          "1349:   input = &ListResolverEndpointsInput{}",
          "1352:  output = &ListResolverEndpointsOutput{}",
          "",
          "[Added Lines]",
          "2384:   input = &ListResolverQueryLogConfigsInput{}",
          "2387:  output = &ListResolverQueryLogConfigsOutput{}",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1388:  return out, req.Send()",
          "1389: }",
          "1402:  req.SetContext(ctx)",
          "1403:  req.ApplyOptions(opts...)",
          "1404:  return out, req.Send()",
          "1405: }",
          "1426: }",
          "1436:  p := request.Pagination{",
          "1437:   NewRequest: func() (*request.Request, error) {",
          "1439:    if input != nil {",
          "1440:     tmp := *input",
          "1441:     inCpy = &tmp",
          "1442:    }",
          "1444:    req.SetContext(ctx)",
          "1445:    req.ApplyOptions(opts...)",
          "1446:    return req, nil",
          "",
          "[Removed Lines]",
          "1386: func (c *Route53Resolver) ListResolverEndpoints(input *ListResolverEndpointsInput) (*ListResolverEndpointsOutput, error) {",
          "1387:  req, out := c.ListResolverEndpointsRequest(input)",
          "1400: func (c *Route53Resolver) ListResolverEndpointsWithContext(ctx aws.Context, input *ListResolverEndpointsInput, opts ...request.Option) (*ListResolverEndpointsOutput, error) {",
          "1401:  req, out := c.ListResolverEndpointsRequest(input)",
          "1424: func (c *Route53Resolver) ListResolverEndpointsPages(input *ListResolverEndpointsInput, fn func(*ListResolverEndpointsOutput, bool) bool) error {",
          "1425:  return c.ListResolverEndpointsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1435: func (c *Route53Resolver) ListResolverEndpointsPagesWithContext(ctx aws.Context, input *ListResolverEndpointsInput, fn func(*ListResolverEndpointsOutput, bool) bool, opts ...request.Option) error {",
          "1438:    var inCpy *ListResolverEndpointsInput",
          "1443:    req, _ := c.ListResolverEndpointsRequest(inCpy)",
          "",
          "[Added Lines]",
          "2426: func (c *Route53Resolver) ListResolverQueryLogConfigs(input *ListResolverQueryLogConfigsInput) (*ListResolverQueryLogConfigsOutput, error) {",
          "2427:  req, out := c.ListResolverQueryLogConfigsRequest(input)",
          "2440: func (c *Route53Resolver) ListResolverQueryLogConfigsWithContext(ctx aws.Context, input *ListResolverQueryLogConfigsInput, opts ...request.Option) (*ListResolverQueryLogConfigsOutput, error) {",
          "2441:  req, out := c.ListResolverQueryLogConfigsRequest(input)",
          "2464: func (c *Route53Resolver) ListResolverQueryLogConfigsPages(input *ListResolverQueryLogConfigsInput, fn func(*ListResolverQueryLogConfigsOutput, bool) bool) error {",
          "2465:  return c.ListResolverQueryLogConfigsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2475: func (c *Route53Resolver) ListResolverQueryLogConfigsPagesWithContext(ctx aws.Context, input *ListResolverQueryLogConfigsInput, fn func(*ListResolverQueryLogConfigsOutput, bool) bool, opts ...request.Option) error {",
          "2478:    var inCpy *ListResolverQueryLogConfigsInput",
          "2483:    req, _ := c.ListResolverQueryLogConfigsRequest(inCpy)",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1448:  }",
          "1450:  for p.Next() {",
          "1452:    break",
          "1453:   }",
          "1454:  }",
          "",
          "[Removed Lines]",
          "1451:   if !fn(p.Page().(*ListResolverEndpointsOutput), !p.HasNextPage()) {",
          "",
          "[Added Lines]",
          "2491:   if !fn(p.Page().(*ListResolverQueryLogConfigsOutput), !p.HasNextPage()) {",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1786:   Name:       opListTagsForResource,",
          "1787:   HTTPMethod: \"POST\",",
          "1788:   HTTPPath:   \"/\",",
          "1789:  }",
          "1791:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2829:   Paginator: &request.Paginator{",
          "2830:    InputTokens:     []string{\"NextToken\"},",
          "2831:    OutputTokens:    []string{\"NextToken\"},",
          "2832:    LimitToken:      \"MaxResults\",",
          "2833:    TruncationToken: \"\",",
          "2834:   },",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1833:  return out, req.Send()",
          "1834: }",
          "1847:  req.SetContext(ctx)",
          "1848:  req.ApplyOptions(opts...)",
          "1849:  return out, req.Send()",
          "",
          "[Removed Lines]",
          "1831: func (c *Route53Resolver) ListTagsForResource(input *ListTagsForResourceInput) (*ListTagsForResourceOutput, error) {",
          "1832:  req, out := c.ListTagsForResourceRequest(input)",
          "1845: func (c *Route53Resolver) ListTagsForResourceWithContext(ctx aws.Context, input *ListTagsForResourceInput, opts ...request.Option) (*ListTagsForResourceOutput, error) {",
          "1846:  req, out := c.ListTagsForResourceRequest(input)",
          "",
          "[Added Lines]",
          "2877: func (c *Route53Resolver) ListTagsForResource(input *ListTagsForResourceInput) (*ListTagsForResourceOutput, error) {",
          "2878:  req, out := c.ListTagsForResourceRequest(input)",
          "2879:  return out, req.Send()",
          "2880: }",
          "2891: func (c *Route53Resolver) ListTagsForResourceWithContext(ctx aws.Context, input *ListTagsForResourceInput, opts ...request.Option) (*ListTagsForResourceOutput, error) {",
          "2892:  req, out := c.ListTagsForResourceRequest(input)",
          "2893:  req.SetContext(ctx)",
          "2894:  req.ApplyOptions(opts...)",
          "2895:  return out, req.Send()",
          "2896: }",
          "2915: func (c *Route53Resolver) ListTagsForResourcePages(input *ListTagsForResourceInput, fn func(*ListTagsForResourceOutput, bool) bool) error {",
          "2916:  return c.ListTagsForResourcePagesWithContext(aws.BackgroundContext(), input, fn)",
          "2917: }",
          "2926: func (c *Route53Resolver) ListTagsForResourcePagesWithContext(ctx aws.Context, input *ListTagsForResourceInput, fn func(*ListTagsForResourceOutput, bool) bool, opts ...request.Option) error {",
          "2927:  p := request.Pagination{",
          "2928:   NewRequest: func() (*request.Request, error) {",
          "2929:    var inCpy *ListTagsForResourceInput",
          "2930:    if input != nil {",
          "2931:     tmp := *input",
          "2932:     inCpy = &tmp",
          "2933:    }",
          "2934:    req, _ := c.ListTagsForResourceRequest(inCpy)",
          "2935:    req.SetContext(ctx)",
          "2936:    req.ApplyOptions(opts...)",
          "2937:    return req, nil",
          "2938:   },",
          "2939:  }",
          "2941:  for p.Next() {",
          "2942:   if !fn(p.Page().(*ListTagsForResourceOutput), !p.HasNextPage()) {",
          "2943:    break",
          "2944:   }",
          "2945:  }",
          "2947:  return p.Err()",
          "2948: }",
          "2950: const opPutResolverQueryLogConfigPolicy = \"PutResolverQueryLogConfigPolicy\"",
          "2976: func (c *Route53Resolver) PutResolverQueryLogConfigPolicyRequest(input *PutResolverQueryLogConfigPolicyInput) (req *request.Request, output *PutResolverQueryLogConfigPolicyOutput) {",
          "2977:  op := &request.Operation{",
          "2978:   Name:       opPutResolverQueryLogConfigPolicy,",
          "2979:   HTTPMethod: \"POST\",",
          "2980:   HTTPPath:   \"/\",",
          "2981:  }",
          "2983:  if input == nil {",
          "2984:   input = &PutResolverQueryLogConfigPolicyInput{}",
          "2985:  }",
          "2987:  output = &PutResolverQueryLogConfigPolicyOutput{}",
          "2988:  req = c.newRequest(op, input, output)",
          "2989:  return",
          "2990: }",
          "3026: func (c *Route53Resolver) PutResolverQueryLogConfigPolicy(input *PutResolverQueryLogConfigPolicyInput) (*PutResolverQueryLogConfigPolicyOutput, error) {",
          "3027:  req, out := c.PutResolverQueryLogConfigPolicyRequest(input)",
          "3040: func (c *Route53Resolver) PutResolverQueryLogConfigPolicyWithContext(ctx aws.Context, input *PutResolverQueryLogConfigPolicyInput, opts ...request.Option) (*PutResolverQueryLogConfigPolicyOutput, error) {",
          "3041:  req, out := c.PutResolverQueryLogConfigPolicyRequest(input)",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2312:  return out, req.Send()",
          "2313: }",
          "2315: type AssociateResolverEndpointIpAddressInput struct {",
          "2316:  _ struct{} `type:\"structure\"`",
          "2323:  IpAddress *IpAddressUpdate `type:\"structure\" required:\"true\"`",
          "2328:  ResolverEndpointId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3519: type AccessDeniedException struct {",
          "3520:  _            struct{}                  `type:\"structure\"`",
          "3521:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "3523:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "3524: }",
          "3527: func (s AccessDeniedException) String() string {",
          "3528:  return awsutil.Prettify(s)",
          "3529: }",
          "3532: func (s AccessDeniedException) GoString() string {",
          "3533:  return s.String()",
          "3534: }",
          "3536: func newErrorAccessDeniedException(v protocol.ResponseMetadata) error {",
          "3537:  return &AccessDeniedException{",
          "3538:   RespMetadata: v,",
          "3539:  }",
          "3540: }",
          "3543: func (s *AccessDeniedException) Code() string {",
          "3544:  return \"AccessDeniedException\"",
          "3545: }",
          "3548: func (s *AccessDeniedException) Message() string {",
          "3549:  if s.Message_ != nil {",
          "3550:   return *s.Message_",
          "3551:  }",
          "3552:  return \"\"",
          "3553: }",
          "3556: func (s *AccessDeniedException) OrigErr() error {",
          "3557:  return nil",
          "3558: }",
          "3560: func (s *AccessDeniedException) Error() string {",
          "3561:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "3562: }",
          "3565: func (s *AccessDeniedException) StatusCode() int {",
          "3566:  return s.RespMetadata.StatusCode",
          "3567: }",
          "3570: func (s *AccessDeniedException) RequestID() string {",
          "3571:  return s.RespMetadata.RequestID",
          "3572: }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2397:  return s",
          "2398: }",
          "2400: type AssociateResolverRuleInput struct {",
          "2401:  _ struct{} `type:\"structure\"`",
          "2405:  Name *string `type:\"string\"`",
          "2411:  ResolverRuleId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "2416:  VPCId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3659: type AssociateResolverQueryLogConfigInput struct {",
          "3660:  _ struct{} `type:\"structure\"`",
          "3666:  ResolverQueryLogConfigId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "3674:  ResourceId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "3675: }",
          "3678: func (s AssociateResolverQueryLogConfigInput) String() string {",
          "3679:  return awsutil.Prettify(s)",
          "3680: }",
          "3683: func (s AssociateResolverQueryLogConfigInput) GoString() string {",
          "3684:  return s.String()",
          "3685: }",
          "3688: func (s *AssociateResolverQueryLogConfigInput) Validate() error {",
          "3689:  invalidParams := request.ErrInvalidParams{Context: \"AssociateResolverQueryLogConfigInput\"}",
          "3690:  if s.ResolverQueryLogConfigId == nil {",
          "3691:   invalidParams.Add(request.NewErrParamRequired(\"ResolverQueryLogConfigId\"))",
          "3692:  }",
          "3693:  if s.ResolverQueryLogConfigId != nil && len(*s.ResolverQueryLogConfigId) < 1 {",
          "3694:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverQueryLogConfigId\", 1))",
          "3695:  }",
          "3696:  if s.ResourceId == nil {",
          "3697:   invalidParams.Add(request.NewErrParamRequired(\"ResourceId\"))",
          "3698:  }",
          "3699:  if s.ResourceId != nil && len(*s.ResourceId) < 1 {",
          "3700:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceId\", 1))",
          "3701:  }",
          "3703:  if invalidParams.Len() > 0 {",
          "3704:   return invalidParams",
          "3705:  }",
          "3706:  return nil",
          "3707: }",
          "3710: func (s *AssociateResolverQueryLogConfigInput) SetResolverQueryLogConfigId(v string) *AssociateResolverQueryLogConfigInput {",
          "3711:  s.ResolverQueryLogConfigId = &v",
          "3712:  return s",
          "3713: }",
          "3716: func (s *AssociateResolverQueryLogConfigInput) SetResourceId(v string) *AssociateResolverQueryLogConfigInput {",
          "3717:  s.ResourceId = &v",
          "3718:  return s",
          "3719: }",
          "3721: type AssociateResolverQueryLogConfigOutput struct {",
          "3722:  _ struct{} `type:\"structure\"`",
          "3726:  ResolverQueryLogConfigAssociation *ResolverQueryLogConfigAssociation `type:\"structure\"`",
          "3727: }",
          "3730: func (s AssociateResolverQueryLogConfigOutput) String() string {",
          "3731:  return awsutil.Prettify(s)",
          "3732: }",
          "3735: func (s AssociateResolverQueryLogConfigOutput) GoString() string {",
          "3736:  return s.String()",
          "3737: }",
          "3740: func (s *AssociateResolverQueryLogConfigOutput) SetResolverQueryLogConfigAssociation(v *ResolverQueryLogConfigAssociation) *AssociateResolverQueryLogConfigOutput {",
          "3741:  s.ResolverQueryLogConfigAssociation = v",
          "3742:  return s",
          "3743: }",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2575:    }",
          "2576:   }",
          "2577:  }",
          "2579:  if invalidParams.Len() > 0 {",
          "2580:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3925:  if s.Tags != nil {",
          "3926:   for i, v := range s.Tags {",
          "3927:    if v == nil {",
          "3928:     continue",
          "3929:    }",
          "3930:    if err := v.Validate(); err != nil {",
          "3931:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "3932:    }",
          "3933:   }",
          "3934:  }",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2642:  return s",
          "2643: }",
          "2645: type CreateResolverRuleInput struct {",
          "2646:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4002: type CreateResolverQueryLogConfigInput struct {",
          "4003:  _ struct{} `type:\"structure\"`",
          "4008:  CreatorRequestId *string `min:\"1\" type:\"string\" idempotencyToken:\"true\"`",
          "4022:  DestinationArn *string `min:\"1\" type:\"string\" required:\"true\"`",
          "4027:  Name *string `min:\"1\" type:\"string\" required:\"true\"`",
          "4031:  Tags []*Tag `type:\"list\"`",
          "4032: }",
          "4035: func (s CreateResolverQueryLogConfigInput) String() string {",
          "4036:  return awsutil.Prettify(s)",
          "4037: }",
          "4040: func (s CreateResolverQueryLogConfigInput) GoString() string {",
          "4041:  return s.String()",
          "4042: }",
          "4045: func (s *CreateResolverQueryLogConfigInput) Validate() error {",
          "4046:  invalidParams := request.ErrInvalidParams{Context: \"CreateResolverQueryLogConfigInput\"}",
          "4047:  if s.CreatorRequestId != nil && len(*s.CreatorRequestId) < 1 {",
          "4048:   invalidParams.Add(request.NewErrParamMinLen(\"CreatorRequestId\", 1))",
          "4049:  }",
          "4050:  if s.DestinationArn == nil {",
          "4051:   invalidParams.Add(request.NewErrParamRequired(\"DestinationArn\"))",
          "4052:  }",
          "4053:  if s.DestinationArn != nil && len(*s.DestinationArn) < 1 {",
          "4054:   invalidParams.Add(request.NewErrParamMinLen(\"DestinationArn\", 1))",
          "4055:  }",
          "4056:  if s.Name == nil {",
          "4057:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "4058:  }",
          "4059:  if s.Name != nil && len(*s.Name) < 1 {",
          "4060:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "4061:  }",
          "4062:  if s.Tags != nil {",
          "4063:   for i, v := range s.Tags {",
          "4064:    if v == nil {",
          "4065:     continue",
          "4066:    }",
          "4067:    if err := v.Validate(); err != nil {",
          "4068:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "4069:    }",
          "4070:   }",
          "4071:  }",
          "4073:  if invalidParams.Len() > 0 {",
          "4074:   return invalidParams",
          "4075:  }",
          "4076:  return nil",
          "4077: }",
          "4080: func (s *CreateResolverQueryLogConfigInput) SetCreatorRequestId(v string) *CreateResolverQueryLogConfigInput {",
          "4081:  s.CreatorRequestId = &v",
          "4082:  return s",
          "4083: }",
          "4086: func (s *CreateResolverQueryLogConfigInput) SetDestinationArn(v string) *CreateResolverQueryLogConfigInput {",
          "4087:  s.DestinationArn = &v",
          "4088:  return s",
          "4089: }",
          "4092: func (s *CreateResolverQueryLogConfigInput) SetName(v string) *CreateResolverQueryLogConfigInput {",
          "4093:  s.Name = &v",
          "4094:  return s",
          "4095: }",
          "4098: func (s *CreateResolverQueryLogConfigInput) SetTags(v []*Tag) *CreateResolverQueryLogConfigInput {",
          "4099:  s.Tags = v",
          "4100:  return s",
          "4101: }",
          "4103: type CreateResolverQueryLogConfigOutput struct {",
          "4104:  _ struct{} `type:\"structure\"`",
          "4108:  ResolverQueryLogConfig *ResolverQueryLogConfig `type:\"structure\"`",
          "4109: }",
          "4112: func (s CreateResolverQueryLogConfigOutput) String() string {",
          "4113:  return awsutil.Prettify(s)",
          "4114: }",
          "4117: func (s CreateResolverQueryLogConfigOutput) GoString() string {",
          "4118:  return s.String()",
          "4119: }",
          "4122: func (s *CreateResolverQueryLogConfigOutput) SetResolverQueryLogConfig(v *ResolverQueryLogConfig) *CreateResolverQueryLogConfigOutput {",
          "4123:  s.ResolverQueryLogConfig = v",
          "4124:  return s",
          "4125: }",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2715:  if s.TargetIps != nil && len(s.TargetIps) < 1 {",
          "2716:   invalidParams.Add(request.NewErrParamMinLen(\"TargetIps\", 1))",
          "2717:  }",
          "2718:  if s.TargetIps != nil {",
          "2719:   for i, v := range s.TargetIps {",
          "2720:    if v == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4215:  if s.Tags != nil {",
          "4216:   for i, v := range s.Tags {",
          "4217:    if v == nil {",
          "4218:     continue",
          "4219:    }",
          "4220:    if err := v.Validate(); err != nil {",
          "4221:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "4222:    }",
          "4223:   }",
          "4224:  }",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2842: type DeleteResolverEndpointOutput struct {",
          "2843:  _ struct{} `type:\"structure\"`",
          "2848: }",
          "2852:  return awsutil.Prettify(s)",
          "2853: }",
          "2857:  return s.String()",
          "2858: }",
          "2863:  return s",
          "2864: }",
          "2866: type DeleteResolverRuleInput struct {",
          "2867:  _ struct{} `type:\"structure\"`",
          "2872:  ResolverRuleId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "2847:  ResolverEndpoint *ResolverEndpoint `type:\"structure\"`",
          "2851: func (s DeleteResolverEndpointOutput) String() string {",
          "2856: func (s DeleteResolverEndpointOutput) GoString() string {",
          "2861: func (s *DeleteResolverEndpointOutput) SetResolverEndpoint(v *ResolverEndpoint) *DeleteResolverEndpointOutput {",
          "2862:  s.ResolverEndpoint = v",
          "",
          "[Added Lines]",
          "4354:  ResolverEndpoint *ResolverEndpoint `type:\"structure\"`",
          "4355: }",
          "4358: func (s DeleteResolverEndpointOutput) String() string {",
          "4359:  return awsutil.Prettify(s)",
          "4360: }",
          "4363: func (s DeleteResolverEndpointOutput) GoString() string {",
          "4364:  return s.String()",
          "4365: }",
          "4368: func (s *DeleteResolverEndpointOutput) SetResolverEndpoint(v *ResolverEndpoint) *DeleteResolverEndpointOutput {",
          "4369:  s.ResolverEndpoint = v",
          "4370:  return s",
          "4371: }",
          "4373: type DeleteResolverQueryLogConfigInput struct {",
          "4374:  _ struct{} `type:\"structure\"`",
          "4379:  ResolverQueryLogConfigId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "4380: }",
          "4383: func (s DeleteResolverQueryLogConfigInput) String() string {",
          "4384:  return awsutil.Prettify(s)",
          "4385: }",
          "4388: func (s DeleteResolverQueryLogConfigInput) GoString() string {",
          "4389:  return s.String()",
          "4390: }",
          "4393: func (s *DeleteResolverQueryLogConfigInput) Validate() error {",
          "4394:  invalidParams := request.ErrInvalidParams{Context: \"DeleteResolverQueryLogConfigInput\"}",
          "4395:  if s.ResolverQueryLogConfigId == nil {",
          "4396:   invalidParams.Add(request.NewErrParamRequired(\"ResolverQueryLogConfigId\"))",
          "4397:  }",
          "4398:  if s.ResolverQueryLogConfigId != nil && len(*s.ResolverQueryLogConfigId) < 1 {",
          "4399:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverQueryLogConfigId\", 1))",
          "4400:  }",
          "4402:  if invalidParams.Len() > 0 {",
          "4403:   return invalidParams",
          "4404:  }",
          "4405:  return nil",
          "4406: }",
          "4409: func (s *DeleteResolverQueryLogConfigInput) SetResolverQueryLogConfigId(v string) *DeleteResolverQueryLogConfigInput {",
          "4410:  s.ResolverQueryLogConfigId = &v",
          "4411:  return s",
          "4412: }",
          "4414: type DeleteResolverQueryLogConfigOutput struct {",
          "4415:  _ struct{} `type:\"structure\"`",
          "4419:  ResolverQueryLogConfig *ResolverQueryLogConfig `type:\"structure\"`",
          "4423: func (s DeleteResolverQueryLogConfigOutput) String() string {",
          "4428: func (s DeleteResolverQueryLogConfigOutput) GoString() string {",
          "4433: func (s *DeleteResolverQueryLogConfigOutput) SetResolverQueryLogConfig(v *ResolverQueryLogConfig) *DeleteResolverQueryLogConfigOutput {",
          "4434:  s.ResolverQueryLogConfig = v",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "3012:  return s",
          "3013: }",
          "3015: type DisassociateResolverRuleInput struct {",
          "3016:  _ struct{} `type:\"structure\"`",
          "3022:  ResolverRuleId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "3027:  VPCId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4587: type DisassociateResolverQueryLogConfigInput struct {",
          "4588:  _ struct{} `type:\"structure\"`",
          "4594:  ResolverQueryLogConfigId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "4600:  ResourceId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "4601: }",
          "4604: func (s DisassociateResolverQueryLogConfigInput) String() string {",
          "4605:  return awsutil.Prettify(s)",
          "4606: }",
          "4609: func (s DisassociateResolverQueryLogConfigInput) GoString() string {",
          "4610:  return s.String()",
          "4611: }",
          "4614: func (s *DisassociateResolverQueryLogConfigInput) Validate() error {",
          "4615:  invalidParams := request.ErrInvalidParams{Context: \"DisassociateResolverQueryLogConfigInput\"}",
          "4616:  if s.ResolverQueryLogConfigId == nil {",
          "4617:   invalidParams.Add(request.NewErrParamRequired(\"ResolverQueryLogConfigId\"))",
          "4618:  }",
          "4619:  if s.ResolverQueryLogConfigId != nil && len(*s.ResolverQueryLogConfigId) < 1 {",
          "4620:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverQueryLogConfigId\", 1))",
          "4621:  }",
          "4622:  if s.ResourceId == nil {",
          "4623:   invalidParams.Add(request.NewErrParamRequired(\"ResourceId\"))",
          "4624:  }",
          "4625:  if s.ResourceId != nil && len(*s.ResourceId) < 1 {",
          "4626:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceId\", 1))",
          "4627:  }",
          "4629:  if invalidParams.Len() > 0 {",
          "4630:   return invalidParams",
          "4631:  }",
          "4632:  return nil",
          "4633: }",
          "4636: func (s *DisassociateResolverQueryLogConfigInput) SetResolverQueryLogConfigId(v string) *DisassociateResolverQueryLogConfigInput {",
          "4637:  s.ResolverQueryLogConfigId = &v",
          "4638:  return s",
          "4639: }",
          "4642: func (s *DisassociateResolverQueryLogConfigInput) SetResourceId(v string) *DisassociateResolverQueryLogConfigInput {",
          "4643:  s.ResourceId = &v",
          "4644:  return s",
          "4645: }",
          "4647: type DisassociateResolverQueryLogConfigOutput struct {",
          "4648:  _ struct{} `type:\"structure\"`",
          "4652:  ResolverQueryLogConfigAssociation *ResolverQueryLogConfigAssociation `type:\"structure\"`",
          "4653: }",
          "4656: func (s DisassociateResolverQueryLogConfigOutput) String() string {",
          "4657:  return awsutil.Prettify(s)",
          "4658: }",
          "4661: func (s DisassociateResolverQueryLogConfigOutput) GoString() string {",
          "4662:  return s.String()",
          "4663: }",
          "4666: func (s *DisassociateResolverQueryLogConfigOutput) SetResolverQueryLogConfigAssociation(v *ResolverQueryLogConfigAssociation) *DisassociateResolverQueryLogConfigOutput {",
          "4667:  s.ResolverQueryLogConfigAssociation = v",
          "4668:  return s",
          "4669: }",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "3137:  return nil",
          "3138: }",
          "3144: }",
          "3149:  return s",
          "3150: }",
          "3153:  _ struct{} `type:\"structure\"`",
          "3159: }",
          "3163:  return awsutil.Prettify(s)",
          "3164: }",
          "3168:  return s.String()",
          "3169: }",
          "3176:  }",
          "3179:  }",
          "3181:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "3141: func (s *Filter) SetName(v string) *Filter {",
          "3142:  s.Name = &v",
          "3143:  return s",
          "3147: func (s *Filter) SetValues(v []*string) *Filter {",
          "3148:  s.Values = v",
          "3152: type GetResolverEndpointInput struct {",
          "3158:  ResolverEndpointId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "3162: func (s GetResolverEndpointInput) String() string {",
          "3167: func (s GetResolverEndpointInput) GoString() string {",
          "3172: func (s *GetResolverEndpointInput) Validate() error {",
          "3173:  invalidParams := request.ErrInvalidParams{Context: \"GetResolverEndpointInput\"}",
          "3174:  if s.ResolverEndpointId == nil {",
          "3175:   invalidParams.Add(request.NewErrParamRequired(\"ResolverEndpointId\"))",
          "3177:  if s.ResolverEndpointId != nil && len(*s.ResolverEndpointId) < 1 {",
          "3178:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverEndpointId\", 1))",
          "",
          "[Added Lines]",
          "4946: func (s *Filter) SetName(v string) *Filter {",
          "4947:  s.Name = &v",
          "4948:  return s",
          "4949: }",
          "4952: func (s *Filter) SetValues(v []*string) *Filter {",
          "4953:  s.Values = v",
          "4954:  return s",
          "4955: }",
          "4957: type GetResolverEndpointInput struct {",
          "4958:  _ struct{} `type:\"structure\"`",
          "4963:  ResolverEndpointId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "4964: }",
          "4967: func (s GetResolverEndpointInput) String() string {",
          "4968:  return awsutil.Prettify(s)",
          "4969: }",
          "4972: func (s GetResolverEndpointInput) GoString() string {",
          "4973:  return s.String()",
          "4974: }",
          "4977: func (s *GetResolverEndpointInput) Validate() error {",
          "4978:  invalidParams := request.ErrInvalidParams{Context: \"GetResolverEndpointInput\"}",
          "4979:  if s.ResolverEndpointId == nil {",
          "4980:   invalidParams.Add(request.NewErrParamRequired(\"ResolverEndpointId\"))",
          "4981:  }",
          "4982:  if s.ResolverEndpointId != nil && len(*s.ResolverEndpointId) < 1 {",
          "4983:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverEndpointId\", 1))",
          "4984:  }",
          "4986:  if invalidParams.Len() > 0 {",
          "4987:   return invalidParams",
          "4988:  }",
          "4989:  return nil",
          "4990: }",
          "4993: func (s *GetResolverEndpointInput) SetResolverEndpointId(v string) *GetResolverEndpointInput {",
          "4994:  s.ResolverEndpointId = &v",
          "4995:  return s",
          "4996: }",
          "4998: type GetResolverEndpointOutput struct {",
          "4999:  _ struct{} `type:\"structure\"`",
          "5003:  ResolverEndpoint *ResolverEndpoint `type:\"structure\"`",
          "5004: }",
          "5007: func (s GetResolverEndpointOutput) String() string {",
          "5008:  return awsutil.Prettify(s)",
          "5009: }",
          "5012: func (s GetResolverEndpointOutput) GoString() string {",
          "5013:  return s.String()",
          "5014: }",
          "5017: func (s *GetResolverEndpointOutput) SetResolverEndpoint(v *ResolverEndpoint) *GetResolverEndpointOutput {",
          "5018:  s.ResolverEndpoint = v",
          "5019:  return s",
          "5020: }",
          "5022: type GetResolverQueryLogConfigAssociationInput struct {",
          "5023:  _ struct{} `type:\"structure\"`",
          "5029:  ResolverQueryLogConfigAssociationId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "5030: }",
          "5033: func (s GetResolverQueryLogConfigAssociationInput) String() string {",
          "5034:  return awsutil.Prettify(s)",
          "5035: }",
          "5038: func (s GetResolverQueryLogConfigAssociationInput) GoString() string {",
          "5039:  return s.String()",
          "5040: }",
          "5043: func (s *GetResolverQueryLogConfigAssociationInput) Validate() error {",
          "5044:  invalidParams := request.ErrInvalidParams{Context: \"GetResolverQueryLogConfigAssociationInput\"}",
          "5045:  if s.ResolverQueryLogConfigAssociationId == nil {",
          "5046:   invalidParams.Add(request.NewErrParamRequired(\"ResolverQueryLogConfigAssociationId\"))",
          "5047:  }",
          "5048:  if s.ResolverQueryLogConfigAssociationId != nil && len(*s.ResolverQueryLogConfigAssociationId) < 1 {",
          "5049:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverQueryLogConfigAssociationId\", 1))",
          "5050:  }",
          "5052:  if invalidParams.Len() > 0 {",
          "5053:   return invalidParams",
          "5054:  }",
          "5055:  return nil",
          "5056: }",
          "5059: func (s *GetResolverQueryLogConfigAssociationInput) SetResolverQueryLogConfigAssociationId(v string) *GetResolverQueryLogConfigAssociationInput {",
          "5060:  s.ResolverQueryLogConfigAssociationId = &v",
          "5061:  return s",
          "5062: }",
          "5064: type GetResolverQueryLogConfigAssociationOutput struct {",
          "5065:  _ struct{} `type:\"structure\"`",
          "5069:  ResolverQueryLogConfigAssociation *ResolverQueryLogConfigAssociation `type:\"structure\"`",
          "5070: }",
          "5073: func (s GetResolverQueryLogConfigAssociationOutput) String() string {",
          "5074:  return awsutil.Prettify(s)",
          "5075: }",
          "5078: func (s GetResolverQueryLogConfigAssociationOutput) GoString() string {",
          "5079:  return s.String()",
          "5080: }",
          "5083: func (s *GetResolverQueryLogConfigAssociationOutput) SetResolverQueryLogConfigAssociation(v *ResolverQueryLogConfigAssociation) *GetResolverQueryLogConfigAssociationOutput {",
          "5084:  s.ResolverQueryLogConfigAssociation = v",
          "5085:  return s",
          "5086: }",
          "5088: type GetResolverQueryLogConfigInput struct {",
          "5089:  _ struct{} `type:\"structure\"`",
          "5095:  ResolverQueryLogConfigId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "5096: }",
          "5099: func (s GetResolverQueryLogConfigInput) String() string {",
          "5100:  return awsutil.Prettify(s)",
          "5101: }",
          "5104: func (s GetResolverQueryLogConfigInput) GoString() string {",
          "5105:  return s.String()",
          "5106: }",
          "5109: func (s *GetResolverQueryLogConfigInput) Validate() error {",
          "5110:  invalidParams := request.ErrInvalidParams{Context: \"GetResolverQueryLogConfigInput\"}",
          "5111:  if s.ResolverQueryLogConfigId == nil {",
          "5112:   invalidParams.Add(request.NewErrParamRequired(\"ResolverQueryLogConfigId\"))",
          "5113:  }",
          "5114:  if s.ResolverQueryLogConfigId != nil && len(*s.ResolverQueryLogConfigId) < 1 {",
          "5115:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverQueryLogConfigId\", 1))",
          "5116:  }",
          "5118:  if invalidParams.Len() > 0 {",
          "5119:   return invalidParams",
          "5120:  }",
          "5121:  return nil",
          "5122: }",
          "5125: func (s *GetResolverQueryLogConfigInput) SetResolverQueryLogConfigId(v string) *GetResolverQueryLogConfigInput {",
          "5126:  s.ResolverQueryLogConfigId = &v",
          "5127:  return s",
          "5128: }",
          "5130: type GetResolverQueryLogConfigOutput struct {",
          "5131:  _ struct{} `type:\"structure\"`",
          "5135:  ResolverQueryLogConfig *ResolverQueryLogConfig `type:\"structure\"`",
          "5136: }",
          "5139: func (s GetResolverQueryLogConfigOutput) String() string {",
          "5140:  return awsutil.Prettify(s)",
          "5141: }",
          "5144: func (s GetResolverQueryLogConfigOutput) GoString() string {",
          "5145:  return s.String()",
          "5149: func (s *GetResolverQueryLogConfigOutput) SetResolverQueryLogConfig(v *ResolverQueryLogConfig) *GetResolverQueryLogConfigOutput {",
          "5150:  s.ResolverQueryLogConfig = v",
          "5154: type GetResolverQueryLogConfigPolicyInput struct {",
          "5161:  Arn *string `min:\"1\" type:\"string\" required:\"true\"`",
          "5165: func (s GetResolverQueryLogConfigPolicyInput) String() string {",
          "5170: func (s GetResolverQueryLogConfigPolicyInput) GoString() string {",
          "5175: func (s *GetResolverQueryLogConfigPolicyInput) Validate() error {",
          "5176:  invalidParams := request.ErrInvalidParams{Context: \"GetResolverQueryLogConfigPolicyInput\"}",
          "5177:  if s.Arn == nil {",
          "5178:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "5180:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "5181:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "3184:  return nil",
          "3185: }",
          "3190:  return s",
          "3191: }",
          "3194:  _ struct{} `type:\"structure\"`",
          "3199: }",
          "3203:  return awsutil.Prettify(s)",
          "3204: }",
          "3208:  return s.String()",
          "3209: }",
          "3214:  return s",
          "3215: }",
          "3217: type GetResolverRuleAssociationInput struct {",
          "3218:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "3188: func (s *GetResolverEndpointInput) SetResolverEndpointId(v string) *GetResolverEndpointInput {",
          "3189:  s.ResolverEndpointId = &v",
          "3193: type GetResolverEndpointOutput struct {",
          "3198:  ResolverEndpoint *ResolverEndpoint `type:\"structure\"`",
          "3202: func (s GetResolverEndpointOutput) String() string {",
          "3207: func (s GetResolverEndpointOutput) GoString() string {",
          "3212: func (s *GetResolverEndpointOutput) SetResolverEndpoint(v *ResolverEndpoint) *GetResolverEndpointOutput {",
          "3213:  s.ResolverEndpoint = v",
          "",
          "[Added Lines]",
          "5191: func (s *GetResolverQueryLogConfigPolicyInput) SetArn(v string) *GetResolverQueryLogConfigPolicyInput {",
          "5192:  s.Arn = &v",
          "5196: type GetResolverQueryLogConfigPolicyOutput struct {",
          "5201:  ResolverQueryLogConfigPolicy *string `type:\"string\"`",
          "5205: func (s GetResolverQueryLogConfigPolicyOutput) String() string {",
          "5210: func (s GetResolverQueryLogConfigPolicyOutput) GoString() string {",
          "5215: func (s *GetResolverQueryLogConfigPolicyOutput) SetResolverQueryLogConfigPolicy(v string) *GetResolverQueryLogConfigPolicyOutput {",
          "5216:  s.ResolverQueryLogConfigPolicy = &v",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "3991:  return \"\"",
          "3992: }",
          "3997: }",
          "4001: }",
          "4006: }",
          "4011: }",
          "4014:  _ struct{} `type:\"structure\"`",
          "4019:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "4027:  NextToken *string `type:\"string\"`",
          "4033: }",
          "4037:  return awsutil.Prettify(s)",
          "4038: }",
          "4042:  return s.String()",
          "4043: }",
          "4048:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "4049:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "4050:  }",
          "4053:  }",
          "4056:  }",
          "4058:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "3995: func (s *LimitExceededException) OrigErr() error {",
          "3996:  return nil",
          "3999: func (s *LimitExceededException) Error() string {",
          "4000:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "4004: func (s *LimitExceededException) StatusCode() int {",
          "4005:  return s.RespMetadata.StatusCode",
          "4009: func (s *LimitExceededException) RequestID() string {",
          "4010:  return s.RespMetadata.RequestID",
          "4013: type ListResolverEndpointIpAddressesInput struct {",
          "4032:  ResolverEndpointId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "4036: func (s ListResolverEndpointIpAddressesInput) String() string {",
          "4041: func (s ListResolverEndpointIpAddressesInput) GoString() string {",
          "4046: func (s *ListResolverEndpointIpAddressesInput) Validate() error {",
          "4047:  invalidParams := request.ErrInvalidParams{Context: \"ListResolverEndpointIpAddressesInput\"}",
          "4051:  if s.ResolverEndpointId == nil {",
          "4052:   invalidParams.Add(request.NewErrParamRequired(\"ResolverEndpointId\"))",
          "4054:  if s.ResolverEndpointId != nil && len(*s.ResolverEndpointId) < 1 {",
          "4055:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverEndpointId\", 1))",
          "",
          "[Added Lines]",
          "6002: func (s *LimitExceededException) OrigErr() error {",
          "6003:  return nil",
          "6004: }",
          "6006: func (s *LimitExceededException) Error() string {",
          "6007:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "6008: }",
          "6011: func (s *LimitExceededException) StatusCode() int {",
          "6012:  return s.RespMetadata.StatusCode",
          "6013: }",
          "6016: func (s *LimitExceededException) RequestID() string {",
          "6017:  return s.RespMetadata.RequestID",
          "6018: }",
          "6020: type ListResolverEndpointIpAddressesInput struct {",
          "6021:  _ struct{} `type:\"structure\"`",
          "6026:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "6034:  NextToken *string `type:\"string\"`",
          "6039:  ResolverEndpointId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "6040: }",
          "6043: func (s ListResolverEndpointIpAddressesInput) String() string {",
          "6044:  return awsutil.Prettify(s)",
          "6045: }",
          "6048: func (s ListResolverEndpointIpAddressesInput) GoString() string {",
          "6049:  return s.String()",
          "6050: }",
          "6053: func (s *ListResolverEndpointIpAddressesInput) Validate() error {",
          "6054:  invalidParams := request.ErrInvalidParams{Context: \"ListResolverEndpointIpAddressesInput\"}",
          "6055:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "6056:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "6057:  }",
          "6058:  if s.ResolverEndpointId == nil {",
          "6059:   invalidParams.Add(request.NewErrParamRequired(\"ResolverEndpointId\"))",
          "6060:  }",
          "6061:  if s.ResolverEndpointId != nil && len(*s.ResolverEndpointId) < 1 {",
          "6062:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverEndpointId\", 1))",
          "6063:  }",
          "6065:  if invalidParams.Len() > 0 {",
          "6066:   return invalidParams",
          "6067:  }",
          "6068:  return nil",
          "6069: }",
          "6072: func (s *ListResolverEndpointIpAddressesInput) SetMaxResults(v int64) *ListResolverEndpointIpAddressesInput {",
          "6073:  s.MaxResults = &v",
          "6074:  return s",
          "6075: }",
          "6078: func (s *ListResolverEndpointIpAddressesInput) SetNextToken(v string) *ListResolverEndpointIpAddressesInput {",
          "6079:  s.NextToken = &v",
          "6080:  return s",
          "6081: }",
          "6084: func (s *ListResolverEndpointIpAddressesInput) SetResolverEndpointId(v string) *ListResolverEndpointIpAddressesInput {",
          "6085:  s.ResolverEndpointId = &v",
          "6086:  return s",
          "6087: }",
          "6089: type ListResolverEndpointIpAddressesOutput struct {",
          "6090:  _ struct{} `type:\"structure\"`",
          "6095:  IpAddresses []*IpAddressResponse `type:\"list\"`",
          "6098:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "6104:  NextToken *string `type:\"string\"`",
          "6105: }",
          "6108: func (s ListResolverEndpointIpAddressesOutput) String() string {",
          "6109:  return awsutil.Prettify(s)",
          "6110: }",
          "6113: func (s ListResolverEndpointIpAddressesOutput) GoString() string {",
          "6114:  return s.String()",
          "6115: }",
          "6118: func (s *ListResolverEndpointIpAddressesOutput) SetIpAddresses(v []*IpAddressResponse) *ListResolverEndpointIpAddressesOutput {",
          "6119:  s.IpAddresses = v",
          "6120:  return s",
          "6121: }",
          "6124: func (s *ListResolverEndpointIpAddressesOutput) SetMaxResults(v int64) *ListResolverEndpointIpAddressesOutput {",
          "6125:  s.MaxResults = &v",
          "6126:  return s",
          "6127: }",
          "6130: func (s *ListResolverEndpointIpAddressesOutput) SetNextToken(v string) *ListResolverEndpointIpAddressesOutput {",
          "6131:  s.NextToken = &v",
          "6132:  return s",
          "6133: }",
          "6135: type ListResolverEndpointsInput struct {",
          "6136:  _ struct{} `type:\"structure\"`",
          "6144:  Filters []*Filter `type:\"list\"`",
          "6149:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "6156:  NextToken *string `type:\"string\"`",
          "6157: }",
          "6160: func (s ListResolverEndpointsInput) String() string {",
          "6161:  return awsutil.Prettify(s)",
          "6162: }",
          "6165: func (s ListResolverEndpointsInput) GoString() string {",
          "6166:  return s.String()",
          "6167: }",
          "6170: func (s *ListResolverEndpointsInput) Validate() error {",
          "6171:  invalidParams := request.ErrInvalidParams{Context: \"ListResolverEndpointsInput\"}",
          "6172:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "6173:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "6174:  }",
          "6175:  if s.Filters != nil {",
          "6176:   for i, v := range s.Filters {",
          "6177:    if v == nil {",
          "6178:     continue",
          "6179:    }",
          "6180:    if err := v.Validate(); err != nil {",
          "6181:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Filters\", i), err.(request.ErrInvalidParams))",
          "6182:    }",
          "6183:   }",
          "6184:  }",
          "6186:  if invalidParams.Len() > 0 {",
          "6187:   return invalidParams",
          "6188:  }",
          "6189:  return nil",
          "6190: }",
          "6193: func (s *ListResolverEndpointsInput) SetFilters(v []*Filter) *ListResolverEndpointsInput {",
          "6194:  s.Filters = v",
          "6195:  return s",
          "6196: }",
          "6199: func (s *ListResolverEndpointsInput) SetMaxResults(v int64) *ListResolverEndpointsInput {",
          "6200:  s.MaxResults = &v",
          "6201:  return s",
          "6202: }",
          "6205: func (s *ListResolverEndpointsInput) SetNextToken(v string) *ListResolverEndpointsInput {",
          "6206:  s.NextToken = &v",
          "6207:  return s",
          "6208: }",
          "6210: type ListResolverEndpointsOutput struct {",
          "6211:  _ struct{} `type:\"structure\"`",
          "6214:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "6219:  NextToken *string `type:\"string\"`",
          "6223:  ResolverEndpoints []*ResolverEndpoint `type:\"list\"`",
          "6224: }",
          "6227: func (s ListResolverEndpointsOutput) String() string {",
          "6228:  return awsutil.Prettify(s)",
          "6229: }",
          "6232: func (s ListResolverEndpointsOutput) GoString() string {",
          "6233:  return s.String()",
          "6237: func (s *ListResolverEndpointsOutput) SetMaxResults(v int64) *ListResolverEndpointsOutput {",
          "6238:  s.MaxResults = &v",
          "6239:  return s",
          "6243: func (s *ListResolverEndpointsOutput) SetNextToken(v string) *ListResolverEndpointsOutput {",
          "6244:  s.NextToken = &v",
          "6245:  return s",
          "6249: func (s *ListResolverEndpointsOutput) SetResolverEndpoints(v []*ResolverEndpoint) *ListResolverEndpointsOutput {",
          "6250:  s.ResolverEndpoints = v",
          "6251:  return s",
          "6254: type ListResolverQueryLogConfigAssociationsInput struct {",
          "6262:  Filters []*Filter `type:\"list\"`",
          "6311:  SortBy *string `min:\"1\" type:\"string\"`",
          "6319:  SortOrder *string `type:\"string\" enum:\"SortOrder\"`",
          "6323: func (s ListResolverQueryLogConfigAssociationsInput) String() string {",
          "6328: func (s ListResolverQueryLogConfigAssociationsInput) GoString() string {",
          "6333: func (s *ListResolverQueryLogConfigAssociationsInput) Validate() error {",
          "6334:  invalidParams := request.ErrInvalidParams{Context: \"ListResolverQueryLogConfigAssociationsInput\"}",
          "6338:  if s.SortBy != nil && len(*s.SortBy) < 1 {",
          "6339:   invalidParams.Add(request.NewErrParamMinLen(\"SortBy\", 1))",
          "6341:  if s.Filters != nil {",
          "6342:   for i, v := range s.Filters {",
          "6343:    if v == nil {",
          "6344:     continue",
          "6345:    }",
          "6346:    if err := v.Validate(); err != nil {",
          "6347:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Filters\", i), err.(request.ErrInvalidParams))",
          "6348:    }",
          "6349:   }",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "4061:  return nil",
          "4062: }",
          "4066:  s.MaxResults = &v",
          "4067:  return s",
          "4068: }",
          "4072:  s.NextToken = &v",
          "4073:  return s",
          "4074: }",
          "4079:  return s",
          "4080: }",
          "4096:  NextToken *string `type:\"string\"`",
          "4097: }",
          "4101:  return awsutil.Prettify(s)",
          "4102: }",
          "4106:  return s.String()",
          "4107: }",
          "4112:  return s",
          "4113: }",
          "4118:  return s",
          "4119: }",
          "4124:  return s",
          "4125: }",
          "4128:  _ struct{} `type:\"structure\"`",
          "4136:  Filters []*Filter `type:\"list\"`",
          "4141:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "4148:  NextToken *string `type:\"string\"`",
          "4149: }",
          "4153:  return awsutil.Prettify(s)",
          "4154: }",
          "4158:  return s.String()",
          "4159: }",
          "4164:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "4165:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "4166:  }",
          "4167:  if s.Filters != nil {",
          "4168:   for i, v := range s.Filters {",
          "4169:    if v == nil {",
          "",
          "[Removed Lines]",
          "4065: func (s *ListResolverEndpointIpAddressesInput) SetMaxResults(v int64) *ListResolverEndpointIpAddressesInput {",
          "4071: func (s *ListResolverEndpointIpAddressesInput) SetNextToken(v string) *ListResolverEndpointIpAddressesInput {",
          "4077: func (s *ListResolverEndpointIpAddressesInput) SetResolverEndpointId(v string) *ListResolverEndpointIpAddressesInput {",
          "4078:  s.ResolverEndpointId = &v",
          "4082: type ListResolverEndpointIpAddressesOutput struct {",
          "4083:  _ struct{} `type:\"structure\"`",
          "4087:  IpAddresses []*IpAddressResponse `type:\"list\"`",
          "4090:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "4100: func (s ListResolverEndpointIpAddressesOutput) String() string {",
          "4105: func (s ListResolverEndpointIpAddressesOutput) GoString() string {",
          "4110: func (s *ListResolverEndpointIpAddressesOutput) SetIpAddresses(v []*IpAddressResponse) *ListResolverEndpointIpAddressesOutput {",
          "4111:  s.IpAddresses = v",
          "4116: func (s *ListResolverEndpointIpAddressesOutput) SetMaxResults(v int64) *ListResolverEndpointIpAddressesOutput {",
          "4117:  s.MaxResults = &v",
          "4122: func (s *ListResolverEndpointIpAddressesOutput) SetNextToken(v string) *ListResolverEndpointIpAddressesOutput {",
          "4123:  s.NextToken = &v",
          "4127: type ListResolverEndpointsInput struct {",
          "4152: func (s ListResolverEndpointsInput) String() string {",
          "4157: func (s ListResolverEndpointsInput) GoString() string {",
          "4162: func (s *ListResolverEndpointsInput) Validate() error {",
          "4163:  invalidParams := request.ErrInvalidParams{Context: \"ListResolverEndpointsInput\"}",
          "",
          "[Added Lines]",
          "6359: func (s *ListResolverQueryLogConfigAssociationsInput) SetFilters(v []*Filter) *ListResolverQueryLogConfigAssociationsInput {",
          "6360:  s.Filters = v",
          "6361:  return s",
          "6362: }",
          "6365: func (s *ListResolverQueryLogConfigAssociationsInput) SetMaxResults(v int64) *ListResolverQueryLogConfigAssociationsInput {",
          "6371: func (s *ListResolverQueryLogConfigAssociationsInput) SetNextToken(v string) *ListResolverQueryLogConfigAssociationsInput {",
          "6377: func (s *ListResolverQueryLogConfigAssociationsInput) SetSortBy(v string) *ListResolverQueryLogConfigAssociationsInput {",
          "6378:  s.SortBy = &v",
          "6383: func (s *ListResolverQueryLogConfigAssociationsInput) SetSortOrder(v string) *ListResolverQueryLogConfigAssociationsInput {",
          "6384:  s.SortOrder = &v",
          "6385:  return s",
          "6386: }",
          "6388: type ListResolverQueryLogConfigAssociationsOutput struct {",
          "6389:  _ struct{} `type:\"structure\"`",
          "6400:  ResolverQueryLogConfigAssociations []*ResolverQueryLogConfigAssociation `type:\"list\"`",
          "6406:  TotalCount *int64 `type:\"integer\"`",
          "6413:  TotalFilteredCount *int64 `type:\"integer\"`",
          "6417: func (s ListResolverQueryLogConfigAssociationsOutput) String() string {",
          "6422: func (s ListResolverQueryLogConfigAssociationsOutput) GoString() string {",
          "6427: func (s *ListResolverQueryLogConfigAssociationsOutput) SetNextToken(v string) *ListResolverQueryLogConfigAssociationsOutput {",
          "6428:  s.NextToken = &v",
          "6433: func (s *ListResolverQueryLogConfigAssociationsOutput) SetResolverQueryLogConfigAssociations(v []*ResolverQueryLogConfigAssociation) *ListResolverQueryLogConfigAssociationsOutput {",
          "6434:  s.ResolverQueryLogConfigAssociations = v",
          "6439: func (s *ListResolverQueryLogConfigAssociationsOutput) SetTotalCount(v int64) *ListResolverQueryLogConfigAssociationsOutput {",
          "6440:  s.TotalCount = &v",
          "6445: func (s *ListResolverQueryLogConfigAssociationsOutput) SetTotalFilteredCount(v int64) *ListResolverQueryLogConfigAssociationsOutput {",
          "6446:  s.TotalFilteredCount = &v",
          "6447:  return s",
          "6448: }",
          "6450: type ListResolverQueryLogConfigsInput struct {",
          "6512:  SortBy *string `min:\"1\" type:\"string\"`",
          "6520:  SortOrder *string `type:\"string\" enum:\"SortOrder\"`",
          "6524: func (s ListResolverQueryLogConfigsInput) String() string {",
          "6529: func (s ListResolverQueryLogConfigsInput) GoString() string {",
          "6534: func (s *ListResolverQueryLogConfigsInput) Validate() error {",
          "6535:  invalidParams := request.ErrInvalidParams{Context: \"ListResolverQueryLogConfigsInput\"}",
          "6539:  if s.SortBy != nil && len(*s.SortBy) < 1 {",
          "6540:   invalidParams.Add(request.NewErrParamMinLen(\"SortBy\", 1))",
          "6541:  }",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "4182: }",
          "4186:  s.Filters = v",
          "4187:  return s",
          "4188: }",
          "4192:  s.MaxResults = &v",
          "4193:  return s",
          "4194: }",
          "4198:  s.NextToken = &v",
          "4199:  return s",
          "4200: }",
          "4211:  NextToken *string `type:\"string\"`",
          "4216: }",
          "4220:  return awsutil.Prettify(s)",
          "4221: }",
          "4225:  return s.String()",
          "4226: }",
          "4231:  return s",
          "4232: }",
          "4237:  return s",
          "4238: }",
          "4243:  return s",
          "4244: }",
          "4246: type ListResolverRuleAssociationsInput struct {",
          "4247:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "4185: func (s *ListResolverEndpointsInput) SetFilters(v []*Filter) *ListResolverEndpointsInput {",
          "4191: func (s *ListResolverEndpointsInput) SetMaxResults(v int64) *ListResolverEndpointsInput {",
          "4197: func (s *ListResolverEndpointsInput) SetNextToken(v string) *ListResolverEndpointsInput {",
          "4202: type ListResolverEndpointsOutput struct {",
          "4203:  _ struct{} `type:\"structure\"`",
          "4206:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "4215:  ResolverEndpoints []*ResolverEndpoint `type:\"list\"`",
          "4219: func (s ListResolverEndpointsOutput) String() string {",
          "4224: func (s ListResolverEndpointsOutput) GoString() string {",
          "4229: func (s *ListResolverEndpointsOutput) SetMaxResults(v int64) *ListResolverEndpointsOutput {",
          "4230:  s.MaxResults = &v",
          "4235: func (s *ListResolverEndpointsOutput) SetNextToken(v string) *ListResolverEndpointsOutput {",
          "4236:  s.NextToken = &v",
          "4241: func (s *ListResolverEndpointsOutput) SetResolverEndpoints(v []*ResolverEndpoint) *ListResolverEndpointsOutput {",
          "4242:  s.ResolverEndpoints = v",
          "",
          "[Added Lines]",
          "6560: func (s *ListResolverQueryLogConfigsInput) SetFilters(v []*Filter) *ListResolverQueryLogConfigsInput {",
          "6566: func (s *ListResolverQueryLogConfigsInput) SetMaxResults(v int64) *ListResolverQueryLogConfigsInput {",
          "6572: func (s *ListResolverQueryLogConfigsInput) SetNextToken(v string) *ListResolverQueryLogConfigsInput {",
          "6578: func (s *ListResolverQueryLogConfigsInput) SetSortBy(v string) *ListResolverQueryLogConfigsInput {",
          "6579:  s.SortBy = &v",
          "6580:  return s",
          "6581: }",
          "6584: func (s *ListResolverQueryLogConfigsInput) SetSortOrder(v string) *ListResolverQueryLogConfigsInput {",
          "6585:  s.SortOrder = &v",
          "6586:  return s",
          "6587: }",
          "6589: type ListResolverQueryLogConfigsOutput struct {",
          "6590:  _ struct{} `type:\"structure\"`",
          "6599:  ResolverQueryLogConfigs []*ResolverQueryLogConfig `type:\"list\"`",
          "6605:  TotalCount *int64 `type:\"integer\"`",
          "6612:  TotalFilteredCount *int64 `type:\"integer\"`",
          "6616: func (s ListResolverQueryLogConfigsOutput) String() string {",
          "6621: func (s ListResolverQueryLogConfigsOutput) GoString() string {",
          "6626: func (s *ListResolverQueryLogConfigsOutput) SetNextToken(v string) *ListResolverQueryLogConfigsOutput {",
          "6627:  s.NextToken = &v",
          "6632: func (s *ListResolverQueryLogConfigsOutput) SetResolverQueryLogConfigs(v []*ResolverQueryLogConfig) *ListResolverQueryLogConfigsOutput {",
          "6633:  s.ResolverQueryLogConfigs = v",
          "6638: func (s *ListResolverQueryLogConfigsOutput) SetTotalCount(v int64) *ListResolverQueryLogConfigsOutput {",
          "6639:  s.TotalCount = &v",
          "6640:  return s",
          "6641: }",
          "6644: func (s *ListResolverQueryLogConfigsOutput) SetTotalFilteredCount(v int64) *ListResolverQueryLogConfigsOutput {",
          "6645:  s.TotalFilteredCount = &v",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "4539:  return s",
          "4540: }",
          "4545:  return s",
          "4546: }",
          "4551:  return s",
          "4552: }",
          "4555:  _ struct{} `type:\"structure\"`",
          "4565: }",
          "4569:  return awsutil.Prettify(s)",
          "4570: }",
          "4574:  return s.String()",
          "4575: }",
          "4586:  return s",
          "4587: }",
          "4589: type PutResolverRulePolicyInput struct {",
          "4590:  _ struct{} `type:\"structure\"`",
          "4596:  Arn *string `min:\"1\" type:\"string\" required:\"true\"`",
          "4602:  ResolverRulePolicy *string `type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "4543: func (s *ListTagsForResourceInput) SetNextToken(v string) *ListTagsForResourceInput {",
          "4544:  s.NextToken = &v",
          "4549: func (s *ListTagsForResourceInput) SetResourceArn(v string) *ListTagsForResourceInput {",
          "4550:  s.ResourceArn = &v",
          "4554: type ListTagsForResourceOutput struct {",
          "4560:  NextToken *string `type:\"string\"`",
          "4564:  Tags []*Tag `type:\"list\"`",
          "4568: func (s ListTagsForResourceOutput) String() string {",
          "4573: func (s ListTagsForResourceOutput) GoString() string {",
          "4578: func (s *ListTagsForResourceOutput) SetNextToken(v string) *ListTagsForResourceOutput {",
          "4579:  s.NextToken = &v",
          "4580:  return s",
          "4581: }",
          "4584: func (s *ListTagsForResourceOutput) SetTags(v []*Tag) *ListTagsForResourceOutput {",
          "4585:  s.Tags = v",
          "",
          "[Added Lines]",
          "6946: func (s *ListTagsForResourceInput) SetNextToken(v string) *ListTagsForResourceInput {",
          "6947:  s.NextToken = &v",
          "6948:  return s",
          "6949: }",
          "6952: func (s *ListTagsForResourceInput) SetResourceArn(v string) *ListTagsForResourceInput {",
          "6953:  s.ResourceArn = &v",
          "6954:  return s",
          "6955: }",
          "6957: type ListTagsForResourceOutput struct {",
          "6958:  _ struct{} `type:\"structure\"`",
          "6963:  NextToken *string `type:\"string\"`",
          "6967:  Tags []*Tag `type:\"list\"`",
          "6968: }",
          "6971: func (s ListTagsForResourceOutput) String() string {",
          "6972:  return awsutil.Prettify(s)",
          "6973: }",
          "6976: func (s ListTagsForResourceOutput) GoString() string {",
          "6977:  return s.String()",
          "6978: }",
          "6981: func (s *ListTagsForResourceOutput) SetNextToken(v string) *ListTagsForResourceOutput {",
          "6982:  s.NextToken = &v",
          "6983:  return s",
          "6984: }",
          "6987: func (s *ListTagsForResourceOutput) SetTags(v []*Tag) *ListTagsForResourceOutput {",
          "6988:  s.Tags = v",
          "6989:  return s",
          "6990: }",
          "6992: type PutResolverQueryLogConfigPolicyInput struct {",
          "6993:  _ struct{} `type:\"structure\"`",
          "6999:  Arn *string `min:\"1\" type:\"string\" required:\"true\"`",
          "7019:  ResolverQueryLogConfigPolicy *string `type:\"string\" required:\"true\"`",
          "7020: }",
          "7023: func (s PutResolverQueryLogConfigPolicyInput) String() string {",
          "7024:  return awsutil.Prettify(s)",
          "7025: }",
          "7028: func (s PutResolverQueryLogConfigPolicyInput) GoString() string {",
          "7029:  return s.String()",
          "7030: }",
          "7033: func (s *PutResolverQueryLogConfigPolicyInput) Validate() error {",
          "7034:  invalidParams := request.ErrInvalidParams{Context: \"PutResolverQueryLogConfigPolicyInput\"}",
          "7035:  if s.Arn == nil {",
          "7036:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "7037:  }",
          "7038:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "7039:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "7040:  }",
          "7041:  if s.ResolverQueryLogConfigPolicy == nil {",
          "7042:   invalidParams.Add(request.NewErrParamRequired(\"ResolverQueryLogConfigPolicy\"))",
          "7043:  }",
          "7045:  if invalidParams.Len() > 0 {",
          "7046:   return invalidParams",
          "7047:  }",
          "7048:  return nil",
          "7049: }",
          "7052: func (s *PutResolverQueryLogConfigPolicyInput) SetArn(v string) *PutResolverQueryLogConfigPolicyInput {",
          "7053:  s.Arn = &v",
          "7058: func (s *PutResolverQueryLogConfigPolicyInput) SetResolverQueryLogConfigPolicy(v string) *PutResolverQueryLogConfigPolicyInput {",
          "7059:  s.ResolverQueryLogConfigPolicy = &v",
          "7064: type PutResolverQueryLogConfigPolicyOutput struct {",
          "7068:  ReturnValue *bool `type:\"boolean\"`",
          "7072: func (s PutResolverQueryLogConfigPolicyOutput) String() string {",
          "7077: func (s PutResolverQueryLogConfigPolicyOutput) GoString() string {",
          "7082: func (s *PutResolverQueryLogConfigPolicyOutput) SetReturnValue(v bool) *PutResolverQueryLogConfigPolicyOutput {",
          "7083:  s.ReturnValue = &v",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "4804:  return s",
          "4805: }",
          "4811: type ResolverRule struct {",
          "4812:  _ struct{} `type:\"structure\"`",
          "4815:  Arn *string `min:\"1\" type:\"string\"`",
          "4820:  CreatorRequestId *string `min:\"1\" type:\"string\"`",
          "4826:  DomainName *string `min:\"1\" type:\"string\"`",
          "4829:  Id *string `min:\"1\" type:\"string\"`",
          "4833:  Name *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7362: type ResolverQueryLogConfig struct {",
          "7363:  _ struct{} `type:\"structure\"`",
          "7366:  Arn *string `min:\"1\" type:\"string\"`",
          "7369:  AssociationCount *int64 `type:\"integer\"`",
          "7373:  CreationTime *string `min:\"20\" type:\"string\"`",
          "7378:  CreatorRequestId *string `min:\"1\" type:\"string\"`",
          "7383:  DestinationArn *string `min:\"1\" type:\"string\"`",
          "7386:  Id *string `min:\"1\" type:\"string\"`",
          "7389:  Name *string `min:\"1\" type:\"string\"`",
          "7392:  OwnerId *string `min:\"12\" type:\"string\"`",
          "7397:  ShareStatus *string `type:\"string\" enum:\"ShareStatus\"`",
          "7413:  Status *string `type:\"string\" enum:\"ResolverQueryLogConfigStatus\"`",
          "7414: }",
          "7417: func (s ResolverQueryLogConfig) String() string {",
          "7418:  return awsutil.Prettify(s)",
          "7419: }",
          "7422: func (s ResolverQueryLogConfig) GoString() string {",
          "7423:  return s.String()",
          "7424: }",
          "7427: func (s *ResolverQueryLogConfig) SetArn(v string) *ResolverQueryLogConfig {",
          "7428:  s.Arn = &v",
          "7429:  return s",
          "7430: }",
          "7433: func (s *ResolverQueryLogConfig) SetAssociationCount(v int64) *ResolverQueryLogConfig {",
          "7434:  s.AssociationCount = &v",
          "7435:  return s",
          "7436: }",
          "7439: func (s *ResolverQueryLogConfig) SetCreationTime(v string) *ResolverQueryLogConfig {",
          "7440:  s.CreationTime = &v",
          "7441:  return s",
          "7442: }",
          "7445: func (s *ResolverQueryLogConfig) SetCreatorRequestId(v string) *ResolverQueryLogConfig {",
          "7446:  s.CreatorRequestId = &v",
          "7447:  return s",
          "7448: }",
          "7451: func (s *ResolverQueryLogConfig) SetDestinationArn(v string) *ResolverQueryLogConfig {",
          "7452:  s.DestinationArn = &v",
          "7453:  return s",
          "7454: }",
          "7457: func (s *ResolverQueryLogConfig) SetId(v string) *ResolverQueryLogConfig {",
          "7458:  s.Id = &v",
          "7459:  return s",
          "7460: }",
          "7463: func (s *ResolverQueryLogConfig) SetName(v string) *ResolverQueryLogConfig {",
          "7464:  s.Name = &v",
          "7465:  return s",
          "7466: }",
          "7469: func (s *ResolverQueryLogConfig) SetOwnerId(v string) *ResolverQueryLogConfig {",
          "7470:  s.OwnerId = &v",
          "7471:  return s",
          "7472: }",
          "7475: func (s *ResolverQueryLogConfig) SetShareStatus(v string) *ResolverQueryLogConfig {",
          "7476:  s.ShareStatus = &v",
          "7477:  return s",
          "7478: }",
          "7481: func (s *ResolverQueryLogConfig) SetStatus(v string) *ResolverQueryLogConfig {",
          "7482:  s.Status = &v",
          "7483:  return s",
          "7484: }",
          "7492: type ResolverQueryLogConfigAssociation struct {",
          "7493:  _ struct{} `type:\"structure\"`",
          "7497:  CreationTime *string `min:\"20\" type:\"string\"`",
          "7507:  Error *string `type:\"string\" enum:\"ResolverQueryLogConfigAssociationError\"`",
          "7511:  ErrorMessage *string `type:\"string\"`",
          "7514:  Id *string `min:\"1\" type:\"string\"`",
          "7517:  ResolverQueryLogConfigId *string `min:\"1\" type:\"string\"`",
          "7520:  ResourceId *string `min:\"1\" type:\"string\"`",
          "7536:  Status *string `type:\"string\" enum:\"ResolverQueryLogConfigAssociationStatus\"`",
          "7537: }",
          "7540: func (s ResolverQueryLogConfigAssociation) String() string {",
          "7541:  return awsutil.Prettify(s)",
          "7542: }",
          "7545: func (s ResolverQueryLogConfigAssociation) GoString() string {",
          "7546:  return s.String()",
          "7547: }",
          "7550: func (s *ResolverQueryLogConfigAssociation) SetCreationTime(v string) *ResolverQueryLogConfigAssociation {",
          "7551:  s.CreationTime = &v",
          "7552:  return s",
          "7553: }",
          "7556: func (s *ResolverQueryLogConfigAssociation) SetError(v string) *ResolverQueryLogConfigAssociation {",
          "7557:  s.Error = &v",
          "7558:  return s",
          "7559: }",
          "7562: func (s *ResolverQueryLogConfigAssociation) SetErrorMessage(v string) *ResolverQueryLogConfigAssociation {",
          "7563:  s.ErrorMessage = &v",
          "7564:  return s",
          "7565: }",
          "7568: func (s *ResolverQueryLogConfigAssociation) SetId(v string) *ResolverQueryLogConfigAssociation {",
          "7569:  s.Id = &v",
          "7570:  return s",
          "7571: }",
          "7574: func (s *ResolverQueryLogConfigAssociation) SetResolverQueryLogConfigId(v string) *ResolverQueryLogConfigAssociation {",
          "7575:  s.ResolverQueryLogConfigId = &v",
          "7576:  return s",
          "7577: }",
          "7580: func (s *ResolverQueryLogConfigAssociation) SetResourceId(v string) *ResolverQueryLogConfigAssociation {",
          "7581:  s.ResourceId = &v",
          "7582:  return s",
          "7583: }",
          "7586: func (s *ResolverQueryLogConfigAssociation) SetStatus(v string) *ResolverQueryLogConfigAssociation {",
          "7587:  s.Status = &v",
          "7588:  return s",
          "7589: }",
          "7607:  CreationTime *string `min:\"20\" type:\"string\"`",
          "7625:  ModificationTime *string `min:\"20\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "4873:  return s",
          "4874: }",
          "4877: func (s *ResolverRule) SetCreatorRequestId(v string) *ResolverRule {",
          "4878:  s.CreatorRequestId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7688: func (s *ResolverRule) SetCreationTime(v string) *ResolverRule {",
          "7689:  s.CreationTime = &v",
          "7690:  return s",
          "7691: }",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "4891:  return s",
          "4892: }",
          "4895: func (s *ResolverRule) SetName(v string) *ResolverRule {",
          "4896:  s.Name = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7712: func (s *ResolverRule) SetModificationTime(v string) *ResolverRule {",
          "7713:  s.ModificationTime = &v",
          "7714:  return s",
          "7715: }",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "5342: }",
          "",
          "[Removed Lines]",
          "5337:  Key *string `type:\"string\"`",
          "5341:  Value *string `type:\"string\"`",
          "",
          "[Added Lines]",
          "8166:  Key *string `min:\"1\" type:\"string\" required:\"true\"`",
          "8172:  Value *string `type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "5351:  return s.String()",
          "5352: }",
          "5355: func (s *Tag) SetKey(v string) *Tag {",
          "5356:  s.Key = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8186: func (s *Tag) Validate() error {",
          "8187:  invalidParams := request.ErrInvalidParams{Context: \"Tag\"}",
          "8188:  if s.Key == nil {",
          "8189:   invalidParams.Add(request.NewErrParamRequired(\"Key\"))",
          "8190:  }",
          "8191:  if s.Key != nil && len(*s.Key) < 1 {",
          "8192:   invalidParams.Add(request.NewErrParamMinLen(\"Key\", 1))",
          "8193:  }",
          "8194:  if s.Value == nil {",
          "8195:   invalidParams.Add(request.NewErrParamRequired(\"Value\"))",
          "8196:  }",
          "8198:  if invalidParams.Len() > 0 {",
          "8199:   return invalidParams",
          "8200:  }",
          "8201:  return nil",
          "8202: }",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "5412:  if s.Tags == nil {",
          "5413:   invalidParams.Add(request.NewErrParamRequired(\"Tags\"))",
          "5414:  }",
          "5416:  if invalidParams.Len() > 0 {",
          "5417:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8265:  if s.Tags != nil {",
          "8266:   for i, v := range s.Tags {",
          "8267:    if v == nil {",
          "8268:     continue",
          "8269:    }",
          "8270:    if err := v.Validate(); err != nil {",
          "8271:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "8272:    }",
          "8273:   }",
          "8274:  }",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "5944:  }",
          "5945: }",
          "5947: const (",
          "5949:  ResolverRuleAssociationStatusCreating = \"CREATING\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8807: const (",
          "8809:  ResolverQueryLogConfigAssociationErrorNone = \"NONE\"",
          "8812:  ResolverQueryLogConfigAssociationErrorDestinationNotFound = \"DESTINATION_NOT_FOUND\"",
          "8815:  ResolverQueryLogConfigAssociationErrorAccessDenied = \"ACCESS_DENIED\"",
          "8818:  ResolverQueryLogConfigAssociationErrorInternalServiceError = \"INTERNAL_SERVICE_ERROR\"",
          "8819: )",
          "8822: func ResolverQueryLogConfigAssociationError_Values() []string {",
          "8823:  return []string{",
          "8824:   ResolverQueryLogConfigAssociationErrorNone,",
          "8825:   ResolverQueryLogConfigAssociationErrorDestinationNotFound,",
          "8826:   ResolverQueryLogConfigAssociationErrorAccessDenied,",
          "8827:   ResolverQueryLogConfigAssociationErrorInternalServiceError,",
          "8828:  }",
          "8829: }",
          "8831: const (",
          "8833:  ResolverQueryLogConfigAssociationStatusCreating = \"CREATING\"",
          "8836:  ResolverQueryLogConfigAssociationStatusActive = \"ACTIVE\"",
          "8839:  ResolverQueryLogConfigAssociationStatusActionNeeded = \"ACTION_NEEDED\"",
          "8842:  ResolverQueryLogConfigAssociationStatusDeleting = \"DELETING\"",
          "8845:  ResolverQueryLogConfigAssociationStatusFailed = \"FAILED\"",
          "8846: )",
          "8849: func ResolverQueryLogConfigAssociationStatus_Values() []string {",
          "8850:  return []string{",
          "8851:   ResolverQueryLogConfigAssociationStatusCreating,",
          "8852:   ResolverQueryLogConfigAssociationStatusActive,",
          "8853:   ResolverQueryLogConfigAssociationStatusActionNeeded,",
          "8854:   ResolverQueryLogConfigAssociationStatusDeleting,",
          "8855:   ResolverQueryLogConfigAssociationStatusFailed,",
          "8856:  }",
          "8857: }",
          "8859: const (",
          "8861:  ResolverQueryLogConfigStatusCreating = \"CREATING\"",
          "8864:  ResolverQueryLogConfigStatusCreated = \"CREATED\"",
          "8867:  ResolverQueryLogConfigStatusDeleting = \"DELETING\"",
          "8870:  ResolverQueryLogConfigStatusFailed = \"FAILED\"",
          "8871: )",
          "8874: func ResolverQueryLogConfigStatus_Values() []string {",
          "8875:  return []string{",
          "8876:   ResolverQueryLogConfigStatusCreating,",
          "8877:   ResolverQueryLogConfigStatusCreated,",
          "8878:   ResolverQueryLogConfigStatusDeleting,",
          "8879:   ResolverQueryLogConfigStatusFailed,",
          "8880:  }",
          "8881: }",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "6035:   ShareStatusSharedByMe,",
          "6036:  }",
          "6037: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8975: const (",
          "8977:  SortOrderAscending = \"ASCENDING\"",
          "8980:  SortOrderDescending = \"DESCENDING\"",
          "8981: )",
          "8984: func SortOrder_Values() []string {",
          "8985:  return []string{",
          "8986:   SortOrderAscending,",
          "8987:   SortOrderDescending,",
          "8988:  }",
          "8989: }",
          "",
          "---------------"
        ],
        "service/route53resolver/doc.go||service/route53resolver/doc.go": [
          "File: service/route53resolver/doc.go -> service/route53resolver/doc.go"
        ],
        "service/route53resolver/errors.go||service/route53resolver/errors.go": [
          "File: service/route53resolver/errors.go -> service/route53resolver/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16:  ErrCodeAccessDeniedException = \"AccessDeniedException\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "88: )",
          "90: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
          "91:  \"InternalServiceErrorException\": newErrorInternalServiceErrorException,",
          "92:  \"InvalidNextTokenException\":     newErrorInvalidNextTokenException,",
          "93:  \"InvalidParameterException\":     newErrorInvalidParameterException,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "98:  \"AccessDeniedException\":         newErrorAccessDeniedException,",
          "",
          "---------------"
        ],
        "service/route53resolver/route53resolveriface/interface.go||service/route53resolver/route53resolveriface/interface.go": [
          "File: service/route53resolver/route53resolveriface/interface.go -> service/route53resolver/route53resolveriface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:  AssociateResolverEndpointIpAddressWithContext(aws.Context, *route53resolver.AssociateResolverEndpointIpAddressInput, ...request.Option) (*route53resolver.AssociateResolverEndpointIpAddressOutput, error)",
          "65:  AssociateResolverEndpointIpAddressRequest(*route53resolver.AssociateResolverEndpointIpAddressInput) (*request.Request, *route53resolver.AssociateResolverEndpointIpAddressOutput)",
          "67:  AssociateResolverRule(*route53resolver.AssociateResolverRuleInput) (*route53resolver.AssociateResolverRuleOutput, error)",
          "68:  AssociateResolverRuleWithContext(aws.Context, *route53resolver.AssociateResolverRuleInput, ...request.Option) (*route53resolver.AssociateResolverRuleOutput, error)",
          "69:  AssociateResolverRuleRequest(*route53resolver.AssociateResolverRuleInput) (*request.Request, *route53resolver.AssociateResolverRuleOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:  AssociateResolverQueryLogConfig(*route53resolver.AssociateResolverQueryLogConfigInput) (*route53resolver.AssociateResolverQueryLogConfigOutput, error)",
          "68:  AssociateResolverQueryLogConfigWithContext(aws.Context, *route53resolver.AssociateResolverQueryLogConfigInput, ...request.Option) (*route53resolver.AssociateResolverQueryLogConfigOutput, error)",
          "69:  AssociateResolverQueryLogConfigRequest(*route53resolver.AssociateResolverQueryLogConfigInput) (*request.Request, *route53resolver.AssociateResolverQueryLogConfigOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72:  CreateResolverEndpointWithContext(aws.Context, *route53resolver.CreateResolverEndpointInput, ...request.Option) (*route53resolver.CreateResolverEndpointOutput, error)",
          "73:  CreateResolverEndpointRequest(*route53resolver.CreateResolverEndpointInput) (*request.Request, *route53resolver.CreateResolverEndpointOutput)",
          "75:  CreateResolverRule(*route53resolver.CreateResolverRuleInput) (*route53resolver.CreateResolverRuleOutput, error)",
          "76:  CreateResolverRuleWithContext(aws.Context, *route53resolver.CreateResolverRuleInput, ...request.Option) (*route53resolver.CreateResolverRuleOutput, error)",
          "77:  CreateResolverRuleRequest(*route53resolver.CreateResolverRuleInput) (*request.Request, *route53resolver.CreateResolverRuleOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "79:  CreateResolverQueryLogConfig(*route53resolver.CreateResolverQueryLogConfigInput) (*route53resolver.CreateResolverQueryLogConfigOutput, error)",
          "80:  CreateResolverQueryLogConfigWithContext(aws.Context, *route53resolver.CreateResolverQueryLogConfigInput, ...request.Option) (*route53resolver.CreateResolverQueryLogConfigOutput, error)",
          "81:  CreateResolverQueryLogConfigRequest(*route53resolver.CreateResolverQueryLogConfigInput) (*request.Request, *route53resolver.CreateResolverQueryLogConfigOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "80:  DeleteResolverEndpointWithContext(aws.Context, *route53resolver.DeleteResolverEndpointInput, ...request.Option) (*route53resolver.DeleteResolverEndpointOutput, error)",
          "81:  DeleteResolverEndpointRequest(*route53resolver.DeleteResolverEndpointInput) (*request.Request, *route53resolver.DeleteResolverEndpointOutput)",
          "83:  DeleteResolverRule(*route53resolver.DeleteResolverRuleInput) (*route53resolver.DeleteResolverRuleOutput, error)",
          "84:  DeleteResolverRuleWithContext(aws.Context, *route53resolver.DeleteResolverRuleInput, ...request.Option) (*route53resolver.DeleteResolverRuleOutput, error)",
          "85:  DeleteResolverRuleRequest(*route53resolver.DeleteResolverRuleInput) (*request.Request, *route53resolver.DeleteResolverRuleOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91:  DeleteResolverQueryLogConfig(*route53resolver.DeleteResolverQueryLogConfigInput) (*route53resolver.DeleteResolverQueryLogConfigOutput, error)",
          "92:  DeleteResolverQueryLogConfigWithContext(aws.Context, *route53resolver.DeleteResolverQueryLogConfigInput, ...request.Option) (*route53resolver.DeleteResolverQueryLogConfigOutput, error)",
          "93:  DeleteResolverQueryLogConfigRequest(*route53resolver.DeleteResolverQueryLogConfigInput) (*request.Request, *route53resolver.DeleteResolverQueryLogConfigOutput)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "88:  DisassociateResolverEndpointIpAddressWithContext(aws.Context, *route53resolver.DisassociateResolverEndpointIpAddressInput, ...request.Option) (*route53resolver.DisassociateResolverEndpointIpAddressOutput, error)",
          "89:  DisassociateResolverEndpointIpAddressRequest(*route53resolver.DisassociateResolverEndpointIpAddressInput) (*request.Request, *route53resolver.DisassociateResolverEndpointIpAddressOutput)",
          "91:  DisassociateResolverRule(*route53resolver.DisassociateResolverRuleInput) (*route53resolver.DisassociateResolverRuleOutput, error)",
          "92:  DisassociateResolverRuleWithContext(aws.Context, *route53resolver.DisassociateResolverRuleInput, ...request.Option) (*route53resolver.DisassociateResolverRuleOutput, error)",
          "93:  DisassociateResolverRuleRequest(*route53resolver.DisassociateResolverRuleInput) (*request.Request, *route53resolver.DisassociateResolverRuleOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103:  DisassociateResolverQueryLogConfig(*route53resolver.DisassociateResolverQueryLogConfigInput) (*route53resolver.DisassociateResolverQueryLogConfigOutput, error)",
          "104:  DisassociateResolverQueryLogConfigWithContext(aws.Context, *route53resolver.DisassociateResolverQueryLogConfigInput, ...request.Option) (*route53resolver.DisassociateResolverQueryLogConfigOutput, error)",
          "105:  DisassociateResolverQueryLogConfigRequest(*route53resolver.DisassociateResolverQueryLogConfigInput) (*request.Request, *route53resolver.DisassociateResolverQueryLogConfigOutput)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "96:  GetResolverEndpointWithContext(aws.Context, *route53resolver.GetResolverEndpointInput, ...request.Option) (*route53resolver.GetResolverEndpointOutput, error)",
          "97:  GetResolverEndpointRequest(*route53resolver.GetResolverEndpointInput) (*request.Request, *route53resolver.GetResolverEndpointOutput)",
          "99:  GetResolverRule(*route53resolver.GetResolverRuleInput) (*route53resolver.GetResolverRuleOutput, error)",
          "100:  GetResolverRuleWithContext(aws.Context, *route53resolver.GetResolverRuleInput, ...request.Option) (*route53resolver.GetResolverRuleOutput, error)",
          "101:  GetResolverRuleRequest(*route53resolver.GetResolverRuleInput) (*request.Request, *route53resolver.GetResolverRuleOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "115:  GetResolverQueryLogConfig(*route53resolver.GetResolverQueryLogConfigInput) (*route53resolver.GetResolverQueryLogConfigOutput, error)",
          "116:  GetResolverQueryLogConfigWithContext(aws.Context, *route53resolver.GetResolverQueryLogConfigInput, ...request.Option) (*route53resolver.GetResolverQueryLogConfigOutput, error)",
          "117:  GetResolverQueryLogConfigRequest(*route53resolver.GetResolverQueryLogConfigInput) (*request.Request, *route53resolver.GetResolverQueryLogConfigOutput)",
          "119:  GetResolverQueryLogConfigAssociation(*route53resolver.GetResolverQueryLogConfigAssociationInput) (*route53resolver.GetResolverQueryLogConfigAssociationOutput, error)",
          "120:  GetResolverQueryLogConfigAssociationWithContext(aws.Context, *route53resolver.GetResolverQueryLogConfigAssociationInput, ...request.Option) (*route53resolver.GetResolverQueryLogConfigAssociationOutput, error)",
          "121:  GetResolverQueryLogConfigAssociationRequest(*route53resolver.GetResolverQueryLogConfigAssociationInput) (*request.Request, *route53resolver.GetResolverQueryLogConfigAssociationOutput)",
          "123:  GetResolverQueryLogConfigPolicy(*route53resolver.GetResolverQueryLogConfigPolicyInput) (*route53resolver.GetResolverQueryLogConfigPolicyOutput, error)",
          "124:  GetResolverQueryLogConfigPolicyWithContext(aws.Context, *route53resolver.GetResolverQueryLogConfigPolicyInput, ...request.Option) (*route53resolver.GetResolverQueryLogConfigPolicyOutput, error)",
          "125:  GetResolverQueryLogConfigPolicyRequest(*route53resolver.GetResolverQueryLogConfigPolicyInput) (*request.Request, *route53resolver.GetResolverQueryLogConfigPolicyOutput)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "122:  ListResolverEndpointsPages(*route53resolver.ListResolverEndpointsInput, func(*route53resolver.ListResolverEndpointsOutput, bool) bool) error",
          "123:  ListResolverEndpointsPagesWithContext(aws.Context, *route53resolver.ListResolverEndpointsInput, func(*route53resolver.ListResolverEndpointsOutput, bool) bool, ...request.Option) error",
          "125:  ListResolverRuleAssociations(*route53resolver.ListResolverRuleAssociationsInput) (*route53resolver.ListResolverRuleAssociationsOutput, error)",
          "126:  ListResolverRuleAssociationsWithContext(aws.Context, *route53resolver.ListResolverRuleAssociationsInput, ...request.Option) (*route53resolver.ListResolverRuleAssociationsOutput, error)",
          "127:  ListResolverRuleAssociationsRequest(*route53resolver.ListResolverRuleAssociationsInput) (*request.Request, *route53resolver.ListResolverRuleAssociationsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "153:  ListResolverQueryLogConfigAssociations(*route53resolver.ListResolverQueryLogConfigAssociationsInput) (*route53resolver.ListResolverQueryLogConfigAssociationsOutput, error)",
          "154:  ListResolverQueryLogConfigAssociationsWithContext(aws.Context, *route53resolver.ListResolverQueryLogConfigAssociationsInput, ...request.Option) (*route53resolver.ListResolverQueryLogConfigAssociationsOutput, error)",
          "155:  ListResolverQueryLogConfigAssociationsRequest(*route53resolver.ListResolverQueryLogConfigAssociationsInput) (*request.Request, *route53resolver.ListResolverQueryLogConfigAssociationsOutput)",
          "157:  ListResolverQueryLogConfigAssociationsPages(*route53resolver.ListResolverQueryLogConfigAssociationsInput, func(*route53resolver.ListResolverQueryLogConfigAssociationsOutput, bool) bool) error",
          "158:  ListResolverQueryLogConfigAssociationsPagesWithContext(aws.Context, *route53resolver.ListResolverQueryLogConfigAssociationsInput, func(*route53resolver.ListResolverQueryLogConfigAssociationsOutput, bool) bool, ...request.Option) error",
          "160:  ListResolverQueryLogConfigs(*route53resolver.ListResolverQueryLogConfigsInput) (*route53resolver.ListResolverQueryLogConfigsOutput, error)",
          "161:  ListResolverQueryLogConfigsWithContext(aws.Context, *route53resolver.ListResolverQueryLogConfigsInput, ...request.Option) (*route53resolver.ListResolverQueryLogConfigsOutput, error)",
          "162:  ListResolverQueryLogConfigsRequest(*route53resolver.ListResolverQueryLogConfigsInput) (*request.Request, *route53resolver.ListResolverQueryLogConfigsOutput)",
          "164:  ListResolverQueryLogConfigsPages(*route53resolver.ListResolverQueryLogConfigsInput, func(*route53resolver.ListResolverQueryLogConfigsOutput, bool) bool) error",
          "165:  ListResolverQueryLogConfigsPagesWithContext(aws.Context, *route53resolver.ListResolverQueryLogConfigsInput, func(*route53resolver.ListResolverQueryLogConfigsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "140:  ListTagsForResourceWithContext(aws.Context, *route53resolver.ListTagsForResourceInput, ...request.Option) (*route53resolver.ListTagsForResourceOutput, error)",
          "141:  ListTagsForResourceRequest(*route53resolver.ListTagsForResourceInput) (*request.Request, *route53resolver.ListTagsForResourceOutput)",
          "143:  PutResolverRulePolicy(*route53resolver.PutResolverRulePolicyInput) (*route53resolver.PutResolverRulePolicyOutput, error)",
          "144:  PutResolverRulePolicyWithContext(aws.Context, *route53resolver.PutResolverRulePolicyInput, ...request.Option) (*route53resolver.PutResolverRulePolicyOutput, error)",
          "145:  PutResolverRulePolicyRequest(*route53resolver.PutResolverRulePolicyInput) (*request.Request, *route53resolver.PutResolverRulePolicyOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "185:  ListTagsForResourcePages(*route53resolver.ListTagsForResourceInput, func(*route53resolver.ListTagsForResourceOutput, bool) bool) error",
          "186:  ListTagsForResourcePagesWithContext(aws.Context, *route53resolver.ListTagsForResourceInput, func(*route53resolver.ListTagsForResourceOutput, bool) bool, ...request.Option) error",
          "188:  PutResolverQueryLogConfigPolicy(*route53resolver.PutResolverQueryLogConfigPolicyInput) (*route53resolver.PutResolverQueryLogConfigPolicyOutput, error)",
          "189:  PutResolverQueryLogConfigPolicyWithContext(aws.Context, *route53resolver.PutResolverQueryLogConfigPolicyInput, ...request.Option) (*route53resolver.PutResolverQueryLogConfigPolicyOutput, error)",
          "190:  PutResolverQueryLogConfigPolicyRequest(*route53resolver.PutResolverQueryLogConfigPolicyInput) (*request.Request, *route53resolver.PutResolverQueryLogConfigPolicyOutput)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7a6064accf8b9a044f0b203f07440726ba1dd273",
      "candidate_info": {
        "commit_hash": "7a6064accf8b9a044f0b203f07440726ba1dd273",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/7a6064accf8b9a044f0b203f07440726ba1dd273",
        "files": [
          "CHANGELOG.md",
          "CHANGELOG_PENDING.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/ecr/2015-09-21/api-2.json",
          "models/apis/ecr/2015-09-21/docs-2.json",
          "models/apis/kinesis-video-archived-media/2017-09-30/api-2.json",
          "models/apis/kinesis-video-archived-media/2017-09-30/docs-2.json",
          "models/apis/kinesisvideo/2017-09-30/api-2.json",
          "models/apis/kinesisvideo/2017-09-30/docs-2.json",
          "models/apis/medialive/2017-10-14/api-2.json",
          "models/apis/medialive/2017-10-14/docs-2.json",
          "models/apis/route53/2013-04-01/api-2.json",
          "models/apis/route53/2013-04-01/docs-2.json",
          "models/apis/route53/2013-04-01/paginators-1.json",
          "models/apis/ssm/2014-11-06/api-2.json",
          "models/apis/ssm/2014-11-06/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/ecr/api.go",
          "service/ecr/errors.go",
          "service/kinesisvideo/api.go",
          "service/kinesisvideo/errors.go",
          "service/kinesisvideoarchivedmedia/api.go",
          "service/kinesisvideoarchivedmedia/errors.go",
          "service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go",
          "service/medialive/api.go",
          "service/route53/api.go",
          "service/route53/errors.go",
          "service/route53/route53iface/interface.go",
          "service/ssm/api.go",
          "service/ssm/doc.go",
          "service/ssm/errors.go"
        ],
        "message": "Release v1.30.16 (2020-04-28) (#3292)\n\nRelease v1.30.16 (2020-04-28)\n===\n\n### Service Client Updates\n* `service/ecr`: Updates service API and documentation\n  * This release adds support for multi-architecture images also known as a manifest list\n* `service/kinesis-video-archived-media`: Updates service API and documentation\n* `service/kinesisvideo`: Updates service API and documentation\n  * Add \"GET_CLIP\" to the list of supported API names for the GetDataEndpoint API.\n* `service/medialive`: Updates service API and documentation\n  * AWS Elemental MediaLive now supports several new features: enhanced VQ for H.264 (AVC) output encodes; passthrough of timed metadata and of Nielsen ID3 metadata in fMP4 containers in HLS outputs; the ability to generate a SCTE-35 sparse track without additional segmentation, in Microsoft Smooth outputs;  the ability to select the audio from a TS input by specifying the audio track; and conversion of HDR colorspace in the input to an SDR colorspace in the output.\n* `service/route53`: Updates service API, documentation, and paginators\n  * Amazon Route 53 now supports the Africa (Cape Town) Region (af-south-1) for latency records, geoproximity records, and private DNS for Amazon VPCs in that region.\n* `service/ssm`: Updates service API and documentation\n  * SSM State Manager support for adding list association filter for Resource Group and manual mode of managing compliance for an association.\n\n### SDK Bugs\n* `service/s3`: Fix S3 client behavior wrt 200 OK response with empty payload",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/ecr/api.go||service/ecr/api.go",
          "service/ecr/errors.go||service/ecr/errors.go",
          "service/kinesisvideo/api.go||service/kinesisvideo/api.go",
          "service/kinesisvideo/errors.go||service/kinesisvideo/errors.go",
          "service/kinesisvideoarchivedmedia/api.go||service/kinesisvideoarchivedmedia/api.go",
          "service/kinesisvideoarchivedmedia/errors.go||service/kinesisvideoarchivedmedia/errors.go",
          "service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go||service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go",
          "service/medialive/api.go||service/medialive/api.go",
          "service/route53/api.go||service/route53/api.go",
          "service/route53/errors.go||service/route53/errors.go",
          "service/route53/route53iface/interface.go||service/route53/route53iface/interface.go",
          "service/ssm/api.go||service/ssm/api.go",
          "service/ssm/doc.go||service/ssm/doc.go",
          "service/ssm/errors.go||service/ssm/errors.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:  CaCentral1RegionID   = \"ca-central-1\"   // Canada (Central).",
          "28:  EuCentral1RegionID   = \"eu-central-1\"   // EU (Frankfurt).",
          "29:  EuNorth1RegionID     = \"eu-north-1\"     // EU (Stockholm).",
          "30:  EuWest1RegionID      = \"eu-west-1\"      // EU (Ireland).",
          "31:  EuWest2RegionID      = \"eu-west-2\"      // EU (London).",
          "32:  EuWest3RegionID      = \"eu-west-3\"      // EU (Paris).",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30:  EuSouth1RegionID     = \"eu-south-1\"     // Europe (Milan).",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "138:   \"eu-north-1\": region{",
          "139:    Description: \"EU (Stockholm)\",",
          "140:   },",
          "141:   \"eu-west-1\": region{",
          "142:    Description: \"EU (Ireland)\",",
          "143:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "142:   \"eu-south-1\": region{",
          "143:    Description: \"Europe (Milan)\",",
          "144:   },",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "186:     \"ca-central-1\":   endpoint{},",
          "187:     \"eu-central-1\":   endpoint{},",
          "188:     \"eu-north-1\":     endpoint{},",
          "189:     \"eu-west-1\":      endpoint{},",
          "190:     \"eu-west-2\":      endpoint{},",
          "191:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "193:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "216:     },",
          "217:     \"eu-central-1\": endpoint{},",
          "218:     \"eu-north-1\":   endpoint{},",
          "219:     \"eu-west-1\":    endpoint{},",
          "220:     \"eu-west-2\":    endpoint{},",
          "221:     \"eu-west-3\":    endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "224:     \"eu-south-1\":   endpoint{},",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "369:       Region: \"eu-north-1\",",
          "370:      },",
          "371:     },",
          "372:     \"eu-west-1\": endpoint{",
          "373:      Hostname: \"api.ecr.eu-west-1.amazonaws.com\",",
          "374:      CredentialScope: credentialScope{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "378:     \"eu-south-1\": endpoint{",
          "379:      Hostname: \"api.ecr.eu-south-1.amazonaws.com\",",
          "380:      CredentialScope: credentialScope{",
          "381:       Region: \"eu-south-1\",",
          "382:      },",
          "383:     },",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "555:     \"ca-central-1\":   endpoint{},",
          "556:     \"eu-central-1\":   endpoint{},",
          "557:     \"eu-north-1\":     endpoint{},",
          "558:     \"eu-west-1\":      endpoint{},",
          "559:     \"eu-west-2\":      endpoint{},",
          "560:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "570:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "581:     \"ca-central-1\":   endpoint{},",
          "582:     \"eu-central-1\":   endpoint{},",
          "583:     \"eu-north-1\":     endpoint{},",
          "584:     \"eu-west-1\":      endpoint{},",
          "585:     \"eu-west-2\":      endpoint{},",
          "586:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "597:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "693:     \"ca-central-1\":   endpoint{},",
          "694:     \"eu-central-1\":   endpoint{},",
          "695:     \"eu-north-1\":     endpoint{},",
          "696:     \"eu-west-1\":      endpoint{},",
          "697:     \"eu-west-2\":      endpoint{},",
          "698:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "710:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "882:     \"ca-central-1\":   endpoint{},",
          "883:     \"eu-central-1\":   endpoint{},",
          "884:     \"eu-north-1\":     endpoint{},",
          "885:     \"eu-west-1\":      endpoint{},",
          "886:     \"eu-west-2\":      endpoint{},",
          "887:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "900:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1001:     \"ca-central-1\":   endpoint{},",
          "1002:     \"eu-central-1\":   endpoint{},",
          "1003:     \"eu-north-1\":     endpoint{},",
          "1004:     \"eu-west-1\":      endpoint{},",
          "1005:     \"eu-west-2\":      endpoint{},",
          "1006:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1020:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1125:     \"ca-central-1\":   endpoint{},",
          "1126:     \"eu-central-1\":   endpoint{},",
          "1127:     \"eu-north-1\":     endpoint{},",
          "1128:     \"eu-west-1\":      endpoint{},",
          "1129:     \"eu-west-2\":      endpoint{},",
          "1130:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1145:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1556:     \"ca-central-1\":   endpoint{},",
          "1557:     \"eu-central-1\":   endpoint{},",
          "1558:     \"eu-north-1\":     endpoint{},",
          "1559:     \"eu-west-1\":      endpoint{},",
          "1560:     \"eu-west-2\":      endpoint{},",
          "1561:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1577:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1618:     },",
          "1619:     \"eu-central-1\": endpoint{},",
          "1620:     \"eu-north-1\":   endpoint{},",
          "1621:     \"eu-west-1\":    endpoint{},",
          "1622:     \"eu-west-2\":    endpoint{},",
          "1623:     \"eu-west-3\":    endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1640:     \"eu-south-1\":   endpoint{},",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1786:     },",
          "1787:     \"eu-central-1\": endpoint{},",
          "1788:     \"eu-north-1\":   endpoint{},",
          "1789:     \"eu-west-1\":    endpoint{},",
          "1790:     \"eu-west-2\":    endpoint{},",
          "1791:     \"eu-west-3\":    endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1809:     \"eu-south-1\":   endpoint{},",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1843:     \"ca-central-1\":   endpoint{},",
          "1844:     \"eu-central-1\":   endpoint{},",
          "1845:     \"eu-north-1\":     endpoint{},",
          "1846:     \"eu-west-1\":      endpoint{},",
          "1847:     \"eu-west-2\":      endpoint{},",
          "1848:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1867:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1908:     \"ca-central-1\":   endpoint{},",
          "1909:     \"eu-central-1\":   endpoint{},",
          "1910:     \"eu-north-1\":     endpoint{},",
          "1911:     \"eu-west-1\":      endpoint{},",
          "1912:     \"eu-west-2\":      endpoint{},",
          "1913:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1933:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1956:     \"ca-central-1\":   endpoint{},",
          "1957:     \"eu-central-1\":   endpoint{},",
          "1958:     \"eu-north-1\":     endpoint{},",
          "1959:     \"eu-west-1\":      endpoint{},",
          "1960:     \"eu-west-2\":      endpoint{},",
          "1961:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1982:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1986:     \"ca-central-1\":   endpoint{},",
          "1987:     \"eu-central-1\":   endpoint{},",
          "1988:     \"eu-north-1\":     endpoint{},",
          "1989:     \"eu-west-1\":      endpoint{},",
          "1990:     \"eu-west-2\":      endpoint{},",
          "1991:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2013:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2167:     \"ca-central-1\":   endpoint{},",
          "2168:     \"eu-central-1\":   endpoint{},",
          "2169:     \"eu-north-1\":     endpoint{},",
          "2170:     \"eu-west-1\":      endpoint{},",
          "2171:     \"eu-west-2\":      endpoint{},",
          "2172:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2195:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2220:      SSLCommonName: \"{service}.{region}.{dnsSuffix}\",",
          "2221:     },",
          "2222:     \"eu-north-1\": endpoint{},",
          "2223:     \"eu-west-1\":  endpoint{},",
          "2224:     \"eu-west-2\":  endpoint{},",
          "2225:     \"eu-west-3\":  endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2249:     \"eu-south-1\": endpoint{},",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2310:     \"ca-central-1\":   endpoint{},",
          "2311:     \"eu-central-1\":   endpoint{},",
          "2312:     \"eu-north-1\":     endpoint{},",
          "2313:     \"eu-west-1\":      endpoint{},",
          "2314:     \"eu-west-2\":      endpoint{},",
          "2315:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2340:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "2340:     \"ca-central-1\":   endpoint{},",
          "2341:     \"eu-central-1\":   endpoint{},",
          "2342:     \"eu-north-1\":     endpoint{},",
          "2343:     \"eu-west-1\":      endpoint{},",
          "2344:     \"eu-west-2\":      endpoint{},",
          "2345:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2371:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "2617:     \"ca-central-1\":   endpoint{},",
          "2618:     \"eu-central-1\":   endpoint{},",
          "2619:     \"eu-north-1\":     endpoint{},",
          "2620:     \"eu-west-1\":      endpoint{},",
          "2621:     \"eu-west-2\":      endpoint{},",
          "2622:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2649:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "3058:     \"ca-central-1\":   endpoint{},",
          "3059:     \"eu-central-1\":   endpoint{},",
          "3060:     \"eu-north-1\":     endpoint{},",
          "3061:     \"eu-west-1\":      endpoint{},",
          "3062:     \"eu-west-2\":      endpoint{},",
          "3063:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3091:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "3148:     \"ca-central-1\":   endpoint{},",
          "3149:     \"eu-central-1\":   endpoint{},",
          "3150:     \"eu-north-1\":     endpoint{},",
          "3151:     \"eu-west-1\":      endpoint{},",
          "3152:     \"eu-west-2\":      endpoint{},",
          "3153:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3182:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "3190:     \"ca-central-1\":   endpoint{},",
          "3191:     \"eu-central-1\":   endpoint{},",
          "3192:     \"eu-north-1\":     endpoint{},",
          "3193:     \"eu-west-1\":      endpoint{},",
          "3194:     \"eu-west-2\":      endpoint{},",
          "3195:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3225:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "3303:     \"ca-central-1\":   endpoint{},",
          "3304:     \"eu-central-1\":   endpoint{},",
          "3305:     \"eu-north-1\":     endpoint{},",
          "3306:     \"eu-west-1\":      endpoint{},",
          "3307:     \"eu-west-2\":      endpoint{},",
          "3308:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3339:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "3447:     \"ca-central-1\":   endpoint{},",
          "3448:     \"eu-central-1\":   endpoint{},",
          "3449:     \"eu-north-1\":     endpoint{},",
          "3450:     \"eu-west-1\":      endpoint{},",
          "3451:     \"eu-west-2\":      endpoint{},",
          "3452:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3484:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "3503:     \"ca-central-1\":   endpoint{},",
          "3504:     \"eu-central-1\":   endpoint{},",
          "3505:     \"eu-north-1\":     endpoint{},",
          "3506:     \"eu-west-1\":      endpoint{},",
          "3507:     \"eu-west-2\":      endpoint{},",
          "3508:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3541:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "4028:     \"ca-central-1\":   endpoint{},",
          "4029:     \"eu-central-1\":   endpoint{},",
          "4030:     \"eu-north-1\":     endpoint{},",
          "4031:     \"eu-west-1\":      endpoint{},",
          "4032:     \"eu-west-2\":      endpoint{},",
          "4033:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4067:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "4054:     \"ca-central-1\":   endpoint{},",
          "4055:     \"eu-central-1\":   endpoint{},",
          "4056:     \"eu-north-1\":     endpoint{},",
          "4057:     \"eu-west-1\":      endpoint{},",
          "4058:     \"eu-west-2\":      endpoint{},",
          "4059:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4094:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "4125:     \"ca-central-1\":   endpoint{},",
          "4126:     \"eu-central-1\":   endpoint{},",
          "4127:     \"eu-north-1\":     endpoint{},",
          "4128:     \"eu-west-1\":      endpoint{},",
          "4129:     \"eu-west-2\":      endpoint{},",
          "4130:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4166:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "4316:     \"ca-central-1\": endpoint{},",
          "4317:     \"eu-central-1\": endpoint{},",
          "4318:     \"eu-north-1\":   endpoint{},",
          "4319:     \"eu-west-1\": endpoint{",
          "4320:      Hostname:          \"s3.eu-west-1.amazonaws.com\",",
          "4321:      SignatureVersions: []string{\"s3\", \"s3v4\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4358:     \"eu-south-1\":   endpoint{},",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "4790:     \"ca-central-1\":   endpoint{},",
          "4791:     \"eu-central-1\":   endpoint{},",
          "4792:     \"eu-north-1\":     endpoint{},",
          "4793:     \"eu-west-1\":      endpoint{},",
          "4794:     \"eu-west-2\":      endpoint{},",
          "4795:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4833:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "4950:     \"ca-central-1\":   endpoint{},",
          "4951:     \"eu-central-1\":   endpoint{},",
          "4952:     \"eu-north-1\":     endpoint{},",
          "4953:     \"eu-west-1\":      endpoint{},",
          "4954:     \"eu-west-2\":      endpoint{},",
          "4955:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4994:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "5001:     \"ca-central-1\":   endpoint{},",
          "5002:     \"eu-central-1\":   endpoint{},",
          "5003:     \"eu-north-1\":     endpoint{},",
          "5004:     \"eu-west-1\":      endpoint{},",
          "5005:     \"eu-west-2\":      endpoint{},",
          "5006:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5046:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "5051:     \"ca-central-1\":   endpoint{},",
          "5052:     \"eu-central-1\":   endpoint{},",
          "5053:     \"eu-north-1\":     endpoint{},",
          "5054:     \"eu-west-1\":      endpoint{},",
          "5055:     \"eu-west-2\":      endpoint{},",
          "5056:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5097:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "5123:     \"ca-central-1\":   endpoint{},",
          "5124:     \"eu-central-1\":   endpoint{},",
          "5125:     \"eu-north-1\":     endpoint{},",
          "5126:     \"eu-west-1\":      endpoint{},",
          "5127:     \"eu-west-2\":      endpoint{},",
          "5128:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5170:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "5265:     \"ca-central-1\": endpoint{},",
          "5266:     \"eu-central-1\": endpoint{},",
          "5267:     \"eu-north-1\":   endpoint{},",
          "5268:     \"eu-west-1\":    endpoint{},",
          "5269:     \"eu-west-2\":    endpoint{},",
          "5270:     \"eu-west-3\":    endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5313:     \"eu-south-1\":   endpoint{},",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "5325:     \"ca-central-1\":   endpoint{},",
          "5326:     \"eu-central-1\":   endpoint{},",
          "5327:     \"eu-north-1\":     endpoint{},",
          "5328:     \"eu-west-1\":      endpoint{},",
          "5329:     \"eu-west-2\":      endpoint{},",
          "5330:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5374:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "5373:     \"ca-central-1\":   endpoint{},",
          "5374:     \"eu-central-1\":   endpoint{},",
          "5375:     \"eu-north-1\":     endpoint{},",
          "5376:     \"eu-west-1\":      endpoint{},",
          "5377:     \"eu-west-2\":      endpoint{},",
          "5378:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5423:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "5807:     \"ca-central-1\":   endpoint{},",
          "5808:     \"eu-central-1\":   endpoint{},",
          "5809:     \"eu-north-1\":     endpoint{},",
          "5810:     \"eu-west-1\":      endpoint{},",
          "5811:     \"eu-west-2\":      endpoint{},",
          "5812:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5858:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.30.15\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.30.16\"",
          "",
          "---------------"
        ],
        "service/ecr/api.go||service/ecr/api.go": [
          "File: service/ecr/api.go -> service/ecr/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7342:  return s",
          "7343: }",
          "7346: type Repository struct {",
          "7347:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7359: type ReferencedImagesNotFoundException struct {",
          "7360:  _            struct{}                  `type:\"structure\"`",
          "7361:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "7363:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "7364: }",
          "7367: func (s ReferencedImagesNotFoundException) String() string {",
          "7368:  return awsutil.Prettify(s)",
          "7369: }",
          "7372: func (s ReferencedImagesNotFoundException) GoString() string {",
          "7373:  return s.String()",
          "7374: }",
          "7376: func newErrorReferencedImagesNotFoundException(v protocol.ResponseMetadata) error {",
          "7377:  return &ReferencedImagesNotFoundException{",
          "7378:   RespMetadata: v,",
          "7379:  }",
          "7380: }",
          "7383: func (s *ReferencedImagesNotFoundException) Code() string {",
          "7384:  return \"ReferencedImagesNotFoundException\"",
          "7385: }",
          "7388: func (s *ReferencedImagesNotFoundException) Message() string {",
          "7389:  if s.Message_ != nil {",
          "7390:   return *s.Message_",
          "7391:  }",
          "7392:  return \"\"",
          "7393: }",
          "7396: func (s *ReferencedImagesNotFoundException) OrigErr() error {",
          "7397:  return nil",
          "7398: }",
          "7400: func (s *ReferencedImagesNotFoundException) Error() string {",
          "7401:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "7402: }",
          "7405: func (s *ReferencedImagesNotFoundException) StatusCode() int {",
          "7406:  return s.RespMetadata.StatusCode",
          "7407: }",
          "7410: func (s *ReferencedImagesNotFoundException) RequestID() string {",
          "7411:  return s.RespMetadata.RequestID",
          "7412: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8287:  return s.RespMetadata.RequestID",
          "8288: }",
          "8290: type UntagResourceInput struct {",
          "8291:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8360: type UnsupportedImageTypeException struct {",
          "8361:  _            struct{}                  `type:\"structure\"`",
          "8362:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "8364:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "8365: }",
          "8368: func (s UnsupportedImageTypeException) String() string {",
          "8369:  return awsutil.Prettify(s)",
          "8370: }",
          "8373: func (s UnsupportedImageTypeException) GoString() string {",
          "8374:  return s.String()",
          "8375: }",
          "8377: func newErrorUnsupportedImageTypeException(v protocol.ResponseMetadata) error {",
          "8378:  return &UnsupportedImageTypeException{",
          "8379:   RespMetadata: v,",
          "8380:  }",
          "8381: }",
          "8384: func (s *UnsupportedImageTypeException) Code() string {",
          "8385:  return \"UnsupportedImageTypeException\"",
          "8386: }",
          "8389: func (s *UnsupportedImageTypeException) Message() string {",
          "8390:  if s.Message_ != nil {",
          "8391:   return *s.Message_",
          "8392:  }",
          "8393:  return \"\"",
          "8394: }",
          "8397: func (s *UnsupportedImageTypeException) OrigErr() error {",
          "8398:  return nil",
          "8399: }",
          "8401: func (s *UnsupportedImageTypeException) Error() string {",
          "8402:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "8403: }",
          "8406: func (s *UnsupportedImageTypeException) StatusCode() int {",
          "8407:  return s.RespMetadata.StatusCode",
          "8408: }",
          "8411: func (s *UnsupportedImageTypeException) RequestID() string {",
          "8412:  return s.RespMetadata.RequestID",
          "8413: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8614:  ImageFailureCodeMissingDigestAndTag = \"MissingDigestAndTag\"",
          "8615: )",
          "8617: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8742:  ImageFailureCodeImageReferencedByManifestList = \"ImageReferencedByManifestList\"",
          "",
          "---------------"
        ],
        "service/ecr/errors.go||service/ecr/errors.go": [
          "File: service/ecr/errors.go -> service/ecr/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "118:  ErrCodeLimitExceededException = \"LimitExceededException\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "124:  ErrCodeReferencedImagesNotFoundException = \"ReferencedImagesNotFoundException\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "165:  ErrCodeTooManyTagsException = \"TooManyTagsException\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "177:  ErrCodeUnsupportedImageTypeException = \"UnsupportedImageTypeException\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "189:  \"LifecyclePolicyPreviewInProgressException\": newErrorLifecyclePolicyPreviewInProgressException,",
          "190:  \"LifecyclePolicyPreviewNotFoundException\":   newErrorLifecyclePolicyPreviewNotFoundException,",
          "191:  \"LimitExceededException\":                    newErrorLimitExceededException,",
          "192:  \"RepositoryAlreadyExistsException\":          newErrorRepositoryAlreadyExistsException,",
          "193:  \"RepositoryNotEmptyException\":               newErrorRepositoryNotEmptyException,",
          "194:  \"RepositoryNotFoundException\":               newErrorRepositoryNotFoundException,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "204:  \"ReferencedImagesNotFoundException\":         newErrorReferencedImagesNotFoundException,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "196:  \"ScanNotFoundException\":                     newErrorScanNotFoundException,",
          "197:  \"ServerException\":                           newErrorServerException,",
          "198:  \"TooManyTagsException\":                      newErrorTooManyTagsException,",
          "199:  \"UploadNotFoundException\":                   newErrorUploadNotFoundException,",
          "200: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "212:  \"UnsupportedImageTypeException\":             newErrorUnsupportedImageTypeException,",
          "",
          "---------------"
        ],
        "service/kinesisvideo/api.go||service/kinesisvideo/api.go": [
          "File: service/kinesisvideo/api.go -> service/kinesisvideo/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4925:  APINameGetDashStreamingSessionUrl = \"GET_DASH_STREAMING_SESSION_URL\"",
          "4926: )",
          "4928: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4941:  APINameGetClip = \"GET_CLIP\"",
          "",
          "---------------"
        ],
        "service/kinesisvideo/errors.go||service/kinesisvideo/errors.go": [
          "File: service/kinesisvideo/errors.go -> service/kinesisvideo/errors.go"
        ],
        "service/kinesisvideoarchivedmedia/api.go||service/kinesisvideoarchivedmedia/api.go": [
          "File: service/kinesisvideoarchivedmedia/api.go -> service/kinesisvideoarchivedmedia/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:  \"github.com/aws/aws-sdk-go/private/protocol\"",
          "14: )",
          "16: const opGetDASHStreamingSessionURL = \"GetDASHStreamingSessionURL\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16: const opGetClip = \"GetClip\"",
          "42: func (c *KinesisVideoArchivedMedia) GetClipRequest(input *GetClipInput) (req *request.Request, output *GetClipOutput) {",
          "43:  op := &request.Operation{",
          "44:   Name:       opGetClip,",
          "45:   HTTPMethod: \"POST\",",
          "46:   HTTPPath:   \"/getClip\",",
          "47:  }",
          "49:  if input == nil {",
          "50:   input = &GetClipInput{}",
          "51:  }",
          "53:  output = &GetClipOutput{}",
          "54:  req = c.newRequest(op, input, output)",
          "55:  return",
          "56: }",
          "148: func (c *KinesisVideoArchivedMedia) GetClip(input *GetClipInput) (*GetClipOutput, error) {",
          "149:  req, out := c.GetClipRequest(input)",
          "150:  return out, req.Send()",
          "151: }",
          "162: func (c *KinesisVideoArchivedMedia) GetClipWithContext(ctx aws.Context, input *GetClipInput, opts ...request.Option) (*GetClipOutput, error) {",
          "163:  req, out := c.GetClipRequest(input)",
          "164:  req.SetContext(ctx)",
          "165:  req.ApplyOptions(opts...)",
          "166:  return out, req.Send()",
          "167: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "884:  return s.RespMetadata.RequestID",
          "885: }",
          "889: type DASHFragmentSelector struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1048: type ClipFragmentSelector struct {",
          "1049:  _ struct{} `type:\"structure\"`",
          "1054:  FragmentSelectorType *string `type:\"string\" required:\"true\" enum:\"ClipFragmentSelectorType\"`",
          "1059:  TimestampRange *ClipTimestampRange `type:\"structure\" required:\"true\"`",
          "1060: }",
          "1063: func (s ClipFragmentSelector) String() string {",
          "1064:  return awsutil.Prettify(s)",
          "1065: }",
          "1068: func (s ClipFragmentSelector) GoString() string {",
          "1069:  return s.String()",
          "1070: }",
          "1073: func (s *ClipFragmentSelector) Validate() error {",
          "1074:  invalidParams := request.ErrInvalidParams{Context: \"ClipFragmentSelector\"}",
          "1075:  if s.FragmentSelectorType == nil {",
          "1076:   invalidParams.Add(request.NewErrParamRequired(\"FragmentSelectorType\"))",
          "1077:  }",
          "1078:  if s.TimestampRange == nil {",
          "1079:   invalidParams.Add(request.NewErrParamRequired(\"TimestampRange\"))",
          "1080:  }",
          "1081:  if s.TimestampRange != nil {",
          "1082:   if err := s.TimestampRange.Validate(); err != nil {",
          "1083:    invalidParams.AddNested(\"TimestampRange\", err.(request.ErrInvalidParams))",
          "1084:   }",
          "1085:  }",
          "1087:  if invalidParams.Len() > 0 {",
          "1088:   return invalidParams",
          "1089:  }",
          "1090:  return nil",
          "1091: }",
          "1094: func (s *ClipFragmentSelector) SetFragmentSelectorType(v string) *ClipFragmentSelector {",
          "1095:  s.FragmentSelectorType = &v",
          "1096:  return s",
          "1097: }",
          "1100: func (s *ClipFragmentSelector) SetTimestampRange(v *ClipTimestampRange) *ClipFragmentSelector {",
          "1101:  s.TimestampRange = v",
          "1102:  return s",
          "1103: }",
          "1110: type ClipTimestampRange struct {",
          "1111:  _ struct{} `type:\"structure\"`",
          "1124:  EndTimestamp *time.Time `type:\"timestamp\" required:\"true\"`",
          "1133:  StartTimestamp *time.Time `type:\"timestamp\" required:\"true\"`",
          "1134: }",
          "1137: func (s ClipTimestampRange) String() string {",
          "1138:  return awsutil.Prettify(s)",
          "1139: }",
          "1142: func (s ClipTimestampRange) GoString() string {",
          "1143:  return s.String()",
          "1144: }",
          "1147: func (s *ClipTimestampRange) Validate() error {",
          "1148:  invalidParams := request.ErrInvalidParams{Context: \"ClipTimestampRange\"}",
          "1149:  if s.EndTimestamp == nil {",
          "1150:   invalidParams.Add(request.NewErrParamRequired(\"EndTimestamp\"))",
          "1151:  }",
          "1152:  if s.StartTimestamp == nil {",
          "1153:   invalidParams.Add(request.NewErrParamRequired(\"StartTimestamp\"))",
          "1154:  }",
          "1156:  if invalidParams.Len() > 0 {",
          "1157:   return invalidParams",
          "1158:  }",
          "1159:  return nil",
          "1160: }",
          "1163: func (s *ClipTimestampRange) SetEndTimestamp(v time.Time) *ClipTimestampRange {",
          "1164:  s.EndTimestamp = &v",
          "1165:  return s",
          "1166: }",
          "1169: func (s *ClipTimestampRange) SetStartTimestamp(v time.Time) *ClipTimestampRange {",
          "1170:  s.StartTimestamp = &v",
          "1171:  return s",
          "1172: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1139:  return s",
          "1140: }",
          "1142: type GetDASHStreamingSessionURLInput struct {",
          "1143:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1429: type GetClipInput struct {",
          "1430:  _ struct{} `type:\"structure\"`",
          "1435:  ClipFragmentSelector *ClipFragmentSelector `type:\"structure\" required:\"true\"`",
          "1441:  StreamARN *string `min:\"1\" type:\"string\"`",
          "1446:  StreamName *string `min:\"1\" type:\"string\"`",
          "1447: }",
          "1450: func (s GetClipInput) String() string {",
          "1451:  return awsutil.Prettify(s)",
          "1452: }",
          "1455: func (s GetClipInput) GoString() string {",
          "1456:  return s.String()",
          "1457: }",
          "1460: func (s *GetClipInput) Validate() error {",
          "1461:  invalidParams := request.ErrInvalidParams{Context: \"GetClipInput\"}",
          "1462:  if s.ClipFragmentSelector == nil {",
          "1463:   invalidParams.Add(request.NewErrParamRequired(\"ClipFragmentSelector\"))",
          "1464:  }",
          "1465:  if s.StreamARN != nil && len(*s.StreamARN) < 1 {",
          "1466:   invalidParams.Add(request.NewErrParamMinLen(\"StreamARN\", 1))",
          "1467:  }",
          "1468:  if s.StreamName != nil && len(*s.StreamName) < 1 {",
          "1469:   invalidParams.Add(request.NewErrParamMinLen(\"StreamName\", 1))",
          "1470:  }",
          "1471:  if s.ClipFragmentSelector != nil {",
          "1472:   if err := s.ClipFragmentSelector.Validate(); err != nil {",
          "1473:    invalidParams.AddNested(\"ClipFragmentSelector\", err.(request.ErrInvalidParams))",
          "1474:   }",
          "1475:  }",
          "1477:  if invalidParams.Len() > 0 {",
          "1478:   return invalidParams",
          "1479:  }",
          "1480:  return nil",
          "1481: }",
          "1484: func (s *GetClipInput) SetClipFragmentSelector(v *ClipFragmentSelector) *GetClipInput {",
          "1485:  s.ClipFragmentSelector = v",
          "1486:  return s",
          "1487: }",
          "1490: func (s *GetClipInput) SetStreamARN(v string) *GetClipInput {",
          "1491:  s.StreamARN = &v",
          "1492:  return s",
          "1493: }",
          "1496: func (s *GetClipInput) SetStreamName(v string) *GetClipInput {",
          "1497:  s.StreamName = &v",
          "1498:  return s",
          "1499: }",
          "1501: type GetClipOutput struct {",
          "1502:  _ struct{} `type:\"structure\" payload:\"Payload\"`",
          "1505:  ContentType *string `location:\"header\" locationName:\"Content-Type\" min:\"1\" type:\"string\"`",
          "1511:  Payload io.ReadCloser `type:\"blob\"`",
          "1512: }",
          "1515: func (s GetClipOutput) String() string {",
          "1516:  return awsutil.Prettify(s)",
          "1517: }",
          "1520: func (s GetClipOutput) GoString() string {",
          "1521:  return s.String()",
          "1522: }",
          "1525: func (s *GetClipOutput) SetContentType(v string) *GetClipOutput {",
          "1526:  s.ContentType = &v",
          "1527:  return s",
          "1528: }",
          "1531: func (s *GetClipOutput) SetPayload(v io.ReadCloser) *GetClipOutput {",
          "1532:  s.Payload = v",
          "1533:  return s",
          "1534: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1985:  return s.RespMetadata.RequestID",
          "1986: }",
          "1988: type ListFragmentsInput struct {",
          "1989:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2384: type InvalidMediaFrameException struct {",
          "2385:  _            struct{}                  `type:\"structure\"`",
          "2386:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "2388:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "2389: }",
          "2392: func (s InvalidMediaFrameException) String() string {",
          "2393:  return awsutil.Prettify(s)",
          "2394: }",
          "2397: func (s InvalidMediaFrameException) GoString() string {",
          "2398:  return s.String()",
          "2399: }",
          "2401: func newErrorInvalidMediaFrameException(v protocol.ResponseMetadata) error {",
          "2402:  return &InvalidMediaFrameException{",
          "2403:   RespMetadata: v,",
          "2404:  }",
          "2405: }",
          "2408: func (s *InvalidMediaFrameException) Code() string {",
          "2409:  return \"InvalidMediaFrameException\"",
          "2410: }",
          "2413: func (s *InvalidMediaFrameException) Message() string {",
          "2414:  if s.Message_ != nil {",
          "2415:   return *s.Message_",
          "2416:  }",
          "2417:  return \"\"",
          "2418: }",
          "2421: func (s *InvalidMediaFrameException) OrigErr() error {",
          "2422:  return nil",
          "2423: }",
          "2425: func (s *InvalidMediaFrameException) Error() string {",
          "2426:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "2427: }",
          "2430: func (s *InvalidMediaFrameException) StatusCode() int {",
          "2431:  return s.RespMetadata.StatusCode",
          "2432: }",
          "2435: func (s *InvalidMediaFrameException) RequestID() string {",
          "2436:  return s.RespMetadata.RequestID",
          "2437: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2448:  return s.RespMetadata.RequestID",
          "2449: }",
          "2451: const (",
          "2453:  ContainerFormatFragmentedMp4 = \"FRAGMENTED_MP4\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2902: const (",
          "2904:  ClipFragmentSelectorTypeProducerTimestamp = \"PRODUCER_TIMESTAMP\"",
          "2907:  ClipFragmentSelectorTypeServerTimestamp = \"SERVER_TIMESTAMP\"",
          "2908: )",
          "",
          "---------------"
        ],
        "service/kinesisvideoarchivedmedia/errors.go||service/kinesisvideoarchivedmedia/errors.go": [
          "File: service/kinesisvideoarchivedmedia/errors.go -> service/kinesisvideoarchivedmedia/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:  ErrCodeInvalidCodecPrivateDataException = \"InvalidCodecPrivateDataException\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37:  ErrCodeInvalidMediaFrameException = \"InvalidMediaFrameException\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76:  \"ClientLimitExceededException\":        newErrorClientLimitExceededException,",
          "77:  \"InvalidArgumentException\":            newErrorInvalidArgumentException,",
          "78:  \"InvalidCodecPrivateDataException\":    newErrorInvalidCodecPrivateDataException,",
          "79:  \"MissingCodecPrivateDataException\":    newErrorMissingCodecPrivateDataException,",
          "80:  \"NoDataRetentionException\":            newErrorNoDataRetentionException,",
          "81:  \"NotAuthorizedException\":              newErrorNotAuthorizedException,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "86:  \"InvalidMediaFrameException\":          newErrorInvalidMediaFrameException,",
          "",
          "---------------"
        ],
        "service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go||service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go": [
          "File: service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go -> service/kinesisvideoarchivedmedia/kinesisvideoarchivedmediaiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "62: type KinesisVideoArchivedMediaAPI interface {",
          "63:  GetDASHStreamingSessionURL(*kinesisvideoarchivedmedia.GetDASHStreamingSessionURLInput) (*kinesisvideoarchivedmedia.GetDASHStreamingSessionURLOutput, error)",
          "64:  GetDASHStreamingSessionURLWithContext(aws.Context, *kinesisvideoarchivedmedia.GetDASHStreamingSessionURLInput, ...request.Option) (*kinesisvideoarchivedmedia.GetDASHStreamingSessionURLOutput, error)",
          "65:  GetDASHStreamingSessionURLRequest(*kinesisvideoarchivedmedia.GetDASHStreamingSessionURLInput) (*request.Request, *kinesisvideoarchivedmedia.GetDASHStreamingSessionURLOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63:  GetClip(*kinesisvideoarchivedmedia.GetClipInput) (*kinesisvideoarchivedmedia.GetClipOutput, error)",
          "64:  GetClipWithContext(aws.Context, *kinesisvideoarchivedmedia.GetClipInput, ...request.Option) (*kinesisvideoarchivedmedia.GetClipOutput, error)",
          "65:  GetClipRequest(*kinesisvideoarchivedmedia.GetClipInput) (*request.Request, *kinesisvideoarchivedmedia.GetClipOutput)",
          "",
          "---------------"
        ],
        "service/medialive/api.go||service/medialive/api.go": [
          "File: service/medialive/api.go -> service/medialive/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5330:  AudioPidSelection *AudioPidSelection `locationName:\"audioPidSelection\" type:\"structure\"`",
          "5331: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5333:  AudioTrackSelection *AudioTrackSelection `locationName:\"audioTrackSelection\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5353:    invalidParams.AddNested(\"AudioPidSelection\", err.(request.ErrInvalidParams))",
          "5354:   }",
          "5355:  }",
          "5357:  if invalidParams.Len() > 0 {",
          "5358:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5359:  if s.AudioTrackSelection != nil {",
          "5360:   if err := s.AudioTrackSelection.Validate(); err != nil {",
          "5361:    invalidParams.AddNested(\"AudioTrackSelection\", err.(request.ErrInvalidParams))",
          "5362:   }",
          "5363:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5372:  return s",
          "5373: }",
          "5376: type AutomaticInputFailoverSettings struct {",
          "5377:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5384: func (s *AudioSelectorSettings) SetAudioTrackSelection(v *AudioTrackSelection) *AudioSelectorSettings {",
          "5385:  s.AudioTrackSelection = v",
          "5386:  return s",
          "5387: }",
          "5390: type AudioTrack struct {",
          "5391:  _ struct{} `type:\"structure\"`",
          "5396:  Track *int64 `locationName:\"track\" min:\"1\" type:\"integer\" required:\"true\"`",
          "5397: }",
          "5400: func (s AudioTrack) String() string {",
          "5401:  return awsutil.Prettify(s)",
          "5402: }",
          "5405: func (s AudioTrack) GoString() string {",
          "5406:  return s.String()",
          "5407: }",
          "5410: func (s *AudioTrack) Validate() error {",
          "5411:  invalidParams := request.ErrInvalidParams{Context: \"AudioTrack\"}",
          "5412:  if s.Track == nil {",
          "5413:   invalidParams.Add(request.NewErrParamRequired(\"Track\"))",
          "5414:  }",
          "5415:  if s.Track != nil && *s.Track < 1 {",
          "5416:   invalidParams.Add(request.NewErrParamMinValue(\"Track\", 1))",
          "5417:  }",
          "5419:  if invalidParams.Len() > 0 {",
          "5420:   return invalidParams",
          "5421:  }",
          "5422:  return nil",
          "5423: }",
          "5426: func (s *AudioTrack) SetTrack(v int64) *AudioTrack {",
          "5427:  s.Track = &v",
          "5428:  return s",
          "5429: }",
          "5432: type AudioTrackSelection struct {",
          "5433:  _ struct{} `type:\"structure\"`",
          "5438:  Tracks []*AudioTrack `locationName:\"tracks\" type:\"list\" required:\"true\"`",
          "5439: }",
          "5442: func (s AudioTrackSelection) String() string {",
          "5443:  return awsutil.Prettify(s)",
          "5444: }",
          "5447: func (s AudioTrackSelection) GoString() string {",
          "5448:  return s.String()",
          "5449: }",
          "5452: func (s *AudioTrackSelection) Validate() error {",
          "5453:  invalidParams := request.ErrInvalidParams{Context: \"AudioTrackSelection\"}",
          "5454:  if s.Tracks == nil {",
          "5455:   invalidParams.Add(request.NewErrParamRequired(\"Tracks\"))",
          "5456:  }",
          "5457:  if s.Tracks != nil {",
          "5458:   for i, v := range s.Tracks {",
          "5459:    if v == nil {",
          "5460:     continue",
          "5461:    }",
          "5462:    if err := v.Validate(); err != nil {",
          "5463:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tracks\", i), err.(request.ErrInvalidParams))",
          "5464:    }",
          "5465:   }",
          "5466:  }",
          "5468:  if invalidParams.Len() > 0 {",
          "5469:   return invalidParams",
          "5470:  }",
          "5471:  return nil",
          "5472: }",
          "5475: func (s *AudioTrackSelection) SetTracks(v []*AudioTrack) *AudioTrackSelection {",
          "5476:  s.Tracks = v",
          "5477:  return s",
          "5478: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "10755:  AudioRenditionSets *string `locationName:\"audioRenditionSets\" type:\"string\"`",
          "10756: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10865:  NielsenId3Behavior *string `locationName:\"nielsenId3Behavior\" type:\"string\" enum:\"Fmp4NielsenId3Behavior\"`",
          "10868:  TimedMetadataBehavior *string `locationName:\"timedMetadataBehavior\" type:\"string\" enum:\"Fmp4TimedMetadataBehavior\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "10771:  return s",
          "10772: }",
          "10775: type FollowModeScheduleActionStartSettings struct {",
          "10776:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10888: func (s *Fmp4HlsSettings) SetNielsenId3Behavior(v string) *Fmp4HlsSettings {",
          "10889:  s.NielsenId3Behavior = &v",
          "10890:  return s",
          "10891: }",
          "10894: func (s *Fmp4HlsSettings) SetTimedMetadataBehavior(v string) *Fmp4HlsSettings {",
          "10895:  s.TimedMetadataBehavior = &v",
          "10896:  return s",
          "10897: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "11199:  return s",
          "11200: }",
          "11203: type H264Settings struct {",
          "11204:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11328: type H264FilterSettings struct {",
          "11329:  _ struct{} `type:\"structure\"`",
          "11332:  TemporalFilterSettings *TemporalFilterSettings `locationName:\"temporalFilterSettings\" type:\"structure\"`",
          "11333: }",
          "11336: func (s H264FilterSettings) String() string {",
          "11337:  return awsutil.Prettify(s)",
          "11338: }",
          "11341: func (s H264FilterSettings) GoString() string {",
          "11342:  return s.String()",
          "11343: }",
          "11346: func (s *H264FilterSettings) SetTemporalFilterSettings(v *TemporalFilterSettings) *H264FilterSettings {",
          "11347:  s.TemporalFilterSettings = v",
          "11348:  return s",
          "11349: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "11235:  EntropyEncoding *string `locationName:\"entropyEncoding\" type:\"string\" enum:\"H264EntropyEncoding\"`",
          "11239:  FixedAfd *string `locationName:\"fixedAfd\" type:\"string\" enum:\"FixedAfd\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11387:  FilterSettings *H264FilterSettings `locationName:\"filterSettings\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "11328:  Profile *string `locationName:\"profile\" type:\"string\" enum:\"H264Profile\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11485:  QualityLevel *string `locationName:\"qualityLevel\" type:\"string\" enum:\"H264QualityLevel\"`",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "11478:  return s",
          "11479: }",
          "11482: func (s *H264Settings) SetFixedAfd(v string) *H264Settings {",
          "11483:  s.FixedAfd = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11639: func (s *H264Settings) SetFilterSettings(v *H264FilterSettings) *H264Settings {",
          "11640:  s.FilterSettings = v",
          "11641:  return s",
          "11642: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "11598:  return s",
          "11599: }",
          "11602: func (s *H264Settings) SetQvbrQualityLevel(v int64) *H264Settings {",
          "11603:  s.QvbrQualityLevel = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11765: func (s *H264Settings) SetQualityLevel(v string) *H264Settings {",
          "11766:  s.QualityLevel = &v",
          "11767:  return s",
          "11768: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "20833:  return s",
          "20834: }",
          "20837: type TimecodeConfig struct {",
          "20838:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21008: type TemporalFilterSettings struct {",
          "21009:  _ struct{} `type:\"structure\"`",
          "21014:  PostFilterSharpening *string `locationName:\"postFilterSharpening\" type:\"string\" enum:\"TemporalFilterPostFilterSharpening\"`",
          "21017:  Strength *string `locationName:\"strength\" type:\"string\" enum:\"TemporalFilterStrength\"`",
          "21018: }",
          "21021: func (s TemporalFilterSettings) String() string {",
          "21022:  return awsutil.Prettify(s)",
          "21023: }",
          "21026: func (s TemporalFilterSettings) GoString() string {",
          "21027:  return s.String()",
          "21028: }",
          "21031: func (s *TemporalFilterSettings) SetPostFilterSharpening(v string) *TemporalFilterSettings {",
          "21032:  s.PostFilterSharpening = &v",
          "21033:  return s",
          "21034: }",
          "21037: func (s *TemporalFilterSettings) SetStrength(v string) *TemporalFilterSettings {",
          "21038:  s.Strength = &v",
          "21039:  return s",
          "21040: }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "22986:  FixedAfdAfd1111 = \"AFD_1111\"",
          "22987: )",
          "22990: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23196: const (",
          "23198:  Fmp4NielsenId3BehaviorNoPassthrough = \"NO_PASSTHROUGH\"",
          "23201:  Fmp4NielsenId3BehaviorPassthrough = \"PASSTHROUGH\"",
          "23202: )",
          "23205: const (",
          "23207:  Fmp4TimedMetadataBehaviorNoPassthrough = \"NO_PASSTHROUGH\"",
          "23210:  Fmp4TimedMetadataBehaviorPassthrough = \"PASSTHROUGH\"",
          "23211: )",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "23220:  H264ProfileMain = \"MAIN\"",
          "23221: )",
          "23224: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23448: const (",
          "23450:  H264QualityLevelEnhancedQuality = \"ENHANCED_QUALITY\"",
          "23453:  H264QualityLevelStandardQuality = \"STANDARD_QUALITY\"",
          "23454: )",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "24567:  SmoothGroupSparseTrackTypeScte35 = \"SCTE_35\"",
          "24568: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24803:  SmoothGroupSparseTrackTypeScte35WithoutSegmentation = \"SCTE_35_WITHOUT_SEGMENTATION\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "24585:  SmoothGroupTimestampOffsetModeUseEventStartDate = \"USE_EVENT_START_DATE\"",
          "24586: )",
          "24589: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24825: const (",
          "24827:  TemporalFilterPostFilterSharpeningAuto = \"AUTO\"",
          "24830:  TemporalFilterPostFilterSharpeningDisabled = \"DISABLED\"",
          "24833:  TemporalFilterPostFilterSharpeningEnabled = \"ENABLED\"",
          "24834: )",
          "24837: const (",
          "24839:  TemporalFilterStrengthAuto = \"AUTO\"",
          "24842:  TemporalFilterStrengthStrength1 = \"STRENGTH_1\"",
          "24845:  TemporalFilterStrengthStrength10 = \"STRENGTH_10\"",
          "24848:  TemporalFilterStrengthStrength11 = \"STRENGTH_11\"",
          "24851:  TemporalFilterStrengthStrength12 = \"STRENGTH_12\"",
          "24854:  TemporalFilterStrengthStrength13 = \"STRENGTH_13\"",
          "24857:  TemporalFilterStrengthStrength14 = \"STRENGTH_14\"",
          "24860:  TemporalFilterStrengthStrength15 = \"STRENGTH_15\"",
          "24863:  TemporalFilterStrengthStrength16 = \"STRENGTH_16\"",
          "24866:  TemporalFilterStrengthStrength2 = \"STRENGTH_2\"",
          "24869:  TemporalFilterStrengthStrength3 = \"STRENGTH_3\"",
          "24872:  TemporalFilterStrengthStrength4 = \"STRENGTH_4\"",
          "24875:  TemporalFilterStrengthStrength5 = \"STRENGTH_5\"",
          "24878:  TemporalFilterStrengthStrength6 = \"STRENGTH_6\"",
          "24881:  TemporalFilterStrengthStrength7 = \"STRENGTH_7\"",
          "24884:  TemporalFilterStrengthStrength8 = \"STRENGTH_8\"",
          "24887:  TemporalFilterStrengthStrength9 = \"STRENGTH_9\"",
          "24888: )",
          "",
          "---------------"
        ],
        "service/route53/api.go||service/route53/api.go": [
          "File: service/route53/api.go -> service/route53/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4325:   Name:       opListQueryLoggingConfigs,",
          "4326:   HTTPMethod: \"GET\",",
          "4327:   HTTPPath:   \"/2013-04-01/queryloggingconfig\",",
          "4328:  }",
          "4330:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4331:   Paginator: &request.Paginator{",
          "4332:    InputTokens:     []string{\"NextToken\"},",
          "4333:    OutputTokens:    []string{\"NextToken\"},",
          "4334:    LimitToken:      \"MaxResults\",",
          "4335:    TruncationToken: \"\",",
          "4336:   },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4387:  return out, req.Send()",
          "4388: }",
          "4390: const opListResourceRecordSets = \"ListResourceRecordSets\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4416: func (c *Route53) ListQueryLoggingConfigsPages(input *ListQueryLoggingConfigsInput, fn func(*ListQueryLoggingConfigsOutput, bool) bool) error {",
          "4417:  return c.ListQueryLoggingConfigsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "4418: }",
          "4427: func (c *Route53) ListQueryLoggingConfigsPagesWithContext(ctx aws.Context, input *ListQueryLoggingConfigsInput, fn func(*ListQueryLoggingConfigsOutput, bool) bool, opts ...request.Option) error {",
          "4428:  p := request.Pagination{",
          "4429:   NewRequest: func() (*request.Request, error) {",
          "4430:    var inCpy *ListQueryLoggingConfigsInput",
          "4431:    if input != nil {",
          "4432:     tmp := *input",
          "4433:     inCpy = &tmp",
          "4434:    }",
          "4435:    req, _ := c.ListQueryLoggingConfigsRequest(inCpy)",
          "4436:    req.SetContext(ctx)",
          "4437:    req.ApplyOptions(opts...)",
          "4438:    return req, nil",
          "4439:   },",
          "4440:  }",
          "4442:  for p.Next() {",
          "4443:   if !fn(p.Page().(*ListQueryLoggingConfigsOutput), !p.HasNextPage()) {",
          "4444:    break",
          "4445:   }",
          "4446:  }",
          "4448:  return p.Err()",
          "4449: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "15131:  CloudWatchRegionCnNorth1 = \"cn-north-1\"",
          "15132: )",
          "15134: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15195:  CloudWatchRegionAfSouth1 = \"af-south-1\"",
          "15198:  CloudWatchRegionUsGovWest1 = \"us-gov-west-1\"",
          "15201:  CloudWatchRegionUsGovEast1 = \"us-gov-east-1\"",
          "15204:  CloudWatchRegionUsIsoEast1 = \"us-iso-east-1\"",
          "15207:  CloudWatchRegionUsIsobEast1 = \"us-isob-east-1\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "15338:  ResourceRecordSetRegionApSouth1 = \"ap-south-1\"",
          "15339: )",
          "15341: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15417:  ResourceRecordSetRegionAfSouth1 = \"af-south-1\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "15400:  VPCRegionMeSouth1 = \"me-south-1\"",
          "15403:  VPCRegionApSoutheast1 = \"ap-southeast-1\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15482:  VPCRegionUsGovWest1 = \"us-gov-west-1\"",
          "15485:  VPCRegionUsGovEast1 = \"us-gov-east-1\"",
          "15488:  VPCRegionUsIsoEast1 = \"us-iso-east-1\"",
          "15491:  VPCRegionUsIsobEast1 = \"us-isob-east-1\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "15430:  VPCRegionCnNorth1 = \"cn-north-1\"",
          "15431: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15524:  VPCRegionAfSouth1 = \"af-south-1\"",
          "",
          "---------------"
        ],
        "service/route53/errors.go||service/route53/errors.go": [
          "File: service/route53/errors.go -> service/route53/errors.go"
        ],
        "service/route53/route53iface/interface.go||service/route53/route53iface/interface.go": [
          "File: service/route53/route53iface/interface.go -> service/route53/route53iface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "230:  ListQueryLoggingConfigsWithContext(aws.Context, *route53.ListQueryLoggingConfigsInput, ...request.Option) (*route53.ListQueryLoggingConfigsOutput, error)",
          "231:  ListQueryLoggingConfigsRequest(*route53.ListQueryLoggingConfigsInput) (*request.Request, *route53.ListQueryLoggingConfigsOutput)",
          "233:  ListResourceRecordSets(*route53.ListResourceRecordSetsInput) (*route53.ListResourceRecordSetsOutput, error)",
          "234:  ListResourceRecordSetsWithContext(aws.Context, *route53.ListResourceRecordSetsInput, ...request.Option) (*route53.ListResourceRecordSetsOutput, error)",
          "235:  ListResourceRecordSetsRequest(*route53.ListResourceRecordSetsInput) (*request.Request, *route53.ListResourceRecordSetsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "233:  ListQueryLoggingConfigsPages(*route53.ListQueryLoggingConfigsInput, func(*route53.ListQueryLoggingConfigsOutput, bool) bool) error",
          "234:  ListQueryLoggingConfigsPagesWithContext(aws.Context, *route53.ListQueryLoggingConfigsInput, func(*route53.ListQueryLoggingConfigsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------"
        ],
        "service/ssm/api.go||service/ssm/api.go": [
          "File: service/ssm/api.go -> service/ssm/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "12681:  Status *AssociationStatus `type:\"structure\"`",
          "12684:  Targets []*Target `type:\"list\"`",
          "12685: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12703:  SyncCompliance *string `type:\"string\" enum:\"AssociationSyncCompliance\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12808:  return s",
          "12809: }",
          "12812: func (s *AssociationDescription) SetTargets(v []*Target) *AssociationDescription {",
          "12813:  s.Targets = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12834: func (s *AssociationDescription) SetSyncCompliance(v string) *AssociationDescription {",
          "12835:  s.SyncCompliance = &v",
          "12836:  return s",
          "12837: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "13536:  ScheduleExpression *string `min:\"1\" type:\"string\"`",
          "13540:  Targets []*Target `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13578:  SyncCompliance *string `type:\"string\" enum:\"AssociationSyncCompliance\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "13622:  return s",
          "13623: }",
          "13626: func (s *AssociationVersionInfo) SetTargets(v []*Target) *AssociationVersionInfo {",
          "13627:  s.Targets = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13668: func (s *AssociationVersionInfo) SetSyncCompliance(v string) *AssociationVersionInfo {",
          "13669:  s.SyncCompliance = &v",
          "13670:  return s",
          "13671: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "16368:  ScheduleExpression *string `min:\"1\" type:\"string\"`",
          "16371:  Targets []*Target `type:\"list\"`",
          "16372: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16427:  SyncCompliance *string `type:\"string\" enum:\"AssociationSyncCompliance\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "16487:  return s",
          "16488: }",
          "16491: func (s *CreateAssociationBatchRequestEntry) SetTargets(v []*Target) *CreateAssociationBatchRequestEntry {",
          "16492:  s.Targets = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16550: func (s *CreateAssociationBatchRequestEntry) SetSyncCompliance(v string) *CreateAssociationBatchRequestEntry {",
          "16551:  s.SyncCompliance = &v",
          "16552:  return s",
          "16553: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "16578:  ScheduleExpression *string `min:\"1\" type:\"string\"`",
          "16582:  Targets []*Target `type:\"list\"`",
          "16583: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16657:  SyncCompliance *string `type:\"string\" enum:\"AssociationSyncCompliance\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "16698:  return s",
          "16699: }",
          "16702: func (s *CreateAssociationInput) SetTargets(v []*Target) *CreateAssociationInput {",
          "16703:  s.Targets = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16784: func (s *CreateAssociationInput) SetSyncCompliance(v string) *CreateAssociationInput {",
          "16785:  s.SyncCompliance = &v",
          "16786:  return s",
          "16787: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "37312:  ResourceType *string `min:\"1\" type:\"string\" required:\"true\"`",
          "37313: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37445:  UploadType *string `type:\"string\" enum:\"ComplianceUploadType\"`",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "37407:  return s",
          "37408: }",
          "37410: type PutComplianceItemsOutput struct {",
          "37411:  _ struct{} `type:\"structure\"`",
          "37412: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37544: func (s *PutComplianceItemsInput) SetUploadType(v string) *PutComplianceItemsInput {",
          "37545:  s.UploadType = &v",
          "37546:  return s",
          "37547: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "42749:  ScheduleExpression *string `min:\"1\" type:\"string\"`",
          "42752:  Targets []*Target `type:\"list\"`",
          "42753: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42901:  SyncCompliance *string `type:\"string\" enum:\"AssociationSyncCompliance\"`",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "42874:  return s",
          "42875: }",
          "42878: func (s *UpdateAssociationInput) SetTargets(v []*Target) *UpdateAssociationInput {",
          "42879:  s.Targets = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43030: func (s *UpdateAssociationInput) SetSyncCompliance(v string) *UpdateAssociationInput {",
          "43031:  s.SyncCompliance = &v",
          "43032:  return s",
          "43033: }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "44899:  AssociationFilterKeyAssociationName = \"AssociationName\"",
          "44900: )",
          "44902: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45077:  AssociationFilterKeyResourceGroupName = \"ResourceGroupName\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "44921:  AssociationStatusNameFailed = \"Failed\"",
          "44922: )",
          "44924: const (",
          "44926:  AttachmentHashTypeSha256 = \"Sha256\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45102: const (",
          "45104:  AssociationSyncComplianceAuto = \"AUTO\"",
          "45107:  AssociationSyncComplianceManual = \"MANUAL\"",
          "45108: )",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "45139:  ComplianceStatusNonCompliant = \"NON_COMPLIANT\"",
          "45140: )",
          "45142: const (",
          "45144:  ConnectionStatusConnected = \"Connected\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45328: const (",
          "45330:  ComplianceUploadTypeComplete = \"COMPLETE\"",
          "45333:  ComplianceUploadTypePartial = \"PARTIAL\"",
          "45334: )",
          "",
          "---------------"
        ],
        "service/ssm/doc.go||service/ssm/doc.go": [
          "File: service/ssm/doc.go -> service/ssm/doc.go"
        ],
        "service/ssm/errors.go||service/ssm/errors.go": [
          "File: service/ssm/errors.go -> service/ssm/errors.go"
        ]
      }
    },
    {
      "candidate_hash": "32dab430faeada57e79f8c9f0be15d1258c6d0af",
      "candidate_info": {
        "commit_hash": "32dab430faeada57e79f8c9f0be15d1258c6d0af",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/32dab430faeada57e79f8c9f0be15d1258c6d0af",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/cloudfront/2020-05-31/docs-2.json",
          "models/apis/codebuild/2016-10-06/api-2.json",
          "models/apis/codebuild/2016-10-06/docs-2.json",
          "models/apis/codebuild/2016-10-06/paginators-1.json",
          "models/apis/ec2/2016-11-15/api-2.json",
          "models/apis/guardduty/2017-11-28/api-2.json",
          "models/apis/guardduty/2017-11-28/docs-2.json",
          "models/apis/guardduty/2017-11-28/paginators-1.json",
          "models/apis/kafka/2018-11-14/api-2.json",
          "models/apis/kafka/2018-11-14/docs-2.json",
          "models/apis/organizations/2016-11-28/docs-2.json",
          "models/apis/resource-groups/2017-11-27/docs-2.json",
          "models/apis/servicecatalog/2015-12-10/api-2.json",
          "models/apis/servicecatalog/2015-12-10/docs-2.json",
          "models/apis/sesv2/2019-09-27/api-2.json",
          "models/apis/sesv2/2019-09-27/docs-2.json",
          "models/apis/sesv2/2019-09-27/paginators-1.json",
          "models/endpoints/endpoints.json",
          "service/cloudfront/api.go",
          "service/codebuild/api.go",
          "service/codebuild/codebuildiface/interface.go",
          "service/ec2/api.go",
          "service/guardduty/api.go",
          "service/guardduty/guarddutyiface/interface.go",
          "service/kafka/api.go",
          "service/kafka/kafkaiface/interface.go",
          "service/organizations/api.go",
          "service/resourcegroups/api.go",
          "service/servicecatalog/api.go",
          "service/sesv2/api.go",
          "service/sesv2/errors.go",
          "service/sesv2/sesv2iface/interface.go"
        ],
        "message": "Release v1.33.16 (2020-07-30) ===\n\n### Service Client Updates\n* `service/cloudfront`: Updates service documentation\n  * Documentation updates for CloudFront\n* `service/codebuild`: Updates service API, documentation, and paginators\n  * Adding support for BuildBatch, and CodeCoverage APIs. BuildBatch allows you to model your project environment in source, and helps start multiple builds with a single API call. CodeCoverage allows you to track your code coverage using AWS CodeBuild.\n* `service/ec2`: Updates service API\n  * EC2 On-Demand Capacity Reservations now adds support to bring your own licenses (BYOL) of Windows operating system to launch EC2 instances.\n* `service/guardduty`: Updates service API, documentation, and paginators\n  * GuardDuty can now provide detailed cost metrics broken down by account, data source, and S3 resources, based on the past 30 days of usage.  This new feature also supports viewing cost metrics for all member accounts as a GuardDuty master.\n* `service/kafka`: Updates service API and documentation\n* `service/organizations`: Updates service documentation\n  * Documentation updates for AWS Organizations\n* `service/resource-groups`: Updates service documentation\n* `service/servicecatalog`: Updates service API and documentation\n  * This release adds support for ProvisionProduct, UpdateProvisionedProduct & DescribeProvisioningParameters by product name, provisioning artifact name and path name. In addition DescribeProvisioningParameters now returns a list of provisioning artifact outputs.\n* `service/sesv2`: Updates service API, documentation, and paginators",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/cloudfront/api.go||service/cloudfront/api.go",
          "service/codebuild/api.go||service/codebuild/api.go",
          "service/codebuild/codebuildiface/interface.go||service/codebuild/codebuildiface/interface.go",
          "service/ec2/api.go||service/ec2/api.go",
          "service/guardduty/api.go||service/guardduty/api.go",
          "service/guardduty/guarddutyiface/interface.go||service/guardduty/guarddutyiface/interface.go",
          "service/kafka/api.go||service/kafka/api.go",
          "service/kafka/kafkaiface/interface.go||service/kafka/kafkaiface/interface.go",
          "service/organizations/api.go||service/organizations/api.go",
          "service/resourcegroups/api.go||service/resourcegroups/api.go",
          "service/servicecatalog/api.go||service/servicecatalog/api.go",
          "service/sesv2/api.go||service/sesv2/api.go",
          "service/sesv2/errors.go||service/sesv2/errors.go",
          "service/sesv2/sesv2iface/interface.go||service/sesv2/sesv2iface/interface.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/organizations/api.go||service/organizations/api.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/organizations/api.go||service/organizations/api.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "898:     \"ca-central-1\":   endpoint{},",
          "899:     \"eu-central-1\":   endpoint{},",
          "900:     \"eu-north-1\":     endpoint{},",
          "901:     \"eu-west-1\":      endpoint{},",
          "902:     \"eu-west-2\":      endpoint{},",
          "903:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "901:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1813:   \"ds\": service{",
          "1815:    Endpoints: endpoints{",
          "1816:     \"ap-east-1\":      endpoint{},",
          "1817:     \"ap-northeast-1\": endpoint{},",
          "1818:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1817:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1822:     \"ca-central-1\":   endpoint{},",
          "1823:     \"eu-central-1\":   endpoint{},",
          "1824:     \"eu-north-1\":     endpoint{},",
          "1825:     \"eu-west-1\":      endpoint{},",
          "1826:     \"eu-west-2\":      endpoint{},",
          "1827:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1827:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "6344:   },",
          "6345:  },",
          "6346:  Services: services{",
          "6347:   \"acm\": service{",
          "6349:    Endpoints: endpoints{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6350:   \"access-analyzer\": service{",
          "6352:    Endpoints: endpoints{",
          "6353:     \"cn-north-1\":     endpoint{},",
          "6354:     \"cn-northwest-1\": endpoint{},",
          "6355:    },",
          "6356:   },",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.33.15\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.33.16\"",
          "",
          "---------------"
        ],
        "service/cloudfront/api.go||service/cloudfront/api.go": [
          "File: service/cloudfront/api.go -> service/cloudfront/api.go"
        ],
        "service/codebuild/api.go||service/codebuild/api.go": [
          "File: service/codebuild/api.go -> service/codebuild/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "92:  return out, req.Send()",
          "93: }",
          "95: const opBatchGetBuilds = \"BatchGetBuilds\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "95: const opBatchGetBuildBatches = \"BatchGetBuildBatches\"",
          "121: func (c *CodeBuild) BatchGetBuildBatchesRequest(input *BatchGetBuildBatchesInput) (req *request.Request, output *BatchGetBuildBatchesOutput) {",
          "122:  op := &request.Operation{",
          "123:   Name:       opBatchGetBuildBatches,",
          "124:   HTTPMethod: \"POST\",",
          "125:   HTTPPath:   \"/\",",
          "126:  }",
          "128:  if input == nil {",
          "129:   input = &BatchGetBuildBatchesInput{}",
          "130:  }",
          "132:  output = &BatchGetBuildBatchesOutput{}",
          "133:  req = c.newRequest(op, input, output)",
          "134:  return",
          "135: }",
          "153: func (c *CodeBuild) BatchGetBuildBatches(input *BatchGetBuildBatchesInput) (*BatchGetBuildBatchesOutput, error) {",
          "154:  req, out := c.BatchGetBuildBatchesRequest(input)",
          "155:  return out, req.Send()",
          "156: }",
          "167: func (c *CodeBuild) BatchGetBuildBatchesWithContext(ctx aws.Context, input *BatchGetBuildBatchesInput, opts ...request.Option) (*BatchGetBuildBatchesOutput, error) {",
          "168:  req, out := c.BatchGetBuildBatchesRequest(input)",
          "169:  req.SetContext(ctx)",
          "170:  req.ApplyOptions(opts...)",
          "171:  return out, req.Send()",
          "172: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "680:  return out, req.Send()",
          "681: }",
          "683: const opDeleteProject = \"DeleteProject\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "762: const opDeleteBuildBatch = \"DeleteBuildBatch\"",
          "788: func (c *CodeBuild) DeleteBuildBatchRequest(input *DeleteBuildBatchInput) (req *request.Request, output *DeleteBuildBatchOutput) {",
          "789:  op := &request.Operation{",
          "790:   Name:       opDeleteBuildBatch,",
          "791:   HTTPMethod: \"POST\",",
          "792:   HTTPPath:   \"/\",",
          "793:  }",
          "795:  if input == nil {",
          "796:   input = &DeleteBuildBatchInput{}",
          "797:  }",
          "799:  output = &DeleteBuildBatchOutput{}",
          "800:  req = c.newRequest(op, input, output)",
          "801:  return",
          "802: }",
          "820: func (c *CodeBuild) DeleteBuildBatch(input *DeleteBuildBatchInput) (*DeleteBuildBatchOutput, error) {",
          "821:  req, out := c.DeleteBuildBatchRequest(input)",
          "822:  return out, req.Send()",
          "823: }",
          "834: func (c *CodeBuild) DeleteBuildBatchWithContext(ctx aws.Context, input *DeleteBuildBatchInput, opts ...request.Option) (*DeleteBuildBatchOutput, error) {",
          "835:  req, out := c.DeleteBuildBatchRequest(input)",
          "836:  req.SetContext(ctx)",
          "837:  req.ApplyOptions(opts...)",
          "838:  return out, req.Send()",
          "839: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1174:  return out, req.Send()",
          "1175: }",
          "1177: const opDescribeTestCases = \"DescribeTestCases\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1335: const opDescribeCodeCoverages = \"DescribeCodeCoverages\"",
          "1361: func (c *CodeBuild) DescribeCodeCoveragesRequest(input *DescribeCodeCoveragesInput) (req *request.Request, output *DescribeCodeCoveragesOutput) {",
          "1362:  op := &request.Operation{",
          "1363:   Name:       opDescribeCodeCoverages,",
          "1364:   HTTPMethod: \"POST\",",
          "1365:   HTTPPath:   \"/\",",
          "1366:   Paginator: &request.Paginator{",
          "1367:    InputTokens:     []string{\"nextToken\"},",
          "1368:    OutputTokens:    []string{\"nextToken\"},",
          "1369:    LimitToken:      \"maxResults\",",
          "1370:    TruncationToken: \"\",",
          "1371:   },",
          "1372:  }",
          "1374:  if input == nil {",
          "1375:   input = &DescribeCodeCoveragesInput{}",
          "1376:  }",
          "1378:  output = &DescribeCodeCoveragesOutput{}",
          "1379:  req = c.newRequest(op, input, output)",
          "1380:  return",
          "1381: }",
          "1399: func (c *CodeBuild) DescribeCodeCoverages(input *DescribeCodeCoveragesInput) (*DescribeCodeCoveragesOutput, error) {",
          "1400:  req, out := c.DescribeCodeCoveragesRequest(input)",
          "1401:  return out, req.Send()",
          "1402: }",
          "1413: func (c *CodeBuild) DescribeCodeCoveragesWithContext(ctx aws.Context, input *DescribeCodeCoveragesInput, opts ...request.Option) (*DescribeCodeCoveragesOutput, error) {",
          "1414:  req, out := c.DescribeCodeCoveragesRequest(input)",
          "1415:  req.SetContext(ctx)",
          "1416:  req.ApplyOptions(opts...)",
          "1417:  return out, req.Send()",
          "1418: }",
          "1437: func (c *CodeBuild) DescribeCodeCoveragesPages(input *DescribeCodeCoveragesInput, fn func(*DescribeCodeCoveragesOutput, bool) bool) error {",
          "1438:  return c.DescribeCodeCoveragesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1439: }",
          "1448: func (c *CodeBuild) DescribeCodeCoveragesPagesWithContext(ctx aws.Context, input *DescribeCodeCoveragesInput, fn func(*DescribeCodeCoveragesOutput, bool) bool, opts ...request.Option) error {",
          "1449:  p := request.Pagination{",
          "1450:   NewRequest: func() (*request.Request, error) {",
          "1451:    var inCpy *DescribeCodeCoveragesInput",
          "1452:    if input != nil {",
          "1453:     tmp := *input",
          "1454:     inCpy = &tmp",
          "1455:    }",
          "1456:    req, _ := c.DescribeCodeCoveragesRequest(inCpy)",
          "1457:    req.SetContext(ctx)",
          "1458:    req.ApplyOptions(opts...)",
          "1459:    return req, nil",
          "1460:   },",
          "1461:  }",
          "1463:  for p.Next() {",
          "1464:   if !fn(p.Page().(*DescribeCodeCoveragesOutput), !p.HasNextPage()) {",
          "1465:    break",
          "1466:   }",
          "1467:  }",
          "1469:  return p.Err()",
          "1470: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1566:  return out, req.Send()",
          "1567: }",
          "1596:  op := &request.Operation{",
          "1598:   HTTPMethod: \"POST\",",
          "1599:   HTTPPath:   \"/\",",
          "1600:   Paginator: &request.Paginator{",
          "1601:    InputTokens:     []string{\"nextToken\"},",
          "1602:    OutputTokens:    []string{\"nextToken\"},",
          "1604:    TruncationToken: \"\",",
          "1605:   },",
          "1606:  }",
          "1608:  if input == nil {",
          "1610:  }",
          "1613:  req = c.newRequest(op, input, output)",
          "1614:  return",
          "1615: }",
          "1635:  return out, req.Send()",
          "1636: }",
          "1649:  req.SetContext(ctx)",
          "1650:  req.ApplyOptions(opts...)",
          "1651:  return out, req.Send()",
          "1652: }",
          "1673: }",
          "1683:  p := request.Pagination{",
          "1684:   NewRequest: func() (*request.Request, error) {",
          "1686:    if input != nil {",
          "1687:     tmp := *input",
          "1688:     inCpy = &tmp",
          "1689:    }",
          "1691:    req.SetContext(ctx)",
          "1692:    req.ApplyOptions(opts...)",
          "1693:    return req, nil",
          "",
          "[Removed Lines]",
          "1569: const opListBuilds = \"ListBuilds\"",
          "1595: func (c *CodeBuild) ListBuildsRequest(input *ListBuildsInput) (req *request.Request, output *ListBuildsOutput) {",
          "1597:   Name:       opListBuilds,",
          "1603:    LimitToken:      \"\",",
          "1609:   input = &ListBuildsInput{}",
          "1612:  output = &ListBuildsOutput{}",
          "1633: func (c *CodeBuild) ListBuilds(input *ListBuildsInput) (*ListBuildsOutput, error) {",
          "1634:  req, out := c.ListBuildsRequest(input)",
          "1647: func (c *CodeBuild) ListBuildsWithContext(ctx aws.Context, input *ListBuildsInput, opts ...request.Option) (*ListBuildsOutput, error) {",
          "1648:  req, out := c.ListBuildsRequest(input)",
          "1671: func (c *CodeBuild) ListBuildsPages(input *ListBuildsInput, fn func(*ListBuildsOutput, bool) bool) error {",
          "1672:  return c.ListBuildsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1682: func (c *CodeBuild) ListBuildsPagesWithContext(ctx aws.Context, input *ListBuildsInput, fn func(*ListBuildsOutput, bool) bool, opts ...request.Option) error {",
          "1685:    var inCpy *ListBuildsInput",
          "1690:    req, _ := c.ListBuildsRequest(inCpy)",
          "",
          "[Added Lines]",
          "1864: const opListBuildBatches = \"ListBuildBatches\"",
          "1890: func (c *CodeBuild) ListBuildBatchesRequest(input *ListBuildBatchesInput) (req *request.Request, output *ListBuildBatchesOutput) {",
          "1892:   Name:       opListBuildBatches,",
          "1898:    LimitToken:      \"maxResults\",",
          "1904:   input = &ListBuildBatchesInput{}",
          "1907:  output = &ListBuildBatchesOutput{}",
          "1928: func (c *CodeBuild) ListBuildBatches(input *ListBuildBatchesInput) (*ListBuildBatchesOutput, error) {",
          "1929:  req, out := c.ListBuildBatchesRequest(input)",
          "1942: func (c *CodeBuild) ListBuildBatchesWithContext(ctx aws.Context, input *ListBuildBatchesInput, opts ...request.Option) (*ListBuildBatchesOutput, error) {",
          "1943:  req, out := c.ListBuildBatchesRequest(input)",
          "1966: func (c *CodeBuild) ListBuildBatchesPages(input *ListBuildBatchesInput, fn func(*ListBuildBatchesOutput, bool) bool) error {",
          "1967:  return c.ListBuildBatchesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1977: func (c *CodeBuild) ListBuildBatchesPagesWithContext(ctx aws.Context, input *ListBuildBatchesInput, fn func(*ListBuildBatchesOutput, bool) bool, opts ...request.Option) error {",
          "1980:    var inCpy *ListBuildBatchesInput",
          "1985:    req, _ := c.ListBuildBatchesRequest(inCpy)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1695:  }",
          "1697:  for p.Next() {",
          "1699:    break",
          "1700:   }",
          "1701:  }",
          "",
          "[Removed Lines]",
          "1698:   if !fn(p.Page().(*ListBuildsOutput), !p.HasNextPage()) {",
          "",
          "[Added Lines]",
          "1993:   if !fn(p.Page().(*ListBuildBatchesOutput), !p.HasNextPage()) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1703:  return p.Err()",
          "1704: }",
          "",
          "[Removed Lines]",
          "1706: const opListBuildsForProject = \"ListBuildsForProject\"",
          "",
          "[Added Lines]",
          "2001: const opListBuildBatchesForProject = \"ListBuildBatchesForProject\"",
          "2027: func (c *CodeBuild) ListBuildBatchesForProjectRequest(input *ListBuildBatchesForProjectInput) (req *request.Request, output *ListBuildBatchesForProjectOutput) {",
          "2028:  op := &request.Operation{",
          "2029:   Name:       opListBuildBatchesForProject,",
          "2030:   HTTPMethod: \"POST\",",
          "2031:   HTTPPath:   \"/\",",
          "2032:   Paginator: &request.Paginator{",
          "2033:    InputTokens:     []string{\"nextToken\"},",
          "2034:    OutputTokens:    []string{\"nextToken\"},",
          "2035:    LimitToken:      \"maxResults\",",
          "2036:    TruncationToken: \"\",",
          "2037:   },",
          "2038:  }",
          "2040:  if input == nil {",
          "2041:   input = &ListBuildBatchesForProjectInput{}",
          "2042:  }",
          "2044:  output = &ListBuildBatchesForProjectOutput{}",
          "2045:  req = c.newRequest(op, input, output)",
          "2046:  return",
          "2047: }",
          "2068: func (c *CodeBuild) ListBuildBatchesForProject(input *ListBuildBatchesForProjectInput) (*ListBuildBatchesForProjectOutput, error) {",
          "2069:  req, out := c.ListBuildBatchesForProjectRequest(input)",
          "2070:  return out, req.Send()",
          "2071: }",
          "2082: func (c *CodeBuild) ListBuildBatchesForProjectWithContext(ctx aws.Context, input *ListBuildBatchesForProjectInput, opts ...request.Option) (*ListBuildBatchesForProjectOutput, error) {",
          "2083:  req, out := c.ListBuildBatchesForProjectRequest(input)",
          "2084:  req.SetContext(ctx)",
          "2085:  req.ApplyOptions(opts...)",
          "2086:  return out, req.Send()",
          "2087: }",
          "2106: func (c *CodeBuild) ListBuildBatchesForProjectPages(input *ListBuildBatchesForProjectInput, fn func(*ListBuildBatchesForProjectOutput, bool) bool) error {",
          "2107:  return c.ListBuildBatchesForProjectPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2108: }",
          "2117: func (c *CodeBuild) ListBuildBatchesForProjectPagesWithContext(ctx aws.Context, input *ListBuildBatchesForProjectInput, fn func(*ListBuildBatchesForProjectOutput, bool) bool, opts ...request.Option) error {",
          "2118:  p := request.Pagination{",
          "2119:   NewRequest: func() (*request.Request, error) {",
          "2120:    var inCpy *ListBuildBatchesForProjectInput",
          "2121:    if input != nil {",
          "2122:     tmp := *input",
          "2123:     inCpy = &tmp",
          "2124:    }",
          "2125:    req, _ := c.ListBuildBatchesForProjectRequest(inCpy)",
          "2126:    req.SetContext(ctx)",
          "2127:    req.ApplyOptions(opts...)",
          "2128:    return req, nil",
          "2129:   },",
          "2130:  }",
          "2132:  for p.Next() {",
          "2133:   if !fn(p.Page().(*ListBuildBatchesForProjectOutput), !p.HasNextPage()) {",
          "2134:    break",
          "2135:   }",
          "2136:  }",
          "2138:  return p.Err()",
          "2139: }",
          "2141: const opListBuilds = \"ListBuilds\"",
          "2167: func (c *CodeBuild) ListBuildsRequest(input *ListBuildsInput) (req *request.Request, output *ListBuildsOutput) {",
          "2168:  op := &request.Operation{",
          "2169:   Name:       opListBuilds,",
          "2170:   HTTPMethod: \"POST\",",
          "2171:   HTTPPath:   \"/\",",
          "2172:   Paginator: &request.Paginator{",
          "2173:    InputTokens:     []string{\"nextToken\"},",
          "2174:    OutputTokens:    []string{\"nextToken\"},",
          "2175:    LimitToken:      \"\",",
          "2176:    TruncationToken: \"\",",
          "2177:   },",
          "2178:  }",
          "2180:  if input == nil {",
          "2181:   input = &ListBuildsInput{}",
          "2182:  }",
          "2184:  output = &ListBuildsOutput{}",
          "2185:  req = c.newRequest(op, input, output)",
          "2186:  return",
          "2187: }",
          "2205: func (c *CodeBuild) ListBuilds(input *ListBuildsInput) (*ListBuildsOutput, error) {",
          "2206:  req, out := c.ListBuildsRequest(input)",
          "2207:  return out, req.Send()",
          "2208: }",
          "2219: func (c *CodeBuild) ListBuildsWithContext(ctx aws.Context, input *ListBuildsInput, opts ...request.Option) (*ListBuildsOutput, error) {",
          "2220:  req, out := c.ListBuildsRequest(input)",
          "2221:  req.SetContext(ctx)",
          "2222:  req.ApplyOptions(opts...)",
          "2223:  return out, req.Send()",
          "2224: }",
          "2243: func (c *CodeBuild) ListBuildsPages(input *ListBuildsInput, fn func(*ListBuildsOutput, bool) bool) error {",
          "2244:  return c.ListBuildsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2245: }",
          "2254: func (c *CodeBuild) ListBuildsPagesWithContext(ctx aws.Context, input *ListBuildsInput, fn func(*ListBuildsOutput, bool) bool, opts ...request.Option) error {",
          "2255:  p := request.Pagination{",
          "2256:   NewRequest: func() (*request.Request, error) {",
          "2257:    var inCpy *ListBuildsInput",
          "2258:    if input != nil {",
          "2259:     tmp := *input",
          "2260:     inCpy = &tmp",
          "2261:    }",
          "2262:    req, _ := c.ListBuildsRequest(inCpy)",
          "2263:    req.SetContext(ctx)",
          "2264:    req.ApplyOptions(opts...)",
          "2265:    return req, nil",
          "2266:   },",
          "2267:  }",
          "2269:  for p.Next() {",
          "2270:   if !fn(p.Page().(*ListBuildsOutput), !p.HasNextPage()) {",
          "2271:    break",
          "2272:   }",
          "2273:  }",
          "2275:  return p.Err()",
          "2276: }",
          "2278: const opListBuildsForProject = \"ListBuildsForProject\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2900:  return out, req.Send()",
          "2901: }",
          "",
          "[Removed Lines]",
          "2903: const opStartBuild = \"StartBuild\"",
          "",
          "[Added Lines]",
          "3480: const opRetryBuild = \"RetryBuild\"",
          "3506: func (c *CodeBuild) RetryBuildRequest(input *RetryBuildInput) (req *request.Request, output *RetryBuildOutput) {",
          "3507:  op := &request.Operation{",
          "3508:   Name:       opRetryBuild,",
          "3509:   HTTPMethod: \"POST\",",
          "3510:   HTTPPath:   \"/\",",
          "3511:  }",
          "3513:  if input == nil {",
          "3514:   input = &RetryBuildInput{}",
          "3515:  }",
          "3517:  output = &RetryBuildOutput{}",
          "3518:  req = c.newRequest(op, input, output)",
          "3519:  return",
          "3520: }",
          "3544: func (c *CodeBuild) RetryBuild(input *RetryBuildInput) (*RetryBuildOutput, error) {",
          "3545:  req, out := c.RetryBuildRequest(input)",
          "3546:  return out, req.Send()",
          "3547: }",
          "3558: func (c *CodeBuild) RetryBuildWithContext(ctx aws.Context, input *RetryBuildInput, opts ...request.Option) (*RetryBuildOutput, error) {",
          "3559:  req, out := c.RetryBuildRequest(input)",
          "3560:  req.SetContext(ctx)",
          "3561:  req.ApplyOptions(opts...)",
          "3562:  return out, req.Send()",
          "3563: }",
          "3565: const opRetryBuildBatch = \"RetryBuildBatch\"",
          "3591: func (c *CodeBuild) RetryBuildBatchRequest(input *RetryBuildBatchInput) (req *request.Request, output *RetryBuildBatchOutput) {",
          "3592:  op := &request.Operation{",
          "3593:   Name:       opRetryBuildBatch,",
          "3594:   HTTPMethod: \"POST\",",
          "3595:   HTTPPath:   \"/\",",
          "3596:  }",
          "3598:  if input == nil {",
          "3599:   input = &RetryBuildBatchInput{}",
          "3600:  }",
          "3602:  output = &RetryBuildBatchOutput{}",
          "3603:  req = c.newRequest(op, input, output)",
          "3604:  return",
          "3605: }",
          "3626: func (c *CodeBuild) RetryBuildBatch(input *RetryBuildBatchInput) (*RetryBuildBatchOutput, error) {",
          "3627:  req, out := c.RetryBuildBatchRequest(input)",
          "3628:  return out, req.Send()",
          "3629: }",
          "3640: func (c *CodeBuild) RetryBuildBatchWithContext(ctx aws.Context, input *RetryBuildBatchInput, opts ...request.Option) (*RetryBuildBatchOutput, error) {",
          "3641:  req, out := c.RetryBuildBatchRequest(input)",
          "3642:  req.SetContext(ctx)",
          "3643:  req.ApplyOptions(opts...)",
          "3644:  return out, req.Send()",
          "3645: }",
          "3647: const opStartBuild = \"StartBuild\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2985:  return out, req.Send()",
          "2986: }",
          "2988: const opStopBuild = \"StopBuild\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3732: const opStartBuildBatch = \"StartBuildBatch\"",
          "3758: func (c *CodeBuild) StartBuildBatchRequest(input *StartBuildBatchInput) (req *request.Request, output *StartBuildBatchOutput) {",
          "3759:  op := &request.Operation{",
          "3760:   Name:       opStartBuildBatch,",
          "3761:   HTTPMethod: \"POST\",",
          "3762:   HTTPPath:   \"/\",",
          "3763:  }",
          "3765:  if input == nil {",
          "3766:   input = &StartBuildBatchInput{}",
          "3767:  }",
          "3769:  output = &StartBuildBatchOutput{}",
          "3770:  req = c.newRequest(op, input, output)",
          "3771:  return",
          "3772: }",
          "3793: func (c *CodeBuild) StartBuildBatch(input *StartBuildBatchInput) (*StartBuildBatchOutput, error) {",
          "3794:  req, out := c.StartBuildBatchRequest(input)",
          "3795:  return out, req.Send()",
          "3796: }",
          "3807: func (c *CodeBuild) StartBuildBatchWithContext(ctx aws.Context, input *StartBuildBatchInput, opts ...request.Option) (*StartBuildBatchOutput, error) {",
          "3808:  req, out := c.StartBuildBatchRequest(input)",
          "3809:  req.SetContext(ctx)",
          "3810:  req.ApplyOptions(opts...)",
          "3811:  return out, req.Send()",
          "3812: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "3067:  return out, req.Send()",
          "3068: }",
          "3070: const opUpdateProject = \"UpdateProject\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3896: const opStopBuildBatch = \"StopBuildBatch\"",
          "3922: func (c *CodeBuild) StopBuildBatchRequest(input *StopBuildBatchInput) (req *request.Request, output *StopBuildBatchOutput) {",
          "3923:  op := &request.Operation{",
          "3924:   Name:       opStopBuildBatch,",
          "3925:   HTTPMethod: \"POST\",",
          "3926:   HTTPPath:   \"/\",",
          "3927:  }",
          "3929:  if input == nil {",
          "3930:   input = &StopBuildBatchInput{}",
          "3931:  }",
          "3933:  output = &StopBuildBatchOutput{}",
          "3934:  req = c.newRequest(op, input, output)",
          "3935:  return",
          "3936: }",
          "3957: func (c *CodeBuild) StopBuildBatch(input *StopBuildBatchInput) (*StopBuildBatchOutput, error) {",
          "3958:  req, out := c.StopBuildBatchRequest(input)",
          "3959:  return out, req.Send()",
          "3960: }",
          "3971: func (c *CodeBuild) StopBuildBatchWithContext(ctx aws.Context, input *StopBuildBatchInput, opts ...request.Option) (*StopBuildBatchOutput, error) {",
          "3972:  req, out := c.StopBuildBatchRequest(input)",
          "3973:  req.SetContext(ctx)",
          "3974:  req.ApplyOptions(opts...)",
          "3975:  return out, req.Send()",
          "3976: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "3447:  return s",
          "3448: }",
          "3451:  _ struct{} `type:\"structure\"`",
          "3457: }",
          "",
          "[Removed Lines]",
          "3450: type BatchGetBuildsInput struct {",
          "3456:  Ids []*string `locationName:\"ids\" min:\"1\" type:\"list\" required:\"true\"`",
          "",
          "[Added Lines]",
          "4358: type BatchGetBuildBatchesInput struct {",
          "4364:  Ids []*string `locationName:\"ids\" type:\"list\" required:\"true\"`",
          "4365: }",
          "4368: func (s BatchGetBuildBatchesInput) String() string {",
          "4369:  return awsutil.Prettify(s)",
          "4370: }",
          "4373: func (s BatchGetBuildBatchesInput) GoString() string {",
          "4374:  return s.String()",
          "4375: }",
          "4378: func (s *BatchGetBuildBatchesInput) Validate() error {",
          "4379:  invalidParams := request.ErrInvalidParams{Context: \"BatchGetBuildBatchesInput\"}",
          "4380:  if s.Ids == nil {",
          "4381:   invalidParams.Add(request.NewErrParamRequired(\"Ids\"))",
          "4382:  }",
          "4384:  if invalidParams.Len() > 0 {",
          "4385:   return invalidParams",
          "4386:  }",
          "4387:  return nil",
          "4388: }",
          "4391: func (s *BatchGetBuildBatchesInput) SetIds(v []*string) *BatchGetBuildBatchesInput {",
          "4392:  s.Ids = v",
          "4393:  return s",
          "4394: }",
          "4396: type BatchGetBuildBatchesOutput struct {",
          "4397:  _ struct{} `type:\"structure\"`",
          "4400:  BuildBatches []*BuildBatch `locationName:\"buildBatches\" type:\"list\"`",
          "4403:  BuildBatchesNotFound []*string `locationName:\"buildBatchesNotFound\" type:\"list\"`",
          "4404: }",
          "4407: func (s BatchGetBuildBatchesOutput) String() string {",
          "4408:  return awsutil.Prettify(s)",
          "4409: }",
          "4412: func (s BatchGetBuildBatchesOutput) GoString() string {",
          "4413:  return s.String()",
          "4414: }",
          "4417: func (s *BatchGetBuildBatchesOutput) SetBuildBatches(v []*BuildBatch) *BatchGetBuildBatchesOutput {",
          "4418:  s.BuildBatches = v",
          "4419:  return s",
          "4420: }",
          "4423: func (s *BatchGetBuildBatchesOutput) SetBuildBatchesNotFound(v []*string) *BatchGetBuildBatchesOutput {",
          "4424:  s.BuildBatchesNotFound = v",
          "4425:  return s",
          "4426: }",
          "4428: type BatchGetBuildsInput struct {",
          "4429:  _ struct{} `type:\"structure\"`",
          "4434:  Ids []*string `locationName:\"ids\" min:\"1\" type:\"list\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "3743:  return s",
          "3744: }",
          "3747: type Build struct {",
          "3748:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4725: type BatchRestrictions struct {",
          "4726:  _ struct{} `type:\"structure\"`",
          "4731:  ComputeTypesAllowed []*string `locationName:\"computeTypesAllowed\" type:\"list\"`",
          "4734:  MaximumBuildsAllowed *int64 `locationName:\"maximumBuildsAllowed\" type:\"integer\"`",
          "4735: }",
          "4738: func (s BatchRestrictions) String() string {",
          "4739:  return awsutil.Prettify(s)",
          "4740: }",
          "4743: func (s BatchRestrictions) GoString() string {",
          "4744:  return s.String()",
          "4745: }",
          "4748: func (s *BatchRestrictions) SetComputeTypesAllowed(v []*string) *BatchRestrictions {",
          "4749:  s.ComputeTypesAllowed = v",
          "4750:  return s",
          "4751: }",
          "4754: func (s *BatchRestrictions) SetMaximumBuildsAllowed(v int64) *BatchRestrictions {",
          "4755:  s.MaximumBuildsAllowed = &v",
          "4756:  return s",
          "4757: }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "3754:  Artifacts *BuildArtifacts `locationName:\"artifacts\" type:\"structure\"`",
          "3757:  BuildComplete *bool `locationName:\"buildComplete\" type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4770:  BuildBatchArn *string `locationName:\"buildBatchArn\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "3930:  return s",
          "3931: }",
          "3934: func (s *Build) SetBuildComplete(v bool) *Build {",
          "3935:  s.BuildComplete = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4950: func (s *Build) SetBuildBatchArn(v string) *Build {",
          "4951:  s.BuildBatchArn = &v",
          "4952:  return s",
          "4953: }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "4188:  return s",
          "4189: }",
          "4193:  _ struct{} `type:\"structure\"`",
          "4285:  StartTime *time.Time `locationName:\"startTime\" type:\"timestamp\"`",
          "4286: }",
          "4290:  return awsutil.Prettify(s)",
          "4291: }",
          "4295:  return s.String()",
          "4296: }",
          "4301:  return s",
          "4302: }",
          "4307:  return s",
          "4308: }",
          "4313:  return s",
          "4314: }",
          "4319:  return s",
          "4320: }",
          "4325:  return s",
          "4326: }",
          "4331:  return s",
          "4332: }",
          "4370: }",
          "4375: }",
          "4380: }",
          "4385:  return s",
          "4386: }",
          "4391:  return s",
          "4392: }",
          "4415: }",
          "4420: }",
          "4425: }",
          "4438: }",
          "4443:  return s",
          "4444: }",
          "4449:  return s",
          "4450: }",
          "4455:  return s",
          "4456: }",
          "4572: }",
          "4576:  return awsutil.Prettify(s)",
          "4577: }",
          "4581:  return s.String()",
          "4582: }",
          "4697:  return s",
          "4698: }",
          "4703:  return s",
          "4704: }",
          "4709:  return s",
          "4710: }",
          "4715:  return s",
          "4716: }",
          "4721:  return s",
          "4722: }",
          "4727:  return s",
          "4728: }",
          "4764: }",
          "4770: }",
          "4776: }",
          "4781:  return s",
          "4782: }",
          "4787:  return s",
          "4788: }",
          "4793:  return s",
          "4794: }",
          "4799:  return s",
          "4800: }",
          "4805:  return s",
          "4806: }",
          "4809:  _ struct{} `type:\"structure\"`",
          "4813: }",
          "4817:  return awsutil.Prettify(s)",
          "4818: }",
          "4822:  return s.String()",
          "4823: }",
          "4828:  return s",
          "4829: }",
          "4832:  _ struct{} `type:\"structure\"`",
          "4855: }",
          "4859:  return awsutil.Prettify(s)",
          "4860: }",
          "4864:  return s.String()",
          "4865: }",
          "4902: }",
          "4907:  return s",
          "4908: }",
          "4913:  return s",
          "4914: }",
          "4919:  return s",
          "4920: }",
          "4925:  return s",
          "4926: }",
          "4929:  _ struct{} `type:\"structure\"`",
          "4933: }",
          "4937:  return awsutil.Prettify(s)",
          "4938: }",
          "4942:  return s.String()",
          "4943: }",
          "4948:  return s",
          "4949: }",
          "4952:  _ struct{} `type:\"structure\"`",
          "4974: }",
          "4978:  return awsutil.Prettify(s)",
          "4979: }",
          "4983:  return s.String()",
          "4984: }",
          "5000: }",
          "5005:  return s",
          "5006: }",
          "5011:  return s",
          "5012: }",
          "5017:  return s",
          "5018: }",
          "5021:  _ struct{} `type:\"structure\"`",
          "5087: }",
          "5091:  return awsutil.Prettify(s)",
          "5092: }",
          "5096:  return s.String()",
          "5097: }",
          "5107:  }",
          "5109:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "4192: type BuildNotDeleted struct {",
          "4196:  Id *string `locationName:\"id\" min:\"1\" type:\"string\"`",
          "4199:  StatusCode *string `locationName:\"statusCode\" type:\"string\"`",
          "4200: }",
          "4203: func (s BuildNotDeleted) String() string {",
          "4204:  return awsutil.Prettify(s)",
          "4205: }",
          "4208: func (s BuildNotDeleted) GoString() string {",
          "4209:  return s.String()",
          "4210: }",
          "4213: func (s *BuildNotDeleted) SetId(v string) *BuildNotDeleted {",
          "4214:  s.Id = &v",
          "4215:  return s",
          "4216: }",
          "4219: func (s *BuildNotDeleted) SetStatusCode(v string) *BuildNotDeleted {",
          "4220:  s.StatusCode = &v",
          "4221:  return s",
          "4222: }",
          "4225: type BuildPhase struct {",
          "4226:  _ struct{} `type:\"structure\"`",
          "4230:  Contexts []*PhaseContext `locationName:\"contexts\" type:\"list\"`",
          "4234:  DurationInSeconds *int64 `locationName:\"durationInSeconds\" type:\"long\"`",
          "4237:  EndTime *time.Time `locationName:\"endTime\" type:\"timestamp\"`",
          "4255:  PhaseStatus *string `locationName:\"phaseStatus\" type:\"string\" enum:\"StatusType\"`",
          "4282:  PhaseType *string `locationName:\"phaseType\" type:\"string\" enum:\"BuildPhaseType\"`",
          "4289: func (s BuildPhase) String() string {",
          "4294: func (s BuildPhase) GoString() string {",
          "4299: func (s *BuildPhase) SetContexts(v []*PhaseContext) *BuildPhase {",
          "4300:  s.Contexts = v",
          "4305: func (s *BuildPhase) SetDurationInSeconds(v int64) *BuildPhase {",
          "4306:  s.DurationInSeconds = &v",
          "4311: func (s *BuildPhase) SetEndTime(v time.Time) *BuildPhase {",
          "4312:  s.EndTime = &v",
          "4317: func (s *BuildPhase) SetPhaseStatus(v string) *BuildPhase {",
          "4318:  s.PhaseStatus = &v",
          "4323: func (s *BuildPhase) SetPhaseType(v string) *BuildPhase {",
          "4324:  s.PhaseType = &v",
          "4329: func (s *BuildPhase) SetStartTime(v time.Time) *BuildPhase {",
          "4330:  s.StartTime = &v",
          "4336: type BuildStatusConfig struct {",
          "4337:  _ struct{} `type:\"structure\"`",
          "4353:  Context *string `locationName:\"context\" type:\"string\"`",
          "4369:  TargetUrl *string `locationName:\"targetUrl\" type:\"string\"`",
          "4373: func (s BuildStatusConfig) String() string {",
          "4374:  return awsutil.Prettify(s)",
          "4378: func (s BuildStatusConfig) GoString() string {",
          "4379:  return s.String()",
          "4383: func (s *BuildStatusConfig) SetContext(v string) *BuildStatusConfig {",
          "4384:  s.Context = &v",
          "4389: func (s *BuildStatusConfig) SetTargetUrl(v string) *BuildStatusConfig {",
          "4390:  s.TargetUrl = &v",
          "4395: type CloudWatchLogsConfig struct {",
          "4396:  _ struct{} `type:\"structure\"`",
          "4400:  GroupName *string `locationName:\"groupName\" type:\"string\"`",
          "4410:  Status *string `locationName:\"status\" type:\"string\" required:\"true\" enum:\"LogsConfigStatusType\"`",
          "4414:  StreamName *string `locationName:\"streamName\" type:\"string\"`",
          "4418: func (s CloudWatchLogsConfig) String() string {",
          "4419:  return awsutil.Prettify(s)",
          "4423: func (s CloudWatchLogsConfig) GoString() string {",
          "4424:  return s.String()",
          "4428: func (s *CloudWatchLogsConfig) Validate() error {",
          "4429:  invalidParams := request.ErrInvalidParams{Context: \"CloudWatchLogsConfig\"}",
          "4430:  if s.Status == nil {",
          "4431:   invalidParams.Add(request.NewErrParamRequired(\"Status\"))",
          "4432:  }",
          "4434:  if invalidParams.Len() > 0 {",
          "4435:   return invalidParams",
          "4436:  }",
          "4437:  return nil",
          "4441: func (s *CloudWatchLogsConfig) SetGroupName(v string) *CloudWatchLogsConfig {",
          "4442:  s.GroupName = &v",
          "4447: func (s *CloudWatchLogsConfig) SetStatus(v string) *CloudWatchLogsConfig {",
          "4448:  s.Status = &v",
          "4453: func (s *CloudWatchLogsConfig) SetStreamName(v string) *CloudWatchLogsConfig {",
          "4454:  s.StreamName = &v",
          "4458: type CreateProjectInput struct {",
          "4459:  _ struct{} `type:\"structure\"`",
          "4464:  Artifacts *ProjectArtifacts `locationName:\"artifacts\" type:\"structure\" required:\"true\"`",
          "4468:  BadgeEnabled *bool `locationName:\"badgeEnabled\" type:\"boolean\"`",
          "4472:  Cache *ProjectCache `locationName:\"cache\" type:\"structure\"`",
          "4475:  Description *string `locationName:\"description\" type:\"string\"`",
          "4485:  EncryptionKey *string `locationName:\"encryptionKey\" min:\"1\" type:\"string\"`",
          "4490:  Environment *ProjectEnvironment `locationName:\"environment\" type:\"structure\" required:\"true\"`",
          "4495:  FileSystemLocations []*ProjectFileSystemLocation `locationName:\"fileSystemLocations\" type:\"list\"`",
          "4499:  LogsConfig *LogsConfig `locationName:\"logsConfig\" type:\"structure\"`",
          "4504:  Name *string `locationName:\"name\" min:\"2\" type:\"string\" required:\"true\"`",
          "4507:  QueuedTimeoutInMinutes *int64 `locationName:\"queuedTimeoutInMinutes\" min:\"5\" type:\"integer\"`",
          "4510:  SecondaryArtifacts []*ProjectArtifacts `locationName:\"secondaryArtifacts\" type:\"list\"`",
          "4515:  SecondarySourceVersions []*ProjectSourceVersion `locationName:\"secondarySourceVersions\" type:\"list\"`",
          "4518:  SecondarySources []*ProjectSource `locationName:\"secondarySources\" type:\"list\"`",
          "4525:  ServiceRole *string `locationName:\"serviceRole\" min:\"1\" type:\"string\" required:\"true\"`",
          "4530:  Source *ProjectSource `locationName:\"source\" type:\"structure\" required:\"true\"`",
          "4557:  SourceVersion *string `locationName:\"sourceVersion\" type:\"string\"`",
          "4563:  Tags []*Tag `locationName:\"tags\" type:\"list\"`",
          "4568:  TimeoutInMinutes *int64 `locationName:\"timeoutInMinutes\" min:\"5\" type:\"integer\"`",
          "4571:  VpcConfig *VpcConfig `locationName:\"vpcConfig\" type:\"structure\"`",
          "4575: func (s CreateProjectInput) String() string {",
          "4580: func (s CreateProjectInput) GoString() string {",
          "4585: func (s *CreateProjectInput) Validate() error {",
          "4586:  invalidParams := request.ErrInvalidParams{Context: \"CreateProjectInput\"}",
          "4587:  if s.Artifacts == nil {",
          "4588:   invalidParams.Add(request.NewErrParamRequired(\"Artifacts\"))",
          "4589:  }",
          "4590:  if s.EncryptionKey != nil && len(*s.EncryptionKey) < 1 {",
          "4591:   invalidParams.Add(request.NewErrParamMinLen(\"EncryptionKey\", 1))",
          "4592:  }",
          "4593:  if s.Environment == nil {",
          "4594:   invalidParams.Add(request.NewErrParamRequired(\"Environment\"))",
          "4595:  }",
          "4596:  if s.Name == nil {",
          "4597:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "4598:  }",
          "4599:  if s.Name != nil && len(*s.Name) < 2 {",
          "4600:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 2))",
          "4601:  }",
          "4602:  if s.QueuedTimeoutInMinutes != nil && *s.QueuedTimeoutInMinutes < 5 {",
          "4603:   invalidParams.Add(request.NewErrParamMinValue(\"QueuedTimeoutInMinutes\", 5))",
          "4604:  }",
          "4605:  if s.ServiceRole == nil {",
          "4606:   invalidParams.Add(request.NewErrParamRequired(\"ServiceRole\"))",
          "4607:  }",
          "4608:  if s.ServiceRole != nil && len(*s.ServiceRole) < 1 {",
          "4609:   invalidParams.Add(request.NewErrParamMinLen(\"ServiceRole\", 1))",
          "4610:  }",
          "4611:  if s.Source == nil {",
          "4612:   invalidParams.Add(request.NewErrParamRequired(\"Source\"))",
          "4613:  }",
          "4614:  if s.TimeoutInMinutes != nil && *s.TimeoutInMinutes < 5 {",
          "4615:   invalidParams.Add(request.NewErrParamMinValue(\"TimeoutInMinutes\", 5))",
          "4616:  }",
          "4617:  if s.Artifacts != nil {",
          "4618:   if err := s.Artifacts.Validate(); err != nil {",
          "4619:    invalidParams.AddNested(\"Artifacts\", err.(request.ErrInvalidParams))",
          "4620:   }",
          "4621:  }",
          "4622:  if s.Cache != nil {",
          "4623:   if err := s.Cache.Validate(); err != nil {",
          "4624:    invalidParams.AddNested(\"Cache\", err.(request.ErrInvalidParams))",
          "4625:   }",
          "4626:  }",
          "4627:  if s.Environment != nil {",
          "4628:   if err := s.Environment.Validate(); err != nil {",
          "4629:    invalidParams.AddNested(\"Environment\", err.(request.ErrInvalidParams))",
          "4630:   }",
          "4631:  }",
          "4632:  if s.LogsConfig != nil {",
          "4633:   if err := s.LogsConfig.Validate(); err != nil {",
          "4634:    invalidParams.AddNested(\"LogsConfig\", err.(request.ErrInvalidParams))",
          "4635:   }",
          "4636:  }",
          "4637:  if s.SecondaryArtifacts != nil {",
          "4638:   for i, v := range s.SecondaryArtifacts {",
          "4639:    if v == nil {",
          "4640:     continue",
          "4641:    }",
          "4642:    if err := v.Validate(); err != nil {",
          "4643:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"SecondaryArtifacts\", i), err.(request.ErrInvalidParams))",
          "4644:    }",
          "4645:   }",
          "4646:  }",
          "4647:  if s.SecondarySourceVersions != nil {",
          "4648:   for i, v := range s.SecondarySourceVersions {",
          "4649:    if v == nil {",
          "4650:     continue",
          "4651:    }",
          "4652:    if err := v.Validate(); err != nil {",
          "4653:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"SecondarySourceVersions\", i), err.(request.ErrInvalidParams))",
          "4654:    }",
          "4655:   }",
          "4656:  }",
          "4657:  if s.SecondarySources != nil {",
          "4658:   for i, v := range s.SecondarySources {",
          "4659:    if v == nil {",
          "4660:     continue",
          "4661:    }",
          "4662:    if err := v.Validate(); err != nil {",
          "4663:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"SecondarySources\", i), err.(request.ErrInvalidParams))",
          "4664:    }",
          "4665:   }",
          "4666:  }",
          "4667:  if s.Source != nil {",
          "4668:   if err := s.Source.Validate(); err != nil {",
          "4669:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
          "4670:   }",
          "4671:  }",
          "4672:  if s.Tags != nil {",
          "4673:   for i, v := range s.Tags {",
          "4674:    if v == nil {",
          "4675:     continue",
          "4676:    }",
          "4677:    if err := v.Validate(); err != nil {",
          "4678:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "4679:    }",
          "4680:   }",
          "4681:  }",
          "4682:  if s.VpcConfig != nil {",
          "4683:   if err := s.VpcConfig.Validate(); err != nil {",
          "4684:    invalidParams.AddNested(\"VpcConfig\", err.(request.ErrInvalidParams))",
          "4685:   }",
          "4686:  }",
          "4688:  if invalidParams.Len() > 0 {",
          "4689:   return invalidParams",
          "4690:  }",
          "4691:  return nil",
          "4692: }",
          "4695: func (s *CreateProjectInput) SetArtifacts(v *ProjectArtifacts) *CreateProjectInput {",
          "4696:  s.Artifacts = v",
          "4701: func (s *CreateProjectInput) SetBadgeEnabled(v bool) *CreateProjectInput {",
          "4702:  s.BadgeEnabled = &v",
          "4707: func (s *CreateProjectInput) SetCache(v *ProjectCache) *CreateProjectInput {",
          "4708:  s.Cache = v",
          "4713: func (s *CreateProjectInput) SetDescription(v string) *CreateProjectInput {",
          "4714:  s.Description = &v",
          "4719: func (s *CreateProjectInput) SetEncryptionKey(v string) *CreateProjectInput {",
          "4720:  s.EncryptionKey = &v",
          "4725: func (s *CreateProjectInput) SetEnvironment(v *ProjectEnvironment) *CreateProjectInput {",
          "4726:  s.Environment = v",
          "4731: func (s *CreateProjectInput) SetFileSystemLocations(v []*ProjectFileSystemLocation) *CreateProjectInput {",
          "4732:  s.FileSystemLocations = v",
          "4733:  return s",
          "4734: }",
          "4737: func (s *CreateProjectInput) SetLogsConfig(v *LogsConfig) *CreateProjectInput {",
          "4738:  s.LogsConfig = v",
          "4739:  return s",
          "4740: }",
          "4743: func (s *CreateProjectInput) SetName(v string) *CreateProjectInput {",
          "4744:  s.Name = &v",
          "4745:  return s",
          "4746: }",
          "4749: func (s *CreateProjectInput) SetQueuedTimeoutInMinutes(v int64) *CreateProjectInput {",
          "4750:  s.QueuedTimeoutInMinutes = &v",
          "4751:  return s",
          "4752: }",
          "4755: func (s *CreateProjectInput) SetSecondaryArtifacts(v []*ProjectArtifacts) *CreateProjectInput {",
          "4756:  s.SecondaryArtifacts = v",
          "4757:  return s",
          "4758: }",
          "4761: func (s *CreateProjectInput) SetSecondarySourceVersions(v []*ProjectSourceVersion) *CreateProjectInput {",
          "4762:  s.SecondarySourceVersions = v",
          "4763:  return s",
          "4767: func (s *CreateProjectInput) SetSecondarySources(v []*ProjectSource) *CreateProjectInput {",
          "4768:  s.SecondarySources = v",
          "4769:  return s",
          "4773: func (s *CreateProjectInput) SetServiceRole(v string) *CreateProjectInput {",
          "4774:  s.ServiceRole = &v",
          "4775:  return s",
          "4779: func (s *CreateProjectInput) SetSource(v *ProjectSource) *CreateProjectInput {",
          "4780:  s.Source = v",
          "4785: func (s *CreateProjectInput) SetSourceVersion(v string) *CreateProjectInput {",
          "4786:  s.SourceVersion = &v",
          "4791: func (s *CreateProjectInput) SetTags(v []*Tag) *CreateProjectInput {",
          "4792:  s.Tags = v",
          "4797: func (s *CreateProjectInput) SetTimeoutInMinutes(v int64) *CreateProjectInput {",
          "4798:  s.TimeoutInMinutes = &v",
          "4803: func (s *CreateProjectInput) SetVpcConfig(v *VpcConfig) *CreateProjectInput {",
          "4804:  s.VpcConfig = v",
          "4808: type CreateProjectOutput struct {",
          "4812:  Project *Project `locationName:\"project\" type:\"structure\"`",
          "4816: func (s CreateProjectOutput) String() string {",
          "4821: func (s CreateProjectOutput) GoString() string {",
          "4826: func (s *CreateProjectOutput) SetProject(v *Project) *CreateProjectOutput {",
          "4827:  s.Project = v",
          "4831: type CreateReportGroupInput struct {",
          "4838:  ExportConfig *ReportExportConfig `locationName:\"exportConfig\" type:\"structure\" required:\"true\"`",
          "4843:  Name *string `locationName:\"name\" min:\"2\" type:\"string\" required:\"true\"`",
          "4849:  Tags []*Tag `locationName:\"tags\" type:\"list\"`",
          "4854:  Type *string `locationName:\"type\" type:\"string\" required:\"true\" enum:\"ReportType\"`",
          "4858: func (s CreateReportGroupInput) String() string {",
          "4863: func (s CreateReportGroupInput) GoString() string {",
          "4868: func (s *CreateReportGroupInput) Validate() error {",
          "4869:  invalidParams := request.ErrInvalidParams{Context: \"CreateReportGroupInput\"}",
          "4870:  if s.ExportConfig == nil {",
          "4871:   invalidParams.Add(request.NewErrParamRequired(\"ExportConfig\"))",
          "4872:  }",
          "4873:  if s.Name == nil {",
          "4874:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "4875:  }",
          "4876:  if s.Name != nil && len(*s.Name) < 2 {",
          "4877:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 2))",
          "4878:  }",
          "4879:  if s.Type == nil {",
          "4880:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "4881:  }",
          "4882:  if s.ExportConfig != nil {",
          "4883:   if err := s.ExportConfig.Validate(); err != nil {",
          "4884:    invalidParams.AddNested(\"ExportConfig\", err.(request.ErrInvalidParams))",
          "4885:   }",
          "4886:  }",
          "4887:  if s.Tags != nil {",
          "4888:   for i, v := range s.Tags {",
          "4889:    if v == nil {",
          "4890:     continue",
          "4891:    }",
          "4892:    if err := v.Validate(); err != nil {",
          "4893:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "4894:    }",
          "4895:   }",
          "4896:  }",
          "4898:  if invalidParams.Len() > 0 {",
          "4899:   return invalidParams",
          "4900:  }",
          "4901:  return nil",
          "4905: func (s *CreateReportGroupInput) SetExportConfig(v *ReportExportConfig) *CreateReportGroupInput {",
          "4906:  s.ExportConfig = v",
          "4911: func (s *CreateReportGroupInput) SetName(v string) *CreateReportGroupInput {",
          "4912:  s.Name = &v",
          "4917: func (s *CreateReportGroupInput) SetTags(v []*Tag) *CreateReportGroupInput {",
          "4918:  s.Tags = v",
          "4923: func (s *CreateReportGroupInput) SetType(v string) *CreateReportGroupInput {",
          "4924:  s.Type = &v",
          "4928: type CreateReportGroupOutput struct {",
          "4932:  ReportGroup *ReportGroup `locationName:\"reportGroup\" type:\"structure\"`",
          "4936: func (s CreateReportGroupOutput) String() string {",
          "4941: func (s CreateReportGroupOutput) GoString() string {",
          "4946: func (s *CreateReportGroupOutput) SetReportGroup(v *ReportGroup) *CreateReportGroupOutput {",
          "4947:  s.ReportGroup = v",
          "4951: type CreateWebhookInput struct {",
          "4960:  BranchFilter *string `locationName:\"branchFilter\" type:\"string\"`",
          "4968:  FilterGroups [][]*WebhookFilter `locationName:\"filterGroups\" type:\"list\"`",
          "4973:  ProjectName *string `locationName:\"projectName\" min:\"2\" type:\"string\" required:\"true\"`",
          "4977: func (s CreateWebhookInput) String() string {",
          "4982: func (s CreateWebhookInput) GoString() string {",
          "4987: func (s *CreateWebhookInput) Validate() error {",
          "4988:  invalidParams := request.ErrInvalidParams{Context: \"CreateWebhookInput\"}",
          "4989:  if s.ProjectName == nil {",
          "4990:   invalidParams.Add(request.NewErrParamRequired(\"ProjectName\"))",
          "4991:  }",
          "4992:  if s.ProjectName != nil && len(*s.ProjectName) < 2 {",
          "4993:   invalidParams.Add(request.NewErrParamMinLen(\"ProjectName\", 2))",
          "4994:  }",
          "4996:  if invalidParams.Len() > 0 {",
          "4997:   return invalidParams",
          "4998:  }",
          "4999:  return nil",
          "5003: func (s *CreateWebhookInput) SetBranchFilter(v string) *CreateWebhookInput {",
          "5004:  s.BranchFilter = &v",
          "5009: func (s *CreateWebhookInput) SetFilterGroups(v [][]*WebhookFilter) *CreateWebhookInput {",
          "5010:  s.FilterGroups = v",
          "5015: func (s *CreateWebhookInput) SetProjectName(v string) *CreateWebhookInput {",
          "5016:  s.ProjectName = &v",
          "5020: type CreateWebhookOutput struct {",
          "5025:  Webhook *Webhook `locationName:\"webhook\" type:\"structure\"`",
          "5026: }",
          "5029: func (s CreateWebhookOutput) String() string {",
          "5030:  return awsutil.Prettify(s)",
          "5031: }",
          "5034: func (s CreateWebhookOutput) GoString() string {",
          "5035:  return s.String()",
          "5036: }",
          "5039: func (s *CreateWebhookOutput) SetWebhook(v *Webhook) *CreateWebhookOutput {",
          "5040:  s.Webhook = v",
          "5041:  return s",
          "5042: }",
          "5046: type DebugSession struct {",
          "5047:  _ struct{} `type:\"structure\"`",
          "5050:  SessionEnabled *bool `locationName:\"sessionEnabled\" type:\"boolean\"`",
          "5055:  SessionTarget *string `locationName:\"sessionTarget\" min:\"1\" type:\"string\"`",
          "5056: }",
          "5059: func (s DebugSession) String() string {",
          "5060:  return awsutil.Prettify(s)",
          "5061: }",
          "5064: func (s DebugSession) GoString() string {",
          "5065:  return s.String()",
          "5066: }",
          "5069: func (s *DebugSession) SetSessionEnabled(v bool) *DebugSession {",
          "5070:  s.SessionEnabled = &v",
          "5071:  return s",
          "5072: }",
          "5075: func (s *DebugSession) SetSessionTarget(v string) *DebugSession {",
          "5076:  s.SessionTarget = &v",
          "5077:  return s",
          "5078: }",
          "5080: type DeleteProjectInput struct {",
          "5081:  _ struct{} `type:\"structure\"`",
          "5086:  Name *string `locationName:\"name\" min:\"1\" type:\"string\" required:\"true\"`",
          "5090: func (s DeleteProjectInput) String() string {",
          "5095: func (s DeleteProjectInput) GoString() string {",
          "5100: func (s *DeleteProjectInput) Validate() error {",
          "5101:  invalidParams := request.ErrInvalidParams{Context: \"DeleteProjectInput\"}",
          "5102:  if s.Name == nil {",
          "5103:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "5104:  }",
          "5105:  if s.Name != nil && len(*s.Name) < 1 {",
          "5106:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "",
          "[Added Lines]",
          "5214: type BuildBatch struct {",
          "5218:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "5221:  Artifacts *BuildArtifacts `locationName:\"artifacts\" type:\"structure\"`",
          "5224:  BuildBatchConfig *ProjectBuildBatchConfig `locationName:\"buildBatchConfig\" type:\"structure\"`",
          "5230:  BuildBatchNumber *int64 `locationName:\"buildBatchNumber\" type:\"long\"`",
          "5233:  BuildBatchStatus *string `locationName:\"buildBatchStatus\" type:\"string\" enum:\"StatusType\"`",
          "5237:  BuildGroups []*BuildGroup `locationName:\"buildGroups\" type:\"list\"`",
          "5241:  BuildTimeoutInMinutes *int64 `locationName:\"buildTimeoutInMinutes\" type:\"integer\"`",
          "5244:  Cache *ProjectCache `locationName:\"cache\" type:\"structure\"`",
          "5247:  Complete *bool `locationName:\"complete\" type:\"boolean\"`",
          "5250:  CurrentPhase *string `locationName:\"currentPhase\" type:\"string\"`",
          "5260:  EncryptionKey *string `locationName:\"encryptionKey\" min:\"1\" type:\"string\"`",
          "5263:  EndTime *time.Time `locationName:\"endTime\" type:\"timestamp\"`",
          "5266:  Environment *ProjectEnvironment `locationName:\"environment\" type:\"structure\"`",
          "5271:  FileSystemLocations []*ProjectFileSystemLocation `locationName:\"fileSystemLocations\" type:\"list\"`",
          "5274:  Id *string `locationName:\"id\" min:\"1\" type:\"string\"`",
          "5286:  Initiator *string `locationName:\"initiator\" type:\"string\"`",
          "5290:  LogConfig *LogsConfig `locationName:\"logConfig\" type:\"structure\"`",
          "5293:  Phases []*BuildBatchPhase `locationName:\"phases\" type:\"list\"`",
          "5296:  ProjectName *string `locationName:\"projectName\" min:\"1\" type:\"string\"`",
          "5300:  QueuedTimeoutInMinutes *int64 `locationName:\"queuedTimeoutInMinutes\" type:\"integer\"`",
          "5310:  ResolvedSourceVersion *string `locationName:\"resolvedSourceVersion\" min:\"1\" type:\"string\"`",
          "5314:  SecondaryArtifacts []*BuildArtifacts `locationName:\"secondaryArtifacts\" type:\"list\"`",
          "5335:  SecondarySourceVersions []*ProjectSourceVersion `locationName:\"secondarySourceVersions\" type:\"list\"`",
          "5338:  SecondarySources []*ProjectSource `locationName:\"secondarySources\" type:\"list\"`",
          "5341:  ServiceRole *string `locationName:\"serviceRole\" min:\"1\" type:\"string\"`",
          "5344:  Source *ProjectSource `locationName:\"source\" type:\"structure\"`",
          "5347:  SourceVersion *string `locationName:\"sourceVersion\" min:\"1\" type:\"string\"`",
          "5353:  VpcConfig *VpcConfig `locationName:\"vpcConfig\" type:\"structure\"`",
          "5357: func (s BuildBatch) String() string {",
          "5362: func (s BuildBatch) GoString() string {",
          "5367: func (s *BuildBatch) SetArn(v string) *BuildBatch {",
          "5368:  s.Arn = &v",
          "5373: func (s *BuildBatch) SetArtifacts(v *BuildArtifacts) *BuildBatch {",
          "5374:  s.Artifacts = v",
          "5379: func (s *BuildBatch) SetBuildBatchConfig(v *ProjectBuildBatchConfig) *BuildBatch {",
          "5380:  s.BuildBatchConfig = v",
          "5385: func (s *BuildBatch) SetBuildBatchNumber(v int64) *BuildBatch {",
          "5386:  s.BuildBatchNumber = &v",
          "5391: func (s *BuildBatch) SetBuildBatchStatus(v string) *BuildBatch {",
          "5392:  s.BuildBatchStatus = &v",
          "5397: func (s *BuildBatch) SetBuildGroups(v []*BuildGroup) *BuildBatch {",
          "5398:  s.BuildGroups = v",
          "5403: func (s *BuildBatch) SetBuildTimeoutInMinutes(v int64) *BuildBatch {",
          "5404:  s.BuildTimeoutInMinutes = &v",
          "5405:  return s",
          "5406: }",
          "5409: func (s *BuildBatch) SetCache(v *ProjectCache) *BuildBatch {",
          "5410:  s.Cache = v",
          "5411:  return s",
          "5412: }",
          "5415: func (s *BuildBatch) SetComplete(v bool) *BuildBatch {",
          "5416:  s.Complete = &v",
          "5417:  return s",
          "5421: func (s *BuildBatch) SetCurrentPhase(v string) *BuildBatch {",
          "5422:  s.CurrentPhase = &v",
          "5423:  return s",
          "5427: func (s *BuildBatch) SetEncryptionKey(v string) *BuildBatch {",
          "5428:  s.EncryptionKey = &v",
          "5429:  return s",
          "5433: func (s *BuildBatch) SetEndTime(v time.Time) *BuildBatch {",
          "5434:  s.EndTime = &v",
          "5439: func (s *BuildBatch) SetEnvironment(v *ProjectEnvironment) *BuildBatch {",
          "5440:  s.Environment = v",
          "5445: func (s *BuildBatch) SetFileSystemLocations(v []*ProjectFileSystemLocation) *BuildBatch {",
          "5446:  s.FileSystemLocations = v",
          "5447:  return s",
          "5448: }",
          "5451: func (s *BuildBatch) SetId(v string) *BuildBatch {",
          "5452:  s.Id = &v",
          "5453:  return s",
          "5454: }",
          "5457: func (s *BuildBatch) SetInitiator(v string) *BuildBatch {",
          "5458:  s.Initiator = &v",
          "5459:  return s",
          "5460: }",
          "5463: func (s *BuildBatch) SetLogConfig(v *LogsConfig) *BuildBatch {",
          "5464:  s.LogConfig = v",
          "5465:  return s",
          "5469: func (s *BuildBatch) SetPhases(v []*BuildBatchPhase) *BuildBatch {",
          "5470:  s.Phases = v",
          "5471:  return s",
          "5475: func (s *BuildBatch) SetProjectName(v string) *BuildBatch {",
          "5476:  s.ProjectName = &v",
          "5477:  return s",
          "5481: func (s *BuildBatch) SetQueuedTimeoutInMinutes(v int64) *BuildBatch {",
          "5482:  s.QueuedTimeoutInMinutes = &v",
          "5483:  return s",
          "5484: }",
          "5487: func (s *BuildBatch) SetResolvedSourceVersion(v string) *BuildBatch {",
          "5488:  s.ResolvedSourceVersion = &v",
          "5489:  return s",
          "5493: func (s *BuildBatch) SetSecondaryArtifacts(v []*BuildArtifacts) *BuildBatch {",
          "5494:  s.SecondaryArtifacts = v",
          "5499: func (s *BuildBatch) SetSecondarySourceVersions(v []*ProjectSourceVersion) *BuildBatch {",
          "5500:  s.SecondarySourceVersions = v",
          "5505: func (s *BuildBatch) SetSecondarySources(v []*ProjectSource) *BuildBatch {",
          "5506:  s.SecondarySources = v",
          "5511: func (s *BuildBatch) SetServiceRole(v string) *BuildBatch {",
          "5512:  s.ServiceRole = &v",
          "5513:  return s",
          "5514: }",
          "5517: func (s *BuildBatch) SetSource(v *ProjectSource) *BuildBatch {",
          "5518:  s.Source = v",
          "5519:  return s",
          "5520: }",
          "5523: func (s *BuildBatch) SetSourceVersion(v string) *BuildBatch {",
          "5524:  s.SourceVersion = &v",
          "5525:  return s",
          "5526: }",
          "5529: func (s *BuildBatch) SetStartTime(v time.Time) *BuildBatch {",
          "5530:  s.StartTime = &v",
          "5531:  return s",
          "5532: }",
          "5535: func (s *BuildBatch) SetVpcConfig(v *VpcConfig) *BuildBatch {",
          "5536:  s.VpcConfig = v",
          "5537:  return s",
          "5538: }",
          "5541: type BuildBatchFilter struct {",
          "5542:  _ struct{} `type:\"structure\"`",
          "5546:  Status *string `locationName:\"status\" type:\"string\" enum:\"StatusType\"`",
          "5547: }",
          "5550: func (s BuildBatchFilter) String() string {",
          "5551:  return awsutil.Prettify(s)",
          "5552: }",
          "5555: func (s BuildBatchFilter) GoString() string {",
          "5556:  return s.String()",
          "5557: }",
          "5560: func (s *BuildBatchFilter) SetStatus(v string) *BuildBatchFilter {",
          "5561:  s.Status = &v",
          "5562:  return s",
          "5563: }",
          "5566: type BuildBatchPhase struct {",
          "5567:  _ struct{} `type:\"structure\"`",
          "5571:  Contexts []*PhaseContext `locationName:\"contexts\" type:\"list\"`",
          "5575:  DurationInSeconds *int64 `locationName:\"durationInSeconds\" type:\"long\"`",
          "5578:  EndTime *time.Time `locationName:\"endTime\" type:\"timestamp\"`",
          "5609:  PhaseStatus *string `locationName:\"phaseStatus\" type:\"string\" enum:\"StatusType\"`",
          "5640:  PhaseType *string `locationName:\"phaseType\" type:\"string\" enum:\"BuildBatchPhaseType\"`",
          "5643:  StartTime *time.Time `locationName:\"startTime\" type:\"timestamp\"`",
          "5647: func (s BuildBatchPhase) String() string {",
          "5652: func (s BuildBatchPhase) GoString() string {",
          "5657: func (s *BuildBatchPhase) SetContexts(v []*PhaseContext) *BuildBatchPhase {",
          "5658:  s.Contexts = v",
          "5663: func (s *BuildBatchPhase) SetDurationInSeconds(v int64) *BuildBatchPhase {",
          "5664:  s.DurationInSeconds = &v",
          "5669: func (s *BuildBatchPhase) SetEndTime(v time.Time) *BuildBatchPhase {",
          "5670:  s.EndTime = &v",
          "5675: func (s *BuildBatchPhase) SetPhaseStatus(v string) *BuildBatchPhase {",
          "5676:  s.PhaseStatus = &v",
          "5681: func (s *BuildBatchPhase) SetPhaseType(v string) *BuildBatchPhase {",
          "5682:  s.PhaseType = &v",
          "5687: func (s *BuildBatchPhase) SetStartTime(v time.Time) *BuildBatchPhase {",
          "5688:  s.StartTime = &v",
          "5695: type BuildGroup struct {",
          "5696:  _ struct{} `type:\"structure\"`",
          "5699:  CurrentBuildSummary *BuildSummary `locationName:\"currentBuildSummary\" type:\"structure\"`",
          "5703:  DependsOn []*string `locationName:\"dependsOn\" type:\"list\"`",
          "5706:  Identifier *string `locationName:\"identifier\" type:\"string\"`",
          "5709:  IgnoreFailure *bool `locationName:\"ignoreFailure\" type:\"boolean\"`",
          "5713:  PriorBuildSummaryList []*BuildSummary `locationName:\"priorBuildSummaryList\" type:\"list\"`",
          "5717: func (s BuildGroup) String() string {",
          "5718:  return awsutil.Prettify(s)",
          "5722: func (s BuildGroup) GoString() string {",
          "5723:  return s.String()",
          "5727: func (s *BuildGroup) SetCurrentBuildSummary(v *BuildSummary) *BuildGroup {",
          "5728:  s.CurrentBuildSummary = v",
          "5733: func (s *BuildGroup) SetDependsOn(v []*string) *BuildGroup {",
          "5734:  s.DependsOn = v",
          "5739: func (s *BuildGroup) SetIdentifier(v string) *BuildGroup {",
          "5740:  s.Identifier = &v",
          "5745: func (s *BuildGroup) SetIgnoreFailure(v bool) *BuildGroup {",
          "5746:  s.IgnoreFailure = &v",
          "5751: func (s *BuildGroup) SetPriorBuildSummaryList(v []*BuildSummary) *BuildGroup {",
          "5752:  s.PriorBuildSummaryList = v",
          "5757: type BuildNotDeleted struct {",
          "5761:  Id *string `locationName:\"id\" min:\"1\" type:\"string\"`",
          "5764:  StatusCode *string `locationName:\"statusCode\" type:\"string\"`",
          "5768: func (s BuildNotDeleted) String() string {",
          "5773: func (s BuildNotDeleted) GoString() string {",
          "5778: func (s *BuildNotDeleted) SetId(v string) *BuildNotDeleted {",
          "5779:  s.Id = &v",
          "5784: func (s *BuildNotDeleted) SetStatusCode(v string) *BuildNotDeleted {",
          "5785:  s.StatusCode = &v",
          "5786:  return s",
          "5787: }",
          "5790: type BuildPhase struct {",
          "5795:  Contexts []*PhaseContext `locationName:\"contexts\" type:\"list\"`",
          "5799:  DurationInSeconds *int64 `locationName:\"durationInSeconds\" type:\"long\"`",
          "5802:  EndTime *time.Time `locationName:\"endTime\" type:\"timestamp\"`",
          "5833:  PhaseStatus *string `locationName:\"phaseStatus\" type:\"string\" enum:\"StatusType\"`",
          "5860:  PhaseType *string `locationName:\"phaseType\" type:\"string\" enum:\"BuildPhaseType\"`",
          "5863:  StartTime *time.Time `locationName:\"startTime\" type:\"timestamp\"`",
          "5867: func (s BuildPhase) String() string {",
          "5872: func (s BuildPhase) GoString() string {",
          "5877: func (s *BuildPhase) SetContexts(v []*PhaseContext) *BuildPhase {",
          "5878:  s.Contexts = v",
          "5879:  return s",
          "5880: }",
          "5883: func (s *BuildPhase) SetDurationInSeconds(v int64) *BuildPhase {",
          "5884:  s.DurationInSeconds = &v",
          "5885:  return s",
          "5889: func (s *BuildPhase) SetEndTime(v time.Time) *BuildPhase {",
          "5890:  s.EndTime = &v",
          "5895: func (s *BuildPhase) SetPhaseStatus(v string) *BuildPhase {",
          "5896:  s.PhaseStatus = &v",
          "5901: func (s *BuildPhase) SetPhaseType(v string) *BuildPhase {",
          "5902:  s.PhaseType = &v",
          "5907: func (s *BuildPhase) SetStartTime(v time.Time) *BuildPhase {",
          "5908:  s.StartTime = &v",
          "5914: type BuildStatusConfig struct {",
          "5931:  Context *string `locationName:\"context\" type:\"string\"`",
          "5947:  TargetUrl *string `locationName:\"targetUrl\" type:\"string\"`",
          "5951: func (s BuildStatusConfig) String() string {",
          "5956: func (s BuildStatusConfig) GoString() string {",
          "5961: func (s *BuildStatusConfig) SetContext(v string) *BuildStatusConfig {",
          "5962:  s.Context = &v",
          "5967: func (s *BuildStatusConfig) SetTargetUrl(v string) *BuildStatusConfig {",
          "5968:  s.TargetUrl = &v",
          "5969:  return s",
          "5970: }",
          "5973: type BuildSummary struct {",
          "5977:  Arn *string `locationName:\"arn\" type:\"string\"`",
          "6004:  BuildStatus *string `locationName:\"buildStatus\" type:\"string\" enum:\"StatusType\"`",
          "6008:  PrimaryArtifact *ResolvedArtifact `locationName:\"primaryArtifact\" type:\"structure\"`",
          "6011:  RequestedOn *time.Time `locationName:\"requestedOn\" type:\"timestamp\"`",
          "6015:  SecondaryArtifacts []*ResolvedArtifact `locationName:\"secondaryArtifacts\" type:\"list\"`",
          "6019: func (s BuildSummary) String() string {",
          "6024: func (s BuildSummary) GoString() string {",
          "6029: func (s *BuildSummary) SetArn(v string) *BuildSummary {",
          "6030:  s.Arn = &v",
          "6031:  return s",
          "6032: }",
          "6035: func (s *BuildSummary) SetBuildStatus(v string) *BuildSummary {",
          "6036:  s.BuildStatus = &v",
          "6037:  return s",
          "6041: func (s *BuildSummary) SetPrimaryArtifact(v *ResolvedArtifact) *BuildSummary {",
          "6042:  s.PrimaryArtifact = v",
          "6047: func (s *BuildSummary) SetRequestedOn(v time.Time) *BuildSummary {",
          "6048:  s.RequestedOn = &v",
          "6053: func (s *BuildSummary) SetSecondaryArtifacts(v []*ResolvedArtifact) *BuildSummary {",
          "6054:  s.SecondaryArtifacts = v",
          "6059: type CloudWatchLogsConfig struct {",
          "6064:  GroupName *string `locationName:\"groupName\" type:\"string\"`",
          "6074:  Status *string `locationName:\"status\" type:\"string\" required:\"true\" enum:\"LogsConfigStatusType\"`",
          "6078:  StreamName *string `locationName:\"streamName\" type:\"string\"`",
          "6082: func (s CloudWatchLogsConfig) String() string {",
          "6087: func (s CloudWatchLogsConfig) GoString() string {",
          "6092: func (s *CloudWatchLogsConfig) Validate() error {",
          "6093:  invalidParams := request.ErrInvalidParams{Context: \"CloudWatchLogsConfig\"}",
          "6094:  if s.Status == nil {",
          "6095:   invalidParams.Add(request.NewErrParamRequired(\"Status\"))",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "5112:  return nil",
          "5113: }",
          "5118:  return s",
          "5119: }",
          "5128: }",
          "5133: }",
          "5136:  _ struct{} `type:\"structure\"`",
          "5178: }",
          "5182:  return awsutil.Prettify(s)",
          "5183: }",
          "5187:  return s.String()",
          "5188: }",
          "5197: }",
          "5202: }",
          "5207: }",
          "5223: }",
          "5228:  return s",
          "5229: }",
          "5233: }",
          "5238: }",
          "5243: }",
          "5246:  _ struct{} `type:\"structure\"`",
          "5252: }",
          "5256:  return awsutil.Prettify(s)",
          "5257: }",
          "5261:  return s.String()",
          "5262: }",
          "5278: }",
          "5283:  return s",
          "5284: }",
          "5288: }",
          "5293: }",
          "5298: }",
          "5301:  _ struct{} `type:\"structure\"`",
          "5371: }",
          "5375:  return awsutil.Prettify(s)",
          "5376: }",
          "5380:  return s.String()",
          "5381: }",
          "5388:  }",
          "5391:  }",
          "5393:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "5116: func (s *DeleteProjectInput) SetName(v string) *DeleteProjectInput {",
          "5117:  s.Name = &v",
          "5121: type DeleteProjectOutput struct {",
          "5122:  _ struct{} `type:\"structure\"`",
          "5123: }",
          "5126: func (s DeleteProjectOutput) String() string {",
          "5127:  return awsutil.Prettify(s)",
          "5131: func (s DeleteProjectOutput) GoString() string {",
          "5132:  return s.String()",
          "5135: type DeleteReportGroupInput struct {",
          "5141:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "5142: }",
          "5145: func (s DeleteReportGroupInput) String() string {",
          "5146:  return awsutil.Prettify(s)",
          "5147: }",
          "5150: func (s DeleteReportGroupInput) GoString() string {",
          "5151:  return s.String()",
          "5152: }",
          "5155: func (s *DeleteReportGroupInput) Validate() error {",
          "5156:  invalidParams := request.ErrInvalidParams{Context: \"DeleteReportGroupInput\"}",
          "5157:  if s.Arn == nil {",
          "5158:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "5159:  }",
          "5160:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "5161:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "5162:  }",
          "5164:  if invalidParams.Len() > 0 {",
          "5165:   return invalidParams",
          "5166:  }",
          "5167:  return nil",
          "5168: }",
          "5171: func (s *DeleteReportGroupInput) SetArn(v string) *DeleteReportGroupInput {",
          "5172:  s.Arn = &v",
          "5173:  return s",
          "5174: }",
          "5176: type DeleteReportGroupOutput struct {",
          "5177:  _ struct{} `type:\"structure\"`",
          "5181: func (s DeleteReportGroupOutput) String() string {",
          "5186: func (s DeleteReportGroupOutput) GoString() string {",
          "5190: type DeleteReportInput struct {",
          "5191:  _ struct{} `type:\"structure\"`",
          "5196:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "5200: func (s DeleteReportInput) String() string {",
          "5201:  return awsutil.Prettify(s)",
          "5205: func (s DeleteReportInput) GoString() string {",
          "5206:  return s.String()",
          "5210: func (s *DeleteReportInput) Validate() error {",
          "5211:  invalidParams := request.ErrInvalidParams{Context: \"DeleteReportInput\"}",
          "5212:  if s.Arn == nil {",
          "5213:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "5214:  }",
          "5215:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "5216:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "5217:  }",
          "5219:  if invalidParams.Len() > 0 {",
          "5220:   return invalidParams",
          "5221:  }",
          "5222:  return nil",
          "5226: func (s *DeleteReportInput) SetArn(v string) *DeleteReportInput {",
          "5227:  s.Arn = &v",
          "5231: type DeleteReportOutput struct {",
          "5232:  _ struct{} `type:\"structure\"`",
          "5236: func (s DeleteReportOutput) String() string {",
          "5237:  return awsutil.Prettify(s)",
          "5241: func (s DeleteReportOutput) GoString() string {",
          "5242:  return s.String()",
          "5245: type DeleteResourcePolicyInput struct {",
          "5251:  ResourceArn *string `locationName:\"resourceArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "5255: func (s DeleteResourcePolicyInput) String() string {",
          "5260: func (s DeleteResourcePolicyInput) GoString() string {",
          "5265: func (s *DeleteResourcePolicyInput) Validate() error {",
          "5266:  invalidParams := request.ErrInvalidParams{Context: \"DeleteResourcePolicyInput\"}",
          "5267:  if s.ResourceArn == nil {",
          "5268:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "5269:  }",
          "5270:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "5271:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "5272:  }",
          "5274:  if invalidParams.Len() > 0 {",
          "5275:   return invalidParams",
          "5276:  }",
          "5277:  return nil",
          "5281: func (s *DeleteResourcePolicyInput) SetResourceArn(v string) *DeleteResourcePolicyInput {",
          "5282:  s.ResourceArn = &v",
          "5286: type DeleteResourcePolicyOutput struct {",
          "5287:  _ struct{} `type:\"structure\"`",
          "5291: func (s DeleteResourcePolicyOutput) String() string {",
          "5292:  return awsutil.Prettify(s)",
          "5296: func (s DeleteResourcePolicyOutput) GoString() string {",
          "5297:  return s.String()",
          "5300: type DeleteSourceCredentialsInput struct {",
          "5306:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "5307: }",
          "5310: func (s DeleteSourceCredentialsInput) String() string {",
          "5311:  return awsutil.Prettify(s)",
          "5312: }",
          "5315: func (s DeleteSourceCredentialsInput) GoString() string {",
          "5316:  return s.String()",
          "5317: }",
          "5320: func (s *DeleteSourceCredentialsInput) Validate() error {",
          "5321:  invalidParams := request.ErrInvalidParams{Context: \"DeleteSourceCredentialsInput\"}",
          "5322:  if s.Arn == nil {",
          "5323:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "5324:  }",
          "5325:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "5326:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "5327:  }",
          "5329:  if invalidParams.Len() > 0 {",
          "5330:   return invalidParams",
          "5331:  }",
          "5332:  return nil",
          "5333: }",
          "5336: func (s *DeleteSourceCredentialsInput) SetArn(v string) *DeleteSourceCredentialsInput {",
          "5337:  s.Arn = &v",
          "5338:  return s",
          "5339: }",
          "5341: type DeleteSourceCredentialsOutput struct {",
          "5342:  _ struct{} `type:\"structure\"`",
          "5345:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "5346: }",
          "5349: func (s DeleteSourceCredentialsOutput) String() string {",
          "5350:  return awsutil.Prettify(s)",
          "5351: }",
          "5354: func (s DeleteSourceCredentialsOutput) GoString() string {",
          "5355:  return s.String()",
          "5356: }",
          "5359: func (s *DeleteSourceCredentialsOutput) SetArn(v string) *DeleteSourceCredentialsOutput {",
          "5360:  s.Arn = &v",
          "5361:  return s",
          "5362: }",
          "5364: type DeleteWebhookInput struct {",
          "5365:  _ struct{} `type:\"structure\"`",
          "5370:  ProjectName *string `locationName:\"projectName\" min:\"2\" type:\"string\" required:\"true\"`",
          "5374: func (s DeleteWebhookInput) String() string {",
          "5379: func (s DeleteWebhookInput) GoString() string {",
          "5384: func (s *DeleteWebhookInput) Validate() error {",
          "5385:  invalidParams := request.ErrInvalidParams{Context: \"DeleteWebhookInput\"}",
          "5386:  if s.ProjectName == nil {",
          "5387:   invalidParams.Add(request.NewErrParamRequired(\"ProjectName\"))",
          "5389:  if s.ProjectName != nil && len(*s.ProjectName) < 2 {",
          "5390:   invalidParams.Add(request.NewErrParamMinLen(\"ProjectName\", 2))",
          "",
          "[Added Lines]",
          "6105: func (s *CloudWatchLogsConfig) SetGroupName(v string) *CloudWatchLogsConfig {",
          "6106:  s.GroupName = &v",
          "6111: func (s *CloudWatchLogsConfig) SetStatus(v string) *CloudWatchLogsConfig {",
          "6112:  s.Status = &v",
          "6113:  return s",
          "6117: func (s *CloudWatchLogsConfig) SetStreamName(v string) *CloudWatchLogsConfig {",
          "6118:  s.StreamName = &v",
          "6119:  return s",
          "6129: type CodeCoverage struct {",
          "6133:  BranchCoveragePercentage *float64 `locationName:\"branchCoveragePercentage\" type:\"double\"`",
          "6136:  BranchesCovered *int64 `locationName:\"branchesCovered\" type:\"integer\"`",
          "6139:  BranchesMissed *int64 `locationName:\"branchesMissed\" type:\"integer\"`",
          "6142:  Expired *time.Time `locationName:\"expired\" type:\"timestamp\"`",
          "6145:  FilePath *string `locationName:\"filePath\" min:\"1\" type:\"string\"`",
          "6148:  Id *string `locationName:\"id\" min:\"1\" type:\"string\"`",
          "6151:  LineCoveragePercentage *float64 `locationName:\"lineCoveragePercentage\" type:\"double\"`",
          "6154:  LinesCovered *int64 `locationName:\"linesCovered\" type:\"integer\"`",
          "6157:  LinesMissed *int64 `locationName:\"linesMissed\" type:\"integer\"`",
          "6160:  ReportARN *string `locationName:\"reportARN\" min:\"1\" type:\"string\"`",
          "6164: func (s CodeCoverage) String() string {",
          "6169: func (s CodeCoverage) GoString() string {",
          "6174: func (s *CodeCoverage) SetBranchCoveragePercentage(v float64) *CodeCoverage {",
          "6175:  s.BranchCoveragePercentage = &v",
          "6176:  return s",
          "6177: }",
          "6180: func (s *CodeCoverage) SetBranchesCovered(v int64) *CodeCoverage {",
          "6181:  s.BranchesCovered = &v",
          "6182:  return s",
          "6186: func (s *CodeCoverage) SetBranchesMissed(v int64) *CodeCoverage {",
          "6187:  s.BranchesMissed = &v",
          "6188:  return s",
          "6192: func (s *CodeCoverage) SetExpired(v time.Time) *CodeCoverage {",
          "6193:  s.Expired = &v",
          "6194:  return s",
          "6198: func (s *CodeCoverage) SetFilePath(v string) *CodeCoverage {",
          "6199:  s.FilePath = &v",
          "6200:  return s",
          "6201: }",
          "6204: func (s *CodeCoverage) SetId(v string) *CodeCoverage {",
          "6205:  s.Id = &v",
          "6206:  return s",
          "6210: func (s *CodeCoverage) SetLineCoveragePercentage(v float64) *CodeCoverage {",
          "6211:  s.LineCoveragePercentage = &v",
          "6216: func (s *CodeCoverage) SetLinesCovered(v int64) *CodeCoverage {",
          "6217:  s.LinesCovered = &v",
          "6218:  return s",
          "6222: func (s *CodeCoverage) SetLinesMissed(v int64) *CodeCoverage {",
          "6223:  s.LinesMissed = &v",
          "6224:  return s",
          "6228: func (s *CodeCoverage) SetReportARN(v string) *CodeCoverage {",
          "6229:  s.ReportARN = &v",
          "6230:  return s",
          "6240: type CodeCoverageReportSummary struct {",
          "6244:  BranchCoveragePercentage *float64 `locationName:\"branchCoveragePercentage\" type:\"double\"`",
          "6247:  BranchesCovered *int64 `locationName:\"branchesCovered\" type:\"integer\"`",
          "6250:  BranchesMissed *int64 `locationName:\"branchesMissed\" type:\"integer\"`",
          "6253:  LineCoveragePercentage *float64 `locationName:\"lineCoveragePercentage\" type:\"double\"`",
          "6256:  LinesCovered *int64 `locationName:\"linesCovered\" type:\"integer\"`",
          "6259:  LinesMissed *int64 `locationName:\"linesMissed\" type:\"integer\"`",
          "6263: func (s CodeCoverageReportSummary) String() string {",
          "6268: func (s CodeCoverageReportSummary) GoString() string {",
          "6273: func (s *CodeCoverageReportSummary) SetBranchCoveragePercentage(v float64) *CodeCoverageReportSummary {",
          "6274:  s.BranchCoveragePercentage = &v",
          "6275:  return s",
          "6276: }",
          "6279: func (s *CodeCoverageReportSummary) SetBranchesCovered(v int64) *CodeCoverageReportSummary {",
          "6280:  s.BranchesCovered = &v",
          "6281:  return s",
          "6285: func (s *CodeCoverageReportSummary) SetBranchesMissed(v int64) *CodeCoverageReportSummary {",
          "6286:  s.BranchesMissed = &v",
          "6291: func (s *CodeCoverageReportSummary) SetLineCoveragePercentage(v float64) *CodeCoverageReportSummary {",
          "6292:  s.LineCoveragePercentage = &v",
          "6293:  return s",
          "6297: func (s *CodeCoverageReportSummary) SetLinesCovered(v int64) *CodeCoverageReportSummary {",
          "6298:  s.LinesCovered = &v",
          "6299:  return s",
          "6303: func (s *CodeCoverageReportSummary) SetLinesMissed(v int64) *CodeCoverageReportSummary {",
          "6304:  s.LinesMissed = &v",
          "6305:  return s",
          "6308: type CreateProjectInput struct {",
          "6314:  Artifacts *ProjectArtifacts `locationName:\"artifacts\" type:\"structure\" required:\"true\"`",
          "6318:  BadgeEnabled *bool `locationName:\"badgeEnabled\" type:\"boolean\"`",
          "6322:  BuildBatchConfig *ProjectBuildBatchConfig `locationName:\"buildBatchConfig\" type:\"structure\"`",
          "6326:  Cache *ProjectCache `locationName:\"cache\" type:\"structure\"`",
          "6329:  Description *string `locationName:\"description\" type:\"string\"`",
          "6339:  EncryptionKey *string `locationName:\"encryptionKey\" min:\"1\" type:\"string\"`",
          "6344:  Environment *ProjectEnvironment `locationName:\"environment\" type:\"structure\" required:\"true\"`",
          "6349:  FileSystemLocations []*ProjectFileSystemLocation `locationName:\"fileSystemLocations\" type:\"list\"`",
          "6353:  LogsConfig *LogsConfig `locationName:\"logsConfig\" type:\"structure\"`",
          "6358:  Name *string `locationName:\"name\" min:\"2\" type:\"string\" required:\"true\"`",
          "6361:  QueuedTimeoutInMinutes *int64 `locationName:\"queuedTimeoutInMinutes\" min:\"5\" type:\"integer\"`",
          "6364:  SecondaryArtifacts []*ProjectArtifacts `locationName:\"secondaryArtifacts\" type:\"list\"`",
          "6369:  SecondarySourceVersions []*ProjectSourceVersion `locationName:\"secondarySourceVersions\" type:\"list\"`",
          "6372:  SecondarySources []*ProjectSource `locationName:\"secondarySources\" type:\"list\"`",
          "6379:  ServiceRole *string `locationName:\"serviceRole\" min:\"1\" type:\"string\" required:\"true\"`",
          "6384:  Source *ProjectSource `locationName:\"source\" type:\"structure\" required:\"true\"`",
          "6411:  SourceVersion *string `locationName:\"sourceVersion\" type:\"string\"`",
          "6417:  Tags []*Tag `locationName:\"tags\" type:\"list\"`",
          "6422:  TimeoutInMinutes *int64 `locationName:\"timeoutInMinutes\" min:\"5\" type:\"integer\"`",
          "6425:  VpcConfig *VpcConfig `locationName:\"vpcConfig\" type:\"structure\"`",
          "6429: func (s CreateProjectInput) String() string {",
          "6434: func (s CreateProjectInput) GoString() string {",
          "6439: func (s *CreateProjectInput) Validate() error {",
          "6440:  invalidParams := request.ErrInvalidParams{Context: \"CreateProjectInput\"}",
          "6441:  if s.Artifacts == nil {",
          "6442:   invalidParams.Add(request.NewErrParamRequired(\"Artifacts\"))",
          "6444:  if s.EncryptionKey != nil && len(*s.EncryptionKey) < 1 {",
          "6445:   invalidParams.Add(request.NewErrParamMinLen(\"EncryptionKey\", 1))",
          "6446:  }",
          "6447:  if s.Environment == nil {",
          "6448:   invalidParams.Add(request.NewErrParamRequired(\"Environment\"))",
          "6449:  }",
          "6450:  if s.Name == nil {",
          "6451:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "6452:  }",
          "6453:  if s.Name != nil && len(*s.Name) < 2 {",
          "6454:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 2))",
          "6455:  }",
          "6456:  if s.QueuedTimeoutInMinutes != nil && *s.QueuedTimeoutInMinutes < 5 {",
          "6457:   invalidParams.Add(request.NewErrParamMinValue(\"QueuedTimeoutInMinutes\", 5))",
          "6458:  }",
          "6459:  if s.ServiceRole == nil {",
          "6460:   invalidParams.Add(request.NewErrParamRequired(\"ServiceRole\"))",
          "6461:  }",
          "6462:  if s.ServiceRole != nil && len(*s.ServiceRole) < 1 {",
          "6463:   invalidParams.Add(request.NewErrParamMinLen(\"ServiceRole\", 1))",
          "6464:  }",
          "6465:  if s.Source == nil {",
          "6466:   invalidParams.Add(request.NewErrParamRequired(\"Source\"))",
          "6467:  }",
          "6468:  if s.TimeoutInMinutes != nil && *s.TimeoutInMinutes < 5 {",
          "6469:   invalidParams.Add(request.NewErrParamMinValue(\"TimeoutInMinutes\", 5))",
          "6470:  }",
          "6471:  if s.Artifacts != nil {",
          "6472:   if err := s.Artifacts.Validate(); err != nil {",
          "6473:    invalidParams.AddNested(\"Artifacts\", err.(request.ErrInvalidParams))",
          "6474:   }",
          "6475:  }",
          "6476:  if s.BuildBatchConfig != nil {",
          "6477:   if err := s.BuildBatchConfig.Validate(); err != nil {",
          "6478:    invalidParams.AddNested(\"BuildBatchConfig\", err.(request.ErrInvalidParams))",
          "6479:   }",
          "6480:  }",
          "6481:  if s.Cache != nil {",
          "6482:   if err := s.Cache.Validate(); err != nil {",
          "6483:    invalidParams.AddNested(\"Cache\", err.(request.ErrInvalidParams))",
          "6484:   }",
          "6485:  }",
          "6486:  if s.Environment != nil {",
          "6487:   if err := s.Environment.Validate(); err != nil {",
          "6488:    invalidParams.AddNested(\"Environment\", err.(request.ErrInvalidParams))",
          "6489:   }",
          "6490:  }",
          "6491:  if s.LogsConfig != nil {",
          "6492:   if err := s.LogsConfig.Validate(); err != nil {",
          "6493:    invalidParams.AddNested(\"LogsConfig\", err.(request.ErrInvalidParams))",
          "6494:   }",
          "6495:  }",
          "6496:  if s.SecondaryArtifacts != nil {",
          "6497:   for i, v := range s.SecondaryArtifacts {",
          "6498:    if v == nil {",
          "6499:     continue",
          "6500:    }",
          "6501:    if err := v.Validate(); err != nil {",
          "6502:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"SecondaryArtifacts\", i), err.(request.ErrInvalidParams))",
          "6503:    }",
          "6504:   }",
          "6505:  }",
          "6506:  if s.SecondarySourceVersions != nil {",
          "6507:   for i, v := range s.SecondarySourceVersions {",
          "6508:    if v == nil {",
          "6509:     continue",
          "6510:    }",
          "6511:    if err := v.Validate(); err != nil {",
          "6512:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"SecondarySourceVersions\", i), err.(request.ErrInvalidParams))",
          "6513:    }",
          "6514:   }",
          "6515:  }",
          "6516:  if s.SecondarySources != nil {",
          "6517:   for i, v := range s.SecondarySources {",
          "6518:    if v == nil {",
          "6519:     continue",
          "6520:    }",
          "6521:    if err := v.Validate(); err != nil {",
          "6522:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"SecondarySources\", i), err.(request.ErrInvalidParams))",
          "6523:    }",
          "6524:   }",
          "6525:  }",
          "6526:  if s.Source != nil {",
          "6527:   if err := s.Source.Validate(); err != nil {",
          "6528:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
          "6529:   }",
          "6530:  }",
          "6531:  if s.Tags != nil {",
          "6532:   for i, v := range s.Tags {",
          "6533:    if v == nil {",
          "6534:     continue",
          "6535:    }",
          "6536:    if err := v.Validate(); err != nil {",
          "6537:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "6538:    }",
          "6539:   }",
          "6540:  }",
          "6541:  if s.VpcConfig != nil {",
          "6542:   if err := s.VpcConfig.Validate(); err != nil {",
          "6543:    invalidParams.AddNested(\"VpcConfig\", err.(request.ErrInvalidParams))",
          "6544:   }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "5396:  return nil",
          "5397: }",
          "5402:  return s",
          "5403: }",
          "5443: }",
          "5448: }",
          "5453: }",
          "5469: }",
          "5474:  return s",
          "5475: }",
          "5480:  return s",
          "5481: }",
          "5486:  return s",
          "5487: }",
          "5492:  return s",
          "5493: }",
          "5509: }",
          "5514: }",
          "5519: }",
          "5524:  return s",
          "5525: }",
          "5530:  return s",
          "5531: }",
          "5545: }",
          "5550: }",
          "5555: }",
          "5560:  return s",
          "5561: }",
          "5566:  return s",
          "5567: }",
          "5572:  return s",
          "5573: }",
          "5578:  _ struct{} `type:\"structure\"`",
          "5585: }",
          "5589:  return awsutil.Prettify(s)",
          "5590: }",
          "5594:  return s.String()",
          "5595: }",
          "5606:  return s",
          "5607: }",
          "5612:  _ struct{} `type:\"structure\"`",
          "5619: }",
          "5623:  return awsutil.Prettify(s)",
          "5624: }",
          "5685:  return s.String()",
          "5686: }",
          "5691:  if s.Name == nil {",
          "5692:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "5693:  }",
          "5696:  }",
          "5699:  }",
          "5701:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "5400: func (s *DeleteWebhookInput) SetProjectName(v string) *DeleteWebhookInput {",
          "5401:  s.ProjectName = &v",
          "5405: type DeleteWebhookOutput struct {",
          "5406:  _ struct{} `type:\"structure\"`",
          "5407: }",
          "5410: func (s DeleteWebhookOutput) String() string {",
          "5411:  return awsutil.Prettify(s)",
          "5412: }",
          "5415: func (s DeleteWebhookOutput) GoString() string {",
          "5416:  return s.String()",
          "5417: }",
          "5419: type DescribeTestCasesInput struct {",
          "5420:  _ struct{} `type:\"structure\"`",
          "5423:  Filter *TestCaseFilter `locationName:\"filter\" type:\"structure\"`",
          "5428:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "5437:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "5442:  ReportArn *string `locationName:\"reportArn\" type:\"string\" required:\"true\"`",
          "5446: func (s DescribeTestCasesInput) String() string {",
          "5447:  return awsutil.Prettify(s)",
          "5451: func (s DescribeTestCasesInput) GoString() string {",
          "5452:  return s.String()",
          "5456: func (s *DescribeTestCasesInput) Validate() error {",
          "5457:  invalidParams := request.ErrInvalidParams{Context: \"DescribeTestCasesInput\"}",
          "5458:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "5459:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "5460:  }",
          "5461:  if s.ReportArn == nil {",
          "5462:   invalidParams.Add(request.NewErrParamRequired(\"ReportArn\"))",
          "5463:  }",
          "5465:  if invalidParams.Len() > 0 {",
          "5466:   return invalidParams",
          "5467:  }",
          "5468:  return nil",
          "5472: func (s *DescribeTestCasesInput) SetFilter(v *TestCaseFilter) *DescribeTestCasesInput {",
          "5473:  s.Filter = v",
          "5478: func (s *DescribeTestCasesInput) SetMaxResults(v int64) *DescribeTestCasesInput {",
          "5479:  s.MaxResults = &v",
          "5484: func (s *DescribeTestCasesInput) SetNextToken(v string) *DescribeTestCasesInput {",
          "5485:  s.NextToken = &v",
          "5490: func (s *DescribeTestCasesInput) SetReportArn(v string) *DescribeTestCasesInput {",
          "5491:  s.ReportArn = &v",
          "5495: type DescribeTestCasesOutput struct {",
          "5496:  _ struct{} `type:\"structure\"`",
          "5505:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "5508:  TestCases []*TestCase `locationName:\"testCases\" type:\"list\"`",
          "5512: func (s DescribeTestCasesOutput) String() string {",
          "5513:  return awsutil.Prettify(s)",
          "5517: func (s DescribeTestCasesOutput) GoString() string {",
          "5518:  return s.String()",
          "5522: func (s *DescribeTestCasesOutput) SetNextToken(v string) *DescribeTestCasesOutput {",
          "5523:  s.NextToken = &v",
          "5528: func (s *DescribeTestCasesOutput) SetTestCases(v []*TestCase) *DescribeTestCasesOutput {",
          "5529:  s.TestCases = v",
          "5534: type EnvironmentImage struct {",
          "5535:  _ struct{} `type:\"structure\"`",
          "5538:  Description *string `locationName:\"description\" type:\"string\"`",
          "5541:  Name *string `locationName:\"name\" type:\"string\"`",
          "5544:  Versions []*string `locationName:\"versions\" type:\"list\"`",
          "5548: func (s EnvironmentImage) String() string {",
          "5549:  return awsutil.Prettify(s)",
          "5553: func (s EnvironmentImage) GoString() string {",
          "5554:  return s.String()",
          "5558: func (s *EnvironmentImage) SetDescription(v string) *EnvironmentImage {",
          "5559:  s.Description = &v",
          "5564: func (s *EnvironmentImage) SetName(v string) *EnvironmentImage {",
          "5565:  s.Name = &v",
          "5570: func (s *EnvironmentImage) SetVersions(v []*string) *EnvironmentImage {",
          "5571:  s.Versions = v",
          "5577: type EnvironmentLanguage struct {",
          "5581:  Images []*EnvironmentImage `locationName:\"images\" type:\"list\"`",
          "5584:  Language *string `locationName:\"language\" type:\"string\" enum:\"LanguageType\"`",
          "5588: func (s EnvironmentLanguage) String() string {",
          "5593: func (s EnvironmentLanguage) GoString() string {",
          "5598: func (s *EnvironmentLanguage) SetImages(v []*EnvironmentImage) *EnvironmentLanguage {",
          "5599:  s.Images = v",
          "5600:  return s",
          "5601: }",
          "5604: func (s *EnvironmentLanguage) SetLanguage(v string) *EnvironmentLanguage {",
          "5605:  s.Language = &v",
          "5611: type EnvironmentPlatform struct {",
          "5615:  Languages []*EnvironmentLanguage `locationName:\"languages\" type:\"list\"`",
          "5618:  Platform *string `locationName:\"platform\" type:\"string\" enum:\"PlatformType\"`",
          "5622: func (s EnvironmentPlatform) String() string {",
          "5627: func (s EnvironmentPlatform) GoString() string {",
          "5628:  return s.String()",
          "5629: }",
          "5632: func (s *EnvironmentPlatform) SetLanguages(v []*EnvironmentLanguage) *EnvironmentPlatform {",
          "5633:  s.Languages = v",
          "5634:  return s",
          "5635: }",
          "5638: func (s *EnvironmentPlatform) SetPlatform(v string) *EnvironmentPlatform {",
          "5639:  s.Platform = &v",
          "5640:  return s",
          "5641: }",
          "5644: type EnvironmentVariable struct {",
          "5645:  _ struct{} `type:\"structure\"`",
          "5650:  Name *string `locationName:\"name\" min:\"1\" type:\"string\" required:\"true\"`",
          "5664:  Type *string `locationName:\"type\" type:\"string\" enum:\"EnvironmentVariableType\"`",
          "5675:  Value *string `locationName:\"value\" type:\"string\" required:\"true\"`",
          "5676: }",
          "5679: func (s EnvironmentVariable) String() string {",
          "5680:  return awsutil.Prettify(s)",
          "5681: }",
          "5684: func (s EnvironmentVariable) GoString() string {",
          "5689: func (s *EnvironmentVariable) Validate() error {",
          "5690:  invalidParams := request.ErrInvalidParams{Context: \"EnvironmentVariable\"}",
          "5694:  if s.Name != nil && len(*s.Name) < 1 {",
          "5695:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "5697:  if s.Value == nil {",
          "5698:   invalidParams.Add(request.NewErrParamRequired(\"Value\"))",
          "",
          "[Added Lines]",
          "6554: func (s *CreateProjectInput) SetArtifacts(v *ProjectArtifacts) *CreateProjectInput {",
          "6555:  s.Artifacts = v",
          "6560: func (s *CreateProjectInput) SetBadgeEnabled(v bool) *CreateProjectInput {",
          "6561:  s.BadgeEnabled = &v",
          "6562:  return s",
          "6566: func (s *CreateProjectInput) SetBuildBatchConfig(v *ProjectBuildBatchConfig) *CreateProjectInput {",
          "6567:  s.BuildBatchConfig = v",
          "6568:  return s",
          "6572: func (s *CreateProjectInput) SetCache(v *ProjectCache) *CreateProjectInput {",
          "6573:  s.Cache = v",
          "6574:  return s",
          "6578: func (s *CreateProjectInput) SetDescription(v string) *CreateProjectInput {",
          "6579:  s.Description = &v",
          "6580:  return s",
          "6584: func (s *CreateProjectInput) SetEncryptionKey(v string) *CreateProjectInput {",
          "6585:  s.EncryptionKey = &v",
          "6590: func (s *CreateProjectInput) SetEnvironment(v *ProjectEnvironment) *CreateProjectInput {",
          "6591:  s.Environment = v",
          "6596: func (s *CreateProjectInput) SetFileSystemLocations(v []*ProjectFileSystemLocation) *CreateProjectInput {",
          "6597:  s.FileSystemLocations = v",
          "6602: func (s *CreateProjectInput) SetLogsConfig(v *LogsConfig) *CreateProjectInput {",
          "6603:  s.LogsConfig = v",
          "6608: func (s *CreateProjectInput) SetName(v string) *CreateProjectInput {",
          "6609:  s.Name = &v",
          "6610:  return s",
          "6614: func (s *CreateProjectInput) SetQueuedTimeoutInMinutes(v int64) *CreateProjectInput {",
          "6615:  s.QueuedTimeoutInMinutes = &v",
          "6616:  return s",
          "6620: func (s *CreateProjectInput) SetSecondaryArtifacts(v []*ProjectArtifacts) *CreateProjectInput {",
          "6621:  s.SecondaryArtifacts = v",
          "6622:  return s",
          "6626: func (s *CreateProjectInput) SetSecondarySourceVersions(v []*ProjectSourceVersion) *CreateProjectInput {",
          "6627:  s.SecondarySourceVersions = v",
          "6632: func (s *CreateProjectInput) SetSecondarySources(v []*ProjectSource) *CreateProjectInput {",
          "6633:  s.SecondarySources = v",
          "6638: func (s *CreateProjectInput) SetServiceRole(v string) *CreateProjectInput {",
          "6639:  s.ServiceRole = &v",
          "6640:  return s",
          "6644: func (s *CreateProjectInput) SetSource(v *ProjectSource) *CreateProjectInput {",
          "6645:  s.Source = v",
          "6646:  return s",
          "6650: func (s *CreateProjectInput) SetSourceVersion(v string) *CreateProjectInput {",
          "6651:  s.SourceVersion = &v",
          "6652:  return s",
          "6656: func (s *CreateProjectInput) SetTags(v []*Tag) *CreateProjectInput {",
          "6657:  s.Tags = v",
          "6662: func (s *CreateProjectInput) SetTimeoutInMinutes(v int64) *CreateProjectInput {",
          "6663:  s.TimeoutInMinutes = &v",
          "6668: func (s *CreateProjectInput) SetVpcConfig(v *VpcConfig) *CreateProjectInput {",
          "6669:  s.VpcConfig = v",
          "6673: type CreateProjectOutput struct {",
          "6677:  Project *Project `locationName:\"project\" type:\"structure\"`",
          "6681: func (s CreateProjectOutput) String() string {",
          "6686: func (s CreateProjectOutput) GoString() string {",
          "6691: func (s *CreateProjectOutput) SetProject(v *Project) *CreateProjectOutput {",
          "6692:  s.Project = v",
          "6696: type CreateReportGroupInput struct {",
          "6703:  ExportConfig *ReportExportConfig `locationName:\"exportConfig\" type:\"structure\" required:\"true\"`",
          "6708:  Name *string `locationName:\"name\" min:\"2\" type:\"string\" required:\"true\"`",
          "6714:  Tags []*Tag `locationName:\"tags\" type:\"list\"`",
          "6719:  Type *string `locationName:\"type\" type:\"string\" required:\"true\" enum:\"ReportType\"`",
          "6723: func (s CreateReportGroupInput) String() string {",
          "6728: func (s CreateReportGroupInput) GoString() string {",
          "6733: func (s *CreateReportGroupInput) Validate() error {",
          "6734:  invalidParams := request.ErrInvalidParams{Context: \"CreateReportGroupInput\"}",
          "6735:  if s.ExportConfig == nil {",
          "6736:   invalidParams.Add(request.NewErrParamRequired(\"ExportConfig\"))",
          "6737:  }",
          "6741:  if s.Name != nil && len(*s.Name) < 2 {",
          "6742:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 2))",
          "6744:  if s.Type == nil {",
          "6745:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "6746:  }",
          "6747:  if s.ExportConfig != nil {",
          "6748:   if err := s.ExportConfig.Validate(); err != nil {",
          "6749:    invalidParams.AddNested(\"ExportConfig\", err.(request.ErrInvalidParams))",
          "6750:   }",
          "6751:  }",
          "6752:  if s.Tags != nil {",
          "6753:   for i, v := range s.Tags {",
          "6754:    if v == nil {",
          "6755:     continue",
          "6756:    }",
          "6757:    if err := v.Validate(); err != nil {",
          "6758:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "6759:    }",
          "6760:   }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "5704:  return nil",
          "5705: }",
          "5709:  s.Name = &v",
          "5710:  return s",
          "5711: }",
          "5716:  return s",
          "5717: }",
          "5722:  return s",
          "5723: }",
          "5727:  _ struct{} `type:\"structure\"`",
          "5739: }",
          "5743:  return awsutil.Prettify(s)",
          "5744: }",
          "5748:  return s.String()",
          "5749: }",
          "5760:  return s",
          "5761: }",
          "5764:  _ struct{} `type:\"structure\"`",
          "5770: }",
          "5774:  return awsutil.Prettify(s)",
          "5775: }",
          "5779:  return s.String()",
          "5780: }",
          "5787:  }",
          "5790:  }",
          "5792:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "5708: func (s *EnvironmentVariable) SetName(v string) *EnvironmentVariable {",
          "5714: func (s *EnvironmentVariable) SetType(v string) *EnvironmentVariable {",
          "5715:  s.Type = &v",
          "5720: func (s *EnvironmentVariable) SetValue(v string) *EnvironmentVariable {",
          "5721:  s.Value = &v",
          "5726: type ExportedEnvironmentVariable struct {",
          "5730:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
          "5738:  Value *string `locationName:\"value\" type:\"string\"`",
          "5742: func (s ExportedEnvironmentVariable) String() string {",
          "5747: func (s ExportedEnvironmentVariable) GoString() string {",
          "5752: func (s *ExportedEnvironmentVariable) SetName(v string) *ExportedEnvironmentVariable {",
          "5753:  s.Name = &v",
          "5754:  return s",
          "5755: }",
          "5758: func (s *ExportedEnvironmentVariable) SetValue(v string) *ExportedEnvironmentVariable {",
          "5759:  s.Value = &v",
          "5763: type GetResourcePolicyInput struct {",
          "5769:  ResourceArn *string `locationName:\"resourceArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "5773: func (s GetResourcePolicyInput) String() string {",
          "5778: func (s GetResourcePolicyInput) GoString() string {",
          "5783: func (s *GetResourcePolicyInput) Validate() error {",
          "5784:  invalidParams := request.ErrInvalidParams{Context: \"GetResourcePolicyInput\"}",
          "5785:  if s.ResourceArn == nil {",
          "5786:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "5788:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "5789:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "",
          "[Added Lines]",
          "6770: func (s *CreateReportGroupInput) SetExportConfig(v *ReportExportConfig) *CreateReportGroupInput {",
          "6771:  s.ExportConfig = v",
          "6772:  return s",
          "6773: }",
          "6776: func (s *CreateReportGroupInput) SetName(v string) *CreateReportGroupInput {",
          "6782: func (s *CreateReportGroupInput) SetTags(v []*Tag) *CreateReportGroupInput {",
          "6783:  s.Tags = v",
          "6788: func (s *CreateReportGroupInput) SetType(v string) *CreateReportGroupInput {",
          "6789:  s.Type = &v",
          "6793: type CreateReportGroupOutput struct {",
          "6797:  ReportGroup *ReportGroup `locationName:\"reportGroup\" type:\"structure\"`",
          "6801: func (s CreateReportGroupOutput) String() string {",
          "6806: func (s CreateReportGroupOutput) GoString() string {",
          "6811: func (s *CreateReportGroupOutput) SetReportGroup(v *ReportGroup) *CreateReportGroupOutput {",
          "6812:  s.ReportGroup = v",
          "6816: type CreateWebhookInput struct {",
          "6825:  BranchFilter *string `locationName:\"branchFilter\" type:\"string\"`",
          "6828:  BuildType *string `locationName:\"buildType\" type:\"string\" enum:\"WebhookBuildType\"`",
          "6836:  FilterGroups [][]*WebhookFilter `locationName:\"filterGroups\" type:\"list\"`",
          "6841:  ProjectName *string `locationName:\"projectName\" min:\"2\" type:\"string\" required:\"true\"`",
          "6845: func (s CreateWebhookInput) String() string {",
          "6850: func (s CreateWebhookInput) GoString() string {",
          "6855: func (s *CreateWebhookInput) Validate() error {",
          "6856:  invalidParams := request.ErrInvalidParams{Context: \"CreateWebhookInput\"}",
          "6857:  if s.ProjectName == nil {",
          "6858:   invalidParams.Add(request.NewErrParamRequired(\"ProjectName\"))",
          "6860:  if s.ProjectName != nil && len(*s.ProjectName) < 2 {",
          "6861:   invalidParams.Add(request.NewErrParamMinLen(\"ProjectName\", 2))",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "5795:  return nil",
          "5796: }",
          "5801:  return s",
          "5802: }",
          "5805:  _ struct{} `type:\"structure\"`",
          "5809: }",
          "5813:  return awsutil.Prettify(s)",
          "5814: }",
          "5818:  return s.String()",
          "5819: }",
          "5824:  return s",
          "5825: }",
          "5830:  _ struct{} `type:\"structure\"`",
          "5836: }",
          "5840:  return awsutil.Prettify(s)",
          "5841: }",
          "5845:  return s.String()",
          "5846: }",
          "5859: }",
          "5864:  return s",
          "5865: }",
          "5868:  _ struct{} `type:\"structure\"`",
          "5896: }",
          "5900:  return awsutil.Prettify(s)",
          "5901: }",
          "5905:  return s.String()",
          "5906: }",
          "5922:  }",
          "5925:  }",
          "5927:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "5799: func (s *GetResourcePolicyInput) SetResourceArn(v string) *GetResourcePolicyInput {",
          "5800:  s.ResourceArn = &v",
          "5804: type GetResourcePolicyOutput struct {",
          "5808:  Policy *string `locationName:\"policy\" min:\"1\" type:\"string\"`",
          "5812: func (s GetResourcePolicyOutput) String() string {",
          "5817: func (s GetResourcePolicyOutput) GoString() string {",
          "5822: func (s *GetResourcePolicyOutput) SetPolicy(v string) *GetResourcePolicyOutput {",
          "5823:  s.Policy = &v",
          "5829: type GitSubmodulesConfig struct {",
          "5835:  FetchSubmodules *bool `locationName:\"fetchSubmodules\" type:\"boolean\" required:\"true\"`",
          "5839: func (s GitSubmodulesConfig) String() string {",
          "5844: func (s GitSubmodulesConfig) GoString() string {",
          "5849: func (s *GitSubmodulesConfig) Validate() error {",
          "5850:  invalidParams := request.ErrInvalidParams{Context: \"GitSubmodulesConfig\"}",
          "5851:  if s.FetchSubmodules == nil {",
          "5852:   invalidParams.Add(request.NewErrParamRequired(\"FetchSubmodules\"))",
          "5853:  }",
          "5855:  if invalidParams.Len() > 0 {",
          "5856:   return invalidParams",
          "5857:  }",
          "5858:  return nil",
          "5862: func (s *GitSubmodulesConfig) SetFetchSubmodules(v bool) *GitSubmodulesConfig {",
          "5863:  s.FetchSubmodules = &v",
          "5867: type ImportSourceCredentialsInput struct {",
          "5875:  AuthType *string `locationName:\"authType\" type:\"string\" required:\"true\" enum:\"AuthType\"`",
          "5880:  ServerType *string `locationName:\"serverType\" type:\"string\" required:\"true\" enum:\"ServerType\"`",
          "5885:  ShouldOverwrite *bool `locationName:\"shouldOverwrite\" type:\"boolean\"`",
          "5891:  Token *string `locationName:\"token\" min:\"1\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "5895:  Username *string `locationName:\"username\" min:\"1\" type:\"string\"`",
          "5899: func (s ImportSourceCredentialsInput) String() string {",
          "5904: func (s ImportSourceCredentialsInput) GoString() string {",
          "5909: func (s *ImportSourceCredentialsInput) Validate() error {",
          "5910:  invalidParams := request.ErrInvalidParams{Context: \"ImportSourceCredentialsInput\"}",
          "5911:  if s.AuthType == nil {",
          "5912:   invalidParams.Add(request.NewErrParamRequired(\"AuthType\"))",
          "5913:  }",
          "5914:  if s.ServerType == nil {",
          "5915:   invalidParams.Add(request.NewErrParamRequired(\"ServerType\"))",
          "5916:  }",
          "5917:  if s.Token == nil {",
          "5918:   invalidParams.Add(request.NewErrParamRequired(\"Token\"))",
          "5919:  }",
          "5920:  if s.Token != nil && len(*s.Token) < 1 {",
          "5921:   invalidParams.Add(request.NewErrParamMinLen(\"Token\", 1))",
          "5923:  if s.Username != nil && len(*s.Username) < 1 {",
          "5924:   invalidParams.Add(request.NewErrParamMinLen(\"Username\", 1))",
          "",
          "[Added Lines]",
          "6871: func (s *CreateWebhookInput) SetBranchFilter(v string) *CreateWebhookInput {",
          "6872:  s.BranchFilter = &v",
          "6877: func (s *CreateWebhookInput) SetBuildType(v string) *CreateWebhookInput {",
          "6878:  s.BuildType = &v",
          "6879:  return s",
          "6880: }",
          "6883: func (s *CreateWebhookInput) SetFilterGroups(v [][]*WebhookFilter) *CreateWebhookInput {",
          "6884:  s.FilterGroups = v",
          "6885:  return s",
          "6886: }",
          "6889: func (s *CreateWebhookInput) SetProjectName(v string) *CreateWebhookInput {",
          "6890:  s.ProjectName = &v",
          "6891:  return s",
          "6892: }",
          "6894: type CreateWebhookOutput struct {",
          "6899:  Webhook *Webhook `locationName:\"webhook\" type:\"structure\"`",
          "6903: func (s CreateWebhookOutput) String() string {",
          "6908: func (s CreateWebhookOutput) GoString() string {",
          "6913: func (s *CreateWebhookOutput) SetWebhook(v *Webhook) *CreateWebhookOutput {",
          "6914:  s.Webhook = v",
          "6920: type DebugSession struct {",
          "6924:  SessionEnabled *bool `locationName:\"sessionEnabled\" type:\"boolean\"`",
          "6929:  SessionTarget *string `locationName:\"sessionTarget\" min:\"1\" type:\"string\"`",
          "6933: func (s DebugSession) String() string {",
          "6938: func (s DebugSession) GoString() string {",
          "6943: func (s *DebugSession) SetSessionEnabled(v bool) *DebugSession {",
          "6944:  s.SessionEnabled = &v",
          "6945:  return s",
          "6949: func (s *DebugSession) SetSessionTarget(v string) *DebugSession {",
          "6950:  s.SessionTarget = &v",
          "6954: type DeleteBuildBatchInput struct {",
          "6960:  Id *string `locationName:\"id\" min:\"1\" type:\"string\" required:\"true\"`",
          "6964: func (s DeleteBuildBatchInput) String() string {",
          "6969: func (s DeleteBuildBatchInput) GoString() string {",
          "6974: func (s *DeleteBuildBatchInput) Validate() error {",
          "6975:  invalidParams := request.ErrInvalidParams{Context: \"DeleteBuildBatchInput\"}",
          "6976:  if s.Id == nil {",
          "6977:   invalidParams.Add(request.NewErrParamRequired(\"Id\"))",
          "6979:  if s.Id != nil && len(*s.Id) < 1 {",
          "6980:   invalidParams.Add(request.NewErrParamMinLen(\"Id\", 1))",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "5930:  return nil",
          "5931: }",
          "5948:  return s",
          "5949: }",
          "5968: }",
          "5972:  return awsutil.Prettify(s)",
          "5973: }",
          "5977:  return s.String()",
          "5978: }",
          "5983:  return s",
          "5984: }",
          "5992: }",
          "5996:  return awsutil.Prettify(s)",
          "5997: }",
          "6001:  return s.String()",
          "6002: }",
          "6007:  }",
          "6019:  }",
          "6021: }",
          "6026: }",
          "6030: }",
          "6035: }",
          "6040: }",
          "6043:  _ struct{} `type:\"structure\"`",
          "6049: }",
          "6053:  return awsutil.Prettify(s)",
          "6054: }",
          "6058:  return s.String()",
          "6059: }",
          "6066:  }",
          "6069:  }",
          "6071:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "5934: func (s *ImportSourceCredentialsInput) SetAuthType(v string) *ImportSourceCredentialsInput {",
          "5935:  s.AuthType = &v",
          "5936:  return s",
          "5937: }",
          "5940: func (s *ImportSourceCredentialsInput) SetServerType(v string) *ImportSourceCredentialsInput {",
          "5941:  s.ServerType = &v",
          "5942:  return s",
          "5943: }",
          "5946: func (s *ImportSourceCredentialsInput) SetShouldOverwrite(v bool) *ImportSourceCredentialsInput {",
          "5947:  s.ShouldOverwrite = &v",
          "5952: func (s *ImportSourceCredentialsInput) SetToken(v string) *ImportSourceCredentialsInput {",
          "5953:  s.Token = &v",
          "5954:  return s",
          "5955: }",
          "5958: func (s *ImportSourceCredentialsInput) SetUsername(v string) *ImportSourceCredentialsInput {",
          "5959:  s.Username = &v",
          "5960:  return s",
          "5961: }",
          "5963: type ImportSourceCredentialsOutput struct {",
          "5964:  _ struct{} `type:\"structure\"`",
          "5967:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "5971: func (s ImportSourceCredentialsOutput) String() string {",
          "5976: func (s ImportSourceCredentialsOutput) GoString() string {",
          "5981: func (s *ImportSourceCredentialsOutput) SetArn(v string) *ImportSourceCredentialsOutput {",
          "5982:  s.Arn = &v",
          "5987: type InvalidInputException struct {",
          "5988:  _            struct{}                  `type:\"structure\"`",
          "5989:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "5991:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "5995: func (s InvalidInputException) String() string {",
          "6000: func (s InvalidInputException) GoString() string {",
          "6004: func newErrorInvalidInputException(v protocol.ResponseMetadata) error {",
          "6005:  return &InvalidInputException{",
          "6006:   RespMetadata: v,",
          "6008: }",
          "6011: func (s *InvalidInputException) Code() string {",
          "6012:  return \"InvalidInputException\"",
          "6013: }",
          "6016: func (s *InvalidInputException) Message() string {",
          "6017:  if s.Message_ != nil {",
          "6018:   return *s.Message_",
          "6020:  return \"\"",
          "6024: func (s *InvalidInputException) OrigErr() error {",
          "6025:  return nil",
          "6028: func (s *InvalidInputException) Error() string {",
          "6029:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "6033: func (s *InvalidInputException) StatusCode() int {",
          "6034:  return s.RespMetadata.StatusCode",
          "6038: func (s *InvalidInputException) RequestID() string {",
          "6039:  return s.RespMetadata.RequestID",
          "6042: type InvalidateProjectCacheInput struct {",
          "6048:  ProjectName *string `locationName:\"projectName\" min:\"1\" type:\"string\" required:\"true\"`",
          "6052: func (s InvalidateProjectCacheInput) String() string {",
          "6057: func (s InvalidateProjectCacheInput) GoString() string {",
          "6062: func (s *InvalidateProjectCacheInput) Validate() error {",
          "6063:  invalidParams := request.ErrInvalidParams{Context: \"InvalidateProjectCacheInput\"}",
          "6064:  if s.ProjectName == nil {",
          "6065:   invalidParams.Add(request.NewErrParamRequired(\"ProjectName\"))",
          "6067:  if s.ProjectName != nil && len(*s.ProjectName) < 1 {",
          "6068:   invalidParams.Add(request.NewErrParamMinLen(\"ProjectName\", 1))",
          "",
          "[Added Lines]",
          "6990: func (s *DeleteBuildBatchInput) SetId(v string) *DeleteBuildBatchInput {",
          "6991:  s.Id = &v",
          "6995: type DeleteBuildBatchOutput struct {",
          "6996:  _ struct{} `type:\"structure\"`",
          "7000:  BuildsDeleted []*string `locationName:\"buildsDeleted\" min:\"1\" type:\"list\"`",
          "7004:  BuildsNotDeleted []*BuildNotDeleted `locationName:\"buildsNotDeleted\" type:\"list\"`",
          "7007:  StatusCode *string `locationName:\"statusCode\" type:\"string\"`",
          "7011: func (s DeleteBuildBatchOutput) String() string {",
          "7016: func (s DeleteBuildBatchOutput) GoString() string {",
          "7021: func (s *DeleteBuildBatchOutput) SetBuildsDeleted(v []*string) *DeleteBuildBatchOutput {",
          "7022:  s.BuildsDeleted = v",
          "7027: func (s *DeleteBuildBatchOutput) SetBuildsNotDeleted(v []*BuildNotDeleted) *DeleteBuildBatchOutput {",
          "7028:  s.BuildsNotDeleted = v",
          "7029:  return s",
          "7030: }",
          "7033: func (s *DeleteBuildBatchOutput) SetStatusCode(v string) *DeleteBuildBatchOutput {",
          "7034:  s.StatusCode = &v",
          "7035:  return s",
          "7036: }",
          "7038: type DeleteProjectInput struct {",
          "7039:  _ struct{} `type:\"structure\"`",
          "7044:  Name *string `locationName:\"name\" min:\"1\" type:\"string\" required:\"true\"`",
          "7048: func (s DeleteProjectInput) String() string {",
          "7053: func (s DeleteProjectInput) GoString() string {",
          "7058: func (s *DeleteProjectInput) Validate() error {",
          "7059:  invalidParams := request.ErrInvalidParams{Context: \"DeleteProjectInput\"}",
          "7060:  if s.Name == nil {",
          "7061:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "7062:  }",
          "7063:  if s.Name != nil && len(*s.Name) < 1 {",
          "7064:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "7067:  if invalidParams.Len() > 0 {",
          "7068:   return invalidParams",
          "7070:  return nil",
          "7074: func (s *DeleteProjectInput) SetName(v string) *DeleteProjectInput {",
          "7075:  s.Name = &v",
          "7076:  return s",
          "7079: type DeleteProjectOutput struct {",
          "7080:  _ struct{} `type:\"structure\"`",
          "7084: func (s DeleteProjectOutput) String() string {",
          "7085:  return awsutil.Prettify(s)",
          "7089: func (s DeleteProjectOutput) GoString() string {",
          "7090:  return s.String()",
          "7093: type DeleteReportGroupInput struct {",
          "7099:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "7103: func (s DeleteReportGroupInput) String() string {",
          "7108: func (s DeleteReportGroupInput) GoString() string {",
          "7113: func (s *DeleteReportGroupInput) Validate() error {",
          "7114:  invalidParams := request.ErrInvalidParams{Context: \"DeleteReportGroupInput\"}",
          "7115:  if s.Arn == nil {",
          "7116:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "7118:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "7119:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "6074:  return nil",
          "6075: }",
          "6080:  return s",
          "6081: }",
          "6084:  _ struct{} `type:\"structure\"`",
          "6085: }",
          "6089:  return awsutil.Prettify(s)",
          "6090: }",
          "6094:  return s.String()",
          "6095: }",
          "6098:  _ struct{} `type:\"structure\"`",
          "6119: }",
          "6123:  return awsutil.Prettify(s)",
          "6124: }",
          "6128:  return s.String()",
          "6129: }",
          "6136:  }",
          "6139:  }",
          "6141:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "6078: func (s *InvalidateProjectCacheInput) SetProjectName(v string) *InvalidateProjectCacheInput {",
          "6079:  s.ProjectName = &v",
          "6083: type InvalidateProjectCacheOutput struct {",
          "6088: func (s InvalidateProjectCacheOutput) String() string {",
          "6093: func (s InvalidateProjectCacheOutput) GoString() string {",
          "6097: type ListBuildsForProjectInput struct {",
          "6106:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6111:  ProjectName *string `locationName:\"projectName\" min:\"1\" type:\"string\" required:\"true\"`",
          "6118:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "6122: func (s ListBuildsForProjectInput) String() string {",
          "6127: func (s ListBuildsForProjectInput) GoString() string {",
          "6132: func (s *ListBuildsForProjectInput) Validate() error {",
          "6133:  invalidParams := request.ErrInvalidParams{Context: \"ListBuildsForProjectInput\"}",
          "6134:  if s.ProjectName == nil {",
          "6135:   invalidParams.Add(request.NewErrParamRequired(\"ProjectName\"))",
          "6137:  if s.ProjectName != nil && len(*s.ProjectName) < 1 {",
          "6138:   invalidParams.Add(request.NewErrParamMinLen(\"ProjectName\", 1))",
          "",
          "[Added Lines]",
          "7129: func (s *DeleteReportGroupInput) SetArn(v string) *DeleteReportGroupInput {",
          "7130:  s.Arn = &v",
          "7134: type DeleteReportGroupOutput struct {",
          "7139: func (s DeleteReportGroupOutput) String() string {",
          "7144: func (s DeleteReportGroupOutput) GoString() string {",
          "7148: type DeleteReportInput struct {",
          "7154:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "7158: func (s DeleteReportInput) String() string {",
          "7163: func (s DeleteReportInput) GoString() string {",
          "7168: func (s *DeleteReportInput) Validate() error {",
          "7169:  invalidParams := request.ErrInvalidParams{Context: \"DeleteReportInput\"}",
          "7170:  if s.Arn == nil {",
          "7171:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "7173:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "7174:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "6144:  return nil",
          "6145: }",
          "6150:  return s",
          "6151: }",
          "6157: }",
          "6163: }",
          "6177: }",
          "6181:  return awsutil.Prettify(s)",
          "6182: }",
          "6186:  return s.String()",
          "6187: }",
          "6193: }",
          "6198:  return s",
          "6199: }",
          "6202:  _ struct{} `type:\"structure\"`",
          "6218: }",
          "6222:  return awsutil.Prettify(s)",
          "6223: }",
          "6227:  return s.String()",
          "6228: }",
          "6234: }",
          "6239:  return s",
          "6240: }",
          "6243:  _ struct{} `type:\"structure\"`",
          "6253: }",
          "6257:  return awsutil.Prettify(s)",
          "6258: }",
          "6262:  return s.String()",
          "6263: }",
          "6274:  return s",
          "6275: }",
          "6278:  _ struct{} `type:\"structure\"`",
          "6279: }",
          "6283:  return awsutil.Prettify(s)",
          "6284: }",
          "6288:  return s.String()",
          "6289: }",
          "6297: }",
          "6301:  return awsutil.Prettify(s)",
          "6302: }",
          "6306:  return s.String()",
          "6307: }",
          "6316:  _ struct{} `type:\"structure\"`",
          "6346:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "6347: }",
          "6351:  return awsutil.Prettify(s)",
          "6352: }",
          "6356:  return s.String()",
          "6357: }",
          "6364:  }",
          "6366:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "6148: func (s *ListBuildsForProjectInput) SetNextToken(v string) *ListBuildsForProjectInput {",
          "6149:  s.NextToken = &v",
          "6154: func (s *ListBuildsForProjectInput) SetProjectName(v string) *ListBuildsForProjectInput {",
          "6155:  s.ProjectName = &v",
          "6156:  return s",
          "6160: func (s *ListBuildsForProjectInput) SetSortOrder(v string) *ListBuildsForProjectInput {",
          "6161:  s.SortOrder = &v",
          "6162:  return s",
          "6165: type ListBuildsForProjectOutput struct {",
          "6166:  _ struct{} `type:\"structure\"`",
          "6170:  Ids []*string `locationName:\"ids\" min:\"1\" type:\"list\"`",
          "6176:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6180: func (s ListBuildsForProjectOutput) String() string {",
          "6185: func (s ListBuildsForProjectOutput) GoString() string {",
          "6190: func (s *ListBuildsForProjectOutput) SetIds(v []*string) *ListBuildsForProjectOutput {",
          "6191:  s.Ids = v",
          "6192:  return s",
          "6196: func (s *ListBuildsForProjectOutput) SetNextToken(v string) *ListBuildsForProjectOutput {",
          "6197:  s.NextToken = &v",
          "6201: type ListBuildsInput struct {",
          "6210:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6217:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "6221: func (s ListBuildsInput) String() string {",
          "6226: func (s ListBuildsInput) GoString() string {",
          "6231: func (s *ListBuildsInput) SetNextToken(v string) *ListBuildsInput {",
          "6232:  s.NextToken = &v",
          "6233:  return s",
          "6237: func (s *ListBuildsInput) SetSortOrder(v string) *ListBuildsInput {",
          "6238:  s.SortOrder = &v",
          "6242: type ListBuildsOutput struct {",
          "6246:  Ids []*string `locationName:\"ids\" min:\"1\" type:\"list\"`",
          "6252:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6256: func (s ListBuildsOutput) String() string {",
          "6261: func (s ListBuildsOutput) GoString() string {",
          "6266: func (s *ListBuildsOutput) SetIds(v []*string) *ListBuildsOutput {",
          "6267:  s.Ids = v",
          "6268:  return s",
          "6269: }",
          "6272: func (s *ListBuildsOutput) SetNextToken(v string) *ListBuildsOutput {",
          "6273:  s.NextToken = &v",
          "6277: type ListCuratedEnvironmentImagesInput struct {",
          "6282: func (s ListCuratedEnvironmentImagesInput) String() string {",
          "6287: func (s ListCuratedEnvironmentImagesInput) GoString() string {",
          "6291: type ListCuratedEnvironmentImagesOutput struct {",
          "6292:  _ struct{} `type:\"structure\"`",
          "6296:  Platforms []*EnvironmentPlatform `locationName:\"platforms\" type:\"list\"`",
          "6300: func (s ListCuratedEnvironmentImagesOutput) String() string {",
          "6305: func (s ListCuratedEnvironmentImagesOutput) GoString() string {",
          "6310: func (s *ListCuratedEnvironmentImagesOutput) SetPlatforms(v []*EnvironmentPlatform) *ListCuratedEnvironmentImagesOutput {",
          "6311:  s.Platforms = v",
          "6312:  return s",
          "6313: }",
          "6315: type ListProjectsInput struct {",
          "6324:  NextToken *string `locationName:\"nextToken\" min:\"1\" type:\"string\"`",
          "6337:  SortBy *string `locationName:\"sortBy\" type:\"string\" enum:\"ProjectSortByType\"`",
          "6350: func (s ListProjectsInput) String() string {",
          "6355: func (s ListProjectsInput) GoString() string {",
          "6360: func (s *ListProjectsInput) Validate() error {",
          "6361:  invalidParams := request.ErrInvalidParams{Context: \"ListProjectsInput\"}",
          "6362:  if s.NextToken != nil && len(*s.NextToken) < 1 {",
          "6363:   invalidParams.Add(request.NewErrParamMinLen(\"NextToken\", 1))",
          "",
          "[Added Lines]",
          "7184: func (s *DeleteReportInput) SetArn(v string) *DeleteReportInput {",
          "7185:  s.Arn = &v",
          "7189: type DeleteReportOutput struct {",
          "7190:  _ struct{} `type:\"structure\"`",
          "7194: func (s DeleteReportOutput) String() string {",
          "7195:  return awsutil.Prettify(s)",
          "7199: func (s DeleteReportOutput) GoString() string {",
          "7200:  return s.String()",
          "7201: }",
          "7203: type DeleteResourcePolicyInput struct {",
          "7204:  _ struct{} `type:\"structure\"`",
          "7209:  ResourceArn *string `locationName:\"resourceArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "7213: func (s DeleteResourcePolicyInput) String() string {",
          "7218: func (s DeleteResourcePolicyInput) GoString() string {",
          "7223: func (s *DeleteResourcePolicyInput) Validate() error {",
          "7224:  invalidParams := request.ErrInvalidParams{Context: \"DeleteResourcePolicyInput\"}",
          "7225:  if s.ResourceArn == nil {",
          "7226:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "7227:  }",
          "7228:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "7229:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "7230:  }",
          "7232:  if invalidParams.Len() > 0 {",
          "7233:   return invalidParams",
          "7234:  }",
          "7235:  return nil",
          "7239: func (s *DeleteResourcePolicyInput) SetResourceArn(v string) *DeleteResourcePolicyInput {",
          "7240:  s.ResourceArn = &v",
          "7244: type DeleteResourcePolicyOutput struct {",
          "7246: }",
          "7249: func (s DeleteResourcePolicyOutput) String() string {",
          "7250:  return awsutil.Prettify(s)",
          "7251: }",
          "7254: func (s DeleteResourcePolicyOutput) GoString() string {",
          "7255:  return s.String()",
          "7256: }",
          "7258: type DeleteSourceCredentialsInput struct {",
          "7259:  _ struct{} `type:\"structure\"`",
          "7264:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "7268: func (s DeleteSourceCredentialsInput) String() string {",
          "7273: func (s DeleteSourceCredentialsInput) GoString() string {",
          "7278: func (s *DeleteSourceCredentialsInput) Validate() error {",
          "7279:  invalidParams := request.ErrInvalidParams{Context: \"DeleteSourceCredentialsInput\"}",
          "7280:  if s.Arn == nil {",
          "7281:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "7282:  }",
          "7283:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "7284:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "7285:  }",
          "7287:  if invalidParams.Len() > 0 {",
          "7288:   return invalidParams",
          "7289:  }",
          "7290:  return nil",
          "7294: func (s *DeleteSourceCredentialsInput) SetArn(v string) *DeleteSourceCredentialsInput {",
          "7295:  s.Arn = &v",
          "7299: type DeleteSourceCredentialsOutput struct {",
          "7303:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "7307: func (s DeleteSourceCredentialsOutput) String() string {",
          "7312: func (s DeleteSourceCredentialsOutput) GoString() string {",
          "7317: func (s *DeleteSourceCredentialsOutput) SetArn(v string) *DeleteSourceCredentialsOutput {",
          "7318:  s.Arn = &v",
          "7322: type DeleteWebhookInput struct {",
          "7328:  ProjectName *string `locationName:\"projectName\" min:\"2\" type:\"string\" required:\"true\"`",
          "7332: func (s DeleteWebhookInput) String() string {",
          "7337: func (s DeleteWebhookInput) GoString() string {",
          "7342: func (s *DeleteWebhookInput) Validate() error {",
          "7343:  invalidParams := request.ErrInvalidParams{Context: \"DeleteWebhookInput\"}",
          "7344:  if s.ProjectName == nil {",
          "7345:   invalidParams.Add(request.NewErrParamRequired(\"ProjectName\"))",
          "7346:  }",
          "7347:  if s.ProjectName != nil && len(*s.ProjectName) < 2 {",
          "7348:   invalidParams.Add(request.NewErrParamMinLen(\"ProjectName\", 2))",
          "7349:  }",
          "7351:  if invalidParams.Len() > 0 {",
          "7352:   return invalidParams",
          "7353:  }",
          "7354:  return nil",
          "7355: }",
          "7358: func (s *DeleteWebhookInput) SetProjectName(v string) *DeleteWebhookInput {",
          "7359:  s.ProjectName = &v",
          "7360:  return s",
          "7361: }",
          "7363: type DeleteWebhookOutput struct {",
          "7364:  _ struct{} `type:\"structure\"`",
          "7368: func (s DeleteWebhookOutput) String() string {",
          "7373: func (s DeleteWebhookOutput) GoString() string {",
          "7377: type DescribeCodeCoveragesInput struct {",
          "7381:  MaxLineCoveragePercentage *float64 `locationName:\"maxLineCoveragePercentage\" type:\"double\"`",
          "7384:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "7387:  MinLineCoveragePercentage *float64 `locationName:\"minLineCoveragePercentage\" type:\"double\"`",
          "7392:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "7397:  ReportArn *string `locationName:\"reportArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "7408:  SortBy *string `locationName:\"sortBy\" type:\"string\" enum:\"ReportCodeCoverageSortByType\"`",
          "7415: func (s DescribeCodeCoveragesInput) String() string {",
          "7420: func (s DescribeCodeCoveragesInput) GoString() string {",
          "7425: func (s *DescribeCodeCoveragesInput) Validate() error {",
          "7426:  invalidParams := request.ErrInvalidParams{Context: \"DescribeCodeCoveragesInput\"}",
          "7427:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "7428:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "7429:  }",
          "7430:  if s.ReportArn == nil {",
          "7431:   invalidParams.Add(request.NewErrParamRequired(\"ReportArn\"))",
          "7432:  }",
          "7433:  if s.ReportArn != nil && len(*s.ReportArn) < 1 {",
          "7434:   invalidParams.Add(request.NewErrParamMinLen(\"ReportArn\", 1))",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "6369:  return nil",
          "6370: }",
          "6374:  s.NextToken = &v",
          "6375:  return s",
          "6376: }",
          "6380:  s.SortBy = &v",
          "6381:  return s",
          "6382: }",
          "6386:  s.SortOrder = &v",
          "6387:  return s",
          "6388: }",
          "6391:  _ struct{} `type:\"structure\"`",
          "6402: }",
          "6406:  return awsutil.Prettify(s)",
          "6407: }",
          "6411:  return s.String()",
          "6412: }",
          "6417:  return s",
          "6418: }",
          "6423:  return s",
          "6424: }",
          "6427:  _ struct{} `type:\"structure\"`",
          "6432:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "",
          "[Removed Lines]",
          "6373: func (s *ListProjectsInput) SetNextToken(v string) *ListProjectsInput {",
          "6379: func (s *ListProjectsInput) SetSortBy(v string) *ListProjectsInput {",
          "6385: func (s *ListProjectsInput) SetSortOrder(v string) *ListProjectsInput {",
          "6390: type ListProjectsOutput struct {",
          "6397:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6401:  Projects []*string `locationName:\"projects\" min:\"1\" type:\"list\"`",
          "6405: func (s ListProjectsOutput) String() string {",
          "6410: func (s ListProjectsOutput) GoString() string {",
          "6415: func (s *ListProjectsOutput) SetNextToken(v string) *ListProjectsOutput {",
          "6416:  s.NextToken = &v",
          "6421: func (s *ListProjectsOutput) SetProjects(v []*string) *ListProjectsOutput {",
          "6422:  s.Projects = v",
          "6426: type ListReportGroupsInput struct {",
          "",
          "[Added Lines]",
          "7444: func (s *DescribeCodeCoveragesInput) SetMaxLineCoveragePercentage(v float64) *DescribeCodeCoveragesInput {",
          "7445:  s.MaxLineCoveragePercentage = &v",
          "7446:  return s",
          "7447: }",
          "7450: func (s *DescribeCodeCoveragesInput) SetMaxResults(v int64) *DescribeCodeCoveragesInput {",
          "7451:  s.MaxResults = &v",
          "7452:  return s",
          "7453: }",
          "7456: func (s *DescribeCodeCoveragesInput) SetMinLineCoveragePercentage(v float64) *DescribeCodeCoveragesInput {",
          "7457:  s.MinLineCoveragePercentage = &v",
          "7458:  return s",
          "7459: }",
          "7462: func (s *DescribeCodeCoveragesInput) SetNextToken(v string) *DescribeCodeCoveragesInput {",
          "7468: func (s *DescribeCodeCoveragesInput) SetReportArn(v string) *DescribeCodeCoveragesInput {",
          "7469:  s.ReportArn = &v",
          "7470:  return s",
          "7471: }",
          "7474: func (s *DescribeCodeCoveragesInput) SetSortBy(v string) *DescribeCodeCoveragesInput {",
          "7480: func (s *DescribeCodeCoveragesInput) SetSortOrder(v string) *DescribeCodeCoveragesInput {",
          "7485: type DescribeCodeCoveragesOutput struct {",
          "7489:  CodeCoverages []*CodeCoverage `locationName:\"codeCoverages\" type:\"list\"`",
          "7493:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "7497: func (s DescribeCodeCoveragesOutput) String() string {",
          "7502: func (s DescribeCodeCoveragesOutput) GoString() string {",
          "7507: func (s *DescribeCodeCoveragesOutput) SetCodeCoverages(v []*CodeCoverage) *DescribeCodeCoveragesOutput {",
          "7508:  s.CodeCoverages = v",
          "7513: func (s *DescribeCodeCoveragesOutput) SetNextToken(v string) *DescribeCodeCoveragesOutput {",
          "7514:  s.NextToken = &v",
          "7518: type DescribeTestCasesInput struct {",
          "7522:  Filter *TestCaseFilter `locationName:\"filter\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "6441:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6455: }",
          "6459:  return awsutil.Prettify(s)",
          "6460: }",
          "6464:  return s.String()",
          "6465: }",
          "6470:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "6471:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "6472:  }",
          "6474:  if invalidParams.Len() > 0 {",
          "6475:   return invalidParams",
          "",
          "[Removed Lines]",
          "6450:  SortBy *string `locationName:\"sortBy\" type:\"string\" enum:\"ReportGroupSortByType\"`",
          "6454:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "6458: func (s ListReportGroupsInput) String() string {",
          "6463: func (s ListReportGroupsInput) GoString() string {",
          "6468: func (s *ListReportGroupsInput) Validate() error {",
          "6469:  invalidParams := request.ErrInvalidParams{Context: \"ListReportGroupsInput\"}",
          "",
          "[Added Lines]",
          "7541:  ReportArn *string `locationName:\"reportArn\" type:\"string\" required:\"true\"`",
          "7545: func (s DescribeTestCasesInput) String() string {",
          "7550: func (s DescribeTestCasesInput) GoString() string {",
          "7555: func (s *DescribeTestCasesInput) Validate() error {",
          "7556:  invalidParams := request.ErrInvalidParams{Context: \"DescribeTestCasesInput\"}",
          "7560:  if s.ReportArn == nil {",
          "7561:   invalidParams.Add(request.NewErrParamRequired(\"ReportArn\"))",
          "7562:  }",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "6477:  return nil",
          "6478: }",
          "6482:  s.MaxResults = &v",
          "6483:  return s",
          "6484: }",
          "6488:  s.NextToken = &v",
          "6489:  return s",
          "6490: }",
          "6501:  return s",
          "6502: }",
          "6505:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "6481: func (s *ListReportGroupsInput) SetMaxResults(v int64) *ListReportGroupsInput {",
          "6487: func (s *ListReportGroupsInput) SetNextToken(v string) *ListReportGroupsInput {",
          "6493: func (s *ListReportGroupsInput) SetSortBy(v string) *ListReportGroupsInput {",
          "6494:  s.SortBy = &v",
          "6495:  return s",
          "6496: }",
          "6499: func (s *ListReportGroupsInput) SetSortOrder(v string) *ListReportGroupsInput {",
          "6500:  s.SortOrder = &v",
          "6504: type ListReportGroupsOutput struct {",
          "",
          "[Added Lines]",
          "7571: func (s *DescribeTestCasesInput) SetFilter(v *TestCaseFilter) *DescribeTestCasesInput {",
          "7572:  s.Filter = v",
          "7573:  return s",
          "7574: }",
          "7577: func (s *DescribeTestCasesInput) SetMaxResults(v int64) *DescribeTestCasesInput {",
          "7583: func (s *DescribeTestCasesInput) SetNextToken(v string) *DescribeTestCasesInput {",
          "7589: func (s *DescribeTestCasesInput) SetReportArn(v string) *DescribeTestCasesInput {",
          "7590:  s.ReportArn = &v",
          "7594: type DescribeTestCasesOutput struct {",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "6514:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6518: }",
          "6522:  return awsutil.Prettify(s)",
          "6523: }",
          "6527:  return s.String()",
          "6528: }",
          "6532:  s.NextToken = &v",
          "6533:  return s",
          "6534: }",
          "6539:  return s",
          "6540: }",
          "6543:  _ struct{} `type:\"structure\"`",
          "6570: }",
          "6574:  return awsutil.Prettify(s)",
          "6575: }",
          "6579:  return s.String()",
          "6580: }",
          "6613:  return s",
          "6614: }",
          "6619:  return s",
          "6620: }",
          "6625:  return s",
          "6626: }",
          "6629:  _ struct{} `type:\"structure\"`",
          "6642: }",
          "6646:  return awsutil.Prettify(s)",
          "6647: }",
          "6651:  return s.String()",
          "6652: }",
          "6657:  return s",
          "6658: }",
          "6663:  return s",
          "6664: }",
          "6667:  _ struct{} `type:\"structure\"`",
          "6694: }",
          "6698:  return awsutil.Prettify(s)",
          "6699: }",
          "6703:  return s.String()",
          "6704: }",
          "6722:  return s",
          "6723: }",
          "6778:  return s",
          "6779: }",
          "6782:  _ struct{} `type:\"structure\"`",
          "6813: }",
          "6817:  return awsutil.Prettify(s)",
          "6818: }",
          "6822:  return s.String()",
          "6823: }",
          "6830:  }",
          "6833:  }",
          "6835:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "6517:  ReportGroups []*string `locationName:\"reportGroups\" min:\"1\" type:\"list\"`",
          "6521: func (s ListReportGroupsOutput) String() string {",
          "6526: func (s ListReportGroupsOutput) GoString() string {",
          "6531: func (s *ListReportGroupsOutput) SetNextToken(v string) *ListReportGroupsOutput {",
          "6537: func (s *ListReportGroupsOutput) SetReportGroups(v []*string) *ListReportGroupsOutput {",
          "6538:  s.ReportGroups = v",
          "6542: type ListReportsForReportGroupInput struct {",
          "6546:  Filter *ReportFilter `locationName:\"filter\" type:\"structure\"`",
          "6551:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "6560:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6565:  ReportGroupArn *string `locationName:\"reportGroupArn\" type:\"string\" required:\"true\"`",
          "6569:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "6573: func (s ListReportsForReportGroupInput) String() string {",
          "6578: func (s ListReportsForReportGroupInput) GoString() string {",
          "6583: func (s *ListReportsForReportGroupInput) Validate() error {",
          "6584:  invalidParams := request.ErrInvalidParams{Context: \"ListReportsForReportGroupInput\"}",
          "6585:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "6586:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "6587:  }",
          "6588:  if s.ReportGroupArn == nil {",
          "6589:   invalidParams.Add(request.NewErrParamRequired(\"ReportGroupArn\"))",
          "6590:  }",
          "6592:  if invalidParams.Len() > 0 {",
          "6593:   return invalidParams",
          "6594:  }",
          "6595:  return nil",
          "6596: }",
          "6599: func (s *ListReportsForReportGroupInput) SetFilter(v *ReportFilter) *ListReportsForReportGroupInput {",
          "6600:  s.Filter = v",
          "6601:  return s",
          "6602: }",
          "6605: func (s *ListReportsForReportGroupInput) SetMaxResults(v int64) *ListReportsForReportGroupInput {",
          "6606:  s.MaxResults = &v",
          "6607:  return s",
          "6608: }",
          "6611: func (s *ListReportsForReportGroupInput) SetNextToken(v string) *ListReportsForReportGroupInput {",
          "6612:  s.NextToken = &v",
          "6617: func (s *ListReportsForReportGroupInput) SetReportGroupArn(v string) *ListReportsForReportGroupInput {",
          "6618:  s.ReportGroupArn = &v",
          "6623: func (s *ListReportsForReportGroupInput) SetSortOrder(v string) *ListReportsForReportGroupInput {",
          "6624:  s.SortOrder = &v",
          "6628: type ListReportsForReportGroupOutput struct {",
          "6638:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6641:  Reports []*string `locationName:\"reports\" min:\"1\" type:\"list\"`",
          "6645: func (s ListReportsForReportGroupOutput) String() string {",
          "6650: func (s ListReportsForReportGroupOutput) GoString() string {",
          "6655: func (s *ListReportsForReportGroupOutput) SetNextToken(v string) *ListReportsForReportGroupOutput {",
          "6656:  s.NextToken = &v",
          "6661: func (s *ListReportsForReportGroupOutput) SetReports(v []*string) *ListReportsForReportGroupOutput {",
          "6662:  s.Reports = v",
          "6666: type ListReportsInput struct {",
          "6670:  Filter *ReportFilter `locationName:\"filter\" type:\"structure\"`",
          "6675:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "6684:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6693:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "6697: func (s ListReportsInput) String() string {",
          "6702: func (s ListReportsInput) GoString() string {",
          "6707: func (s *ListReportsInput) Validate() error {",
          "6708:  invalidParams := request.ErrInvalidParams{Context: \"ListReportsInput\"}",
          "6709:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "6710:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "6711:  }",
          "6713:  if invalidParams.Len() > 0 {",
          "6714:   return invalidParams",
          "6715:  }",
          "6716:  return nil",
          "6717: }",
          "6720: func (s *ListReportsInput) SetFilter(v *ReportFilter) *ListReportsInput {",
          "6721:  s.Filter = v",
          "6726: func (s *ListReportsInput) SetMaxResults(v int64) *ListReportsInput {",
          "6727:  s.MaxResults = &v",
          "6728:  return s",
          "6729: }",
          "6732: func (s *ListReportsInput) SetNextToken(v string) *ListReportsInput {",
          "6733:  s.NextToken = &v",
          "6734:  return s",
          "6735: }",
          "6738: func (s *ListReportsInput) SetSortOrder(v string) *ListReportsInput {",
          "6739:  s.SortOrder = &v",
          "6740:  return s",
          "6741: }",
          "6743: type ListReportsOutput struct {",
          "6744:  _ struct{} `type:\"structure\"`",
          "6753:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6756:  Reports []*string `locationName:\"reports\" min:\"1\" type:\"list\"`",
          "6757: }",
          "6760: func (s ListReportsOutput) String() string {",
          "6761:  return awsutil.Prettify(s)",
          "6762: }",
          "6765: func (s ListReportsOutput) GoString() string {",
          "6766:  return s.String()",
          "6767: }",
          "6770: func (s *ListReportsOutput) SetNextToken(v string) *ListReportsOutput {",
          "6771:  s.NextToken = &v",
          "6772:  return s",
          "6773: }",
          "6776: func (s *ListReportsOutput) SetReports(v []*string) *ListReportsOutput {",
          "6777:  s.Reports = v",
          "6781: type ListSharedProjectsInput struct {",
          "6787:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "6796:  NextToken *string `locationName:\"nextToken\" min:\"1\" type:\"string\"`",
          "6805:  SortBy *string `locationName:\"sortBy\" type:\"string\" enum:\"SharedResourceSortByType\"`",
          "6812:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "6816: func (s ListSharedProjectsInput) String() string {",
          "6821: func (s ListSharedProjectsInput) GoString() string {",
          "6826: func (s *ListSharedProjectsInput) Validate() error {",
          "6827:  invalidParams := request.ErrInvalidParams{Context: \"ListSharedProjectsInput\"}",
          "6828:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "6829:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "6831:  if s.NextToken != nil && len(*s.NextToken) < 1 {",
          "6832:   invalidParams.Add(request.NewErrParamMinLen(\"NextToken\", 1))",
          "",
          "[Added Lines]",
          "7607:  TestCases []*TestCase `locationName:\"testCases\" type:\"list\"`",
          "7611: func (s DescribeTestCasesOutput) String() string {",
          "7616: func (s DescribeTestCasesOutput) GoString() string {",
          "7621: func (s *DescribeTestCasesOutput) SetNextToken(v string) *DescribeTestCasesOutput {",
          "7627: func (s *DescribeTestCasesOutput) SetTestCases(v []*TestCase) *DescribeTestCasesOutput {",
          "7628:  s.TestCases = v",
          "7633: type EnvironmentImage struct {",
          "7637:  Description *string `locationName:\"description\" type:\"string\"`",
          "7640:  Name *string `locationName:\"name\" type:\"string\"`",
          "7643:  Versions []*string `locationName:\"versions\" type:\"list\"`",
          "7647: func (s EnvironmentImage) String() string {",
          "7652: func (s EnvironmentImage) GoString() string {",
          "7657: func (s *EnvironmentImage) SetDescription(v string) *EnvironmentImage {",
          "7658:  s.Description = &v",
          "7663: func (s *EnvironmentImage) SetName(v string) *EnvironmentImage {",
          "7664:  s.Name = &v",
          "7669: func (s *EnvironmentImage) SetVersions(v []*string) *EnvironmentImage {",
          "7670:  s.Versions = v",
          "7676: type EnvironmentLanguage struct {",
          "7680:  Images []*EnvironmentImage `locationName:\"images\" type:\"list\"`",
          "7683:  Language *string `locationName:\"language\" type:\"string\" enum:\"LanguageType\"`",
          "7687: func (s EnvironmentLanguage) String() string {",
          "7692: func (s EnvironmentLanguage) GoString() string {",
          "7697: func (s *EnvironmentLanguage) SetImages(v []*EnvironmentImage) *EnvironmentLanguage {",
          "7698:  s.Images = v",
          "7703: func (s *EnvironmentLanguage) SetLanguage(v string) *EnvironmentLanguage {",
          "7704:  s.Language = &v",
          "7710: type EnvironmentPlatform struct {",
          "7714:  Languages []*EnvironmentLanguage `locationName:\"languages\" type:\"list\"`",
          "7717:  Platform *string `locationName:\"platform\" type:\"string\" enum:\"PlatformType\"`",
          "7721: func (s EnvironmentPlatform) String() string {",
          "7726: func (s EnvironmentPlatform) GoString() string {",
          "7731: func (s *EnvironmentPlatform) SetLanguages(v []*EnvironmentLanguage) *EnvironmentPlatform {",
          "7732:  s.Languages = v",
          "7737: func (s *EnvironmentPlatform) SetPlatform(v string) *EnvironmentPlatform {",
          "7738:  s.Platform = &v",
          "7743: type EnvironmentVariable struct {",
          "7749:  Name *string `locationName:\"name\" min:\"1\" type:\"string\" required:\"true\"`",
          "7763:  Type *string `locationName:\"type\" type:\"string\" enum:\"EnvironmentVariableType\"`",
          "7774:  Value *string `locationName:\"value\" type:\"string\" required:\"true\"`",
          "7778: func (s EnvironmentVariable) String() string {",
          "7783: func (s EnvironmentVariable) GoString() string {",
          "7788: func (s *EnvironmentVariable) Validate() error {",
          "7789:  invalidParams := request.ErrInvalidParams{Context: \"EnvironmentVariable\"}",
          "7790:  if s.Name == nil {",
          "7791:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "7793:  if s.Name != nil && len(*s.Name) < 1 {",
          "7794:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "7795:  }",
          "7796:  if s.Value == nil {",
          "7797:   invalidParams.Add(request.NewErrParamRequired(\"Value\"))",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "6838:  return nil",
          "6839: }",
          "6850:  return s",
          "6851: }",
          "6856:  return s",
          "6857: }",
          "6862:  return s",
          "6863: }",
          "6866:  _ struct{} `type:\"structure\"`",
          "6880: }",
          "6884:  return awsutil.Prettify(s)",
          "6885: }",
          "6889:  return s.String()",
          "6890: }",
          "6895:  return s",
          "6896: }",
          "6901:  return s",
          "6902: }",
          "6905:  _ struct{} `type:\"structure\"`",
          "6936: }",
          "6940:  return awsutil.Prettify(s)",
          "6941: }",
          "6945:  return s.String()",
          "6946: }",
          "6953:  }",
          "6955:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "6842: func (s *ListSharedProjectsInput) SetMaxResults(v int64) *ListSharedProjectsInput {",
          "6843:  s.MaxResults = &v",
          "6844:  return s",
          "6845: }",
          "6848: func (s *ListSharedProjectsInput) SetNextToken(v string) *ListSharedProjectsInput {",
          "6849:  s.NextToken = &v",
          "6854: func (s *ListSharedProjectsInput) SetSortBy(v string) *ListSharedProjectsInput {",
          "6855:  s.SortBy = &v",
          "6860: func (s *ListSharedProjectsInput) SetSortOrder(v string) *ListSharedProjectsInput {",
          "6861:  s.SortOrder = &v",
          "6865: type ListSharedProjectsOutput struct {",
          "6875:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6879:  Projects []*string `locationName:\"projects\" min:\"1\" type:\"list\"`",
          "6883: func (s ListSharedProjectsOutput) String() string {",
          "6888: func (s ListSharedProjectsOutput) GoString() string {",
          "6893: func (s *ListSharedProjectsOutput) SetNextToken(v string) *ListSharedProjectsOutput {",
          "6894:  s.NextToken = &v",
          "6899: func (s *ListSharedProjectsOutput) SetProjects(v []*string) *ListSharedProjectsOutput {",
          "6900:  s.Projects = v",
          "6904: type ListSharedReportGroupsInput struct {",
          "6910:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "6919:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6928:  SortBy *string `locationName:\"sortBy\" type:\"string\" enum:\"SharedResourceSortByType\"`",
          "6935:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "6939: func (s ListSharedReportGroupsInput) String() string {",
          "6944: func (s ListSharedReportGroupsInput) GoString() string {",
          "6949: func (s *ListSharedReportGroupsInput) Validate() error {",
          "6950:  invalidParams := request.ErrInvalidParams{Context: \"ListSharedReportGroupsInput\"}",
          "6951:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "6952:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "",
          "[Added Lines]",
          "7807: func (s *EnvironmentVariable) SetName(v string) *EnvironmentVariable {",
          "7808:  s.Name = &v",
          "7813: func (s *EnvironmentVariable) SetType(v string) *EnvironmentVariable {",
          "7814:  s.Type = &v",
          "7819: func (s *EnvironmentVariable) SetValue(v string) *EnvironmentVariable {",
          "7820:  s.Value = &v",
          "7825: type ExportedEnvironmentVariable struct {",
          "7829:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
          "7837:  Value *string `locationName:\"value\" type:\"string\"`",
          "7841: func (s ExportedEnvironmentVariable) String() string {",
          "7846: func (s ExportedEnvironmentVariable) GoString() string {",
          "7851: func (s *ExportedEnvironmentVariable) SetName(v string) *ExportedEnvironmentVariable {",
          "7852:  s.Name = &v",
          "7857: func (s *ExportedEnvironmentVariable) SetValue(v string) *ExportedEnvironmentVariable {",
          "7858:  s.Value = &v",
          "7862: type GetResourcePolicyInput struct {",
          "7868:  ResourceArn *string `locationName:\"resourceArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "7872: func (s GetResourcePolicyInput) String() string {",
          "7877: func (s GetResourcePolicyInput) GoString() string {",
          "7882: func (s *GetResourcePolicyInput) Validate() error {",
          "7883:  invalidParams := request.ErrInvalidParams{Context: \"GetResourcePolicyInput\"}",
          "7884:  if s.ResourceArn == nil {",
          "7885:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "7886:  }",
          "7887:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "7888:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "6958:  return nil",
          "6959: }",
          "6964:  return s",
          "6965: }",
          "6971: }",
          "7005: }",
          "7009:  return s.String()",
          "7010: }",
          "7021:  return s",
          "7022: }",
          "7025:  _ struct{} `type:\"structure\"`",
          "7026: }",
          "7030:  return awsutil.Prettify(s)",
          "7031: }",
          "7035:  return s.String()",
          "7036: }",
          "7055: }",
          "7060:  return s",
          "7061: }",
          "7066:  _ struct{} `type:\"structure\"`",
          "7075: }",
          "7079:  return awsutil.Prettify(s)",
          "7080: }",
          "7084:  return s.String()",
          "7085: }",
          "7094:  }",
          "7099:  }",
          "7101:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "6962: func (s *ListSharedReportGroupsInput) SetMaxResults(v int64) *ListSharedReportGroupsInput {",
          "6963:  s.MaxResults = &v",
          "6968: func (s *ListSharedReportGroupsInput) SetNextToken(v string) *ListSharedReportGroupsInput {",
          "6969:  s.NextToken = &v",
          "6970:  return s",
          "6974: func (s *ListSharedReportGroupsInput) SetSortBy(v string) *ListSharedReportGroupsInput {",
          "6975:  s.SortBy = &v",
          "6976:  return s",
          "6977: }",
          "6980: func (s *ListSharedReportGroupsInput) SetSortOrder(v string) *ListSharedReportGroupsInput {",
          "6981:  s.SortOrder = &v",
          "6982:  return s",
          "6983: }",
          "6985: type ListSharedReportGroupsOutput struct {",
          "6986:  _ struct{} `type:\"structure\"`",
          "6995:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "6999:  ReportGroups []*string `locationName:\"reportGroups\" min:\"1\" type:\"list\"`",
          "7000: }",
          "7003: func (s ListSharedReportGroupsOutput) String() string {",
          "7004:  return awsutil.Prettify(s)",
          "7008: func (s ListSharedReportGroupsOutput) GoString() string {",
          "7013: func (s *ListSharedReportGroupsOutput) SetNextToken(v string) *ListSharedReportGroupsOutput {",
          "7014:  s.NextToken = &v",
          "7015:  return s",
          "7016: }",
          "7019: func (s *ListSharedReportGroupsOutput) SetReportGroups(v []*string) *ListSharedReportGroupsOutput {",
          "7020:  s.ReportGroups = v",
          "7024: type ListSourceCredentialsInput struct {",
          "7029: func (s ListSourceCredentialsInput) String() string {",
          "7034: func (s ListSourceCredentialsInput) GoString() string {",
          "7038: type ListSourceCredentialsOutput struct {",
          "7039:  _ struct{} `type:\"structure\"`",
          "7044:  SourceCredentialsInfos []*SourceCredentialsInfo `locationName:\"sourceCredentialsInfos\" type:\"list\"`",
          "7045: }",
          "7048: func (s ListSourceCredentialsOutput) String() string {",
          "7049:  return awsutil.Prettify(s)",
          "7050: }",
          "7053: func (s ListSourceCredentialsOutput) GoString() string {",
          "7054:  return s.String()",
          "7058: func (s *ListSourceCredentialsOutput) SetSourceCredentialsInfos(v []*SourceCredentialsInfo) *ListSourceCredentialsOutput {",
          "7059:  s.SourceCredentialsInfos = v",
          "7065: type LogsConfig struct {",
          "7070:  CloudWatchLogs *CloudWatchLogsConfig `locationName:\"cloudWatchLogs\" type:\"structure\"`",
          "7074:  S3Logs *S3LogsConfig `locationName:\"s3Logs\" type:\"structure\"`",
          "7078: func (s LogsConfig) String() string {",
          "7083: func (s LogsConfig) GoString() string {",
          "7088: func (s *LogsConfig) Validate() error {",
          "7089:  invalidParams := request.ErrInvalidParams{Context: \"LogsConfig\"}",
          "7090:  if s.CloudWatchLogs != nil {",
          "7091:   if err := s.CloudWatchLogs.Validate(); err != nil {",
          "7092:    invalidParams.AddNested(\"CloudWatchLogs\", err.(request.ErrInvalidParams))",
          "7093:   }",
          "7095:  if s.S3Logs != nil {",
          "7096:   if err := s.S3Logs.Validate(); err != nil {",
          "7097:    invalidParams.AddNested(\"S3Logs\", err.(request.ErrInvalidParams))",
          "7098:   }",
          "",
          "[Added Lines]",
          "7898: func (s *GetResourcePolicyInput) SetResourceArn(v string) *GetResourcePolicyInput {",
          "7899:  s.ResourceArn = &v",
          "7903: type GetResourcePolicyOutput struct {",
          "7904:  _ struct{} `type:\"structure\"`",
          "7907:  Policy *string `locationName:\"policy\" min:\"1\" type:\"string\"`",
          "7911: func (s GetResourcePolicyOutput) String() string {",
          "7912:  return awsutil.Prettify(s)",
          "7916: func (s GetResourcePolicyOutput) GoString() string {",
          "7921: func (s *GetResourcePolicyOutput) SetPolicy(v string) *GetResourcePolicyOutput {",
          "7922:  s.Policy = &v",
          "7928: type GitSubmodulesConfig struct {",
          "7934:  FetchSubmodules *bool `locationName:\"fetchSubmodules\" type:\"boolean\" required:\"true\"`",
          "7938: func (s GitSubmodulesConfig) String() string {",
          "7943: func (s GitSubmodulesConfig) GoString() string {",
          "7948: func (s *GitSubmodulesConfig) Validate() error {",
          "7949:  invalidParams := request.ErrInvalidParams{Context: \"GitSubmodulesConfig\"}",
          "7950:  if s.FetchSubmodules == nil {",
          "7951:   invalidParams.Add(request.NewErrParamRequired(\"FetchSubmodules\"))",
          "7952:  }",
          "7954:  if invalidParams.Len() > 0 {",
          "7955:   return invalidParams",
          "7956:  }",
          "7957:  return nil",
          "7961: func (s *GitSubmodulesConfig) SetFetchSubmodules(v bool) *GitSubmodulesConfig {",
          "7962:  s.FetchSubmodules = &v",
          "7966: type ImportSourceCredentialsInput struct {",
          "7974:  AuthType *string `locationName:\"authType\" type:\"string\" required:\"true\" enum:\"AuthType\"`",
          "7979:  ServerType *string `locationName:\"serverType\" type:\"string\" required:\"true\" enum:\"ServerType\"`",
          "7984:  ShouldOverwrite *bool `locationName:\"shouldOverwrite\" type:\"boolean\"`",
          "7990:  Token *string `locationName:\"token\" min:\"1\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "7994:  Username *string `locationName:\"username\" min:\"1\" type:\"string\"`",
          "7998: func (s ImportSourceCredentialsInput) String() string {",
          "8003: func (s ImportSourceCredentialsInput) GoString() string {",
          "8008: func (s *ImportSourceCredentialsInput) Validate() error {",
          "8009:  invalidParams := request.ErrInvalidParams{Context: \"ImportSourceCredentialsInput\"}",
          "8010:  if s.AuthType == nil {",
          "8011:   invalidParams.Add(request.NewErrParamRequired(\"AuthType\"))",
          "8013:  if s.ServerType == nil {",
          "8014:   invalidParams.Add(request.NewErrParamRequired(\"ServerType\"))",
          "8015:  }",
          "8016:  if s.Token == nil {",
          "8017:   invalidParams.Add(request.NewErrParamRequired(\"Token\"))",
          "8018:  }",
          "8019:  if s.Token != nil && len(*s.Token) < 1 {",
          "8020:   invalidParams.Add(request.NewErrParamMinLen(\"Token\", 1))",
          "8021:  }",
          "8022:  if s.Username != nil && len(*s.Username) < 1 {",
          "8023:   invalidParams.Add(request.NewErrParamMinLen(\"Username\", 1))",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "7104:  return nil",
          "7105: }",
          "7110:  return s",
          "7111: }",
          "7116:  return s",
          "7117: }",
          "7148: }",
          "7152:  return awsutil.Prettify(s)",
          "7153: }",
          "7157:  return s.String()",
          "7158: }",
          "7163:  return s",
          "7164: }",
          "7170: }",
          "7176: }",
          "7182: }",
          "7188: }",
          "7194: }",
          "7200: }",
          "7206: }",
          "7217: }",
          "7221:  return awsutil.Prettify(s)",
          "7222: }",
          "7226:  return s.String()",
          "7227: }",
          "7233: }",
          "7238:  return s",
          "7239: }",
          "7247: }",
          "7251:  return awsutil.Prettify(s)",
          "7252: }",
          "7256:  return s.String()",
          "7257: }",
          "7263: }",
          "7268: }",
          "7276: }",
          "7280:  return nil",
          "7281: }",
          "7285: }",
          "7290: }",
          "7295: }",
          "7300:  _ struct{} `type:\"structure\"`",
          "7308: }",
          "7312:  return awsutil.Prettify(s)",
          "7313: }",
          "7317:  return s.String()",
          "7318: }",
          "7323:  return s",
          "7324: }",
          "7329:  return s",
          "7330: }",
          "7334:  _ struct{} `type:\"structure\"`",
          "7449: }",
          "7453:  return awsutil.Prettify(s)",
          "7454: }",
          "7458:  return s.String()",
          "7459: }",
          "7464:  return s",
          "7465: }",
          "7470:  return s",
          "7471: }",
          "7476:  return s",
          "7477: }",
          "7482:  return s",
          "7483: }",
          "7488:  return s",
          "7489: }",
          "7513: }",
          "7519: }",
          "7525: }",
          "7537: }",
          "7542:  return s",
          "7543: }",
          "7548:  return s",
          "7549: }",
          "7554:  return s",
          "7555: }",
          "7560:  return s",
          "7561: }",
          "7566:  return s",
          "7567: }",
          "7572:  return s",
          "7573: }",
          "7578:  return s",
          "7579: }",
          "7584:  return s",
          "7585: }",
          "7590:  return s",
          "7591: }",
          "7596:  return s",
          "7597: }",
          "7601:  _ struct{} `type:\"structure\"`",
          "7719: }",
          "7723:  return awsutil.Prettify(s)",
          "7724: }",
          "7728:  return s.String()",
          "7729: }",
          "7736:  }",
          "7738:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "7108: func (s *LogsConfig) SetCloudWatchLogs(v *CloudWatchLogsConfig) *LogsConfig {",
          "7109:  s.CloudWatchLogs = v",
          "7114: func (s *LogsConfig) SetS3Logs(v *S3LogsConfig) *LogsConfig {",
          "7115:  s.S3Logs = v",
          "7120: type LogsLocation struct {",
          "7121:  _ struct{} `type:\"structure\"`",
          "7124:  CloudWatchLogs *CloudWatchLogsConfig `locationName:\"cloudWatchLogs\" type:\"structure\"`",
          "7128:  CloudWatchLogsArn *string `locationName:\"cloudWatchLogsArn\" type:\"string\"`",
          "7131:  DeepLink *string `locationName:\"deepLink\" type:\"string\"`",
          "7134:  GroupName *string `locationName:\"groupName\" type:\"string\"`",
          "7137:  S3DeepLink *string `locationName:\"s3DeepLink\" type:\"string\"`",
          "7140:  S3Logs *S3LogsConfig `locationName:\"s3Logs\" type:\"structure\"`",
          "7144:  S3LogsArn *string `locationName:\"s3LogsArn\" type:\"string\"`",
          "7147:  StreamName *string `locationName:\"streamName\" type:\"string\"`",
          "7151: func (s LogsLocation) String() string {",
          "7156: func (s LogsLocation) GoString() string {",
          "7161: func (s *LogsLocation) SetCloudWatchLogs(v *CloudWatchLogsConfig) *LogsLocation {",
          "7162:  s.CloudWatchLogs = v",
          "7167: func (s *LogsLocation) SetCloudWatchLogsArn(v string) *LogsLocation {",
          "7168:  s.CloudWatchLogsArn = &v",
          "7169:  return s",
          "7173: func (s *LogsLocation) SetDeepLink(v string) *LogsLocation {",
          "7174:  s.DeepLink = &v",
          "7175:  return s",
          "7179: func (s *LogsLocation) SetGroupName(v string) *LogsLocation {",
          "7180:  s.GroupName = &v",
          "7181:  return s",
          "7185: func (s *LogsLocation) SetS3DeepLink(v string) *LogsLocation {",
          "7186:  s.S3DeepLink = &v",
          "7187:  return s",
          "7191: func (s *LogsLocation) SetS3Logs(v *S3LogsConfig) *LogsLocation {",
          "7192:  s.S3Logs = v",
          "7193:  return s",
          "7197: func (s *LogsLocation) SetS3LogsArn(v string) *LogsLocation {",
          "7198:  s.S3LogsArn = &v",
          "7199:  return s",
          "7203: func (s *LogsLocation) SetStreamName(v string) *LogsLocation {",
          "7204:  s.StreamName = &v",
          "7205:  return s",
          "7209: type NetworkInterface struct {",
          "7210:  _ struct{} `type:\"structure\"`",
          "7213:  NetworkInterfaceId *string `locationName:\"networkInterfaceId\" min:\"1\" type:\"string\"`",
          "7216:  SubnetId *string `locationName:\"subnetId\" min:\"1\" type:\"string\"`",
          "7220: func (s NetworkInterface) String() string {",
          "7225: func (s NetworkInterface) GoString() string {",
          "7230: func (s *NetworkInterface) SetNetworkInterfaceId(v string) *NetworkInterface {",
          "7231:  s.NetworkInterfaceId = &v",
          "7232:  return s",
          "7236: func (s *NetworkInterface) SetSubnetId(v string) *NetworkInterface {",
          "7237:  s.SubnetId = &v",
          "7242: type OAuthProviderException struct {",
          "7243:  _            struct{}                  `type:\"structure\"`",
          "7244:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "7246:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "7250: func (s OAuthProviderException) String() string {",
          "7255: func (s OAuthProviderException) GoString() string {",
          "7259: func newErrorOAuthProviderException(v protocol.ResponseMetadata) error {",
          "7260:  return &OAuthProviderException{",
          "7261:   RespMetadata: v,",
          "7262:  }",
          "7266: func (s *OAuthProviderException) Code() string {",
          "7267:  return \"OAuthProviderException\"",
          "7271: func (s *OAuthProviderException) Message() string {",
          "7272:  if s.Message_ != nil {",
          "7273:   return *s.Message_",
          "7274:  }",
          "7275:  return \"\"",
          "7279: func (s *OAuthProviderException) OrigErr() error {",
          "7283: func (s *OAuthProviderException) Error() string {",
          "7284:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "7288: func (s *OAuthProviderException) StatusCode() int {",
          "7289:  return s.RespMetadata.StatusCode",
          "7293: func (s *OAuthProviderException) RequestID() string {",
          "7294:  return s.RespMetadata.RequestID",
          "7299: type PhaseContext struct {",
          "7304:  Message *string `locationName:\"message\" type:\"string\"`",
          "7307:  StatusCode *string `locationName:\"statusCode\" type:\"string\"`",
          "7311: func (s PhaseContext) String() string {",
          "7316: func (s PhaseContext) GoString() string {",
          "7321: func (s *PhaseContext) SetMessage(v string) *PhaseContext {",
          "7322:  s.Message = &v",
          "7327: func (s *PhaseContext) SetStatusCode(v string) *PhaseContext {",
          "7328:  s.StatusCode = &v",
          "7333: type Project struct {",
          "7337:  Arn *string `locationName:\"arn\" type:\"string\"`",
          "7340:  Artifacts *ProjectArtifacts `locationName:\"artifacts\" type:\"structure\"`",
          "7343:  Badge *ProjectBadge `locationName:\"badge\" type:\"structure\"`",
          "7346:  Cache *ProjectCache `locationName:\"cache\" type:\"structure\"`",
          "7349:  Created *time.Time `locationName:\"created\" type:\"timestamp\"`",
          "7352:  Description *string `locationName:\"description\" type:\"string\"`",
          "7362:  EncryptionKey *string `locationName:\"encryptionKey\" min:\"1\" type:\"string\"`",
          "7365:  Environment *ProjectEnvironment `locationName:\"environment\" type:\"structure\"`",
          "7370:  FileSystemLocations []*ProjectFileSystemLocation `locationName:\"fileSystemLocations\" type:\"list\"`",
          "7374:  LastModified *time.Time `locationName:\"lastModified\" type:\"timestamp\"`",
          "7378:  LogsConfig *LogsConfig `locationName:\"logsConfig\" type:\"structure\"`",
          "7381:  Name *string `locationName:\"name\" min:\"2\" type:\"string\"`",
          "7384:  QueuedTimeoutInMinutes *int64 `locationName:\"queuedTimeoutInMinutes\" min:\"5\" type:\"integer\"`",
          "7387:  SecondaryArtifacts []*ProjectArtifacts `locationName:\"secondaryArtifacts\" type:\"list\"`",
          "7392:  SecondarySourceVersions []*ProjectSourceVersion `locationName:\"secondarySourceVersions\" type:\"list\"`",
          "7395:  SecondarySources []*ProjectSource `locationName:\"secondarySources\" type:\"list\"`",
          "7400:  ServiceRole *string `locationName:\"serviceRole\" min:\"1\" type:\"string\"`",
          "7403:  Source *ProjectSource `locationName:\"source\" type:\"structure\"`",
          "7430:  SourceVersion *string `locationName:\"sourceVersion\" type:\"string\"`",
          "7436:  Tags []*Tag `locationName:\"tags\" type:\"list\"`",
          "7441:  TimeoutInMinutes *int64 `locationName:\"timeoutInMinutes\" min:\"5\" type:\"integer\"`",
          "7444:  VpcConfig *VpcConfig `locationName:\"vpcConfig\" type:\"structure\"`",
          "7448:  Webhook *Webhook `locationName:\"webhook\" type:\"structure\"`",
          "7452: func (s Project) String() string {",
          "7457: func (s Project) GoString() string {",
          "7462: func (s *Project) SetArn(v string) *Project {",
          "7463:  s.Arn = &v",
          "7468: func (s *Project) SetArtifacts(v *ProjectArtifacts) *Project {",
          "7469:  s.Artifacts = v",
          "7474: func (s *Project) SetBadge(v *ProjectBadge) *Project {",
          "7475:  s.Badge = v",
          "7480: func (s *Project) SetCache(v *ProjectCache) *Project {",
          "7481:  s.Cache = v",
          "7486: func (s *Project) SetCreated(v time.Time) *Project {",
          "7487:  s.Created = &v",
          "7492: func (s *Project) SetDescription(v string) *Project {",
          "7493:  s.Description = &v",
          "7494:  return s",
          "7495: }",
          "7498: func (s *Project) SetEncryptionKey(v string) *Project {",
          "7499:  s.EncryptionKey = &v",
          "7500:  return s",
          "7501: }",
          "7504: func (s *Project) SetEnvironment(v *ProjectEnvironment) *Project {",
          "7505:  s.Environment = v",
          "7506:  return s",
          "7507: }",
          "7510: func (s *Project) SetFileSystemLocations(v []*ProjectFileSystemLocation) *Project {",
          "7511:  s.FileSystemLocations = v",
          "7512:  return s",
          "7516: func (s *Project) SetLastModified(v time.Time) *Project {",
          "7517:  s.LastModified = &v",
          "7518:  return s",
          "7522: func (s *Project) SetLogsConfig(v *LogsConfig) *Project {",
          "7523:  s.LogsConfig = v",
          "7524:  return s",
          "7528: func (s *Project) SetName(v string) *Project {",
          "7529:  s.Name = &v",
          "7530:  return s",
          "7531: }",
          "7534: func (s *Project) SetQueuedTimeoutInMinutes(v int64) *Project {",
          "7535:  s.QueuedTimeoutInMinutes = &v",
          "7536:  return s",
          "7540: func (s *Project) SetSecondaryArtifacts(v []*ProjectArtifacts) *Project {",
          "7541:  s.SecondaryArtifacts = v",
          "7546: func (s *Project) SetSecondarySourceVersions(v []*ProjectSourceVersion) *Project {",
          "7547:  s.SecondarySourceVersions = v",
          "7552: func (s *Project) SetSecondarySources(v []*ProjectSource) *Project {",
          "7553:  s.SecondarySources = v",
          "7558: func (s *Project) SetServiceRole(v string) *Project {",
          "7559:  s.ServiceRole = &v",
          "7564: func (s *Project) SetSource(v *ProjectSource) *Project {",
          "7565:  s.Source = v",
          "7570: func (s *Project) SetSourceVersion(v string) *Project {",
          "7571:  s.SourceVersion = &v",
          "7576: func (s *Project) SetTags(v []*Tag) *Project {",
          "7577:  s.Tags = v",
          "7582: func (s *Project) SetTimeoutInMinutes(v int64) *Project {",
          "7583:  s.TimeoutInMinutes = &v",
          "7588: func (s *Project) SetVpcConfig(v *VpcConfig) *Project {",
          "7589:  s.VpcConfig = v",
          "7594: func (s *Project) SetWebhook(v *Webhook) *Project {",
          "7595:  s.Webhook = v",
          "7600: type ProjectArtifacts struct {",
          "7604:  ArtifactIdentifier *string `locationName:\"artifactIdentifier\" type:\"string\"`",
          "7610:  EncryptionDisabled *bool `locationName:\"encryptionDisabled\" type:\"boolean\"`",
          "7622:  Location *string `locationName:\"location\" type:\"string\"`",
          "7648:  Name *string `locationName:\"name\" type:\"string\"`",
          "7666:  NamespaceType *string `locationName:\"namespaceType\" type:\"string\" enum:\"ArtifactNamespace\"`",
          "7672:  OverrideArtifactName *bool `locationName:\"overrideArtifactName\" type:\"boolean\"`",
          "7687:  Packaging *string `locationName:\"packaging\" type:\"string\" enum:\"ArtifactPackaging\"`",
          "7705:  Path *string `locationName:\"path\" type:\"string\"`",
          "7718:  Type *string `locationName:\"type\" type:\"string\" required:\"true\" enum:\"ArtifactsType\"`",
          "7722: func (s ProjectArtifacts) String() string {",
          "7727: func (s ProjectArtifacts) GoString() string {",
          "7732: func (s *ProjectArtifacts) Validate() error {",
          "7733:  invalidParams := request.ErrInvalidParams{Context: \"ProjectArtifacts\"}",
          "7734:  if s.Type == nil {",
          "7735:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "",
          "[Added Lines]",
          "8033: func (s *ImportSourceCredentialsInput) SetAuthType(v string) *ImportSourceCredentialsInput {",
          "8034:  s.AuthType = &v",
          "8039: func (s *ImportSourceCredentialsInput) SetServerType(v string) *ImportSourceCredentialsInput {",
          "8040:  s.ServerType = &v",
          "8045: func (s *ImportSourceCredentialsInput) SetShouldOverwrite(v bool) *ImportSourceCredentialsInput {",
          "8046:  s.ShouldOverwrite = &v",
          "8047:  return s",
          "8048: }",
          "8051: func (s *ImportSourceCredentialsInput) SetToken(v string) *ImportSourceCredentialsInput {",
          "8052:  s.Token = &v",
          "8053:  return s",
          "8054: }",
          "8057: func (s *ImportSourceCredentialsInput) SetUsername(v string) *ImportSourceCredentialsInput {",
          "8058:  s.Username = &v",
          "8059:  return s",
          "8060: }",
          "8062: type ImportSourceCredentialsOutput struct {",
          "8063:  _ struct{} `type:\"structure\"`",
          "8066:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "8070: func (s ImportSourceCredentialsOutput) String() string {",
          "8075: func (s ImportSourceCredentialsOutput) GoString() string {",
          "8080: func (s *ImportSourceCredentialsOutput) SetArn(v string) *ImportSourceCredentialsOutput {",
          "8081:  s.Arn = &v",
          "8086: type InvalidInputException struct {",
          "8087:  _            struct{}                  `type:\"structure\"`",
          "8088:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "8090:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "8094: func (s InvalidInputException) String() string {",
          "8095:  return awsutil.Prettify(s)",
          "8099: func (s InvalidInputException) GoString() string {",
          "8100:  return s.String()",
          "8103: func newErrorInvalidInputException(v protocol.ResponseMetadata) error {",
          "8104:  return &InvalidInputException{",
          "8105:   RespMetadata: v,",
          "8106:  }",
          "8110: func (s *InvalidInputException) Code() string {",
          "8111:  return \"InvalidInputException\"",
          "8115: func (s *InvalidInputException) Message() string {",
          "8116:  if s.Message_ != nil {",
          "8117:   return *s.Message_",
          "8118:  }",
          "8119:  return \"\"",
          "8123: func (s *InvalidInputException) OrigErr() error {",
          "8124:  return nil",
          "8127: func (s *InvalidInputException) Error() string {",
          "8128:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "8129: }",
          "8132: func (s *InvalidInputException) StatusCode() int {",
          "8133:  return s.RespMetadata.StatusCode",
          "8134: }",
          "8137: func (s *InvalidInputException) RequestID() string {",
          "8138:  return s.RespMetadata.RequestID",
          "8139: }",
          "8141: type InvalidateProjectCacheInput struct {",
          "8142:  _ struct{} `type:\"structure\"`",
          "8147:  ProjectName *string `locationName:\"projectName\" min:\"1\" type:\"string\" required:\"true\"`",
          "8151: func (s InvalidateProjectCacheInput) String() string {",
          "8156: func (s InvalidateProjectCacheInput) GoString() string {",
          "8161: func (s *InvalidateProjectCacheInput) Validate() error {",
          "8162:  invalidParams := request.ErrInvalidParams{Context: \"InvalidateProjectCacheInput\"}",
          "8163:  if s.ProjectName == nil {",
          "8164:   invalidParams.Add(request.NewErrParamRequired(\"ProjectName\"))",
          "8165:  }",
          "8166:  if s.ProjectName != nil && len(*s.ProjectName) < 1 {",
          "8167:   invalidParams.Add(request.NewErrParamMinLen(\"ProjectName\", 1))",
          "8168:  }",
          "8170:  if invalidParams.Len() > 0 {",
          "8171:   return invalidParams",
          "8172:  }",
          "8173:  return nil",
          "8177: func (s *InvalidateProjectCacheInput) SetProjectName(v string) *InvalidateProjectCacheInput {",
          "8178:  s.ProjectName = &v",
          "8182: type InvalidateProjectCacheOutput struct {",
          "8183:  _ struct{} `type:\"structure\"`",
          "8187: func (s InvalidateProjectCacheOutput) String() string {",
          "8192: func (s InvalidateProjectCacheOutput) GoString() string {",
          "8196: type ListBuildBatchesForProjectInput struct {",
          "8197:  _ struct{} `type:\"structure\"`",
          "8200:  Filter *BuildBatchFilter `locationName:\"filter\" type:\"structure\"`",
          "8203:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "8208:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "8211:  ProjectName *string `locationName:\"projectName\" min:\"1\" type:\"string\"`",
          "8219:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "8223: func (s ListBuildBatchesForProjectInput) String() string {",
          "8224:  return awsutil.Prettify(s)",
          "8228: func (s ListBuildBatchesForProjectInput) GoString() string {",
          "8229:  return s.String()",
          "8233: func (s *ListBuildBatchesForProjectInput) Validate() error {",
          "8234:  invalidParams := request.ErrInvalidParams{Context: \"ListBuildBatchesForProjectInput\"}",
          "8235:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "8236:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "8237:  }",
          "8238:  if s.ProjectName != nil && len(*s.ProjectName) < 1 {",
          "8239:   invalidParams.Add(request.NewErrParamMinLen(\"ProjectName\", 1))",
          "8240:  }",
          "8242:  if invalidParams.Len() > 0 {",
          "8243:   return invalidParams",
          "8244:  }",
          "8249: func (s *ListBuildBatchesForProjectInput) SetFilter(v *BuildBatchFilter) *ListBuildBatchesForProjectInput {",
          "8250:  s.Filter = v",
          "8251:  return s",
          "8255: func (s *ListBuildBatchesForProjectInput) SetMaxResults(v int64) *ListBuildBatchesForProjectInput {",
          "8256:  s.MaxResults = &v",
          "8257:  return s",
          "8261: func (s *ListBuildBatchesForProjectInput) SetNextToken(v string) *ListBuildBatchesForProjectInput {",
          "8262:  s.NextToken = &v",
          "8263:  return s",
          "8267: func (s *ListBuildBatchesForProjectInput) SetProjectName(v string) *ListBuildBatchesForProjectInput {",
          "8268:  s.ProjectName = &v",
          "8269:  return s",
          "8270: }",
          "8273: func (s *ListBuildBatchesForProjectInput) SetSortOrder(v string) *ListBuildBatchesForProjectInput {",
          "8274:  s.SortOrder = &v",
          "8275:  return s",
          "8276: }",
          "8278: type ListBuildBatchesForProjectOutput struct {",
          "8282:  Ids []*string `locationName:\"ids\" type:\"list\"`",
          "8287:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "8291: func (s ListBuildBatchesForProjectOutput) String() string {",
          "8296: func (s ListBuildBatchesForProjectOutput) GoString() string {",
          "8301: func (s *ListBuildBatchesForProjectOutput) SetIds(v []*string) *ListBuildBatchesForProjectOutput {",
          "8302:  s.Ids = v",
          "8307: func (s *ListBuildBatchesForProjectOutput) SetNextToken(v string) *ListBuildBatchesForProjectOutput {",
          "8308:  s.NextToken = &v",
          "8312: type ListBuildBatchesInput struct {",
          "8316:  Filter *BuildBatchFilter `locationName:\"filter\" type:\"structure\"`",
          "8319:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "8324:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "8332:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "8333: }",
          "8336: func (s ListBuildBatchesInput) String() string {",
          "8337:  return awsutil.Prettify(s)",
          "8338: }",
          "8341: func (s ListBuildBatchesInput) GoString() string {",
          "8342:  return s.String()",
          "8343: }",
          "8346: func (s *ListBuildBatchesInput) Validate() error {",
          "8347:  invalidParams := request.ErrInvalidParams{Context: \"ListBuildBatchesInput\"}",
          "8348:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "8349:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "8350:  }",
          "8352:  if invalidParams.Len() > 0 {",
          "8353:   return invalidParams",
          "8354:  }",
          "8355:  return nil",
          "8356: }",
          "8359: func (s *ListBuildBatchesInput) SetFilter(v *BuildBatchFilter) *ListBuildBatchesInput {",
          "8360:  s.Filter = v",
          "8361:  return s",
          "8362: }",
          "8365: func (s *ListBuildBatchesInput) SetMaxResults(v int64) *ListBuildBatchesInput {",
          "8366:  s.MaxResults = &v",
          "8367:  return s",
          "8368: }",
          "8371: func (s *ListBuildBatchesInput) SetNextToken(v string) *ListBuildBatchesInput {",
          "8372:  s.NextToken = &v",
          "8373:  return s",
          "8374: }",
          "8377: func (s *ListBuildBatchesInput) SetSortOrder(v string) *ListBuildBatchesInput {",
          "8378:  s.SortOrder = &v",
          "8379:  return s",
          "8380: }",
          "8382: type ListBuildBatchesOutput struct {",
          "8383:  _ struct{} `type:\"structure\"`",
          "8386:  Ids []*string `locationName:\"ids\" type:\"list\"`",
          "8390:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "8391: }",
          "8394: func (s ListBuildBatchesOutput) String() string {",
          "8395:  return awsutil.Prettify(s)",
          "8396: }",
          "8399: func (s ListBuildBatchesOutput) GoString() string {",
          "8400:  return s.String()",
          "8401: }",
          "8404: func (s *ListBuildBatchesOutput) SetIds(v []*string) *ListBuildBatchesOutput {",
          "8405:  s.Ids = v",
          "8406:  return s",
          "8407: }",
          "8410: func (s *ListBuildBatchesOutput) SetNextToken(v string) *ListBuildBatchesOutput {",
          "8411:  s.NextToken = &v",
          "8412:  return s",
          "8413: }",
          "8415: type ListBuildsForProjectInput struct {",
          "8416:  _ struct{} `type:\"structure\"`",
          "8424:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "8429:  ProjectName *string `locationName:\"projectName\" min:\"1\" type:\"string\" required:\"true\"`",
          "8436:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "8437: }",
          "8440: func (s ListBuildsForProjectInput) String() string {",
          "8441:  return awsutil.Prettify(s)",
          "8442: }",
          "8445: func (s ListBuildsForProjectInput) GoString() string {",
          "8446:  return s.String()",
          "8447: }",
          "8450: func (s *ListBuildsForProjectInput) Validate() error {",
          "8451:  invalidParams := request.ErrInvalidParams{Context: \"ListBuildsForProjectInput\"}",
          "8452:  if s.ProjectName == nil {",
          "8453:   invalidParams.Add(request.NewErrParamRequired(\"ProjectName\"))",
          "8454:  }",
          "8455:  if s.ProjectName != nil && len(*s.ProjectName) < 1 {",
          "8456:   invalidParams.Add(request.NewErrParamMinLen(\"ProjectName\", 1))",
          "8457:  }",
          "8459:  if invalidParams.Len() > 0 {",
          "8460:   return invalidParams",
          "8461:  }",
          "8462:  return nil",
          "8463: }",
          "8466: func (s *ListBuildsForProjectInput) SetNextToken(v string) *ListBuildsForProjectInput {",
          "8467:  s.NextToken = &v",
          "8468:  return s",
          "8469: }",
          "8472: func (s *ListBuildsForProjectInput) SetProjectName(v string) *ListBuildsForProjectInput {",
          "8473:  s.ProjectName = &v",
          "8474:  return s",
          "8475: }",
          "8478: func (s *ListBuildsForProjectInput) SetSortOrder(v string) *ListBuildsForProjectInput {",
          "8479:  s.SortOrder = &v",
          "8480:  return s",
          "8481: }",
          "8483: type ListBuildsForProjectOutput struct {",
          "8484:  _ struct{} `type:\"structure\"`",
          "8488:  Ids []*string `locationName:\"ids\" min:\"1\" type:\"list\"`",
          "8494:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "8495: }",
          "8498: func (s ListBuildsForProjectOutput) String() string {",
          "8499:  return awsutil.Prettify(s)",
          "8500: }",
          "8503: func (s ListBuildsForProjectOutput) GoString() string {",
          "8504:  return s.String()",
          "8505: }",
          "8508: func (s *ListBuildsForProjectOutput) SetIds(v []*string) *ListBuildsForProjectOutput {",
          "8509:  s.Ids = v",
          "8510:  return s",
          "8511: }",
          "8514: func (s *ListBuildsForProjectOutput) SetNextToken(v string) *ListBuildsForProjectOutput {",
          "8515:  s.NextToken = &v",
          "8516:  return s",
          "8517: }",
          "8519: type ListBuildsInput struct {",
          "8520:  _ struct{} `type:\"structure\"`",
          "8528:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "8535:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "8536: }",
          "8539: func (s ListBuildsInput) String() string {",
          "8540:  return awsutil.Prettify(s)",
          "8541: }",
          "8544: func (s ListBuildsInput) GoString() string {",
          "8545:  return s.String()",
          "8546: }",
          "8549: func (s *ListBuildsInput) SetNextToken(v string) *ListBuildsInput {",
          "8550:  s.NextToken = &v",
          "8551:  return s",
          "8552: }",
          "8555: func (s *ListBuildsInput) SetSortOrder(v string) *ListBuildsInput {",
          "8556:  s.SortOrder = &v",
          "8557:  return s",
          "8558: }",
          "8560: type ListBuildsOutput struct {",
          "8561:  _ struct{} `type:\"structure\"`",
          "8564:  Ids []*string `locationName:\"ids\" min:\"1\" type:\"list\"`",
          "8570:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "8571: }",
          "8574: func (s ListBuildsOutput) String() string {",
          "8575:  return awsutil.Prettify(s)",
          "8576: }",
          "8579: func (s ListBuildsOutput) GoString() string {",
          "8580:  return s.String()",
          "8581: }",
          "8584: func (s *ListBuildsOutput) SetIds(v []*string) *ListBuildsOutput {",
          "8585:  s.Ids = v",
          "8586:  return s",
          "8587: }",
          "8590: func (s *ListBuildsOutput) SetNextToken(v string) *ListBuildsOutput {",
          "8591:  s.NextToken = &v",
          "8592:  return s",
          "8593: }",
          "8595: type ListCuratedEnvironmentImagesInput struct {",
          "8596:  _ struct{} `type:\"structure\"`",
          "8597: }",
          "8600: func (s ListCuratedEnvironmentImagesInput) String() string {",
          "8601:  return awsutil.Prettify(s)",
          "8602: }",
          "8605: func (s ListCuratedEnvironmentImagesInput) GoString() string {",
          "8606:  return s.String()",
          "8607: }",
          "8609: type ListCuratedEnvironmentImagesOutput struct {",
          "8610:  _ struct{} `type:\"structure\"`",
          "8614:  Platforms []*EnvironmentPlatform `locationName:\"platforms\" type:\"list\"`",
          "8615: }",
          "8618: func (s ListCuratedEnvironmentImagesOutput) String() string {",
          "8619:  return awsutil.Prettify(s)",
          "8620: }",
          "8623: func (s ListCuratedEnvironmentImagesOutput) GoString() string {",
          "8624:  return s.String()",
          "8625: }",
          "8628: func (s *ListCuratedEnvironmentImagesOutput) SetPlatforms(v []*EnvironmentPlatform) *ListCuratedEnvironmentImagesOutput {",
          "8629:  s.Platforms = v",
          "8630:  return s",
          "8631: }",
          "8633: type ListProjectsInput struct {",
          "8634:  _ struct{} `type:\"structure\"`",
          "8642:  NextToken *string `locationName:\"nextToken\" min:\"1\" type:\"string\"`",
          "8655:  SortBy *string `locationName:\"sortBy\" type:\"string\" enum:\"ProjectSortByType\"`",
          "8664:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "8665: }",
          "8668: func (s ListProjectsInput) String() string {",
          "8669:  return awsutil.Prettify(s)",
          "8670: }",
          "8673: func (s ListProjectsInput) GoString() string {",
          "8674:  return s.String()",
          "8675: }",
          "8678: func (s *ListProjectsInput) Validate() error {",
          "8679:  invalidParams := request.ErrInvalidParams{Context: \"ListProjectsInput\"}",
          "8680:  if s.NextToken != nil && len(*s.NextToken) < 1 {",
          "8681:   invalidParams.Add(request.NewErrParamMinLen(\"NextToken\", 1))",
          "8682:  }",
          "8684:  if invalidParams.Len() > 0 {",
          "8685:   return invalidParams",
          "8686:  }",
          "8687:  return nil",
          "8688: }",
          "8691: func (s *ListProjectsInput) SetNextToken(v string) *ListProjectsInput {",
          "8692:  s.NextToken = &v",
          "8693:  return s",
          "8694: }",
          "8697: func (s *ListProjectsInput) SetSortBy(v string) *ListProjectsInput {",
          "8698:  s.SortBy = &v",
          "8699:  return s",
          "8700: }",
          "8703: func (s *ListProjectsInput) SetSortOrder(v string) *ListProjectsInput {",
          "8704:  s.SortOrder = &v",
          "8705:  return s",
          "8706: }",
          "8708: type ListProjectsOutput struct {",
          "8709:  _ struct{} `type:\"structure\"`",
          "8715:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "8719:  Projects []*string `locationName:\"projects\" min:\"1\" type:\"list\"`",
          "8720: }",
          "8723: func (s ListProjectsOutput) String() string {",
          "8724:  return awsutil.Prettify(s)",
          "8725: }",
          "8728: func (s ListProjectsOutput) GoString() string {",
          "8729:  return s.String()",
          "8730: }",
          "8733: func (s *ListProjectsOutput) SetNextToken(v string) *ListProjectsOutput {",
          "8734:  s.NextToken = &v",
          "8735:  return s",
          "8736: }",
          "8739: func (s *ListProjectsOutput) SetProjects(v []*string) *ListProjectsOutput {",
          "8740:  s.Projects = v",
          "8741:  return s",
          "8742: }",
          "8744: type ListReportGroupsInput struct {",
          "8745:  _ struct{} `type:\"structure\"`",
          "8750:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "8759:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "8768:  SortBy *string `locationName:\"sortBy\" type:\"string\" enum:\"ReportGroupSortByType\"`",
          "8772:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "8773: }",
          "8776: func (s ListReportGroupsInput) String() string {",
          "8777:  return awsutil.Prettify(s)",
          "8778: }",
          "8781: func (s ListReportGroupsInput) GoString() string {",
          "8782:  return s.String()",
          "8783: }",
          "8786: func (s *ListReportGroupsInput) Validate() error {",
          "8787:  invalidParams := request.ErrInvalidParams{Context: \"ListReportGroupsInput\"}",
          "8788:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "8789:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "8790:  }",
          "8792:  if invalidParams.Len() > 0 {",
          "8793:   return invalidParams",
          "8794:  }",
          "8795:  return nil",
          "8796: }",
          "8799: func (s *ListReportGroupsInput) SetMaxResults(v int64) *ListReportGroupsInput {",
          "8800:  s.MaxResults = &v",
          "8801:  return s",
          "8802: }",
          "8805: func (s *ListReportGroupsInput) SetNextToken(v string) *ListReportGroupsInput {",
          "8806:  s.NextToken = &v",
          "8807:  return s",
          "8808: }",
          "8811: func (s *ListReportGroupsInput) SetSortBy(v string) *ListReportGroupsInput {",
          "8812:  s.SortBy = &v",
          "8813:  return s",
          "8814: }",
          "8817: func (s *ListReportGroupsInput) SetSortOrder(v string) *ListReportGroupsInput {",
          "8818:  s.SortOrder = &v",
          "8819:  return s",
          "8820: }",
          "8822: type ListReportGroupsOutput struct {",
          "8823:  _ struct{} `type:\"structure\"`",
          "8832:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "8835:  ReportGroups []*string `locationName:\"reportGroups\" min:\"1\" type:\"list\"`",
          "8836: }",
          "8839: func (s ListReportGroupsOutput) String() string {",
          "8840:  return awsutil.Prettify(s)",
          "8841: }",
          "8844: func (s ListReportGroupsOutput) GoString() string {",
          "8845:  return s.String()",
          "8846: }",
          "8849: func (s *ListReportGroupsOutput) SetNextToken(v string) *ListReportGroupsOutput {",
          "8850:  s.NextToken = &v",
          "8851:  return s",
          "8852: }",
          "8855: func (s *ListReportGroupsOutput) SetReportGroups(v []*string) *ListReportGroupsOutput {",
          "8856:  s.ReportGroups = v",
          "8857:  return s",
          "8858: }",
          "8860: type ListReportsForReportGroupInput struct {",
          "8861:  _ struct{} `type:\"structure\"`",
          "8864:  Filter *ReportFilter `locationName:\"filter\" type:\"structure\"`",
          "8869:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "8878:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "8883:  ReportGroupArn *string `locationName:\"reportGroupArn\" type:\"string\" required:\"true\"`",
          "8887:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "8888: }",
          "8891: func (s ListReportsForReportGroupInput) String() string {",
          "8892:  return awsutil.Prettify(s)",
          "8893: }",
          "8896: func (s ListReportsForReportGroupInput) GoString() string {",
          "8897:  return s.String()",
          "8898: }",
          "8901: func (s *ListReportsForReportGroupInput) Validate() error {",
          "8902:  invalidParams := request.ErrInvalidParams{Context: \"ListReportsForReportGroupInput\"}",
          "8903:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "8904:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "8905:  }",
          "8906:  if s.ReportGroupArn == nil {",
          "8907:   invalidParams.Add(request.NewErrParamRequired(\"ReportGroupArn\"))",
          "8908:  }",
          "8910:  if invalidParams.Len() > 0 {",
          "8911:   return invalidParams",
          "8912:  }",
          "8913:  return nil",
          "8914: }",
          "8917: func (s *ListReportsForReportGroupInput) SetFilter(v *ReportFilter) *ListReportsForReportGroupInput {",
          "8918:  s.Filter = v",
          "8919:  return s",
          "8920: }",
          "8923: func (s *ListReportsForReportGroupInput) SetMaxResults(v int64) *ListReportsForReportGroupInput {",
          "8924:  s.MaxResults = &v",
          "8925:  return s",
          "8926: }",
          "8929: func (s *ListReportsForReportGroupInput) SetNextToken(v string) *ListReportsForReportGroupInput {",
          "8930:  s.NextToken = &v",
          "8931:  return s",
          "8932: }",
          "8935: func (s *ListReportsForReportGroupInput) SetReportGroupArn(v string) *ListReportsForReportGroupInput {",
          "8936:  s.ReportGroupArn = &v",
          "8937:  return s",
          "8938: }",
          "8941: func (s *ListReportsForReportGroupInput) SetSortOrder(v string) *ListReportsForReportGroupInput {",
          "8942:  s.SortOrder = &v",
          "8943:  return s",
          "8944: }",
          "8946: type ListReportsForReportGroupOutput struct {",
          "8947:  _ struct{} `type:\"structure\"`",
          "8956:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "8959:  Reports []*string `locationName:\"reports\" min:\"1\" type:\"list\"`",
          "8960: }",
          "8963: func (s ListReportsForReportGroupOutput) String() string {",
          "8964:  return awsutil.Prettify(s)",
          "8965: }",
          "8968: func (s ListReportsForReportGroupOutput) GoString() string {",
          "8969:  return s.String()",
          "8970: }",
          "8973: func (s *ListReportsForReportGroupOutput) SetNextToken(v string) *ListReportsForReportGroupOutput {",
          "8974:  s.NextToken = &v",
          "8975:  return s",
          "8976: }",
          "8979: func (s *ListReportsForReportGroupOutput) SetReports(v []*string) *ListReportsForReportGroupOutput {",
          "8980:  s.Reports = v",
          "8981:  return s",
          "8982: }",
          "8984: type ListReportsInput struct {",
          "8985:  _ struct{} `type:\"structure\"`",
          "8988:  Filter *ReportFilter `locationName:\"filter\" type:\"structure\"`",
          "8993:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "9002:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "9011:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "9012: }",
          "9015: func (s ListReportsInput) String() string {",
          "9016:  return awsutil.Prettify(s)",
          "9017: }",
          "9020: func (s ListReportsInput) GoString() string {",
          "9021:  return s.String()",
          "9022: }",
          "9025: func (s *ListReportsInput) Validate() error {",
          "9026:  invalidParams := request.ErrInvalidParams{Context: \"ListReportsInput\"}",
          "9027:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "9028:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "9029:  }",
          "9031:  if invalidParams.Len() > 0 {",
          "9032:   return invalidParams",
          "9033:  }",
          "9034:  return nil",
          "9035: }",
          "9038: func (s *ListReportsInput) SetFilter(v *ReportFilter) *ListReportsInput {",
          "9039:  s.Filter = v",
          "9040:  return s",
          "9041: }",
          "9044: func (s *ListReportsInput) SetMaxResults(v int64) *ListReportsInput {",
          "9045:  s.MaxResults = &v",
          "9046:  return s",
          "9047: }",
          "9050: func (s *ListReportsInput) SetNextToken(v string) *ListReportsInput {",
          "9051:  s.NextToken = &v",
          "9052:  return s",
          "9053: }",
          "9056: func (s *ListReportsInput) SetSortOrder(v string) *ListReportsInput {",
          "9057:  s.SortOrder = &v",
          "9058:  return s",
          "9059: }",
          "9061: type ListReportsOutput struct {",
          "9062:  _ struct{} `type:\"structure\"`",
          "9071:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "9074:  Reports []*string `locationName:\"reports\" min:\"1\" type:\"list\"`",
          "9075: }",
          "9078: func (s ListReportsOutput) String() string {",
          "9079:  return awsutil.Prettify(s)",
          "9080: }",
          "9083: func (s ListReportsOutput) GoString() string {",
          "9084:  return s.String()",
          "9085: }",
          "9088: func (s *ListReportsOutput) SetNextToken(v string) *ListReportsOutput {",
          "9089:  s.NextToken = &v",
          "9090:  return s",
          "9091: }",
          "9094: func (s *ListReportsOutput) SetReports(v []*string) *ListReportsOutput {",
          "9095:  s.Reports = v",
          "9096:  return s",
          "9097: }",
          "9099: type ListSharedProjectsInput struct {",
          "9100:  _ struct{} `type:\"structure\"`",
          "9105:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "9114:  NextToken *string `locationName:\"nextToken\" min:\"1\" type:\"string\"`",
          "9123:  SortBy *string `locationName:\"sortBy\" type:\"string\" enum:\"SharedResourceSortByType\"`",
          "9130:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "9131: }",
          "9134: func (s ListSharedProjectsInput) String() string {",
          "9135:  return awsutil.Prettify(s)",
          "9136: }",
          "9139: func (s ListSharedProjectsInput) GoString() string {",
          "9140:  return s.String()",
          "9141: }",
          "9144: func (s *ListSharedProjectsInput) Validate() error {",
          "9145:  invalidParams := request.ErrInvalidParams{Context: \"ListSharedProjectsInput\"}",
          "9146:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "9147:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "9148:  }",
          "9149:  if s.NextToken != nil && len(*s.NextToken) < 1 {",
          "9150:   invalidParams.Add(request.NewErrParamMinLen(\"NextToken\", 1))",
          "9151:  }",
          "9153:  if invalidParams.Len() > 0 {",
          "9154:   return invalidParams",
          "9155:  }",
          "9156:  return nil",
          "9157: }",
          "9160: func (s *ListSharedProjectsInput) SetMaxResults(v int64) *ListSharedProjectsInput {",
          "9161:  s.MaxResults = &v",
          "9162:  return s",
          "9163: }",
          "9166: func (s *ListSharedProjectsInput) SetNextToken(v string) *ListSharedProjectsInput {",
          "9167:  s.NextToken = &v",
          "9168:  return s",
          "9169: }",
          "9172: func (s *ListSharedProjectsInput) SetSortBy(v string) *ListSharedProjectsInput {",
          "9173:  s.SortBy = &v",
          "9174:  return s",
          "9175: }",
          "9178: func (s *ListSharedProjectsInput) SetSortOrder(v string) *ListSharedProjectsInput {",
          "9179:  s.SortOrder = &v",
          "9180:  return s",
          "9181: }",
          "9183: type ListSharedProjectsOutput struct {",
          "9184:  _ struct{} `type:\"structure\"`",
          "9193:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "9197:  Projects []*string `locationName:\"projects\" min:\"1\" type:\"list\"`",
          "9198: }",
          "9201: func (s ListSharedProjectsOutput) String() string {",
          "9202:  return awsutil.Prettify(s)",
          "9203: }",
          "9206: func (s ListSharedProjectsOutput) GoString() string {",
          "9207:  return s.String()",
          "9208: }",
          "9211: func (s *ListSharedProjectsOutput) SetNextToken(v string) *ListSharedProjectsOutput {",
          "9212:  s.NextToken = &v",
          "9213:  return s",
          "9214: }",
          "9217: func (s *ListSharedProjectsOutput) SetProjects(v []*string) *ListSharedProjectsOutput {",
          "9218:  s.Projects = v",
          "9219:  return s",
          "9220: }",
          "9222: type ListSharedReportGroupsInput struct {",
          "9223:  _ struct{} `type:\"structure\"`",
          "9228:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "9237:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "9246:  SortBy *string `locationName:\"sortBy\" type:\"string\" enum:\"SharedResourceSortByType\"`",
          "9253:  SortOrder *string `locationName:\"sortOrder\" type:\"string\" enum:\"SortOrderType\"`",
          "9254: }",
          "9257: func (s ListSharedReportGroupsInput) String() string {",
          "9258:  return awsutil.Prettify(s)",
          "9259: }",
          "9262: func (s ListSharedReportGroupsInput) GoString() string {",
          "9263:  return s.String()",
          "9264: }",
          "9267: func (s *ListSharedReportGroupsInput) Validate() error {",
          "9268:  invalidParams := request.ErrInvalidParams{Context: \"ListSharedReportGroupsInput\"}",
          "9269:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "9270:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "9271:  }",
          "9273:  if invalidParams.Len() > 0 {",
          "9274:   return invalidParams",
          "9275:  }",
          "9276:  return nil",
          "9277: }",
          "9280: func (s *ListSharedReportGroupsInput) SetMaxResults(v int64) *ListSharedReportGroupsInput {",
          "9281:  s.MaxResults = &v",
          "9282:  return s",
          "9283: }",
          "9286: func (s *ListSharedReportGroupsInput) SetNextToken(v string) *ListSharedReportGroupsInput {",
          "9287:  s.NextToken = &v",
          "9288:  return s",
          "9289: }",
          "9292: func (s *ListSharedReportGroupsInput) SetSortBy(v string) *ListSharedReportGroupsInput {",
          "9293:  s.SortBy = &v",
          "9294:  return s",
          "9295: }",
          "9298: func (s *ListSharedReportGroupsInput) SetSortOrder(v string) *ListSharedReportGroupsInput {",
          "9299:  s.SortOrder = &v",
          "9300:  return s",
          "9301: }",
          "9303: type ListSharedReportGroupsOutput struct {",
          "9304:  _ struct{} `type:\"structure\"`",
          "9313:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "9317:  ReportGroups []*string `locationName:\"reportGroups\" min:\"1\" type:\"list\"`",
          "9318: }",
          "9321: func (s ListSharedReportGroupsOutput) String() string {",
          "9322:  return awsutil.Prettify(s)",
          "9323: }",
          "9326: func (s ListSharedReportGroupsOutput) GoString() string {",
          "9327:  return s.String()",
          "9328: }",
          "9331: func (s *ListSharedReportGroupsOutput) SetNextToken(v string) *ListSharedReportGroupsOutput {",
          "9332:  s.NextToken = &v",
          "9333:  return s",
          "9334: }",
          "9337: func (s *ListSharedReportGroupsOutput) SetReportGroups(v []*string) *ListSharedReportGroupsOutput {",
          "9338:  s.ReportGroups = v",
          "9339:  return s",
          "9340: }",
          "9342: type ListSourceCredentialsInput struct {",
          "9343:  _ struct{} `type:\"structure\"`",
          "9344: }",
          "9347: func (s ListSourceCredentialsInput) String() string {",
          "9348:  return awsutil.Prettify(s)",
          "9349: }",
          "9352: func (s ListSourceCredentialsInput) GoString() string {",
          "9353:  return s.String()",
          "9354: }",
          "9356: type ListSourceCredentialsOutput struct {",
          "9357:  _ struct{} `type:\"structure\"`",
          "9362:  SourceCredentialsInfos []*SourceCredentialsInfo `locationName:\"sourceCredentialsInfos\" type:\"list\"`",
          "9363: }",
          "9366: func (s ListSourceCredentialsOutput) String() string {",
          "9367:  return awsutil.Prettify(s)",
          "9368: }",
          "9371: func (s ListSourceCredentialsOutput) GoString() string {",
          "9372:  return s.String()",
          "9373: }",
          "9376: func (s *ListSourceCredentialsOutput) SetSourceCredentialsInfos(v []*SourceCredentialsInfo) *ListSourceCredentialsOutput {",
          "9377:  s.SourceCredentialsInfos = v",
          "9378:  return s",
          "9379: }",
          "9383: type LogsConfig struct {",
          "9384:  _ struct{} `type:\"structure\"`",
          "9388:  CloudWatchLogs *CloudWatchLogsConfig `locationName:\"cloudWatchLogs\" type:\"structure\"`",
          "9392:  S3Logs *S3LogsConfig `locationName:\"s3Logs\" type:\"structure\"`",
          "9393: }",
          "9396: func (s LogsConfig) String() string {",
          "9397:  return awsutil.Prettify(s)",
          "9398: }",
          "9401: func (s LogsConfig) GoString() string {",
          "9402:  return s.String()",
          "9403: }",
          "9406: func (s *LogsConfig) Validate() error {",
          "9407:  invalidParams := request.ErrInvalidParams{Context: \"LogsConfig\"}",
          "9408:  if s.CloudWatchLogs != nil {",
          "9409:   if err := s.CloudWatchLogs.Validate(); err != nil {",
          "9410:    invalidParams.AddNested(\"CloudWatchLogs\", err.(request.ErrInvalidParams))",
          "9411:   }",
          "9412:  }",
          "9413:  if s.S3Logs != nil {",
          "9414:   if err := s.S3Logs.Validate(); err != nil {",
          "9415:    invalidParams.AddNested(\"S3Logs\", err.(request.ErrInvalidParams))",
          "9416:   }",
          "9417:  }",
          "9419:  if invalidParams.Len() > 0 {",
          "9420:   return invalidParams",
          "9421:  }",
          "9422:  return nil",
          "9423: }",
          "9426: func (s *LogsConfig) SetCloudWatchLogs(v *CloudWatchLogsConfig) *LogsConfig {",
          "9427:  s.CloudWatchLogs = v",
          "9428:  return s",
          "9429: }",
          "9432: func (s *LogsConfig) SetS3Logs(v *S3LogsConfig) *LogsConfig {",
          "9433:  s.S3Logs = v",
          "9434:  return s",
          "9435: }",
          "9438: type LogsLocation struct {",
          "9439:  _ struct{} `type:\"structure\"`",
          "9442:  CloudWatchLogs *CloudWatchLogsConfig `locationName:\"cloudWatchLogs\" type:\"structure\"`",
          "9446:  CloudWatchLogsArn *string `locationName:\"cloudWatchLogsArn\" type:\"string\"`",
          "9449:  DeepLink *string `locationName:\"deepLink\" type:\"string\"`",
          "9452:  GroupName *string `locationName:\"groupName\" type:\"string\"`",
          "9455:  S3DeepLink *string `locationName:\"s3DeepLink\" type:\"string\"`",
          "9458:  S3Logs *S3LogsConfig `locationName:\"s3Logs\" type:\"structure\"`",
          "9462:  S3LogsArn *string `locationName:\"s3LogsArn\" type:\"string\"`",
          "9465:  StreamName *string `locationName:\"streamName\" type:\"string\"`",
          "9466: }",
          "9469: func (s LogsLocation) String() string {",
          "9470:  return awsutil.Prettify(s)",
          "9471: }",
          "9474: func (s LogsLocation) GoString() string {",
          "9475:  return s.String()",
          "9476: }",
          "9479: func (s *LogsLocation) SetCloudWatchLogs(v *CloudWatchLogsConfig) *LogsLocation {",
          "9480:  s.CloudWatchLogs = v",
          "9481:  return s",
          "9482: }",
          "9485: func (s *LogsLocation) SetCloudWatchLogsArn(v string) *LogsLocation {",
          "9486:  s.CloudWatchLogsArn = &v",
          "9487:  return s",
          "9488: }",
          "9491: func (s *LogsLocation) SetDeepLink(v string) *LogsLocation {",
          "9492:  s.DeepLink = &v",
          "9493:  return s",
          "9494: }",
          "9497: func (s *LogsLocation) SetGroupName(v string) *LogsLocation {",
          "9498:  s.GroupName = &v",
          "9499:  return s",
          "9500: }",
          "9503: func (s *LogsLocation) SetS3DeepLink(v string) *LogsLocation {",
          "9504:  s.S3DeepLink = &v",
          "9505:  return s",
          "9506: }",
          "9509: func (s *LogsLocation) SetS3Logs(v *S3LogsConfig) *LogsLocation {",
          "9510:  s.S3Logs = v",
          "9511:  return s",
          "9512: }",
          "9515: func (s *LogsLocation) SetS3LogsArn(v string) *LogsLocation {",
          "9516:  s.S3LogsArn = &v",
          "9517:  return s",
          "9518: }",
          "9521: func (s *LogsLocation) SetStreamName(v string) *LogsLocation {",
          "9522:  s.StreamName = &v",
          "9523:  return s",
          "9524: }",
          "9527: type NetworkInterface struct {",
          "9528:  _ struct{} `type:\"structure\"`",
          "9531:  NetworkInterfaceId *string `locationName:\"networkInterfaceId\" min:\"1\" type:\"string\"`",
          "9534:  SubnetId *string `locationName:\"subnetId\" min:\"1\" type:\"string\"`",
          "9535: }",
          "9538: func (s NetworkInterface) String() string {",
          "9539:  return awsutil.Prettify(s)",
          "9540: }",
          "9543: func (s NetworkInterface) GoString() string {",
          "9544:  return s.String()",
          "9545: }",
          "9548: func (s *NetworkInterface) SetNetworkInterfaceId(v string) *NetworkInterface {",
          "9549:  s.NetworkInterfaceId = &v",
          "9550:  return s",
          "9551: }",
          "9554: func (s *NetworkInterface) SetSubnetId(v string) *NetworkInterface {",
          "9555:  s.SubnetId = &v",
          "9556:  return s",
          "9557: }",
          "9560: type OAuthProviderException struct {",
          "9561:  _            struct{}                  `type:\"structure\"`",
          "9562:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "9564:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "9565: }",
          "9568: func (s OAuthProviderException) String() string {",
          "9569:  return awsutil.Prettify(s)",
          "9570: }",
          "9573: func (s OAuthProviderException) GoString() string {",
          "9574:  return s.String()",
          "9575: }",
          "9577: func newErrorOAuthProviderException(v protocol.ResponseMetadata) error {",
          "9578:  return &OAuthProviderException{",
          "9579:   RespMetadata: v,",
          "9580:  }",
          "9581: }",
          "9584: func (s *OAuthProviderException) Code() string {",
          "9585:  return \"OAuthProviderException\"",
          "9586: }",
          "9589: func (s *OAuthProviderException) Message() string {",
          "9590:  if s.Message_ != nil {",
          "9591:   return *s.Message_",
          "9592:  }",
          "9593:  return \"\"",
          "9594: }",
          "9597: func (s *OAuthProviderException) OrigErr() error {",
          "9598:  return nil",
          "9599: }",
          "9601: func (s *OAuthProviderException) Error() string {",
          "9602:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "9603: }",
          "9606: func (s *OAuthProviderException) StatusCode() int {",
          "9607:  return s.RespMetadata.StatusCode",
          "9608: }",
          "9611: func (s *OAuthProviderException) RequestID() string {",
          "9612:  return s.RespMetadata.RequestID",
          "9613: }",
          "9617: type PhaseContext struct {",
          "9618:  _ struct{} `type:\"structure\"`",
          "9622:  Message *string `locationName:\"message\" type:\"string\"`",
          "9625:  StatusCode *string `locationName:\"statusCode\" type:\"string\"`",
          "9626: }",
          "9629: func (s PhaseContext) String() string {",
          "9630:  return awsutil.Prettify(s)",
          "9631: }",
          "9634: func (s PhaseContext) GoString() string {",
          "9635:  return s.String()",
          "9636: }",
          "9639: func (s *PhaseContext) SetMessage(v string) *PhaseContext {",
          "9640:  s.Message = &v",
          "9641:  return s",
          "9642: }",
          "9645: func (s *PhaseContext) SetStatusCode(v string) *PhaseContext {",
          "9646:  s.StatusCode = &v",
          "9647:  return s",
          "9648: }",
          "9651: type Project struct {",
          "9652:  _ struct{} `type:\"structure\"`",
          "9655:  Arn *string `locationName:\"arn\" type:\"string\"`",
          "9658:  Artifacts *ProjectArtifacts `locationName:\"artifacts\" type:\"structure\"`",
          "9661:  Badge *ProjectBadge `locationName:\"badge\" type:\"structure\"`",
          "9665:  BuildBatchConfig *ProjectBuildBatchConfig `locationName:\"buildBatchConfig\" type:\"structure\"`",
          "9668:  Cache *ProjectCache `locationName:\"cache\" type:\"structure\"`",
          "9671:  Created *time.Time `locationName:\"created\" type:\"timestamp\"`",
          "9674:  Description *string `locationName:\"description\" type:\"string\"`",
          "9684:  EncryptionKey *string `locationName:\"encryptionKey\" min:\"1\" type:\"string\"`",
          "9687:  Environment *ProjectEnvironment `locationName:\"environment\" type:\"structure\"`",
          "9692:  FileSystemLocations []*ProjectFileSystemLocation `locationName:\"fileSystemLocations\" type:\"list\"`",
          "9696:  LastModified *time.Time `locationName:\"lastModified\" type:\"timestamp\"`",
          "9700:  LogsConfig *LogsConfig `locationName:\"logsConfig\" type:\"structure\"`",
          "9703:  Name *string `locationName:\"name\" min:\"2\" type:\"string\"`",
          "9706:  QueuedTimeoutInMinutes *int64 `locationName:\"queuedTimeoutInMinutes\" min:\"5\" type:\"integer\"`",
          "9709:  SecondaryArtifacts []*ProjectArtifacts `locationName:\"secondaryArtifacts\" type:\"list\"`",
          "9714:  SecondarySourceVersions []*ProjectSourceVersion `locationName:\"secondarySourceVersions\" type:\"list\"`",
          "9717:  SecondarySources []*ProjectSource `locationName:\"secondarySources\" type:\"list\"`",
          "9722:  ServiceRole *string `locationName:\"serviceRole\" min:\"1\" type:\"string\"`",
          "9725:  Source *ProjectSource `locationName:\"source\" type:\"structure\"`",
          "9752:  SourceVersion *string `locationName:\"sourceVersion\" type:\"string\"`",
          "9758:  Tags []*Tag `locationName:\"tags\" type:\"list\"`",
          "9763:  TimeoutInMinutes *int64 `locationName:\"timeoutInMinutes\" min:\"5\" type:\"integer\"`",
          "9766:  VpcConfig *VpcConfig `locationName:\"vpcConfig\" type:\"structure\"`",
          "9770:  Webhook *Webhook `locationName:\"webhook\" type:\"structure\"`",
          "9771: }",
          "9774: func (s Project) String() string {",
          "9775:  return awsutil.Prettify(s)",
          "9776: }",
          "9779: func (s Project) GoString() string {",
          "9780:  return s.String()",
          "9781: }",
          "9784: func (s *Project) SetArn(v string) *Project {",
          "9785:  s.Arn = &v",
          "9786:  return s",
          "9787: }",
          "9790: func (s *Project) SetArtifacts(v *ProjectArtifacts) *Project {",
          "9791:  s.Artifacts = v",
          "9792:  return s",
          "9793: }",
          "9796: func (s *Project) SetBadge(v *ProjectBadge) *Project {",
          "9797:  s.Badge = v",
          "9798:  return s",
          "9799: }",
          "9802: func (s *Project) SetBuildBatchConfig(v *ProjectBuildBatchConfig) *Project {",
          "9803:  s.BuildBatchConfig = v",
          "9804:  return s",
          "9805: }",
          "9808: func (s *Project) SetCache(v *ProjectCache) *Project {",
          "9809:  s.Cache = v",
          "9810:  return s",
          "9811: }",
          "9814: func (s *Project) SetCreated(v time.Time) *Project {",
          "9815:  s.Created = &v",
          "9816:  return s",
          "9817: }",
          "9820: func (s *Project) SetDescription(v string) *Project {",
          "9821:  s.Description = &v",
          "9822:  return s",
          "9823: }",
          "9826: func (s *Project) SetEncryptionKey(v string) *Project {",
          "9827:  s.EncryptionKey = &v",
          "9828:  return s",
          "9829: }",
          "9832: func (s *Project) SetEnvironment(v *ProjectEnvironment) *Project {",
          "9833:  s.Environment = v",
          "9834:  return s",
          "9835: }",
          "9838: func (s *Project) SetFileSystemLocations(v []*ProjectFileSystemLocation) *Project {",
          "9839:  s.FileSystemLocations = v",
          "9840:  return s",
          "9841: }",
          "9844: func (s *Project) SetLastModified(v time.Time) *Project {",
          "9845:  s.LastModified = &v",
          "9846:  return s",
          "9847: }",
          "9850: func (s *Project) SetLogsConfig(v *LogsConfig) *Project {",
          "9851:  s.LogsConfig = v",
          "9852:  return s",
          "9853: }",
          "9856: func (s *Project) SetName(v string) *Project {",
          "9857:  s.Name = &v",
          "9858:  return s",
          "9859: }",
          "9862: func (s *Project) SetQueuedTimeoutInMinutes(v int64) *Project {",
          "9863:  s.QueuedTimeoutInMinutes = &v",
          "9864:  return s",
          "9865: }",
          "9868: func (s *Project) SetSecondaryArtifacts(v []*ProjectArtifacts) *Project {",
          "9869:  s.SecondaryArtifacts = v",
          "9870:  return s",
          "9871: }",
          "9874: func (s *Project) SetSecondarySourceVersions(v []*ProjectSourceVersion) *Project {",
          "9875:  s.SecondarySourceVersions = v",
          "9876:  return s",
          "9877: }",
          "9880: func (s *Project) SetSecondarySources(v []*ProjectSource) *Project {",
          "9881:  s.SecondarySources = v",
          "9882:  return s",
          "9883: }",
          "9886: func (s *Project) SetServiceRole(v string) *Project {",
          "9887:  s.ServiceRole = &v",
          "9888:  return s",
          "9889: }",
          "9892: func (s *Project) SetSource(v *ProjectSource) *Project {",
          "9893:  s.Source = v",
          "9894:  return s",
          "9895: }",
          "9898: func (s *Project) SetSourceVersion(v string) *Project {",
          "9899:  s.SourceVersion = &v",
          "9900:  return s",
          "9901: }",
          "9904: func (s *Project) SetTags(v []*Tag) *Project {",
          "9905:  s.Tags = v",
          "9906:  return s",
          "9907: }",
          "9910: func (s *Project) SetTimeoutInMinutes(v int64) *Project {",
          "9911:  s.TimeoutInMinutes = &v",
          "9912:  return s",
          "9913: }",
          "9916: func (s *Project) SetVpcConfig(v *VpcConfig) *Project {",
          "9917:  s.VpcConfig = v",
          "9918:  return s",
          "9919: }",
          "9922: func (s *Project) SetWebhook(v *Webhook) *Project {",
          "9923:  s.Webhook = v",
          "9924:  return s",
          "9925: }",
          "9928: type ProjectArtifacts struct {",
          "9929:  _ struct{} `type:\"structure\"`",
          "9932:  ArtifactIdentifier *string `locationName:\"artifactIdentifier\" type:\"string\"`",
          "9938:  EncryptionDisabled *bool `locationName:\"encryptionDisabled\" type:\"boolean\"`",
          "9950:  Location *string `locationName:\"location\" type:\"string\"`",
          "9976:  Name *string `locationName:\"name\" type:\"string\"`",
          "9994:  NamespaceType *string `locationName:\"namespaceType\" type:\"string\" enum:\"ArtifactNamespace\"`",
          "10000:  OverrideArtifactName *bool `locationName:\"overrideArtifactName\" type:\"boolean\"`",
          "10015:  Packaging *string `locationName:\"packaging\" type:\"string\" enum:\"ArtifactPackaging\"`",
          "10033:  Path *string `locationName:\"path\" type:\"string\"`",
          "10046:  Type *string `locationName:\"type\" type:\"string\" required:\"true\" enum:\"ArtifactsType\"`",
          "10047: }",
          "10050: func (s ProjectArtifacts) String() string {",
          "10051:  return awsutil.Prettify(s)",
          "10052: }",
          "10055: func (s ProjectArtifacts) GoString() string {",
          "10056:  return s.String()",
          "10057: }",
          "10060: func (s *ProjectArtifacts) Validate() error {",
          "10061:  invalidParams := request.ErrInvalidParams{Context: \"ProjectArtifacts\"}",
          "10062:  if s.Type == nil {",
          "10063:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "10064:  }",
          "10066:  if invalidParams.Len() > 0 {",
          "10067:   return invalidParams",
          "10068:  }",
          "10069:  return nil",
          "10070: }",
          "10073: func (s *ProjectArtifacts) SetArtifactIdentifier(v string) *ProjectArtifacts {",
          "10074:  s.ArtifactIdentifier = &v",
          "10075:  return s",
          "10076: }",
          "10079: func (s *ProjectArtifacts) SetEncryptionDisabled(v bool) *ProjectArtifacts {",
          "10080:  s.EncryptionDisabled = &v",
          "10081:  return s",
          "10082: }",
          "10085: func (s *ProjectArtifacts) SetLocation(v string) *ProjectArtifacts {",
          "10086:  s.Location = &v",
          "10087:  return s",
          "10088: }",
          "10091: func (s *ProjectArtifacts) SetName(v string) *ProjectArtifacts {",
          "10092:  s.Name = &v",
          "10093:  return s",
          "10094: }",
          "10097: func (s *ProjectArtifacts) SetNamespaceType(v string) *ProjectArtifacts {",
          "10098:  s.NamespaceType = &v",
          "10099:  return s",
          "10100: }",
          "10103: func (s *ProjectArtifacts) SetOverrideArtifactName(v bool) *ProjectArtifacts {",
          "10104:  s.OverrideArtifactName = &v",
          "10105:  return s",
          "10106: }",
          "10109: func (s *ProjectArtifacts) SetPackaging(v string) *ProjectArtifacts {",
          "10110:  s.Packaging = &v",
          "10111:  return s",
          "10112: }",
          "10115: func (s *ProjectArtifacts) SetPath(v string) *ProjectArtifacts {",
          "10116:  s.Path = &v",
          "10117:  return s",
          "10118: }",
          "10121: func (s *ProjectArtifacts) SetType(v string) *ProjectArtifacts {",
          "10122:  s.Type = &v",
          "10123:  return s",
          "10124: }",
          "10127: type ProjectBadge struct {",
          "10128:  _ struct{} `type:\"structure\"`",
          "10132:  BadgeEnabled *bool `locationName:\"badgeEnabled\" type:\"boolean\"`",
          "10139:  BadgeRequestUrl *string `locationName:\"badgeRequestUrl\" type:\"string\"`",
          "10140: }",
          "10143: func (s ProjectBadge) String() string {",
          "10144:  return awsutil.Prettify(s)",
          "10145: }",
          "10148: func (s ProjectBadge) GoString() string {",
          "10149:  return s.String()",
          "10150: }",
          "10153: func (s *ProjectBadge) SetBadgeEnabled(v bool) *ProjectBadge {",
          "10154:  s.BadgeEnabled = &v",
          "10155:  return s",
          "10156: }",
          "10159: func (s *ProjectBadge) SetBadgeRequestUrl(v string) *ProjectBadge {",
          "10160:  s.BadgeRequestUrl = &v",
          "10161:  return s",
          "10162: }",
          "10165: type ProjectBuildBatchConfig struct {",
          "10166:  _ struct{} `type:\"structure\"`",
          "10170:  CombineArtifacts *bool `locationName:\"combineArtifacts\" type:\"boolean\"`",
          "10174:  Restrictions *BatchRestrictions `locationName:\"restrictions\" type:\"structure\"`",
          "10177:  ServiceRole *string `locationName:\"serviceRole\" min:\"1\" type:\"string\"`",
          "10181:  TimeoutInMins *int64 `locationName:\"timeoutInMins\" type:\"integer\"`",
          "10182: }",
          "10185: func (s ProjectBuildBatchConfig) String() string {",
          "10186:  return awsutil.Prettify(s)",
          "10187: }",
          "10190: func (s ProjectBuildBatchConfig) GoString() string {",
          "10191:  return s.String()",
          "10192: }",
          "10195: func (s *ProjectBuildBatchConfig) Validate() error {",
          "10196:  invalidParams := request.ErrInvalidParams{Context: \"ProjectBuildBatchConfig\"}",
          "10197:  if s.ServiceRole != nil && len(*s.ServiceRole) < 1 {",
          "10198:   invalidParams.Add(request.NewErrParamMinLen(\"ServiceRole\", 1))",
          "10199:  }",
          "10201:  if invalidParams.Len() > 0 {",
          "10202:   return invalidParams",
          "10203:  }",
          "10204:  return nil",
          "10205: }",
          "10208: func (s *ProjectBuildBatchConfig) SetCombineArtifacts(v bool) *ProjectBuildBatchConfig {",
          "10209:  s.CombineArtifacts = &v",
          "10210:  return s",
          "10211: }",
          "10214: func (s *ProjectBuildBatchConfig) SetRestrictions(v *BatchRestrictions) *ProjectBuildBatchConfig {",
          "10215:  s.Restrictions = v",
          "10216:  return s",
          "10217: }",
          "10220: func (s *ProjectBuildBatchConfig) SetServiceRole(v string) *ProjectBuildBatchConfig {",
          "10221:  s.ServiceRole = &v",
          "10222:  return s",
          "10223: }",
          "10226: func (s *ProjectBuildBatchConfig) SetTimeoutInMins(v int64) *ProjectBuildBatchConfig {",
          "10227:  s.TimeoutInMins = &v",
          "10228:  return s",
          "10229: }",
          "10232: type ProjectCache struct {",
          "10233:  _ struct{} `type:\"structure\"`",
          "10240:  Location *string `locationName:\"location\" type:\"string\"`",
          "10268:  Modes []*string `locationName:\"modes\" type:\"list\"`",
          "10280:  Type *string `locationName:\"type\" type:\"string\" required:\"true\" enum:\"CacheType\"`",
          "10281: }",
          "10284: func (s ProjectCache) String() string {",
          "10285:  return awsutil.Prettify(s)",
          "10286: }",
          "10289: func (s ProjectCache) GoString() string {",
          "10290:  return s.String()",
          "10291: }",
          "10294: func (s *ProjectCache) Validate() error {",
          "10295:  invalidParams := request.ErrInvalidParams{Context: \"ProjectCache\"}",
          "10296:  if s.Type == nil {",
          "10297:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "10298:  }",
          "10300:  if invalidParams.Len() > 0 {",
          "10301:   return invalidParams",
          "10302:  }",
          "10303:  return nil",
          "10304: }",
          "10307: func (s *ProjectCache) SetLocation(v string) *ProjectCache {",
          "10308:  s.Location = &v",
          "10309:  return s",
          "10310: }",
          "10313: func (s *ProjectCache) SetModes(v []*string) *ProjectCache {",
          "10314:  s.Modes = v",
          "10315:  return s",
          "10316: }",
          "10319: func (s *ProjectCache) SetType(v string) *ProjectCache {",
          "10320:  s.Type = &v",
          "10321:  return s",
          "10322: }",
          "10325: type ProjectEnvironment struct {",
          "10326:  _ struct{} `type:\"structure\"`",
          "10329:  Certificate *string `locationName:\"certificate\" type:\"string\"`",
          "10360:  ComputeType *string `locationName:\"computeType\" type:\"string\" required:\"true\" enum:\"ComputeType\"`",
          "10364:  EnvironmentVariables []*EnvironmentVariable `locationName:\"environmentVariables\" type:\"list\"`",
          "10377:  Image *string `locationName:\"image\" min:\"1\" type:\"string\" required:\"true\"`",
          "10392:  ImagePullCredentialsType *string `locationName:\"imagePullCredentialsType\" type:\"string\" enum:\"ImagePullCredentialsType\"`",
          "10417:  PrivilegedMode *bool `locationName:\"privilegedMode\" type:\"boolean\"`",
          "10420:  RegistryCredential *RegistryCredential `locationName:\"registryCredential\" type:\"structure\"`",
          "10441:  Type *string `locationName:\"type\" type:\"string\" required:\"true\" enum:\"EnvironmentType\"`",
          "10442: }",
          "10445: func (s ProjectEnvironment) String() string {",
          "10446:  return awsutil.Prettify(s)",
          "10447: }",
          "10450: func (s ProjectEnvironment) GoString() string {",
          "10451:  return s.String()",
          "10452: }",
          "10455: func (s *ProjectEnvironment) Validate() error {",
          "10456:  invalidParams := request.ErrInvalidParams{Context: \"ProjectEnvironment\"}",
          "10457:  if s.ComputeType == nil {",
          "10458:   invalidParams.Add(request.NewErrParamRequired(\"ComputeType\"))",
          "10459:  }",
          "10460:  if s.Image == nil {",
          "10461:   invalidParams.Add(request.NewErrParamRequired(\"Image\"))",
          "10462:  }",
          "10463:  if s.Image != nil && len(*s.Image) < 1 {",
          "10464:   invalidParams.Add(request.NewErrParamMinLen(\"Image\", 1))",
          "10465:  }",
          "10466:  if s.Type == nil {",
          "10467:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "10468:  }",
          "10469:  if s.EnvironmentVariables != nil {",
          "10470:   for i, v := range s.EnvironmentVariables {",
          "10471:    if v == nil {",
          "10472:     continue",
          "10473:    }",
          "10474:    if err := v.Validate(); err != nil {",
          "10475:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"EnvironmentVariables\", i), err.(request.ErrInvalidParams))",
          "10476:    }",
          "10477:   }",
          "10478:  }",
          "10479:  if s.RegistryCredential != nil {",
          "10480:   if err := s.RegistryCredential.Validate(); err != nil {",
          "10481:    invalidParams.AddNested(\"RegistryCredential\", err.(request.ErrInvalidParams))",
          "10482:   }",
          "10483:  }",
          "10485:  if invalidParams.Len() > 0 {",
          "10486:   return invalidParams",
          "10487:  }",
          "10488:  return nil",
          "10489: }",
          "10492: func (s *ProjectEnvironment) SetCertificate(v string) *ProjectEnvironment {",
          "10493:  s.Certificate = &v",
          "10494:  return s",
          "10495: }",
          "10498: func (s *ProjectEnvironment) SetComputeType(v string) *ProjectEnvironment {",
          "10499:  s.ComputeType = &v",
          "10500:  return s",
          "10501: }",
          "10504: func (s *ProjectEnvironment) SetEnvironmentVariables(v []*EnvironmentVariable) *ProjectEnvironment {",
          "10505:  s.EnvironmentVariables = v",
          "10506:  return s",
          "10507: }",
          "10510: func (s *ProjectEnvironment) SetImage(v string) *ProjectEnvironment {",
          "10511:  s.Image = &v",
          "10512:  return s",
          "10513: }",
          "10516: func (s *ProjectEnvironment) SetImagePullCredentialsType(v string) *ProjectEnvironment {",
          "10517:  s.ImagePullCredentialsType = &v",
          "10518:  return s",
          "10519: }",
          "10522: func (s *ProjectEnvironment) SetPrivilegedMode(v bool) *ProjectEnvironment {",
          "10523:  s.PrivilegedMode = &v",
          "10524:  return s",
          "10525: }",
          "10528: func (s *ProjectEnvironment) SetRegistryCredential(v *RegistryCredential) *ProjectEnvironment {",
          "10529:  s.RegistryCredential = v",
          "10530:  return s",
          "10531: }",
          "10534: func (s *ProjectEnvironment) SetType(v string) *ProjectEnvironment {",
          "10535:  s.Type = &v",
          "10536:  return s",
          "10537: }",
          "10541: type ProjectFileSystemLocation struct {",
          "10542:  _ struct{} `type:\"structure\"`",
          "10550:  Identifier *string `locationName:\"identifier\" type:\"string\"`",
          "10562:  Location *string `locationName:\"location\" type:\"string\"`",
          "10567:  MountOptions *string `locationName:\"mountOptions\" type:\"string\"`",
          "10570:  MountPoint *string `locationName:\"mountPoint\" type:\"string\"`",
          "10573:  Type *string `locationName:\"type\" type:\"string\" enum:\"FileSystemType\"`",
          "10577: func (s ProjectFileSystemLocation) String() string {",
          "10582: func (s ProjectFileSystemLocation) GoString() string {",
          "10587: func (s *ProjectFileSystemLocation) SetIdentifier(v string) *ProjectFileSystemLocation {",
          "10588:  s.Identifier = &v",
          "10593: func (s *ProjectFileSystemLocation) SetLocation(v string) *ProjectFileSystemLocation {",
          "10594:  s.Location = &v",
          "10599: func (s *ProjectFileSystemLocation) SetMountOptions(v string) *ProjectFileSystemLocation {",
          "10600:  s.MountOptions = &v",
          "10605: func (s *ProjectFileSystemLocation) SetMountPoint(v string) *ProjectFileSystemLocation {",
          "10606:  s.MountPoint = &v",
          "10611: func (s *ProjectFileSystemLocation) SetType(v string) *ProjectFileSystemLocation {",
          "10612:  s.Type = &v",
          "10617: type ProjectSource struct {",
          "10618:  _ struct{} `type:\"structure\"`",
          "10625:  Auth *SourceAuth `locationName:\"auth\" type:\"structure\"`",
          "10630:  BuildStatusConfig *BuildStatusConfig `locationName:\"buildStatusConfig\" type:\"structure\"`",
          "10642:  Buildspec *string `locationName:\"buildspec\" type:\"string\"`",
          "10645:  GitCloneDepth *int64 `locationName:\"gitCloneDepth\" type:\"integer\"`",
          "10648:  GitSubmodulesConfig *GitSubmodulesConfig `locationName:\"gitSubmodulesConfig\" type:\"structure\"`",
          "10652:  InsecureSsl *bool `locationName:\"insecureSsl\" type:\"boolean\"`",
          "10694:  Location *string `locationName:\"location\" type:\"string\"`",
          "10703:  ReportBuildStatus *bool `locationName:\"reportBuildStatus\" type:\"boolean\"`",
          "10706:  SourceIdentifier *string `locationName:\"sourceIdentifier\" type:\"string\"`",
          "10729:  Type *string `locationName:\"type\" type:\"string\" required:\"true\" enum:\"SourceType\"`",
          "10733: func (s ProjectSource) String() string {",
          "10734:  return awsutil.Prettify(s)",
          "10738: func (s ProjectSource) GoString() string {",
          "10739:  return s.String()",
          "10743: func (s *ProjectSource) Validate() error {",
          "10744:  invalidParams := request.ErrInvalidParams{Context: \"ProjectSource\"}",
          "10745:  if s.Type == nil {",
          "10746:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "10747:  }",
          "10748:  if s.Auth != nil {",
          "10749:   if err := s.Auth.Validate(); err != nil {",
          "10750:    invalidParams.AddNested(\"Auth\", err.(request.ErrInvalidParams))",
          "10751:   }",
          "10752:  }",
          "10753:  if s.GitSubmodulesConfig != nil {",
          "10754:   if err := s.GitSubmodulesConfig.Validate(); err != nil {",
          "10755:    invalidParams.AddNested(\"GitSubmodulesConfig\", err.(request.ErrInvalidParams))",
          "10756:   }",
          "10757:  }",
          "10759:  if invalidParams.Len() > 0 {",
          "10760:   return invalidParams",
          "10761:  }",
          "10762:  return nil",
          "10766: func (s *ProjectSource) SetAuth(v *SourceAuth) *ProjectSource {",
          "10767:  s.Auth = v",
          "10772: func (s *ProjectSource) SetBuildStatusConfig(v *BuildStatusConfig) *ProjectSource {",
          "10773:  s.BuildStatusConfig = v",
          "10778: func (s *ProjectSource) SetBuildspec(v string) *ProjectSource {",
          "10779:  s.Buildspec = &v",
          "10784: func (s *ProjectSource) SetGitCloneDepth(v int64) *ProjectSource {",
          "10785:  s.GitCloneDepth = &v",
          "10790: func (s *ProjectSource) SetGitSubmodulesConfig(v *GitSubmodulesConfig) *ProjectSource {",
          "10791:  s.GitSubmodulesConfig = v",
          "10796: func (s *ProjectSource) SetInsecureSsl(v bool) *ProjectSource {",
          "10797:  s.InsecureSsl = &v",
          "10802: func (s *ProjectSource) SetLocation(v string) *ProjectSource {",
          "10803:  s.Location = &v",
          "10808: func (s *ProjectSource) SetReportBuildStatus(v bool) *ProjectSource {",
          "10809:  s.ReportBuildStatus = &v",
          "10814: func (s *ProjectSource) SetSourceIdentifier(v string) *ProjectSource {",
          "10815:  s.SourceIdentifier = &v",
          "10820: func (s *ProjectSource) SetType(v string) *ProjectSource {",
          "10821:  s.Type = &v",
          "10826: type ProjectSourceVersion struct {",
          "10832:  SourceIdentifier *string `locationName:\"sourceIdentifier\" type:\"string\" required:\"true\"`",
          "10858:  SourceVersion *string `locationName:\"sourceVersion\" type:\"string\" required:\"true\"`",
          "10862: func (s ProjectSourceVersion) String() string {",
          "10867: func (s ProjectSourceVersion) GoString() string {",
          "10872: func (s *ProjectSourceVersion) Validate() error {",
          "10873:  invalidParams := request.ErrInvalidParams{Context: \"ProjectSourceVersion\"}",
          "10874:  if s.SourceIdentifier == nil {",
          "10875:   invalidParams.Add(request.NewErrParamRequired(\"SourceIdentifier\"))",
          "10876:  }",
          "10877:  if s.SourceVersion == nil {",
          "10878:   invalidParams.Add(request.NewErrParamRequired(\"SourceVersion\"))",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "7741:  return nil",
          "7742: }",
          "7747:  return s",
          "7748: }",
          "7753:  return s",
          "7754: }",
          "7760: }",
          "7766: }",
          "7772: }",
          "7778: }",
          "7783:  return s",
          "7784: }",
          "7789:  return s",
          "7790: }",
          "7795:  return s",
          "7796: }",
          "7800:  _ struct{} `type:\"structure\"`",
          "7812: }",
          "7816:  return awsutil.Prettify(s)",
          "7817: }",
          "7821:  return s.String()",
          "7822: }",
          "7827:  return s",
          "7828: }",
          "7833:  return s",
          "7834: }",
          "7838:  _ struct{} `type:\"structure\"`",
          "7886: }",
          "7890:  return awsutil.Prettify(s)",
          "7891: }",
          "7895:  return s.String()",
          "7896: }",
          "7909: }",
          "7914:  return s",
          "7915: }",
          "7920:  return s",
          "7921: }",
          "7926:  return s",
          "7927: }",
          "8087:   }",
          "8088:  }",
          "",
          "[Removed Lines]",
          "7745: func (s *ProjectArtifacts) SetArtifactIdentifier(v string) *ProjectArtifacts {",
          "7746:  s.ArtifactIdentifier = &v",
          "7751: func (s *ProjectArtifacts) SetEncryptionDisabled(v bool) *ProjectArtifacts {",
          "7752:  s.EncryptionDisabled = &v",
          "7757: func (s *ProjectArtifacts) SetLocation(v string) *ProjectArtifacts {",
          "7758:  s.Location = &v",
          "7759:  return s",
          "7763: func (s *ProjectArtifacts) SetName(v string) *ProjectArtifacts {",
          "7764:  s.Name = &v",
          "7765:  return s",
          "7769: func (s *ProjectArtifacts) SetNamespaceType(v string) *ProjectArtifacts {",
          "7770:  s.NamespaceType = &v",
          "7771:  return s",
          "7775: func (s *ProjectArtifacts) SetOverrideArtifactName(v bool) *ProjectArtifacts {",
          "7776:  s.OverrideArtifactName = &v",
          "7777:  return s",
          "7781: func (s *ProjectArtifacts) SetPackaging(v string) *ProjectArtifacts {",
          "7782:  s.Packaging = &v",
          "7787: func (s *ProjectArtifacts) SetPath(v string) *ProjectArtifacts {",
          "7788:  s.Path = &v",
          "7793: func (s *ProjectArtifacts) SetType(v string) *ProjectArtifacts {",
          "7794:  s.Type = &v",
          "7799: type ProjectBadge struct {",
          "7804:  BadgeEnabled *bool `locationName:\"badgeEnabled\" type:\"boolean\"`",
          "7811:  BadgeRequestUrl *string `locationName:\"badgeRequestUrl\" type:\"string\"`",
          "7815: func (s ProjectBadge) String() string {",
          "7820: func (s ProjectBadge) GoString() string {",
          "7825: func (s *ProjectBadge) SetBadgeEnabled(v bool) *ProjectBadge {",
          "7826:  s.BadgeEnabled = &v",
          "7831: func (s *ProjectBadge) SetBadgeRequestUrl(v string) *ProjectBadge {",
          "7832:  s.BadgeRequestUrl = &v",
          "7837: type ProjectCache struct {",
          "7845:  Location *string `locationName:\"location\" type:\"string\"`",
          "7873:  Modes []*string `locationName:\"modes\" type:\"list\"`",
          "7885:  Type *string `locationName:\"type\" type:\"string\" required:\"true\" enum:\"CacheType\"`",
          "7889: func (s ProjectCache) String() string {",
          "7894: func (s ProjectCache) GoString() string {",
          "7899: func (s *ProjectCache) Validate() error {",
          "7900:  invalidParams := request.ErrInvalidParams{Context: \"ProjectCache\"}",
          "7901:  if s.Type == nil {",
          "7902:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "7903:  }",
          "7905:  if invalidParams.Len() > 0 {",
          "7906:   return invalidParams",
          "7907:  }",
          "7908:  return nil",
          "7912: func (s *ProjectCache) SetLocation(v string) *ProjectCache {",
          "7913:  s.Location = &v",
          "7918: func (s *ProjectCache) SetModes(v []*string) *ProjectCache {",
          "7919:  s.Modes = v",
          "7924: func (s *ProjectCache) SetType(v string) *ProjectCache {",
          "7925:  s.Type = &v",
          "7930: type ProjectEnvironment struct {",
          "7931:  _ struct{} `type:\"structure\"`",
          "7934:  Certificate *string `locationName:\"certificate\" type:\"string\"`",
          "7965:  ComputeType *string `locationName:\"computeType\" type:\"string\" required:\"true\" enum:\"ComputeType\"`",
          "7969:  EnvironmentVariables []*EnvironmentVariable `locationName:\"environmentVariables\" type:\"list\"`",
          "7982:  Image *string `locationName:\"image\" min:\"1\" type:\"string\" required:\"true\"`",
          "7997:  ImagePullCredentialsType *string `locationName:\"imagePullCredentialsType\" type:\"string\" enum:\"ImagePullCredentialsType\"`",
          "8022:  PrivilegedMode *bool `locationName:\"privilegedMode\" type:\"boolean\"`",
          "8025:  RegistryCredential *RegistryCredential `locationName:\"registryCredential\" type:\"structure\"`",
          "8046:  Type *string `locationName:\"type\" type:\"string\" required:\"true\" enum:\"EnvironmentType\"`",
          "8047: }",
          "8050: func (s ProjectEnvironment) String() string {",
          "8051:  return awsutil.Prettify(s)",
          "8052: }",
          "8055: func (s ProjectEnvironment) GoString() string {",
          "8056:  return s.String()",
          "8057: }",
          "8060: func (s *ProjectEnvironment) Validate() error {",
          "8061:  invalidParams := request.ErrInvalidParams{Context: \"ProjectEnvironment\"}",
          "8062:  if s.ComputeType == nil {",
          "8063:   invalidParams.Add(request.NewErrParamRequired(\"ComputeType\"))",
          "8064:  }",
          "8065:  if s.Image == nil {",
          "8066:   invalidParams.Add(request.NewErrParamRequired(\"Image\"))",
          "8067:  }",
          "8068:  if s.Image != nil && len(*s.Image) < 1 {",
          "8069:   invalidParams.Add(request.NewErrParamMinLen(\"Image\", 1))",
          "8070:  }",
          "8071:  if s.Type == nil {",
          "8072:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "8073:  }",
          "8074:  if s.EnvironmentVariables != nil {",
          "8075:   for i, v := range s.EnvironmentVariables {",
          "8076:    if v == nil {",
          "8077:     continue",
          "8078:    }",
          "8079:    if err := v.Validate(); err != nil {",
          "8080:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"EnvironmentVariables\", i), err.(request.ErrInvalidParams))",
          "8081:    }",
          "8082:   }",
          "8083:  }",
          "8084:  if s.RegistryCredential != nil {",
          "8085:   if err := s.RegistryCredential.Validate(); err != nil {",
          "8086:    invalidParams.AddNested(\"RegistryCredential\", err.(request.ErrInvalidParams))",
          "",
          "[Added Lines]",
          "10888: func (s *ProjectSourceVersion) SetSourceIdentifier(v string) *ProjectSourceVersion {",
          "10889:  s.SourceIdentifier = &v",
          "10894: func (s *ProjectSourceVersion) SetSourceVersion(v string) *ProjectSourceVersion {",
          "10895:  s.SourceVersion = &v",
          "10899: type PutResourcePolicyInput struct {",
          "10900:  _ struct{} `type:\"structure\"`",
          "10908:  Policy *string `locationName:\"policy\" min:\"1\" type:\"string\" required:\"true\"`",
          "10914:  ResourceArn *string `locationName:\"resourceArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "10918: func (s PutResourcePolicyInput) String() string {",
          "10919:  return awsutil.Prettify(s)",
          "10923: func (s PutResourcePolicyInput) GoString() string {",
          "10924:  return s.String()",
          "10928: func (s *PutResourcePolicyInput) Validate() error {",
          "10929:  invalidParams := request.ErrInvalidParams{Context: \"PutResourcePolicyInput\"}",
          "10930:  if s.Policy == nil {",
          "10931:   invalidParams.Add(request.NewErrParamRequired(\"Policy\"))",
          "10932:  }",
          "10933:  if s.Policy != nil && len(*s.Policy) < 1 {",
          "10934:   invalidParams.Add(request.NewErrParamMinLen(\"Policy\", 1))",
          "10935:  }",
          "10936:  if s.ResourceArn == nil {",
          "10937:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "10938:  }",
          "10939:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "10940:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "10941:  }",
          "10943:  if invalidParams.Len() > 0 {",
          "10944:   return invalidParams",
          "10945:  }",
          "10946:  return nil",
          "10950: func (s *PutResourcePolicyInput) SetPolicy(v string) *PutResourcePolicyInput {",
          "10951:  s.Policy = &v",
          "10956: func (s *PutResourcePolicyInput) SetResourceArn(v string) *PutResourcePolicyInput {",
          "10957:  s.ResourceArn = &v",
          "10961: type PutResourcePolicyOutput struct {",
          "10962:  _ struct{} `type:\"structure\"`",
          "10966:  ResourceArn *string `locationName:\"resourceArn\" min:\"1\" type:\"string\"`",
          "10967: }",
          "10970: func (s PutResourcePolicyOutput) String() string {",
          "10971:  return awsutil.Prettify(s)",
          "10972: }",
          "10975: func (s PutResourcePolicyOutput) GoString() string {",
          "10976:  return s.String()",
          "10977: }",
          "10980: func (s *PutResourcePolicyOutput) SetResourceArn(v string) *PutResourcePolicyOutput {",
          "10981:  s.ResourceArn = &v",
          "10994: type RegistryCredential struct {",
          "11004:  Credential *string `locationName:\"credential\" min:\"1\" type:\"string\" required:\"true\"`",
          "11010:  CredentialProvider *string `locationName:\"credentialProvider\" type:\"string\" required:\"true\" enum:\"CredentialProviderType\"`",
          "11014: func (s RegistryCredential) String() string {",
          "11019: func (s RegistryCredential) GoString() string {",
          "11024: func (s *RegistryCredential) Validate() error {",
          "11025:  invalidParams := request.ErrInvalidParams{Context: \"RegistryCredential\"}",
          "11026:  if s.Credential == nil {",
          "11027:   invalidParams.Add(request.NewErrParamRequired(\"Credential\"))",
          "11028:  }",
          "11029:  if s.Credential != nil && len(*s.Credential) < 1 {",
          "11030:   invalidParams.Add(request.NewErrParamMinLen(\"Credential\", 1))",
          "11031:  }",
          "11032:  if s.CredentialProvider == nil {",
          "11033:   invalidParams.Add(request.NewErrParamRequired(\"CredentialProvider\"))",
          "11034:  }",
          "11036:  if invalidParams.Len() > 0 {",
          "11037:   return invalidParams",
          "11038:  }",
          "11039:  return nil",
          "11040: }",
          "11043: func (s *RegistryCredential) SetCredential(v string) *RegistryCredential {",
          "11044:  s.Credential = &v",
          "11049: func (s *RegistryCredential) SetCredentialProvider(v string) *RegistryCredential {",
          "11050:  s.CredentialProvider = &v",
          "11059: type Report struct {",
          "11063:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "11067:  CodeCoverageSummary *CodeCoverageReportSummary `locationName:\"codeCoverageSummary\" type:\"structure\"`",
          "11070:  Created *time.Time `locationName:\"created\" type:\"timestamp\"`",
          "11073:  ExecutionId *string `locationName:\"executionId\" type:\"string\"`",
          "11077:  Expired *time.Time `locationName:\"expired\" type:\"timestamp\"`",
          "11080:  ExportConfig *ReportExportConfig `locationName:\"exportConfig\" type:\"structure\"`",
          "11083:  Name *string `locationName:\"name\" type:\"string\"`",
          "11086:  ReportGroupArn *string `locationName:\"reportGroupArn\" min:\"1\" type:\"string\"`",
          "11089:  Status *string `locationName:\"status\" type:\"string\" enum:\"ReportStatusType\"`",
          "11092:  TestSummary *TestReportSummary `locationName:\"testSummary\" type:\"structure\"`",
          "11096:  Truncated *bool `locationName:\"truncated\" type:\"boolean\"`",
          "11107:  Type *string `locationName:\"type\" type:\"string\" enum:\"ReportType\"`",
          "11111: func (s Report) String() string {",
          "11116: func (s Report) GoString() string {",
          "11121: func (s *Report) SetArn(v string) *Report {",
          "11122:  s.Arn = &v",
          "11123:  return s",
          "11124: }",
          "11127: func (s *Report) SetCodeCoverageSummary(v *CodeCoverageReportSummary) *Report {",
          "11128:  s.CodeCoverageSummary = v",
          "11129:  return s",
          "11133: func (s *Report) SetCreated(v time.Time) *Report {",
          "11134:  s.Created = &v",
          "11139: func (s *Report) SetExecutionId(v string) *Report {",
          "11140:  s.ExecutionId = &v",
          "11145: func (s *Report) SetExpired(v time.Time) *Report {",
          "11146:  s.Expired = &v",
          "11151: func (s *Report) SetExportConfig(v *ReportExportConfig) *Report {",
          "11152:  s.ExportConfig = v",
          "11153:  return s",
          "11154: }",
          "11157: func (s *Report) SetName(v string) *Report {",
          "11158:  s.Name = &v",
          "11159:  return s",
          "11160: }",
          "11163: func (s *Report) SetReportGroupArn(v string) *Report {",
          "11164:  s.ReportGroupArn = &v",
          "11165:  return s",
          "11166: }",
          "11169: func (s *Report) SetStatus(v string) *Report {",
          "11170:  s.Status = &v",
          "11171:  return s",
          "11172: }",
          "11175: func (s *Report) SetTestSummary(v *TestReportSummary) *Report {",
          "11176:  s.TestSummary = v",
          "11177:  return s",
          "11178: }",
          "11181: func (s *Report) SetTruncated(v bool) *Report {",
          "11182:  s.Truncated = &v",
          "11183:  return s",
          "11184: }",
          "11187: func (s *Report) SetType(v string) *Report {",
          "11188:  s.Type = &v",
          "11189:  return s",
          "11190: }",
          "11193: type ReportExportConfig struct {",
          "11194:  _ struct{} `type:\"structure\"`",
          "11201:  ExportConfigType *string `locationName:\"exportConfigType\" type:\"string\" enum:\"ReportExportConfigType\"`",
          "11205:  S3Destination *S3ReportExportConfig `locationName:\"s3Destination\" type:\"structure\"`",
          "11206: }",
          "11209: func (s ReportExportConfig) String() string {",
          "11210:  return awsutil.Prettify(s)",
          "11211: }",
          "11214: func (s ReportExportConfig) GoString() string {",
          "11215:  return s.String()",
          "11216: }",
          "11219: func (s *ReportExportConfig) Validate() error {",
          "11220:  invalidParams := request.ErrInvalidParams{Context: \"ReportExportConfig\"}",
          "11221:  if s.S3Destination != nil {",
          "11222:   if err := s.S3Destination.Validate(); err != nil {",
          "11223:    invalidParams.AddNested(\"S3Destination\", err.(request.ErrInvalidParams))",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "8093:  return nil",
          "8094: }",
          "8105:  return s",
          "8106: }",
          "8111:  return s",
          "8112: }",
          "8124: }",
          "8130: }",
          "8136: }",
          "8141:  return s",
          "8142: }",
          "8147:  _ struct{} `type:\"structure\"`",
          "8179: }",
          "8183:  return awsutil.Prettify(s)",
          "8184: }",
          "8188:  return s.String()",
          "8189: }",
          "8194:  return s",
          "8195: }",
          "8200:  return s",
          "8201: }",
          "8206:  return s",
          "8207: }",
          "8212:  return s",
          "8213: }",
          "8218:  return s",
          "8219: }",
          "8335: }",
          "8339:  return awsutil.Prettify(s)",
          "8340: }",
          "8344:  return s.String()",
          "8345: }",
          "8368: }",
          "8373:  return s",
          "8374: }",
          "8379:  return s",
          "8380: }",
          "8386: }",
          "8392: }",
          "8398: }",
          "8404: }",
          "8410: }",
          "8416: }",
          "8422: }",
          "8428: }",
          "8464: }",
          "8468:  return awsutil.Prettify(s)",
          "8469: }",
          "8473:  return s.String()",
          "8474: }",
          "8484:  }",
          "8488:  }",
          "8489:  return nil",
          "8490: }",
          "8496: }",
          "8502: }",
          "8505:  _ struct{} `type:\"structure\"`",
          "8520: }",
          "8524:  return awsutil.Prettify(s)",
          "8525: }",
          "8529:  return s.String()",
          "8530: }",
          "8546:  }",
          "8548:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "8097: func (s *ProjectEnvironment) SetCertificate(v string) *ProjectEnvironment {",
          "8098:  s.Certificate = &v",
          "8099:  return s",
          "8100: }",
          "8103: func (s *ProjectEnvironment) SetComputeType(v string) *ProjectEnvironment {",
          "8104:  s.ComputeType = &v",
          "8109: func (s *ProjectEnvironment) SetEnvironmentVariables(v []*EnvironmentVariable) *ProjectEnvironment {",
          "8110:  s.EnvironmentVariables = v",
          "8115: func (s *ProjectEnvironment) SetImage(v string) *ProjectEnvironment {",
          "8116:  s.Image = &v",
          "8117:  return s",
          "8118: }",
          "8121: func (s *ProjectEnvironment) SetImagePullCredentialsType(v string) *ProjectEnvironment {",
          "8122:  s.ImagePullCredentialsType = &v",
          "8123:  return s",
          "8127: func (s *ProjectEnvironment) SetPrivilegedMode(v bool) *ProjectEnvironment {",
          "8128:  s.PrivilegedMode = &v",
          "8129:  return s",
          "8133: func (s *ProjectEnvironment) SetRegistryCredential(v *RegistryCredential) *ProjectEnvironment {",
          "8134:  s.RegistryCredential = v",
          "8135:  return s",
          "8139: func (s *ProjectEnvironment) SetType(v string) *ProjectEnvironment {",
          "8140:  s.Type = &v",
          "8146: type ProjectFileSystemLocation struct {",
          "8155:  Identifier *string `locationName:\"identifier\" type:\"string\"`",
          "8167:  Location *string `locationName:\"location\" type:\"string\"`",
          "8172:  MountOptions *string `locationName:\"mountOptions\" type:\"string\"`",
          "8175:  MountPoint *string `locationName:\"mountPoint\" type:\"string\"`",
          "8178:  Type *string `locationName:\"type\" type:\"string\" enum:\"FileSystemType\"`",
          "8182: func (s ProjectFileSystemLocation) String() string {",
          "8187: func (s ProjectFileSystemLocation) GoString() string {",
          "8192: func (s *ProjectFileSystemLocation) SetIdentifier(v string) *ProjectFileSystemLocation {",
          "8193:  s.Identifier = &v",
          "8198: func (s *ProjectFileSystemLocation) SetLocation(v string) *ProjectFileSystemLocation {",
          "8199:  s.Location = &v",
          "8204: func (s *ProjectFileSystemLocation) SetMountOptions(v string) *ProjectFileSystemLocation {",
          "8205:  s.MountOptions = &v",
          "8210: func (s *ProjectFileSystemLocation) SetMountPoint(v string) *ProjectFileSystemLocation {",
          "8211:  s.MountPoint = &v",
          "8216: func (s *ProjectFileSystemLocation) SetType(v string) *ProjectFileSystemLocation {",
          "8217:  s.Type = &v",
          "8222: type ProjectSource struct {",
          "8223:  _ struct{} `type:\"structure\"`",
          "8230:  Auth *SourceAuth `locationName:\"auth\" type:\"structure\"`",
          "8235:  BuildStatusConfig *BuildStatusConfig `locationName:\"buildStatusConfig\" type:\"structure\"`",
          "8247:  Buildspec *string `locationName:\"buildspec\" type:\"string\"`",
          "8250:  GitCloneDepth *int64 `locationName:\"gitCloneDepth\" type:\"integer\"`",
          "8253:  GitSubmodulesConfig *GitSubmodulesConfig `locationName:\"gitSubmodulesConfig\" type:\"structure\"`",
          "8257:  InsecureSsl *bool `locationName:\"insecureSsl\" type:\"boolean\"`",
          "8299:  Location *string `locationName:\"location\" type:\"string\"`",
          "8308:  ReportBuildStatus *bool `locationName:\"reportBuildStatus\" type:\"boolean\"`",
          "8311:  SourceIdentifier *string `locationName:\"sourceIdentifier\" type:\"string\"`",
          "8334:  Type *string `locationName:\"type\" type:\"string\" required:\"true\" enum:\"SourceType\"`",
          "8338: func (s ProjectSource) String() string {",
          "8343: func (s ProjectSource) GoString() string {",
          "8348: func (s *ProjectSource) Validate() error {",
          "8349:  invalidParams := request.ErrInvalidParams{Context: \"ProjectSource\"}",
          "8350:  if s.Type == nil {",
          "8351:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "8352:  }",
          "8353:  if s.Auth != nil {",
          "8354:   if err := s.Auth.Validate(); err != nil {",
          "8355:    invalidParams.AddNested(\"Auth\", err.(request.ErrInvalidParams))",
          "8356:   }",
          "8357:  }",
          "8358:  if s.GitSubmodulesConfig != nil {",
          "8359:   if err := s.GitSubmodulesConfig.Validate(); err != nil {",
          "8360:    invalidParams.AddNested(\"GitSubmodulesConfig\", err.(request.ErrInvalidParams))",
          "8361:   }",
          "8362:  }",
          "8364:  if invalidParams.Len() > 0 {",
          "8365:   return invalidParams",
          "8366:  }",
          "8367:  return nil",
          "8371: func (s *ProjectSource) SetAuth(v *SourceAuth) *ProjectSource {",
          "8372:  s.Auth = v",
          "8377: func (s *ProjectSource) SetBuildStatusConfig(v *BuildStatusConfig) *ProjectSource {",
          "8378:  s.BuildStatusConfig = v",
          "8383: func (s *ProjectSource) SetBuildspec(v string) *ProjectSource {",
          "8384:  s.Buildspec = &v",
          "8385:  return s",
          "8389: func (s *ProjectSource) SetGitCloneDepth(v int64) *ProjectSource {",
          "8390:  s.GitCloneDepth = &v",
          "8391:  return s",
          "8395: func (s *ProjectSource) SetGitSubmodulesConfig(v *GitSubmodulesConfig) *ProjectSource {",
          "8396:  s.GitSubmodulesConfig = v",
          "8397:  return s",
          "8401: func (s *ProjectSource) SetInsecureSsl(v bool) *ProjectSource {",
          "8402:  s.InsecureSsl = &v",
          "8403:  return s",
          "8407: func (s *ProjectSource) SetLocation(v string) *ProjectSource {",
          "8408:  s.Location = &v",
          "8409:  return s",
          "8413: func (s *ProjectSource) SetReportBuildStatus(v bool) *ProjectSource {",
          "8414:  s.ReportBuildStatus = &v",
          "8415:  return s",
          "8419: func (s *ProjectSource) SetSourceIdentifier(v string) *ProjectSource {",
          "8420:  s.SourceIdentifier = &v",
          "8421:  return s",
          "8425: func (s *ProjectSource) SetType(v string) *ProjectSource {",
          "8426:  s.Type = &v",
          "8427:  return s",
          "8431: type ProjectSourceVersion struct {",
          "8432:  _ struct{} `type:\"structure\"`",
          "8437:  SourceIdentifier *string `locationName:\"sourceIdentifier\" type:\"string\" required:\"true\"`",
          "8463:  SourceVersion *string `locationName:\"sourceVersion\" type:\"string\" required:\"true\"`",
          "8467: func (s ProjectSourceVersion) String() string {",
          "8472: func (s ProjectSourceVersion) GoString() string {",
          "8477: func (s *ProjectSourceVersion) Validate() error {",
          "8478:  invalidParams := request.ErrInvalidParams{Context: \"ProjectSourceVersion\"}",
          "8479:  if s.SourceIdentifier == nil {",
          "8480:   invalidParams.Add(request.NewErrParamRequired(\"SourceIdentifier\"))",
          "8481:  }",
          "8482:  if s.SourceVersion == nil {",
          "8483:   invalidParams.Add(request.NewErrParamRequired(\"SourceVersion\"))",
          "8486:  if invalidParams.Len() > 0 {",
          "8487:   return invalidParams",
          "8493: func (s *ProjectSourceVersion) SetSourceIdentifier(v string) *ProjectSourceVersion {",
          "8494:  s.SourceIdentifier = &v",
          "8495:  return s",
          "8499: func (s *ProjectSourceVersion) SetSourceVersion(v string) *ProjectSourceVersion {",
          "8500:  s.SourceVersion = &v",
          "8501:  return s",
          "8504: type PutResourcePolicyInput struct {",
          "8513:  Policy *string `locationName:\"policy\" min:\"1\" type:\"string\" required:\"true\"`",
          "8519:  ResourceArn *string `locationName:\"resourceArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "8523: func (s PutResourcePolicyInput) String() string {",
          "8528: func (s PutResourcePolicyInput) GoString() string {",
          "8533: func (s *PutResourcePolicyInput) Validate() error {",
          "8534:  invalidParams := request.ErrInvalidParams{Context: \"PutResourcePolicyInput\"}",
          "8535:  if s.Policy == nil {",
          "8536:   invalidParams.Add(request.NewErrParamRequired(\"Policy\"))",
          "8537:  }",
          "8538:  if s.Policy != nil && len(*s.Policy) < 1 {",
          "8539:   invalidParams.Add(request.NewErrParamMinLen(\"Policy\", 1))",
          "8540:  }",
          "8541:  if s.ResourceArn == nil {",
          "8542:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "8543:  }",
          "8544:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "8545:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "",
          "[Added Lines]",
          "11234: func (s *ReportExportConfig) SetExportConfigType(v string) *ReportExportConfig {",
          "11235:  s.ExportConfigType = &v",
          "11240: func (s *ReportExportConfig) SetS3Destination(v *S3ReportExportConfig) *ReportExportConfig {",
          "11241:  s.S3Destination = v",
          "11247: type ReportFilter struct {",
          "11248:  _ struct{} `type:\"structure\"`",
          "11251:  Status *string `locationName:\"status\" type:\"string\" enum:\"ReportStatusType\"`",
          "11255: func (s ReportFilter) String() string {",
          "11256:  return awsutil.Prettify(s)",
          "11260: func (s ReportFilter) GoString() string {",
          "11261:  return s.String()",
          "11265: func (s *ReportFilter) SetStatus(v string) *ReportFilter {",
          "11266:  s.Status = &v",
          "11274: type ReportGroup struct {",
          "11278:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "11281:  Created *time.Time `locationName:\"created\" type:\"timestamp\"`",
          "11285:  ExportConfig *ReportExportConfig `locationName:\"exportConfig\" type:\"structure\"`",
          "11288:  LastModified *time.Time `locationName:\"lastModified\" type:\"timestamp\"`",
          "11291:  Name *string `locationName:\"name\" min:\"2\" type:\"string\"`",
          "11297:  Tags []*Tag `locationName:\"tags\" type:\"list\"`",
          "11300:  Type *string `locationName:\"type\" type:\"string\" enum:\"ReportType\"`",
          "11304: func (s ReportGroup) String() string {",
          "11309: func (s ReportGroup) GoString() string {",
          "11314: func (s *ReportGroup) SetArn(v string) *ReportGroup {",
          "11315:  s.Arn = &v",
          "11320: func (s *ReportGroup) SetCreated(v time.Time) *ReportGroup {",
          "11321:  s.Created = &v",
          "11326: func (s *ReportGroup) SetExportConfig(v *ReportExportConfig) *ReportGroup {",
          "11327:  s.ExportConfig = v",
          "11332: func (s *ReportGroup) SetLastModified(v time.Time) *ReportGroup {",
          "11333:  s.LastModified = &v",
          "11338: func (s *ReportGroup) SetName(v string) *ReportGroup {",
          "11339:  s.Name = &v",
          "11344: func (s *ReportGroup) SetTags(v []*Tag) *ReportGroup {",
          "11345:  s.Tags = v",
          "11346:  return s",
          "11347: }",
          "11350: func (s *ReportGroup) SetType(v string) *ReportGroup {",
          "11351:  s.Type = &v",
          "11352:  return s",
          "11353: }",
          "11358: type ResolvedArtifact struct {",
          "11359:  _ struct{} `type:\"structure\"`",
          "11362:  Identifier *string `locationName:\"identifier\" type:\"string\"`",
          "11365:  Location *string `locationName:\"location\" type:\"string\"`",
          "11368:  Type *string `locationName:\"type\" type:\"string\" enum:\"ArtifactsType\"`",
          "11372: func (s ResolvedArtifact) String() string {",
          "11377: func (s ResolvedArtifact) GoString() string {",
          "11382: func (s *ResolvedArtifact) SetIdentifier(v string) *ResolvedArtifact {",
          "11383:  s.Identifier = &v",
          "11384:  return s",
          "11388: func (s *ResolvedArtifact) SetLocation(v string) *ResolvedArtifact {",
          "11389:  s.Location = &v",
          "11394: func (s *ResolvedArtifact) SetType(v string) *ResolvedArtifact {",
          "11395:  s.Type = &v",
          "11401: type ResourceAlreadyExistsException struct {",
          "11402:  _            struct{}                  `type:\"structure\"`",
          "11403:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "11405:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "11409: func (s ResourceAlreadyExistsException) String() string {",
          "11410:  return awsutil.Prettify(s)",
          "11414: func (s ResourceAlreadyExistsException) GoString() string {",
          "11415:  return s.String()",
          "11418: func newErrorResourceAlreadyExistsException(v protocol.ResponseMetadata) error {",
          "11419:  return &ResourceAlreadyExistsException{",
          "11420:   RespMetadata: v,",
          "11421:  }",
          "11425: func (s *ResourceAlreadyExistsException) Code() string {",
          "11426:  return \"ResourceAlreadyExistsException\"",
          "11430: func (s *ResourceAlreadyExistsException) Message() string {",
          "11431:  if s.Message_ != nil {",
          "11432:   return *s.Message_",
          "11433:  }",
          "11434:  return \"\"",
          "11438: func (s *ResourceAlreadyExistsException) OrigErr() error {",
          "11439:  return nil",
          "11442: func (s *ResourceAlreadyExistsException) Error() string {",
          "11443:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "11447: func (s *ResourceAlreadyExistsException) StatusCode() int {",
          "11448:  return s.RespMetadata.StatusCode",
          "11449: }",
          "11452: func (s *ResourceAlreadyExistsException) RequestID() string {",
          "11453:  return s.RespMetadata.RequestID",
          "11454: }",
          "11457: type ResourceNotFoundException struct {",
          "11458:  _            struct{}                  `type:\"structure\"`",
          "11459:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "11461:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "11465: func (s ResourceNotFoundException) String() string {",
          "11470: func (s ResourceNotFoundException) GoString() string {",
          "11474: func newErrorResourceNotFoundException(v protocol.ResponseMetadata) error {",
          "11475:  return &ResourceNotFoundException{",
          "11476:   RespMetadata: v,",
          "11478: }",
          "11481: func (s *ResourceNotFoundException) Code() string {",
          "11482:  return \"ResourceNotFoundException\"",
          "11483: }",
          "11486: func (s *ResourceNotFoundException) Message() string {",
          "11487:  if s.Message_ != nil {",
          "11488:   return *s.Message_",
          "11490:  return \"\"",
          "11491: }",
          "11494: func (s *ResourceNotFoundException) OrigErr() error {",
          "11498: func (s *ResourceNotFoundException) Error() string {",
          "11499:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "11503: func (s *ResourceNotFoundException) StatusCode() int {",
          "11504:  return s.RespMetadata.StatusCode",
          "11508: func (s *ResourceNotFoundException) RequestID() string {",
          "11509:  return s.RespMetadata.RequestID",
          "11510: }",
          "11512: type RetryBuildBatchInput struct {",
          "11516:  Id *string `locationName:\"id\" min:\"1\" type:\"string\"`",
          "11523:  IdempotencyToken *string `locationName:\"idempotencyToken\" type:\"string\"`",
          "11526:  RetryType *string `locationName:\"retryType\" type:\"string\" enum:\"RetryBuildBatchType\"`",
          "11530: func (s RetryBuildBatchInput) String() string {",
          "11535: func (s RetryBuildBatchInput) GoString() string {",
          "11540: func (s *RetryBuildBatchInput) Validate() error {",
          "11541:  invalidParams := request.ErrInvalidParams{Context: \"RetryBuildBatchInput\"}",
          "11542:  if s.Id != nil && len(*s.Id) < 1 {",
          "11543:   invalidParams.Add(request.NewErrParamMinLen(\"Id\", 1))",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "8551:  return nil",
          "8552: }",
          "8557:  return s",
          "8558: }",
          "8563:  return s",
          "8564: }",
          "8567:  _ struct{} `type:\"structure\"`",
          "8572: }",
          "8576:  return awsutil.Prettify(s)",
          "8577: }",
          "8581:  return s.String()",
          "8582: }",
          "8587:  return s",
          "8588: }",
          "8600:  _ struct{} `type:\"structure\"`",
          "8616: }",
          "8620:  return awsutil.Prettify(s)",
          "8621: }",
          "8625:  return s.String()",
          "8626: }",
          "8639:  }",
          "8641:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "8555: func (s *PutResourcePolicyInput) SetPolicy(v string) *PutResourcePolicyInput {",
          "8556:  s.Policy = &v",
          "8561: func (s *PutResourcePolicyInput) SetResourceArn(v string) *PutResourcePolicyInput {",
          "8562:  s.ResourceArn = &v",
          "8566: type PutResourcePolicyOutput struct {",
          "8571:  ResourceArn *string `locationName:\"resourceArn\" min:\"1\" type:\"string\"`",
          "8575: func (s PutResourcePolicyOutput) String() string {",
          "8580: func (s PutResourcePolicyOutput) GoString() string {",
          "8585: func (s *PutResourcePolicyOutput) SetResourceArn(v string) *PutResourcePolicyOutput {",
          "8586:  s.ResourceArn = &v",
          "8599: type RegistryCredential struct {",
          "8609:  Credential *string `locationName:\"credential\" min:\"1\" type:\"string\" required:\"true\"`",
          "8615:  CredentialProvider *string `locationName:\"credentialProvider\" type:\"string\" required:\"true\" enum:\"CredentialProviderType\"`",
          "8619: func (s RegistryCredential) String() string {",
          "8624: func (s RegistryCredential) GoString() string {",
          "8629: func (s *RegistryCredential) Validate() error {",
          "8630:  invalidParams := request.ErrInvalidParams{Context: \"RegistryCredential\"}",
          "8631:  if s.Credential == nil {",
          "8632:   invalidParams.Add(request.NewErrParamRequired(\"Credential\"))",
          "8633:  }",
          "8634:  if s.Credential != nil && len(*s.Credential) < 1 {",
          "8635:   invalidParams.Add(request.NewErrParamMinLen(\"Credential\", 1))",
          "8636:  }",
          "8637:  if s.CredentialProvider == nil {",
          "8638:   invalidParams.Add(request.NewErrParamRequired(\"CredentialProvider\"))",
          "",
          "[Added Lines]",
          "11553: func (s *RetryBuildBatchInput) SetId(v string) *RetryBuildBatchInput {",
          "11554:  s.Id = &v",
          "11559: func (s *RetryBuildBatchInput) SetIdempotencyToken(v string) *RetryBuildBatchInput {",
          "11560:  s.IdempotencyToken = &v",
          "11565: func (s *RetryBuildBatchInput) SetRetryType(v string) *RetryBuildBatchInput {",
          "11566:  s.RetryType = &v",
          "11567:  return s",
          "11568: }",
          "11570: type RetryBuildBatchOutput struct {",
          "11574:  BuildBatch *BuildBatch `locationName:\"buildBatch\" type:\"structure\"`",
          "11578: func (s RetryBuildBatchOutput) String() string {",
          "11583: func (s RetryBuildBatchOutput) GoString() string {",
          "11588: func (s *RetryBuildBatchOutput) SetBuildBatch(v *BuildBatch) *RetryBuildBatchOutput {",
          "11589:  s.BuildBatch = v",
          "11593: type RetryBuildInput struct {",
          "11597:  Id *string `locationName:\"id\" min:\"1\" type:\"string\"`",
          "11604:  IdempotencyToken *string `locationName:\"idempotencyToken\" type:\"string\"`",
          "11608: func (s RetryBuildInput) String() string {",
          "11613: func (s RetryBuildInput) GoString() string {",
          "11618: func (s *RetryBuildInput) Validate() error {",
          "11619:  invalidParams := request.ErrInvalidParams{Context: \"RetryBuildInput\"}",
          "11620:  if s.Id != nil && len(*s.Id) < 1 {",
          "11621:   invalidParams.Add(request.NewErrParamMinLen(\"Id\", 1))",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "8644:  return nil",
          "8645: }",
          "8650:  return s",
          "8651: }",
          "8656:  return s",
          "8657: }",
          "8665:  _ struct{} `type:\"structure\"`",
          "8701: }",
          "8705:  return awsutil.Prettify(s)",
          "8706: }",
          "8710:  return s.String()",
          "8711: }",
          "8717: }",
          "8722:  return s",
          "8723: }",
          "8728:  return s",
          "8729: }",
          "8734:  return s",
          "8735: }",
          "8741: }",
          "8747: }",
          "8753: }",
          "8758:  return s",
          "8759: }",
          "8764:  return s",
          "8765: }",
          "8770:  return s",
          "8771: }",
          "8776:  return s",
          "8777: }",
          "8781:  _ struct{} `type:\"structure\"`",
          "8793: }",
          "8797:  return awsutil.Prettify(s)",
          "8798: }",
          "8802:  return s.String()",
          "8803: }",
          "8812:  }",
          "8814:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "8648: func (s *RegistryCredential) SetCredential(v string) *RegistryCredential {",
          "8649:  s.Credential = &v",
          "8654: func (s *RegistryCredential) SetCredentialProvider(v string) *RegistryCredential {",
          "8655:  s.CredentialProvider = &v",
          "8664: type Report struct {",
          "8668:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "8671:  Created *time.Time `locationName:\"created\" type:\"timestamp\"`",
          "8674:  ExecutionId *string `locationName:\"executionId\" type:\"string\"`",
          "8678:  Expired *time.Time `locationName:\"expired\" type:\"timestamp\"`",
          "8681:  ExportConfig *ReportExportConfig `locationName:\"exportConfig\" type:\"structure\"`",
          "8684:  Name *string `locationName:\"name\" type:\"string\"`",
          "8687:  ReportGroupArn *string `locationName:\"reportGroupArn\" min:\"1\" type:\"string\"`",
          "8690:  Status *string `locationName:\"status\" type:\"string\" enum:\"ReportStatusType\"`",
          "8693:  TestSummary *TestReportSummary `locationName:\"testSummary\" type:\"structure\"`",
          "8697:  Truncated *bool `locationName:\"truncated\" type:\"boolean\"`",
          "8700:  Type *string `locationName:\"type\" type:\"string\" enum:\"ReportType\"`",
          "8704: func (s Report) String() string {",
          "8709: func (s Report) GoString() string {",
          "8714: func (s *Report) SetArn(v string) *Report {",
          "8715:  s.Arn = &v",
          "8716:  return s",
          "8720: func (s *Report) SetCreated(v time.Time) *Report {",
          "8721:  s.Created = &v",
          "8726: func (s *Report) SetExecutionId(v string) *Report {",
          "8727:  s.ExecutionId = &v",
          "8732: func (s *Report) SetExpired(v time.Time) *Report {",
          "8733:  s.Expired = &v",
          "8738: func (s *Report) SetExportConfig(v *ReportExportConfig) *Report {",
          "8739:  s.ExportConfig = v",
          "8740:  return s",
          "8744: func (s *Report) SetName(v string) *Report {",
          "8745:  s.Name = &v",
          "8746:  return s",
          "8750: func (s *Report) SetReportGroupArn(v string) *Report {",
          "8751:  s.ReportGroupArn = &v",
          "8752:  return s",
          "8756: func (s *Report) SetStatus(v string) *Report {",
          "8757:  s.Status = &v",
          "8762: func (s *Report) SetTestSummary(v *TestReportSummary) *Report {",
          "8763:  s.TestSummary = v",
          "8768: func (s *Report) SetTruncated(v bool) *Report {",
          "8769:  s.Truncated = &v",
          "8774: func (s *Report) SetType(v string) *Report {",
          "8775:  s.Type = &v",
          "8780: type ReportExportConfig struct {",
          "8788:  ExportConfigType *string `locationName:\"exportConfigType\" type:\"string\" enum:\"ReportExportConfigType\"`",
          "8792:  S3Destination *S3ReportExportConfig `locationName:\"s3Destination\" type:\"structure\"`",
          "8796: func (s ReportExportConfig) String() string {",
          "8801: func (s ReportExportConfig) GoString() string {",
          "8806: func (s *ReportExportConfig) Validate() error {",
          "8807:  invalidParams := request.ErrInvalidParams{Context: \"ReportExportConfig\"}",
          "8808:  if s.S3Destination != nil {",
          "8809:   if err := s.S3Destination.Validate(); err != nil {",
          "8810:    invalidParams.AddNested(\"S3Destination\", err.(request.ErrInvalidParams))",
          "8811:   }",
          "",
          "[Added Lines]",
          "11631: func (s *RetryBuildInput) SetId(v string) *RetryBuildInput {",
          "11632:  s.Id = &v",
          "11637: func (s *RetryBuildInput) SetIdempotencyToken(v string) *RetryBuildInput {",
          "11638:  s.IdempotencyToken = &v",
          "11642: type RetryBuildOutput struct {",
          "11646:  Build *Build `locationName:\"build\" type:\"structure\"`",
          "11647: }",
          "11650: func (s RetryBuildOutput) String() string {",
          "11651:  return awsutil.Prettify(s)",
          "11652: }",
          "11655: func (s RetryBuildOutput) GoString() string {",
          "11656:  return s.String()",
          "11657: }",
          "11660: func (s *RetryBuildOutput) SetBuild(v *Build) *RetryBuildOutput {",
          "11661:  s.Build = v",
          "11662:  return s",
          "11663: }",
          "11666: type S3LogsConfig struct {",
          "11667:  _ struct{} `type:\"structure\"`",
          "11671:  EncryptionDisabled *bool `locationName:\"encryptionDisabled\" type:\"boolean\"`",
          "11676:  Location *string `locationName:\"location\" type:\"string\"`",
          "11685:  Status *string `locationName:\"status\" type:\"string\" required:\"true\" enum:\"LogsConfigStatusType\"`",
          "11689: func (s S3LogsConfig) String() string {",
          "11694: func (s S3LogsConfig) GoString() string {",
          "11699: func (s *S3LogsConfig) Validate() error {",
          "11700:  invalidParams := request.ErrInvalidParams{Context: \"S3LogsConfig\"}",
          "11701:  if s.Status == nil {",
          "11702:   invalidParams.Add(request.NewErrParamRequired(\"Status\"))",
          "11703:  }",
          "11705:  if invalidParams.Len() > 0 {",
          "11706:   return invalidParams",
          "11707:  }",
          "11708:  return nil",
          "11712: func (s *S3LogsConfig) SetEncryptionDisabled(v bool) *S3LogsConfig {",
          "11713:  s.EncryptionDisabled = &v",
          "11718: func (s *S3LogsConfig) SetLocation(v string) *S3LogsConfig {",
          "11719:  s.Location = &v",
          "11724: func (s *S3LogsConfig) SetStatus(v string) *S3LogsConfig {",
          "11725:  s.Status = &v",
          "11730: type S3ReportExportConfig struct {",
          "11731:  _ struct{} `type:\"structure\"`",
          "11734:  Bucket *string `locationName:\"bucket\" min:\"1\" type:\"string\"`",
          "11737:  EncryptionDisabled *bool `locationName:\"encryptionDisabled\" type:\"boolean\"`",
          "11740:  EncryptionKey *string `locationName:\"encryptionKey\" min:\"1\" type:\"string\"`",
          "11749:  Packaging *string `locationName:\"packaging\" type:\"string\" enum:\"ReportPackagingType\"`",
          "11752:  Path *string `locationName:\"path\" type:\"string\"`",
          "11756: func (s S3ReportExportConfig) String() string {",
          "11757:  return awsutil.Prettify(s)",
          "11761: func (s S3ReportExportConfig) GoString() string {",
          "11762:  return s.String()",
          "11766: func (s *S3ReportExportConfig) Validate() error {",
          "11767:  invalidParams := request.ErrInvalidParams{Context: \"S3ReportExportConfig\"}",
          "11768:  if s.Bucket != nil && len(*s.Bucket) < 1 {",
          "11769:   invalidParams.Add(request.NewErrParamMinLen(\"Bucket\", 1))",
          "11770:  }",
          "11771:  if s.EncryptionKey != nil && len(*s.EncryptionKey) < 1 {",
          "11772:   invalidParams.Add(request.NewErrParamMinLen(\"EncryptionKey\", 1))",
          "11773:  }",
          "11775:  if invalidParams.Len() > 0 {",
          "11776:   return invalidParams",
          "11777:  }",
          "11778:  return nil",
          "11779: }",
          "11782: func (s *S3ReportExportConfig) SetBucket(v string) *S3ReportExportConfig {",
          "11783:  s.Bucket = &v",
          "11788: func (s *S3ReportExportConfig) SetEncryptionDisabled(v bool) *S3ReportExportConfig {",
          "11789:  s.EncryptionDisabled = &v",
          "11794: func (s *S3ReportExportConfig) SetEncryptionKey(v string) *S3ReportExportConfig {",
          "11795:  s.EncryptionKey = &v",
          "11800: func (s *S3ReportExportConfig) SetPackaging(v string) *S3ReportExportConfig {",
          "11801:  s.Packaging = &v",
          "11802:  return s",
          "11803: }",
          "11806: func (s *S3ReportExportConfig) SetPath(v string) *S3ReportExportConfig {",
          "11807:  s.Path = &v",
          "11816: type SourceAuth struct {",
          "11820:  Resource *string `locationName:\"resource\" type:\"string\"`",
          "11829:  Type *string `locationName:\"type\" type:\"string\" required:\"true\" enum:\"SourceAuthType\"`",
          "11833: func (s SourceAuth) String() string {",
          "11838: func (s SourceAuth) GoString() string {",
          "11843: func (s *SourceAuth) Validate() error {",
          "11844:  invalidParams := request.ErrInvalidParams{Context: \"SourceAuth\"}",
          "11845:  if s.Type == nil {",
          "11846:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "8817:  return nil",
          "8818: }",
          "8829:  return s",
          "8830: }",
          "8854:  return s",
          "8855: }",
          "8862:  _ struct{} `type:\"structure\"`",
          "8865:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "8888: }",
          "8892:  return awsutil.Prettify(s)",
          "8893: }",
          "8897:  return s.String()",
          "8898: }",
          "8902:  s.Arn = &v",
          "8903:  return s",
          "8904: }",
          "8909:  return s",
          "8910: }",
          "8915:  return s",
          "8916: }",
          "9076: }",
          "9080:  return awsutil.Prettify(s)",
          "9081: }",
          "9085:  return s.String()",
          "9086: }",
          "9093:  }",
          "9095:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "8821: func (s *ReportExportConfig) SetExportConfigType(v string) *ReportExportConfig {",
          "8822:  s.ExportConfigType = &v",
          "8823:  return s",
          "8824: }",
          "8827: func (s *ReportExportConfig) SetS3Destination(v *S3ReportExportConfig) *ReportExportConfig {",
          "8828:  s.S3Destination = v",
          "8834: type ReportFilter struct {",
          "8835:  _ struct{} `type:\"structure\"`",
          "8838:  Status *string `locationName:\"status\" type:\"string\" enum:\"ReportStatusType\"`",
          "8839: }",
          "8842: func (s ReportFilter) String() string {",
          "8843:  return awsutil.Prettify(s)",
          "8844: }",
          "8847: func (s ReportFilter) GoString() string {",
          "8848:  return s.String()",
          "8849: }",
          "8852: func (s *ReportFilter) SetStatus(v string) *ReportFilter {",
          "8853:  s.Status = &v",
          "8861: type ReportGroup struct {",
          "8868:  Created *time.Time `locationName:\"created\" type:\"timestamp\"`",
          "8872:  ExportConfig *ReportExportConfig `locationName:\"exportConfig\" type:\"structure\"`",
          "8875:  LastModified *time.Time `locationName:\"lastModified\" type:\"timestamp\"`",
          "8878:  Name *string `locationName:\"name\" min:\"2\" type:\"string\"`",
          "8884:  Tags []*Tag `locationName:\"tags\" type:\"list\"`",
          "8887:  Type *string `locationName:\"type\" type:\"string\" enum:\"ReportType\"`",
          "8891: func (s ReportGroup) String() string {",
          "8896: func (s ReportGroup) GoString() string {",
          "8901: func (s *ReportGroup) SetArn(v string) *ReportGroup {",
          "8907: func (s *ReportGroup) SetCreated(v time.Time) *ReportGroup {",
          "8908:  s.Created = &v",
          "8913: func (s *ReportGroup) SetExportConfig(v *ReportExportConfig) *ReportGroup {",
          "8914:  s.ExportConfig = v",
          "8919: func (s *ReportGroup) SetLastModified(v time.Time) *ReportGroup {",
          "8920:  s.LastModified = &v",
          "8921:  return s",
          "8922: }",
          "8925: func (s *ReportGroup) SetName(v string) *ReportGroup {",
          "8926:  s.Name = &v",
          "8927:  return s",
          "8928: }",
          "8931: func (s *ReportGroup) SetTags(v []*Tag) *ReportGroup {",
          "8932:  s.Tags = v",
          "8933:  return s",
          "8934: }",
          "8937: func (s *ReportGroup) SetType(v string) *ReportGroup {",
          "8938:  s.Type = &v",
          "8939:  return s",
          "8940: }",
          "8944: type ResourceAlreadyExistsException struct {",
          "8945:  _            struct{}                  `type:\"structure\"`",
          "8946:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "8948:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "8949: }",
          "8952: func (s ResourceAlreadyExistsException) String() string {",
          "8953:  return awsutil.Prettify(s)",
          "8954: }",
          "8957: func (s ResourceAlreadyExistsException) GoString() string {",
          "8958:  return s.String()",
          "8959: }",
          "8961: func newErrorResourceAlreadyExistsException(v protocol.ResponseMetadata) error {",
          "8962:  return &ResourceAlreadyExistsException{",
          "8963:   RespMetadata: v,",
          "8964:  }",
          "8965: }",
          "8968: func (s *ResourceAlreadyExistsException) Code() string {",
          "8969:  return \"ResourceAlreadyExistsException\"",
          "8970: }",
          "8973: func (s *ResourceAlreadyExistsException) Message() string {",
          "8974:  if s.Message_ != nil {",
          "8975:   return *s.Message_",
          "8976:  }",
          "8977:  return \"\"",
          "8978: }",
          "8981: func (s *ResourceAlreadyExistsException) OrigErr() error {",
          "8982:  return nil",
          "8983: }",
          "8985: func (s *ResourceAlreadyExistsException) Error() string {",
          "8986:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "8987: }",
          "8990: func (s *ResourceAlreadyExistsException) StatusCode() int {",
          "8991:  return s.RespMetadata.StatusCode",
          "8992: }",
          "8995: func (s *ResourceAlreadyExistsException) RequestID() string {",
          "8996:  return s.RespMetadata.RequestID",
          "8997: }",
          "9000: type ResourceNotFoundException struct {",
          "9001:  _            struct{}                  `type:\"structure\"`",
          "9002:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "9004:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "9005: }",
          "9008: func (s ResourceNotFoundException) String() string {",
          "9009:  return awsutil.Prettify(s)",
          "9010: }",
          "9013: func (s ResourceNotFoundException) GoString() string {",
          "9014:  return s.String()",
          "9015: }",
          "9017: func newErrorResourceNotFoundException(v protocol.ResponseMetadata) error {",
          "9018:  return &ResourceNotFoundException{",
          "9019:   RespMetadata: v,",
          "9020:  }",
          "9021: }",
          "9024: func (s *ResourceNotFoundException) Code() string {",
          "9025:  return \"ResourceNotFoundException\"",
          "9026: }",
          "9029: func (s *ResourceNotFoundException) Message() string {",
          "9030:  if s.Message_ != nil {",
          "9031:   return *s.Message_",
          "9032:  }",
          "9033:  return \"\"",
          "9034: }",
          "9037: func (s *ResourceNotFoundException) OrigErr() error {",
          "9038:  return nil",
          "9039: }",
          "9041: func (s *ResourceNotFoundException) Error() string {",
          "9042:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "9043: }",
          "9046: func (s *ResourceNotFoundException) StatusCode() int {",
          "9047:  return s.RespMetadata.StatusCode",
          "9048: }",
          "9051: func (s *ResourceNotFoundException) RequestID() string {",
          "9052:  return s.RespMetadata.RequestID",
          "9053: }",
          "9056: type S3LogsConfig struct {",
          "9057:  _ struct{} `type:\"structure\"`",
          "9061:  EncryptionDisabled *bool `locationName:\"encryptionDisabled\" type:\"boolean\"`",
          "9066:  Location *string `locationName:\"location\" type:\"string\"`",
          "9075:  Status *string `locationName:\"status\" type:\"string\" required:\"true\" enum:\"LogsConfigStatusType\"`",
          "9079: func (s S3LogsConfig) String() string {",
          "9084: func (s S3LogsConfig) GoString() string {",
          "9089: func (s *S3LogsConfig) Validate() error {",
          "9090:  invalidParams := request.ErrInvalidParams{Context: \"S3LogsConfig\"}",
          "9091:  if s.Status == nil {",
          "9092:   invalidParams.Add(request.NewErrParamRequired(\"Status\"))",
          "",
          "[Added Lines]",
          "11856: func (s *SourceAuth) SetResource(v string) *SourceAuth {",
          "11857:  s.Resource = &v",
          "11862: func (s *SourceAuth) SetType(v string) *SourceAuth {",
          "11863:  s.Type = &v",
          "11869: type SourceCredentialsInfo struct {",
          "11877:  AuthType *string `locationName:\"authType\" type:\"string\" enum:\"AuthType\"`",
          "11881:  ServerType *string `locationName:\"serverType\" type:\"string\" enum:\"ServerType\"`",
          "11885: func (s SourceCredentialsInfo) String() string {",
          "11890: func (s SourceCredentialsInfo) GoString() string {",
          "11895: func (s *SourceCredentialsInfo) SetArn(v string) *SourceCredentialsInfo {",
          "11901: func (s *SourceCredentialsInfo) SetAuthType(v string) *SourceCredentialsInfo {",
          "11902:  s.AuthType = &v",
          "11907: func (s *SourceCredentialsInfo) SetServerType(v string) *SourceCredentialsInfo {",
          "11908:  s.ServerType = &v",
          "11912: type StartBuildBatchInput struct {",
          "11913:  _ struct{} `type:\"structure\"`",
          "11917:  ArtifactsOverride *ProjectArtifacts `locationName:\"artifactsOverride\" type:\"structure\"`",
          "11921:  BuildBatchConfigOverride *ProjectBuildBatchConfig `locationName:\"buildBatchConfigOverride\" type:\"structure\"`",
          "11924:  BuildTimeoutInMinutesOverride *int64 `locationName:\"buildTimeoutInMinutesOverride\" min:\"5\" type:\"integer\"`",
          "11937:  BuildspecOverride *string `locationName:\"buildspecOverride\" type:\"string\"`",
          "11940:  CacheOverride *ProjectCache `locationName:\"cacheOverride\" type:\"structure\"`",
          "11944:  CertificateOverride *string `locationName:\"certificateOverride\" type:\"string\"`",
          "11948:  ComputeTypeOverride *string `locationName:\"computeTypeOverride\" type:\"string\" enum:\"ComputeType\"`",
          "11959:  EncryptionKeyOverride *string `locationName:\"encryptionKeyOverride\" min:\"1\" type:\"string\"`",
          "11963:  EnvironmentTypeOverride *string `locationName:\"environmentTypeOverride\" type:\"string\" enum:\"EnvironmentType\"`",
          "11967:  EnvironmentVariablesOverride []*EnvironmentVariable `locationName:\"environmentVariablesOverride\" type:\"list\"`",
          "11972:  GitCloneDepthOverride *int64 `locationName:\"gitCloneDepthOverride\" type:\"integer\"`",
          "11976:  GitSubmodulesConfigOverride *GitSubmodulesConfig `locationName:\"gitSubmodulesConfigOverride\" type:\"structure\"`",
          "11983:  IdempotencyToken *string `locationName:\"idempotencyToken\" type:\"string\"`",
          "11987:  ImageOverride *string `locationName:\"imageOverride\" min:\"1\" type:\"string\"`",
          "12004:  ImagePullCredentialsTypeOverride *string `locationName:\"imagePullCredentialsTypeOverride\" type:\"string\" enum:\"ImagePullCredentialsType\"`",
          "12010:  InsecureSslOverride *bool `locationName:\"insecureSslOverride\" type:\"boolean\"`",
          "12014:  LogsConfigOverride *LogsConfig `locationName:\"logsConfigOverride\" type:\"structure\"`",
          "12017:  PrivilegedModeOverride *bool `locationName:\"privilegedModeOverride\" type:\"boolean\"`",
          "12022:  ProjectName *string `locationName:\"projectName\" min:\"1\" type:\"string\" required:\"true\"`",
          "12026:  QueuedTimeoutInMinutesOverride *int64 `locationName:\"queuedTimeoutInMinutesOverride\" min:\"5\" type:\"integer\"`",
          "12030:  RegistryCredentialOverride *RegistryCredential `locationName:\"registryCredentialOverride\" type:\"structure\"`",
          "12039:  ReportBuildBatchStatusOverride *bool `locationName:\"reportBuildBatchStatusOverride\" type:\"boolean\"`",
          "12043:  SecondaryArtifactsOverride []*ProjectArtifacts `locationName:\"secondaryArtifactsOverride\" type:\"list\"`",
          "12047:  SecondarySourcesOverride []*ProjectSource `locationName:\"secondarySourcesOverride\" type:\"list\"`",
          "12051:  SecondarySourcesVersionOverride []*ProjectSourceVersion `locationName:\"secondarySourcesVersionOverride\" type:\"list\"`",
          "12055:  ServiceRoleOverride *string `locationName:\"serviceRoleOverride\" min:\"1\" type:\"string\"`",
          "12060:  SourceAuthOverride *SourceAuth `locationName:\"sourceAuthOverride\" type:\"structure\"`",
          "12064:  SourceLocationOverride *string `locationName:\"sourceLocationOverride\" type:\"string\"`",
          "12068:  SourceTypeOverride *string `locationName:\"sourceTypeOverride\" type:\"string\" enum:\"SourceType\"`",
          "12103:  SourceVersion *string `locationName:\"sourceVersion\" type:\"string\"`",
          "12107: func (s StartBuildBatchInput) String() string {",
          "12112: func (s StartBuildBatchInput) GoString() string {",
          "12117: func (s *StartBuildBatchInput) Validate() error {",
          "12118:  invalidParams := request.ErrInvalidParams{Context: \"StartBuildBatchInput\"}",
          "12119:  if s.BuildTimeoutInMinutesOverride != nil && *s.BuildTimeoutInMinutesOverride < 5 {",
          "12120:   invalidParams.Add(request.NewErrParamMinValue(\"BuildTimeoutInMinutesOverride\", 5))",
          "12121:  }",
          "12122:  if s.EncryptionKeyOverride != nil && len(*s.EncryptionKeyOverride) < 1 {",
          "12123:   invalidParams.Add(request.NewErrParamMinLen(\"EncryptionKeyOverride\", 1))",
          "12124:  }",
          "12125:  if s.ImageOverride != nil && len(*s.ImageOverride) < 1 {",
          "12126:   invalidParams.Add(request.NewErrParamMinLen(\"ImageOverride\", 1))",
          "12127:  }",
          "12128:  if s.ProjectName == nil {",
          "12129:   invalidParams.Add(request.NewErrParamRequired(\"ProjectName\"))",
          "12130:  }",
          "12131:  if s.ProjectName != nil && len(*s.ProjectName) < 1 {",
          "12132:   invalidParams.Add(request.NewErrParamMinLen(\"ProjectName\", 1))",
          "12133:  }",
          "12134:  if s.QueuedTimeoutInMinutesOverride != nil && *s.QueuedTimeoutInMinutesOverride < 5 {",
          "12135:   invalidParams.Add(request.NewErrParamMinValue(\"QueuedTimeoutInMinutesOverride\", 5))",
          "12136:  }",
          "12137:  if s.ServiceRoleOverride != nil && len(*s.ServiceRoleOverride) < 1 {",
          "12138:   invalidParams.Add(request.NewErrParamMinLen(\"ServiceRoleOverride\", 1))",
          "12139:  }",
          "12140:  if s.ArtifactsOverride != nil {",
          "12141:   if err := s.ArtifactsOverride.Validate(); err != nil {",
          "12142:    invalidParams.AddNested(\"ArtifactsOverride\", err.(request.ErrInvalidParams))",
          "12143:   }",
          "12144:  }",
          "12145:  if s.BuildBatchConfigOverride != nil {",
          "12146:   if err := s.BuildBatchConfigOverride.Validate(); err != nil {",
          "12147:    invalidParams.AddNested(\"BuildBatchConfigOverride\", err.(request.ErrInvalidParams))",
          "12148:   }",
          "12149:  }",
          "12150:  if s.CacheOverride != nil {",
          "12151:   if err := s.CacheOverride.Validate(); err != nil {",
          "12152:    invalidParams.AddNested(\"CacheOverride\", err.(request.ErrInvalidParams))",
          "12153:   }",
          "12154:  }",
          "12155:  if s.EnvironmentVariablesOverride != nil {",
          "12156:   for i, v := range s.EnvironmentVariablesOverride {",
          "12157:    if v == nil {",
          "12158:     continue",
          "12159:    }",
          "12160:    if err := v.Validate(); err != nil {",
          "12161:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"EnvironmentVariablesOverride\", i), err.(request.ErrInvalidParams))",
          "12162:    }",
          "12163:   }",
          "12164:  }",
          "12165:  if s.GitSubmodulesConfigOverride != nil {",
          "12166:   if err := s.GitSubmodulesConfigOverride.Validate(); err != nil {",
          "12167:    invalidParams.AddNested(\"GitSubmodulesConfigOverride\", err.(request.ErrInvalidParams))",
          "12168:   }",
          "12169:  }",
          "12170:  if s.LogsConfigOverride != nil {",
          "12171:   if err := s.LogsConfigOverride.Validate(); err != nil {",
          "12172:    invalidParams.AddNested(\"LogsConfigOverride\", err.(request.ErrInvalidParams))",
          "12173:   }",
          "12174:  }",
          "12175:  if s.RegistryCredentialOverride != nil {",
          "12176:   if err := s.RegistryCredentialOverride.Validate(); err != nil {",
          "12177:    invalidParams.AddNested(\"RegistryCredentialOverride\", err.(request.ErrInvalidParams))",
          "12178:   }",
          "12179:  }",
          "12180:  if s.SecondaryArtifactsOverride != nil {",
          "12181:   for i, v := range s.SecondaryArtifactsOverride {",
          "12182:    if v == nil {",
          "12183:     continue",
          "12184:    }",
          "12185:    if err := v.Validate(); err != nil {",
          "12186:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"SecondaryArtifactsOverride\", i), err.(request.ErrInvalidParams))",
          "12187:    }",
          "12188:   }",
          "12189:  }",
          "12190:  if s.SecondarySourcesOverride != nil {",
          "12191:   for i, v := range s.SecondarySourcesOverride {",
          "12192:    if v == nil {",
          "12193:     continue",
          "12194:    }",
          "12195:    if err := v.Validate(); err != nil {",
          "12196:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"SecondarySourcesOverride\", i), err.(request.ErrInvalidParams))",
          "12197:    }",
          "12198:   }",
          "12199:  }",
          "12200:  if s.SecondarySourcesVersionOverride != nil {",
          "12201:   for i, v := range s.SecondarySourcesVersionOverride {",
          "12202:    if v == nil {",
          "12203:     continue",
          "12204:    }",
          "12205:    if err := v.Validate(); err != nil {",
          "12206:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"SecondarySourcesVersionOverride\", i), err.(request.ErrInvalidParams))",
          "12207:    }",
          "12208:   }",
          "12209:  }",
          "12210:  if s.SourceAuthOverride != nil {",
          "12211:   if err := s.SourceAuthOverride.Validate(); err != nil {",
          "12212:    invalidParams.AddNested(\"SourceAuthOverride\", err.(request.ErrInvalidParams))",
          "12213:   }",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "9098:  return nil",
          "9099: }",
          "9104:  return s",
          "9105: }",
          "9110:  return s",
          "9111: }",
          "9116:  return s",
          "9117: }",
          "9143: }",
          "9148: }",
          "9153: }",
          "9169: }",
          "9174:  return s",
          "9175: }",
          "9180:  return s",
          "9181: }",
          "9186:  return s",
          "9187: }",
          "9192:  return s",
          "9193: }",
          "9198:  return s",
          "9199: }",
          "9220: }",
          "9225: }",
          "9230: }",
          "9243: }",
          "9248:  return s",
          "9249: }",
          "9254:  return s",
          "9255: }",
          "9260:  _ struct{} `type:\"structure\"`",
          "9272: }",
          "9276:  return awsutil.Prettify(s)",
          "9277: }",
          "9281:  return s.String()",
          "9282: }",
          "9299:  return s",
          "9300: }",
          "",
          "[Removed Lines]",
          "9102: func (s *S3LogsConfig) SetEncryptionDisabled(v bool) *S3LogsConfig {",
          "9103:  s.EncryptionDisabled = &v",
          "9108: func (s *S3LogsConfig) SetLocation(v string) *S3LogsConfig {",
          "9109:  s.Location = &v",
          "9114: func (s *S3LogsConfig) SetStatus(v string) *S3LogsConfig {",
          "9115:  s.Status = &v",
          "9120: type S3ReportExportConfig struct {",
          "9121:  _ struct{} `type:\"structure\"`",
          "9124:  Bucket *string `locationName:\"bucket\" min:\"1\" type:\"string\"`",
          "9127:  EncryptionDisabled *bool `locationName:\"encryptionDisabled\" type:\"boolean\"`",
          "9130:  EncryptionKey *string `locationName:\"encryptionKey\" min:\"1\" type:\"string\"`",
          "9139:  Packaging *string `locationName:\"packaging\" type:\"string\" enum:\"ReportPackagingType\"`",
          "9142:  Path *string `locationName:\"path\" type:\"string\"`",
          "9146: func (s S3ReportExportConfig) String() string {",
          "9147:  return awsutil.Prettify(s)",
          "9151: func (s S3ReportExportConfig) GoString() string {",
          "9152:  return s.String()",
          "9156: func (s *S3ReportExportConfig) Validate() error {",
          "9157:  invalidParams := request.ErrInvalidParams{Context: \"S3ReportExportConfig\"}",
          "9158:  if s.Bucket != nil && len(*s.Bucket) < 1 {",
          "9159:   invalidParams.Add(request.NewErrParamMinLen(\"Bucket\", 1))",
          "9160:  }",
          "9161:  if s.EncryptionKey != nil && len(*s.EncryptionKey) < 1 {",
          "9162:   invalidParams.Add(request.NewErrParamMinLen(\"EncryptionKey\", 1))",
          "9163:  }",
          "9165:  if invalidParams.Len() > 0 {",
          "9166:   return invalidParams",
          "9167:  }",
          "9168:  return nil",
          "9172: func (s *S3ReportExportConfig) SetBucket(v string) *S3ReportExportConfig {",
          "9173:  s.Bucket = &v",
          "9178: func (s *S3ReportExportConfig) SetEncryptionDisabled(v bool) *S3ReportExportConfig {",
          "9179:  s.EncryptionDisabled = &v",
          "9184: func (s *S3ReportExportConfig) SetEncryptionKey(v string) *S3ReportExportConfig {",
          "9185:  s.EncryptionKey = &v",
          "9190: func (s *S3ReportExportConfig) SetPackaging(v string) *S3ReportExportConfig {",
          "9191:  s.Packaging = &v",
          "9196: func (s *S3ReportExportConfig) SetPath(v string) *S3ReportExportConfig {",
          "9197:  s.Path = &v",
          "9206: type SourceAuth struct {",
          "9207:  _ struct{} `type:\"structure\"`",
          "9210:  Resource *string `locationName:\"resource\" type:\"string\"`",
          "9219:  Type *string `locationName:\"type\" type:\"string\" required:\"true\" enum:\"SourceAuthType\"`",
          "9223: func (s SourceAuth) String() string {",
          "9224:  return awsutil.Prettify(s)",
          "9228: func (s SourceAuth) GoString() string {",
          "9229:  return s.String()",
          "9233: func (s *SourceAuth) Validate() error {",
          "9234:  invalidParams := request.ErrInvalidParams{Context: \"SourceAuth\"}",
          "9235:  if s.Type == nil {",
          "9236:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "9237:  }",
          "9239:  if invalidParams.Len() > 0 {",
          "9240:   return invalidParams",
          "9241:  }",
          "9242:  return nil",
          "9246: func (s *SourceAuth) SetResource(v string) *SourceAuth {",
          "9247:  s.Resource = &v",
          "9252: func (s *SourceAuth) SetType(v string) *SourceAuth {",
          "9253:  s.Type = &v",
          "9259: type SourceCredentialsInfo struct {",
          "9263:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "9267:  AuthType *string `locationName:\"authType\" type:\"string\" enum:\"AuthType\"`",
          "9271:  ServerType *string `locationName:\"serverType\" type:\"string\" enum:\"ServerType\"`",
          "9275: func (s SourceCredentialsInfo) String() string {",
          "9280: func (s SourceCredentialsInfo) GoString() string {",
          "9285: func (s *SourceCredentialsInfo) SetArn(v string) *SourceCredentialsInfo {",
          "9286:  s.Arn = &v",
          "9287:  return s",
          "9288: }",
          "9291: func (s *SourceCredentialsInfo) SetAuthType(v string) *SourceCredentialsInfo {",
          "9292:  s.AuthType = &v",
          "9293:  return s",
          "9294: }",
          "9297: func (s *SourceCredentialsInfo) SetServerType(v string) *SourceCredentialsInfo {",
          "9298:  s.ServerType = &v",
          "",
          "[Added Lines]",
          "12223: func (s *StartBuildBatchInput) SetArtifactsOverride(v *ProjectArtifacts) *StartBuildBatchInput {",
          "12224:  s.ArtifactsOverride = v",
          "12229: func (s *StartBuildBatchInput) SetBuildBatchConfigOverride(v *ProjectBuildBatchConfig) *StartBuildBatchInput {",
          "12230:  s.BuildBatchConfigOverride = v",
          "12235: func (s *StartBuildBatchInput) SetBuildTimeoutInMinutesOverride(v int64) *StartBuildBatchInput {",
          "12236:  s.BuildTimeoutInMinutesOverride = &v",
          "12241: func (s *StartBuildBatchInput) SetBuildspecOverride(v string) *StartBuildBatchInput {",
          "12242:  s.BuildspecOverride = &v",
          "12243:  return s",
          "12244: }",
          "12247: func (s *StartBuildBatchInput) SetCacheOverride(v *ProjectCache) *StartBuildBatchInput {",
          "12248:  s.CacheOverride = v",
          "12249:  return s",
          "12250: }",
          "12253: func (s *StartBuildBatchInput) SetCertificateOverride(v string) *StartBuildBatchInput {",
          "12254:  s.CertificateOverride = &v",
          "12255:  return s",
          "12256: }",
          "12259: func (s *StartBuildBatchInput) SetComputeTypeOverride(v string) *StartBuildBatchInput {",
          "12260:  s.ComputeTypeOverride = &v",
          "12261:  return s",
          "12262: }",
          "12265: func (s *StartBuildBatchInput) SetEncryptionKeyOverride(v string) *StartBuildBatchInput {",
          "12266:  s.EncryptionKeyOverride = &v",
          "12267:  return s",
          "12268: }",
          "12271: func (s *StartBuildBatchInput) SetEnvironmentTypeOverride(v string) *StartBuildBatchInput {",
          "12272:  s.EnvironmentTypeOverride = &v",
          "12273:  return s",
          "12277: func (s *StartBuildBatchInput) SetEnvironmentVariablesOverride(v []*EnvironmentVariable) *StartBuildBatchInput {",
          "12278:  s.EnvironmentVariablesOverride = v",
          "12279:  return s",
          "12280: }",
          "12283: func (s *StartBuildBatchInput) SetGitCloneDepthOverride(v int64) *StartBuildBatchInput {",
          "12284:  s.GitCloneDepthOverride = &v",
          "12285:  return s",
          "12286: }",
          "12289: func (s *StartBuildBatchInput) SetGitSubmodulesConfigOverride(v *GitSubmodulesConfig) *StartBuildBatchInput {",
          "12290:  s.GitSubmodulesConfigOverride = v",
          "12291:  return s",
          "12292: }",
          "12295: func (s *StartBuildBatchInput) SetIdempotencyToken(v string) *StartBuildBatchInput {",
          "12296:  s.IdempotencyToken = &v",
          "12297:  return s",
          "12301: func (s *StartBuildBatchInput) SetImageOverride(v string) *StartBuildBatchInput {",
          "12302:  s.ImageOverride = &v",
          "12303:  return s",
          "12307: func (s *StartBuildBatchInput) SetImagePullCredentialsTypeOverride(v string) *StartBuildBatchInput {",
          "12308:  s.ImagePullCredentialsTypeOverride = &v",
          "12309:  return s",
          "12310: }",
          "12313: func (s *StartBuildBatchInput) SetInsecureSslOverride(v bool) *StartBuildBatchInput {",
          "12314:  s.InsecureSslOverride = &v",
          "12315:  return s",
          "12319: func (s *StartBuildBatchInput) SetLogsConfigOverride(v *LogsConfig) *StartBuildBatchInput {",
          "12320:  s.LogsConfigOverride = v",
          "12325: func (s *StartBuildBatchInput) SetPrivilegedModeOverride(v bool) *StartBuildBatchInput {",
          "12326:  s.PrivilegedModeOverride = &v",
          "12331: func (s *StartBuildBatchInput) SetProjectName(v string) *StartBuildBatchInput {",
          "12332:  s.ProjectName = &v",
          "12337: func (s *StartBuildBatchInput) SetQueuedTimeoutInMinutesOverride(v int64) *StartBuildBatchInput {",
          "12338:  s.QueuedTimeoutInMinutesOverride = &v",
          "12343: func (s *StartBuildBatchInput) SetRegistryCredentialOverride(v *RegistryCredential) *StartBuildBatchInput {",
          "12344:  s.RegistryCredentialOverride = v",
          "12349: func (s *StartBuildBatchInput) SetReportBuildBatchStatusOverride(v bool) *StartBuildBatchInput {",
          "12350:  s.ReportBuildBatchStatusOverride = &v",
          "12351:  return s",
          "12352: }",
          "12355: func (s *StartBuildBatchInput) SetSecondaryArtifactsOverride(v []*ProjectArtifacts) *StartBuildBatchInput {",
          "12356:  s.SecondaryArtifactsOverride = v",
          "12357:  return s",
          "12358: }",
          "12361: func (s *StartBuildBatchInput) SetSecondarySourcesOverride(v []*ProjectSource) *StartBuildBatchInput {",
          "12362:  s.SecondarySourcesOverride = v",
          "12363:  return s",
          "12367: func (s *StartBuildBatchInput) SetSecondarySourcesVersionOverride(v []*ProjectSourceVersion) *StartBuildBatchInput {",
          "12368:  s.SecondarySourcesVersionOverride = v",
          "12369:  return s",
          "12373: func (s *StartBuildBatchInput) SetServiceRoleOverride(v string) *StartBuildBatchInput {",
          "12374:  s.ServiceRoleOverride = &v",
          "12375:  return s",
          "12379: func (s *StartBuildBatchInput) SetSourceAuthOverride(v *SourceAuth) *StartBuildBatchInput {",
          "12380:  s.SourceAuthOverride = v",
          "12381:  return s",
          "12382: }",
          "12385: func (s *StartBuildBatchInput) SetSourceLocationOverride(v string) *StartBuildBatchInput {",
          "12386:  s.SourceLocationOverride = &v",
          "12387:  return s",
          "12391: func (s *StartBuildBatchInput) SetSourceTypeOverride(v string) *StartBuildBatchInput {",
          "12392:  s.SourceTypeOverride = &v",
          "12397: func (s *StartBuildBatchInput) SetSourceVersion(v string) *StartBuildBatchInput {",
          "12398:  s.SourceVersion = &v",
          "12402: type StartBuildBatchOutput struct {",
          "12406:  BuildBatch *BuildBatch `locationName:\"buildBatch\" type:\"structure\"`",
          "12410: func (s StartBuildBatchOutput) String() string {",
          "12415: func (s StartBuildBatchOutput) GoString() string {",
          "12420: func (s *StartBuildBatchOutput) SetBuildBatch(v *BuildBatch) *StartBuildBatchOutput {",
          "12421:  s.BuildBatch = v",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "9804:  return s",
          "9805: }",
          "9807: type StopBuildInput struct {",
          "9808:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12940: type StopBuildBatchInput struct {",
          "12941:  _ struct{} `type:\"structure\"`",
          "12946:  Id *string `locationName:\"id\" min:\"1\" type:\"string\" required:\"true\"`",
          "12947: }",
          "12950: func (s StopBuildBatchInput) String() string {",
          "12951:  return awsutil.Prettify(s)",
          "12952: }",
          "12955: func (s StopBuildBatchInput) GoString() string {",
          "12956:  return s.String()",
          "12957: }",
          "12960: func (s *StopBuildBatchInput) Validate() error {",
          "12961:  invalidParams := request.ErrInvalidParams{Context: \"StopBuildBatchInput\"}",
          "12962:  if s.Id == nil {",
          "12963:   invalidParams.Add(request.NewErrParamRequired(\"Id\"))",
          "12964:  }",
          "12965:  if s.Id != nil && len(*s.Id) < 1 {",
          "12966:   invalidParams.Add(request.NewErrParamMinLen(\"Id\", 1))",
          "12967:  }",
          "12969:  if invalidParams.Len() > 0 {",
          "12970:   return invalidParams",
          "12971:  }",
          "12972:  return nil",
          "12973: }",
          "12976: func (s *StopBuildBatchInput) SetId(v string) *StopBuildBatchInput {",
          "12977:  s.Id = &v",
          "12978:  return s",
          "12979: }",
          "12981: type StopBuildBatchOutput struct {",
          "12982:  _ struct{} `type:\"structure\"`",
          "12985:  BuildBatch *BuildBatch `locationName:\"buildBatch\" type:\"structure\"`",
          "12986: }",
          "12989: func (s StopBuildBatchOutput) String() string {",
          "12990:  return awsutil.Prettify(s)",
          "12991: }",
          "12994: func (s StopBuildBatchOutput) GoString() string {",
          "12995:  return s.String()",
          "12996: }",
          "12999: func (s *StopBuildBatchOutput) SetBuildBatch(v *BuildBatch) *StopBuildBatchOutput {",
          "13000:  s.BuildBatch = v",
          "13001:  return s",
          "13002: }",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "10095:  BadgeEnabled *bool `locationName:\"badgeEnabled\" type:\"boolean\"`",
          "10099:  Cache *ProjectCache `locationName:\"cache\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13295:  BuildBatchConfig *ProjectBuildBatchConfig `locationName:\"buildBatchConfig\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "10230:    invalidParams.AddNested(\"Artifacts\", err.(request.ErrInvalidParams))",
          "10231:   }",
          "10232:  }",
          "10233:  if s.Cache != nil {",
          "10234:   if err := s.Cache.Validate(); err != nil {",
          "10235:    invalidParams.AddNested(\"Cache\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13433:  if s.BuildBatchConfig != nil {",
          "13434:   if err := s.BuildBatchConfig.Validate(); err != nil {",
          "13435:    invalidParams.AddNested(\"BuildBatchConfig\", err.(request.ErrInvalidParams))",
          "13436:   }",
          "13437:  }",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "10314:  return s",
          "10315: }",
          "10318: func (s *UpdateProjectInput) SetCache(v *ProjectCache) *UpdateProjectInput {",
          "10319:  s.Cache = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13523: func (s *UpdateProjectInput) SetBuildBatchConfig(v *ProjectBuildBatchConfig) *UpdateProjectInput {",
          "13524:  s.BuildBatchConfig = v",
          "13525:  return s",
          "13526: }",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "10555:  BranchFilter *string `locationName:\"branchFilter\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13769:  BuildType *string `locationName:\"buildType\" type:\"string\" enum:\"WebhookBuildType\"`",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "10602:  return s",
          "10603: }",
          "10606: func (s *UpdateWebhookInput) SetFilterGroups(v [][]*WebhookFilter) *UpdateWebhookInput {",
          "10607:  s.FilterGroups = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13820: func (s *UpdateWebhookInput) SetBuildType(v string) *UpdateWebhookInput {",
          "13821:  s.BuildType = &v",
          "13822:  return s",
          "13823: }",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "10713:  BranchFilter *string `locationName:\"branchFilter\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13936:  BuildType *string `locationName:\"buildType\" type:\"string\" enum:\"WebhookBuildType\"`",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "10752:  return s",
          "10753: }",
          "10756: func (s *Webhook) SetFilterGroups(v [][]*WebhookFilter) *Webhook {",
          "10757:  s.FilterGroups = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13979: func (s *Webhook) SetBuildType(v string) *Webhook {",
          "13980:  s.BuildType = &v",
          "13981:  return s",
          "13982: }",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "10926:  AuthTypePersonalAccessToken = \"PERSONAL_ACCESS_TOKEN\"",
          "10927: )",
          "10929: const (",
          "10931:  BuildPhaseTypeSubmitted = \"SUBMITTED\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14158: const (",
          "14160:  BuildBatchPhaseTypeSubmitted = \"SUBMITTED\"",
          "14163:  BuildBatchPhaseTypeDownloadBatchspec = \"DOWNLOAD_BATCHSPEC\"",
          "14166:  BuildBatchPhaseTypeInProgress = \"IN_PROGRESS\"",
          "14169:  BuildBatchPhaseTypeCombineArtifacts = \"COMBINE_ARTIFACTS\"",
          "14172:  BuildBatchPhaseTypeSucceeded = \"SUCCEEDED\"",
          "14175:  BuildBatchPhaseTypeFailed = \"FAILED\"",
          "14178:  BuildBatchPhaseTypeStopped = \"STOPPED\"",
          "14179: )",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "11108:  ProjectSortByTypeLastModifiedTime = \"LAST_MODIFIED_TIME\"",
          "11109: )",
          "11111: const (",
          "11113:  ReportExportConfigTypeS3 = \"S3\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14363: const (",
          "14365:  ReportCodeCoverageSortByTypeLineCoveragePercentage = \"LINE_COVERAGE_PERCENTAGE\"",
          "14368:  ReportCodeCoverageSortByTypeFilePath = \"FILE_PATH\"",
          "14369: )",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "11155: const (",
          "11157:  ReportTypeTest = \"TEST\"",
          "11158: )",
          "11160: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14420:  ReportTypeCodeCoverage = \"CODE_COVERAGE\"",
          "14421: )",
          "14423: const (",
          "14425:  RetryBuildBatchTypeRetryAllBuilds = \"RETRY_ALL_BUILDS\"",
          "14428:  RetryBuildBatchTypeRetryFailedBuilds = \"RETRY_FAILED_BUILDS\"",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "11232:  StatusTypeStopped = \"STOPPED\"",
          "11233: )",
          "11235: const (",
          "11237:  WebhookFilterTypeEvent = \"EVENT\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14506: const (",
          "14508:  WebhookBuildTypeBuild = \"BUILD\"",
          "14511:  WebhookBuildTypeBuildBatch = \"BUILD_BATCH\"",
          "14512: )",
          "",
          "---------------"
        ],
        "service/codebuild/codebuildiface/interface.go||service/codebuild/codebuildiface/interface.go": [
          "File: service/codebuild/codebuildiface/interface.go -> service/codebuild/codebuildiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:  BatchDeleteBuildsWithContext(aws.Context, *codebuild.BatchDeleteBuildsInput, ...request.Option) (*codebuild.BatchDeleteBuildsOutput, error)",
          "65:  BatchDeleteBuildsRequest(*codebuild.BatchDeleteBuildsInput) (*request.Request, *codebuild.BatchDeleteBuildsOutput)",
          "67:  BatchGetBuilds(*codebuild.BatchGetBuildsInput) (*codebuild.BatchGetBuildsOutput, error)",
          "68:  BatchGetBuildsWithContext(aws.Context, *codebuild.BatchGetBuildsInput, ...request.Option) (*codebuild.BatchGetBuildsOutput, error)",
          "69:  BatchGetBuildsRequest(*codebuild.BatchGetBuildsInput) (*request.Request, *codebuild.BatchGetBuildsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:  BatchGetBuildBatches(*codebuild.BatchGetBuildBatchesInput) (*codebuild.BatchGetBuildBatchesOutput, error)",
          "68:  BatchGetBuildBatchesWithContext(aws.Context, *codebuild.BatchGetBuildBatchesInput, ...request.Option) (*codebuild.BatchGetBuildBatchesOutput, error)",
          "69:  BatchGetBuildBatchesRequest(*codebuild.BatchGetBuildBatchesInput) (*request.Request, *codebuild.BatchGetBuildBatchesOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "92:  CreateWebhookWithContext(aws.Context, *codebuild.CreateWebhookInput, ...request.Option) (*codebuild.CreateWebhookOutput, error)",
          "93:  CreateWebhookRequest(*codebuild.CreateWebhookInput) (*request.Request, *codebuild.CreateWebhookOutput)",
          "95:  DeleteProject(*codebuild.DeleteProjectInput) (*codebuild.DeleteProjectOutput, error)",
          "96:  DeleteProjectWithContext(aws.Context, *codebuild.DeleteProjectInput, ...request.Option) (*codebuild.DeleteProjectOutput, error)",
          "97:  DeleteProjectRequest(*codebuild.DeleteProjectInput) (*request.Request, *codebuild.DeleteProjectOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "99:  DeleteBuildBatch(*codebuild.DeleteBuildBatchInput) (*codebuild.DeleteBuildBatchOutput, error)",
          "100:  DeleteBuildBatchWithContext(aws.Context, *codebuild.DeleteBuildBatchInput, ...request.Option) (*codebuild.DeleteBuildBatchOutput, error)",
          "101:  DeleteBuildBatchRequest(*codebuild.DeleteBuildBatchInput) (*request.Request, *codebuild.DeleteBuildBatchOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "116:  DeleteWebhookWithContext(aws.Context, *codebuild.DeleteWebhookInput, ...request.Option) (*codebuild.DeleteWebhookOutput, error)",
          "117:  DeleteWebhookRequest(*codebuild.DeleteWebhookInput) (*request.Request, *codebuild.DeleteWebhookOutput)",
          "119:  DescribeTestCases(*codebuild.DescribeTestCasesInput) (*codebuild.DescribeTestCasesOutput, error)",
          "120:  DescribeTestCasesWithContext(aws.Context, *codebuild.DescribeTestCasesInput, ...request.Option) (*codebuild.DescribeTestCasesOutput, error)",
          "121:  DescribeTestCasesRequest(*codebuild.DescribeTestCasesInput) (*request.Request, *codebuild.DescribeTestCasesOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "127:  DescribeCodeCoverages(*codebuild.DescribeCodeCoveragesInput) (*codebuild.DescribeCodeCoveragesOutput, error)",
          "128:  DescribeCodeCoveragesWithContext(aws.Context, *codebuild.DescribeCodeCoveragesInput, ...request.Option) (*codebuild.DescribeCodeCoveragesOutput, error)",
          "129:  DescribeCodeCoveragesRequest(*codebuild.DescribeCodeCoveragesInput) (*request.Request, *codebuild.DescribeCodeCoveragesOutput)",
          "131:  DescribeCodeCoveragesPages(*codebuild.DescribeCodeCoveragesInput, func(*codebuild.DescribeCodeCoveragesOutput, bool) bool) error",
          "132:  DescribeCodeCoveragesPagesWithContext(aws.Context, *codebuild.DescribeCodeCoveragesInput, func(*codebuild.DescribeCodeCoveragesOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "135:  InvalidateProjectCacheWithContext(aws.Context, *codebuild.InvalidateProjectCacheInput, ...request.Option) (*codebuild.InvalidateProjectCacheOutput, error)",
          "136:  InvalidateProjectCacheRequest(*codebuild.InvalidateProjectCacheInput) (*request.Request, *codebuild.InvalidateProjectCacheOutput)",
          "138:  ListBuilds(*codebuild.ListBuildsInput) (*codebuild.ListBuildsOutput, error)",
          "139:  ListBuildsWithContext(aws.Context, *codebuild.ListBuildsInput, ...request.Option) (*codebuild.ListBuildsOutput, error)",
          "140:  ListBuildsRequest(*codebuild.ListBuildsInput) (*request.Request, *codebuild.ListBuildsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "153:  ListBuildBatches(*codebuild.ListBuildBatchesInput) (*codebuild.ListBuildBatchesOutput, error)",
          "154:  ListBuildBatchesWithContext(aws.Context, *codebuild.ListBuildBatchesInput, ...request.Option) (*codebuild.ListBuildBatchesOutput, error)",
          "155:  ListBuildBatchesRequest(*codebuild.ListBuildBatchesInput) (*request.Request, *codebuild.ListBuildBatchesOutput)",
          "157:  ListBuildBatchesPages(*codebuild.ListBuildBatchesInput, func(*codebuild.ListBuildBatchesOutput, bool) bool) error",
          "158:  ListBuildBatchesPagesWithContext(aws.Context, *codebuild.ListBuildBatchesInput, func(*codebuild.ListBuildBatchesOutput, bool) bool, ...request.Option) error",
          "160:  ListBuildBatchesForProject(*codebuild.ListBuildBatchesForProjectInput) (*codebuild.ListBuildBatchesForProjectOutput, error)",
          "161:  ListBuildBatchesForProjectWithContext(aws.Context, *codebuild.ListBuildBatchesForProjectInput, ...request.Option) (*codebuild.ListBuildBatchesForProjectOutput, error)",
          "162:  ListBuildBatchesForProjectRequest(*codebuild.ListBuildBatchesForProjectInput) (*request.Request, *codebuild.ListBuildBatchesForProjectOutput)",
          "164:  ListBuildBatchesForProjectPages(*codebuild.ListBuildBatchesForProjectInput, func(*codebuild.ListBuildBatchesForProjectOutput, bool) bool) error",
          "165:  ListBuildBatchesForProjectPagesWithContext(aws.Context, *codebuild.ListBuildBatchesForProjectInput, func(*codebuild.ListBuildBatchesForProjectOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "203:  PutResourcePolicyWithContext(aws.Context, *codebuild.PutResourcePolicyInput, ...request.Option) (*codebuild.PutResourcePolicyOutput, error)",
          "204:  PutResourcePolicyRequest(*codebuild.PutResourcePolicyInput) (*request.Request, *codebuild.PutResourcePolicyOutput)",
          "206:  StartBuild(*codebuild.StartBuildInput) (*codebuild.StartBuildOutput, error)",
          "207:  StartBuildWithContext(aws.Context, *codebuild.StartBuildInput, ...request.Option) (*codebuild.StartBuildOutput, error)",
          "208:  StartBuildRequest(*codebuild.StartBuildInput) (*request.Request, *codebuild.StartBuildOutput)",
          "210:  StopBuild(*codebuild.StopBuildInput) (*codebuild.StopBuildOutput, error)",
          "211:  StopBuildWithContext(aws.Context, *codebuild.StopBuildInput, ...request.Option) (*codebuild.StopBuildOutput, error)",
          "212:  StopBuildRequest(*codebuild.StopBuildInput) (*request.Request, *codebuild.StopBuildOutput)",
          "214:  UpdateProject(*codebuild.UpdateProjectInput) (*codebuild.UpdateProjectOutput, error)",
          "215:  UpdateProjectWithContext(aws.Context, *codebuild.UpdateProjectInput, ...request.Option) (*codebuild.UpdateProjectOutput, error)",
          "216:  UpdateProjectRequest(*codebuild.UpdateProjectInput) (*request.Request, *codebuild.UpdateProjectOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "235:  RetryBuild(*codebuild.RetryBuildInput) (*codebuild.RetryBuildOutput, error)",
          "236:  RetryBuildWithContext(aws.Context, *codebuild.RetryBuildInput, ...request.Option) (*codebuild.RetryBuildOutput, error)",
          "237:  RetryBuildRequest(*codebuild.RetryBuildInput) (*request.Request, *codebuild.RetryBuildOutput)",
          "239:  RetryBuildBatch(*codebuild.RetryBuildBatchInput) (*codebuild.RetryBuildBatchOutput, error)",
          "240:  RetryBuildBatchWithContext(aws.Context, *codebuild.RetryBuildBatchInput, ...request.Option) (*codebuild.RetryBuildBatchOutput, error)",
          "241:  RetryBuildBatchRequest(*codebuild.RetryBuildBatchInput) (*request.Request, *codebuild.RetryBuildBatchOutput)",
          "247:  StartBuildBatch(*codebuild.StartBuildBatchInput) (*codebuild.StartBuildBatchOutput, error)",
          "248:  StartBuildBatchWithContext(aws.Context, *codebuild.StartBuildBatchInput, ...request.Option) (*codebuild.StartBuildBatchOutput, error)",
          "249:  StartBuildBatchRequest(*codebuild.StartBuildBatchInput) (*request.Request, *codebuild.StartBuildBatchOutput)",
          "255:  StopBuildBatch(*codebuild.StopBuildBatchInput) (*codebuild.StopBuildBatchOutput, error)",
          "256:  StopBuildBatchWithContext(aws.Context, *codebuild.StopBuildBatchInput, ...request.Option) (*codebuild.StopBuildBatchOutput, error)",
          "257:  StopBuildBatchRequest(*codebuild.StopBuildBatchInput) (*request.Request, *codebuild.StopBuildBatchOutput)",
          "",
          "---------------"
        ],
        "service/ec2/api.go||service/ec2/api.go": [
          "File: service/ec2/api.go -> service/ec2/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "112575:  CapacityReservationInstancePlatformLinuxwithSqlserverEnterprise = \"Linux with SQL Server Enterprise\"",
          "112576: )",
          "112578: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "112578:  CapacityReservationInstancePlatformWindowsByol = \"Windows BYOL\"",
          "",
          "---------------"
        ],
        "service/guardduty/api.go||service/guardduty/api.go": [
          "File: service/guardduty/api.go -> service/guardduty/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2759:  return out, req.Send()",
          "2760: }",
          "2762: const opInviteMembers = \"InviteMembers\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2772: const opGetUsageStatistics = \"GetUsageStatistics\"",
          "2798: func (c *GuardDuty) GetUsageStatisticsRequest(input *GetUsageStatisticsInput) (req *request.Request, output *GetUsageStatisticsOutput) {",
          "2799:  op := &request.Operation{",
          "2800:   Name:       opGetUsageStatistics,",
          "2801:   HTTPMethod: \"POST\",",
          "2802:   HTTPPath:   \"/detector/{detectorId}/usage/statistics\",",
          "2803:   Paginator: &request.Paginator{",
          "2804:    InputTokens:     []string{\"NextToken\"},",
          "2805:    OutputTokens:    []string{\"NextToken\"},",
          "2806:    LimitToken:      \"MaxResults\",",
          "2807:    TruncationToken: \"\",",
          "2808:   },",
          "2809:  }",
          "2811:  if input == nil {",
          "2812:   input = &GetUsageStatisticsInput{}",
          "2813:  }",
          "2815:  output = &GetUsageStatisticsOutput{}",
          "2816:  req = c.newRequest(op, input, output)",
          "2817:  return",
          "2818: }",
          "2844: func (c *GuardDuty) GetUsageStatistics(input *GetUsageStatisticsInput) (*GetUsageStatisticsOutput, error) {",
          "2845:  req, out := c.GetUsageStatisticsRequest(input)",
          "2846:  return out, req.Send()",
          "2847: }",
          "2858: func (c *GuardDuty) GetUsageStatisticsWithContext(ctx aws.Context, input *GetUsageStatisticsInput, opts ...request.Option) (*GetUsageStatisticsOutput, error) {",
          "2859:  req, out := c.GetUsageStatisticsRequest(input)",
          "2860:  req.SetContext(ctx)",
          "2861:  req.ApplyOptions(opts...)",
          "2862:  return out, req.Send()",
          "2863: }",
          "2882: func (c *GuardDuty) GetUsageStatisticsPages(input *GetUsageStatisticsInput, fn func(*GetUsageStatisticsOutput, bool) bool) error {",
          "2883:  return c.GetUsageStatisticsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2884: }",
          "2893: func (c *GuardDuty) GetUsageStatisticsPagesWithContext(ctx aws.Context, input *GetUsageStatisticsInput, fn func(*GetUsageStatisticsOutput, bool) bool, opts ...request.Option) error {",
          "2894:  p := request.Pagination{",
          "2895:   NewRequest: func() (*request.Request, error) {",
          "2896:    var inCpy *GetUsageStatisticsInput",
          "2897:    if input != nil {",
          "2898:     tmp := *input",
          "2899:     inCpy = &tmp",
          "2900:    }",
          "2901:    req, _ := c.GetUsageStatisticsRequest(inCpy)",
          "2902:    req.SetContext(ctx)",
          "2903:    req.ApplyOptions(opts...)",
          "2904:    return req, nil",
          "2905:   },",
          "2906:  }",
          "2908:  for p.Next() {",
          "2909:   if !fn(p.Page().(*GetUsageStatisticsOutput), !p.HasNextPage()) {",
          "2910:    break",
          "2911:   }",
          "2912:  }",
          "2914:  return p.Err()",
          "2915: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9727:  return s",
          "9728: }",
          "9731: type IamInstanceProfile struct {",
          "9732:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9885: type GetUsageStatisticsInput struct {",
          "9886:  _ struct{} `type:\"structure\"`",
          "9892:  DetectorId *string `location:\"uri\" locationName:\"detectorId\" min:\"1\" type:\"string\" required:\"true\"`",
          "9895:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "9901:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "9905:  Unit *string `locationName:\"unit\" type:\"string\"`",
          "9910:  UsageCriteria *UsageCriteria `locationName:\"usageCriteria\" type:\"structure\" required:\"true\"`",
          "9915:  UsageStatisticType *string `locationName:\"usageStatisticsType\" type:\"string\" required:\"true\" enum:\"UsageStatisticType\"`",
          "9916: }",
          "9919: func (s GetUsageStatisticsInput) String() string {",
          "9920:  return awsutil.Prettify(s)",
          "9921: }",
          "9924: func (s GetUsageStatisticsInput) GoString() string {",
          "9925:  return s.String()",
          "9926: }",
          "9929: func (s *GetUsageStatisticsInput) Validate() error {",
          "9930:  invalidParams := request.ErrInvalidParams{Context: \"GetUsageStatisticsInput\"}",
          "9931:  if s.DetectorId == nil {",
          "9932:   invalidParams.Add(request.NewErrParamRequired(\"DetectorId\"))",
          "9933:  }",
          "9934:  if s.DetectorId != nil && len(*s.DetectorId) < 1 {",
          "9935:   invalidParams.Add(request.NewErrParamMinLen(\"DetectorId\", 1))",
          "9936:  }",
          "9937:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "9938:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "9939:  }",
          "9940:  if s.UsageCriteria == nil {",
          "9941:   invalidParams.Add(request.NewErrParamRequired(\"UsageCriteria\"))",
          "9942:  }",
          "9943:  if s.UsageStatisticType == nil {",
          "9944:   invalidParams.Add(request.NewErrParamRequired(\"UsageStatisticType\"))",
          "9945:  }",
          "9946:  if s.UsageCriteria != nil {",
          "9947:   if err := s.UsageCriteria.Validate(); err != nil {",
          "9948:    invalidParams.AddNested(\"UsageCriteria\", err.(request.ErrInvalidParams))",
          "9949:   }",
          "9950:  }",
          "9952:  if invalidParams.Len() > 0 {",
          "9953:   return invalidParams",
          "9954:  }",
          "9955:  return nil",
          "9956: }",
          "9959: func (s *GetUsageStatisticsInput) SetDetectorId(v string) *GetUsageStatisticsInput {",
          "9960:  s.DetectorId = &v",
          "9961:  return s",
          "9962: }",
          "9965: func (s *GetUsageStatisticsInput) SetMaxResults(v int64) *GetUsageStatisticsInput {",
          "9966:  s.MaxResults = &v",
          "9967:  return s",
          "9968: }",
          "9971: func (s *GetUsageStatisticsInput) SetNextToken(v string) *GetUsageStatisticsInput {",
          "9972:  s.NextToken = &v",
          "9973:  return s",
          "9974: }",
          "9977: func (s *GetUsageStatisticsInput) SetUnit(v string) *GetUsageStatisticsInput {",
          "9978:  s.Unit = &v",
          "9979:  return s",
          "9980: }",
          "9983: func (s *GetUsageStatisticsInput) SetUsageCriteria(v *UsageCriteria) *GetUsageStatisticsInput {",
          "9984:  s.UsageCriteria = v",
          "9985:  return s",
          "9986: }",
          "9989: func (s *GetUsageStatisticsInput) SetUsageStatisticType(v string) *GetUsageStatisticsInput {",
          "9990:  s.UsageStatisticType = &v",
          "9991:  return s",
          "9992: }",
          "9994: type GetUsageStatisticsOutput struct {",
          "9995:  _ struct{} `type:\"structure\"`",
          "9999:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "10003:  UsageStatistics *UsageStatistics `locationName:\"usageStatistics\" type:\"structure\"`",
          "10004: }",
          "10007: func (s GetUsageStatisticsOutput) String() string {",
          "10008:  return awsutil.Prettify(s)",
          "10009: }",
          "10012: func (s GetUsageStatisticsOutput) GoString() string {",
          "10013:  return s.String()",
          "10014: }",
          "10017: func (s *GetUsageStatisticsOutput) SetNextToken(v string) *GetUsageStatisticsOutput {",
          "10018:  s.NextToken = &v",
          "10019:  return s",
          "10020: }",
          "10023: func (s *GetUsageStatisticsOutput) SetUsageStatistics(v *UsageStatistics) *GetUsageStatisticsOutput {",
          "10024:  s.UsageStatistics = v",
          "10025:  return s",
          "10026: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "12790:  return s",
          "12791: }",
          "12793: type UnarchiveFindingsInput struct {",
          "12794:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13086: type Total struct {",
          "13087:  _ struct{} `type:\"structure\"`",
          "13090:  Amount *string `locationName:\"amount\" type:\"string\"`",
          "13093:  Unit *string `locationName:\"unit\" type:\"string\"`",
          "13094: }",
          "13097: func (s Total) String() string {",
          "13098:  return awsutil.Prettify(s)",
          "13099: }",
          "13102: func (s Total) GoString() string {",
          "13103:  return s.String()",
          "13104: }",
          "13107: func (s *Total) SetAmount(v string) *Total {",
          "13108:  s.Amount = &v",
          "13109:  return s",
          "13110: }",
          "13113: func (s *Total) SetUnit(v string) *Total {",
          "13114:  s.Unit = &v",
          "13115:  return s",
          "13116: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "13752:  return s.String()",
          "13753: }",
          "13755: const (",
          "13757:  AdminStatusEnabled = \"ENABLED\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14082: type UsageAccountResult struct {",
          "14083:  _ struct{} `type:\"structure\"`",
          "14086:  AccountId *string `locationName:\"accountId\" min:\"12\" type:\"string\"`",
          "14089:  Total *Total `locationName:\"total\" type:\"structure\"`",
          "14090: }",
          "14093: func (s UsageAccountResult) String() string {",
          "14094:  return awsutil.Prettify(s)",
          "14095: }",
          "14098: func (s UsageAccountResult) GoString() string {",
          "14099:  return s.String()",
          "14100: }",
          "14103: func (s *UsageAccountResult) SetAccountId(v string) *UsageAccountResult {",
          "14104:  s.AccountId = &v",
          "14105:  return s",
          "14106: }",
          "14109: func (s *UsageAccountResult) SetTotal(v *Total) *UsageAccountResult {",
          "14110:  s.Total = v",
          "14111:  return s",
          "14112: }",
          "14115: type UsageCriteria struct {",
          "14116:  _ struct{} `type:\"structure\"`",
          "14119:  AccountIds []*string `locationName:\"accountIds\" min:\"1\" type:\"list\"`",
          "14124:  DataSources []*string `locationName:\"dataSources\" type:\"list\" required:\"true\"`",
          "14128:  Resources []*string `locationName:\"resources\" type:\"list\"`",
          "14129: }",
          "14132: func (s UsageCriteria) String() string {",
          "14133:  return awsutil.Prettify(s)",
          "14134: }",
          "14137: func (s UsageCriteria) GoString() string {",
          "14138:  return s.String()",
          "14139: }",
          "14142: func (s *UsageCriteria) Validate() error {",
          "14143:  invalidParams := request.ErrInvalidParams{Context: \"UsageCriteria\"}",
          "14144:  if s.AccountIds != nil && len(s.AccountIds) < 1 {",
          "14145:   invalidParams.Add(request.NewErrParamMinLen(\"AccountIds\", 1))",
          "14146:  }",
          "14147:  if s.DataSources == nil {",
          "14148:   invalidParams.Add(request.NewErrParamRequired(\"DataSources\"))",
          "14149:  }",
          "14151:  if invalidParams.Len() > 0 {",
          "14152:   return invalidParams",
          "14153:  }",
          "14154:  return nil",
          "14155: }",
          "14158: func (s *UsageCriteria) SetAccountIds(v []*string) *UsageCriteria {",
          "14159:  s.AccountIds = v",
          "14160:  return s",
          "14161: }",
          "14164: func (s *UsageCriteria) SetDataSources(v []*string) *UsageCriteria {",
          "14165:  s.DataSources = v",
          "14166:  return s",
          "14167: }",
          "14170: func (s *UsageCriteria) SetResources(v []*string) *UsageCriteria {",
          "14171:  s.Resources = v",
          "14172:  return s",
          "14173: }",
          "14176: type UsageDataSourceResult struct {",
          "14177:  _ struct{} `type:\"structure\"`",
          "14180:  DataSource *string `locationName:\"dataSource\" type:\"string\" enum:\"DataSource\"`",
          "14183:  Total *Total `locationName:\"total\" type:\"structure\"`",
          "14184: }",
          "14187: func (s UsageDataSourceResult) String() string {",
          "14188:  return awsutil.Prettify(s)",
          "14189: }",
          "14192: func (s UsageDataSourceResult) GoString() string {",
          "14193:  return s.String()",
          "14194: }",
          "14197: func (s *UsageDataSourceResult) SetDataSource(v string) *UsageDataSourceResult {",
          "14198:  s.DataSource = &v",
          "14199:  return s",
          "14200: }",
          "14203: func (s *UsageDataSourceResult) SetTotal(v *Total) *UsageDataSourceResult {",
          "14204:  s.Total = v",
          "14205:  return s",
          "14206: }",
          "14209: type UsageResourceResult struct {",
          "14210:  _ struct{} `type:\"structure\"`",
          "14213:  Resource *string `locationName:\"resource\" type:\"string\"`",
          "14216:  Total *Total `locationName:\"total\" type:\"structure\"`",
          "14217: }",
          "14220: func (s UsageResourceResult) String() string {",
          "14221:  return awsutil.Prettify(s)",
          "14222: }",
          "14225: func (s UsageResourceResult) GoString() string {",
          "14226:  return s.String()",
          "14227: }",
          "14230: func (s *UsageResourceResult) SetResource(v string) *UsageResourceResult {",
          "14231:  s.Resource = &v",
          "14232:  return s",
          "14233: }",
          "14236: func (s *UsageResourceResult) SetTotal(v *Total) *UsageResourceResult {",
          "14237:  s.Total = v",
          "14238:  return s",
          "14239: }",
          "14243: type UsageStatistics struct {",
          "14244:  _ struct{} `type:\"structure\"`",
          "14247:  SumByAccount []*UsageAccountResult `locationName:\"sumByAccount\" type:\"list\"`",
          "14250:  SumByDataSource []*UsageDataSourceResult `locationName:\"sumByDataSource\" type:\"list\"`",
          "14253:  SumByResource []*UsageResourceResult `locationName:\"sumByResource\" type:\"list\"`",
          "14257:  TopResources []*UsageResourceResult `locationName:\"topResources\" type:\"list\"`",
          "14258: }",
          "14261: func (s UsageStatistics) String() string {",
          "14262:  return awsutil.Prettify(s)",
          "14263: }",
          "14266: func (s UsageStatistics) GoString() string {",
          "14267:  return s.String()",
          "14268: }",
          "14271: func (s *UsageStatistics) SetSumByAccount(v []*UsageAccountResult) *UsageStatistics {",
          "14272:  s.SumByAccount = v",
          "14273:  return s",
          "14274: }",
          "14277: func (s *UsageStatistics) SetSumByDataSource(v []*UsageDataSourceResult) *UsageStatistics {",
          "14278:  s.SumByDataSource = v",
          "14279:  return s",
          "14280: }",
          "14283: func (s *UsageStatistics) SetSumByResource(v []*UsageResourceResult) *UsageStatistics {",
          "14284:  s.SumByResource = v",
          "14285:  return s",
          "14286: }",
          "14289: func (s *UsageStatistics) SetTopResources(v []*UsageResourceResult) *UsageStatistics {",
          "14290:  s.TopResources = v",
          "14291:  return s",
          "14292: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "13760:  AdminStatusDisableInProgress = \"DISABLE_IN_PROGRESS\"",
          "13761: )",
          "13763: const (",
          "13765:  DataSourceStatusEnabled = \"ENABLED\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14302: const (",
          "14304:  DataSourceFlowLogs = \"FLOW_LOGS\"",
          "14307:  DataSourceCloudTrail = \"CLOUD_TRAIL\"",
          "14310:  DataSourceDnsLogs = \"DNS_LOGS\"",
          "14313:  DataSourceS3Logs = \"S3_LOGS\"",
          "14314: )",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "13921:  ThreatIntelSetStatusDeleted = \"DELETED\"",
          "13922: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14477: const (",
          "14479:  UsageStatisticTypeSumByAccount = \"SUM_BY_ACCOUNT\"",
          "14482:  UsageStatisticTypeSumByDataSource = \"SUM_BY_DATA_SOURCE\"",
          "14485:  UsageStatisticTypeSumByResource = \"SUM_BY_RESOURCE\"",
          "14488:  UsageStatisticTypeTopResources = \"TOP_RESOURCES\"",
          "14489: )",
          "",
          "---------------"
        ],
        "service/guardduty/guarddutyiface/interface.go||service/guardduty/guarddutyiface/interface.go": [
          "File: service/guardduty/guarddutyiface/interface.go -> service/guardduty/guarddutyiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "192:  GetThreatIntelSetWithContext(aws.Context, *guardduty.GetThreatIntelSetInput, ...request.Option) (*guardduty.GetThreatIntelSetOutput, error)",
          "193:  GetThreatIntelSetRequest(*guardduty.GetThreatIntelSetInput) (*request.Request, *guardduty.GetThreatIntelSetOutput)",
          "195:  InviteMembers(*guardduty.InviteMembersInput) (*guardduty.InviteMembersOutput, error)",
          "196:  InviteMembersWithContext(aws.Context, *guardduty.InviteMembersInput, ...request.Option) (*guardduty.InviteMembersOutput, error)",
          "197:  InviteMembersRequest(*guardduty.InviteMembersInput) (*request.Request, *guardduty.InviteMembersOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "195:  GetUsageStatistics(*guardduty.GetUsageStatisticsInput) (*guardduty.GetUsageStatisticsOutput, error)",
          "196:  GetUsageStatisticsWithContext(aws.Context, *guardduty.GetUsageStatisticsInput, ...request.Option) (*guardduty.GetUsageStatisticsOutput, error)",
          "197:  GetUsageStatisticsRequest(*guardduty.GetUsageStatisticsInput) (*request.Request, *guardduty.GetUsageStatisticsOutput)",
          "199:  GetUsageStatisticsPages(*guardduty.GetUsageStatisticsInput, func(*guardduty.GetUsageStatisticsOutput, bool) bool) error",
          "200:  GetUsageStatisticsPagesWithContext(aws.Context, *guardduty.GetUsageStatisticsInput, func(*guardduty.GetUsageStatisticsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------"
        ],
        "service/kafka/api.go||service/kafka/api.go": [
          "File: service/kafka/api.go -> service/kafka/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1826:  return out, req.Send()",
          "1827: }",
          "1829: const opTagResource = \"TagResource\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1829: const opRebootBroker = \"RebootBroker\"",
          "1855: func (c *Kafka) RebootBrokerRequest(input *RebootBrokerInput) (req *request.Request, output *RebootBrokerOutput) {",
          "1856:  op := &request.Operation{",
          "1857:   Name:       opRebootBroker,",
          "1858:   HTTPMethod: \"PUT\",",
          "1859:   HTTPPath:   \"/v1/clusters/{clusterArn}/reboot-broker\",",
          "1860:  }",
          "1862:  if input == nil {",
          "1863:   input = &RebootBrokerInput{}",
          "1864:  }",
          "1866:  output = &RebootBrokerOutput{}",
          "1867:  req = c.newRequest(op, input, output)",
          "1868:  return",
          "1869: }",
          "1905: func (c *Kafka) RebootBroker(input *RebootBrokerInput) (*RebootBrokerOutput, error) {",
          "1906:  req, out := c.RebootBrokerRequest(input)",
          "1907:  return out, req.Send()",
          "1908: }",
          "1919: func (c *Kafka) RebootBrokerWithContext(ctx aws.Context, input *RebootBrokerInput, opts ...request.Option) (*RebootBrokerOutput, error) {",
          "1920:  req, out := c.RebootBrokerRequest(input)",
          "1921:  req.SetContext(ctx)",
          "1922:  req.ApplyOptions(opts...)",
          "1923:  return out, req.Send()",
          "1924: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5960:  return s",
          "5961: }",
          "5964: type S3 struct {",
          "5965:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6061: type RebootBrokerInput struct {",
          "6062:  _ struct{} `type:\"structure\"`",
          "6067:  BrokerIds []*string `locationName:\"brokerIds\" type:\"list\" required:\"true\"`",
          "6070:  ClusterArn *string `location:\"uri\" locationName:\"clusterArn\" type:\"string\" required:\"true\"`",
          "6071: }",
          "6074: func (s RebootBrokerInput) String() string {",
          "6075:  return awsutil.Prettify(s)",
          "6076: }",
          "6079: func (s RebootBrokerInput) GoString() string {",
          "6080:  return s.String()",
          "6081: }",
          "6084: func (s *RebootBrokerInput) Validate() error {",
          "6085:  invalidParams := request.ErrInvalidParams{Context: \"RebootBrokerInput\"}",
          "6086:  if s.BrokerIds == nil {",
          "6087:   invalidParams.Add(request.NewErrParamRequired(\"BrokerIds\"))",
          "6088:  }",
          "6089:  if s.ClusterArn == nil {",
          "6090:   invalidParams.Add(request.NewErrParamRequired(\"ClusterArn\"))",
          "6091:  }",
          "6092:  if s.ClusterArn != nil && len(*s.ClusterArn) < 1 {",
          "6093:   invalidParams.Add(request.NewErrParamMinLen(\"ClusterArn\", 1))",
          "6094:  }",
          "6096:  if invalidParams.Len() > 0 {",
          "6097:   return invalidParams",
          "6098:  }",
          "6099:  return nil",
          "6100: }",
          "6103: func (s *RebootBrokerInput) SetBrokerIds(v []*string) *RebootBrokerInput {",
          "6104:  s.BrokerIds = v",
          "6105:  return s",
          "6106: }",
          "6109: func (s *RebootBrokerInput) SetClusterArn(v string) *RebootBrokerInput {",
          "6110:  s.ClusterArn = &v",
          "6111:  return s",
          "6112: }",
          "6115: type RebootBrokerOutput struct {",
          "6116:  _ struct{} `type:\"structure\"`",
          "6119:  ClusterArn *string `locationName:\"clusterArn\" type:\"string\"`",
          "6122:  ClusterOperationArn *string `locationName:\"clusterOperationArn\" type:\"string\"`",
          "6123: }",
          "6126: func (s RebootBrokerOutput) String() string {",
          "6127:  return awsutil.Prettify(s)",
          "6128: }",
          "6131: func (s RebootBrokerOutput) GoString() string {",
          "6132:  return s.String()",
          "6133: }",
          "6136: func (s *RebootBrokerOutput) SetClusterArn(v string) *RebootBrokerOutput {",
          "6137:  s.ClusterArn = &v",
          "6138:  return s",
          "6139: }",
          "6142: func (s *RebootBrokerOutput) SetClusterOperationArn(v string) *RebootBrokerOutput {",
          "6143:  s.ClusterOperationArn = &v",
          "6144:  return s",
          "6145: }",
          "",
          "---------------"
        ],
        "service/kafka/kafkaiface/interface.go||service/kafka/kafkaiface/interface.go": [
          "File: service/kafka/kafkaiface/interface.go -> service/kafka/kafkaiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "142:  ListTagsForResourceWithContext(aws.Context, *kafka.ListTagsForResourceInput, ...request.Option) (*kafka.ListTagsForResourceOutput, error)",
          "143:  ListTagsForResourceRequest(*kafka.ListTagsForResourceInput) (*request.Request, *kafka.ListTagsForResourceOutput)",
          "145:  TagResource(*kafka.TagResourceInput) (*kafka.TagResourceOutput, error)",
          "146:  TagResourceWithContext(aws.Context, *kafka.TagResourceInput, ...request.Option) (*kafka.TagResourceOutput, error)",
          "147:  TagResourceRequest(*kafka.TagResourceInput) (*request.Request, *kafka.TagResourceOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "145:  RebootBroker(*kafka.RebootBrokerInput) (*kafka.RebootBrokerOutput, error)",
          "146:  RebootBrokerWithContext(aws.Context, *kafka.RebootBrokerInput, ...request.Option) (*kafka.RebootBrokerOutput, error)",
          "147:  RebootBrokerRequest(*kafka.RebootBrokerInput) (*request.Request, *kafka.RebootBrokerOutput)",
          "",
          "---------------"
        ],
        "service/organizations/api.go||service/organizations/api.go": [
          "File: service/organizations/api.go -> service/organizations/api.go"
        ],
        "service/resourcegroups/api.go||service/resourcegroups/api.go": [
          "File: service/resourcegroups/api.go -> service/resourcegroups/api.go"
        ],
        "service/servicecatalog/api.go||service/servicecatalog/api.go": [
          "File: service/servicecatalog/api.go -> service/servicecatalog/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "12203:  PathId *string `min:\"1\" type:\"string\"`",
          "12214: }",
          "",
          "[Removed Lines]",
          "12208:  ProductId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "12213:  ProvisioningArtifactId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "12210:  PathName *string `min:\"1\" type:\"string\"`",
          "12214:  ProductId *string `min:\"1\" type:\"string\"`",
          "12217:  ProductName *string `type:\"string\"`",
          "12221:  ProvisioningArtifactId *string `min:\"1\" type:\"string\"`",
          "12225:  ProvisioningArtifactName *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12229:  if s.PathId != nil && len(*s.PathId) < 1 {",
          "12230:   invalidParams.Add(request.NewErrParamMinLen(\"PathId\", 1))",
          "12231:  }",
          "12234:  }",
          "12235:  if s.ProductId != nil && len(*s.ProductId) < 1 {",
          "12236:   invalidParams.Add(request.NewErrParamMinLen(\"ProductId\", 1))",
          "12237:  }",
          "12241:  if s.ProvisioningArtifactId != nil && len(*s.ProvisioningArtifactId) < 1 {",
          "12242:   invalidParams.Add(request.NewErrParamMinLen(\"ProvisioningArtifactId\", 1))",
          "12243:  }",
          "",
          "[Removed Lines]",
          "12232:  if s.ProductId == nil {",
          "12233:   invalidParams.Add(request.NewErrParamRequired(\"ProductId\"))",
          "12238:  if s.ProvisioningArtifactId == nil {",
          "12239:   invalidParams.Add(request.NewErrParamRequired(\"ProvisioningArtifactId\"))",
          "12240:  }",
          "",
          "[Added Lines]",
          "12244:  if s.PathName != nil && len(*s.PathName) < 1 {",
          "12245:   invalidParams.Add(request.NewErrParamMinLen(\"PathName\", 1))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "12260:  return s",
          "12261: }",
          "12264: func (s *DescribeProvisioningParametersInput) SetProductId(v string) *DescribeProvisioningParametersInput {",
          "12265:  s.ProductId = &v",
          "12266:  return s",
          "12267: }",
          "12270: func (s *DescribeProvisioningParametersInput) SetProvisioningArtifactId(v string) *DescribeProvisioningParametersInput {",
          "12271:  s.ProvisioningArtifactId = &v",
          "12272:  return s",
          "12273: }",
          "12275: type DescribeProvisioningParametersOutput struct {",
          "12276:  _ struct{} `type:\"structure\"`",
          "12279:  ConstraintSummaries []*ConstraintSummary `type:\"list\"`",
          "12282:  ProvisioningArtifactParameters []*ProvisioningArtifactParameter `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12273: func (s *DescribeProvisioningParametersInput) SetPathName(v string) *DescribeProvisioningParametersInput {",
          "12274:  s.PathName = &v",
          "12275:  return s",
          "12276: }",
          "12285: func (s *DescribeProvisioningParametersInput) SetProductName(v string) *DescribeProvisioningParametersInput {",
          "12286:  s.ProductName = &v",
          "12287:  return s",
          "12288: }",
          "12297: func (s *DescribeProvisioningParametersInput) SetProvisioningArtifactName(v string) *DescribeProvisioningParametersInput {",
          "12298:  s.ProvisioningArtifactName = &v",
          "12299:  return s",
          "12300: }",
          "12309:  ProvisioningArtifactOutputs []*ProvisioningArtifactOutput `type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "12309:  return s",
          "12310: }",
          "12313: func (s *DescribeProvisioningParametersOutput) SetProvisioningArtifactParameters(v []*ProvisioningArtifactParameter) *DescribeProvisioningParametersOutput {",
          "12314:  s.ProvisioningArtifactParameters = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12343: func (s *DescribeProvisioningParametersOutput) SetProvisioningArtifactOutputs(v []*ProvisioningArtifactOutput) *DescribeProvisioningParametersOutput {",
          "12344:  s.ProvisioningArtifactOutputs = v",
          "12345:  return s",
          "12346: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "16287:  PathId *string `min:\"1\" type:\"string\"`",
          "16295:  ProvisionToken *string `min:\"1\" type:\"string\" idempotencyToken:\"true\"`",
          "",
          "[Removed Lines]",
          "16292:  ProductId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "16327:  PathName *string `min:\"1\" type:\"string\"`",
          "16330:  ProductId *string `min:\"1\" type:\"string\"`",
          "16333:  ProductName *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "16301:  ProvisionedProductName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "16306:  ProvisioningArtifactId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "16346:  ProvisioningArtifactId *string `min:\"1\" type:\"string\"`",
          "16350:  ProvisioningArtifactName *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "16333:  if s.PathId != nil && len(*s.PathId) < 1 {",
          "16334:   invalidParams.Add(request.NewErrParamMinLen(\"PathId\", 1))",
          "16335:  }",
          "16338:  }",
          "16339:  if s.ProductId != nil && len(*s.ProductId) < 1 {",
          "16340:   invalidParams.Add(request.NewErrParamMinLen(\"ProductId\", 1))",
          "",
          "[Removed Lines]",
          "16336:  if s.ProductId == nil {",
          "16337:   invalidParams.Add(request.NewErrParamRequired(\"ProductId\"))",
          "",
          "[Added Lines]",
          "16380:  if s.PathName != nil && len(*s.PathName) < 1 {",
          "16381:   invalidParams.Add(request.NewErrParamMinLen(\"PathName\", 1))",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "16348:  if s.ProvisionedProductName != nil && len(*s.ProvisionedProductName) < 1 {",
          "16349:   invalidParams.Add(request.NewErrParamMinLen(\"ProvisionedProductName\", 1))",
          "16350:  }",
          "16354:  if s.ProvisioningArtifactId != nil && len(*s.ProvisioningArtifactId) < 1 {",
          "16355:   invalidParams.Add(request.NewErrParamMinLen(\"ProvisioningArtifactId\", 1))",
          "16356:  }",
          "",
          "[Removed Lines]",
          "16351:  if s.ProvisioningArtifactId == nil {",
          "16352:   invalidParams.Add(request.NewErrParamRequired(\"ProvisioningArtifactId\"))",
          "16353:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "16404:  return s",
          "16405: }",
          "16408: func (s *ProvisionProductInput) SetProductId(v string) *ProvisionProductInput {",
          "16409:  s.ProductId = &v",
          "16410:  return s",
          "16411: }",
          "16414: func (s *ProvisionProductInput) SetProvisionToken(v string) *ProvisionProductInput {",
          "16415:  s.ProvisionToken = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16449: func (s *ProvisionProductInput) SetPathName(v string) *ProvisionProductInput {",
          "16450:  s.PathName = &v",
          "16451:  return s",
          "16452: }",
          "16461: func (s *ProvisionProductInput) SetProductName(v string) *ProvisionProductInput {",
          "16462:  s.ProductName = &v",
          "16463:  return s",
          "16464: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "16428:  return s",
          "16429: }",
          "16432: func (s *ProvisionProductInput) SetProvisioningParameters(v []*ProvisioningParameter) *ProvisionProductInput {",
          "16433:  s.ProvisioningParameters = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16485: func (s *ProvisionProductInput) SetProvisioningArtifactName(v string) *ProvisionProductInput {",
          "16486:  s.ProvisioningArtifactName = &v",
          "16487:  return s",
          "16488: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "17150:  return s",
          "17151: }",
          "17154: type ProvisioningArtifactParameter struct {",
          "17155:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17213: type ProvisioningArtifactOutput struct {",
          "17214:  _ struct{} `type:\"structure\"`",
          "17217:  Description *string `type:\"string\"`",
          "17220:  Key *string `min:\"1\" type:\"string\"`",
          "17221: }",
          "17224: func (s ProvisioningArtifactOutput) String() string {",
          "17225:  return awsutil.Prettify(s)",
          "17226: }",
          "17229: func (s ProvisioningArtifactOutput) GoString() string {",
          "17230:  return s.String()",
          "17231: }",
          "17234: func (s *ProvisioningArtifactOutput) SetDescription(v string) *ProvisioningArtifactOutput {",
          "17235:  s.Description = &v",
          "17236:  return s",
          "17237: }",
          "17240: func (s *ProvisioningArtifactOutput) SetKey(v string) *ProvisioningArtifactOutput {",
          "17241:  s.Key = &v",
          "17242:  return s",
          "17243: }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "19953:  AcceptLanguage *string `type:\"string\"`",
          "19957:  PathId *string `min:\"1\" type:\"string\"`",
          "19960:  ProductId *string `min:\"1\" type:\"string\"`",
          "19964:  ProvisionedProductId *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20053:  PathName *string `min:\"1\" type:\"string\"`",
          "20059:  ProductName *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "19971:  ProvisioningArtifactId *string `min:\"1\" type:\"string\"`",
          "19974:  ProvisioningParameters []*UpdateProvisioningParameter `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20074:  ProvisioningArtifactName *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "20001:  if s.PathId != nil && len(*s.PathId) < 1 {",
          "20002:   invalidParams.Add(request.NewErrParamMinLen(\"PathId\", 1))",
          "20003:  }",
          "20004:  if s.ProductId != nil && len(*s.ProductId) < 1 {",
          "20005:   invalidParams.Add(request.NewErrParamMinLen(\"ProductId\", 1))",
          "20006:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20107:  if s.PathName != nil && len(*s.PathName) < 1 {",
          "20108:   invalidParams.Add(request.NewErrParamMinLen(\"PathName\", 1))",
          "20109:  }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "20060:  return s",
          "20061: }",
          "20064: func (s *UpdateProvisionedProductInput) SetProductId(v string) *UpdateProvisionedProductInput {",
          "20065:  s.ProductId = &v",
          "20066:  return s",
          "20067: }",
          "20070: func (s *UpdateProvisionedProductInput) SetProvisionedProductId(v string) *UpdateProvisionedProductInput {",
          "20071:  s.ProvisionedProductId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20170: func (s *UpdateProvisionedProductInput) SetPathName(v string) *UpdateProvisionedProductInput {",
          "20171:  s.PathName = &v",
          "20172:  return s",
          "20173: }",
          "20182: func (s *UpdateProvisionedProductInput) SetProductName(v string) *UpdateProvisionedProductInput {",
          "20183:  s.ProductName = &v",
          "20184:  return s",
          "20185: }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "20084:  return s",
          "20085: }",
          "20088: func (s *UpdateProvisionedProductInput) SetProvisioningParameters(v []*UpdateProvisioningParameter) *UpdateProvisionedProductInput {",
          "20089:  s.ProvisioningParameters = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20206: func (s *UpdateProvisionedProductInput) SetProvisioningArtifactName(v string) *UpdateProvisionedProductInput {",
          "20207:  s.ProvisioningArtifactName = &v",
          "20208:  return s",
          "20209: }",
          "",
          "---------------"
        ],
        "service/sesv2/api.go||service/sesv2/api.go": [
          "File: service/sesv2/api.go -> service/sesv2/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "211:  return out, req.Send()",
          "212: }",
          "214: const opCreateDedicatedIpPool = \"CreateDedicatedIpPool\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "214: const opCreateCustomVerificationEmailTemplate = \"CreateCustomVerificationEmailTemplate\"",
          "240: func (c *SESV2) CreateCustomVerificationEmailTemplateRequest(input *CreateCustomVerificationEmailTemplateInput) (req *request.Request, output *CreateCustomVerificationEmailTemplateOutput) {",
          "241:  op := &request.Operation{",
          "242:   Name:       opCreateCustomVerificationEmailTemplate,",
          "243:   HTTPMethod: \"POST\",",
          "244:   HTTPPath:   \"/v2/email/custom-verification-email-templates\",",
          "245:  }",
          "247:  if input == nil {",
          "248:   input = &CreateCustomVerificationEmailTemplateInput{}",
          "249:  }",
          "251:  output = &CreateCustomVerificationEmailTemplateOutput{}",
          "252:  req = c.newRequest(op, input, output)",
          "253:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "254:  return",
          "255: }",
          "291: func (c *SESV2) CreateCustomVerificationEmailTemplate(input *CreateCustomVerificationEmailTemplateInput) (*CreateCustomVerificationEmailTemplateOutput, error) {",
          "292:  req, out := c.CreateCustomVerificationEmailTemplateRequest(input)",
          "293:  return out, req.Send()",
          "294: }",
          "305: func (c *SESV2) CreateCustomVerificationEmailTemplateWithContext(ctx aws.Context, input *CreateCustomVerificationEmailTemplateInput, opts ...request.Option) (*CreateCustomVerificationEmailTemplateOutput, error) {",
          "306:  req, out := c.CreateCustomVerificationEmailTemplateRequest(input)",
          "307:  req.SetContext(ctx)",
          "308:  req.ApplyOptions(opts...)",
          "309:  return out, req.Send()",
          "310: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "533:  return out, req.Send()",
          "534: }",
          "536: const opDeleteConfigurationSet = \"DeleteConfigurationSet\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "634: const opCreateEmailIdentityPolicy = \"CreateEmailIdentityPolicy\"",
          "660: func (c *SESV2) CreateEmailIdentityPolicyRequest(input *CreateEmailIdentityPolicyInput) (req *request.Request, output *CreateEmailIdentityPolicyOutput) {",
          "661:  op := &request.Operation{",
          "662:   Name:       opCreateEmailIdentityPolicy,",
          "663:   HTTPMethod: \"POST\",",
          "664:   HTTPPath:   \"/v2/email/identities/{EmailIdentity}/policies/{PolicyName}\",",
          "665:  }",
          "667:  if input == nil {",
          "668:   input = &CreateEmailIdentityPolicyInput{}",
          "669:  }",
          "671:  output = &CreateEmailIdentityPolicyOutput{}",
          "672:  req = c.newRequest(op, input, output)",
          "673:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "674:  return",
          "675: }",
          "715: func (c *SESV2) CreateEmailIdentityPolicy(input *CreateEmailIdentityPolicyInput) (*CreateEmailIdentityPolicyOutput, error) {",
          "716:  req, out := c.CreateEmailIdentityPolicyRequest(input)",
          "717:  return out, req.Send()",
          "718: }",
          "729: func (c *SESV2) CreateEmailIdentityPolicyWithContext(ctx aws.Context, input *CreateEmailIdentityPolicyInput, opts ...request.Option) (*CreateEmailIdentityPolicyOutput, error) {",
          "730:  req, out := c.CreateEmailIdentityPolicyRequest(input)",
          "731:  req.SetContext(ctx)",
          "732:  req.ApplyOptions(opts...)",
          "733:  return out, req.Send()",
          "734: }",
          "736: const opCreateEmailTemplate = \"CreateEmailTemplate\"",
          "762: func (c *SESV2) CreateEmailTemplateRequest(input *CreateEmailTemplateInput) (req *request.Request, output *CreateEmailTemplateOutput) {",
          "763:  op := &request.Operation{",
          "764:   Name:       opCreateEmailTemplate,",
          "765:   HTTPMethod: \"POST\",",
          "766:   HTTPPath:   \"/v2/email/templates\",",
          "767:  }",
          "769:  if input == nil {",
          "770:   input = &CreateEmailTemplateInput{}",
          "771:  }",
          "773:  output = &CreateEmailTemplateOutput{}",
          "774:  req = c.newRequest(op, input, output)",
          "775:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "776:  return",
          "777: }",
          "808: func (c *SESV2) CreateEmailTemplate(input *CreateEmailTemplateInput) (*CreateEmailTemplateOutput, error) {",
          "809:  req, out := c.CreateEmailTemplateRequest(input)",
          "810:  return out, req.Send()",
          "811: }",
          "822: func (c *SESV2) CreateEmailTemplateWithContext(ctx aws.Context, input *CreateEmailTemplateInput, opts ...request.Option) (*CreateEmailTemplateOutput, error) {",
          "823:  req, out := c.CreateEmailTemplateRequest(input)",
          "824:  req.SetContext(ctx)",
          "825:  req.ApplyOptions(opts...)",
          "826:  return out, req.Send()",
          "827: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "720:  return out, req.Send()",
          "721: }",
          "750:  op := &request.Operation{",
          "752:   HTTPMethod: \"DELETE\",",
          "754:  }",
          "756:  if input == nil {",
          "758:  }",
          "761:  req = c.newRequest(op, input, output)",
          "762:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "763:  return",
          "764: }",
          "",
          "[Removed Lines]",
          "723: const opDeleteDedicatedIpPool = \"DeleteDedicatedIpPool\"",
          "749: func (c *SESV2) DeleteDedicatedIpPoolRequest(input *DeleteDedicatedIpPoolInput) (req *request.Request, output *DeleteDedicatedIpPoolOutput) {",
          "751:   Name:       opDeleteDedicatedIpPool,",
          "753:   HTTPPath:   \"/v2/email/dedicated-ip-pools/{PoolName}\",",
          "757:   input = &DeleteDedicatedIpPoolInput{}",
          "760:  output = &DeleteDedicatedIpPoolOutput{}",
          "",
          "[Added Lines]",
          "1016: const opDeleteCustomVerificationEmailTemplate = \"DeleteCustomVerificationEmailTemplate\"",
          "1042: func (c *SESV2) DeleteCustomVerificationEmailTemplateRequest(input *DeleteCustomVerificationEmailTemplateInput) (req *request.Request, output *DeleteCustomVerificationEmailTemplateOutput) {",
          "1044:   Name:       opDeleteCustomVerificationEmailTemplate,",
          "1046:   HTTPPath:   \"/v2/email/custom-verification-email-templates/{TemplateName}\",",
          "1050:   input = &DeleteCustomVerificationEmailTemplateInput{}",
          "1053:  output = &DeleteCustomVerificationEmailTemplateOutput{}",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "793:  return out, req.Send()",
          "794: }",
          "807:  req.SetContext(ctx)",
          "808:  req.ApplyOptions(opts...)",
          "809:  return out, req.Send()",
          "810: }",
          "839:  op := &request.Operation{",
          "840:   Name:       opDeleteEmailIdentity,",
          "841:   HTTPMethod: \"DELETE\",",
          "",
          "[Removed Lines]",
          "791: func (c *SESV2) DeleteDedicatedIpPool(input *DeleteDedicatedIpPoolInput) (*DeleteDedicatedIpPoolOutput, error) {",
          "792:  req, out := c.DeleteDedicatedIpPoolRequest(input)",
          "805: func (c *SESV2) DeleteDedicatedIpPoolWithContext(ctx aws.Context, input *DeleteDedicatedIpPoolInput, opts ...request.Option) (*DeleteDedicatedIpPoolOutput, error) {",
          "806:  req, out := c.DeleteDedicatedIpPoolRequest(input)",
          "812: const opDeleteEmailIdentity = \"DeleteEmailIdentity\"",
          "838: func (c *SESV2) DeleteEmailIdentityRequest(input *DeleteEmailIdentityInput) (req *request.Request, output *DeleteEmailIdentityOutput) {",
          "",
          "[Added Lines]",
          "1087: func (c *SESV2) DeleteCustomVerificationEmailTemplate(input *DeleteCustomVerificationEmailTemplateInput) (*DeleteCustomVerificationEmailTemplateOutput, error) {",
          "1088:  req, out := c.DeleteCustomVerificationEmailTemplateRequest(input)",
          "1101: func (c *SESV2) DeleteCustomVerificationEmailTemplateWithContext(ctx aws.Context, input *DeleteCustomVerificationEmailTemplateInput, opts ...request.Option) (*DeleteCustomVerificationEmailTemplateOutput, error) {",
          "1102:  req, out := c.DeleteCustomVerificationEmailTemplateRequest(input)",
          "1108: const opDeleteDedicatedIpPool = \"DeleteDedicatedIpPool\"",
          "1134: func (c *SESV2) DeleteDedicatedIpPoolRequest(input *DeleteDedicatedIpPoolInput) (req *request.Request, output *DeleteDedicatedIpPoolOutput) {",
          "1135:  op := &request.Operation{",
          "1136:   Name:       opDeleteDedicatedIpPool,",
          "1137:   HTTPMethod: \"DELETE\",",
          "1138:   HTTPPath:   \"/v2/email/dedicated-ip-pools/{PoolName}\",",
          "1139:  }",
          "1141:  if input == nil {",
          "1142:   input = &DeleteDedicatedIpPoolInput{}",
          "1143:  }",
          "1145:  output = &DeleteDedicatedIpPoolOutput{}",
          "1146:  req = c.newRequest(op, input, output)",
          "1147:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "1148:  return",
          "1149: }",
          "1176: func (c *SESV2) DeleteDedicatedIpPool(input *DeleteDedicatedIpPoolInput) (*DeleteDedicatedIpPoolOutput, error) {",
          "1177:  req, out := c.DeleteDedicatedIpPoolRequest(input)",
          "1178:  return out, req.Send()",
          "1179: }",
          "1190: func (c *SESV2) DeleteDedicatedIpPoolWithContext(ctx aws.Context, input *DeleteDedicatedIpPoolInput, opts ...request.Option) (*DeleteDedicatedIpPoolOutput, error) {",
          "1191:  req, out := c.DeleteDedicatedIpPoolRequest(input)",
          "1192:  req.SetContext(ctx)",
          "1193:  req.ApplyOptions(opts...)",
          "1194:  return out, req.Send()",
          "1195: }",
          "1197: const opDeleteEmailIdentity = \"DeleteEmailIdentity\"",
          "1223: func (c *SESV2) DeleteEmailIdentityRequest(input *DeleteEmailIdentityInput) (req *request.Request, output *DeleteEmailIdentityOutput) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "899:  return out, req.Send()",
          "900: }",
          "902: const opDeleteSuppressedDestination = \"DeleteSuppressedDestination\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1287: const opDeleteEmailIdentityPolicy = \"DeleteEmailIdentityPolicy\"",
          "1313: func (c *SESV2) DeleteEmailIdentityPolicyRequest(input *DeleteEmailIdentityPolicyInput) (req *request.Request, output *DeleteEmailIdentityPolicyOutput) {",
          "1314:  op := &request.Operation{",
          "1315:   Name:       opDeleteEmailIdentityPolicy,",
          "1316:   HTTPMethod: \"DELETE\",",
          "1317:   HTTPPath:   \"/v2/email/identities/{EmailIdentity}/policies/{PolicyName}\",",
          "1318:  }",
          "1320:  if input == nil {",
          "1321:   input = &DeleteEmailIdentityPolicyInput{}",
          "1322:  }",
          "1324:  output = &DeleteEmailIdentityPolicyOutput{}",
          "1325:  req = c.newRequest(op, input, output)",
          "1326:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "1327:  return",
          "1328: }",
          "1363: func (c *SESV2) DeleteEmailIdentityPolicy(input *DeleteEmailIdentityPolicyInput) (*DeleteEmailIdentityPolicyOutput, error) {",
          "1364:  req, out := c.DeleteEmailIdentityPolicyRequest(input)",
          "1365:  return out, req.Send()",
          "1366: }",
          "1377: func (c *SESV2) DeleteEmailIdentityPolicyWithContext(ctx aws.Context, input *DeleteEmailIdentityPolicyInput, opts ...request.Option) (*DeleteEmailIdentityPolicyOutput, error) {",
          "1378:  req, out := c.DeleteEmailIdentityPolicyRequest(input)",
          "1379:  req.SetContext(ctx)",
          "1380:  req.ApplyOptions(opts...)",
          "1381:  return out, req.Send()",
          "1382: }",
          "1384: const opDeleteEmailTemplate = \"DeleteEmailTemplate\"",
          "1410: func (c *SESV2) DeleteEmailTemplateRequest(input *DeleteEmailTemplateInput) (req *request.Request, output *DeleteEmailTemplateOutput) {",
          "1411:  op := &request.Operation{",
          "1412:   Name:       opDeleteEmailTemplate,",
          "1413:   HTTPMethod: \"DELETE\",",
          "1414:   HTTPPath:   \"/v2/email/templates/{TemplateName}\",",
          "1415:  }",
          "1417:  if input == nil {",
          "1418:   input = &DeleteEmailTemplateInput{}",
          "1419:  }",
          "1421:  output = &DeleteEmailTemplateOutput{}",
          "1422:  req = c.newRequest(op, input, output)",
          "1423:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "1424:  return",
          "1425: }",
          "1451: func (c *SESV2) DeleteEmailTemplate(input *DeleteEmailTemplateInput) (*DeleteEmailTemplateOutput, error) {",
          "1452:  req, out := c.DeleteEmailTemplateRequest(input)",
          "1453:  return out, req.Send()",
          "1454: }",
          "1465: func (c *SESV2) DeleteEmailTemplateWithContext(ctx aws.Context, input *DeleteEmailTemplateInput, opts ...request.Option) (*DeleteEmailTemplateOutput, error) {",
          "1466:  req, out := c.DeleteEmailTemplateRequest(input)",
          "1467:  req.SetContext(ctx)",
          "1468:  req.ApplyOptions(opts...)",
          "1469:  return out, req.Send()",
          "1470: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1339:  return out, req.Send()",
          "1340: }",
          "1369:  op := &request.Operation{",
          "1371:   HTTPMethod: \"GET\",",
          "1373:  }",
          "1375:  if input == nil {",
          "1377:  }",
          "1380:  req = c.newRequest(op, input, output)",
          "1381:  return",
          "1382: }",
          "1410:  return out, req.Send()",
          "1411: }",
          "1424:  req.SetContext(ctx)",
          "1425:  req.ApplyOptions(opts...)",
          "1426:  return out, req.Send()",
          "",
          "[Removed Lines]",
          "1342: const opGetDedicatedIp = \"GetDedicatedIp\"",
          "1368: func (c *SESV2) GetDedicatedIpRequest(input *GetDedicatedIpInput) (req *request.Request, output *GetDedicatedIpOutput) {",
          "1370:   Name:       opGetDedicatedIp,",
          "1372:   HTTPPath:   \"/v2/email/dedicated-ips/{IP}\",",
          "1376:   input = &GetDedicatedIpInput{}",
          "1379:  output = &GetDedicatedIpOutput{}",
          "1408: func (c *SESV2) GetDedicatedIp(input *GetDedicatedIpInput) (*GetDedicatedIpOutput, error) {",
          "1409:  req, out := c.GetDedicatedIpRequest(input)",
          "1422: func (c *SESV2) GetDedicatedIpWithContext(ctx aws.Context, input *GetDedicatedIpInput, opts ...request.Option) (*GetDedicatedIpOutput, error) {",
          "1423:  req, out := c.GetDedicatedIpRequest(input)",
          "",
          "[Added Lines]",
          "1912: const opGetCustomVerificationEmailTemplate = \"GetCustomVerificationEmailTemplate\"",
          "1938: func (c *SESV2) GetCustomVerificationEmailTemplateRequest(input *GetCustomVerificationEmailTemplateInput) (req *request.Request, output *GetCustomVerificationEmailTemplateOutput) {",
          "1940:   Name:       opGetCustomVerificationEmailTemplate,",
          "1942:   HTTPPath:   \"/v2/email/custom-verification-email-templates/{TemplateName}\",",
          "1946:   input = &GetCustomVerificationEmailTemplateInput{}",
          "1949:  output = &GetCustomVerificationEmailTemplateOutput{}",
          "1983: func (c *SESV2) GetCustomVerificationEmailTemplate(input *GetCustomVerificationEmailTemplateInput) (*GetCustomVerificationEmailTemplateOutput, error) {",
          "1984:  req, out := c.GetCustomVerificationEmailTemplateRequest(input)",
          "1997: func (c *SESV2) GetCustomVerificationEmailTemplateWithContext(ctx aws.Context, input *GetCustomVerificationEmailTemplateInput, opts ...request.Option) (*GetCustomVerificationEmailTemplateOutput, error) {",
          "1998:  req, out := c.GetCustomVerificationEmailTemplateRequest(input)",
          "1999:  req.SetContext(ctx)",
          "2000:  req.ApplyOptions(opts...)",
          "2001:  return out, req.Send()",
          "2002: }",
          "2004: const opGetDedicatedIp = \"GetDedicatedIp\"",
          "2030: func (c *SESV2) GetDedicatedIpRequest(input *GetDedicatedIpInput) (req *request.Request, output *GetDedicatedIpOutput) {",
          "2031:  op := &request.Operation{",
          "2032:   Name:       opGetDedicatedIp,",
          "2033:   HTTPMethod: \"GET\",",
          "2034:   HTTPPath:   \"/v2/email/dedicated-ips/{IP}\",",
          "2035:  }",
          "2037:  if input == nil {",
          "2038:   input = &GetDedicatedIpInput{}",
          "2039:  }",
          "2041:  output = &GetDedicatedIpOutput{}",
          "2042:  req = c.newRequest(op, input, output)",
          "2043:  return",
          "2044: }",
          "2070: func (c *SESV2) GetDedicatedIp(input *GetDedicatedIpInput) (*GetDedicatedIpOutput, error) {",
          "2071:  req, out := c.GetDedicatedIpRequest(input)",
          "2072:  return out, req.Send()",
          "2073: }",
          "2084: func (c *SESV2) GetDedicatedIpWithContext(ctx aws.Context, input *GetDedicatedIpInput, opts ...request.Option) (*GetDedicatedIpOutput, error) {",
          "2085:  req, out := c.GetDedicatedIpRequest(input)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2008:  return out, req.Send()",
          "2009: }",
          "2011: const opGetSuppressedDestination = \"GetSuppressedDestination\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2673: const opGetEmailIdentityPolicies = \"GetEmailIdentityPolicies\"",
          "2699: func (c *SESV2) GetEmailIdentityPoliciesRequest(input *GetEmailIdentityPoliciesInput) (req *request.Request, output *GetEmailIdentityPoliciesOutput) {",
          "2700:  op := &request.Operation{",
          "2701:   Name:       opGetEmailIdentityPolicies,",
          "2702:   HTTPMethod: \"GET\",",
          "2703:   HTTPPath:   \"/v2/email/identities/{EmailIdentity}/policies\",",
          "2704:  }",
          "2706:  if input == nil {",
          "2707:   input = &GetEmailIdentityPoliciesInput{}",
          "2708:  }",
          "2710:  output = &GetEmailIdentityPoliciesOutput{}",
          "2711:  req = c.newRequest(op, input, output)",
          "2712:  return",
          "2713: }",
          "2749: func (c *SESV2) GetEmailIdentityPolicies(input *GetEmailIdentityPoliciesInput) (*GetEmailIdentityPoliciesOutput, error) {",
          "2750:  req, out := c.GetEmailIdentityPoliciesRequest(input)",
          "2751:  return out, req.Send()",
          "2752: }",
          "2763: func (c *SESV2) GetEmailIdentityPoliciesWithContext(ctx aws.Context, input *GetEmailIdentityPoliciesInput, opts ...request.Option) (*GetEmailIdentityPoliciesOutput, error) {",
          "2764:  req, out := c.GetEmailIdentityPoliciesRequest(input)",
          "2765:  req.SetContext(ctx)",
          "2766:  req.ApplyOptions(opts...)",
          "2767:  return out, req.Send()",
          "2768: }",
          "2770: const opGetEmailTemplate = \"GetEmailTemplate\"",
          "2796: func (c *SESV2) GetEmailTemplateRequest(input *GetEmailTemplateInput) (req *request.Request, output *GetEmailTemplateOutput) {",
          "2797:  op := &request.Operation{",
          "2798:   Name:       opGetEmailTemplate,",
          "2799:   HTTPMethod: \"GET\",",
          "2800:   HTTPPath:   \"/v2/email/templates/{TemplateName}\",",
          "2801:  }",
          "2803:  if input == nil {",
          "2804:   input = &GetEmailTemplateInput{}",
          "2805:  }",
          "2807:  output = &GetEmailTemplateOutput{}",
          "2808:  req = c.newRequest(op, input, output)",
          "2809:  return",
          "2810: }",
          "2837: func (c *SESV2) GetEmailTemplate(input *GetEmailTemplateInput) (*GetEmailTemplateOutput, error) {",
          "2838:  req, out := c.GetEmailTemplateRequest(input)",
          "2839:  return out, req.Send()",
          "2840: }",
          "2851: func (c *SESV2) GetEmailTemplateWithContext(ctx aws.Context, input *GetEmailTemplateInput, opts ...request.Option) (*GetEmailTemplateOutput, error) {",
          "2852:  req, out := c.GetEmailTemplateRequest(input)",
          "2853:  req.SetContext(ctx)",
          "2854:  req.ApplyOptions(opts...)",
          "2855:  return out, req.Send()",
          "2856: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2241:  return p.Err()",
          "2242: }",
          "2271:  op := &request.Operation{",
          "2273:   HTTPMethod: \"GET\",",
          "2275:   Paginator: &request.Paginator{",
          "2276:    InputTokens:     []string{\"NextToken\"},",
          "2277:    OutputTokens:    []string{\"NextToken\"},",
          "",
          "[Removed Lines]",
          "2244: const opListDedicatedIpPools = \"ListDedicatedIpPools\"",
          "2270: func (c *SESV2) ListDedicatedIpPoolsRequest(input *ListDedicatedIpPoolsInput) (req *request.Request, output *ListDedicatedIpPoolsOutput) {",
          "2272:   Name:       opListDedicatedIpPools,",
          "2274:   HTTPPath:   \"/v2/email/dedicated-ip-pools\",",
          "",
          "[Added Lines]",
          "3091: const opListCustomVerificationEmailTemplates = \"ListCustomVerificationEmailTemplates\"",
          "3117: func (c *SESV2) ListCustomVerificationEmailTemplatesRequest(input *ListCustomVerificationEmailTemplatesInput) (req *request.Request, output *ListCustomVerificationEmailTemplatesOutput) {",
          "3119:   Name:       opListCustomVerificationEmailTemplates,",
          "3121:   HTTPPath:   \"/v2/email/custom-verification-email-templates\",",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2281:  }",
          "2283:  if input == nil {",
          "2285:  }",
          "2288:  req = c.newRequest(op, input, output)",
          "2289:  return",
          "2290: }",
          "",
          "[Removed Lines]",
          "2284:   input = &ListDedicatedIpPoolsInput{}",
          "2287:  output = &ListDedicatedIpPoolsOutput{}",
          "",
          "[Added Lines]",
          "3131:   input = &ListCustomVerificationEmailTemplatesInput{}",
          "3134:  output = &ListCustomVerificationEmailTemplatesOutput{}",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2314:  return out, req.Send()",
          "2315: }",
          "2328:  req.SetContext(ctx)",
          "2329:  req.ApplyOptions(opts...)",
          "2330:  return out, req.Send()",
          "2331: }",
          "2352: }",
          "2362:  p := request.Pagination{",
          "2363:   NewRequest: func() (*request.Request, error) {",
          "2365:    if input != nil {",
          "2366:     tmp := *input",
          "2367:     inCpy = &tmp",
          "2368:    }",
          "2370:    req.SetContext(ctx)",
          "2371:    req.ApplyOptions(opts...)",
          "2372:    return req, nil",
          "",
          "[Removed Lines]",
          "2312: func (c *SESV2) ListDedicatedIpPools(input *ListDedicatedIpPoolsInput) (*ListDedicatedIpPoolsOutput, error) {",
          "2313:  req, out := c.ListDedicatedIpPoolsRequest(input)",
          "2326: func (c *SESV2) ListDedicatedIpPoolsWithContext(ctx aws.Context, input *ListDedicatedIpPoolsInput, opts ...request.Option) (*ListDedicatedIpPoolsOutput, error) {",
          "2327:  req, out := c.ListDedicatedIpPoolsRequest(input)",
          "2350: func (c *SESV2) ListDedicatedIpPoolsPages(input *ListDedicatedIpPoolsInput, fn func(*ListDedicatedIpPoolsOutput, bool) bool) error {",
          "2351:  return c.ListDedicatedIpPoolsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2361: func (c *SESV2) ListDedicatedIpPoolsPagesWithContext(ctx aws.Context, input *ListDedicatedIpPoolsInput, fn func(*ListDedicatedIpPoolsOutput, bool) bool, opts ...request.Option) error {",
          "2364:    var inCpy *ListDedicatedIpPoolsInput",
          "2369:    req, _ := c.ListDedicatedIpPoolsRequest(inCpy)",
          "",
          "[Added Lines]",
          "3165: func (c *SESV2) ListCustomVerificationEmailTemplates(input *ListCustomVerificationEmailTemplatesInput) (*ListCustomVerificationEmailTemplatesOutput, error) {",
          "3166:  req, out := c.ListCustomVerificationEmailTemplatesRequest(input)",
          "3179: func (c *SESV2) ListCustomVerificationEmailTemplatesWithContext(ctx aws.Context, input *ListCustomVerificationEmailTemplatesInput, opts ...request.Option) (*ListCustomVerificationEmailTemplatesOutput, error) {",
          "3180:  req, out := c.ListCustomVerificationEmailTemplatesRequest(input)",
          "3203: func (c *SESV2) ListCustomVerificationEmailTemplatesPages(input *ListCustomVerificationEmailTemplatesInput, fn func(*ListCustomVerificationEmailTemplatesOutput, bool) bool) error {",
          "3204:  return c.ListCustomVerificationEmailTemplatesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "3214: func (c *SESV2) ListCustomVerificationEmailTemplatesPagesWithContext(ctx aws.Context, input *ListCustomVerificationEmailTemplatesInput, fn func(*ListCustomVerificationEmailTemplatesOutput, bool) bool, opts ...request.Option) error {",
          "3217:    var inCpy *ListCustomVerificationEmailTemplatesInput",
          "3222:    req, _ := c.ListCustomVerificationEmailTemplatesRequest(inCpy)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2374:  }",
          "2376:  for p.Next() {",
          "2378:    break",
          "2379:   }",
          "2380:  }",
          "",
          "[Removed Lines]",
          "2377:   if !fn(p.Page().(*ListDedicatedIpPoolsOutput), !p.HasNextPage()) {",
          "",
          "[Added Lines]",
          "3230:   if !fn(p.Page().(*ListCustomVerificationEmailTemplatesOutput), !p.HasNextPage()) {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2382:  return p.Err()",
          "2383: }",
          "",
          "[Removed Lines]",
          "2385: const opListDeliverabilityTestReports = \"ListDeliverabilityTestReports\"",
          "",
          "[Added Lines]",
          "3238: const opListDedicatedIpPools = \"ListDedicatedIpPools\"",
          "3264: func (c *SESV2) ListDedicatedIpPoolsRequest(input *ListDedicatedIpPoolsInput) (req *request.Request, output *ListDedicatedIpPoolsOutput) {",
          "3265:  op := &request.Operation{",
          "3266:   Name:       opListDedicatedIpPools,",
          "3267:   HTTPMethod: \"GET\",",
          "3268:   HTTPPath:   \"/v2/email/dedicated-ip-pools\",",
          "3269:   Paginator: &request.Paginator{",
          "3270:    InputTokens:     []string{\"NextToken\"},",
          "3271:    OutputTokens:    []string{\"NextToken\"},",
          "3272:    LimitToken:      \"PageSize\",",
          "3273:    TruncationToken: \"\",",
          "3274:   },",
          "3275:  }",
          "3277:  if input == nil {",
          "3278:   input = &ListDedicatedIpPoolsInput{}",
          "3279:  }",
          "3281:  output = &ListDedicatedIpPoolsOutput{}",
          "3282:  req = c.newRequest(op, input, output)",
          "3283:  return",
          "3284: }",
          "3306: func (c *SESV2) ListDedicatedIpPools(input *ListDedicatedIpPoolsInput) (*ListDedicatedIpPoolsOutput, error) {",
          "3307:  req, out := c.ListDedicatedIpPoolsRequest(input)",
          "3308:  return out, req.Send()",
          "3309: }",
          "3320: func (c *SESV2) ListDedicatedIpPoolsWithContext(ctx aws.Context, input *ListDedicatedIpPoolsInput, opts ...request.Option) (*ListDedicatedIpPoolsOutput, error) {",
          "3321:  req, out := c.ListDedicatedIpPoolsRequest(input)",
          "3322:  req.SetContext(ctx)",
          "3323:  req.ApplyOptions(opts...)",
          "3324:  return out, req.Send()",
          "3325: }",
          "3344: func (c *SESV2) ListDedicatedIpPoolsPages(input *ListDedicatedIpPoolsInput, fn func(*ListDedicatedIpPoolsOutput, bool) bool) error {",
          "3345:  return c.ListDedicatedIpPoolsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "3346: }",
          "3355: func (c *SESV2) ListDedicatedIpPoolsPagesWithContext(ctx aws.Context, input *ListDedicatedIpPoolsInput, fn func(*ListDedicatedIpPoolsOutput, bool) bool, opts ...request.Option) error {",
          "3356:  p := request.Pagination{",
          "3357:   NewRequest: func() (*request.Request, error) {",
          "3358:    var inCpy *ListDedicatedIpPoolsInput",
          "3359:    if input != nil {",
          "3360:     tmp := *input",
          "3361:     inCpy = &tmp",
          "3362:    }",
          "3363:    req, _ := c.ListDedicatedIpPoolsRequest(inCpy)",
          "3364:    req.SetContext(ctx)",
          "3365:    req.ApplyOptions(opts...)",
          "3366:    return req, nil",
          "3367:   },",
          "3368:  }",
          "3370:  for p.Next() {",
          "3371:   if !fn(p.Page().(*ListDedicatedIpPoolsOutput), !p.HasNextPage()) {",
          "3372:    break",
          "3373:   }",
          "3374:  }",
          "3376:  return p.Err()",
          "3377: }",
          "3379: const opListDeliverabilityTestReports = \"ListDeliverabilityTestReports\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2817:  return p.Err()",
          "2818: }",
          "2820: const opListSuppressedDestinations = \"ListSuppressedDestinations\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3814: const opListEmailTemplates = \"ListEmailTemplates\"",
          "3840: func (c *SESV2) ListEmailTemplatesRequest(input *ListEmailTemplatesInput) (req *request.Request, output *ListEmailTemplatesOutput) {",
          "3841:  op := &request.Operation{",
          "3842:   Name:       opListEmailTemplates,",
          "3843:   HTTPMethod: \"GET\",",
          "3844:   HTTPPath:   \"/v2/email/templates\",",
          "3845:   Paginator: &request.Paginator{",
          "3846:    InputTokens:     []string{\"NextToken\"},",
          "3847:    OutputTokens:    []string{\"NextToken\"},",
          "3848:    LimitToken:      \"PageSize\",",
          "3849:    TruncationToken: \"\",",
          "3850:   },",
          "3851:  }",
          "3853:  if input == nil {",
          "3854:   input = &ListEmailTemplatesInput{}",
          "3855:  }",
          "3857:  output = &ListEmailTemplatesOutput{}",
          "3858:  req = c.newRequest(op, input, output)",
          "3859:  return",
          "3860: }",
          "3884: func (c *SESV2) ListEmailTemplates(input *ListEmailTemplatesInput) (*ListEmailTemplatesOutput, error) {",
          "3885:  req, out := c.ListEmailTemplatesRequest(input)",
          "3886:  return out, req.Send()",
          "3887: }",
          "3898: func (c *SESV2) ListEmailTemplatesWithContext(ctx aws.Context, input *ListEmailTemplatesInput, opts ...request.Option) (*ListEmailTemplatesOutput, error) {",
          "3899:  req, out := c.ListEmailTemplatesRequest(input)",
          "3900:  req.SetContext(ctx)",
          "3901:  req.ApplyOptions(opts...)",
          "3902:  return out, req.Send()",
          "3903: }",
          "3922: func (c *SESV2) ListEmailTemplatesPages(input *ListEmailTemplatesInput, fn func(*ListEmailTemplatesOutput, bool) bool) error {",
          "3923:  return c.ListEmailTemplatesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "3924: }",
          "3933: func (c *SESV2) ListEmailTemplatesPagesWithContext(ctx aws.Context, input *ListEmailTemplatesInput, fn func(*ListEmailTemplatesOutput, bool) bool, opts ...request.Option) error {",
          "3934:  p := request.Pagination{",
          "3935:   NewRequest: func() (*request.Request, error) {",
          "3936:    var inCpy *ListEmailTemplatesInput",
          "3937:    if input != nil {",
          "3938:     tmp := *input",
          "3939:     inCpy = &tmp",
          "3940:    }",
          "3941:    req, _ := c.ListEmailTemplatesRequest(inCpy)",
          "3942:    req.SetContext(ctx)",
          "3943:    req.ApplyOptions(opts...)",
          "3944:    return req, nil",
          "3945:   },",
          "3946:  }",
          "3948:  for p.Next() {",
          "3949:   if !fn(p.Page().(*ListEmailTemplatesOutput), !p.HasNextPage()) {",
          "3950:    break",
          "3951:   }",
          "3952:  }",
          "3954:  return p.Err()",
          "3955: }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "3134:  return out, req.Send()",
          "3135: }",
          "3163: func (c *SESV2) PutAccountSendingAttributesRequest(input *PutAccountSendingAttributesInput) (req *request.Request, output *PutAccountSendingAttributesOutput) {",
          "3164:  op := &request.Operation{",
          "3165:   Name:       opPutAccountSendingAttributes,",
          "",
          "[Removed Lines]",
          "3137: const opPutAccountSendingAttributes = \"PutAccountSendingAttributes\"",
          "",
          "[Added Lines]",
          "4274: const opPutAccountDetails = \"PutAccountDetails\"",
          "4300: func (c *SESV2) PutAccountDetailsRequest(input *PutAccountDetailsInput) (req *request.Request, output *PutAccountDetailsOutput) {",
          "4301:  op := &request.Operation{",
          "4302:   Name:       opPutAccountDetails,",
          "4303:   HTTPMethod: \"POST\",",
          "4304:   HTTPPath:   \"/v2/email/account/details\",",
          "4305:  }",
          "4307:  if input == nil {",
          "4308:   input = &PutAccountDetailsInput{}",
          "4309:  }",
          "4311:  output = &PutAccountDetailsOutput{}",
          "4312:  req = c.newRequest(op, input, output)",
          "4313:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "4314:  return",
          "4315: }",
          "4339: func (c *SESV2) PutAccountDetails(input *PutAccountDetailsInput) (*PutAccountDetailsOutput, error) {",
          "4340:  req, out := c.PutAccountDetailsRequest(input)",
          "4341:  return out, req.Send()",
          "4342: }",
          "4353: func (c *SESV2) PutAccountDetailsWithContext(ctx aws.Context, input *PutAccountDetailsInput, opts ...request.Option) (*PutAccountDetailsOutput, error) {",
          "4354:  req, out := c.PutAccountDetailsRequest(input)",
          "4355:  req.SetContext(ctx)",
          "4356:  req.ApplyOptions(opts...)",
          "4357:  return out, req.Send()",
          "4358: }",
          "4360: const opPutAccountSendingAttributes = \"PutAccountSendingAttributes\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "4461:  return out, req.Send()",
          "4462: }",
          "4464: const opSendEmail = \"SendEmail\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5687: const opSendBulkEmail = \"SendBulkEmail\"",
          "5713: func (c *SESV2) SendBulkEmailRequest(input *SendBulkEmailInput) (req *request.Request, output *SendBulkEmailOutput) {",
          "5714:  op := &request.Operation{",
          "5715:   Name:       opSendBulkEmail,",
          "5716:   HTTPMethod: \"POST\",",
          "5717:   HTTPPath:   \"/v2/email/outbound-bulk-emails\",",
          "5718:  }",
          "5720:  if input == nil {",
          "5721:   input = &SendBulkEmailInput{}",
          "5722:  }",
          "5724:  output = &SendBulkEmailOutput{}",
          "5725:  req = c.newRequest(op, input, output)",
          "5726:  return",
          "5727: }",
          "5768: func (c *SESV2) SendBulkEmail(input *SendBulkEmailInput) (*SendBulkEmailOutput, error) {",
          "5769:  req, out := c.SendBulkEmailRequest(input)",
          "5770:  return out, req.Send()",
          "5771: }",
          "5782: func (c *SESV2) SendBulkEmailWithContext(ctx aws.Context, input *SendBulkEmailInput, opts ...request.Option) (*SendBulkEmailOutput, error) {",
          "5783:  req, out := c.SendBulkEmailRequest(input)",
          "5784:  req.SetContext(ctx)",
          "5785:  req.ApplyOptions(opts...)",
          "5786:  return out, req.Send()",
          "5787: }",
          "5789: const opSendCustomVerificationEmail = \"SendCustomVerificationEmail\"",
          "5815: func (c *SESV2) SendCustomVerificationEmailRequest(input *SendCustomVerificationEmailInput) (req *request.Request, output *SendCustomVerificationEmailOutput) {",
          "5816:  op := &request.Operation{",
          "5817:   Name:       opSendCustomVerificationEmail,",
          "5818:   HTTPMethod: \"POST\",",
          "5819:   HTTPPath:   \"/v2/email/outbound-custom-verification-emails\",",
          "5820:  }",
          "5822:  if input == nil {",
          "5823:   input = &SendCustomVerificationEmailInput{}",
          "5824:  }",
          "5826:  output = &SendCustomVerificationEmailOutput{}",
          "5827:  req = c.newRequest(op, input, output)",
          "5828:  return",
          "5829: }",
          "5876: func (c *SESV2) SendCustomVerificationEmail(input *SendCustomVerificationEmailInput) (*SendCustomVerificationEmailOutput, error) {",
          "5877:  req, out := c.SendCustomVerificationEmailRequest(input)",
          "5878:  return out, req.Send()",
          "5879: }",
          "5890: func (c *SESV2) SendCustomVerificationEmailWithContext(ctx aws.Context, input *SendCustomVerificationEmailInput, opts ...request.Option) (*SendCustomVerificationEmailOutput, error) {",
          "5891:  req, out := c.SendCustomVerificationEmailRequest(input)",
          "5892:  req.SetContext(ctx)",
          "5893:  req.ApplyOptions(opts...)",
          "5894:  return out, req.Send()",
          "5895: }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "4671:  return out, req.Send()",
          "4672: }",
          "4701:  op := &request.Operation{",
          "4705:  }",
          "4707:  if input == nil {",
          "4709:  }",
          "4712:  req = c.newRequest(op, input, output)",
          "4714:  return",
          "4715: }",
          "4743:  req, out := c.UntagResourceRequest(input)",
          "4744:  return out, req.Send()",
          "4745: }",
          "",
          "[Removed Lines]",
          "4674: const opUntagResource = \"UntagResource\"",
          "4700: func (c *SESV2) UntagResourceRequest(input *UntagResourceInput) (req *request.Request, output *UntagResourceOutput) {",
          "4702:   Name:       opUntagResource,",
          "4703:   HTTPMethod: \"DELETE\",",
          "4704:   HTTPPath:   \"/v2/email/tags\",",
          "4708:   input = &UntagResourceInput{}",
          "4711:  output = &UntagResourceOutput{}",
          "4713:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "4742: func (c *SESV2) UntagResource(input *UntagResourceInput) (*UntagResourceOutput, error) {",
          "",
          "[Added Lines]",
          "6111: const opTestRenderEmailTemplate = \"TestRenderEmailTemplate\"",
          "6137: func (c *SESV2) TestRenderEmailTemplateRequest(input *TestRenderEmailTemplateInput) (req *request.Request, output *TestRenderEmailTemplateOutput) {",
          "6139:   Name:       opTestRenderEmailTemplate,",
          "6140:   HTTPMethod: \"POST\",",
          "6141:   HTTPPath:   \"/v2/email/templates/{TemplateName}/render\",",
          "6145:   input = &TestRenderEmailTemplateInput{}",
          "6148:  output = &TestRenderEmailTemplateOutput{}",
          "6178: func (c *SESV2) TestRenderEmailTemplate(input *TestRenderEmailTemplateInput) (*TestRenderEmailTemplateOutput, error) {",
          "6179:  req, out := c.TestRenderEmailTemplateRequest(input)",
          "6180:  return out, req.Send()",
          "6181: }",
          "6192: func (c *SESV2) TestRenderEmailTemplateWithContext(ctx aws.Context, input *TestRenderEmailTemplateInput, opts ...request.Option) (*TestRenderEmailTemplateOutput, error) {",
          "6193:  req, out := c.TestRenderEmailTemplateRequest(input)",
          "6194:  req.SetContext(ctx)",
          "6195:  req.ApplyOptions(opts...)",
          "6196:  return out, req.Send()",
          "6197: }",
          "6199: const opUntagResource = \"UntagResource\"",
          "6225: func (c *SESV2) UntagResourceRequest(input *UntagResourceInput) (req *request.Request, output *UntagResourceOutput) {",
          "6226:  op := &request.Operation{",
          "6227:   Name:       opUntagResource,",
          "6228:   HTTPMethod: \"DELETE\",",
          "6229:   HTTPPath:   \"/v2/email/tags\",",
          "6230:  }",
          "6232:  if input == nil {",
          "6233:   input = &UntagResourceInput{}",
          "6234:  }",
          "6236:  output = &UntagResourceOutput{}",
          "6237:  req = c.newRequest(op, input, output)",
          "6238:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "6239:  return",
          "6240: }",
          "6267: func (c *SESV2) UntagResource(input *UntagResourceInput) (*UntagResourceOutput, error) {",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "4852:  return out, req.Send()",
          "4853: }",
          "4872: }",
          "4878: }",
          "4883: }",
          "4905: }",
          "4910: }",
          "4918: }",
          "4927:  return s.String()",
          "4928: }",
          "",
          "[Removed Lines]",
          "4857: type AccountSuspendedException struct {",
          "4858:  _            struct{}                  `type:\"structure\"`",
          "4859:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "4861:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "4862: }",
          "4865: func (s AccountSuspendedException) String() string {",
          "4866:  return awsutil.Prettify(s)",
          "4867: }",
          "4870: func (s AccountSuspendedException) GoString() string {",
          "4871:  return s.String()",
          "4874: func newErrorAccountSuspendedException(v protocol.ResponseMetadata) error {",
          "4875:  return &AccountSuspendedException{",
          "4876:   RespMetadata: v,",
          "4877:  }",
          "4881: func (s *AccountSuspendedException) Code() string {",
          "4882:  return \"AccountSuspendedException\"",
          "4886: func (s *AccountSuspendedException) Message() string {",
          "4887:  if s.Message_ != nil {",
          "4888:   return *s.Message_",
          "4889:  }",
          "4890:  return \"\"",
          "4891: }",
          "4894: func (s *AccountSuspendedException) OrigErr() error {",
          "4895:  return nil",
          "4896: }",
          "4898: func (s *AccountSuspendedException) Error() string {",
          "4899:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "4900: }",
          "4903: func (s *AccountSuspendedException) StatusCode() int {",
          "4904:  return s.RespMetadata.StatusCode",
          "4908: func (s *AccountSuspendedException) RequestID() string {",
          "4909:  return s.RespMetadata.RequestID",
          "4913: type AlreadyExistsException struct {",
          "4914:  _            struct{}                  `type:\"structure\"`",
          "4915:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "4917:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "4921: func (s AlreadyExistsException) String() string {",
          "4922:  return awsutil.Prettify(s)",
          "4923: }",
          "4926: func (s AlreadyExistsException) GoString() string {",
          "",
          "[Added Lines]",
          "6380: const opUpdateCustomVerificationEmailTemplate = \"UpdateCustomVerificationEmailTemplate\"",
          "6406: func (c *SESV2) UpdateCustomVerificationEmailTemplateRequest(input *UpdateCustomVerificationEmailTemplateInput) (req *request.Request, output *UpdateCustomVerificationEmailTemplateOutput) {",
          "6407:  op := &request.Operation{",
          "6408:   Name:       opUpdateCustomVerificationEmailTemplate,",
          "6409:   HTTPMethod: \"PUT\",",
          "6410:   HTTPPath:   \"/v2/email/custom-verification-email-templates/{TemplateName}\",",
          "6411:  }",
          "6413:  if input == nil {",
          "6414:   input = &UpdateCustomVerificationEmailTemplateInput{}",
          "6415:  }",
          "6417:  output = &UpdateCustomVerificationEmailTemplateOutput{}",
          "6418:  req = c.newRequest(op, input, output)",
          "6419:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "6420:  return",
          "6451: func (c *SESV2) UpdateCustomVerificationEmailTemplate(input *UpdateCustomVerificationEmailTemplateInput) (*UpdateCustomVerificationEmailTemplateOutput, error) {",
          "6452:  req, out := c.UpdateCustomVerificationEmailTemplateRequest(input)",
          "6453:  return out, req.Send()",
          "6465: func (c *SESV2) UpdateCustomVerificationEmailTemplateWithContext(ctx aws.Context, input *UpdateCustomVerificationEmailTemplateInput, opts ...request.Option) (*UpdateCustomVerificationEmailTemplateOutput, error) {",
          "6466:  req, out := c.UpdateCustomVerificationEmailTemplateRequest(input)",
          "6467:  req.SetContext(ctx)",
          "6468:  req.ApplyOptions(opts...)",
          "6469:  return out, req.Send()",
          "6472: const opUpdateEmailIdentityPolicy = \"UpdateEmailIdentityPolicy\"",
          "6498: func (c *SESV2) UpdateEmailIdentityPolicyRequest(input *UpdateEmailIdentityPolicyInput) (req *request.Request, output *UpdateEmailIdentityPolicyOutput) {",
          "6499:  op := &request.Operation{",
          "6500:   Name:       opUpdateEmailIdentityPolicy,",
          "6501:   HTTPMethod: \"PUT\",",
          "6502:   HTTPPath:   \"/v2/email/identities/{EmailIdentity}/policies/{PolicyName}\",",
          "6503:  }",
          "6505:  if input == nil {",
          "6506:   input = &UpdateEmailIdentityPolicyInput{}",
          "6507:  }",
          "6509:  output = &UpdateEmailIdentityPolicyOutput{}",
          "6510:  req = c.newRequest(op, input, output)",
          "6511:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "6512:  return",
          "6548: func (c *SESV2) UpdateEmailIdentityPolicy(input *UpdateEmailIdentityPolicyInput) (*UpdateEmailIdentityPolicyOutput, error) {",
          "6549:  req, out := c.UpdateEmailIdentityPolicyRequest(input)",
          "6550:  return out, req.Send()",
          "6562: func (c *SESV2) UpdateEmailIdentityPolicyWithContext(ctx aws.Context, input *UpdateEmailIdentityPolicyInput, opts ...request.Option) (*UpdateEmailIdentityPolicyOutput, error) {",
          "6563:  req, out := c.UpdateEmailIdentityPolicyRequest(input)",
          "6564:  req.SetContext(ctx)",
          "6565:  req.ApplyOptions(opts...)",
          "6566:  return out, req.Send()",
          "6569: const opUpdateEmailTemplate = \"UpdateEmailTemplate\"",
          "6595: func (c *SESV2) UpdateEmailTemplateRequest(input *UpdateEmailTemplateInput) (req *request.Request, output *UpdateEmailTemplateOutput) {",
          "6596:  op := &request.Operation{",
          "6597:   Name:       opUpdateEmailTemplate,",
          "6598:   HTTPMethod: \"PUT\",",
          "6599:   HTTPPath:   \"/v2/email/templates/{TemplateName}\",",
          "6600:  }",
          "6602:  if input == nil {",
          "6603:   input = &UpdateEmailTemplateInput{}",
          "6604:  }",
          "6606:  output = &UpdateEmailTemplateOutput{}",
          "6607:  req = c.newRequest(op, input, output)",
          "6608:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "6609:  return",
          "6610: }",
          "6638: func (c *SESV2) UpdateEmailTemplate(input *UpdateEmailTemplateInput) (*UpdateEmailTemplateOutput, error) {",
          "6639:  req, out := c.UpdateEmailTemplateRequest(input)",
          "6640:  return out, req.Send()",
          "6641: }",
          "6652: func (c *SESV2) UpdateEmailTemplateWithContext(ctx aws.Context, input *UpdateEmailTemplateInput, opts ...request.Option) (*UpdateEmailTemplateOutput, error) {",
          "6653:  req, out := c.UpdateEmailTemplateRequest(input)",
          "6654:  req.SetContext(ctx)",
          "6655:  req.ApplyOptions(opts...)",
          "6656:  return out, req.Send()",
          "6657: }",
          "6660: type AccountDetails struct {",
          "6661:  _ struct{} `type:\"structure\"`",
          "6665:  AdditionalContactEmailAddresses []*string `min:\"1\" type:\"list\" sensitive:\"true\"`",
          "6669:  ContactLanguage *string `type:\"string\" enum:\"ContactLanguage\"`",
          "6679:  MailType *string `type:\"string\" enum:\"MailType\"`",
          "6682:  ReviewDetails *ReviewDetails `type:\"structure\"`",
          "6685:  UseCaseDescription *string `min:\"1\" type:\"string\" sensitive:\"true\"`",
          "6689:  WebsiteURL *string `min:\"1\" type:\"string\" sensitive:\"true\"`",
          "6690: }",
          "6693: func (s AccountDetails) String() string {",
          "6694:  return awsutil.Prettify(s)",
          "6695: }",
          "6698: func (s AccountDetails) GoString() string {",
          "6699:  return s.String()",
          "6700: }",
          "6703: func (s *AccountDetails) SetAdditionalContactEmailAddresses(v []*string) *AccountDetails {",
          "6704:  s.AdditionalContactEmailAddresses = v",
          "6705:  return s",
          "6706: }",
          "6709: func (s *AccountDetails) SetContactLanguage(v string) *AccountDetails {",
          "6710:  s.ContactLanguage = &v",
          "6711:  return s",
          "6712: }",
          "6715: func (s *AccountDetails) SetMailType(v string) *AccountDetails {",
          "6716:  s.MailType = &v",
          "6717:  return s",
          "6718: }",
          "6721: func (s *AccountDetails) SetReviewDetails(v *ReviewDetails) *AccountDetails {",
          "6722:  s.ReviewDetails = v",
          "6723:  return s",
          "6724: }",
          "6727: func (s *AccountDetails) SetUseCaseDescription(v string) *AccountDetails {",
          "6728:  s.UseCaseDescription = &v",
          "6729:  return s",
          "6730: }",
          "6733: func (s *AccountDetails) SetWebsiteURL(v string) *AccountDetails {",
          "6734:  s.WebsiteURL = &v",
          "6735:  return s",
          "6736: }",
          "6740: type AccountSuspendedException struct {",
          "6741:  _            struct{}                  `type:\"structure\"`",
          "6742:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "6744:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "6745: }",
          "6748: func (s AccountSuspendedException) String() string {",
          "6749:  return awsutil.Prettify(s)",
          "6750: }",
          "6753: func (s AccountSuspendedException) GoString() string {",
          "6754:  return s.String()",
          "6755: }",
          "6757: func newErrorAccountSuspendedException(v protocol.ResponseMetadata) error {",
          "6758:  return &AccountSuspendedException{",
          "6759:   RespMetadata: v,",
          "6760:  }",
          "6761: }",
          "6764: func (s *AccountSuspendedException) Code() string {",
          "6765:  return \"AccountSuspendedException\"",
          "6766: }",
          "6769: func (s *AccountSuspendedException) Message() string {",
          "6770:  if s.Message_ != nil {",
          "6771:   return *s.Message_",
          "6772:  }",
          "6773:  return \"\"",
          "6774: }",
          "6777: func (s *AccountSuspendedException) OrigErr() error {",
          "6778:  return nil",
          "6779: }",
          "6781: func (s *AccountSuspendedException) Error() string {",
          "6782:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "6783: }",
          "6786: func (s *AccountSuspendedException) StatusCode() int {",
          "6787:  return s.RespMetadata.StatusCode",
          "6788: }",
          "6791: func (s *AccountSuspendedException) RequestID() string {",
          "6792:  return s.RespMetadata.RequestID",
          "6793: }",
          "6796: type AlreadyExistsException struct {",
          "6797:  _            struct{}                  `type:\"structure\"`",
          "6798:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "6800:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "6801: }",
          "6804: func (s AlreadyExistsException) String() string {",
          "6805:  return awsutil.Prettify(s)",
          "6806: }",
          "6809: func (s AlreadyExistsException) GoString() string {",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "5122:  return s",
          "5123: }",
          "5129:  _ struct{} `type:\"structure\"`",
          "5136: }",
          "5140:  return awsutil.Prettify(s)",
          "5141: }",
          "5145:  return s.String()",
          "5146: }",
          "5162:   }",
          "5163:  }",
          "",
          "[Removed Lines]",
          "5128: type CloudWatchDestination struct {",
          "5135:  DimensionConfigurations []*CloudWatchDimensionConfiguration `type:\"list\" required:\"true\"`",
          "5139: func (s CloudWatchDestination) String() string {",
          "5144: func (s CloudWatchDestination) GoString() string {",
          "5149: func (s *CloudWatchDestination) Validate() error {",
          "5150:  invalidParams := request.ErrInvalidParams{Context: \"CloudWatchDestination\"}",
          "5151:  if s.DimensionConfigurations == nil {",
          "5152:   invalidParams.Add(request.NewErrParamRequired(\"DimensionConfigurations\"))",
          "5153:  }",
          "5154:  if s.DimensionConfigurations != nil {",
          "5155:   for i, v := range s.DimensionConfigurations {",
          "5156:    if v == nil {",
          "5157:     continue",
          "5158:    }",
          "5159:    if err := v.Validate(); err != nil {",
          "5160:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"DimensionConfigurations\", i), err.(request.ErrInvalidParams))",
          "5161:    }",
          "",
          "[Added Lines]",
          "7010: type BulkEmailContent struct {",
          "7014:  Template *Template `type:\"structure\"`",
          "7018: func (s BulkEmailContent) String() string {",
          "7023: func (s BulkEmailContent) GoString() string {",
          "7028: func (s *BulkEmailContent) Validate() error {",
          "7029:  invalidParams := request.ErrInvalidParams{Context: \"BulkEmailContent\"}",
          "7030:  if s.Template != nil {",
          "7031:   if err := s.Template.Validate(); err != nil {",
          "7032:    invalidParams.AddNested(\"Template\", err.(request.ErrInvalidParams))",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "5168:  return nil",
          "5169: }",
          "5174:  return s",
          "5175: }",
          "5180:  _ struct{} `type:\"structure\"`",
          "5213: }",
          "5217:  return awsutil.Prettify(s)",
          "5218: }",
          "5222:  return s.String()",
          "5223: }",
          "5233:  }",
          "5236:  }",
          "5238:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "5172: func (s *CloudWatchDestination) SetDimensionConfigurations(v []*CloudWatchDimensionConfiguration) *CloudWatchDestination {",
          "5173:  s.DimensionConfigurations = v",
          "5179: type CloudWatchDimensionConfiguration struct {",
          "5192:  DefaultDimensionValue *string `type:\"string\" required:\"true\"`",
          "5203:  DimensionName *string `type:\"string\" required:\"true\"`",
          "5212:  DimensionValueSource *string `type:\"string\" required:\"true\" enum:\"DimensionValueSource\"`",
          "5216: func (s CloudWatchDimensionConfiguration) String() string {",
          "5221: func (s CloudWatchDimensionConfiguration) GoString() string {",
          "5226: func (s *CloudWatchDimensionConfiguration) Validate() error {",
          "5227:  invalidParams := request.ErrInvalidParams{Context: \"CloudWatchDimensionConfiguration\"}",
          "5228:  if s.DefaultDimensionValue == nil {",
          "5229:   invalidParams.Add(request.NewErrParamRequired(\"DefaultDimensionValue\"))",
          "5230:  }",
          "5231:  if s.DimensionName == nil {",
          "5232:   invalidParams.Add(request.NewErrParamRequired(\"DimensionName\"))",
          "5234:  if s.DimensionValueSource == nil {",
          "5235:   invalidParams.Add(request.NewErrParamRequired(\"DimensionValueSource\"))",
          "",
          "[Added Lines]",
          "7043: func (s *BulkEmailContent) SetTemplate(v *Template) *BulkEmailContent {",
          "7044:  s.Template = v",
          "7048: type BulkEmailEntry struct {",
          "7063:  Destination *Destination `type:\"structure\" required:\"true\"`",
          "7066:  ReplacementEmailContent *ReplacementEmailContent `type:\"structure\"`",
          "7071:  ReplacementTags []*MessageTag `type:\"list\"`",
          "7075: func (s BulkEmailEntry) String() string {",
          "7080: func (s BulkEmailEntry) GoString() string {",
          "7085: func (s *BulkEmailEntry) Validate() error {",
          "7086:  invalidParams := request.ErrInvalidParams{Context: \"BulkEmailEntry\"}",
          "7087:  if s.Destination == nil {",
          "7088:   invalidParams.Add(request.NewErrParamRequired(\"Destination\"))",
          "7090:  if s.ReplacementTags != nil {",
          "7091:   for i, v := range s.ReplacementTags {",
          "7092:    if v == nil {",
          "7093:     continue",
          "7094:    }",
          "7095:    if err := v.Validate(); err != nil {",
          "7096:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ReplacementTags\", i), err.(request.ErrInvalidParams))",
          "7097:    }",
          "7098:   }",
          "7099:  }",
          "7101:  if invalidParams.Len() > 0 {",
          "7102:   return invalidParams",
          "7103:  }",
          "7104:  return nil",
          "7105: }",
          "7108: func (s *BulkEmailEntry) SetDestination(v *Destination) *BulkEmailEntry {",
          "7109:  s.Destination = v",
          "7110:  return s",
          "7111: }",
          "7114: func (s *BulkEmailEntry) SetReplacementEmailContent(v *ReplacementEmailContent) *BulkEmailEntry {",
          "7115:  s.ReplacementEmailContent = v",
          "7116:  return s",
          "7117: }",
          "7120: func (s *BulkEmailEntry) SetReplacementTags(v []*MessageTag) *BulkEmailEntry {",
          "7121:  s.ReplacementTags = v",
          "7122:  return s",
          "7123: }",
          "7126: type BulkEmailEntryResult struct {",
          "7127:  _ struct{} `type:\"structure\"`",
          "7131:  Error *string `type:\"string\"`",
          "7134:  MessageId *string `type:\"string\"`",
          "7182:  Status *string `type:\"string\" enum:\"BulkEmailStatus\"`",
          "7183: }",
          "7186: func (s BulkEmailEntryResult) String() string {",
          "7187:  return awsutil.Prettify(s)",
          "7188: }",
          "7191: func (s BulkEmailEntryResult) GoString() string {",
          "7192:  return s.String()",
          "7193: }",
          "7196: func (s *BulkEmailEntryResult) SetError(v string) *BulkEmailEntryResult {",
          "7197:  s.Error = &v",
          "7198:  return s",
          "7199: }",
          "7202: func (s *BulkEmailEntryResult) SetMessageId(v string) *BulkEmailEntryResult {",
          "7203:  s.MessageId = &v",
          "7204:  return s",
          "7205: }",
          "7208: func (s *BulkEmailEntryResult) SetStatus(v string) *BulkEmailEntryResult {",
          "7209:  s.Status = &v",
          "7210:  return s",
          "7211: }",
          "7216: type CloudWatchDestination struct {",
          "7217:  _ struct{} `type:\"structure\"`",
          "7223:  DimensionConfigurations []*CloudWatchDimensionConfiguration `type:\"list\" required:\"true\"`",
          "7224: }",
          "7227: func (s CloudWatchDestination) String() string {",
          "7228:  return awsutil.Prettify(s)",
          "7229: }",
          "7232: func (s CloudWatchDestination) GoString() string {",
          "7233:  return s.String()",
          "7234: }",
          "7237: func (s *CloudWatchDestination) Validate() error {",
          "7238:  invalidParams := request.ErrInvalidParams{Context: \"CloudWatchDestination\"}",
          "7239:  if s.DimensionConfigurations == nil {",
          "7240:   invalidParams.Add(request.NewErrParamRequired(\"DimensionConfigurations\"))",
          "7241:  }",
          "7242:  if s.DimensionConfigurations != nil {",
          "7243:   for i, v := range s.DimensionConfigurations {",
          "7244:    if v == nil {",
          "7245:     continue",
          "7246:    }",
          "7247:    if err := v.Validate(); err != nil {",
          "7248:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"DimensionConfigurations\", i), err.(request.ErrInvalidParams))",
          "7249:    }",
          "7250:   }",
          "7251:  }",
          "7253:  if invalidParams.Len() > 0 {",
          "7254:   return invalidParams",
          "7255:  }",
          "7256:  return nil",
          "7257: }",
          "7260: func (s *CloudWatchDestination) SetDimensionConfigurations(v []*CloudWatchDimensionConfiguration) *CloudWatchDestination {",
          "7261:  s.DimensionConfigurations = v",
          "7262:  return s",
          "7263: }",
          "7267: type CloudWatchDimensionConfiguration struct {",
          "7268:  _ struct{} `type:\"structure\"`",
          "7280:  DefaultDimensionValue *string `type:\"string\" required:\"true\"`",
          "7291:  DimensionName *string `type:\"string\" required:\"true\"`",
          "7300:  DimensionValueSource *string `type:\"string\" required:\"true\" enum:\"DimensionValueSource\"`",
          "7301: }",
          "7304: func (s CloudWatchDimensionConfiguration) String() string {",
          "7305:  return awsutil.Prettify(s)",
          "7306: }",
          "7309: func (s CloudWatchDimensionConfiguration) GoString() string {",
          "7310:  return s.String()",
          "7311: }",
          "7314: func (s *CloudWatchDimensionConfiguration) Validate() error {",
          "7315:  invalidParams := request.ErrInvalidParams{Context: \"CloudWatchDimensionConfiguration\"}",
          "7316:  if s.DefaultDimensionValue == nil {",
          "7317:   invalidParams.Add(request.NewErrParamRequired(\"DefaultDimensionValue\"))",
          "7318:  }",
          "7319:  if s.DimensionName == nil {",
          "7320:   invalidParams.Add(request.NewErrParamRequired(\"DimensionName\"))",
          "7321:  }",
          "7322:  if s.DimensionValueSource == nil {",
          "7323:   invalidParams.Add(request.NewErrParamRequired(\"DimensionValueSource\"))",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "5315:  return s.RespMetadata.RequestID",
          "5316: }",
          "5320: type Content struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7407: type ConflictException struct {",
          "7408:  _            struct{}                  `type:\"structure\"`",
          "7409:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "7411:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "7412: }",
          "7415: func (s ConflictException) String() string {",
          "7416:  return awsutil.Prettify(s)",
          "7417: }",
          "7420: func (s ConflictException) GoString() string {",
          "7421:  return s.String()",
          "7422: }",
          "7424: func newErrorConflictException(v protocol.ResponseMetadata) error {",
          "7425:  return &ConflictException{",
          "7426:   RespMetadata: v,",
          "7427:  }",
          "7428: }",
          "7431: func (s *ConflictException) Code() string {",
          "7432:  return \"ConflictException\"",
          "7433: }",
          "7436: func (s *ConflictException) Message() string {",
          "7437:  if s.Message_ != nil {",
          "7438:   return *s.Message_",
          "7439:  }",
          "7440:  return \"\"",
          "7441: }",
          "7444: func (s *ConflictException) OrigErr() error {",
          "7445:  return nil",
          "7446: }",
          "7448: func (s *ConflictException) Error() string {",
          "7449:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "7450: }",
          "7453: func (s *ConflictException) StatusCode() int {",
          "7454:  return s.RespMetadata.StatusCode",
          "7455: }",
          "7458: func (s *ConflictException) RequestID() string {",
          "7459:  return s.RespMetadata.RequestID",
          "7460: }",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "5589:  return s.String()",
          "5590: }",
          "5594:  _ struct{} `type:\"structure\"`",
          "5604: }",
          "5608:  return awsutil.Prettify(s)",
          "5609: }",
          "5613:  return s.String()",
          "5614: }",
          "5621:  }",
          "5631:  }",
          "5633:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "5593: type CreateDedicatedIpPoolInput struct {",
          "5599:  PoolName *string `type:\"string\" required:\"true\"`",
          "5603:  Tags []*Tag `type:\"list\"`",
          "5607: func (s CreateDedicatedIpPoolInput) String() string {",
          "5612: func (s CreateDedicatedIpPoolInput) GoString() string {",
          "5617: func (s *CreateDedicatedIpPoolInput) Validate() error {",
          "5618:  invalidParams := request.ErrInvalidParams{Context: \"CreateDedicatedIpPoolInput\"}",
          "5619:  if s.PoolName == nil {",
          "5620:   invalidParams.Add(request.NewErrParamRequired(\"PoolName\"))",
          "5622:  if s.Tags != nil {",
          "5623:   for i, v := range s.Tags {",
          "5624:    if v == nil {",
          "5625:     continue",
          "5626:    }",
          "5627:    if err := v.Validate(); err != nil {",
          "5628:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "5629:    }",
          "5630:   }",
          "",
          "[Added Lines]",
          "7737: type CreateCustomVerificationEmailTemplateInput struct {",
          "7744:  FailureRedirectionURL *string `type:\"string\" required:\"true\"`",
          "7749:  FromEmailAddress *string `type:\"string\" required:\"true\"`",
          "7755:  SuccessRedirectionURL *string `type:\"string\" required:\"true\"`",
          "7764:  TemplateContent *string `type:\"string\" required:\"true\"`",
          "7769:  TemplateName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "7774:  TemplateSubject *string `type:\"string\" required:\"true\"`",
          "7778: func (s CreateCustomVerificationEmailTemplateInput) String() string {",
          "7783: func (s CreateCustomVerificationEmailTemplateInput) GoString() string {",
          "7788: func (s *CreateCustomVerificationEmailTemplateInput) Validate() error {",
          "7789:  invalidParams := request.ErrInvalidParams{Context: \"CreateCustomVerificationEmailTemplateInput\"}",
          "7790:  if s.FailureRedirectionURL == nil {",
          "7791:   invalidParams.Add(request.NewErrParamRequired(\"FailureRedirectionURL\"))",
          "7793:  if s.FromEmailAddress == nil {",
          "7794:   invalidParams.Add(request.NewErrParamRequired(\"FromEmailAddress\"))",
          "7795:  }",
          "7796:  if s.SuccessRedirectionURL == nil {",
          "7797:   invalidParams.Add(request.NewErrParamRequired(\"SuccessRedirectionURL\"))",
          "7798:  }",
          "7799:  if s.TemplateContent == nil {",
          "7800:   invalidParams.Add(request.NewErrParamRequired(\"TemplateContent\"))",
          "7801:  }",
          "7802:  if s.TemplateName == nil {",
          "7803:   invalidParams.Add(request.NewErrParamRequired(\"TemplateName\"))",
          "7804:  }",
          "7805:  if s.TemplateName != nil && len(*s.TemplateName) < 1 {",
          "7806:   invalidParams.Add(request.NewErrParamMinLen(\"TemplateName\", 1))",
          "7807:  }",
          "7808:  if s.TemplateSubject == nil {",
          "7809:   invalidParams.Add(request.NewErrParamRequired(\"TemplateSubject\"))",
          "7810:  }",
          "7812:  if invalidParams.Len() > 0 {",
          "7813:   return invalidParams",
          "7814:  }",
          "7815:  return nil",
          "7816: }",
          "7819: func (s *CreateCustomVerificationEmailTemplateInput) SetFailureRedirectionURL(v string) *CreateCustomVerificationEmailTemplateInput {",
          "7820:  s.FailureRedirectionURL = &v",
          "7821:  return s",
          "7822: }",
          "7825: func (s *CreateCustomVerificationEmailTemplateInput) SetFromEmailAddress(v string) *CreateCustomVerificationEmailTemplateInput {",
          "7826:  s.FromEmailAddress = &v",
          "7827:  return s",
          "7828: }",
          "7831: func (s *CreateCustomVerificationEmailTemplateInput) SetSuccessRedirectionURL(v string) *CreateCustomVerificationEmailTemplateInput {",
          "7832:  s.SuccessRedirectionURL = &v",
          "7833:  return s",
          "7834: }",
          "7837: func (s *CreateCustomVerificationEmailTemplateInput) SetTemplateContent(v string) *CreateCustomVerificationEmailTemplateInput {",
          "7838:  s.TemplateContent = &v",
          "7839:  return s",
          "7840: }",
          "7843: func (s *CreateCustomVerificationEmailTemplateInput) SetTemplateName(v string) *CreateCustomVerificationEmailTemplateInput {",
          "7844:  s.TemplateName = &v",
          "7845:  return s",
          "7846: }",
          "7849: func (s *CreateCustomVerificationEmailTemplateInput) SetTemplateSubject(v string) *CreateCustomVerificationEmailTemplateInput {",
          "7850:  s.TemplateSubject = &v",
          "7851:  return s",
          "7852: }",
          "7856: type CreateCustomVerificationEmailTemplateOutput struct {",
          "7857:  _ struct{} `type:\"structure\"`",
          "7858: }",
          "7861: func (s CreateCustomVerificationEmailTemplateOutput) String() string {",
          "7862:  return awsutil.Prettify(s)",
          "7863: }",
          "7866: func (s CreateCustomVerificationEmailTemplateOutput) GoString() string {",
          "7867:  return s.String()",
          "7868: }",
          "7871: type CreateDedicatedIpPoolInput struct {",
          "7872:  _ struct{} `type:\"structure\"`",
          "7877:  PoolName *string `type:\"string\" required:\"true\"`",
          "7881:  Tags []*Tag `type:\"list\"`",
          "7882: }",
          "7885: func (s CreateDedicatedIpPoolInput) String() string {",
          "7886:  return awsutil.Prettify(s)",
          "7887: }",
          "7890: func (s CreateDedicatedIpPoolInput) GoString() string {",
          "7891:  return s.String()",
          "7892: }",
          "7895: func (s *CreateDedicatedIpPoolInput) Validate() error {",
          "7896:  invalidParams := request.ErrInvalidParams{Context: \"CreateDedicatedIpPoolInput\"}",
          "7897:  if s.PoolName == nil {",
          "7898:   invalidParams.Add(request.NewErrParamRequired(\"PoolName\"))",
          "7899:  }",
          "7900:  if s.Tags != nil {",
          "7901:   for i, v := range s.Tags {",
          "7902:    if v == nil {",
          "7903:     continue",
          "7904:    }",
          "7905:    if err := v.Validate(); err != nil {",
          "7906:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "7907:    }",
          "7908:   }",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "5822:  EmailIdentity *string `type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "8100:  EmailIdentity *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "5842:  if s.EmailIdentity == nil {",
          "5843:   invalidParams.Add(request.NewErrParamRequired(\"EmailIdentity\"))",
          "5844:  }",
          "5845:  if s.DkimSigningAttributes != nil {",
          "5846:   if err := s.DkimSigningAttributes.Validate(); err != nil {",
          "5847:    invalidParams.AddNested(\"DkimSigningAttributes\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8123:  if s.EmailIdentity != nil && len(*s.EmailIdentity) < 1 {",
          "8124:   invalidParams.Add(request.NewErrParamMinLen(\"EmailIdentity\", 1))",
          "8125:  }",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "5929:  return s",
          "5930: }",
          "5934: type DailyVolume struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8217: type CreateEmailIdentityPolicyInput struct {",
          "8218:  _ struct{} `type:\"structure\"`",
          "8223:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" min:\"1\" type:\"string\" required:\"true\"`",
          "8231:  Policy *string `min:\"1\" type:\"string\" required:\"true\"`",
          "8239:  PolicyName *string `location:\"uri\" locationName:\"PolicyName\" min:\"1\" type:\"string\" required:\"true\"`",
          "8240: }",
          "8243: func (s CreateEmailIdentityPolicyInput) String() string {",
          "8244:  return awsutil.Prettify(s)",
          "8245: }",
          "8248: func (s CreateEmailIdentityPolicyInput) GoString() string {",
          "8249:  return s.String()",
          "8250: }",
          "8253: func (s *CreateEmailIdentityPolicyInput) Validate() error {",
          "8254:  invalidParams := request.ErrInvalidParams{Context: \"CreateEmailIdentityPolicyInput\"}",
          "8255:  if s.EmailIdentity == nil {",
          "8256:   invalidParams.Add(request.NewErrParamRequired(\"EmailIdentity\"))",
          "8257:  }",
          "8258:  if s.EmailIdentity != nil && len(*s.EmailIdentity) < 1 {",
          "8259:   invalidParams.Add(request.NewErrParamMinLen(\"EmailIdentity\", 1))",
          "8260:  }",
          "8261:  if s.Policy == nil {",
          "8262:   invalidParams.Add(request.NewErrParamRequired(\"Policy\"))",
          "8263:  }",
          "8264:  if s.Policy != nil && len(*s.Policy) < 1 {",
          "8265:   invalidParams.Add(request.NewErrParamMinLen(\"Policy\", 1))",
          "8266:  }",
          "8267:  if s.PolicyName == nil {",
          "8268:   invalidParams.Add(request.NewErrParamRequired(\"PolicyName\"))",
          "8269:  }",
          "8270:  if s.PolicyName != nil && len(*s.PolicyName) < 1 {",
          "8271:   invalidParams.Add(request.NewErrParamMinLen(\"PolicyName\", 1))",
          "8272:  }",
          "8274:  if invalidParams.Len() > 0 {",
          "8275:   return invalidParams",
          "8276:  }",
          "8277:  return nil",
          "8278: }",
          "8281: func (s *CreateEmailIdentityPolicyInput) SetEmailIdentity(v string) *CreateEmailIdentityPolicyInput {",
          "8282:  s.EmailIdentity = &v",
          "8283:  return s",
          "8284: }",
          "8287: func (s *CreateEmailIdentityPolicyInput) SetPolicy(v string) *CreateEmailIdentityPolicyInput {",
          "8288:  s.Policy = &v",
          "8289:  return s",
          "8290: }",
          "8293: func (s *CreateEmailIdentityPolicyInput) SetPolicyName(v string) *CreateEmailIdentityPolicyInput {",
          "8294:  s.PolicyName = &v",
          "8295:  return s",
          "8296: }",
          "8300: type CreateEmailIdentityPolicyOutput struct {",
          "8301:  _ struct{} `type:\"structure\"`",
          "8302: }",
          "8305: func (s CreateEmailIdentityPolicyOutput) String() string {",
          "8306:  return awsutil.Prettify(s)",
          "8307: }",
          "8310: func (s CreateEmailIdentityPolicyOutput) GoString() string {",
          "8311:  return s.String()",
          "8312: }",
          "8316: type CreateEmailTemplateInput struct {",
          "8317:  _ struct{} `type:\"structure\"`",
          "8323:  TemplateContent *EmailTemplateContent `type:\"structure\" required:\"true\"`",
          "8328:  TemplateName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "8329: }",
          "8332: func (s CreateEmailTemplateInput) String() string {",
          "8333:  return awsutil.Prettify(s)",
          "8334: }",
          "8337: func (s CreateEmailTemplateInput) GoString() string {",
          "8338:  return s.String()",
          "8339: }",
          "8342: func (s *CreateEmailTemplateInput) Validate() error {",
          "8343:  invalidParams := request.ErrInvalidParams{Context: \"CreateEmailTemplateInput\"}",
          "8344:  if s.TemplateContent == nil {",
          "8345:   invalidParams.Add(request.NewErrParamRequired(\"TemplateContent\"))",
          "8346:  }",
          "8347:  if s.TemplateName == nil {",
          "8348:   invalidParams.Add(request.NewErrParamRequired(\"TemplateName\"))",
          "8349:  }",
          "8350:  if s.TemplateName != nil && len(*s.TemplateName) < 1 {",
          "8351:   invalidParams.Add(request.NewErrParamMinLen(\"TemplateName\", 1))",
          "8352:  }",
          "8354:  if invalidParams.Len() > 0 {",
          "8355:   return invalidParams",
          "8356:  }",
          "8357:  return nil",
          "8358: }",
          "8361: func (s *CreateEmailTemplateInput) SetTemplateContent(v *EmailTemplateContent) *CreateEmailTemplateInput {",
          "8362:  s.TemplateContent = v",
          "8363:  return s",
          "8364: }",
          "8367: func (s *CreateEmailTemplateInput) SetTemplateName(v string) *CreateEmailTemplateInput {",
          "8368:  s.TemplateName = &v",
          "8369:  return s",
          "8370: }",
          "8374: type CreateEmailTemplateOutput struct {",
          "8375:  _ struct{} `type:\"structure\"`",
          "8376: }",
          "8379: func (s CreateEmailTemplateOutput) String() string {",
          "8380:  return awsutil.Prettify(s)",
          "8381: }",
          "8384: func (s CreateEmailTemplateOutput) GoString() string {",
          "8385:  return s.String()",
          "8386: }",
          "8389: type CustomVerificationEmailTemplateMetadata struct {",
          "8390:  _ struct{} `type:\"structure\"`",
          "8394:  FailureRedirectionURL *string `type:\"string\"`",
          "8397:  FromEmailAddress *string `type:\"string\"`",
          "8401:  SuccessRedirectionURL *string `type:\"string\"`",
          "8404:  TemplateName *string `min:\"1\" type:\"string\"`",
          "8407:  TemplateSubject *string `type:\"string\"`",
          "8408: }",
          "8411: func (s CustomVerificationEmailTemplateMetadata) String() string {",
          "8412:  return awsutil.Prettify(s)",
          "8413: }",
          "8416: func (s CustomVerificationEmailTemplateMetadata) GoString() string {",
          "8417:  return s.String()",
          "8418: }",
          "8421: func (s *CustomVerificationEmailTemplateMetadata) SetFailureRedirectionURL(v string) *CustomVerificationEmailTemplateMetadata {",
          "8422:  s.FailureRedirectionURL = &v",
          "8423:  return s",
          "8424: }",
          "8427: func (s *CustomVerificationEmailTemplateMetadata) SetFromEmailAddress(v string) *CustomVerificationEmailTemplateMetadata {",
          "8428:  s.FromEmailAddress = &v",
          "8429:  return s",
          "8430: }",
          "8433: func (s *CustomVerificationEmailTemplateMetadata) SetSuccessRedirectionURL(v string) *CustomVerificationEmailTemplateMetadata {",
          "8434:  s.SuccessRedirectionURL = &v",
          "8435:  return s",
          "8436: }",
          "8439: func (s *CustomVerificationEmailTemplateMetadata) SetTemplateName(v string) *CustomVerificationEmailTemplateMetadata {",
          "8440:  s.TemplateName = &v",
          "8441:  return s",
          "8442: }",
          "8445: func (s *CustomVerificationEmailTemplateMetadata) SetTemplateSubject(v string) *CustomVerificationEmailTemplateMetadata {",
          "8446:  s.TemplateSubject = &v",
          "8447:  return s",
          "8448: }",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "6179:  return s.String()",
          "6180: }",
          "6184:  _ struct{} `type:\"structure\"`",
          "6190: }",
          "6194:  return awsutil.Prettify(s)",
          "6195: }",
          "6199:  return s.String()",
          "6200: }",
          "6207:  }",
          "6210:  }",
          "6212:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "6183: type DeleteDedicatedIpPoolInput struct {",
          "6189:  PoolName *string `location:\"uri\" locationName:\"PoolName\" type:\"string\" required:\"true\"`",
          "6193: func (s DeleteDedicatedIpPoolInput) String() string {",
          "6198: func (s DeleteDedicatedIpPoolInput) GoString() string {",
          "6203: func (s *DeleteDedicatedIpPoolInput) Validate() error {",
          "6204:  invalidParams := request.ErrInvalidParams{Context: \"DeleteDedicatedIpPoolInput\"}",
          "6205:  if s.PoolName == nil {",
          "6206:   invalidParams.Add(request.NewErrParamRequired(\"PoolName\"))",
          "6208:  if s.PoolName != nil && len(*s.PoolName) < 1 {",
          "6209:   invalidParams.Add(request.NewErrParamMinLen(\"PoolName\", 1))",
          "",
          "[Added Lines]",
          "8701: type DeleteCustomVerificationEmailTemplateInput struct {",
          "8707:  TemplateName *string `location:\"uri\" locationName:\"TemplateName\" min:\"1\" type:\"string\" required:\"true\"`",
          "8711: func (s DeleteCustomVerificationEmailTemplateInput) String() string {",
          "8716: func (s DeleteCustomVerificationEmailTemplateInput) GoString() string {",
          "8721: func (s *DeleteCustomVerificationEmailTemplateInput) Validate() error {",
          "8722:  invalidParams := request.ErrInvalidParams{Context: \"DeleteCustomVerificationEmailTemplateInput\"}",
          "8723:  if s.TemplateName == nil {",
          "8724:   invalidParams.Add(request.NewErrParamRequired(\"TemplateName\"))",
          "8726:  if s.TemplateName != nil && len(*s.TemplateName) < 1 {",
          "8727:   invalidParams.Add(request.NewErrParamMinLen(\"TemplateName\", 1))",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "6215:  return nil",
          "6216: }",
          "6221:  return s",
          "6222: }",
          "6227:  _ struct{} `type:\"structure\"`",
          "6228: }",
          "6232:  return awsutil.Prettify(s)",
          "6233: }",
          "6237:  return s.String()",
          "6238: }",
          "6245:  _ struct{} `type:\"structure\"`",
          "6251: }",
          "6255:  return awsutil.Prettify(s)",
          "6256: }",
          "6260:  return s.String()",
          "6261: }",
          "",
          "[Removed Lines]",
          "6219: func (s *DeleteDedicatedIpPoolInput) SetPoolName(v string) *DeleteDedicatedIpPoolInput {",
          "6220:  s.PoolName = &v",
          "6226: type DeleteDedicatedIpPoolOutput struct {",
          "6231: func (s DeleteDedicatedIpPoolOutput) String() string {",
          "6236: func (s DeleteDedicatedIpPoolOutput) GoString() string {",
          "6244: type DeleteEmailIdentityInput struct {",
          "6250:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" type:\"string\" required:\"true\"`",
          "6254: func (s DeleteEmailIdentityInput) String() string {",
          "6259: func (s DeleteEmailIdentityInput) GoString() string {",
          "",
          "[Added Lines]",
          "8737: func (s *DeleteCustomVerificationEmailTemplateInput) SetTemplateName(v string) *DeleteCustomVerificationEmailTemplateInput {",
          "8738:  s.TemplateName = &v",
          "8744: type DeleteCustomVerificationEmailTemplateOutput struct {",
          "8749: func (s DeleteCustomVerificationEmailTemplateOutput) String() string {",
          "8754: func (s DeleteCustomVerificationEmailTemplateOutput) GoString() string {",
          "8759: type DeleteDedicatedIpPoolInput struct {",
          "8765:  PoolName *string `location:\"uri\" locationName:\"PoolName\" type:\"string\" required:\"true\"`",
          "8769: func (s DeleteDedicatedIpPoolInput) String() string {",
          "8774: func (s DeleteDedicatedIpPoolInput) GoString() string {",
          "8775:  return s.String()",
          "8776: }",
          "8779: func (s *DeleteDedicatedIpPoolInput) Validate() error {",
          "8780:  invalidParams := request.ErrInvalidParams{Context: \"DeleteDedicatedIpPoolInput\"}",
          "8781:  if s.PoolName == nil {",
          "8782:   invalidParams.Add(request.NewErrParamRequired(\"PoolName\"))",
          "8783:  }",
          "8784:  if s.PoolName != nil && len(*s.PoolName) < 1 {",
          "8785:   invalidParams.Add(request.NewErrParamMinLen(\"PoolName\", 1))",
          "8786:  }",
          "8788:  if invalidParams.Len() > 0 {",
          "8789:   return invalidParams",
          "8790:  }",
          "8791:  return nil",
          "8792: }",
          "8795: func (s *DeleteDedicatedIpPoolInput) SetPoolName(v string) *DeleteDedicatedIpPoolInput {",
          "8796:  s.PoolName = &v",
          "8797:  return s",
          "8798: }",
          "8802: type DeleteDedicatedIpPoolOutput struct {",
          "8803:  _ struct{} `type:\"structure\"`",
          "8804: }",
          "8807: func (s DeleteDedicatedIpPoolOutput) String() string {",
          "8808:  return awsutil.Prettify(s)",
          "8809: }",
          "8812: func (s DeleteDedicatedIpPoolOutput) GoString() string {",
          "8813:  return s.String()",
          "8814: }",
          "8820: type DeleteEmailIdentityInput struct {",
          "8821:  _ struct{} `type:\"structure\"`",
          "8826:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" min:\"1\" type:\"string\" required:\"true\"`",
          "8827: }",
          "8830: func (s DeleteEmailIdentityInput) String() string {",
          "8831:  return awsutil.Prettify(s)",
          "8832: }",
          "8835: func (s DeleteEmailIdentityInput) GoString() string {",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "6298:  return s.String()",
          "6299: }",
          "6302: type DeleteSuppressedDestinationInput struct {",
          "6303:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8881: type DeleteEmailIdentityPolicyInput struct {",
          "8882:  _ struct{} `type:\"structure\"`",
          "8887:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" min:\"1\" type:\"string\" required:\"true\"`",
          "8895:  PolicyName *string `location:\"uri\" locationName:\"PolicyName\" min:\"1\" type:\"string\" required:\"true\"`",
          "8896: }",
          "8899: func (s DeleteEmailIdentityPolicyInput) String() string {",
          "8900:  return awsutil.Prettify(s)",
          "8901: }",
          "8904: func (s DeleteEmailIdentityPolicyInput) GoString() string {",
          "8905:  return s.String()",
          "8906: }",
          "8909: func (s *DeleteEmailIdentityPolicyInput) Validate() error {",
          "8910:  invalidParams := request.ErrInvalidParams{Context: \"DeleteEmailIdentityPolicyInput\"}",
          "8911:  if s.EmailIdentity == nil {",
          "8912:   invalidParams.Add(request.NewErrParamRequired(\"EmailIdentity\"))",
          "8913:  }",
          "8914:  if s.EmailIdentity != nil && len(*s.EmailIdentity) < 1 {",
          "8915:   invalidParams.Add(request.NewErrParamMinLen(\"EmailIdentity\", 1))",
          "8916:  }",
          "8917:  if s.PolicyName == nil {",
          "8918:   invalidParams.Add(request.NewErrParamRequired(\"PolicyName\"))",
          "8919:  }",
          "8920:  if s.PolicyName != nil && len(*s.PolicyName) < 1 {",
          "8921:   invalidParams.Add(request.NewErrParamMinLen(\"PolicyName\", 1))",
          "8922:  }",
          "8924:  if invalidParams.Len() > 0 {",
          "8925:   return invalidParams",
          "8926:  }",
          "8927:  return nil",
          "8928: }",
          "8931: func (s *DeleteEmailIdentityPolicyInput) SetEmailIdentity(v string) *DeleteEmailIdentityPolicyInput {",
          "8932:  s.EmailIdentity = &v",
          "8933:  return s",
          "8934: }",
          "8937: func (s *DeleteEmailIdentityPolicyInput) SetPolicyName(v string) *DeleteEmailIdentityPolicyInput {",
          "8938:  s.PolicyName = &v",
          "8939:  return s",
          "8940: }",
          "8944: type DeleteEmailIdentityPolicyOutput struct {",
          "8945:  _ struct{} `type:\"structure\"`",
          "8946: }",
          "8949: func (s DeleteEmailIdentityPolicyOutput) String() string {",
          "8950:  return awsutil.Prettify(s)",
          "8951: }",
          "8954: func (s DeleteEmailIdentityPolicyOutput) GoString() string {",
          "8955:  return s.String()",
          "8956: }",
          "8960: type DeleteEmailTemplateInput struct {",
          "8961:  _ struct{} `type:\"structure\"`",
          "8966:  TemplateName *string `location:\"uri\" locationName:\"TemplateName\" min:\"1\" type:\"string\" required:\"true\"`",
          "8967: }",
          "8970: func (s DeleteEmailTemplateInput) String() string {",
          "8971:  return awsutil.Prettify(s)",
          "8972: }",
          "8975: func (s DeleteEmailTemplateInput) GoString() string {",
          "8976:  return s.String()",
          "8977: }",
          "8980: func (s *DeleteEmailTemplateInput) Validate() error {",
          "8981:  invalidParams := request.ErrInvalidParams{Context: \"DeleteEmailTemplateInput\"}",
          "8982:  if s.TemplateName == nil {",
          "8983:   invalidParams.Add(request.NewErrParamRequired(\"TemplateName\"))",
          "8984:  }",
          "8985:  if s.TemplateName != nil && len(*s.TemplateName) < 1 {",
          "8986:   invalidParams.Add(request.NewErrParamMinLen(\"TemplateName\", 1))",
          "8987:  }",
          "8989:  if invalidParams.Len() > 0 {",
          "8990:   return invalidParams",
          "8991:  }",
          "8992:  return nil",
          "8993: }",
          "8996: func (s *DeleteEmailTemplateInput) SetTemplateName(v string) *DeleteEmailTemplateInput {",
          "8997:  s.TemplateName = &v",
          "8998:  return s",
          "8999: }",
          "9003: type DeleteEmailTemplateOutput struct {",
          "9004:  _ struct{} `type:\"structure\"`",
          "9005: }",
          "9008: func (s DeleteEmailTemplateOutput) String() string {",
          "9009:  return awsutil.Prettify(s)",
          "9010: }",
          "9013: func (s DeleteEmailTemplateOutput) GoString() string {",
          "9014:  return s.String()",
          "9015: }",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "6704:  FirstSeenDateTime *time.Time `type:\"timestamp\"`",
          "",
          "[Removed Lines]",
          "6707:  FromAddress *string `type:\"string\"`",
          "",
          "[Added Lines]",
          "9423:  FromAddress *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "7011:    invalidParams.AddNested(\"Simple\", err.(request.ErrInvalidParams))",
          "7012:   }",
          "7013:  }",
          "7015:  if invalidParams.Len() > 0 {",
          "7016:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9730:  if s.Template != nil {",
          "9731:   if err := s.Template.Validate(); err != nil {",
          "9732:    invalidParams.AddNested(\"Template\", err.(request.ErrInvalidParams))",
          "9733:   }",
          "9734:  }",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "7036:  return s",
          "7037: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9762: type EmailTemplateContent struct {",
          "9763:  _ struct{} `type:\"structure\"`",
          "9766:  Html *string `type:\"string\"`",
          "9769:  Subject *string `type:\"string\"`",
          "9773:  Text *string `type:\"string\"`",
          "9774: }",
          "9777: func (s EmailTemplateContent) String() string {",
          "9778:  return awsutil.Prettify(s)",
          "9779: }",
          "9782: func (s EmailTemplateContent) GoString() string {",
          "9783:  return s.String()",
          "9784: }",
          "9787: func (s *EmailTemplateContent) SetHtml(v string) *EmailTemplateContent {",
          "9788:  s.Html = &v",
          "9789:  return s",
          "9790: }",
          "9793: func (s *EmailTemplateContent) SetSubject(v string) *EmailTemplateContent {",
          "9794:  s.Subject = &v",
          "9795:  return s",
          "9796: }",
          "9799: func (s *EmailTemplateContent) SetText(v string) *EmailTemplateContent {",
          "9800:  s.Text = &v",
          "9801:  return s",
          "9802: }",
          "9805: type EmailTemplateMetadata struct {",
          "9806:  _ struct{} `type:\"structure\"`",
          "9809:  CreatedTimestamp *time.Time `type:\"timestamp\"`",
          "9812:  TemplateName *string `min:\"1\" type:\"string\"`",
          "9813: }",
          "9816: func (s EmailTemplateMetadata) String() string {",
          "9817:  return awsutil.Prettify(s)",
          "9818: }",
          "9821: func (s EmailTemplateMetadata) GoString() string {",
          "9822:  return s.String()",
          "9823: }",
          "9826: func (s *EmailTemplateMetadata) SetCreatedTimestamp(v time.Time) *EmailTemplateMetadata {",
          "9827:  s.CreatedTimestamp = &v",
          "9828:  return s",
          "9829: }",
          "9832: func (s *EmailTemplateMetadata) SetTemplateName(v string) *EmailTemplateMetadata {",
          "9833:  s.TemplateName = &v",
          "9834:  return s",
          "9835: }",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "7273:  DedicatedIpAutoWarmupEnabled *bool `type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10074:  Details *AccountDetails `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "7332:  return s",
          "7333: }",
          "7336: func (s *GetAccountOutput) SetEnforcementStatus(v string) *GetAccountOutput {",
          "7337:  s.EnforcementStatus = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10137: func (s *GetAccountOutput) SetDetails(v *AccountDetails) *GetAccountOutput {",
          "10138:  s.Details = v",
          "10139:  return s",
          "10140: }",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "7626:  return s",
          "7627: }",
          "7631:  _ struct{} `type:\"structure\"`",
          "7639: }",
          "7643:  return awsutil.Prettify(s)",
          "7644: }",
          "7648:  return s.String()",
          "7649: }",
          "7656:  }",
          "7659:  }",
          "7661:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "7630: type GetDedicatedIpInput struct {",
          "7638:  Ip *string `location:\"uri\" locationName:\"IP\" type:\"string\" required:\"true\"`",
          "7642: func (s GetDedicatedIpInput) String() string {",
          "7647: func (s GetDedicatedIpInput) GoString() string {",
          "7652: func (s *GetDedicatedIpInput) Validate() error {",
          "7653:  invalidParams := request.ErrInvalidParams{Context: \"GetDedicatedIpInput\"}",
          "7654:  if s.Ip == nil {",
          "7655:   invalidParams.Add(request.NewErrParamRequired(\"Ip\"))",
          "7657:  if s.Ip != nil && len(*s.Ip) < 1 {",
          "7658:   invalidParams.Add(request.NewErrParamMinLen(\"Ip\", 1))",
          "",
          "[Added Lines]",
          "10437: type GetCustomVerificationEmailTemplateInput struct {",
          "10443:  TemplateName *string `location:\"uri\" locationName:\"TemplateName\" min:\"1\" type:\"string\" required:\"true\"`",
          "10447: func (s GetCustomVerificationEmailTemplateInput) String() string {",
          "10452: func (s GetCustomVerificationEmailTemplateInput) GoString() string {",
          "10457: func (s *GetCustomVerificationEmailTemplateInput) Validate() error {",
          "10458:  invalidParams := request.ErrInvalidParams{Context: \"GetCustomVerificationEmailTemplateInput\"}",
          "10459:  if s.TemplateName == nil {",
          "10460:   invalidParams.Add(request.NewErrParamRequired(\"TemplateName\"))",
          "10462:  if s.TemplateName != nil && len(*s.TemplateName) < 1 {",
          "10463:   invalidParams.Add(request.NewErrParamMinLen(\"TemplateName\", 1))",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "7664:  return nil",
          "7665: }",
          "7670:  return s",
          "7671: }",
          "7675:  _ struct{} `type:\"structure\"`",
          "7679: }",
          "7683:  return awsutil.Prettify(s)",
          "7684: }",
          "7688:  return s.String()",
          "7689: }",
          "7694:  return s",
          "7695: }",
          "7712:  PoolName *string `location:\"querystring\" locationName:\"PoolName\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "7668: func (s *GetDedicatedIpInput) SetIp(v string) *GetDedicatedIpInput {",
          "7669:  s.Ip = &v",
          "7674: type GetDedicatedIpOutput struct {",
          "7678:  DedicatedIp *DedicatedIp `type:\"structure\"`",
          "7682: func (s GetDedicatedIpOutput) String() string {",
          "7687: func (s GetDedicatedIpOutput) GoString() string {",
          "7692: func (s *GetDedicatedIpOutput) SetDedicatedIp(v *DedicatedIp) *GetDedicatedIpOutput {",
          "7693:  s.DedicatedIp = v",
          "7698: type GetDedicatedIpsInput struct {",
          "7699:  _ struct{} `type:\"structure\"`",
          "7703:  NextToken *string `location:\"querystring\" locationName:\"NextToken\" type:\"string\"`",
          "7709:  PageSize *int64 `location:\"querystring\" locationName:\"PageSize\" type:\"integer\"`",
          "",
          "[Added Lines]",
          "10473: func (s *GetCustomVerificationEmailTemplateInput) SetTemplateName(v string) *GetCustomVerificationEmailTemplateInput {",
          "10474:  s.TemplateName = &v",
          "10479: type GetCustomVerificationEmailTemplateOutput struct {",
          "10484:  FailureRedirectionURL *string `type:\"string\"`",
          "10487:  FromEmailAddress *string `type:\"string\"`",
          "10491:  SuccessRedirectionURL *string `type:\"string\"`",
          "10494:  TemplateContent *string `type:\"string\"`",
          "10497:  TemplateName *string `min:\"1\" type:\"string\"`",
          "10500:  TemplateSubject *string `type:\"string\"`",
          "10504: func (s GetCustomVerificationEmailTemplateOutput) String() string {",
          "10509: func (s GetCustomVerificationEmailTemplateOutput) GoString() string {",
          "10514: func (s *GetCustomVerificationEmailTemplateOutput) SetFailureRedirectionURL(v string) *GetCustomVerificationEmailTemplateOutput {",
          "10515:  s.FailureRedirectionURL = &v",
          "10520: func (s *GetCustomVerificationEmailTemplateOutput) SetFromEmailAddress(v string) *GetCustomVerificationEmailTemplateOutput {",
          "10521:  s.FromEmailAddress = &v",
          "10522:  return s",
          "10523: }",
          "10526: func (s *GetCustomVerificationEmailTemplateOutput) SetSuccessRedirectionURL(v string) *GetCustomVerificationEmailTemplateOutput {",
          "10527:  s.SuccessRedirectionURL = &v",
          "10528:  return s",
          "10529: }",
          "10532: func (s *GetCustomVerificationEmailTemplateOutput) SetTemplateContent(v string) *GetCustomVerificationEmailTemplateOutput {",
          "10533:  s.TemplateContent = &v",
          "10534:  return s",
          "10535: }",
          "10538: func (s *GetCustomVerificationEmailTemplateOutput) SetTemplateName(v string) *GetCustomVerificationEmailTemplateOutput {",
          "10539:  s.TemplateName = &v",
          "10540:  return s",
          "10541: }",
          "10544: func (s *GetCustomVerificationEmailTemplateOutput) SetTemplateSubject(v string) *GetCustomVerificationEmailTemplateOutput {",
          "10545:  s.TemplateSubject = &v",
          "10546:  return s",
          "10547: }",
          "10550: type GetDedicatedIpInput struct {",
          "10551:  _ struct{} `type:\"structure\"`",
          "10558:  Ip *string `location:\"uri\" locationName:\"IP\" type:\"string\" required:\"true\"`",
          "10559: }",
          "10562: func (s GetDedicatedIpInput) String() string {",
          "10563:  return awsutil.Prettify(s)",
          "10564: }",
          "10567: func (s GetDedicatedIpInput) GoString() string {",
          "10568:  return s.String()",
          "10569: }",
          "10572: func (s *GetDedicatedIpInput) Validate() error {",
          "10573:  invalidParams := request.ErrInvalidParams{Context: \"GetDedicatedIpInput\"}",
          "10574:  if s.Ip == nil {",
          "10575:   invalidParams.Add(request.NewErrParamRequired(\"Ip\"))",
          "10576:  }",
          "10577:  if s.Ip != nil && len(*s.Ip) < 1 {",
          "10578:   invalidParams.Add(request.NewErrParamMinLen(\"Ip\", 1))",
          "10579:  }",
          "10581:  if invalidParams.Len() > 0 {",
          "10582:   return invalidParams",
          "10583:  }",
          "10584:  return nil",
          "10585: }",
          "10588: func (s *GetDedicatedIpInput) SetIp(v string) *GetDedicatedIpInput {",
          "10589:  s.Ip = &v",
          "10590:  return s",
          "10591: }",
          "10594: type GetDedicatedIpOutput struct {",
          "10595:  _ struct{} `type:\"structure\"`",
          "10598:  DedicatedIp *DedicatedIp `type:\"structure\"`",
          "10599: }",
          "10602: func (s GetDedicatedIpOutput) String() string {",
          "10603:  return awsutil.Prettify(s)",
          "10604: }",
          "10607: func (s GetDedicatedIpOutput) GoString() string {",
          "10608:  return s.String()",
          "10609: }",
          "10612: func (s *GetDedicatedIpOutput) SetDedicatedIp(v *DedicatedIp) *GetDedicatedIpOutput {",
          "10613:  s.DedicatedIp = v",
          "10614:  return s",
          "10615: }",
          "10618: type GetDedicatedIpsInput struct {",
          "10619:  _ struct{} `type:\"structure\"`",
          "10623:  NextToken *string `location:\"querystring\" locationName:\"NextToken\" type:\"string\"`",
          "10629:  PageSize *int64 `location:\"querystring\" locationName:\"PageSize\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "8068:  Domain *string `location:\"uri\" locationName:\"Domain\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "10988:  Domain *string `location:\"uri\" locationName:\"Domain\" min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "8184: }",
          "",
          "[Removed Lines]",
          "8183:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "11103:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "8242:  MailFromAttributes *MailFromAttributes `type:\"structure\"`",
          "8246:  Tags []*Tag `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11165:  Policies map[string]*string `type:\"map\"`",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "8285:  return s",
          "8286: }",
          "8289: func (s *GetEmailIdentityOutput) SetTags(v []*Tag) *GetEmailIdentityOutput {",
          "8290:  s.Tags = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11212: func (s *GetEmailIdentityOutput) SetPolicies(v map[string]*string) *GetEmailIdentityOutput {",
          "11213:  s.Policies = v",
          "11214:  return s",
          "11215: }",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "8297:  return s",
          "8298: }",
          "8302: type GetSuppressedDestinationInput struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11230: type GetEmailIdentityPoliciesInput struct {",
          "11231:  _ struct{} `type:\"structure\"`",
          "11236:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" min:\"1\" type:\"string\" required:\"true\"`",
          "11237: }",
          "11240: func (s GetEmailIdentityPoliciesInput) String() string {",
          "11241:  return awsutil.Prettify(s)",
          "11242: }",
          "11245: func (s GetEmailIdentityPoliciesInput) GoString() string {",
          "11246:  return s.String()",
          "11247: }",
          "11250: func (s *GetEmailIdentityPoliciesInput) Validate() error {",
          "11251:  invalidParams := request.ErrInvalidParams{Context: \"GetEmailIdentityPoliciesInput\"}",
          "11252:  if s.EmailIdentity == nil {",
          "11253:   invalidParams.Add(request.NewErrParamRequired(\"EmailIdentity\"))",
          "11254:  }",
          "11255:  if s.EmailIdentity != nil && len(*s.EmailIdentity) < 1 {",
          "11256:   invalidParams.Add(request.NewErrParamMinLen(\"EmailIdentity\", 1))",
          "11257:  }",
          "11259:  if invalidParams.Len() > 0 {",
          "11260:   return invalidParams",
          "11261:  }",
          "11262:  return nil",
          "11263: }",
          "11266: func (s *GetEmailIdentityPoliciesInput) SetEmailIdentity(v string) *GetEmailIdentityPoliciesInput {",
          "11267:  s.EmailIdentity = &v",
          "11268:  return s",
          "11269: }",
          "11272: type GetEmailIdentityPoliciesOutput struct {",
          "11273:  _ struct{} `type:\"structure\"`",
          "11276:  Policies map[string]*string `type:\"map\"`",
          "11277: }",
          "11280: func (s GetEmailIdentityPoliciesOutput) String() string {",
          "11281:  return awsutil.Prettify(s)",
          "11282: }",
          "11285: func (s GetEmailIdentityPoliciesOutput) GoString() string {",
          "11286:  return s.String()",
          "11287: }",
          "11290: func (s *GetEmailIdentityPoliciesOutput) SetPolicies(v map[string]*string) *GetEmailIdentityPoliciesOutput {",
          "11291:  s.Policies = v",
          "11292:  return s",
          "11293: }",
          "11297: type GetEmailTemplateInput struct {",
          "11298:  _ struct{} `type:\"structure\"`",
          "11303:  TemplateName *string `location:\"uri\" locationName:\"TemplateName\" min:\"1\" type:\"string\" required:\"true\"`",
          "11304: }",
          "11307: func (s GetEmailTemplateInput) String() string {",
          "11308:  return awsutil.Prettify(s)",
          "11309: }",
          "11312: func (s GetEmailTemplateInput) GoString() string {",
          "11313:  return s.String()",
          "11314: }",
          "11317: func (s *GetEmailTemplateInput) Validate() error {",
          "11318:  invalidParams := request.ErrInvalidParams{Context: \"GetEmailTemplateInput\"}",
          "11319:  if s.TemplateName == nil {",
          "11320:   invalidParams.Add(request.NewErrParamRequired(\"TemplateName\"))",
          "11321:  }",
          "11322:  if s.TemplateName != nil && len(*s.TemplateName) < 1 {",
          "11323:   invalidParams.Add(request.NewErrParamMinLen(\"TemplateName\", 1))",
          "11324:  }",
          "11326:  if invalidParams.Len() > 0 {",
          "11327:   return invalidParams",
          "11328:  }",
          "11329:  return nil",
          "11330: }",
          "11333: func (s *GetEmailTemplateInput) SetTemplateName(v string) *GetEmailTemplateInput {",
          "11334:  s.TemplateName = &v",
          "11335:  return s",
          "11336: }",
          "11339: type GetEmailTemplateOutput struct {",
          "11340:  _ struct{} `type:\"structure\"`",
          "11346:  TemplateContent *EmailTemplateContent `type:\"structure\" required:\"true\"`",
          "11351:  TemplateName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "11352: }",
          "11355: func (s GetEmailTemplateOutput) String() string {",
          "11356:  return awsutil.Prettify(s)",
          "11357: }",
          "11360: func (s GetEmailTemplateOutput) GoString() string {",
          "11361:  return s.String()",
          "11362: }",
          "11365: func (s *GetEmailTemplateOutput) SetTemplateContent(v *EmailTemplateContent) *GetEmailTemplateOutput {",
          "11366:  s.TemplateContent = v",
          "11367:  return s",
          "11368: }",
          "11371: func (s *GetEmailTemplateOutput) SetTemplateName(v string) *GetEmailTemplateOutput {",
          "11372:  s.TemplateName = &v",
          "11373:  return s",
          "11374: }",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "8371:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "8374:  IdentityName *string `type:\"string\"`",
          "",
          "[Added Lines]",
          "11450:  IdentityName *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "8732:  return s",
          "8733: }",
          "8736: type ListDedicatedIpPoolsInput struct {",
          "8737:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11813: type ListCustomVerificationEmailTemplatesInput struct {",
          "11814:  _ struct{} `type:\"structure\"`",
          "11818:  NextToken *string `location:\"querystring\" locationName:\"NextToken\" type:\"string\"`",
          "11826:  PageSize *int64 `location:\"querystring\" locationName:\"PageSize\" type:\"integer\"`",
          "11827: }",
          "11830: func (s ListCustomVerificationEmailTemplatesInput) String() string {",
          "11831:  return awsutil.Prettify(s)",
          "11832: }",
          "11835: func (s ListCustomVerificationEmailTemplatesInput) GoString() string {",
          "11836:  return s.String()",
          "11837: }",
          "11840: func (s *ListCustomVerificationEmailTemplatesInput) SetNextToken(v string) *ListCustomVerificationEmailTemplatesInput {",
          "11841:  s.NextToken = &v",
          "11842:  return s",
          "11843: }",
          "11846: func (s *ListCustomVerificationEmailTemplatesInput) SetPageSize(v int64) *ListCustomVerificationEmailTemplatesInput {",
          "11847:  s.PageSize = &v",
          "11848:  return s",
          "11849: }",
          "11852: type ListCustomVerificationEmailTemplatesOutput struct {",
          "11853:  _ struct{} `type:\"structure\"`",
          "11856:  CustomVerificationEmailTemplates []*CustomVerificationEmailTemplateMetadata `type:\"list\"`",
          "11861:  NextToken *string `type:\"string\"`",
          "11862: }",
          "11865: func (s ListCustomVerificationEmailTemplatesOutput) String() string {",
          "11866:  return awsutil.Prettify(s)",
          "11867: }",
          "11870: func (s ListCustomVerificationEmailTemplatesOutput) GoString() string {",
          "11871:  return s.String()",
          "11872: }",
          "11875: func (s *ListCustomVerificationEmailTemplatesOutput) SetCustomVerificationEmailTemplates(v []*CustomVerificationEmailTemplateMetadata) *ListCustomVerificationEmailTemplatesOutput {",
          "11876:  s.CustomVerificationEmailTemplates = v",
          "11877:  return s",
          "11878: }",
          "11881: func (s *ListCustomVerificationEmailTemplatesOutput) SetNextToken(v string) *ListCustomVerificationEmailTemplatesOutput {",
          "11882:  s.NextToken = &v",
          "11883:  return s",
          "11884: }",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "9103:  return s",
          "9104: }",
          "9109:  _ struct{} `type:\"structure\"`",
          "9118:  NextToken *string `location:\"querystring\" locationName:\"NextToken\" type:\"string\"`",
          "9124:  PageSize *int64 `location:\"querystring\" locationName:\"PageSize\" type:\"integer\"`",
          "",
          "[Removed Lines]",
          "9108: type ListSuppressedDestinationsInput struct {",
          "9114:  EndDate *time.Time `location:\"querystring\" locationName:\"EndDate\" type:\"timestamp\"`",
          "",
          "[Added Lines]",
          "12260: type ListEmailTemplatesInput struct {",
          "12273:  PageSize *int64 `location:\"querystring\" locationName:\"PageSize\" type:\"integer\"`",
          "12274: }",
          "12277: func (s ListEmailTemplatesInput) String() string {",
          "12278:  return awsutil.Prettify(s)",
          "12279: }",
          "12282: func (s ListEmailTemplatesInput) GoString() string {",
          "12283:  return s.String()",
          "12284: }",
          "12287: func (s *ListEmailTemplatesInput) SetNextToken(v string) *ListEmailTemplatesInput {",
          "12288:  s.NextToken = &v",
          "12289:  return s",
          "12290: }",
          "12293: func (s *ListEmailTemplatesInput) SetPageSize(v int64) *ListEmailTemplatesInput {",
          "12294:  s.PageSize = &v",
          "12295:  return s",
          "12296: }",
          "12299: type ListEmailTemplatesOutput struct {",
          "12300:  _ struct{} `type:\"structure\"`",
          "12305:  NextToken *string `type:\"string\"`",
          "12309:  TemplatesMetadata []*EmailTemplateMetadata `type:\"list\"`",
          "12310: }",
          "12313: func (s ListEmailTemplatesOutput) String() string {",
          "12314:  return awsutil.Prettify(s)",
          "12315: }",
          "12318: func (s ListEmailTemplatesOutput) GoString() string {",
          "12319:  return s.String()",
          "12320: }",
          "12323: func (s *ListEmailTemplatesOutput) SetNextToken(v string) *ListEmailTemplatesOutput {",
          "12324:  s.NextToken = &v",
          "12325:  return s",
          "12326: }",
          "12329: func (s *ListEmailTemplatesOutput) SetTemplatesMetadata(v []*EmailTemplateMetadata) *ListEmailTemplatesOutput {",
          "12330:  s.TemplatesMetadata = v",
          "12331:  return s",
          "12332: }",
          "12336: type ListSuppressedDestinationsInput struct {",
          "12337:  _ struct{} `type:\"structure\"`",
          "12342:  EndDate *time.Time `location:\"querystring\" locationName:\"EndDate\" type:\"timestamp\"`",
          "12346:  NextToken *string `location:\"querystring\" locationName:\"NextToken\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "9823:  return s.String()",
          "9824: }",
          "9827: type PutAccountSendingAttributesInput struct {",
          "9828:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13055: type PutAccountDetailsInput struct {",
          "13056:  _ struct{} `type:\"structure\"`",
          "13060:  AdditionalContactEmailAddresses []*string `min:\"1\" type:\"list\" sensitive:\"true\"`",
          "13063:  ContactLanguage *string `type:\"string\" enum:\"ContactLanguage\"`",
          "13068:  MailType *string `type:\"string\" required:\"true\" enum:\"MailType\"`",
          "13083:  ProductionAccessEnabled *bool `type:\"boolean\"`",
          "13088:  UseCaseDescription *string `min:\"1\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "13094:  WebsiteURL *string `min:\"1\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "13095: }",
          "13098: func (s PutAccountDetailsInput) String() string {",
          "13099:  return awsutil.Prettify(s)",
          "13100: }",
          "13103: func (s PutAccountDetailsInput) GoString() string {",
          "13104:  return s.String()",
          "13105: }",
          "13108: func (s *PutAccountDetailsInput) Validate() error {",
          "13109:  invalidParams := request.ErrInvalidParams{Context: \"PutAccountDetailsInput\"}",
          "13110:  if s.AdditionalContactEmailAddresses != nil && len(s.AdditionalContactEmailAddresses) < 1 {",
          "13111:   invalidParams.Add(request.NewErrParamMinLen(\"AdditionalContactEmailAddresses\", 1))",
          "13112:  }",
          "13113:  if s.MailType == nil {",
          "13114:   invalidParams.Add(request.NewErrParamRequired(\"MailType\"))",
          "13115:  }",
          "13116:  if s.UseCaseDescription == nil {",
          "13117:   invalidParams.Add(request.NewErrParamRequired(\"UseCaseDescription\"))",
          "13118:  }",
          "13119:  if s.UseCaseDescription != nil && len(*s.UseCaseDescription) < 1 {",
          "13120:   invalidParams.Add(request.NewErrParamMinLen(\"UseCaseDescription\", 1))",
          "13121:  }",
          "13122:  if s.WebsiteURL == nil {",
          "13123:   invalidParams.Add(request.NewErrParamRequired(\"WebsiteURL\"))",
          "13124:  }",
          "13125:  if s.WebsiteURL != nil && len(*s.WebsiteURL) < 1 {",
          "13126:   invalidParams.Add(request.NewErrParamMinLen(\"WebsiteURL\", 1))",
          "13127:  }",
          "13129:  if invalidParams.Len() > 0 {",
          "13130:   return invalidParams",
          "13131:  }",
          "13132:  return nil",
          "13133: }",
          "13136: func (s *PutAccountDetailsInput) SetAdditionalContactEmailAddresses(v []*string) *PutAccountDetailsInput {",
          "13137:  s.AdditionalContactEmailAddresses = v",
          "13138:  return s",
          "13139: }",
          "13142: func (s *PutAccountDetailsInput) SetContactLanguage(v string) *PutAccountDetailsInput {",
          "13143:  s.ContactLanguage = &v",
          "13144:  return s",
          "13145: }",
          "13148: func (s *PutAccountDetailsInput) SetMailType(v string) *PutAccountDetailsInput {",
          "13149:  s.MailType = &v",
          "13150:  return s",
          "13151: }",
          "13154: func (s *PutAccountDetailsInput) SetProductionAccessEnabled(v bool) *PutAccountDetailsInput {",
          "13155:  s.ProductionAccessEnabled = &v",
          "13156:  return s",
          "13157: }",
          "13160: func (s *PutAccountDetailsInput) SetUseCaseDescription(v string) *PutAccountDetailsInput {",
          "13161:  s.UseCaseDescription = &v",
          "13162:  return s",
          "13163: }",
          "13166: func (s *PutAccountDetailsInput) SetWebsiteURL(v string) *PutAccountDetailsInput {",
          "13167:  s.WebsiteURL = &v",
          "13168:  return s",
          "13169: }",
          "13173: type PutAccountDetailsOutput struct {",
          "13174:  _ struct{} `type:\"structure\"`",
          "13175: }",
          "13178: func (s PutAccountDetailsOutput) String() string {",
          "13179:  return awsutil.Prettify(s)",
          "13180: }",
          "13183: func (s PutAccountDetailsOutput) GoString() string {",
          "13184:  return s.String()",
          "13185: }",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "10518:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "13879:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "10589:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "13950:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "10756: }",
          "",
          "[Removed Lines]",
          "10755:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "14116:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "10830:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "14191:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "10911:  EmailAddress *string `type:\"string\" required:\"true\"`",
          "10918: }",
          "10923: }",
          "10928: }",
          "10944: }",
          "10949:  return s",
          "10950: }",
          "10955:  return s",
          "10956: }",
          "10961:  _ struct{} `type:\"structure\"`",
          "10962: }",
          "10966:  return awsutil.Prettify(s)",
          "10967: }",
          "10971:  return s.String()",
          "10972: }",
          "10976:  _ struct{} `type:\"structure\"`",
          "11002: }",
          "11006:  return awsutil.Prettify(s)",
          "11007: }",
          "11011:  return s.String()",
          "11012: }",
          "11019:  }",
          "11021:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "10917:  Reason *string `type:\"string\" required:\"true\" enum:\"SuppressionListReason\"`",
          "10921: func (s PutSuppressedDestinationInput) String() string {",
          "10922:  return awsutil.Prettify(s)",
          "10926: func (s PutSuppressedDestinationInput) GoString() string {",
          "10927:  return s.String()",
          "10931: func (s *PutSuppressedDestinationInput) Validate() error {",
          "10932:  invalidParams := request.ErrInvalidParams{Context: \"PutSuppressedDestinationInput\"}",
          "10933:  if s.EmailAddress == nil {",
          "10934:   invalidParams.Add(request.NewErrParamRequired(\"EmailAddress\"))",
          "10935:  }",
          "10936:  if s.Reason == nil {",
          "10937:   invalidParams.Add(request.NewErrParamRequired(\"Reason\"))",
          "10938:  }",
          "10940:  if invalidParams.Len() > 0 {",
          "10941:   return invalidParams",
          "10942:  }",
          "10943:  return nil",
          "10947: func (s *PutSuppressedDestinationInput) SetEmailAddress(v string) *PutSuppressedDestinationInput {",
          "10948:  s.EmailAddress = &v",
          "10953: func (s *PutSuppressedDestinationInput) SetReason(v string) *PutSuppressedDestinationInput {",
          "10954:  s.Reason = &v",
          "10960: type PutSuppressedDestinationOutput struct {",
          "10965: func (s PutSuppressedDestinationOutput) String() string {",
          "10970: func (s PutSuppressedDestinationOutput) GoString() string {",
          "10975: type RawMessage struct {",
          "11001:  Data []byte `type:\"blob\" required:\"true\"`",
          "11005: func (s RawMessage) String() string {",
          "11010: func (s RawMessage) GoString() string {",
          "11015: func (s *RawMessage) Validate() error {",
          "11016:  invalidParams := request.ErrInvalidParams{Context: \"RawMessage\"}",
          "11017:  if s.Data == nil {",
          "11018:   invalidParams.Add(request.NewErrParamRequired(\"Data\"))",
          "",
          "[Added Lines]",
          "14278:  Reason *string `type:\"string\" required:\"true\" enum:\"SuppressionListReason\"`",
          "14279: }",
          "14282: func (s PutSuppressedDestinationInput) String() string {",
          "14283:  return awsutil.Prettify(s)",
          "14284: }",
          "14287: func (s PutSuppressedDestinationInput) GoString() string {",
          "14288:  return s.String()",
          "14289: }",
          "14292: func (s *PutSuppressedDestinationInput) Validate() error {",
          "14293:  invalidParams := request.ErrInvalidParams{Context: \"PutSuppressedDestinationInput\"}",
          "14294:  if s.EmailAddress == nil {",
          "14295:   invalidParams.Add(request.NewErrParamRequired(\"EmailAddress\"))",
          "14296:  }",
          "14297:  if s.Reason == nil {",
          "14298:   invalidParams.Add(request.NewErrParamRequired(\"Reason\"))",
          "14299:  }",
          "14301:  if invalidParams.Len() > 0 {",
          "14302:   return invalidParams",
          "14303:  }",
          "14304:  return nil",
          "14305: }",
          "14308: func (s *PutSuppressedDestinationInput) SetEmailAddress(v string) *PutSuppressedDestinationInput {",
          "14309:  s.EmailAddress = &v",
          "14310:  return s",
          "14311: }",
          "14314: func (s *PutSuppressedDestinationInput) SetReason(v string) *PutSuppressedDestinationInput {",
          "14315:  s.Reason = &v",
          "14316:  return s",
          "14317: }",
          "14321: type PutSuppressedDestinationOutput struct {",
          "14322:  _ struct{} `type:\"structure\"`",
          "14323: }",
          "14326: func (s PutSuppressedDestinationOutput) String() string {",
          "14327:  return awsutil.Prettify(s)",
          "14328: }",
          "14331: func (s PutSuppressedDestinationOutput) GoString() string {",
          "14332:  return s.String()",
          "14333: }",
          "14336: type RawMessage struct {",
          "14337:  _ struct{} `type:\"structure\"`",
          "14362:  Data []byte `type:\"blob\" required:\"true\"`",
          "14363: }",
          "14366: func (s RawMessage) String() string {",
          "14367:  return awsutil.Prettify(s)",
          "14368: }",
          "14371: func (s RawMessage) GoString() string {",
          "14372:  return s.String()",
          "14373: }",
          "14376: func (s *RawMessage) Validate() error {",
          "14377:  invalidParams := request.ErrInvalidParams{Context: \"RawMessage\"}",
          "14378:  if s.Data == nil {",
          "14379:   invalidParams.Add(request.NewErrParamRequired(\"Data\"))",
          "14380:  }",
          "14382:  if invalidParams.Len() > 0 {",
          "14383:   return invalidParams",
          "14384:  }",
          "14385:  return nil",
          "14386: }",
          "14389: func (s *RawMessage) SetData(v []byte) *RawMessage {",
          "14390:  s.Data = v",
          "14391:  return s",
          "14392: }",
          "14396: type ReplacementEmailContent struct {",
          "14397:  _ struct{} `type:\"structure\"`",
          "14400:  ReplacementTemplate *ReplacementTemplate `type:\"structure\"`",
          "14401: }",
          "14404: func (s ReplacementEmailContent) String() string {",
          "14405:  return awsutil.Prettify(s)",
          "14406: }",
          "14409: func (s ReplacementEmailContent) GoString() string {",
          "14410:  return s.String()",
          "14411: }",
          "14414: func (s *ReplacementEmailContent) SetReplacementTemplate(v *ReplacementTemplate) *ReplacementEmailContent {",
          "14415:  s.ReplacementTemplate = v",
          "14416:  return s",
          "14417: }",
          "14421: type ReplacementTemplate struct {",
          "14422:  _ struct{} `type:\"structure\"`",
          "14427:  ReplacementTemplateData *string `type:\"string\"`",
          "14428: }",
          "14431: func (s ReplacementTemplate) String() string {",
          "14432:  return awsutil.Prettify(s)",
          "14433: }",
          "14436: func (s ReplacementTemplate) GoString() string {",
          "14437:  return s.String()",
          "14438: }",
          "14441: func (s *ReplacementTemplate) SetReplacementTemplateData(v string) *ReplacementTemplate {",
          "14442:  s.ReplacementTemplateData = &v",
          "14443:  return s",
          "14444: }",
          "14448: type ReputationOptions struct {",
          "14449:  _ struct{} `type:\"structure\"`",
          "14454:  LastFreshStart *time.Time `type:\"timestamp\"`",
          "14459:  ReputationMetricsEnabled *bool `type:\"boolean\"`",
          "14460: }",
          "14463: func (s ReputationOptions) String() string {",
          "14464:  return awsutil.Prettify(s)",
          "14465: }",
          "14468: func (s ReputationOptions) GoString() string {",
          "14469:  return s.String()",
          "14470: }",
          "14473: func (s *ReputationOptions) SetLastFreshStart(v time.Time) *ReputationOptions {",
          "14474:  s.LastFreshStart = &v",
          "14475:  return s",
          "14476: }",
          "14479: func (s *ReputationOptions) SetReputationMetricsEnabled(v bool) *ReputationOptions {",
          "14480:  s.ReputationMetricsEnabled = &v",
          "14481:  return s",
          "14482: }",
          "14485: type ReviewDetails struct {",
          "14486:  _ struct{} `type:\"structure\"`",
          "14489:  CaseId *string `type:\"string\"`",
          "14505:  Status *string `type:\"string\" enum:\"ReviewStatus\"`",
          "14506: }",
          "14509: func (s ReviewDetails) String() string {",
          "14510:  return awsutil.Prettify(s)",
          "14511: }",
          "14514: func (s ReviewDetails) GoString() string {",
          "14515:  return s.String()",
          "14516: }",
          "14519: func (s *ReviewDetails) SetCaseId(v string) *ReviewDetails {",
          "14520:  s.CaseId = &v",
          "14521:  return s",
          "14522: }",
          "14525: func (s *ReviewDetails) SetStatus(v string) *ReviewDetails {",
          "14526:  s.Status = &v",
          "14527:  return s",
          "14528: }",
          "14532: type SendBulkEmailInput struct {",
          "14533:  _ struct{} `type:\"structure\"`",
          "14538:  BulkEmailEntries []*BulkEmailEntry `type:\"list\" required:\"true\"`",
          "14541:  ConfigurationSetName *string `type:\"string\"`",
          "14547:  DefaultContent *BulkEmailContent `type:\"structure\" required:\"true\"`",
          "14552:  DefaultEmailTags []*MessageTag `type:\"list\"`",
          "14555:  FeedbackForwardingEmailAddress *string `type:\"string\"`",
          "14570:  FeedbackForwardingEmailAddressIdentityArn *string `type:\"string\"`",
          "14574:  FromEmailAddress *string `type:\"string\"`",
          "14587:  FromEmailAddressIdentityArn *string `type:\"string\"`",
          "14591:  ReplyToAddresses []*string `type:\"list\"`",
          "14592: }",
          "14595: func (s SendBulkEmailInput) String() string {",
          "14596:  return awsutil.Prettify(s)",
          "14597: }",
          "14600: func (s SendBulkEmailInput) GoString() string {",
          "14601:  return s.String()",
          "14602: }",
          "14605: func (s *SendBulkEmailInput) Validate() error {",
          "14606:  invalidParams := request.ErrInvalidParams{Context: \"SendBulkEmailInput\"}",
          "14607:  if s.BulkEmailEntries == nil {",
          "14608:   invalidParams.Add(request.NewErrParamRequired(\"BulkEmailEntries\"))",
          "14609:  }",
          "14610:  if s.DefaultContent == nil {",
          "14611:   invalidParams.Add(request.NewErrParamRequired(\"DefaultContent\"))",
          "14612:  }",
          "14613:  if s.BulkEmailEntries != nil {",
          "14614:   for i, v := range s.BulkEmailEntries {",
          "14615:    if v == nil {",
          "14616:     continue",
          "14617:    }",
          "14618:    if err := v.Validate(); err != nil {",
          "14619:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"BulkEmailEntries\", i), err.(request.ErrInvalidParams))",
          "14620:    }",
          "14621:   }",
          "14622:  }",
          "14623:  if s.DefaultContent != nil {",
          "14624:   if err := s.DefaultContent.Validate(); err != nil {",
          "14625:    invalidParams.AddNested(\"DefaultContent\", err.(request.ErrInvalidParams))",
          "14626:   }",
          "14627:  }",
          "14628:  if s.DefaultEmailTags != nil {",
          "14629:   for i, v := range s.DefaultEmailTags {",
          "14630:    if v == nil {",
          "14631:     continue",
          "14632:    }",
          "14633:    if err := v.Validate(); err != nil {",
          "14634:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"DefaultEmailTags\", i), err.(request.ErrInvalidParams))",
          "14635:    }",
          "14636:   }",
          "14637:  }",
          "14639:  if invalidParams.Len() > 0 {",
          "14640:   return invalidParams",
          "14641:  }",
          "14642:  return nil",
          "14643: }",
          "14646: func (s *SendBulkEmailInput) SetBulkEmailEntries(v []*BulkEmailEntry) *SendBulkEmailInput {",
          "14647:  s.BulkEmailEntries = v",
          "14648:  return s",
          "14649: }",
          "14652: func (s *SendBulkEmailInput) SetConfigurationSetName(v string) *SendBulkEmailInput {",
          "14653:  s.ConfigurationSetName = &v",
          "14654:  return s",
          "14655: }",
          "14658: func (s *SendBulkEmailInput) SetDefaultContent(v *BulkEmailContent) *SendBulkEmailInput {",
          "14659:  s.DefaultContent = v",
          "14660:  return s",
          "14664: func (s *SendBulkEmailInput) SetDefaultEmailTags(v []*MessageTag) *SendBulkEmailInput {",
          "14665:  s.DefaultEmailTags = v",
          "14666:  return s",
          "14670: func (s *SendBulkEmailInput) SetFeedbackForwardingEmailAddress(v string) *SendBulkEmailInput {",
          "14671:  s.FeedbackForwardingEmailAddress = &v",
          "14672:  return s",
          "14676: func (s *SendBulkEmailInput) SetFeedbackForwardingEmailAddressIdentityArn(v string) *SendBulkEmailInput {",
          "14677:  s.FeedbackForwardingEmailAddressIdentityArn = &v",
          "14678:  return s",
          "14679: }",
          "14682: func (s *SendBulkEmailInput) SetFromEmailAddress(v string) *SendBulkEmailInput {",
          "14683:  s.FromEmailAddress = &v",
          "14684:  return s",
          "14688: func (s *SendBulkEmailInput) SetFromEmailAddressIdentityArn(v string) *SendBulkEmailInput {",
          "14689:  s.FromEmailAddressIdentityArn = &v",
          "14694: func (s *SendBulkEmailInput) SetReplyToAddresses(v []*string) *SendBulkEmailInput {",
          "14695:  s.ReplyToAddresses = v",
          "14700: type SendBulkEmailOutput struct {",
          "14706:  BulkEmailEntryResults []*BulkEmailEntryResult `type:\"list\" required:\"true\"`",
          "14710: func (s SendBulkEmailOutput) String() string {",
          "14715: func (s SendBulkEmailOutput) GoString() string {",
          "14720: func (s *SendBulkEmailOutput) SetBulkEmailEntryResults(v []*BulkEmailEntryResult) *SendBulkEmailOutput {",
          "14721:  s.BulkEmailEntryResults = v",
          "14722:  return s",
          "14723: }",
          "14726: type SendCustomVerificationEmailInput struct {",
          "14730:  ConfigurationSetName *string `type:\"string\"`",
          "14735:  EmailAddress *string `type:\"string\" required:\"true\"`",
          "14741:  TemplateName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "14745: func (s SendCustomVerificationEmailInput) String() string {",
          "14750: func (s SendCustomVerificationEmailInput) GoString() string {",
          "14755: func (s *SendCustomVerificationEmailInput) Validate() error {",
          "14756:  invalidParams := request.ErrInvalidParams{Context: \"SendCustomVerificationEmailInput\"}",
          "14757:  if s.EmailAddress == nil {",
          "14758:   invalidParams.Add(request.NewErrParamRequired(\"EmailAddress\"))",
          "14759:  }",
          "14760:  if s.TemplateName == nil {",
          "14761:   invalidParams.Add(request.NewErrParamRequired(\"TemplateName\"))",
          "14762:  }",
          "14763:  if s.TemplateName != nil && len(*s.TemplateName) < 1 {",
          "14764:   invalidParams.Add(request.NewErrParamMinLen(\"TemplateName\", 1))",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "11024:  return nil",
          "11025: }",
          "11030:  return s",
          "11031: }",
          "11047: }",
          "11051:  return awsutil.Prettify(s)",
          "11052: }",
          "11056:  return s.String()",
          "11057: }",
          "11068:  return s",
          "11069: }",
          "11072: type SendEmailInput struct {",
          "11073:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "11028: func (s *RawMessage) SetData(v []byte) *RawMessage {",
          "11029:  s.Data = v",
          "11035: type ReputationOptions struct {",
          "11036:  _ struct{} `type:\"structure\"`",
          "11041:  LastFreshStart *time.Time `type:\"timestamp\"`",
          "11046:  ReputationMetricsEnabled *bool `type:\"boolean\"`",
          "11050: func (s ReputationOptions) String() string {",
          "11055: func (s ReputationOptions) GoString() string {",
          "11060: func (s *ReputationOptions) SetLastFreshStart(v time.Time) *ReputationOptions {",
          "11061:  s.LastFreshStart = &v",
          "11062:  return s",
          "11063: }",
          "11066: func (s *ReputationOptions) SetReputationMetricsEnabled(v bool) *ReputationOptions {",
          "11067:  s.ReputationMetricsEnabled = &v",
          "",
          "[Added Lines]",
          "14774: func (s *SendCustomVerificationEmailInput) SetConfigurationSetName(v string) *SendCustomVerificationEmailInput {",
          "14775:  s.ConfigurationSetName = &v",
          "14780: func (s *SendCustomVerificationEmailInput) SetEmailAddress(v string) *SendCustomVerificationEmailInput {",
          "14781:  s.EmailAddress = &v",
          "14782:  return s",
          "14783: }",
          "14786: func (s *SendCustomVerificationEmailInput) SetTemplateName(v string) *SendCustomVerificationEmailInput {",
          "14787:  s.TemplateName = &v",
          "14788:  return s",
          "14789: }",
          "14792: type SendCustomVerificationEmailOutput struct {",
          "14793:  _ struct{} `type:\"structure\"`",
          "14797:  MessageId *string `type:\"string\"`",
          "14801: func (s SendCustomVerificationEmailOutput) String() string {",
          "14806: func (s SendCustomVerificationEmailOutput) GoString() string {",
          "14811: func (s *SendCustomVerificationEmailOutput) SetMessageId(v string) *SendCustomVerificationEmailOutput {",
          "14812:  s.MessageId = &v",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "11076:  ConfigurationSetName *string `type:\"string\"`",
          "11082:  Content *EmailContent `type:\"structure\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "11087:  Destination *Destination `type:\"structure\" required:\"true\"`",
          "",
          "[Added Lines]",
          "14831:  Destination *Destination `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "11095:  FeedbackForwardingEmailAddress *string `type:\"string\"`",
          "11099:  FromEmailAddress *string `type:\"string\"`",
          "11103:  ReplyToAddresses []*string `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14854:  FeedbackForwardingEmailAddressIdentityArn *string `type:\"string\"`",
          "14874:  FromEmailAddressIdentityArn *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "11119:  if s.Content == nil {",
          "11120:   invalidParams.Add(request.NewErrParamRequired(\"Content\"))",
          "11121:  }",
          "11125:  if s.Content != nil {",
          "11126:   if err := s.Content.Validate(); err != nil {",
          "11127:    invalidParams.AddNested(\"Content\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "11122:  if s.Destination == nil {",
          "11123:   invalidParams.Add(request.NewErrParamRequired(\"Destination\"))",
          "11124:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "11174:  return s",
          "11175: }",
          "11178: func (s *SendEmailInput) SetFromEmailAddress(v string) *SendEmailInput {",
          "11179:  s.FromEmailAddress = &v",
          "11180:  return s",
          "11181: }",
          "11184: func (s *SendEmailInput) SetReplyToAddresses(v []*string) *SendEmailInput {",
          "11185:  s.ReplyToAddresses = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14950: func (s *SendEmailInput) SetFeedbackForwardingEmailAddressIdentityArn(v string) *SendEmailInput {",
          "14951:  s.FeedbackForwardingEmailAddressIdentityArn = &v",
          "14952:  return s",
          "14953: }",
          "14962: func (s *SendEmailInput) SetFromEmailAddressIdentityArn(v string) *SendEmailInput {",
          "14963:  s.FromEmailAddressIdentityArn = &v",
          "14964:  return s",
          "14965: }",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "11740:  return nil",
          "11741: }",
          "11746:  return s",
          "11747: }",
          "11752:  return s",
          "11753: }",
          "11774:  _ struct{} `type:\"structure\"`",
          "11784: }",
          "11788:  return awsutil.Prettify(s)",
          "11789: }",
          "11793:  return s.String()",
          "11794: }",
          "11805:  return s",
          "11806: }",
          "",
          "[Removed Lines]",
          "11744: func (s *TagResourceInput) SetResourceArn(v string) *TagResourceInput {",
          "11745:  s.ResourceArn = &v",
          "11750: func (s *TagResourceInput) SetTags(v []*Tag) *TagResourceInput {",
          "11751:  s.Tags = v",
          "11755: type TagResourceOutput struct {",
          "11756:  _ struct{} `type:\"structure\"`",
          "11757: }",
          "11760: func (s TagResourceOutput) String() string {",
          "11761:  return awsutil.Prettify(s)",
          "11762: }",
          "11765: func (s TagResourceOutput) GoString() string {",
          "11766:  return s.String()",
          "11767: }",
          "11773: type Template struct {",
          "11777:  TemplateArn *string `type:\"string\"`",
          "11783:  TemplateData *string `type:\"string\"`",
          "11787: func (s Template) String() string {",
          "11792: func (s Template) GoString() string {",
          "11797: func (s *Template) SetTemplateArn(v string) *Template {",
          "11798:  s.TemplateArn = &v",
          "11799:  return s",
          "11800: }",
          "11803: func (s *Template) SetTemplateData(v string) *Template {",
          "11804:  s.TemplateData = &v",
          "",
          "[Added Lines]",
          "15528: func (s *TagResourceInput) SetResourceArn(v string) *TagResourceInput {",
          "15529:  s.ResourceArn = &v",
          "15530:  return s",
          "15531: }",
          "15534: func (s *TagResourceInput) SetTags(v []*Tag) *TagResourceInput {",
          "15535:  s.Tags = v",
          "15536:  return s",
          "15537: }",
          "15539: type TagResourceOutput struct {",
          "15540:  _ struct{} `type:\"structure\"`",
          "15541: }",
          "15544: func (s TagResourceOutput) String() string {",
          "15545:  return awsutil.Prettify(s)",
          "15546: }",
          "15549: func (s TagResourceOutput) GoString() string {",
          "15550:  return s.String()",
          "15551: }",
          "15557: type Template struct {",
          "15558:  _ struct{} `type:\"structure\"`",
          "15561:  TemplateArn *string `type:\"string\"`",
          "15567:  TemplateData *string `type:\"string\"`",
          "15571:  TemplateName *string `min:\"1\" type:\"string\"`",
          "15572: }",
          "15575: func (s Template) String() string {",
          "15576:  return awsutil.Prettify(s)",
          "15577: }",
          "15580: func (s Template) GoString() string {",
          "15581:  return s.String()",
          "15582: }",
          "15585: func (s *Template) Validate() error {",
          "15586:  invalidParams := request.ErrInvalidParams{Context: \"Template\"}",
          "15587:  if s.TemplateName != nil && len(*s.TemplateName) < 1 {",
          "15588:   invalidParams.Add(request.NewErrParamMinLen(\"TemplateName\", 1))",
          "15589:  }",
          "15591:  if invalidParams.Len() > 0 {",
          "15592:   return invalidParams",
          "15593:  }",
          "15594:  return nil",
          "15595: }",
          "15598: func (s *Template) SetTemplateArn(v string) *Template {",
          "15599:  s.TemplateArn = &v",
          "15600:  return s",
          "15601: }",
          "15604: func (s *Template) SetTemplateData(v string) *Template {",
          "15605:  s.TemplateData = &v",
          "15606:  return s",
          "15607: }",
          "15610: func (s *Template) SetTemplateName(v string) *Template {",
          "15611:  s.TemplateName = &v",
          "15612:  return s",
          "15613: }",
          "15617: type TestRenderEmailTemplateInput struct {",
          "15618:  _ struct{} `type:\"structure\"`",
          "15625:  TemplateData *string `type:\"string\" required:\"true\"`",
          "15630:  TemplateName *string `location:\"uri\" locationName:\"TemplateName\" min:\"1\" type:\"string\" required:\"true\"`",
          "15631: }",
          "15634: func (s TestRenderEmailTemplateInput) String() string {",
          "15635:  return awsutil.Prettify(s)",
          "15636: }",
          "15639: func (s TestRenderEmailTemplateInput) GoString() string {",
          "15640:  return s.String()",
          "15641: }",
          "15644: func (s *TestRenderEmailTemplateInput) Validate() error {",
          "15645:  invalidParams := request.ErrInvalidParams{Context: \"TestRenderEmailTemplateInput\"}",
          "15646:  if s.TemplateData == nil {",
          "15647:   invalidParams.Add(request.NewErrParamRequired(\"TemplateData\"))",
          "15648:  }",
          "15649:  if s.TemplateName == nil {",
          "15650:   invalidParams.Add(request.NewErrParamRequired(\"TemplateName\"))",
          "15651:  }",
          "15652:  if s.TemplateName != nil && len(*s.TemplateName) < 1 {",
          "15653:   invalidParams.Add(request.NewErrParamMinLen(\"TemplateName\", 1))",
          "15654:  }",
          "15656:  if invalidParams.Len() > 0 {",
          "15657:   return invalidParams",
          "15658:  }",
          "15659:  return nil",
          "15660: }",
          "15663: func (s *TestRenderEmailTemplateInput) SetTemplateData(v string) *TestRenderEmailTemplateInput {",
          "15664:  s.TemplateData = &v",
          "15669: func (s *TestRenderEmailTemplateInput) SetTemplateName(v string) *TestRenderEmailTemplateInput {",
          "15670:  s.TemplateName = &v",
          "15675: type TestRenderEmailTemplateOutput struct {",
          "15682:  RenderedTemplate *string `type:\"string\" required:\"true\"`",
          "15686: func (s TestRenderEmailTemplateOutput) String() string {",
          "15691: func (s TestRenderEmailTemplateOutput) GoString() string {",
          "15696: func (s *TestRenderEmailTemplateOutput) SetRenderedTemplate(v string) *TestRenderEmailTemplateOutput {",
          "15697:  s.RenderedTemplate = &v",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "12076:  return s.String()",
          "12077: }",
          "12081: type VolumeStatistics struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15973: type UpdateCustomVerificationEmailTemplateInput struct {",
          "15974:  _ struct{} `type:\"structure\"`",
          "15980:  FailureRedirectionURL *string `type:\"string\" required:\"true\"`",
          "15985:  FromEmailAddress *string `type:\"string\" required:\"true\"`",
          "15991:  SuccessRedirectionURL *string `type:\"string\" required:\"true\"`",
          "16000:  TemplateContent *string `type:\"string\" required:\"true\"`",
          "16005:  TemplateName *string `location:\"uri\" locationName:\"TemplateName\" min:\"1\" type:\"string\" required:\"true\"`",
          "16010:  TemplateSubject *string `type:\"string\" required:\"true\"`",
          "16011: }",
          "16014: func (s UpdateCustomVerificationEmailTemplateInput) String() string {",
          "16015:  return awsutil.Prettify(s)",
          "16016: }",
          "16019: func (s UpdateCustomVerificationEmailTemplateInput) GoString() string {",
          "16020:  return s.String()",
          "16021: }",
          "16024: func (s *UpdateCustomVerificationEmailTemplateInput) Validate() error {",
          "16025:  invalidParams := request.ErrInvalidParams{Context: \"UpdateCustomVerificationEmailTemplateInput\"}",
          "16026:  if s.FailureRedirectionURL == nil {",
          "16027:   invalidParams.Add(request.NewErrParamRequired(\"FailureRedirectionURL\"))",
          "16028:  }",
          "16029:  if s.FromEmailAddress == nil {",
          "16030:   invalidParams.Add(request.NewErrParamRequired(\"FromEmailAddress\"))",
          "16031:  }",
          "16032:  if s.SuccessRedirectionURL == nil {",
          "16033:   invalidParams.Add(request.NewErrParamRequired(\"SuccessRedirectionURL\"))",
          "16034:  }",
          "16035:  if s.TemplateContent == nil {",
          "16036:   invalidParams.Add(request.NewErrParamRequired(\"TemplateContent\"))",
          "16037:  }",
          "16038:  if s.TemplateName == nil {",
          "16039:   invalidParams.Add(request.NewErrParamRequired(\"TemplateName\"))",
          "16040:  }",
          "16041:  if s.TemplateName != nil && len(*s.TemplateName) < 1 {",
          "16042:   invalidParams.Add(request.NewErrParamMinLen(\"TemplateName\", 1))",
          "16043:  }",
          "16044:  if s.TemplateSubject == nil {",
          "16045:   invalidParams.Add(request.NewErrParamRequired(\"TemplateSubject\"))",
          "16046:  }",
          "16048:  if invalidParams.Len() > 0 {",
          "16049:   return invalidParams",
          "16050:  }",
          "16051:  return nil",
          "16052: }",
          "16055: func (s *UpdateCustomVerificationEmailTemplateInput) SetFailureRedirectionURL(v string) *UpdateCustomVerificationEmailTemplateInput {",
          "16056:  s.FailureRedirectionURL = &v",
          "16057:  return s",
          "16058: }",
          "16061: func (s *UpdateCustomVerificationEmailTemplateInput) SetFromEmailAddress(v string) *UpdateCustomVerificationEmailTemplateInput {",
          "16062:  s.FromEmailAddress = &v",
          "16063:  return s",
          "16064: }",
          "16067: func (s *UpdateCustomVerificationEmailTemplateInput) SetSuccessRedirectionURL(v string) *UpdateCustomVerificationEmailTemplateInput {",
          "16068:  s.SuccessRedirectionURL = &v",
          "16069:  return s",
          "16070: }",
          "16073: func (s *UpdateCustomVerificationEmailTemplateInput) SetTemplateContent(v string) *UpdateCustomVerificationEmailTemplateInput {",
          "16074:  s.TemplateContent = &v",
          "16075:  return s",
          "16076: }",
          "16079: func (s *UpdateCustomVerificationEmailTemplateInput) SetTemplateName(v string) *UpdateCustomVerificationEmailTemplateInput {",
          "16080:  s.TemplateName = &v",
          "16081:  return s",
          "16082: }",
          "16085: func (s *UpdateCustomVerificationEmailTemplateInput) SetTemplateSubject(v string) *UpdateCustomVerificationEmailTemplateInput {",
          "16086:  s.TemplateSubject = &v",
          "16087:  return s",
          "16088: }",
          "16092: type UpdateCustomVerificationEmailTemplateOutput struct {",
          "16093:  _ struct{} `type:\"structure\"`",
          "16094: }",
          "16097: func (s UpdateCustomVerificationEmailTemplateOutput) String() string {",
          "16098:  return awsutil.Prettify(s)",
          "16099: }",
          "16102: func (s UpdateCustomVerificationEmailTemplateOutput) GoString() string {",
          "16103:  return s.String()",
          "16104: }",
          "16110: type UpdateEmailIdentityPolicyInput struct {",
          "16111:  _ struct{} `type:\"structure\"`",
          "16116:  EmailIdentity *string `location:\"uri\" locationName:\"EmailIdentity\" min:\"1\" type:\"string\" required:\"true\"`",
          "16124:  Policy *string `min:\"1\" type:\"string\" required:\"true\"`",
          "16132:  PolicyName *string `location:\"uri\" locationName:\"PolicyName\" min:\"1\" type:\"string\" required:\"true\"`",
          "16133: }",
          "16136: func (s UpdateEmailIdentityPolicyInput) String() string {",
          "16137:  return awsutil.Prettify(s)",
          "16138: }",
          "16141: func (s UpdateEmailIdentityPolicyInput) GoString() string {",
          "16142:  return s.String()",
          "16143: }",
          "16146: func (s *UpdateEmailIdentityPolicyInput) Validate() error {",
          "16147:  invalidParams := request.ErrInvalidParams{Context: \"UpdateEmailIdentityPolicyInput\"}",
          "16148:  if s.EmailIdentity == nil {",
          "16149:   invalidParams.Add(request.NewErrParamRequired(\"EmailIdentity\"))",
          "16150:  }",
          "16151:  if s.EmailIdentity != nil && len(*s.EmailIdentity) < 1 {",
          "16152:   invalidParams.Add(request.NewErrParamMinLen(\"EmailIdentity\", 1))",
          "16153:  }",
          "16154:  if s.Policy == nil {",
          "16155:   invalidParams.Add(request.NewErrParamRequired(\"Policy\"))",
          "16156:  }",
          "16157:  if s.Policy != nil && len(*s.Policy) < 1 {",
          "16158:   invalidParams.Add(request.NewErrParamMinLen(\"Policy\", 1))",
          "16159:  }",
          "16160:  if s.PolicyName == nil {",
          "16161:   invalidParams.Add(request.NewErrParamRequired(\"PolicyName\"))",
          "16162:  }",
          "16163:  if s.PolicyName != nil && len(*s.PolicyName) < 1 {",
          "16164:   invalidParams.Add(request.NewErrParamMinLen(\"PolicyName\", 1))",
          "16165:  }",
          "16167:  if invalidParams.Len() > 0 {",
          "16168:   return invalidParams",
          "16169:  }",
          "16170:  return nil",
          "16171: }",
          "16174: func (s *UpdateEmailIdentityPolicyInput) SetEmailIdentity(v string) *UpdateEmailIdentityPolicyInput {",
          "16175:  s.EmailIdentity = &v",
          "16176:  return s",
          "16177: }",
          "16180: func (s *UpdateEmailIdentityPolicyInput) SetPolicy(v string) *UpdateEmailIdentityPolicyInput {",
          "16181:  s.Policy = &v",
          "16182:  return s",
          "16183: }",
          "16186: func (s *UpdateEmailIdentityPolicyInput) SetPolicyName(v string) *UpdateEmailIdentityPolicyInput {",
          "16187:  s.PolicyName = &v",
          "16188:  return s",
          "16189: }",
          "16193: type UpdateEmailIdentityPolicyOutput struct {",
          "16194:  _ struct{} `type:\"structure\"`",
          "16195: }",
          "16198: func (s UpdateEmailIdentityPolicyOutput) String() string {",
          "16199:  return awsutil.Prettify(s)",
          "16200: }",
          "16203: func (s UpdateEmailIdentityPolicyOutput) GoString() string {",
          "16204:  return s.String()",
          "16205: }",
          "16209: type UpdateEmailTemplateInput struct {",
          "16210:  _ struct{} `type:\"structure\"`",
          "16216:  TemplateContent *EmailTemplateContent `type:\"structure\" required:\"true\"`",
          "16221:  TemplateName *string `location:\"uri\" locationName:\"TemplateName\" min:\"1\" type:\"string\" required:\"true\"`",
          "16222: }",
          "16225: func (s UpdateEmailTemplateInput) String() string {",
          "16226:  return awsutil.Prettify(s)",
          "16227: }",
          "16230: func (s UpdateEmailTemplateInput) GoString() string {",
          "16231:  return s.String()",
          "16232: }",
          "16235: func (s *UpdateEmailTemplateInput) Validate() error {",
          "16236:  invalidParams := request.ErrInvalidParams{Context: \"UpdateEmailTemplateInput\"}",
          "16237:  if s.TemplateContent == nil {",
          "16238:   invalidParams.Add(request.NewErrParamRequired(\"TemplateContent\"))",
          "16239:  }",
          "16240:  if s.TemplateName == nil {",
          "16241:   invalidParams.Add(request.NewErrParamRequired(\"TemplateName\"))",
          "16242:  }",
          "16243:  if s.TemplateName != nil && len(*s.TemplateName) < 1 {",
          "16244:   invalidParams.Add(request.NewErrParamMinLen(\"TemplateName\", 1))",
          "16245:  }",
          "16247:  if invalidParams.Len() > 0 {",
          "16248:   return invalidParams",
          "16249:  }",
          "16250:  return nil",
          "16251: }",
          "16254: func (s *UpdateEmailTemplateInput) SetTemplateContent(v *EmailTemplateContent) *UpdateEmailTemplateInput {",
          "16255:  s.TemplateContent = v",
          "16256:  return s",
          "16257: }",
          "16260: func (s *UpdateEmailTemplateInput) SetTemplateName(v string) *UpdateEmailTemplateInput {",
          "16261:  s.TemplateName = &v",
          "16262:  return s",
          "16263: }",
          "16267: type UpdateEmailTemplateOutput struct {",
          "16268:  _ struct{} `type:\"structure\"`",
          "16269: }",
          "16272: func (s UpdateEmailTemplateOutput) String() string {",
          "16273:  return awsutil.Prettify(s)",
          "16274: }",
          "16277: func (s UpdateEmailTemplateOutput) GoString() string {",
          "16278:  return s.String()",
          "16279: }",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "12147:  BehaviorOnMxFailureRejectMessage = \"REJECT_MESSAGE\"",
          "12148: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16352: const (",
          "16354:  BulkEmailStatusSuccess = \"SUCCESS\"",
          "16357:  BulkEmailStatusMessageRejected = \"MESSAGE_REJECTED\"",
          "16360:  BulkEmailStatusMailFromDomainNotVerified = \"MAIL_FROM_DOMAIN_NOT_VERIFIED\"",
          "16363:  BulkEmailStatusConfigurationSetNotFound = \"CONFIGURATION_SET_NOT_FOUND\"",
          "16366:  BulkEmailStatusTemplateNotFound = \"TEMPLATE_NOT_FOUND\"",
          "16369:  BulkEmailStatusAccountSuspended = \"ACCOUNT_SUSPENDED\"",
          "16372:  BulkEmailStatusAccountThrottled = \"ACCOUNT_THROTTLED\"",
          "16375:  BulkEmailStatusAccountDailyQuotaExceeded = \"ACCOUNT_DAILY_QUOTA_EXCEEDED\"",
          "16378:  BulkEmailStatusInvalidSendingPoolName = \"INVALID_SENDING_POOL_NAME\"",
          "16381:  BulkEmailStatusAccountSendingPaused = \"ACCOUNT_SENDING_PAUSED\"",
          "16384:  BulkEmailStatusConfigurationSetSendingPaused = \"CONFIGURATION_SET_SENDING_PAUSED\"",
          "16387:  BulkEmailStatusInvalidParameter = \"INVALID_PARAMETER\"",
          "16390:  BulkEmailStatusTransientFailure = \"TRANSIENT_FAILURE\"",
          "16393:  BulkEmailStatusFailed = \"FAILED\"",
          "16394: )",
          "16396: const (",
          "16398:  ContactLanguageEn = \"EN\"",
          "16401:  ContactLanguageJa = \"JA\"",
          "16402: )",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "12305:  MailFromDomainStatusTemporaryFailure = \"TEMPORARY_FAILURE\"",
          "12306: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16562: const (",
          "16564:  MailTypeMarketing = \"MARKETING\"",
          "16567:  MailTypeTransactional = \"TRANSACTIONAL\"",
          "16568: )",
          "16570: const (",
          "16572:  ReviewStatusPending = \"PENDING\"",
          "16575:  ReviewStatusFailed = \"FAILED\"",
          "16578:  ReviewStatusGranted = \"GRANTED\"",
          "16581:  ReviewStatusDenied = \"DENIED\"",
          "16582: )",
          "",
          "---------------"
        ],
        "service/sesv2/errors.go||service/sesv2/errors.go": [
          "File: service/sesv2/errors.go -> service/sesv2/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:  ErrCodeConcurrentModificationException = \"ConcurrentModificationException\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:  ErrCodeConflictException = \"ConflictException\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82:  \"AlreadyExistsException\":             newErrorAlreadyExistsException,",
          "83:  \"BadRequestException\":                newErrorBadRequestException,",
          "84:  \"ConcurrentModificationException\":    newErrorConcurrentModificationException,",
          "85:  \"InvalidNextTokenException\":          newErrorInvalidNextTokenException,",
          "86:  \"LimitExceededException\":             newErrorLimitExceededException,",
          "87:  \"MailFromDomainNotVerifiedException\": newErrorMailFromDomainNotVerifiedException,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91:  \"ConflictException\":                  newErrorConflictException,",
          "",
          "---------------"
        ],
        "service/sesv2/sesv2iface/interface.go||service/sesv2/sesv2iface/interface.go": [
          "File: service/sesv2/sesv2iface/interface.go -> service/sesv2/sesv2iface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:  CreateConfigurationSetEventDestinationWithContext(aws.Context, *sesv2.CreateConfigurationSetEventDestinationInput, ...request.Option) (*sesv2.CreateConfigurationSetEventDestinationOutput, error)",
          "69:  CreateConfigurationSetEventDestinationRequest(*sesv2.CreateConfigurationSetEventDestinationInput) (*request.Request, *sesv2.CreateConfigurationSetEventDestinationOutput)",
          "71:  CreateDedicatedIpPool(*sesv2.CreateDedicatedIpPoolInput) (*sesv2.CreateDedicatedIpPoolOutput, error)",
          "72:  CreateDedicatedIpPoolWithContext(aws.Context, *sesv2.CreateDedicatedIpPoolInput, ...request.Option) (*sesv2.CreateDedicatedIpPoolOutput, error)",
          "73:  CreateDedicatedIpPoolRequest(*sesv2.CreateDedicatedIpPoolInput) (*request.Request, *sesv2.CreateDedicatedIpPoolOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71:  CreateCustomVerificationEmailTemplate(*sesv2.CreateCustomVerificationEmailTemplateInput) (*sesv2.CreateCustomVerificationEmailTemplateOutput, error)",
          "72:  CreateCustomVerificationEmailTemplateWithContext(aws.Context, *sesv2.CreateCustomVerificationEmailTemplateInput, ...request.Option) (*sesv2.CreateCustomVerificationEmailTemplateOutput, error)",
          "73:  CreateCustomVerificationEmailTemplateRequest(*sesv2.CreateCustomVerificationEmailTemplateInput) (*request.Request, *sesv2.CreateCustomVerificationEmailTemplateOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80:  CreateEmailIdentityWithContext(aws.Context, *sesv2.CreateEmailIdentityInput, ...request.Option) (*sesv2.CreateEmailIdentityOutput, error)",
          "81:  CreateEmailIdentityRequest(*sesv2.CreateEmailIdentityInput) (*request.Request, *sesv2.CreateEmailIdentityOutput)",
          "83:  DeleteConfigurationSet(*sesv2.DeleteConfigurationSetInput) (*sesv2.DeleteConfigurationSetOutput, error)",
          "84:  DeleteConfigurationSetWithContext(aws.Context, *sesv2.DeleteConfigurationSetInput, ...request.Option) (*sesv2.DeleteConfigurationSetOutput, error)",
          "85:  DeleteConfigurationSetRequest(*sesv2.DeleteConfigurationSetInput) (*request.Request, *sesv2.DeleteConfigurationSetOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "87:  CreateEmailIdentityPolicy(*sesv2.CreateEmailIdentityPolicyInput) (*sesv2.CreateEmailIdentityPolicyOutput, error)",
          "88:  CreateEmailIdentityPolicyWithContext(aws.Context, *sesv2.CreateEmailIdentityPolicyInput, ...request.Option) (*sesv2.CreateEmailIdentityPolicyOutput, error)",
          "89:  CreateEmailIdentityPolicyRequest(*sesv2.CreateEmailIdentityPolicyInput) (*request.Request, *sesv2.CreateEmailIdentityPolicyOutput)",
          "91:  CreateEmailTemplate(*sesv2.CreateEmailTemplateInput) (*sesv2.CreateEmailTemplateOutput, error)",
          "92:  CreateEmailTemplateWithContext(aws.Context, *sesv2.CreateEmailTemplateInput, ...request.Option) (*sesv2.CreateEmailTemplateOutput, error)",
          "93:  CreateEmailTemplateRequest(*sesv2.CreateEmailTemplateInput) (*request.Request, *sesv2.CreateEmailTemplateOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "88:  DeleteConfigurationSetEventDestinationWithContext(aws.Context, *sesv2.DeleteConfigurationSetEventDestinationInput, ...request.Option) (*sesv2.DeleteConfigurationSetEventDestinationOutput, error)",
          "89:  DeleteConfigurationSetEventDestinationRequest(*sesv2.DeleteConfigurationSetEventDestinationInput) (*request.Request, *sesv2.DeleteConfigurationSetEventDestinationOutput)",
          "91:  DeleteDedicatedIpPool(*sesv2.DeleteDedicatedIpPoolInput) (*sesv2.DeleteDedicatedIpPoolOutput, error)",
          "92:  DeleteDedicatedIpPoolWithContext(aws.Context, *sesv2.DeleteDedicatedIpPoolInput, ...request.Option) (*sesv2.DeleteDedicatedIpPoolOutput, error)",
          "93:  DeleteDedicatedIpPoolRequest(*sesv2.DeleteDedicatedIpPoolInput) (*request.Request, *sesv2.DeleteDedicatedIpPoolOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103:  DeleteCustomVerificationEmailTemplate(*sesv2.DeleteCustomVerificationEmailTemplateInput) (*sesv2.DeleteCustomVerificationEmailTemplateOutput, error)",
          "104:  DeleteCustomVerificationEmailTemplateWithContext(aws.Context, *sesv2.DeleteCustomVerificationEmailTemplateInput, ...request.Option) (*sesv2.DeleteCustomVerificationEmailTemplateOutput, error)",
          "105:  DeleteCustomVerificationEmailTemplateRequest(*sesv2.DeleteCustomVerificationEmailTemplateInput) (*request.Request, *sesv2.DeleteCustomVerificationEmailTemplateOutput)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "96:  DeleteEmailIdentityWithContext(aws.Context, *sesv2.DeleteEmailIdentityInput, ...request.Option) (*sesv2.DeleteEmailIdentityOutput, error)",
          "97:  DeleteEmailIdentityRequest(*sesv2.DeleteEmailIdentityInput) (*request.Request, *sesv2.DeleteEmailIdentityOutput)",
          "99:  DeleteSuppressedDestination(*sesv2.DeleteSuppressedDestinationInput) (*sesv2.DeleteSuppressedDestinationOutput, error)",
          "100:  DeleteSuppressedDestinationWithContext(aws.Context, *sesv2.DeleteSuppressedDestinationInput, ...request.Option) (*sesv2.DeleteSuppressedDestinationOutput, error)",
          "101:  DeleteSuppressedDestinationRequest(*sesv2.DeleteSuppressedDestinationInput) (*request.Request, *sesv2.DeleteSuppressedDestinationOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "115:  DeleteEmailIdentityPolicy(*sesv2.DeleteEmailIdentityPolicyInput) (*sesv2.DeleteEmailIdentityPolicyOutput, error)",
          "116:  DeleteEmailIdentityPolicyWithContext(aws.Context, *sesv2.DeleteEmailIdentityPolicyInput, ...request.Option) (*sesv2.DeleteEmailIdentityPolicyOutput, error)",
          "117:  DeleteEmailIdentityPolicyRequest(*sesv2.DeleteEmailIdentityPolicyInput) (*request.Request, *sesv2.DeleteEmailIdentityPolicyOutput)",
          "119:  DeleteEmailTemplate(*sesv2.DeleteEmailTemplateInput) (*sesv2.DeleteEmailTemplateOutput, error)",
          "120:  DeleteEmailTemplateWithContext(aws.Context, *sesv2.DeleteEmailTemplateInput, ...request.Option) (*sesv2.DeleteEmailTemplateOutput, error)",
          "121:  DeleteEmailTemplateRequest(*sesv2.DeleteEmailTemplateInput) (*request.Request, *sesv2.DeleteEmailTemplateOutput)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "116:  GetConfigurationSetEventDestinationsWithContext(aws.Context, *sesv2.GetConfigurationSetEventDestinationsInput, ...request.Option) (*sesv2.GetConfigurationSetEventDestinationsOutput, error)",
          "117:  GetConfigurationSetEventDestinationsRequest(*sesv2.GetConfigurationSetEventDestinationsInput) (*request.Request, *sesv2.GetConfigurationSetEventDestinationsOutput)",
          "119:  GetDedicatedIp(*sesv2.GetDedicatedIpInput) (*sesv2.GetDedicatedIpOutput, error)",
          "120:  GetDedicatedIpWithContext(aws.Context, *sesv2.GetDedicatedIpInput, ...request.Option) (*sesv2.GetDedicatedIpOutput, error)",
          "121:  GetDedicatedIpRequest(*sesv2.GetDedicatedIpInput) (*request.Request, *sesv2.GetDedicatedIpOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "143:  GetCustomVerificationEmailTemplate(*sesv2.GetCustomVerificationEmailTemplateInput) (*sesv2.GetCustomVerificationEmailTemplateOutput, error)",
          "144:  GetCustomVerificationEmailTemplateWithContext(aws.Context, *sesv2.GetCustomVerificationEmailTemplateInput, ...request.Option) (*sesv2.GetCustomVerificationEmailTemplateOutput, error)",
          "145:  GetCustomVerificationEmailTemplateRequest(*sesv2.GetCustomVerificationEmailTemplateInput) (*request.Request, *sesv2.GetCustomVerificationEmailTemplateOutput)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "147:  GetEmailIdentityWithContext(aws.Context, *sesv2.GetEmailIdentityInput, ...request.Option) (*sesv2.GetEmailIdentityOutput, error)",
          "148:  GetEmailIdentityRequest(*sesv2.GetEmailIdentityInput) (*request.Request, *sesv2.GetEmailIdentityOutput)",
          "150:  GetSuppressedDestination(*sesv2.GetSuppressedDestinationInput) (*sesv2.GetSuppressedDestinationOutput, error)",
          "151:  GetSuppressedDestinationWithContext(aws.Context, *sesv2.GetSuppressedDestinationInput, ...request.Option) (*sesv2.GetSuppressedDestinationOutput, error)",
          "152:  GetSuppressedDestinationRequest(*sesv2.GetSuppressedDestinationInput) (*request.Request, *sesv2.GetSuppressedDestinationOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "178:  GetEmailIdentityPolicies(*sesv2.GetEmailIdentityPoliciesInput) (*sesv2.GetEmailIdentityPoliciesOutput, error)",
          "179:  GetEmailIdentityPoliciesWithContext(aws.Context, *sesv2.GetEmailIdentityPoliciesInput, ...request.Option) (*sesv2.GetEmailIdentityPoliciesOutput, error)",
          "180:  GetEmailIdentityPoliciesRequest(*sesv2.GetEmailIdentityPoliciesInput) (*request.Request, *sesv2.GetEmailIdentityPoliciesOutput)",
          "182:  GetEmailTemplate(*sesv2.GetEmailTemplateInput) (*sesv2.GetEmailTemplateOutput, error)",
          "183:  GetEmailTemplateWithContext(aws.Context, *sesv2.GetEmailTemplateInput, ...request.Option) (*sesv2.GetEmailTemplateOutput, error)",
          "184:  GetEmailTemplateRequest(*sesv2.GetEmailTemplateInput) (*request.Request, *sesv2.GetEmailTemplateOutput)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "158:  ListConfigurationSetsPages(*sesv2.ListConfigurationSetsInput, func(*sesv2.ListConfigurationSetsOutput, bool) bool) error",
          "159:  ListConfigurationSetsPagesWithContext(aws.Context, *sesv2.ListConfigurationSetsInput, func(*sesv2.ListConfigurationSetsOutput, bool) bool, ...request.Option) error",
          "161:  ListDedicatedIpPools(*sesv2.ListDedicatedIpPoolsInput) (*sesv2.ListDedicatedIpPoolsOutput, error)",
          "162:  ListDedicatedIpPoolsWithContext(aws.Context, *sesv2.ListDedicatedIpPoolsInput, ...request.Option) (*sesv2.ListDedicatedIpPoolsOutput, error)",
          "163:  ListDedicatedIpPoolsRequest(*sesv2.ListDedicatedIpPoolsInput) (*request.Request, *sesv2.ListDedicatedIpPoolsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "197:  ListCustomVerificationEmailTemplates(*sesv2.ListCustomVerificationEmailTemplatesInput) (*sesv2.ListCustomVerificationEmailTemplatesOutput, error)",
          "198:  ListCustomVerificationEmailTemplatesWithContext(aws.Context, *sesv2.ListCustomVerificationEmailTemplatesInput, ...request.Option) (*sesv2.ListCustomVerificationEmailTemplatesOutput, error)",
          "199:  ListCustomVerificationEmailTemplatesRequest(*sesv2.ListCustomVerificationEmailTemplatesInput) (*request.Request, *sesv2.ListCustomVerificationEmailTemplatesOutput)",
          "201:  ListCustomVerificationEmailTemplatesPages(*sesv2.ListCustomVerificationEmailTemplatesInput, func(*sesv2.ListCustomVerificationEmailTemplatesOutput, bool) bool) error",
          "202:  ListCustomVerificationEmailTemplatesPagesWithContext(aws.Context, *sesv2.ListCustomVerificationEmailTemplatesInput, func(*sesv2.ListCustomVerificationEmailTemplatesOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "186:  ListEmailIdentitiesPages(*sesv2.ListEmailIdentitiesInput, func(*sesv2.ListEmailIdentitiesOutput, bool) bool) error",
          "187:  ListEmailIdentitiesPagesWithContext(aws.Context, *sesv2.ListEmailIdentitiesInput, func(*sesv2.ListEmailIdentitiesOutput, bool) bool, ...request.Option) error",
          "189:  ListSuppressedDestinations(*sesv2.ListSuppressedDestinationsInput) (*sesv2.ListSuppressedDestinationsOutput, error)",
          "190:  ListSuppressedDestinationsWithContext(aws.Context, *sesv2.ListSuppressedDestinationsInput, ...request.Option) (*sesv2.ListSuppressedDestinationsOutput, error)",
          "191:  ListSuppressedDestinationsRequest(*sesv2.ListSuppressedDestinationsInput) (*request.Request, *sesv2.ListSuppressedDestinationsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "232:  ListEmailTemplates(*sesv2.ListEmailTemplatesInput) (*sesv2.ListEmailTemplatesOutput, error)",
          "233:  ListEmailTemplatesWithContext(aws.Context, *sesv2.ListEmailTemplatesInput, ...request.Option) (*sesv2.ListEmailTemplatesOutput, error)",
          "234:  ListEmailTemplatesRequest(*sesv2.ListEmailTemplatesInput) (*request.Request, *sesv2.ListEmailTemplatesOutput)",
          "236:  ListEmailTemplatesPages(*sesv2.ListEmailTemplatesInput, func(*sesv2.ListEmailTemplatesOutput, bool) bool) error",
          "237:  ListEmailTemplatesPagesWithContext(aws.Context, *sesv2.ListEmailTemplatesInput, func(*sesv2.ListEmailTemplatesOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "201:  PutAccountDedicatedIpWarmupAttributesWithContext(aws.Context, *sesv2.PutAccountDedicatedIpWarmupAttributesInput, ...request.Option) (*sesv2.PutAccountDedicatedIpWarmupAttributesOutput, error)",
          "202:  PutAccountDedicatedIpWarmupAttributesRequest(*sesv2.PutAccountDedicatedIpWarmupAttributesInput) (*request.Request, *sesv2.PutAccountDedicatedIpWarmupAttributesOutput)",
          "204:  PutAccountSendingAttributes(*sesv2.PutAccountSendingAttributesInput) (*sesv2.PutAccountSendingAttributesOutput, error)",
          "205:  PutAccountSendingAttributesWithContext(aws.Context, *sesv2.PutAccountSendingAttributesInput, ...request.Option) (*sesv2.PutAccountSendingAttributesOutput, error)",
          "206:  PutAccountSendingAttributesRequest(*sesv2.PutAccountSendingAttributesInput) (*request.Request, *sesv2.PutAccountSendingAttributesOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "254:  PutAccountDetails(*sesv2.PutAccountDetailsInput) (*sesv2.PutAccountDetailsOutput, error)",
          "255:  PutAccountDetailsWithContext(aws.Context, *sesv2.PutAccountDetailsInput, ...request.Option) (*sesv2.PutAccountDetailsOutput, error)",
          "256:  PutAccountDetailsRequest(*sesv2.PutAccountDetailsInput) (*request.Request, *sesv2.PutAccountDetailsOutput)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "261:  PutSuppressedDestinationWithContext(aws.Context, *sesv2.PutSuppressedDestinationInput, ...request.Option) (*sesv2.PutSuppressedDestinationOutput, error)",
          "262:  PutSuppressedDestinationRequest(*sesv2.PutSuppressedDestinationInput) (*request.Request, *sesv2.PutSuppressedDestinationOutput)",
          "264:  SendEmail(*sesv2.SendEmailInput) (*sesv2.SendEmailOutput, error)",
          "265:  SendEmailWithContext(aws.Context, *sesv2.SendEmailInput, ...request.Option) (*sesv2.SendEmailOutput, error)",
          "266:  SendEmailRequest(*sesv2.SendEmailInput) (*request.Request, *sesv2.SendEmailOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "318:  SendBulkEmail(*sesv2.SendBulkEmailInput) (*sesv2.SendBulkEmailOutput, error)",
          "319:  SendBulkEmailWithContext(aws.Context, *sesv2.SendBulkEmailInput, ...request.Option) (*sesv2.SendBulkEmailOutput, error)",
          "320:  SendBulkEmailRequest(*sesv2.SendBulkEmailInput) (*request.Request, *sesv2.SendBulkEmailOutput)",
          "322:  SendCustomVerificationEmail(*sesv2.SendCustomVerificationEmailInput) (*sesv2.SendCustomVerificationEmailOutput, error)",
          "323:  SendCustomVerificationEmailWithContext(aws.Context, *sesv2.SendCustomVerificationEmailInput, ...request.Option) (*sesv2.SendCustomVerificationEmailOutput, error)",
          "324:  SendCustomVerificationEmailRequest(*sesv2.SendCustomVerificationEmailInput) (*request.Request, *sesv2.SendCustomVerificationEmailOutput)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "269:  TagResourceWithContext(aws.Context, *sesv2.TagResourceInput, ...request.Option) (*sesv2.TagResourceOutput, error)",
          "270:  TagResourceRequest(*sesv2.TagResourceInput) (*request.Request, *sesv2.TagResourceOutput)",
          "272:  UntagResource(*sesv2.UntagResourceInput) (*sesv2.UntagResourceOutput, error)",
          "273:  UntagResourceWithContext(aws.Context, *sesv2.UntagResourceInput, ...request.Option) (*sesv2.UntagResourceOutput, error)",
          "274:  UntagResourceRequest(*sesv2.UntagResourceInput) (*request.Request, *sesv2.UntagResourceOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "334:  TestRenderEmailTemplate(*sesv2.TestRenderEmailTemplateInput) (*sesv2.TestRenderEmailTemplateOutput, error)",
          "335:  TestRenderEmailTemplateWithContext(aws.Context, *sesv2.TestRenderEmailTemplateInput, ...request.Option) (*sesv2.TestRenderEmailTemplateOutput, error)",
          "336:  TestRenderEmailTemplateRequest(*sesv2.TestRenderEmailTemplateInput) (*request.Request, *sesv2.TestRenderEmailTemplateOutput)",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "276:  UpdateConfigurationSetEventDestination(*sesv2.UpdateConfigurationSetEventDestinationInput) (*sesv2.UpdateConfigurationSetEventDestinationOutput, error)",
          "277:  UpdateConfigurationSetEventDestinationWithContext(aws.Context, *sesv2.UpdateConfigurationSetEventDestinationInput, ...request.Option) (*sesv2.UpdateConfigurationSetEventDestinationOutput, error)",
          "278:  UpdateConfigurationSetEventDestinationRequest(*sesv2.UpdateConfigurationSetEventDestinationInput) (*request.Request, *sesv2.UpdateConfigurationSetEventDestinationOutput)",
          "279: }",
          "281: var _ SESV2API = (*sesv2.SESV2)(nil)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "346:  UpdateCustomVerificationEmailTemplate(*sesv2.UpdateCustomVerificationEmailTemplateInput) (*sesv2.UpdateCustomVerificationEmailTemplateOutput, error)",
          "347:  UpdateCustomVerificationEmailTemplateWithContext(aws.Context, *sesv2.UpdateCustomVerificationEmailTemplateInput, ...request.Option) (*sesv2.UpdateCustomVerificationEmailTemplateOutput, error)",
          "348:  UpdateCustomVerificationEmailTemplateRequest(*sesv2.UpdateCustomVerificationEmailTemplateInput) (*request.Request, *sesv2.UpdateCustomVerificationEmailTemplateOutput)",
          "350:  UpdateEmailIdentityPolicy(*sesv2.UpdateEmailIdentityPolicyInput) (*sesv2.UpdateEmailIdentityPolicyOutput, error)",
          "351:  UpdateEmailIdentityPolicyWithContext(aws.Context, *sesv2.UpdateEmailIdentityPolicyInput, ...request.Option) (*sesv2.UpdateEmailIdentityPolicyOutput, error)",
          "352:  UpdateEmailIdentityPolicyRequest(*sesv2.UpdateEmailIdentityPolicyInput) (*request.Request, *sesv2.UpdateEmailIdentityPolicyOutput)",
          "354:  UpdateEmailTemplate(*sesv2.UpdateEmailTemplateInput) (*sesv2.UpdateEmailTemplateOutput, error)",
          "355:  UpdateEmailTemplateWithContext(aws.Context, *sesv2.UpdateEmailTemplateInput, ...request.Option) (*sesv2.UpdateEmailTemplateOutput, error)",
          "356:  UpdateEmailTemplateRequest(*sesv2.UpdateEmailTemplateInput) (*request.Request, *sesv2.UpdateEmailTemplateOutput)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e5d9526a954f5f137ee50b7131193a796c12fd12",
      "candidate_info": {
        "commit_hash": "e5d9526a954f5f137ee50b7131193a796c12fd12",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/e5d9526a954f5f137ee50b7131193a796c12fd12",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/autoscaling/2011-01-01/api-2.json",
          "models/apis/autoscaling/2011-01-01/docs-2.json",
          "models/apis/ec2/2016-11-15/api-2.json",
          "models/apis/ec2/2016-11-15/docs-2.json",
          "models/apis/imagebuilder/2019-12-02/api-2.json",
          "models/apis/imagebuilder/2019-12-02/docs-2.json",
          "models/apis/ivs/2020-07-14/api-2.json",
          "models/apis/ivs/2020-07-14/docs-2.json",
          "models/apis/medialive/2017-10-14/api-2.json",
          "models/apis/medialive/2017-10-14/docs-2.json",
          "models/apis/rds/2014-10-31/docs-2.json",
          "models/apis/securityhub/2018-10-26/api-2.json",
          "models/apis/securityhub/2018-10-26/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/autoscaling/api.go",
          "service/ec2/api.go",
          "service/imagebuilder/api.go",
          "service/ivs/api.go",
          "service/ivs/doc.go",
          "service/ivs/errors.go",
          "service/medialive/api.go",
          "service/rds/api.go",
          "service/securityhub/api.go",
          "service/securityhub/securityhubiface/interface.go"
        ],
        "message": "Release v1.33.14 (2020-07-28) (#3445)\n\nRelease v1.33.14 (2020-07-28)\n===\n\n### Service Client Updates\n* `service/autoscaling`: Updates service API and documentation\n  * Now you can enable Instance Metadata Service Version 2 (IMDSv2) or disable the instance metadata endpoint with Launch Configurations.\n* `service/ec2`: Updates service API and documentation\n  * Introduces support for tag-on-create capability for the following APIs: CreateVpnConnection, CreateVpnGateway, and CreateCustomerGateway. A user can now add tags while creating these resources. For further detail, please see AWS Tagging Strategies.\n* `service/imagebuilder`: Updates service API and documentation\n* `service/ivs`: Updates service API and documentation\n* `service/medialive`: Updates service API and documentation\n  * AWS Elemental MediaLive now supports several new features: EBU-TT-D captions in Microsoft Smooth outputs; interlaced video in HEVC outputs; video noise reduction (using temporal filtering) in HEVC outputs.\n* `service/rds`: Updates service documentation\n  * Adds reporting of manual cluster snapshot quota to DescribeAccountAttributes API\n* `service/securityhub`: Updates service API and documentation",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/autoscaling/api.go||service/autoscaling/api.go",
          "service/ec2/api.go||service/ec2/api.go",
          "service/imagebuilder/api.go||service/imagebuilder/api.go",
          "service/ivs/api.go||service/ivs/api.go",
          "service/ivs/doc.go||service/ivs/doc.go",
          "service/ivs/errors.go||service/ivs/errors.go",
          "service/medialive/api.go||service/medialive/api.go",
          "service/rds/api.go||service/rds/api.go",
          "service/securityhub/api.go||service/securityhub/api.go",
          "service/securityhub/securityhubiface/interface.go||service/securityhub/securityhubiface/interface.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1008:     },",
          "1009:    },",
          "1010:    Endpoints: endpoints{",
          "1011:     \"ap-east-1\":      endpoint{},",
          "1012:     \"ap-northeast-1\": endpoint{},",
          "1013:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1011:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1017:     \"ca-central-1\":   endpoint{},",
          "1018:     \"eu-central-1\":   endpoint{},",
          "1019:     \"eu-north-1\":     endpoint{},",
          "1020:     \"eu-west-1\":      endpoint{},",
          "1021:     \"eu-west-2\":      endpoint{},",
          "1022:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1021:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2744:     \"eu-north-1\":     endpoint{},",
          "2745:     \"eu-west-1\":      endpoint{},",
          "2746:     \"eu-west-2\":      endpoint{},",
          "2747:     \"us-east-1\":      endpoint{},",
          "2748:     \"us-east-2\":      endpoint{},",
          "2749:     \"us-west-1\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2749:     \"eu-west-3\":      endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.33.13\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.33.14\"",
          "",
          "---------------"
        ],
        "service/autoscaling/api.go||service/autoscaling/api.go": [
          "File: service/autoscaling/api.go -> service/autoscaling/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7036:  LaunchConfigurationName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7047:  MetadataOptions *InstanceMetadataOptions `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7142:    }",
          "7143:   }",
          "7144:  }",
          "7146:  if invalidParams.Len() > 0 {",
          "7147:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7156:  if s.MetadataOptions != nil {",
          "7157:   if err := s.MetadataOptions.Validate(); err != nil {",
          "7158:    invalidParams.AddNested(\"MetadataOptions\", err.(request.ErrInvalidParams))",
          "7159:   }",
          "7160:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7227:  return s",
          "7228: }",
          "7231: func (s *CreateLaunchConfigurationInput) SetPlacementTenancy(v string) *CreateLaunchConfigurationInput {",
          "7232:  s.PlacementTenancy = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7247: func (s *CreateLaunchConfigurationInput) SetMetadataOptions(v *InstanceMetadataOptions) *CreateLaunchConfigurationInput {",
          "7248:  s.MetadataOptions = v",
          "7249:  return s",
          "7250: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "10826:  return s",
          "10827: }",
          "10830: type InstanceMonitoring struct {",
          "10831:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10854: type InstanceMetadataOptions struct {",
          "10855:  _ struct{} `type:\"structure\"`",
          "10862:  HttpEndpoint *string `type:\"string\" enum:\"InstanceMetadataEndpointState\"`",
          "10870:  HttpPutResponseHopLimit *int64 `min:\"1\" type:\"integer\"`",
          "10885:  HttpTokens *string `type:\"string\" enum:\"InstanceMetadataHttpTokensState\"`",
          "10886: }",
          "10889: func (s InstanceMetadataOptions) String() string {",
          "10890:  return awsutil.Prettify(s)",
          "10891: }",
          "10894: func (s InstanceMetadataOptions) GoString() string {",
          "10895:  return s.String()",
          "10896: }",
          "10899: func (s *InstanceMetadataOptions) Validate() error {",
          "10900:  invalidParams := request.ErrInvalidParams{Context: \"InstanceMetadataOptions\"}",
          "10901:  if s.HttpPutResponseHopLimit != nil && *s.HttpPutResponseHopLimit < 1 {",
          "10902:   invalidParams.Add(request.NewErrParamMinValue(\"HttpPutResponseHopLimit\", 1))",
          "10903:  }",
          "10905:  if invalidParams.Len() > 0 {",
          "10906:   return invalidParams",
          "10907:  }",
          "10908:  return nil",
          "10909: }",
          "10912: func (s *InstanceMetadataOptions) SetHttpEndpoint(v string) *InstanceMetadataOptions {",
          "10913:  s.HttpEndpoint = &v",
          "10914:  return s",
          "10915: }",
          "10918: func (s *InstanceMetadataOptions) SetHttpPutResponseHopLimit(v int64) *InstanceMetadataOptions {",
          "10919:  s.HttpPutResponseHopLimit = &v",
          "10920:  return s",
          "10921: }",
          "10924: func (s *InstanceMetadataOptions) SetHttpTokens(v string) *InstanceMetadataOptions {",
          "10925:  s.HttpTokens = &v",
          "10926:  return s",
          "10927: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "11189:  LaunchConfigurationName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11294:  MetadataOptions *InstanceMetadataOptions `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "11316:  return s",
          "11317: }",
          "11320: func (s *LaunchConfiguration) SetPlacementTenancy(v string) *LaunchConfiguration {",
          "11321:  s.PlacementTenancy = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11425: func (s *LaunchConfiguration) SetMetadataOptions(v *InstanceMetadataOptions) *LaunchConfiguration {",
          "11426:  s.MetadataOptions = v",
          "11427:  return s",
          "11428: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "14725:  return s.String()",
          "14726: }",
          "14728: const (",
          "14730:  InstanceRefreshStatusPending = \"Pending\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14849: const (",
          "14851:  InstanceMetadataEndpointStateDisabled = \"disabled\"",
          "14854:  InstanceMetadataEndpointStateEnabled = \"enabled\"",
          "14855: )",
          "14857: const (",
          "14859:  InstanceMetadataHttpTokensStateOptional = \"optional\"",
          "14862:  InstanceMetadataHttpTokensStateRequired = \"required\"",
          "14863: )",
          "",
          "---------------"
        ],
        "service/ec2/api.go||service/ec2/api.go": [
          "File: service/ec2/api.go -> service/ec2/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "45837:  PublicIp *string `locationName:\"IpAddress\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45840:  TagSpecifications []*TagSpecification `locationName:\"TagSpecification\" locationNameList:\"item\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45898:  return s",
          "45899: }",
          "45902: func (s *CreateCustomerGatewayInput) SetType(v string) *CreateCustomerGatewayInput {",
          "45903:  s.Type = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45905: func (s *CreateCustomerGatewayInput) SetTagSpecifications(v []*TagSpecification) *CreateCustomerGatewayInput {",
          "45906:  s.TagSpecifications = v",
          "45907:  return s",
          "45908: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "51859:  Options *VpnConnectionOptionsSpecification `locationName:\"options\" type:\"structure\"`",
          "51863:  TransitGatewayId *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51871:  TagSpecifications []*TagSpecification `locationName:\"TagSpecification\" locationNameList:\"item\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "51916:  return s",
          "51917: }",
          "51920: func (s *CreateVpnConnectionInput) SetTransitGatewayId(v string) *CreateVpnConnectionInput {",
          "51921:  s.TransitGatewayId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51932: func (s *CreateVpnConnectionInput) SetTagSpecifications(v []*TagSpecification) *CreateVpnConnectionInput {",
          "51933:  s.TagSpecifications = v",
          "51934:  return s",
          "51935: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "52046:  DryRun *bool `locationName:\"dryRun\" type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52067:  TagSpecifications []*TagSpecification `locationName:\"TagSpecification\" locationNameList:\"item\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "52092:  return s",
          "52093: }",
          "52096: func (s *CreateVpnGatewayInput) SetType(v string) *CreateVpnGatewayInput {",
          "52097:  s.Type = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52117: func (s *CreateVpnGatewayInput) SetTagSpecifications(v []*TagSpecification) *CreateVpnGatewayInput {",
          "52118:  s.TagSpecifications = v",
          "52119:  return s",
          "52120: }",
          "",
          "---------------"
        ],
        "service/imagebuilder/api.go||service/imagebuilder/api.go": [
          "File: service/imagebuilder/api.go -> service/imagebuilder/api.go"
        ],
        "service/ivs/api.go||service/ivs/api.go": [
          "File: service/ivs/api.go -> service/ivs/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3116:  return s",
          "3117: }",
          "3119: type PutMetadataInput struct {",
          "3120:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3148: type PendingVerification struct {",
          "3149:  _            struct{}                  `type:\"structure\"`",
          "3150:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "3153:  ExceptionMessage *string `locationName:\"exceptionMessage\" type:\"string\"`",
          "3155:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "3156: }",
          "3159: func (s PendingVerification) String() string {",
          "3160:  return awsutil.Prettify(s)",
          "3161: }",
          "3164: func (s PendingVerification) GoString() string {",
          "3165:  return s.String()",
          "3166: }",
          "3168: func newErrorPendingVerification(v protocol.ResponseMetadata) error {",
          "3169:  return &PendingVerification{",
          "3170:   RespMetadata: v,",
          "3171:  }",
          "3172: }",
          "3175: func (s *PendingVerification) Code() string {",
          "3176:  return \"PendingVerification\"",
          "3177: }",
          "3180: func (s *PendingVerification) Message() string {",
          "3181:  if s.Message_ != nil {",
          "3182:   return *s.Message_",
          "3183:  }",
          "3184:  return \"\"",
          "3185: }",
          "3188: func (s *PendingVerification) OrigErr() error {",
          "3189:  return nil",
          "3190: }",
          "3192: func (s *PendingVerification) Error() string {",
          "3193:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "3194: }",
          "3197: func (s *PendingVerification) StatusCode() int {",
          "3198:  return s.RespMetadata.StatusCode",
          "3199: }",
          "3202: func (s *PendingVerification) RequestID() string {",
          "3203:  return s.RespMetadata.RequestID",
          "3204: }",
          "",
          "---------------"
        ],
        "service/ivs/doc.go||service/ivs/doc.go": [
          "File: service/ivs/doc.go -> service/ivs/doc.go"
        ],
        "service/ivs/errors.go||service/ivs/errors.go": [
          "File: service/ivs/errors.go -> service/ivs/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:  ErrCodeInternalServerException = \"InternalServerException\"",
          "29:  ErrCodeResourceNotFoundException = \"ResourceNotFoundException\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:  ErrCodePendingVerification = \"PendingVerification\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50:  \"ChannelNotBroadcasting\":        newErrorChannelNotBroadcasting,",
          "51:  \"ConflictException\":             newErrorConflictException,",
          "52:  \"InternalServerException\":       newErrorInternalServerException,",
          "53:  \"ResourceNotFoundException\":     newErrorResourceNotFoundException,",
          "54:  \"ServiceQuotaExceededException\": newErrorServiceQuotaExceededException,",
          "55:  \"StreamUnavailable\":             newErrorStreamUnavailable,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57:  \"PendingVerification\":           newErrorPendingVerification,",
          "",
          "---------------"
        ],
        "service/medialive/api.go||service/medialive/api.go": [
          "File: service/medialive/api.go -> service/medialive/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "6863:  DvbSubDestinationSettings *DvbSubDestinationSettings `locationName:\"dvbSubDestinationSettings\" type:\"structure\"`",
          "6866:  EmbeddedDestinationSettings *EmbeddedDestinationSettings `locationName:\"embeddedDestinationSettings\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6866:  EbuTtDDestinationSettings *EbuTtDDestinationSettings `locationName:\"ebuTtDDestinationSettings\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6938:  return s",
          "6939: }",
          "6942: func (s *CaptionDestinationSettings) SetEmbeddedDestinationSettings(v *EmbeddedDestinationSettings) *CaptionDestinationSettings {",
          "6943:  s.EmbeddedDestinationSettings = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6945: func (s *CaptionDestinationSettings) SetEbuTtDDestinationSettings(v *EbuTtDDestinationSettings) *CaptionDestinationSettings {",
          "6946:  s.EbuTtDDestinationSettings = v",
          "6947:  return s",
          "6948: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "11136:  return s",
          "11137: }",
          "11140: type EmbeddedDestinationSettings struct {",
          "11141:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11149: type EbuTtDDestinationSettings struct {",
          "11150:  _ struct{} `type:\"structure\"`",
          "11155:  FillLineGap *string `locationName:\"fillLineGap\" type:\"string\" enum:\"EbuTtDFillLineGapControl\"`",
          "11168:  FontFamily *string `locationName:\"fontFamily\" type:\"string\"`",
          "11177:  StyleControl *string `locationName:\"styleControl\" type:\"string\" enum:\"EbuTtDDestinationStyleControl\"`",
          "11178: }",
          "11181: func (s EbuTtDDestinationSettings) String() string {",
          "11182:  return awsutil.Prettify(s)",
          "11183: }",
          "11186: func (s EbuTtDDestinationSettings) GoString() string {",
          "11187:  return s.String()",
          "11188: }",
          "11191: func (s *EbuTtDDestinationSettings) SetFillLineGap(v string) *EbuTtDDestinationSettings {",
          "11192:  s.FillLineGap = &v",
          "11193:  return s",
          "11194: }",
          "11197: func (s *EbuTtDDestinationSettings) SetFontFamily(v string) *EbuTtDDestinationSettings {",
          "11198:  s.FontFamily = &v",
          "11199:  return s",
          "11200: }",
          "11203: func (s *EbuTtDDestinationSettings) SetStyleControl(v string) *EbuTtDDestinationSettings {",
          "11204:  s.StyleControl = &v",
          "11205:  return s",
          "11206: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "12614:  return s",
          "12615: }",
          "12618: type H265Settings struct {",
          "12619:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12687: type H265FilterSettings struct {",
          "12688:  _ struct{} `type:\"structure\"`",
          "12691:  TemporalFilterSettings *TemporalFilterSettings `locationName:\"temporalFilterSettings\" type:\"structure\"`",
          "12692: }",
          "12695: func (s H265FilterSettings) String() string {",
          "12696:  return awsutil.Prettify(s)",
          "12697: }",
          "12700: func (s H265FilterSettings) GoString() string {",
          "12701:  return s.String()",
          "12702: }",
          "12705: func (s *H265FilterSettings) SetTemporalFilterSettings(v *TemporalFilterSettings) *H265FilterSettings {",
          "12706:  s.TemporalFilterSettings = v",
          "12707:  return s",
          "12708: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "12648:  ColorSpaceSettings *H265ColorSpaceSettings `locationName:\"colorSpaceSettings\" type:\"structure\"`",
          "12652:  FixedAfd *string `locationName:\"fixedAfd\" type:\"string\" enum:\"FixedAfd\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12744:  FilterSettings *H265FilterSettings `locationName:\"filterSettings\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "12844:  return s",
          "12845: }",
          "12848: func (s *H265Settings) SetFixedAfd(v string) *H265Settings {",
          "12849:  s.FixedAfd = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12944: func (s *H265Settings) SetFilterSettings(v *H265FilterSettings) *H265Settings {",
          "12945:  s.FilterSettings = v",
          "12946:  return s",
          "12947: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "24579:  Eac3SurroundModeNotIndicated = \"NOT_INDICATED\"",
          "24580: )",
          "24583: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24685: const (",
          "24687:  EbuTtDDestinationStyleControlExclude = \"EXCLUDE\"",
          "24690:  EbuTtDDestinationStyleControlInclude = \"INCLUDE\"",
          "24691: )",
          "24694: const (",
          "24696:  EbuTtDFillLineGapControlDisabled = \"DISABLED\"",
          "24699:  EbuTtDFillLineGapControlEnabled = \"ENABLED\"",
          "24700: )",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "25129: const (",
          "25131:  H265ScanTypeProgressive = \"PROGRESSIVE\"",
          "25132: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25251:  H265ScanTypeInterlaced = \"INTERLACED\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "25305:  HlsOutputSelectionSegmentsOnly = \"SEGMENTS_ONLY\"",
          "25306: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25431:  HlsOutputSelectionVariantManifestsAndSegments = \"VARIANT_MANIFESTS_AND_SEGMENTS\"",
          "",
          "---------------"
        ],
        "service/rds/api.go||service/rds/api.go": [
          "File: service/rds/api.go -> service/rds/api.go"
        ],
        "service/securityhub/api.go||service/securityhub/api.go": [
          "File: service/securityhub/api.go -> service/securityhub/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4493:  return out, req.Send()",
          "4494: }",
          "4496: const opUpdateStandardsControl = \"UpdateStandardsControl\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4496: const opUpdateSecurityHubConfiguration = \"UpdateSecurityHubConfiguration\"",
          "4522: func (c *SecurityHub) UpdateSecurityHubConfigurationRequest(input *UpdateSecurityHubConfigurationInput) (req *request.Request, output *UpdateSecurityHubConfigurationOutput) {",
          "4523:  op := &request.Operation{",
          "4524:   Name:       opUpdateSecurityHubConfiguration,",
          "4525:   HTTPMethod: \"PATCH\",",
          "4526:   HTTPPath:   \"/accounts\",",
          "4527:  }",
          "4529:  if input == nil {",
          "4530:   input = &UpdateSecurityHubConfigurationInput{}",
          "4531:  }",
          "4533:  output = &UpdateSecurityHubConfigurationOutput{}",
          "4534:  req = c.newRequest(op, input, output)",
          "4535:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "4536:  return",
          "4537: }",
          "4569: func (c *SecurityHub) UpdateSecurityHubConfiguration(input *UpdateSecurityHubConfigurationInput) (*UpdateSecurityHubConfigurationOutput, error) {",
          "4570:  req, out := c.UpdateSecurityHubConfigurationRequest(input)",
          "4571:  return out, req.Send()",
          "4572: }",
          "4583: func (c *SecurityHub) UpdateSecurityHubConfigurationWithContext(ctx aws.Context, input *UpdateSecurityHubConfigurationInput, opts ...request.Option) (*UpdateSecurityHubConfigurationOutput, error) {",
          "4584:  req, out := c.UpdateSecurityHubConfigurationRequest(input)",
          "4585:  req.SetContext(ctx)",
          "4586:  req.ApplyOptions(opts...)",
          "4587:  return out, req.Send()",
          "4588: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10880: type DescribeHubOutput struct {",
          "10881:  _ struct{} `type:\"structure\"`",
          "10884:  HubArn *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10985:  AutoEnableControls *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "10897:  return s.String()",
          "10898: }",
          "10901: func (s *DescribeHubOutput) SetHubArn(v string) *DescribeHubOutput {",
          "10902:  s.HubArn = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11005: func (s *DescribeHubOutput) SetAutoEnableControls(v bool) *DescribeHubOutput {",
          "11006:  s.AutoEnableControls = &v",
          "11007:  return s",
          "11008: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "14374:  Label *string `type:\"string\" enum:\"SeverityLabel\"`",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "14391:  Normalized *int64 `type:\"integer\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14509:  Label *string `type:\"string\" enum:\"SeverityLabel\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "15401:  return s.String()",
          "15402: }",
          "15404: type UpdateStandardsControlInput struct {",
          "15405:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15539: type UpdateSecurityHubConfigurationInput struct {",
          "15540:  _ struct{} `type:\"structure\"`",
          "15547:  AutoEnableControls *bool `type:\"boolean\"`",
          "15548: }",
          "15551: func (s UpdateSecurityHubConfigurationInput) String() string {",
          "15552:  return awsutil.Prettify(s)",
          "15553: }",
          "15556: func (s UpdateSecurityHubConfigurationInput) GoString() string {",
          "15557:  return s.String()",
          "15558: }",
          "15561: func (s *UpdateSecurityHubConfigurationInput) SetAutoEnableControls(v bool) *UpdateSecurityHubConfigurationInput {",
          "15562:  s.AutoEnableControls = &v",
          "15563:  return s",
          "15564: }",
          "15566: type UpdateSecurityHubConfigurationOutput struct {",
          "15567:  _ struct{} `type:\"structure\"`",
          "15568: }",
          "15571: func (s UpdateSecurityHubConfigurationOutput) String() string {",
          "15572:  return awsutil.Prettify(s)",
          "15573: }",
          "15576: func (s UpdateSecurityHubConfigurationOutput) GoString() string {",
          "15577:  return s.String()",
          "15578: }",
          "",
          "---------------"
        ],
        "service/securityhub/securityhubiface/interface.go||service/securityhub/securityhubiface/interface.go": [
          "File: service/securityhub/securityhubiface/interface.go -> service/securityhub/securityhubiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "254:  UpdateInsightWithContext(aws.Context, *securityhub.UpdateInsightInput, ...request.Option) (*securityhub.UpdateInsightOutput, error)",
          "255:  UpdateInsightRequest(*securityhub.UpdateInsightInput) (*request.Request, *securityhub.UpdateInsightOutput)",
          "257:  UpdateStandardsControl(*securityhub.UpdateStandardsControlInput) (*securityhub.UpdateStandardsControlOutput, error)",
          "258:  UpdateStandardsControlWithContext(aws.Context, *securityhub.UpdateStandardsControlInput, ...request.Option) (*securityhub.UpdateStandardsControlOutput, error)",
          "259:  UpdateStandardsControlRequest(*securityhub.UpdateStandardsControlInput) (*request.Request, *securityhub.UpdateStandardsControlOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "257:  UpdateSecurityHubConfiguration(*securityhub.UpdateSecurityHubConfigurationInput) (*securityhub.UpdateSecurityHubConfigurationOutput, error)",
          "258:  UpdateSecurityHubConfigurationWithContext(aws.Context, *securityhub.UpdateSecurityHubConfigurationInput, ...request.Option) (*securityhub.UpdateSecurityHubConfigurationOutput, error)",
          "259:  UpdateSecurityHubConfigurationRequest(*securityhub.UpdateSecurityHubConfigurationInput) (*request.Request, *securityhub.UpdateSecurityHubConfigurationOutput)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ae5d9228033afa5fb9ebb8ef2126533e25500d55",
      "candidate_info": {
        "commit_hash": "ae5d9228033afa5fb9ebb8ef2126533e25500d55",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/ae5d9228033afa5fb9ebb8ef2126533e25500d55",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/connect/2017-08-08/api-2.json",
          "models/apis/connect/2017-08-08/docs-2.json",
          "models/apis/connect/2017-08-08/paginators-1.json",
          "models/apis/dlm/2018-01-12/api-2.json",
          "models/apis/dlm/2018-01-12/docs-2.json",
          "models/apis/greengrass/2017-06-07/api-2.json",
          "models/apis/greengrass/2017-06-07/docs-2.json",
          "models/apis/servicecatalog/2015-12-10/api-2.json",
          "models/apis/servicecatalog/2015-12-10/docs-2.json",
          "models/apis/ssm/2014-11-06/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/connect/api.go",
          "service/connect/connectiface/interface.go",
          "service/connect/doc.go",
          "service/connect/errors.go",
          "service/dlm/api.go",
          "service/greengrass/api.go",
          "service/greengrass/greengrassiface/interface.go",
          "service/servicecatalog/api.go",
          "service/ssm/api.go"
        ],
        "message": "Release v1.34.25 (2020-09-16) (#3539)\n\nRelease v1.34.25 (2020-09-16)\n===\n\n### Service Client Updates\n* `service/connect`: Updates service API, documentation, and paginators\n* `service/dlm`: Updates service API and documentation\n* `service/greengrass`: Updates service API and documentation\n  * This release includes the ability to set run-time configuration for a Greengrass core. The Telemetry feature, also included in this release, can be configured via run-time configuration per core.\n* `service/servicecatalog`: Updates service API and documentation\n  * Enhance DescribeProvisionedProduct API to allow useProvisionedProduct Name as Input, so customer can provide ProvisionedProduct Name instead of ProvisionedProduct Id to describe a ProvisionedProduct.\n* `service/ssm`: Updates service documentation\n  * The ComplianceItemEntry Status description was updated to address Windows patches that aren't applicable.",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/connect/api.go||service/connect/api.go",
          "service/connect/connectiface/interface.go||service/connect/connectiface/interface.go",
          "service/connect/doc.go||service/connect/doc.go",
          "service/connect/errors.go||service/connect/errors.go",
          "service/dlm/api.go||service/dlm/api.go",
          "service/greengrass/api.go||service/greengrass/api.go",
          "service/greengrass/greengrassiface/interface.go||service/greengrass/greengrassiface/interface.go",
          "service/servicecatalog/api.go||service/servicecatalog/api.go",
          "service/ssm/api.go||service/ssm/api.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3431:     \"ca-central-1\":   endpoint{},",
          "3432:     \"eu-central-1\":   endpoint{},",
          "3433:     \"eu-north-1\":     endpoint{},",
          "3434:     \"eu-west-1\":      endpoint{},",
          "3435:     \"eu-west-2\":      endpoint{},",
          "3436:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3434:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4192:   \"oidc\": service{",
          "4194:    Endpoints: endpoints{",
          "4195:     \"ap-southeast-1\": endpoint{",
          "4196:      Hostname: \"oidc.ap-southeast-1.amazonaws.com\",",
          "4197:      CredentialScope: credentialScope{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4196:     \"ap-northeast-1\": endpoint{",
          "4197:      Hostname: \"oidc.ap-northeast-1.amazonaws.com\",",
          "4198:      CredentialScope: credentialScope{",
          "4199:       Region: \"ap-northeast-1\",",
          "4200:      },",
          "4201:     },",
          "4202:     \"ap-northeast-2\": endpoint{",
          "4203:      Hostname: \"oidc.ap-northeast-2.amazonaws.com\",",
          "4204:      CredentialScope: credentialScope{",
          "4205:       Region: \"ap-northeast-2\",",
          "4206:      },",
          "4207:     },",
          "4208:     \"ap-south-1\": endpoint{",
          "4209:      Hostname: \"oidc.ap-south-1.amazonaws.com\",",
          "4210:      CredentialScope: credentialScope{",
          "4211:       Region: \"ap-south-1\",",
          "4212:      },",
          "4213:     },",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7867:     },",
          "7868:    },",
          "7869:   },",
          "7870:   \"ec2\": service{",
          "7872:    Endpoints: endpoints{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7889:   \"ebs\": service{",
          "7891:    Endpoints: endpoints{",
          "7892:     \"us-gov-east-1\": endpoint{},",
          "7893:     \"us-gov-west-1\": endpoint{},",
          "7894:    },",
          "7895:   },",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.34.24\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.34.25\"",
          "",
          "---------------"
        ],
        "service/connect/api.go||service/connect/api.go": [
          "File: service/connect/api.go -> service/connect/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:  \"github.com/aws/aws-sdk-go/private/protocol/restjson\"",
          "14: )",
          "43:  op := &request.Operation{",
          "47:  }",
          "49:  if input == nil {",
          "51:  }",
          "54:  req = c.newRequest(op, input, output)",
          "55:  return",
          "56: }",
          "",
          "[Removed Lines]",
          "16: const opCreateUser = \"CreateUser\"",
          "42: func (c *Connect) CreateUserRequest(input *CreateUserInput) (req *request.Request, output *CreateUserOutput) {",
          "44:   Name:       opCreateUser,",
          "45:   HTTPMethod: \"PUT\",",
          "46:   HTTPPath:   \"/users/{InstanceId}\",",
          "50:   input = &CreateUserInput{}",
          "53:  output = &CreateUserOutput{}",
          "",
          "[Added Lines]",
          "16: const opAssociateRoutingProfileQueues = \"AssociateRoutingProfileQueues\"",
          "42: func (c *Connect) AssociateRoutingProfileQueuesRequest(input *AssociateRoutingProfileQueuesInput) (req *request.Request, output *AssociateRoutingProfileQueuesOutput) {",
          "44:   Name:       opAssociateRoutingProfileQueues,",
          "45:   HTTPMethod: \"POST\",",
          "46:   HTTPPath:   \"/routing-profiles/{InstanceId}/{RoutingProfileId}/associate-queues\",",
          "50:   input = &AssociateRoutingProfileQueuesInput{}",
          "53:  output = &AssociateRoutingProfileQueuesOutput{}",
          "55:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94:  return out, req.Send()",
          "95: }",
          "108:  req.SetContext(ctx)",
          "109:  req.ApplyOptions(opts...)",
          "110:  return out, req.Send()",
          "111: }",
          "140:  op := &request.Operation{",
          "144:  }",
          "146:  if input == nil {",
          "148:  }",
          "151:  req = c.newRequest(op, input, output)",
          "153:  return",
          "154: }",
          "",
          "[Removed Lines]",
          "92: func (c *Connect) CreateUser(input *CreateUserInput) (*CreateUserOutput, error) {",
          "93:  req, out := c.CreateUserRequest(input)",
          "106: func (c *Connect) CreateUserWithContext(ctx aws.Context, input *CreateUserInput, opts ...request.Option) (*CreateUserOutput, error) {",
          "107:  req, out := c.CreateUserRequest(input)",
          "113: const opDeleteUser = \"DeleteUser\"",
          "139: func (c *Connect) DeleteUserRequest(input *DeleteUserInput) (req *request.Request, output *DeleteUserOutput) {",
          "141:   Name:       opDeleteUser,",
          "142:   HTTPMethod: \"DELETE\",",
          "143:   HTTPPath:   \"/users/{InstanceId}/{UserId}\",",
          "147:   input = &DeleteUserInput{}",
          "150:  output = &DeleteUserOutput{}",
          "152:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "",
          "[Added Lines]",
          "87: func (c *Connect) AssociateRoutingProfileQueues(input *AssociateRoutingProfileQueuesInput) (*AssociateRoutingProfileQueuesOutput, error) {",
          "88:  req, out := c.AssociateRoutingProfileQueuesRequest(input)",
          "101: func (c *Connect) AssociateRoutingProfileQueuesWithContext(ctx aws.Context, input *AssociateRoutingProfileQueuesInput, opts ...request.Option) (*AssociateRoutingProfileQueuesOutput, error) {",
          "102:  req, out := c.AssociateRoutingProfileQueuesRequest(input)",
          "108: const opCreateContactFlow = \"CreateContactFlow\"",
          "134: func (c *Connect) CreateContactFlowRequest(input *CreateContactFlowInput) (req *request.Request, output *CreateContactFlowOutput) {",
          "136:   Name:       opCreateContactFlow,",
          "137:   HTTPMethod: \"PUT\",",
          "138:   HTTPPath:   \"/contact-flows/{InstanceId}\",",
          "142:   input = &CreateContactFlowInput{}",
          "145:  output = &CreateContactFlowOutput{}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "186:  return out, req.Send()",
          "187: }",
          "200:  req.SetContext(ctx)",
          "201:  req.ApplyOptions(opts...)",
          "202:  return out, req.Send()",
          "203: }",
          "232:  op := &request.Operation{",
          "236:  }",
          "238:  if input == nil {",
          "240:  }",
          "243:  req = c.newRequest(op, input, output)",
          "244:  return",
          "245: }",
          "",
          "[Removed Lines]",
          "184: func (c *Connect) DeleteUser(input *DeleteUserInput) (*DeleteUserOutput, error) {",
          "185:  req, out := c.DeleteUserRequest(input)",
          "198: func (c *Connect) DeleteUserWithContext(ctx aws.Context, input *DeleteUserInput, opts ...request.Option) (*DeleteUserOutput, error) {",
          "199:  req, out := c.DeleteUserRequest(input)",
          "205: const opDescribeUser = \"DescribeUser\"",
          "231: func (c *Connect) DescribeUserRequest(input *DescribeUserInput) (req *request.Request, output *DescribeUserOutput) {",
          "233:   Name:       opDescribeUser,",
          "234:   HTTPMethod: \"GET\",",
          "235:   HTTPPath:   \"/users/{InstanceId}/{UserId}\",",
          "239:   input = &DescribeUserInput{}",
          "242:  output = &DescribeUserOutput{}",
          "",
          "[Added Lines]",
          "187: func (c *Connect) CreateContactFlow(input *CreateContactFlowInput) (*CreateContactFlowOutput, error) {",
          "188:  req, out := c.CreateContactFlowRequest(input)",
          "201: func (c *Connect) CreateContactFlowWithContext(ctx aws.Context, input *CreateContactFlowInput, opts ...request.Option) (*CreateContactFlowOutput, error) {",
          "202:  req, out := c.CreateContactFlowRequest(input)",
          "208: const opCreateRoutingProfile = \"CreateRoutingProfile\"",
          "234: func (c *Connect) CreateRoutingProfileRequest(input *CreateRoutingProfileInput) (req *request.Request, output *CreateRoutingProfileOutput) {",
          "236:   Name:       opCreateRoutingProfile,",
          "237:   HTTPMethod: \"PUT\",",
          "238:   HTTPPath:   \"/routing-profiles/{InstanceId}\",",
          "242:   input = &CreateRoutingProfileInput{}",
          "245:  output = &CreateRoutingProfileOutput{}",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "279:  return out, req.Send()",
          "280: }",
          "293:  req.SetContext(ctx)",
          "294:  req.ApplyOptions(opts...)",
          "295:  return out, req.Send()",
          "296: }",
          "325:  op := &request.Operation{",
          "329:  }",
          "331:  if input == nil {",
          "333:  }",
          "336:  req = c.newRequest(op, input, output)",
          "337:  return",
          "338: }",
          "",
          "[Removed Lines]",
          "277: func (c *Connect) DescribeUser(input *DescribeUserInput) (*DescribeUserOutput, error) {",
          "278:  req, out := c.DescribeUserRequest(input)",
          "291: func (c *Connect) DescribeUserWithContext(ctx aws.Context, input *DescribeUserInput, opts ...request.Option) (*DescribeUserOutput, error) {",
          "292:  req, out := c.DescribeUserRequest(input)",
          "298: const opDescribeUserHierarchyGroup = \"DescribeUserHierarchyGroup\"",
          "324: func (c *Connect) DescribeUserHierarchyGroupRequest(input *DescribeUserHierarchyGroupInput) (req *request.Request, output *DescribeUserHierarchyGroupOutput) {",
          "326:   Name:       opDescribeUserHierarchyGroup,",
          "327:   HTTPMethod: \"GET\",",
          "328:   HTTPPath:   \"/user-hierarchy-groups/{InstanceId}/{HierarchyGroupId}\",",
          "332:   input = &DescribeUserHierarchyGroupInput{}",
          "335:  output = &DescribeUserHierarchyGroupOutput{}",
          "",
          "[Added Lines]",
          "284: func (c *Connect) CreateRoutingProfile(input *CreateRoutingProfileInput) (*CreateRoutingProfileOutput, error) {",
          "285:  req, out := c.CreateRoutingProfileRequest(input)",
          "298: func (c *Connect) CreateRoutingProfileWithContext(ctx aws.Context, input *CreateRoutingProfileInput, opts ...request.Option) (*CreateRoutingProfileOutput, error) {",
          "299:  req, out := c.CreateRoutingProfileRequest(input)",
          "305: const opCreateUser = \"CreateUser\"",
          "331: func (c *Connect) CreateUserRequest(input *CreateUserInput) (req *request.Request, output *CreateUserOutput) {",
          "333:   Name:       opCreateUser,",
          "334:   HTTPMethod: \"PUT\",",
          "335:   HTTPPath:   \"/users/{InstanceId}\",",
          "339:   input = &CreateUserInput{}",
          "342:  output = &CreateUserOutput{}",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "370:  return out, req.Send()",
          "371: }",
          "384:  req.SetContext(ctx)",
          "385:  req.ApplyOptions(opts...)",
          "386:  return out, req.Send()",
          "387: }",
          "416:  op := &request.Operation{",
          "420:  }",
          "422:  if input == nil {",
          "424:  }",
          "427:  req = c.newRequest(op, input, output)",
          "428:  return",
          "429: }",
          "",
          "[Removed Lines]",
          "368: func (c *Connect) DescribeUserHierarchyGroup(input *DescribeUserHierarchyGroupInput) (*DescribeUserHierarchyGroupOutput, error) {",
          "369:  req, out := c.DescribeUserHierarchyGroupRequest(input)",
          "382: func (c *Connect) DescribeUserHierarchyGroupWithContext(ctx aws.Context, input *DescribeUserHierarchyGroupInput, opts ...request.Option) (*DescribeUserHierarchyGroupOutput, error) {",
          "383:  req, out := c.DescribeUserHierarchyGroupRequest(input)",
          "389: const opDescribeUserHierarchyStructure = \"DescribeUserHierarchyStructure\"",
          "415: func (c *Connect) DescribeUserHierarchyStructureRequest(input *DescribeUserHierarchyStructureInput) (req *request.Request, output *DescribeUserHierarchyStructureOutput) {",
          "417:   Name:       opDescribeUserHierarchyStructure,",
          "418:   HTTPMethod: \"GET\",",
          "419:   HTTPPath:   \"/user-hierarchy-structure/{InstanceId}\",",
          "423:   input = &DescribeUserHierarchyStructureInput{}",
          "426:  output = &DescribeUserHierarchyStructureOutput{}",
          "",
          "[Added Lines]",
          "385: func (c *Connect) CreateUser(input *CreateUserInput) (*CreateUserOutput, error) {",
          "386:  req, out := c.CreateUserRequest(input)",
          "399: func (c *Connect) CreateUserWithContext(ctx aws.Context, input *CreateUserInput, opts ...request.Option) (*CreateUserOutput, error) {",
          "400:  req, out := c.CreateUserRequest(input)",
          "406: const opDeleteUser = \"DeleteUser\"",
          "432: func (c *Connect) DeleteUserRequest(input *DeleteUserInput) (req *request.Request, output *DeleteUserOutput) {",
          "434:   Name:       opDeleteUser,",
          "435:   HTTPMethod: \"DELETE\",",
          "436:   HTTPPath:   \"/users/{InstanceId}/{UserId}\",",
          "440:   input = &DeleteUserInput{}",
          "443:  output = &DeleteUserOutput{}",
          "445:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "461:  return out, req.Send()",
          "462: }",
          "475:  req.SetContext(ctx)",
          "476:  req.ApplyOptions(opts...)",
          "477:  return out, req.Send()",
          "478: }",
          "507:  op := &request.Operation{",
          "509:   HTTPMethod: \"GET\",",
          "511:  }",
          "513:  if input == nil {",
          "515:  }",
          "518:  req = c.newRequest(op, input, output)",
          "519:  return",
          "520: }",
          "546:  return out, req.Send()",
          "547: }",
          "560:  req.SetContext(ctx)",
          "561:  req.ApplyOptions(opts...)",
          "562:  return out, req.Send()",
          "563: }",
          "592:  op := &request.Operation{",
          "602:  }",
          "604:  if input == nil {",
          "606:  }",
          "609:  req = c.newRequest(op, input, output)",
          "610:  return",
          "611: }",
          "",
          "[Removed Lines]",
          "459: func (c *Connect) DescribeUserHierarchyStructure(input *DescribeUserHierarchyStructureInput) (*DescribeUserHierarchyStructureOutput, error) {",
          "460:  req, out := c.DescribeUserHierarchyStructureRequest(input)",
          "473: func (c *Connect) DescribeUserHierarchyStructureWithContext(ctx aws.Context, input *DescribeUserHierarchyStructureInput, opts ...request.Option) (*DescribeUserHierarchyStructureOutput, error) {",
          "474:  req, out := c.DescribeUserHierarchyStructureRequest(input)",
          "480: const opGetContactAttributes = \"GetContactAttributes\"",
          "506: func (c *Connect) GetContactAttributesRequest(input *GetContactAttributesInput) (req *request.Request, output *GetContactAttributesOutput) {",
          "508:   Name:       opGetContactAttributes,",
          "510:   HTTPPath:   \"/contact/attributes/{InstanceId}/{InitialContactId}\",",
          "514:   input = &GetContactAttributesInput{}",
          "517:  output = &GetContactAttributesOutput{}",
          "544: func (c *Connect) GetContactAttributes(input *GetContactAttributesInput) (*GetContactAttributesOutput, error) {",
          "545:  req, out := c.GetContactAttributesRequest(input)",
          "558: func (c *Connect) GetContactAttributesWithContext(ctx aws.Context, input *GetContactAttributesInput, opts ...request.Option) (*GetContactAttributesOutput, error) {",
          "559:  req, out := c.GetContactAttributesRequest(input)",
          "565: const opGetCurrentMetricData = \"GetCurrentMetricData\"",
          "591: func (c *Connect) GetCurrentMetricDataRequest(input *GetCurrentMetricDataInput) (req *request.Request, output *GetCurrentMetricDataOutput) {",
          "593:   Name:       opGetCurrentMetricData,",
          "594:   HTTPMethod: \"POST\",",
          "595:   HTTPPath:   \"/metrics/current/{InstanceId}\",",
          "596:   Paginator: &request.Paginator{",
          "597:    InputTokens:     []string{\"NextToken\"},",
          "598:    OutputTokens:    []string{\"NextToken\"},",
          "599:    LimitToken:      \"MaxResults\",",
          "600:    TruncationToken: \"\",",
          "601:   },",
          "605:   input = &GetCurrentMetricDataInput{}",
          "608:  output = &GetCurrentMetricDataOutput{}",
          "",
          "[Added Lines]",
          "481: func (c *Connect) DeleteUser(input *DeleteUserInput) (*DeleteUserOutput, error) {",
          "482:  req, out := c.DeleteUserRequest(input)",
          "495: func (c *Connect) DeleteUserWithContext(ctx aws.Context, input *DeleteUserInput, opts ...request.Option) (*DeleteUserOutput, error) {",
          "496:  req, out := c.DeleteUserRequest(input)",
          "502: const opDescribeContactFlow = \"DescribeContactFlow\"",
          "528: func (c *Connect) DescribeContactFlowRequest(input *DescribeContactFlowInput) (req *request.Request, output *DescribeContactFlowOutput) {",
          "530:   Name:       opDescribeContactFlow,",
          "532:   HTTPPath:   \"/contact-flows/{InstanceId}/{ContactFlowId}\",",
          "536:   input = &DescribeContactFlowInput{}",
          "539:  output = &DescribeContactFlowOutput{}",
          "575: func (c *Connect) DescribeContactFlow(input *DescribeContactFlowInput) (*DescribeContactFlowOutput, error) {",
          "576:  req, out := c.DescribeContactFlowRequest(input)",
          "589: func (c *Connect) DescribeContactFlowWithContext(ctx aws.Context, input *DescribeContactFlowInput, opts ...request.Option) (*DescribeContactFlowOutput, error) {",
          "590:  req, out := c.DescribeContactFlowRequest(input)",
          "596: const opDescribeRoutingProfile = \"DescribeRoutingProfile\"",
          "622: func (c *Connect) DescribeRoutingProfileRequest(input *DescribeRoutingProfileInput) (req *request.Request, output *DescribeRoutingProfileOutput) {",
          "624:   Name:       opDescribeRoutingProfile,",
          "625:   HTTPMethod: \"GET\",",
          "626:   HTTPPath:   \"/routing-profiles/{InstanceId}/{RoutingProfileId}\",",
          "630:   input = &DescribeRoutingProfileInput{}",
          "633:  output = &DescribeRoutingProfileOutput{}",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "646:  return out, req.Send()",
          "647: }",
          "660:  req.SetContext(ctx)",
          "661:  req.ApplyOptions(opts...)",
          "662:  return out, req.Send()",
          "663: }",
          "744:  op := &request.Operation{",
          "746:   HTTPMethod: \"GET\",",
          "748:  }",
          "750:  if input == nil {",
          "752:  }",
          "755:  req = c.newRequest(op, input, output)",
          "756:  return",
          "757: }",
          "",
          "[Removed Lines]",
          "644: func (c *Connect) GetCurrentMetricData(input *GetCurrentMetricDataInput) (*GetCurrentMetricDataOutput, error) {",
          "645:  req, out := c.GetCurrentMetricDataRequest(input)",
          "658: func (c *Connect) GetCurrentMetricDataWithContext(ctx aws.Context, input *GetCurrentMetricDataInput, opts ...request.Option) (*GetCurrentMetricDataOutput, error) {",
          "659:  req, out := c.GetCurrentMetricDataRequest(input)",
          "682: func (c *Connect) GetCurrentMetricDataPages(input *GetCurrentMetricDataInput, fn func(*GetCurrentMetricDataOutput, bool) bool) error {",
          "683:  return c.GetCurrentMetricDataPagesWithContext(aws.BackgroundContext(), input, fn)",
          "684: }",
          "693: func (c *Connect) GetCurrentMetricDataPagesWithContext(ctx aws.Context, input *GetCurrentMetricDataInput, fn func(*GetCurrentMetricDataOutput, bool) bool, opts ...request.Option) error {",
          "694:  p := request.Pagination{",
          "695:   NewRequest: func() (*request.Request, error) {",
          "696:    var inCpy *GetCurrentMetricDataInput",
          "697:    if input != nil {",
          "698:     tmp := *input",
          "699:     inCpy = &tmp",
          "700:    }",
          "701:    req, _ := c.GetCurrentMetricDataRequest(inCpy)",
          "702:    req.SetContext(ctx)",
          "703:    req.ApplyOptions(opts...)",
          "704:    return req, nil",
          "705:   },",
          "706:  }",
          "708:  for p.Next() {",
          "709:   if !fn(p.Page().(*GetCurrentMetricDataOutput), !p.HasNextPage()) {",
          "710:    break",
          "711:   }",
          "712:  }",
          "714:  return p.Err()",
          "715: }",
          "717: const opGetFederationToken = \"GetFederationToken\"",
          "743: func (c *Connect) GetFederationTokenRequest(input *GetFederationTokenInput) (req *request.Request, output *GetFederationTokenOutput) {",
          "745:   Name:       opGetFederationToken,",
          "747:   HTTPPath:   \"/user/federate/{InstanceId}\",",
          "751:   input = &GetFederationTokenInput{}",
          "754:  output = &GetFederationTokenOutput{}",
          "",
          "[Added Lines]",
          "666: func (c *Connect) DescribeRoutingProfile(input *DescribeRoutingProfileInput) (*DescribeRoutingProfileOutput, error) {",
          "667:  req, out := c.DescribeRoutingProfileRequest(input)",
          "680: func (c *Connect) DescribeRoutingProfileWithContext(ctx aws.Context, input *DescribeRoutingProfileInput, opts ...request.Option) (*DescribeRoutingProfileOutput, error) {",
          "681:  req, out := c.DescribeRoutingProfileRequest(input)",
          "687: const opDescribeUser = \"DescribeUser\"",
          "713: func (c *Connect) DescribeUserRequest(input *DescribeUserInput) (req *request.Request, output *DescribeUserOutput) {",
          "715:   Name:       opDescribeUser,",
          "717:   HTTPPath:   \"/users/{InstanceId}/{UserId}\",",
          "721:   input = &DescribeUserInput{}",
          "724:  output = &DescribeUserOutput{}",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "792:  return out, req.Send()",
          "793: }",
          "806:  req.SetContext(ctx)",
          "807:  req.ApplyOptions(opts...)",
          "808:  return out, req.Send()",
          "809: }",
          "838:  op := &request.Operation{",
          "848:  }",
          "850:  if input == nil {",
          "852:  }",
          "855:  req = c.newRequest(op, input, output)",
          "856:  return",
          "857: }",
          "",
          "[Removed Lines]",
          "790: func (c *Connect) GetFederationToken(input *GetFederationTokenInput) (*GetFederationTokenOutput, error) {",
          "791:  req, out := c.GetFederationTokenRequest(input)",
          "804: func (c *Connect) GetFederationTokenWithContext(ctx aws.Context, input *GetFederationTokenInput, opts ...request.Option) (*GetFederationTokenOutput, error) {",
          "805:  req, out := c.GetFederationTokenRequest(input)",
          "811: const opGetMetricData = \"GetMetricData\"",
          "837: func (c *Connect) GetMetricDataRequest(input *GetMetricDataInput) (req *request.Request, output *GetMetricDataOutput) {",
          "839:   Name:       opGetMetricData,",
          "840:   HTTPMethod: \"POST\",",
          "841:   HTTPPath:   \"/metrics/historical/{InstanceId}\",",
          "842:   Paginator: &request.Paginator{",
          "843:    InputTokens:     []string{\"NextToken\"},",
          "844:    OutputTokens:    []string{\"NextToken\"},",
          "845:    LimitToken:      \"MaxResults\",",
          "846:    TruncationToken: \"\",",
          "847:   },",
          "851:   input = &GetMetricDataInput{}",
          "854:  output = &GetMetricDataOutput{}",
          "",
          "[Added Lines]",
          "759: func (c *Connect) DescribeUser(input *DescribeUserInput) (*DescribeUserOutput, error) {",
          "760:  req, out := c.DescribeUserRequest(input)",
          "773: func (c *Connect) DescribeUserWithContext(ctx aws.Context, input *DescribeUserInput, opts ...request.Option) (*DescribeUserOutput, error) {",
          "774:  req, out := c.DescribeUserRequest(input)",
          "780: const opDescribeUserHierarchyGroup = \"DescribeUserHierarchyGroup\"",
          "806: func (c *Connect) DescribeUserHierarchyGroupRequest(input *DescribeUserHierarchyGroupInput) (req *request.Request, output *DescribeUserHierarchyGroupOutput) {",
          "808:   Name:       opDescribeUserHierarchyGroup,",
          "809:   HTTPMethod: \"GET\",",
          "810:   HTTPPath:   \"/user-hierarchy-groups/{InstanceId}/{HierarchyGroupId}\",",
          "814:   input = &DescribeUserHierarchyGroupInput{}",
          "817:  output = &DescribeUserHierarchyGroupOutput{}",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "892:  return out, req.Send()",
          "893: }",
          "906:  req.SetContext(ctx)",
          "907:  req.ApplyOptions(opts...)",
          "908:  return out, req.Send()",
          "909: }",
          "990:  op := &request.Operation{",
          "992:   HTTPMethod: \"GET\",",
          "1000:  }",
          "1002:  if input == nil {",
          "1004:  }",
          "1007:  req = c.newRequest(op, input, output)",
          "1008:  return",
          "1009: }",
          "",
          "[Removed Lines]",
          "890: func (c *Connect) GetMetricData(input *GetMetricDataInput) (*GetMetricDataOutput, error) {",
          "891:  req, out := c.GetMetricDataRequest(input)",
          "904: func (c *Connect) GetMetricDataWithContext(ctx aws.Context, input *GetMetricDataInput, opts ...request.Option) (*GetMetricDataOutput, error) {",
          "905:  req, out := c.GetMetricDataRequest(input)",
          "928: func (c *Connect) GetMetricDataPages(input *GetMetricDataInput, fn func(*GetMetricDataOutput, bool) bool) error {",
          "929:  return c.GetMetricDataPagesWithContext(aws.BackgroundContext(), input, fn)",
          "930: }",
          "939: func (c *Connect) GetMetricDataPagesWithContext(ctx aws.Context, input *GetMetricDataInput, fn func(*GetMetricDataOutput, bool) bool, opts ...request.Option) error {",
          "940:  p := request.Pagination{",
          "941:   NewRequest: func() (*request.Request, error) {",
          "942:    var inCpy *GetMetricDataInput",
          "943:    if input != nil {",
          "944:     tmp := *input",
          "945:     inCpy = &tmp",
          "946:    }",
          "947:    req, _ := c.GetMetricDataRequest(inCpy)",
          "948:    req.SetContext(ctx)",
          "949:    req.ApplyOptions(opts...)",
          "950:    return req, nil",
          "951:   },",
          "952:  }",
          "954:  for p.Next() {",
          "955:   if !fn(p.Page().(*GetMetricDataOutput), !p.HasNextPage()) {",
          "956:    break",
          "957:   }",
          "958:  }",
          "960:  return p.Err()",
          "961: }",
          "963: const opListContactFlows = \"ListContactFlows\"",
          "989: func (c *Connect) ListContactFlowsRequest(input *ListContactFlowsInput) (req *request.Request, output *ListContactFlowsOutput) {",
          "991:   Name:       opListContactFlows,",
          "993:   HTTPPath:   \"/contact-flows-summary/{InstanceId}\",",
          "994:   Paginator: &request.Paginator{",
          "995:    InputTokens:     []string{\"NextToken\"},",
          "996:    OutputTokens:    []string{\"NextToken\"},",
          "997:    LimitToken:      \"MaxResults\",",
          "998:    TruncationToken: \"\",",
          "999:   },",
          "1003:   input = &ListContactFlowsInput{}",
          "1006:  output = &ListContactFlowsOutput{}",
          "",
          "[Added Lines]",
          "850: func (c *Connect) DescribeUserHierarchyGroup(input *DescribeUserHierarchyGroupInput) (*DescribeUserHierarchyGroupOutput, error) {",
          "851:  req, out := c.DescribeUserHierarchyGroupRequest(input)",
          "864: func (c *Connect) DescribeUserHierarchyGroupWithContext(ctx aws.Context, input *DescribeUserHierarchyGroupInput, opts ...request.Option) (*DescribeUserHierarchyGroupOutput, error) {",
          "865:  req, out := c.DescribeUserHierarchyGroupRequest(input)",
          "871: const opDescribeUserHierarchyStructure = \"DescribeUserHierarchyStructure\"",
          "897: func (c *Connect) DescribeUserHierarchyStructureRequest(input *DescribeUserHierarchyStructureInput) (req *request.Request, output *DescribeUserHierarchyStructureOutput) {",
          "899:   Name:       opDescribeUserHierarchyStructure,",
          "901:   HTTPPath:   \"/user-hierarchy-structure/{InstanceId}\",",
          "905:   input = &DescribeUserHierarchyStructureInput{}",
          "908:  output = &DescribeUserHierarchyStructureOutput{}",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1042:  return out, req.Send()",
          "1043: }",
          "1056:  req.SetContext(ctx)",
          "1057:  req.ApplyOptions(opts...)",
          "1058:  return out, req.Send()",
          "1059: }",
          "1140:  op := &request.Operation{",
          "1150:  }",
          "1152:  if input == nil {",
          "1154:  }",
          "1157:  req = c.newRequest(op, input, output)",
          "1158:  return",
          "1159: }",
          "",
          "[Removed Lines]",
          "1040: func (c *Connect) ListContactFlows(input *ListContactFlowsInput) (*ListContactFlowsOutput, error) {",
          "1041:  req, out := c.ListContactFlowsRequest(input)",
          "1054: func (c *Connect) ListContactFlowsWithContext(ctx aws.Context, input *ListContactFlowsInput, opts ...request.Option) (*ListContactFlowsOutput, error) {",
          "1055:  req, out := c.ListContactFlowsRequest(input)",
          "1078: func (c *Connect) ListContactFlowsPages(input *ListContactFlowsInput, fn func(*ListContactFlowsOutput, bool) bool) error {",
          "1079:  return c.ListContactFlowsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1080: }",
          "1089: func (c *Connect) ListContactFlowsPagesWithContext(ctx aws.Context, input *ListContactFlowsInput, fn func(*ListContactFlowsOutput, bool) bool, opts ...request.Option) error {",
          "1090:  p := request.Pagination{",
          "1091:   NewRequest: func() (*request.Request, error) {",
          "1092:    var inCpy *ListContactFlowsInput",
          "1093:    if input != nil {",
          "1094:     tmp := *input",
          "1095:     inCpy = &tmp",
          "1096:    }",
          "1097:    req, _ := c.ListContactFlowsRequest(inCpy)",
          "1098:    req.SetContext(ctx)",
          "1099:    req.ApplyOptions(opts...)",
          "1100:    return req, nil",
          "1101:   },",
          "1102:  }",
          "1104:  for p.Next() {",
          "1105:   if !fn(p.Page().(*ListContactFlowsOutput), !p.HasNextPage()) {",
          "1106:    break",
          "1107:   }",
          "1108:  }",
          "1110:  return p.Err()",
          "1111: }",
          "1113: const opListHoursOfOperations = \"ListHoursOfOperations\"",
          "1139: func (c *Connect) ListHoursOfOperationsRequest(input *ListHoursOfOperationsInput) (req *request.Request, output *ListHoursOfOperationsOutput) {",
          "1141:   Name:       opListHoursOfOperations,",
          "1142:   HTTPMethod: \"GET\",",
          "1143:   HTTPPath:   \"/hours-of-operations-summary/{InstanceId}\",",
          "1144:   Paginator: &request.Paginator{",
          "1145:    InputTokens:     []string{\"NextToken\"},",
          "1146:    OutputTokens:    []string{\"NextToken\"},",
          "1147:    LimitToken:      \"MaxResults\",",
          "1148:    TruncationToken: \"\",",
          "1149:   },",
          "1153:   input = &ListHoursOfOperationsInput{}",
          "1156:  output = &ListHoursOfOperationsOutput{}",
          "",
          "[Added Lines]",
          "941: func (c *Connect) DescribeUserHierarchyStructure(input *DescribeUserHierarchyStructureInput) (*DescribeUserHierarchyStructureOutput, error) {",
          "942:  req, out := c.DescribeUserHierarchyStructureRequest(input)",
          "955: func (c *Connect) DescribeUserHierarchyStructureWithContext(ctx aws.Context, input *DescribeUserHierarchyStructureInput, opts ...request.Option) (*DescribeUserHierarchyStructureOutput, error) {",
          "956:  req, out := c.DescribeUserHierarchyStructureRequest(input)",
          "962: const opDisassociateRoutingProfileQueues = \"DisassociateRoutingProfileQueues\"",
          "988: func (c *Connect) DisassociateRoutingProfileQueuesRequest(input *DisassociateRoutingProfileQueuesInput) (req *request.Request, output *DisassociateRoutingProfileQueuesOutput) {",
          "990:   Name:       opDisassociateRoutingProfileQueues,",
          "991:   HTTPMethod: \"POST\",",
          "992:   HTTPPath:   \"/routing-profiles/{InstanceId}/{RoutingProfileId}/disassociate-queues\",",
          "996:   input = &DisassociateRoutingProfileQueuesInput{}",
          "999:  output = &DisassociateRoutingProfileQueuesOutput{}",
          "1001:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1192:  return out, req.Send()",
          "1193: }",
          "1206:  req.SetContext(ctx)",
          "1207:  req.ApplyOptions(opts...)",
          "1208:  return out, req.Send()",
          "1209: }",
          "1290:  op := &request.Operation{",
          "1292:   HTTPMethod: \"GET\",",
          "1300:  }",
          "1302:  if input == nil {",
          "1304:  }",
          "1307:  req = c.newRequest(op, input, output)",
          "1308:  return",
          "1309: }",
          "1342:  return out, req.Send()",
          "1343: }",
          "1356:  req.SetContext(ctx)",
          "1357:  req.ApplyOptions(opts...)",
          "1358:  return out, req.Send()",
          "1359: }",
          "1440:  op := &request.Operation{",
          "1444:   Paginator: &request.Paginator{",
          "1445:    InputTokens:     []string{\"NextToken\"},",
          "1446:    OutputTokens:    []string{\"NextToken\"},",
          "",
          "[Removed Lines]",
          "1190: func (c *Connect) ListHoursOfOperations(input *ListHoursOfOperationsInput) (*ListHoursOfOperationsOutput, error) {",
          "1191:  req, out := c.ListHoursOfOperationsRequest(input)",
          "1204: func (c *Connect) ListHoursOfOperationsWithContext(ctx aws.Context, input *ListHoursOfOperationsInput, opts ...request.Option) (*ListHoursOfOperationsOutput, error) {",
          "1205:  req, out := c.ListHoursOfOperationsRequest(input)",
          "1228: func (c *Connect) ListHoursOfOperationsPages(input *ListHoursOfOperationsInput, fn func(*ListHoursOfOperationsOutput, bool) bool) error {",
          "1229:  return c.ListHoursOfOperationsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1230: }",
          "1239: func (c *Connect) ListHoursOfOperationsPagesWithContext(ctx aws.Context, input *ListHoursOfOperationsInput, fn func(*ListHoursOfOperationsOutput, bool) bool, opts ...request.Option) error {",
          "1240:  p := request.Pagination{",
          "1241:   NewRequest: func() (*request.Request, error) {",
          "1242:    var inCpy *ListHoursOfOperationsInput",
          "1243:    if input != nil {",
          "1244:     tmp := *input",
          "1245:     inCpy = &tmp",
          "1246:    }",
          "1247:    req, _ := c.ListHoursOfOperationsRequest(inCpy)",
          "1248:    req.SetContext(ctx)",
          "1249:    req.ApplyOptions(opts...)",
          "1250:    return req, nil",
          "1251:   },",
          "1252:  }",
          "1254:  for p.Next() {",
          "1255:   if !fn(p.Page().(*ListHoursOfOperationsOutput), !p.HasNextPage()) {",
          "1256:    break",
          "1257:   }",
          "1258:  }",
          "1260:  return p.Err()",
          "1261: }",
          "1263: const opListPhoneNumbers = \"ListPhoneNumbers\"",
          "1289: func (c *Connect) ListPhoneNumbersRequest(input *ListPhoneNumbersInput) (req *request.Request, output *ListPhoneNumbersOutput) {",
          "1291:   Name:       opListPhoneNumbers,",
          "1293:   HTTPPath:   \"/phone-numbers-summary/{InstanceId}\",",
          "1294:   Paginator: &request.Paginator{",
          "1295:    InputTokens:     []string{\"NextToken\"},",
          "1296:    OutputTokens:    []string{\"NextToken\"},",
          "1297:    LimitToken:      \"MaxResults\",",
          "1298:    TruncationToken: \"\",",
          "1299:   },",
          "1303:   input = &ListPhoneNumbersInput{}",
          "1306:  output = &ListPhoneNumbersOutput{}",
          "1340: func (c *Connect) ListPhoneNumbers(input *ListPhoneNumbersInput) (*ListPhoneNumbersOutput, error) {",
          "1341:  req, out := c.ListPhoneNumbersRequest(input)",
          "1354: func (c *Connect) ListPhoneNumbersWithContext(ctx aws.Context, input *ListPhoneNumbersInput, opts ...request.Option) (*ListPhoneNumbersOutput, error) {",
          "1355:  req, out := c.ListPhoneNumbersRequest(input)",
          "1378: func (c *Connect) ListPhoneNumbersPages(input *ListPhoneNumbersInput, fn func(*ListPhoneNumbersOutput, bool) bool) error {",
          "1379:  return c.ListPhoneNumbersPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1380: }",
          "1389: func (c *Connect) ListPhoneNumbersPagesWithContext(ctx aws.Context, input *ListPhoneNumbersInput, fn func(*ListPhoneNumbersOutput, bool) bool, opts ...request.Option) error {",
          "1390:  p := request.Pagination{",
          "1391:   NewRequest: func() (*request.Request, error) {",
          "1392:    var inCpy *ListPhoneNumbersInput",
          "1393:    if input != nil {",
          "1394:     tmp := *input",
          "1395:     inCpy = &tmp",
          "1396:    }",
          "1397:    req, _ := c.ListPhoneNumbersRequest(inCpy)",
          "1398:    req.SetContext(ctx)",
          "1399:    req.ApplyOptions(opts...)",
          "1400:    return req, nil",
          "1401:   },",
          "1402:  }",
          "1404:  for p.Next() {",
          "1405:   if !fn(p.Page().(*ListPhoneNumbersOutput), !p.HasNextPage()) {",
          "1406:    break",
          "1407:   }",
          "1408:  }",
          "1410:  return p.Err()",
          "1411: }",
          "1413: const opListQueues = \"ListQueues\"",
          "1439: func (c *Connect) ListQueuesRequest(input *ListQueuesInput) (req *request.Request, output *ListQueuesOutput) {",
          "1441:   Name:       opListQueues,",
          "1442:   HTTPMethod: \"GET\",",
          "1443:   HTTPPath:   \"/queues-summary/{InstanceId}\",",
          "",
          "[Added Lines]",
          "1033: func (c *Connect) DisassociateRoutingProfileQueues(input *DisassociateRoutingProfileQueuesInput) (*DisassociateRoutingProfileQueuesOutput, error) {",
          "1034:  req, out := c.DisassociateRoutingProfileQueuesRequest(input)",
          "1047: func (c *Connect) DisassociateRoutingProfileQueuesWithContext(ctx aws.Context, input *DisassociateRoutingProfileQueuesInput, opts ...request.Option) (*DisassociateRoutingProfileQueuesOutput, error) {",
          "1048:  req, out := c.DisassociateRoutingProfileQueuesRequest(input)",
          "1054: const opGetContactAttributes = \"GetContactAttributes\"",
          "1080: func (c *Connect) GetContactAttributesRequest(input *GetContactAttributesInput) (req *request.Request, output *GetContactAttributesOutput) {",
          "1082:   Name:       opGetContactAttributes,",
          "1084:   HTTPPath:   \"/contact/attributes/{InstanceId}/{InitialContactId}\",",
          "1088:   input = &GetContactAttributesInput{}",
          "1091:  output = &GetContactAttributesOutput{}",
          "1118: func (c *Connect) GetContactAttributes(input *GetContactAttributesInput) (*GetContactAttributesOutput, error) {",
          "1119:  req, out := c.GetContactAttributesRequest(input)",
          "1132: func (c *Connect) GetContactAttributesWithContext(ctx aws.Context, input *GetContactAttributesInput, opts ...request.Option) (*GetContactAttributesOutput, error) {",
          "1133:  req, out := c.GetContactAttributesRequest(input)",
          "1139: const opGetCurrentMetricData = \"GetCurrentMetricData\"",
          "1165: func (c *Connect) GetCurrentMetricDataRequest(input *GetCurrentMetricDataInput) (req *request.Request, output *GetCurrentMetricDataOutput) {",
          "1167:   Name:       opGetCurrentMetricData,",
          "1168:   HTTPMethod: \"POST\",",
          "1169:   HTTPPath:   \"/metrics/current/{InstanceId}\",",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1450:  }",
          "1452:  if input == nil {",
          "1454:  }",
          "1457:  req = c.newRequest(op, input, output)",
          "1458:  return",
          "1459: }",
          "",
          "[Removed Lines]",
          "1453:   input = &ListQueuesInput{}",
          "1456:  output = &ListQueuesOutput{}",
          "",
          "[Added Lines]",
          "1179:   input = &GetCurrentMetricDataInput{}",
          "1182:  output = &GetCurrentMetricDataOutput{}",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1491:  return out, req.Send()",
          "1492: }",
          "1505:  req.SetContext(ctx)",
          "1506:  req.ApplyOptions(opts...)",
          "1507:  return out, req.Send()",
          "1508: }",
          "1529: }",
          "1539:  p := request.Pagination{",
          "1540:   NewRequest: func() (*request.Request, error) {",
          "1542:    if input != nil {",
          "1543:     tmp := *input",
          "1544:     inCpy = &tmp",
          "1545:    }",
          "1547:    req.SetContext(ctx)",
          "1548:    req.ApplyOptions(opts...)",
          "1549:    return req, nil",
          "",
          "[Removed Lines]",
          "1489: func (c *Connect) ListQueues(input *ListQueuesInput) (*ListQueuesOutput, error) {",
          "1490:  req, out := c.ListQueuesRequest(input)",
          "1503: func (c *Connect) ListQueuesWithContext(ctx aws.Context, input *ListQueuesInput, opts ...request.Option) (*ListQueuesOutput, error) {",
          "1504:  req, out := c.ListQueuesRequest(input)",
          "1527: func (c *Connect) ListQueuesPages(input *ListQueuesInput, fn func(*ListQueuesOutput, bool) bool) error {",
          "1528:  return c.ListQueuesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1538: func (c *Connect) ListQueuesPagesWithContext(ctx aws.Context, input *ListQueuesInput, fn func(*ListQueuesOutput, bool) bool, opts ...request.Option) error {",
          "1541:    var inCpy *ListQueuesInput",
          "1546:    req, _ := c.ListQueuesRequest(inCpy)",
          "",
          "[Added Lines]",
          "1218: func (c *Connect) GetCurrentMetricData(input *GetCurrentMetricDataInput) (*GetCurrentMetricDataOutput, error) {",
          "1219:  req, out := c.GetCurrentMetricDataRequest(input)",
          "1232: func (c *Connect) GetCurrentMetricDataWithContext(ctx aws.Context, input *GetCurrentMetricDataInput, opts ...request.Option) (*GetCurrentMetricDataOutput, error) {",
          "1233:  req, out := c.GetCurrentMetricDataRequest(input)",
          "1256: func (c *Connect) GetCurrentMetricDataPages(input *GetCurrentMetricDataInput, fn func(*GetCurrentMetricDataOutput, bool) bool) error {",
          "1257:  return c.GetCurrentMetricDataPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1267: func (c *Connect) GetCurrentMetricDataPagesWithContext(ctx aws.Context, input *GetCurrentMetricDataInput, fn func(*GetCurrentMetricDataOutput, bool) bool, opts ...request.Option) error {",
          "1270:    var inCpy *GetCurrentMetricDataInput",
          "1275:    req, _ := c.GetCurrentMetricDataRequest(inCpy)",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1551:  }",
          "1553:  for p.Next() {",
          "1555:    break",
          "1556:   }",
          "1557:  }",
          "",
          "[Removed Lines]",
          "1554:   if !fn(p.Page().(*ListQueuesOutput), !p.HasNextPage()) {",
          "",
          "[Added Lines]",
          "1283:   if !fn(p.Page().(*GetCurrentMetricDataOutput), !p.HasNextPage()) {",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1559:  return p.Err()",
          "1560: }",
          "1589:  op := &request.Operation{",
          "1591:   HTTPMethod: \"GET\",",
          "1599:  }",
          "1601:  if input == nil {",
          "1603:  }",
          "1606:  req = c.newRequest(op, input, output)",
          "1607:  return",
          "1608: }",
          "",
          "[Removed Lines]",
          "1562: const opListRoutingProfiles = \"ListRoutingProfiles\"",
          "1588: func (c *Connect) ListRoutingProfilesRequest(input *ListRoutingProfilesInput) (req *request.Request, output *ListRoutingProfilesOutput) {",
          "1590:   Name:       opListRoutingProfiles,",
          "1592:   HTTPPath:   \"/routing-profiles-summary/{InstanceId}\",",
          "1593:   Paginator: &request.Paginator{",
          "1594:    InputTokens:     []string{\"NextToken\"},",
          "1595:    OutputTokens:    []string{\"NextToken\"},",
          "1596:    LimitToken:      \"MaxResults\",",
          "1597:    TruncationToken: \"\",",
          "1598:   },",
          "1602:   input = &ListRoutingProfilesInput{}",
          "1605:  output = &ListRoutingProfilesOutput{}",
          "",
          "[Added Lines]",
          "1291: const opGetFederationToken = \"GetFederationToken\"",
          "1317: func (c *Connect) GetFederationTokenRequest(input *GetFederationTokenInput) (req *request.Request, output *GetFederationTokenOutput) {",
          "1319:   Name:       opGetFederationToken,",
          "1321:   HTTPPath:   \"/user/federate/{InstanceId}\",",
          "1325:   input = &GetFederationTokenInput{}",
          "1328:  output = &GetFederationTokenOutput{}",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1641:  return out, req.Send()",
          "1642: }",
          "1655:  req.SetContext(ctx)",
          "1656:  req.ApplyOptions(opts...)",
          "1657:  return out, req.Send()",
          "1658: }",
          "1739:  op := &request.Operation{",
          "1743:   Paginator: &request.Paginator{",
          "1744:    InputTokens:     []string{\"NextToken\"},",
          "1745:    OutputTokens:    []string{\"NextToken\"},",
          "",
          "[Removed Lines]",
          "1639: func (c *Connect) ListRoutingProfiles(input *ListRoutingProfilesInput) (*ListRoutingProfilesOutput, error) {",
          "1640:  req, out := c.ListRoutingProfilesRequest(input)",
          "1653: func (c *Connect) ListRoutingProfilesWithContext(ctx aws.Context, input *ListRoutingProfilesInput, opts ...request.Option) (*ListRoutingProfilesOutput, error) {",
          "1654:  req, out := c.ListRoutingProfilesRequest(input)",
          "1677: func (c *Connect) ListRoutingProfilesPages(input *ListRoutingProfilesInput, fn func(*ListRoutingProfilesOutput, bool) bool) error {",
          "1678:  return c.ListRoutingProfilesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1679: }",
          "1688: func (c *Connect) ListRoutingProfilesPagesWithContext(ctx aws.Context, input *ListRoutingProfilesInput, fn func(*ListRoutingProfilesOutput, bool) bool, opts ...request.Option) error {",
          "1689:  p := request.Pagination{",
          "1690:   NewRequest: func() (*request.Request, error) {",
          "1691:    var inCpy *ListRoutingProfilesInput",
          "1692:    if input != nil {",
          "1693:     tmp := *input",
          "1694:     inCpy = &tmp",
          "1695:    }",
          "1696:    req, _ := c.ListRoutingProfilesRequest(inCpy)",
          "1697:    req.SetContext(ctx)",
          "1698:    req.ApplyOptions(opts...)",
          "1699:    return req, nil",
          "1700:   },",
          "1701:  }",
          "1703:  for p.Next() {",
          "1704:   if !fn(p.Page().(*ListRoutingProfilesOutput), !p.HasNextPage()) {",
          "1705:    break",
          "1706:   }",
          "1707:  }",
          "1709:  return p.Err()",
          "1710: }",
          "1712: const opListSecurityProfiles = \"ListSecurityProfiles\"",
          "1738: func (c *Connect) ListSecurityProfilesRequest(input *ListSecurityProfilesInput) (req *request.Request, output *ListSecurityProfilesOutput) {",
          "1740:   Name:       opListSecurityProfiles,",
          "1741:   HTTPMethod: \"GET\",",
          "1742:   HTTPPath:   \"/security-profiles-summary/{InstanceId}\",",
          "",
          "[Added Lines]",
          "1364: func (c *Connect) GetFederationToken(input *GetFederationTokenInput) (*GetFederationTokenOutput, error) {",
          "1365:  req, out := c.GetFederationTokenRequest(input)",
          "1378: func (c *Connect) GetFederationTokenWithContext(ctx aws.Context, input *GetFederationTokenInput, opts ...request.Option) (*GetFederationTokenOutput, error) {",
          "1379:  req, out := c.GetFederationTokenRequest(input)",
          "1385: const opGetMetricData = \"GetMetricData\"",
          "1411: func (c *Connect) GetMetricDataRequest(input *GetMetricDataInput) (req *request.Request, output *GetMetricDataOutput) {",
          "1413:   Name:       opGetMetricData,",
          "1414:   HTTPMethod: \"POST\",",
          "1415:   HTTPPath:   \"/metrics/historical/{InstanceId}\",",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1749:  }",
          "1751:  if input == nil {",
          "1753:  }",
          "1756:  req = c.newRequest(op, input, output)",
          "1757:  return",
          "1758: }",
          "",
          "[Removed Lines]",
          "1752:   input = &ListSecurityProfilesInput{}",
          "1755:  output = &ListSecurityProfilesOutput{}",
          "",
          "[Added Lines]",
          "1425:   input = &GetMetricDataInput{}",
          "1428:  output = &GetMetricDataOutput{}",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1791:  return out, req.Send()",
          "1792: }",
          "1805:  req.SetContext(ctx)",
          "1806:  req.ApplyOptions(opts...)",
          "1807:  return out, req.Send()",
          "1808: }",
          "1829: }",
          "1839:  p := request.Pagination{",
          "1840:   NewRequest: func() (*request.Request, error) {",
          "1842:    if input != nil {",
          "1843:     tmp := *input",
          "1844:     inCpy = &tmp",
          "1845:    }",
          "1847:    req.SetContext(ctx)",
          "1848:    req.ApplyOptions(opts...)",
          "1849:    return req, nil",
          "",
          "[Removed Lines]",
          "1789: func (c *Connect) ListSecurityProfiles(input *ListSecurityProfilesInput) (*ListSecurityProfilesOutput, error) {",
          "1790:  req, out := c.ListSecurityProfilesRequest(input)",
          "1803: func (c *Connect) ListSecurityProfilesWithContext(ctx aws.Context, input *ListSecurityProfilesInput, opts ...request.Option) (*ListSecurityProfilesOutput, error) {",
          "1804:  req, out := c.ListSecurityProfilesRequest(input)",
          "1827: func (c *Connect) ListSecurityProfilesPages(input *ListSecurityProfilesInput, fn func(*ListSecurityProfilesOutput, bool) bool) error {",
          "1828:  return c.ListSecurityProfilesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1838: func (c *Connect) ListSecurityProfilesPagesWithContext(ctx aws.Context, input *ListSecurityProfilesInput, fn func(*ListSecurityProfilesOutput, bool) bool, opts ...request.Option) error {",
          "1841:    var inCpy *ListSecurityProfilesInput",
          "1846:    req, _ := c.ListSecurityProfilesRequest(inCpy)",
          "",
          "[Added Lines]",
          "1465: func (c *Connect) GetMetricData(input *GetMetricDataInput) (*GetMetricDataOutput, error) {",
          "1466:  req, out := c.GetMetricDataRequest(input)",
          "1479: func (c *Connect) GetMetricDataWithContext(ctx aws.Context, input *GetMetricDataInput, opts ...request.Option) (*GetMetricDataOutput, error) {",
          "1480:  req, out := c.GetMetricDataRequest(input)",
          "1503: func (c *Connect) GetMetricDataPages(input *GetMetricDataInput, fn func(*GetMetricDataOutput, bool) bool) error {",
          "1504:  return c.GetMetricDataPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1514: func (c *Connect) GetMetricDataPagesWithContext(ctx aws.Context, input *GetMetricDataInput, fn func(*GetMetricDataOutput, bool) bool, opts ...request.Option) error {",
          "1517:    var inCpy *GetMetricDataInput",
          "1522:    req, _ := c.GetMetricDataRequest(inCpy)",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1851:  }",
          "1853:  for p.Next() {",
          "1855:    break",
          "1856:   }",
          "1857:  }",
          "",
          "[Removed Lines]",
          "1854:   if !fn(p.Page().(*ListSecurityProfilesOutput), !p.HasNextPage()) {",
          "",
          "[Added Lines]",
          "1530:   if !fn(p.Page().(*GetMetricDataOutput), !p.HasNextPage()) {",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1859:  return p.Err()",
          "1860: }",
          "1889:  op := &request.Operation{",
          "1891:   HTTPMethod: \"GET\",",
          "1893:  }",
          "1895:  if input == nil {",
          "1897:  }",
          "1900:  req = c.newRequest(op, input, output)",
          "1901:  return",
          "1902: }",
          "",
          "[Removed Lines]",
          "1862: const opListTagsForResource = \"ListTagsForResource\"",
          "1888: func (c *Connect) ListTagsForResourceRequest(input *ListTagsForResourceInput) (req *request.Request, output *ListTagsForResourceOutput) {",
          "1890:   Name:       opListTagsForResource,",
          "1892:   HTTPPath:   \"/tags/{resourceArn}\",",
          "1896:   input = &ListTagsForResourceInput{}",
          "1899:  output = &ListTagsForResourceOutput{}",
          "",
          "[Added Lines]",
          "1538: const opListContactFlows = \"ListContactFlows\"",
          "1564: func (c *Connect) ListContactFlowsRequest(input *ListContactFlowsInput) (req *request.Request, output *ListContactFlowsOutput) {",
          "1566:   Name:       opListContactFlows,",
          "1568:   HTTPPath:   \"/contact-flows-summary/{InstanceId}\",",
          "1569:   Paginator: &request.Paginator{",
          "1570:    InputTokens:     []string{\"NextToken\"},",
          "1571:    OutputTokens:    []string{\"NextToken\"},",
          "1572:    LimitToken:      \"MaxResults\",",
          "1573:    TruncationToken: \"\",",
          "1574:   },",
          "1578:   input = &ListContactFlowsInput{}",
          "1581:  output = &ListContactFlowsOutput{}",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1934:  return out, req.Send()",
          "1935: }",
          "1948:  req.SetContext(ctx)",
          "1949:  req.ApplyOptions(opts...)",
          "1950:  return out, req.Send()",
          "1951: }",
          "1980:  op := &request.Operation{",
          "1982:   HTTPMethod: \"GET\",",
          "1984:   Paginator: &request.Paginator{",
          "1985:    InputTokens:     []string{\"NextToken\"},",
          "1986:    OutputTokens:    []string{\"NextToken\"},",
          "",
          "[Removed Lines]",
          "1932: func (c *Connect) ListTagsForResource(input *ListTagsForResourceInput) (*ListTagsForResourceOutput, error) {",
          "1933:  req, out := c.ListTagsForResourceRequest(input)",
          "1946: func (c *Connect) ListTagsForResourceWithContext(ctx aws.Context, input *ListTagsForResourceInput, opts ...request.Option) (*ListTagsForResourceOutput, error) {",
          "1947:  req, out := c.ListTagsForResourceRequest(input)",
          "1953: const opListUserHierarchyGroups = \"ListUserHierarchyGroups\"",
          "1979: func (c *Connect) ListUserHierarchyGroupsRequest(input *ListUserHierarchyGroupsInput) (req *request.Request, output *ListUserHierarchyGroupsOutput) {",
          "1981:   Name:       opListUserHierarchyGroups,",
          "1983:   HTTPPath:   \"/user-hierarchy-groups-summary/{InstanceId}\",",
          "",
          "[Added Lines]",
          "1618: func (c *Connect) ListContactFlows(input *ListContactFlowsInput) (*ListContactFlowsOutput, error) {",
          "1619:  req, out := c.ListContactFlowsRequest(input)",
          "1632: func (c *Connect) ListContactFlowsWithContext(ctx aws.Context, input *ListContactFlowsInput, opts ...request.Option) (*ListContactFlowsOutput, error) {",
          "1633:  req, out := c.ListContactFlowsRequest(input)",
          "1656: func (c *Connect) ListContactFlowsPages(input *ListContactFlowsInput, fn func(*ListContactFlowsOutput, bool) bool) error {",
          "1657:  return c.ListContactFlowsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1658: }",
          "1667: func (c *Connect) ListContactFlowsPagesWithContext(ctx aws.Context, input *ListContactFlowsInput, fn func(*ListContactFlowsOutput, bool) bool, opts ...request.Option) error {",
          "1668:  p := request.Pagination{",
          "1669:   NewRequest: func() (*request.Request, error) {",
          "1670:    var inCpy *ListContactFlowsInput",
          "1671:    if input != nil {",
          "1672:     tmp := *input",
          "1673:     inCpy = &tmp",
          "1674:    }",
          "1675:    req, _ := c.ListContactFlowsRequest(inCpy)",
          "1676:    req.SetContext(ctx)",
          "1677:    req.ApplyOptions(opts...)",
          "1678:    return req, nil",
          "1679:   },",
          "1680:  }",
          "1682:  for p.Next() {",
          "1683:   if !fn(p.Page().(*ListContactFlowsOutput), !p.HasNextPage()) {",
          "1684:    break",
          "1685:   }",
          "1686:  }",
          "1688:  return p.Err()",
          "1689: }",
          "1691: const opListHoursOfOperations = \"ListHoursOfOperations\"",
          "1717: func (c *Connect) ListHoursOfOperationsRequest(input *ListHoursOfOperationsInput) (req *request.Request, output *ListHoursOfOperationsOutput) {",
          "1719:   Name:       opListHoursOfOperations,",
          "1721:   HTTPPath:   \"/hours-of-operations-summary/{InstanceId}\",",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1990:  }",
          "1992:  if input == nil {",
          "1994:  }",
          "1997:  req = c.newRequest(op, input, output)",
          "1998:  return",
          "1999: }",
          "",
          "[Removed Lines]",
          "1993:   input = &ListUserHierarchyGroupsInput{}",
          "1996:  output = &ListUserHierarchyGroupsOutput{}",
          "",
          "[Added Lines]",
          "1731:   input = &ListHoursOfOperationsInput{}",
          "1734:  output = &ListHoursOfOperationsOutput{}",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "2032:  return out, req.Send()",
          "2033: }",
          "2046:  req.SetContext(ctx)",
          "2047:  req.ApplyOptions(opts...)",
          "2048:  return out, req.Send()",
          "2049: }",
          "2070: }",
          "2080:  p := request.Pagination{",
          "2081:   NewRequest: func() (*request.Request, error) {",
          "2083:    if input != nil {",
          "2084:     tmp := *input",
          "2085:     inCpy = &tmp",
          "2086:    }",
          "2088:    req.SetContext(ctx)",
          "2089:    req.ApplyOptions(opts...)",
          "2090:    return req, nil",
          "",
          "[Removed Lines]",
          "2030: func (c *Connect) ListUserHierarchyGroups(input *ListUserHierarchyGroupsInput) (*ListUserHierarchyGroupsOutput, error) {",
          "2031:  req, out := c.ListUserHierarchyGroupsRequest(input)",
          "2044: func (c *Connect) ListUserHierarchyGroupsWithContext(ctx aws.Context, input *ListUserHierarchyGroupsInput, opts ...request.Option) (*ListUserHierarchyGroupsOutput, error) {",
          "2045:  req, out := c.ListUserHierarchyGroupsRequest(input)",
          "2068: func (c *Connect) ListUserHierarchyGroupsPages(input *ListUserHierarchyGroupsInput, fn func(*ListUserHierarchyGroupsOutput, bool) bool) error {",
          "2069:  return c.ListUserHierarchyGroupsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2079: func (c *Connect) ListUserHierarchyGroupsPagesWithContext(ctx aws.Context, input *ListUserHierarchyGroupsInput, fn func(*ListUserHierarchyGroupsOutput, bool) bool, opts ...request.Option) error {",
          "2082:    var inCpy *ListUserHierarchyGroupsInput",
          "2087:    req, _ := c.ListUserHierarchyGroupsRequest(inCpy)",
          "",
          "[Added Lines]",
          "1772: func (c *Connect) ListHoursOfOperations(input *ListHoursOfOperationsInput) (*ListHoursOfOperationsOutput, error) {",
          "1773:  req, out := c.ListHoursOfOperationsRequest(input)",
          "1786: func (c *Connect) ListHoursOfOperationsWithContext(ctx aws.Context, input *ListHoursOfOperationsInput, opts ...request.Option) (*ListHoursOfOperationsOutput, error) {",
          "1787:  req, out := c.ListHoursOfOperationsRequest(input)",
          "1810: func (c *Connect) ListHoursOfOperationsPages(input *ListHoursOfOperationsInput, fn func(*ListHoursOfOperationsOutput, bool) bool) error {",
          "1811:  return c.ListHoursOfOperationsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1821: func (c *Connect) ListHoursOfOperationsPagesWithContext(ctx aws.Context, input *ListHoursOfOperationsInput, fn func(*ListHoursOfOperationsOutput, bool) bool, opts ...request.Option) error {",
          "1824:    var inCpy *ListHoursOfOperationsInput",
          "1829:    req, _ := c.ListHoursOfOperationsRequest(inCpy)",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "2092:  }",
          "2094:  for p.Next() {",
          "2096:    break",
          "2097:   }",
          "2098:  }",
          "",
          "[Removed Lines]",
          "2095:   if !fn(p.Page().(*ListUserHierarchyGroupsOutput), !p.HasNextPage()) {",
          "",
          "[Added Lines]",
          "1837:   if !fn(p.Page().(*ListHoursOfOperationsOutput), !p.HasNextPage()) {",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "2100:  return p.Err()",
          "2101: }",
          "2130:  op := &request.Operation{",
          "2132:   HTTPMethod: \"GET\",",
          "2134:   Paginator: &request.Paginator{",
          "2135:    InputTokens:     []string{\"NextToken\"},",
          "2136:    OutputTokens:    []string{\"NextToken\"},",
          "",
          "[Removed Lines]",
          "2103: const opListUsers = \"ListUsers\"",
          "2129: func (c *Connect) ListUsersRequest(input *ListUsersInput) (req *request.Request, output *ListUsersOutput) {",
          "2131:   Name:       opListUsers,",
          "2133:   HTTPPath:   \"/users-summary/{InstanceId}\",",
          "",
          "[Added Lines]",
          "1845: const opListPhoneNumbers = \"ListPhoneNumbers\"",
          "1871: func (c *Connect) ListPhoneNumbersRequest(input *ListPhoneNumbersInput) (req *request.Request, output *ListPhoneNumbersOutput) {",
          "1873:   Name:       opListPhoneNumbers,",
          "1875:   HTTPPath:   \"/phone-numbers-summary/{InstanceId}\",",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "2140:  }",
          "2142:  if input == nil {",
          "2144:  }",
          "2147:  req = c.newRequest(op, input, output)",
          "2148:  return",
          "2149: }",
          "",
          "[Removed Lines]",
          "2143:   input = &ListUsersInput{}",
          "2146:  output = &ListUsersOutput{}",
          "",
          "[Added Lines]",
          "1885:   input = &ListPhoneNumbersInput{}",
          "1888:  output = &ListPhoneNumbersOutput{}",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "2182:  return out, req.Send()",
          "2183: }",
          "2196:  req.SetContext(ctx)",
          "2197:  req.ApplyOptions(opts...)",
          "2198:  return out, req.Send()",
          "2199: }",
          "2220: }",
          "2230:  p := request.Pagination{",
          "2231:   NewRequest: func() (*request.Request, error) {",
          "2233:    if input != nil {",
          "2234:     tmp := *input",
          "2235:     inCpy = &tmp",
          "2236:    }",
          "2238:    req.SetContext(ctx)",
          "2239:    req.ApplyOptions(opts...)",
          "2240:    return req, nil",
          "",
          "[Removed Lines]",
          "2180: func (c *Connect) ListUsers(input *ListUsersInput) (*ListUsersOutput, error) {",
          "2181:  req, out := c.ListUsersRequest(input)",
          "2194: func (c *Connect) ListUsersWithContext(ctx aws.Context, input *ListUsersInput, opts ...request.Option) (*ListUsersOutput, error) {",
          "2195:  req, out := c.ListUsersRequest(input)",
          "2218: func (c *Connect) ListUsersPages(input *ListUsersInput, fn func(*ListUsersOutput, bool) bool) error {",
          "2219:  return c.ListUsersPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2229: func (c *Connect) ListUsersPagesWithContext(ctx aws.Context, input *ListUsersInput, fn func(*ListUsersOutput, bool) bool, opts ...request.Option) error {",
          "2232:    var inCpy *ListUsersInput",
          "2237:    req, _ := c.ListUsersRequest(inCpy)",
          "",
          "[Added Lines]",
          "1926: func (c *Connect) ListPhoneNumbers(input *ListPhoneNumbersInput) (*ListPhoneNumbersOutput, error) {",
          "1927:  req, out := c.ListPhoneNumbersRequest(input)",
          "1940: func (c *Connect) ListPhoneNumbersWithContext(ctx aws.Context, input *ListPhoneNumbersInput, opts ...request.Option) (*ListPhoneNumbersOutput, error) {",
          "1941:  req, out := c.ListPhoneNumbersRequest(input)",
          "1964: func (c *Connect) ListPhoneNumbersPages(input *ListPhoneNumbersInput, fn func(*ListPhoneNumbersOutput, bool) bool) error {",
          "1965:  return c.ListPhoneNumbersPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1975: func (c *Connect) ListPhoneNumbersPagesWithContext(ctx aws.Context, input *ListPhoneNumbersInput, fn func(*ListPhoneNumbersOutput, bool) bool, opts ...request.Option) error {",
          "1978:    var inCpy *ListPhoneNumbersInput",
          "1983:    req, _ := c.ListPhoneNumbersRequest(inCpy)",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "2242:  }",
          "2244:  for p.Next() {",
          "2246:    break",
          "2247:   }",
          "2248:  }",
          "",
          "[Removed Lines]",
          "2245:   if !fn(p.Page().(*ListUsersOutput), !p.HasNextPage()) {",
          "",
          "[Added Lines]",
          "1991:   if !fn(p.Page().(*ListPhoneNumbersOutput), !p.HasNextPage()) {",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "2250:  return p.Err()",
          "2251: }",
          "2280:  op := &request.Operation{",
          "2284:  }",
          "2286:  if input == nil {",
          "2288:  }",
          "2291:  req = c.newRequest(op, input, output)",
          "2293:  return",
          "2294: }",
          "2323:  return out, req.Send()",
          "2324: }",
          "2337:  req.SetContext(ctx)",
          "2338:  req.ApplyOptions(opts...)",
          "2339:  return out, req.Send()",
          "2340: }",
          "2369:  op := &request.Operation{",
          "2373:  }",
          "2375:  if input == nil {",
          "2377:  }",
          "2380:  req = c.newRequest(op, input, output)",
          "2381:  return",
          "2382: }",
          "",
          "[Removed Lines]",
          "2253: const opResumeContactRecording = \"ResumeContactRecording\"",
          "2279: func (c *Connect) ResumeContactRecordingRequest(input *ResumeContactRecordingInput) (req *request.Request, output *ResumeContactRecordingOutput) {",
          "2281:   Name:       opResumeContactRecording,",
          "2282:   HTTPMethod: \"POST\",",
          "2283:   HTTPPath:   \"/contact/resume-recording\",",
          "2287:   input = &ResumeContactRecordingInput{}",
          "2290:  output = &ResumeContactRecordingOutput{}",
          "2292:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "2321: func (c *Connect) ResumeContactRecording(input *ResumeContactRecordingInput) (*ResumeContactRecordingOutput, error) {",
          "2322:  req, out := c.ResumeContactRecordingRequest(input)",
          "2335: func (c *Connect) ResumeContactRecordingWithContext(ctx aws.Context, input *ResumeContactRecordingInput, opts ...request.Option) (*ResumeContactRecordingOutput, error) {",
          "2336:  req, out := c.ResumeContactRecordingRequest(input)",
          "2342: const opStartChatContact = \"StartChatContact\"",
          "2368: func (c *Connect) StartChatContactRequest(input *StartChatContactInput) (req *request.Request, output *StartChatContactOutput) {",
          "2370:   Name:       opStartChatContact,",
          "2371:   HTTPMethod: \"PUT\",",
          "2372:   HTTPPath:   \"/contact/chat\",",
          "2376:   input = &StartChatContactInput{}",
          "2379:  output = &StartChatContactOutput{}",
          "",
          "[Added Lines]",
          "1999: const opListPrompts = \"ListPrompts\"",
          "2025: func (c *Connect) ListPromptsRequest(input *ListPromptsInput) (req *request.Request, output *ListPromptsOutput) {",
          "2027:   Name:       opListPrompts,",
          "2028:   HTTPMethod: \"GET\",",
          "2029:   HTTPPath:   \"/prompts-summary/{InstanceId}\",",
          "2030:   Paginator: &request.Paginator{",
          "2031:    InputTokens:     []string{\"NextToken\"},",
          "2032:    OutputTokens:    []string{\"NextToken\"},",
          "2033:    LimitToken:      \"MaxResults\",",
          "2034:    TruncationToken: \"\",",
          "2035:   },",
          "2039:   input = &ListPromptsInput{}",
          "2042:  output = &ListPromptsOutput{}",
          "2075: func (c *Connect) ListPrompts(input *ListPromptsInput) (*ListPromptsOutput, error) {",
          "2076:  req, out := c.ListPromptsRequest(input)",
          "2089: func (c *Connect) ListPromptsWithContext(ctx aws.Context, input *ListPromptsInput, opts ...request.Option) (*ListPromptsOutput, error) {",
          "2090:  req, out := c.ListPromptsRequest(input)",
          "2113: func (c *Connect) ListPromptsPages(input *ListPromptsInput, fn func(*ListPromptsOutput, bool) bool) error {",
          "2114:  return c.ListPromptsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2115: }",
          "2124: func (c *Connect) ListPromptsPagesWithContext(ctx aws.Context, input *ListPromptsInput, fn func(*ListPromptsOutput, bool) bool, opts ...request.Option) error {",
          "2125:  p := request.Pagination{",
          "2126:   NewRequest: func() (*request.Request, error) {",
          "2127:    var inCpy *ListPromptsInput",
          "2128:    if input != nil {",
          "2129:     tmp := *input",
          "2130:     inCpy = &tmp",
          "2131:    }",
          "2132:    req, _ := c.ListPromptsRequest(inCpy)",
          "2133:    req.SetContext(ctx)",
          "2134:    req.ApplyOptions(opts...)",
          "2135:    return req, nil",
          "2136:   },",
          "2137:  }",
          "2139:  for p.Next() {",
          "2140:   if !fn(p.Page().(*ListPromptsOutput), !p.HasNextPage()) {",
          "2141:    break",
          "2142:   }",
          "2143:  }",
          "2145:  return p.Err()",
          "2146: }",
          "2148: const opListQueues = \"ListQueues\"",
          "2174: func (c *Connect) ListQueuesRequest(input *ListQueuesInput) (req *request.Request, output *ListQueuesOutput) {",
          "2176:   Name:       opListQueues,",
          "2177:   HTTPMethod: \"GET\",",
          "2178:   HTTPPath:   \"/queues-summary/{InstanceId}\",",
          "2179:   Paginator: &request.Paginator{",
          "2180:    InputTokens:     []string{\"NextToken\"},",
          "2181:    OutputTokens:    []string{\"NextToken\"},",
          "2182:    LimitToken:      \"MaxResults\",",
          "2183:    TruncationToken: \"\",",
          "2184:   },",
          "2188:   input = &ListQueuesInput{}",
          "2191:  output = &ListQueuesOutput{}",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "2422:  return out, req.Send()",
          "2423: }",
          "2436:  req.SetContext(ctx)",
          "2437:  req.ApplyOptions(opts...)",
          "2438:  return out, req.Send()",
          "2439: }",
          "2468:  op := &request.Operation{",
          "2479:  req = c.newRequest(op, input, output)",
          "2481:  return",
          "2482: }",
          "",
          "[Removed Lines]",
          "2420: func (c *Connect) StartChatContact(input *StartChatContactInput) (*StartChatContactOutput, error) {",
          "2421:  req, out := c.StartChatContactRequest(input)",
          "2434: func (c *Connect) StartChatContactWithContext(ctx aws.Context, input *StartChatContactInput, opts ...request.Option) (*StartChatContactOutput, error) {",
          "2435:  req, out := c.StartChatContactRequest(input)",
          "2441: const opStartContactRecording = \"StartContactRecording\"",
          "2467: func (c *Connect) StartContactRecordingRequest(input *StartContactRecordingInput) (req *request.Request, output *StartContactRecordingOutput) {",
          "2469:   Name:       opStartContactRecording,",
          "2470:   HTTPMethod: \"POST\",",
          "2471:   HTTPPath:   \"/contact/start-recording\",",
          "2472:  }",
          "2474:  if input == nil {",
          "2475:   input = &StartContactRecordingInput{}",
          "2476:  }",
          "2478:  output = &StartContactRecordingOutput{}",
          "2480:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "",
          "[Added Lines]",
          "2227: func (c *Connect) ListQueues(input *ListQueuesInput) (*ListQueuesOutput, error) {",
          "2228:  req, out := c.ListQueuesRequest(input)",
          "2241: func (c *Connect) ListQueuesWithContext(ctx aws.Context, input *ListQueuesInput, opts ...request.Option) (*ListQueuesOutput, error) {",
          "2242:  req, out := c.ListQueuesRequest(input)",
          "2265: func (c *Connect) ListQueuesPages(input *ListQueuesInput, fn func(*ListQueuesOutput, bool) bool) error {",
          "2266:  return c.ListQueuesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2267: }",
          "2276: func (c *Connect) ListQueuesPagesWithContext(ctx aws.Context, input *ListQueuesInput, fn func(*ListQueuesOutput, bool) bool, opts ...request.Option) error {",
          "2277:  p := request.Pagination{",
          "2278:   NewRequest: func() (*request.Request, error) {",
          "2279:    var inCpy *ListQueuesInput",
          "2280:    if input != nil {",
          "2281:     tmp := *input",
          "2282:     inCpy = &tmp",
          "2283:    }",
          "2284:    req, _ := c.ListQueuesRequest(inCpy)",
          "2285:    req.SetContext(ctx)",
          "2286:    req.ApplyOptions(opts...)",
          "2287:    return req, nil",
          "2288:   },",
          "2289:  }",
          "2291:  for p.Next() {",
          "2292:   if !fn(p.Page().(*ListQueuesOutput), !p.HasNextPage()) {",
          "2293:    break",
          "2294:   }",
          "2295:  }",
          "2297:  return p.Err()",
          "2298: }",
          "2300: const opListRoutingProfileQueues = \"ListRoutingProfileQueues\"",
          "2326: func (c *Connect) ListRoutingProfileQueuesRequest(input *ListRoutingProfileQueuesInput) (req *request.Request, output *ListRoutingProfileQueuesOutput) {",
          "2328:   Name:       opListRoutingProfileQueues,",
          "2329:   HTTPMethod: \"GET\",",
          "2330:   HTTPPath:   \"/routing-profiles/{InstanceId}/{RoutingProfileId}/queues\",",
          "2331:   Paginator: &request.Paginator{",
          "2332:    InputTokens:     []string{\"NextToken\"},",
          "2333:    OutputTokens:    []string{\"NextToken\"},",
          "2334:    LimitToken:      \"MaxResults\",",
          "2335:    TruncationToken: \"\",",
          "2336:   },",
          "2337:  }",
          "2339:  if input == nil {",
          "2340:   input = &ListRoutingProfileQueuesInput{}",
          "2341:  }",
          "2343:  output = &ListRoutingProfileQueuesOutput{}",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "2522:  return out, req.Send()",
          "2523: }",
          "2536:  req.SetContext(ctx)",
          "2537:  req.ApplyOptions(opts...)",
          "2538:  return out, req.Send()",
          "2539: }",
          "2568:  op := &request.Operation{",
          "2572:  }",
          "2574:  if input == nil {",
          "2576:  }",
          "2579:  req = c.newRequest(op, input, output)",
          "2580:  return",
          "2581: }",
          "",
          "[Removed Lines]",
          "2520: func (c *Connect) StartContactRecording(input *StartContactRecordingInput) (*StartContactRecordingOutput, error) {",
          "2521:  req, out := c.StartContactRecordingRequest(input)",
          "2534: func (c *Connect) StartContactRecordingWithContext(ctx aws.Context, input *StartContactRecordingInput, opts ...request.Option) (*StartContactRecordingOutput, error) {",
          "2535:  req, out := c.StartContactRecordingRequest(input)",
          "2541: const opStartOutboundVoiceContact = \"StartOutboundVoiceContact\"",
          "2567: func (c *Connect) StartOutboundVoiceContactRequest(input *StartOutboundVoiceContactInput) (req *request.Request, output *StartOutboundVoiceContactOutput) {",
          "2569:   Name:       opStartOutboundVoiceContact,",
          "2570:   HTTPMethod: \"PUT\",",
          "2571:   HTTPPath:   \"/contact/outbound-voice\",",
          "2575:   input = &StartOutboundVoiceContactInput{}",
          "2578:  output = &StartOutboundVoiceContactOutput{}",
          "",
          "[Added Lines]",
          "2376: func (c *Connect) ListRoutingProfileQueues(input *ListRoutingProfileQueuesInput) (*ListRoutingProfileQueuesOutput, error) {",
          "2377:  req, out := c.ListRoutingProfileQueuesRequest(input)",
          "2390: func (c *Connect) ListRoutingProfileQueuesWithContext(ctx aws.Context, input *ListRoutingProfileQueuesInput, opts ...request.Option) (*ListRoutingProfileQueuesOutput, error) {",
          "2391:  req, out := c.ListRoutingProfileQueuesRequest(input)",
          "2414: func (c *Connect) ListRoutingProfileQueuesPages(input *ListRoutingProfileQueuesInput, fn func(*ListRoutingProfileQueuesOutput, bool) bool) error {",
          "2415:  return c.ListRoutingProfileQueuesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2416: }",
          "2425: func (c *Connect) ListRoutingProfileQueuesPagesWithContext(ctx aws.Context, input *ListRoutingProfileQueuesInput, fn func(*ListRoutingProfileQueuesOutput, bool) bool, opts ...request.Option) error {",
          "2426:  p := request.Pagination{",
          "2427:   NewRequest: func() (*request.Request, error) {",
          "2428:    var inCpy *ListRoutingProfileQueuesInput",
          "2429:    if input != nil {",
          "2430:     tmp := *input",
          "2431:     inCpy = &tmp",
          "2432:    }",
          "2433:    req, _ := c.ListRoutingProfileQueuesRequest(inCpy)",
          "2434:    req.SetContext(ctx)",
          "2435:    req.ApplyOptions(opts...)",
          "2436:    return req, nil",
          "2437:   },",
          "2438:  }",
          "2440:  for p.Next() {",
          "2441:   if !fn(p.Page().(*ListRoutingProfileQueuesOutput), !p.HasNextPage()) {",
          "2442:    break",
          "2443:   }",
          "2444:  }",
          "2446:  return p.Err()",
          "2447: }",
          "2449: const opListRoutingProfiles = \"ListRoutingProfiles\"",
          "2475: func (c *Connect) ListRoutingProfilesRequest(input *ListRoutingProfilesInput) (req *request.Request, output *ListRoutingProfilesOutput) {",
          "2477:   Name:       opListRoutingProfiles,",
          "2478:   HTTPMethod: \"GET\",",
          "2479:   HTTPPath:   \"/routing-profiles-summary/{InstanceId}\",",
          "2480:   Paginator: &request.Paginator{",
          "2481:    InputTokens:     []string{\"NextToken\"},",
          "2482:    OutputTokens:    []string{\"NextToken\"},",
          "2483:    LimitToken:      \"MaxResults\",",
          "2484:    TruncationToken: \"\",",
          "2485:   },",
          "2489:   input = &ListRoutingProfilesInput{}",
          "2492:  output = &ListRoutingProfilesOutput{}",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "2628:  return out, req.Send()",
          "2629: }",
          "2642:  req.SetContext(ctx)",
          "2643:  req.ApplyOptions(opts...)",
          "2644:  return out, req.Send()",
          "2645: }",
          "2674:  op := &request.Operation{",
          "2678:  }",
          "2680:  if input == nil {",
          "2682:  }",
          "2685:  req = c.newRequest(op, input, output)",
          "2687:  return",
          "2688: }",
          "2734:  req.SetContext(ctx)",
          "2735:  req.ApplyOptions(opts...)",
          "2736:  return out, req.Send()",
          "2737: }",
          "2814: }",
          "2830: }",
          "2859:  op := &request.Operation{",
          "2863:  }",
          "2865:  if input == nil {",
          "2867:  }",
          "2870:  req = c.newRequest(op, input, output)",
          "2872:  return",
          "2873: }",
          "2907:  return out, req.Send()",
          "2908: }",
          "2921:  req.SetContext(ctx)",
          "2922:  req.ApplyOptions(opts...)",
          "2923:  return out, req.Send()",
          "2924: }",
          "2953:  op := &request.Operation{",
          "2957:  }",
          "2959:  if input == nil {",
          "2961:  }",
          "2964:  req = c.newRequest(op, input, output)",
          "2966:  return",
          "2967: }",
          "",
          "[Removed Lines]",
          "2626: func (c *Connect) StartOutboundVoiceContact(input *StartOutboundVoiceContactInput) (*StartOutboundVoiceContactOutput, error) {",
          "2627:  req, out := c.StartOutboundVoiceContactRequest(input)",
          "2640: func (c *Connect) StartOutboundVoiceContactWithContext(ctx aws.Context, input *StartOutboundVoiceContactInput, opts ...request.Option) (*StartOutboundVoiceContactOutput, error) {",
          "2641:  req, out := c.StartOutboundVoiceContactRequest(input)",
          "2647: const opStopContact = \"StopContact\"",
          "2673: func (c *Connect) StopContactRequest(input *StopContactInput) (req *request.Request, output *StopContactOutput) {",
          "2675:   Name:       opStopContact,",
          "2676:   HTTPMethod: \"POST\",",
          "2677:   HTTPPath:   \"/contact/stop\",",
          "2681:   input = &StopContactInput{}",
          "2684:  output = &StopContactOutput{}",
          "2686:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "2718: func (c *Connect) StopContact(input *StopContactInput) (*StopContactOutput, error) {",
          "2719:  req, out := c.StopContactRequest(input)",
          "2720:  return out, req.Send()",
          "2721: }",
          "2732: func (c *Connect) StopContactWithContext(ctx aws.Context, input *StopContactInput, opts ...request.Option) (*StopContactOutput, error) {",
          "2733:  req, out := c.StopContactRequest(input)",
          "2739: const opStopContactRecording = \"StopContactRecording\"",
          "2765: func (c *Connect) StopContactRecordingRequest(input *StopContactRecordingInput) (req *request.Request, output *StopContactRecordingOutput) {",
          "2766:  op := &request.Operation{",
          "2767:   Name:       opStopContactRecording,",
          "2768:   HTTPMethod: \"POST\",",
          "2769:   HTTPPath:   \"/contact/stop-recording\",",
          "2770:  }",
          "2772:  if input == nil {",
          "2773:   input = &StopContactRecordingInput{}",
          "2774:  }",
          "2776:  output = &StopContactRecordingOutput{}",
          "2777:  req = c.newRequest(op, input, output)",
          "2778:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "2779:  return",
          "2780: }",
          "2811: func (c *Connect) StopContactRecording(input *StopContactRecordingInput) (*StopContactRecordingOutput, error) {",
          "2812:  req, out := c.StopContactRecordingRequest(input)",
          "2813:  return out, req.Send()",
          "2825: func (c *Connect) StopContactRecordingWithContext(ctx aws.Context, input *StopContactRecordingInput, opts ...request.Option) (*StopContactRecordingOutput, error) {",
          "2826:  req, out := c.StopContactRecordingRequest(input)",
          "2827:  req.SetContext(ctx)",
          "2828:  req.ApplyOptions(opts...)",
          "2829:  return out, req.Send()",
          "2832: const opSuspendContactRecording = \"SuspendContactRecording\"",
          "2858: func (c *Connect) SuspendContactRecordingRequest(input *SuspendContactRecordingInput) (req *request.Request, output *SuspendContactRecordingOutput) {",
          "2860:   Name:       opSuspendContactRecording,",
          "2861:   HTTPMethod: \"POST\",",
          "2862:   HTTPPath:   \"/contact/suspend-recording\",",
          "2866:   input = &SuspendContactRecordingInput{}",
          "2869:  output = &SuspendContactRecordingOutput{}",
          "2871:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "2905: func (c *Connect) SuspendContactRecording(input *SuspendContactRecordingInput) (*SuspendContactRecordingOutput, error) {",
          "2906:  req, out := c.SuspendContactRecordingRequest(input)",
          "2919: func (c *Connect) SuspendContactRecordingWithContext(ctx aws.Context, input *SuspendContactRecordingInput, opts ...request.Option) (*SuspendContactRecordingOutput, error) {",
          "2920:  req, out := c.SuspendContactRecordingRequest(input)",
          "2926: const opTagResource = \"TagResource\"",
          "2952: func (c *Connect) TagResourceRequest(input *TagResourceInput) (req *request.Request, output *TagResourceOutput) {",
          "2954:   Name:       opTagResource,",
          "2955:   HTTPMethod: \"POST\",",
          "2956:   HTTPPath:   \"/tags/{resourceArn}\",",
          "2960:   input = &TagResourceInput{}",
          "2963:  output = &TagResourceOutput{}",
          "2965:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "",
          "[Added Lines]",
          "2530: func (c *Connect) ListRoutingProfiles(input *ListRoutingProfilesInput) (*ListRoutingProfilesOutput, error) {",
          "2531:  req, out := c.ListRoutingProfilesRequest(input)",
          "2544: func (c *Connect) ListRoutingProfilesWithContext(ctx aws.Context, input *ListRoutingProfilesInput, opts ...request.Option) (*ListRoutingProfilesOutput, error) {",
          "2545:  req, out := c.ListRoutingProfilesRequest(input)",
          "2568: func (c *Connect) ListRoutingProfilesPages(input *ListRoutingProfilesInput, fn func(*ListRoutingProfilesOutput, bool) bool) error {",
          "2569:  return c.ListRoutingProfilesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2570: }",
          "2579: func (c *Connect) ListRoutingProfilesPagesWithContext(ctx aws.Context, input *ListRoutingProfilesInput, fn func(*ListRoutingProfilesOutput, bool) bool, opts ...request.Option) error {",
          "2580:  p := request.Pagination{",
          "2581:   NewRequest: func() (*request.Request, error) {",
          "2582:    var inCpy *ListRoutingProfilesInput",
          "2583:    if input != nil {",
          "2584:     tmp := *input",
          "2585:     inCpy = &tmp",
          "2586:    }",
          "2587:    req, _ := c.ListRoutingProfilesRequest(inCpy)",
          "2588:    req.SetContext(ctx)",
          "2589:    req.ApplyOptions(opts...)",
          "2590:    return req, nil",
          "2591:   },",
          "2592:  }",
          "2594:  for p.Next() {",
          "2595:   if !fn(p.Page().(*ListRoutingProfilesOutput), !p.HasNextPage()) {",
          "2596:    break",
          "2597:   }",
          "2598:  }",
          "2600:  return p.Err()",
          "2601: }",
          "2603: const opListSecurityProfiles = \"ListSecurityProfiles\"",
          "2629: func (c *Connect) ListSecurityProfilesRequest(input *ListSecurityProfilesInput) (req *request.Request, output *ListSecurityProfilesOutput) {",
          "2631:   Name:       opListSecurityProfiles,",
          "2632:   HTTPMethod: \"GET\",",
          "2633:   HTTPPath:   \"/security-profiles-summary/{InstanceId}\",",
          "2634:   Paginator: &request.Paginator{",
          "2635:    InputTokens:     []string{\"NextToken\"},",
          "2636:    OutputTokens:    []string{\"NextToken\"},",
          "2637:    LimitToken:      \"MaxResults\",",
          "2638:    TruncationToken: \"\",",
          "2639:   },",
          "2643:   input = &ListSecurityProfilesInput{}",
          "2646:  output = &ListSecurityProfilesOutput{}",
          "2683: func (c *Connect) ListSecurityProfiles(input *ListSecurityProfilesInput) (*ListSecurityProfilesOutput, error) {",
          "2684:  req, out := c.ListSecurityProfilesRequest(input)",
          "2685:  return out, req.Send()",
          "2686: }",
          "2697: func (c *Connect) ListSecurityProfilesWithContext(ctx aws.Context, input *ListSecurityProfilesInput, opts ...request.Option) (*ListSecurityProfilesOutput, error) {",
          "2698:  req, out := c.ListSecurityProfilesRequest(input)",
          "2721: func (c *Connect) ListSecurityProfilesPages(input *ListSecurityProfilesInput, fn func(*ListSecurityProfilesOutput, bool) bool) error {",
          "2722:  return c.ListSecurityProfilesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2732: func (c *Connect) ListSecurityProfilesPagesWithContext(ctx aws.Context, input *ListSecurityProfilesInput, fn func(*ListSecurityProfilesOutput, bool) bool, opts ...request.Option) error {",
          "2733:  p := request.Pagination{",
          "2734:   NewRequest: func() (*request.Request, error) {",
          "2735:    var inCpy *ListSecurityProfilesInput",
          "2736:    if input != nil {",
          "2737:     tmp := *input",
          "2738:     inCpy = &tmp",
          "2739:    }",
          "2740:    req, _ := c.ListSecurityProfilesRequest(inCpy)",
          "2741:    req.SetContext(ctx)",
          "2742:    req.ApplyOptions(opts...)",
          "2743:    return req, nil",
          "2744:   },",
          "2745:  }",
          "2747:  for p.Next() {",
          "2748:   if !fn(p.Page().(*ListSecurityProfilesOutput), !p.HasNextPage()) {",
          "2749:    break",
          "2750:   }",
          "2751:  }",
          "2753:  return p.Err()",
          "2756: const opListTagsForResource = \"ListTagsForResource\"",
          "2782: func (c *Connect) ListTagsForResourceRequest(input *ListTagsForResourceInput) (req *request.Request, output *ListTagsForResourceOutput) {",
          "2784:   Name:       opListTagsForResource,",
          "2785:   HTTPMethod: \"GET\",",
          "2786:   HTTPPath:   \"/tags/{resourceArn}\",",
          "2790:   input = &ListTagsForResourceInput{}",
          "2793:  output = &ListTagsForResourceOutput{}",
          "2830: func (c *Connect) ListTagsForResource(input *ListTagsForResourceInput) (*ListTagsForResourceOutput, error) {",
          "2831:  req, out := c.ListTagsForResourceRequest(input)",
          "2844: func (c *Connect) ListTagsForResourceWithContext(ctx aws.Context, input *ListTagsForResourceInput, opts ...request.Option) (*ListTagsForResourceOutput, error) {",
          "2845:  req, out := c.ListTagsForResourceRequest(input)",
          "2851: const opListUserHierarchyGroups = \"ListUserHierarchyGroups\"",
          "2877: func (c *Connect) ListUserHierarchyGroupsRequest(input *ListUserHierarchyGroupsInput) (req *request.Request, output *ListUserHierarchyGroupsOutput) {",
          "2879:   Name:       opListUserHierarchyGroups,",
          "2880:   HTTPMethod: \"GET\",",
          "2881:   HTTPPath:   \"/user-hierarchy-groups-summary/{InstanceId}\",",
          "2882:   Paginator: &request.Paginator{",
          "2883:    InputTokens:     []string{\"NextToken\"},",
          "2884:    OutputTokens:    []string{\"NextToken\"},",
          "2885:    LimitToken:      \"MaxResults\",",
          "2886:    TruncationToken: \"\",",
          "2887:   },",
          "2891:   input = &ListUserHierarchyGroupsInput{}",
          "2894:  output = &ListUserHierarchyGroupsOutput{}",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "3001:  return out, req.Send()",
          "3002: }",
          "3015:  req.SetContext(ctx)",
          "3016:  req.ApplyOptions(opts...)",
          "3017:  return out, req.Send()",
          "3018: }",
          "3047:  op := &request.Operation{",
          "3051:  }",
          "3053:  if input == nil {",
          "3055:  }",
          "3058:  req = c.newRequest(op, input, output)",
          "3060:  return",
          "3061: }",
          "",
          "[Removed Lines]",
          "2999: func (c *Connect) TagResource(input *TagResourceInput) (*TagResourceOutput, error) {",
          "3000:  req, out := c.TagResourceRequest(input)",
          "3013: func (c *Connect) TagResourceWithContext(ctx aws.Context, input *TagResourceInput, opts ...request.Option) (*TagResourceOutput, error) {",
          "3014:  req, out := c.TagResourceRequest(input)",
          "3020: const opUntagResource = \"UntagResource\"",
          "3046: func (c *Connect) UntagResourceRequest(input *UntagResourceInput) (req *request.Request, output *UntagResourceOutput) {",
          "3048:   Name:       opUntagResource,",
          "3049:   HTTPMethod: \"DELETE\",",
          "3050:   HTTPPath:   \"/tags/{resourceArn}\",",
          "3054:   input = &UntagResourceInput{}",
          "3057:  output = &UntagResourceOutput{}",
          "3059:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "",
          "[Added Lines]",
          "2932: func (c *Connect) ListUserHierarchyGroups(input *ListUserHierarchyGroupsInput) (*ListUserHierarchyGroupsOutput, error) {",
          "2933:  req, out := c.ListUserHierarchyGroupsRequest(input)",
          "2946: func (c *Connect) ListUserHierarchyGroupsWithContext(ctx aws.Context, input *ListUserHierarchyGroupsInput, opts ...request.Option) (*ListUserHierarchyGroupsOutput, error) {",
          "2947:  req, out := c.ListUserHierarchyGroupsRequest(input)",
          "2970: func (c *Connect) ListUserHierarchyGroupsPages(input *ListUserHierarchyGroupsInput, fn func(*ListUserHierarchyGroupsOutput, bool) bool) error {",
          "2971:  return c.ListUserHierarchyGroupsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2972: }",
          "2981: func (c *Connect) ListUserHierarchyGroupsPagesWithContext(ctx aws.Context, input *ListUserHierarchyGroupsInput, fn func(*ListUserHierarchyGroupsOutput, bool) bool, opts ...request.Option) error {",
          "2982:  p := request.Pagination{",
          "2983:   NewRequest: func() (*request.Request, error) {",
          "2984:    var inCpy *ListUserHierarchyGroupsInput",
          "2985:    if input != nil {",
          "2986:     tmp := *input",
          "2987:     inCpy = &tmp",
          "2988:    }",
          "2989:    req, _ := c.ListUserHierarchyGroupsRequest(inCpy)",
          "2990:    req.SetContext(ctx)",
          "2991:    req.ApplyOptions(opts...)",
          "2992:    return req, nil",
          "2993:   },",
          "2994:  }",
          "2996:  for p.Next() {",
          "2997:   if !fn(p.Page().(*ListUserHierarchyGroupsOutput), !p.HasNextPage()) {",
          "2998:    break",
          "2999:   }",
          "3000:  }",
          "3002:  return p.Err()",
          "3003: }",
          "3005: const opListUsers = \"ListUsers\"",
          "3031: func (c *Connect) ListUsersRequest(input *ListUsersInput) (req *request.Request, output *ListUsersOutput) {",
          "3033:   Name:       opListUsers,",
          "3034:   HTTPMethod: \"GET\",",
          "3035:   HTTPPath:   \"/users-summary/{InstanceId}\",",
          "3036:   Paginator: &request.Paginator{",
          "3037:    InputTokens:     []string{\"NextToken\"},",
          "3038:    OutputTokens:    []string{\"NextToken\"},",
          "3039:    LimitToken:      \"MaxResults\",",
          "3040:    TruncationToken: \"\",",
          "3041:   },",
          "3045:   input = &ListUsersInput{}",
          "3048:  output = &ListUsersOutput{}",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "3093:  return out, req.Send()",
          "3094: }",
          "3107:  req.SetContext(ctx)",
          "3108:  req.ApplyOptions(opts...)",
          "3109:  return out, req.Send()",
          "3110: }",
          "3139:  op := &request.Operation{",
          "3141:   HTTPMethod: \"POST\",",
          "3143:  }",
          "3145:  if input == nil {",
          "3147:  }",
          "3150:  req = c.newRequest(op, input, output)",
          "3151:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "3152:  return",
          "3153: }",
          "3202:  return out, req.Send()",
          "3203: }",
          "3216:  req.SetContext(ctx)",
          "3217:  req.ApplyOptions(opts...)",
          "3218:  return out, req.Send()",
          "3219: }",
          "3248:  op := &request.Operation{",
          "3254:  if input == nil {",
          "3256:  }",
          "3259:  req = c.newRequest(op, input, output)",
          "3261:  return",
          "3262: }",
          "",
          "[Removed Lines]",
          "3091: func (c *Connect) UntagResource(input *UntagResourceInput) (*UntagResourceOutput, error) {",
          "3092:  req, out := c.UntagResourceRequest(input)",
          "3105: func (c *Connect) UntagResourceWithContext(ctx aws.Context, input *UntagResourceInput, opts ...request.Option) (*UntagResourceOutput, error) {",
          "3106:  req, out := c.UntagResourceRequest(input)",
          "3112: const opUpdateContactAttributes = \"UpdateContactAttributes\"",
          "3138: func (c *Connect) UpdateContactAttributesRequest(input *UpdateContactAttributesInput) (req *request.Request, output *UpdateContactAttributesOutput) {",
          "3140:   Name:       opUpdateContactAttributes,",
          "3142:   HTTPPath:   \"/contact/attributes\",",
          "3146:   input = &UpdateContactAttributesInput{}",
          "3149:  output = &UpdateContactAttributesOutput{}",
          "3200: func (c *Connect) UpdateContactAttributes(input *UpdateContactAttributesInput) (*UpdateContactAttributesOutput, error) {",
          "3201:  req, out := c.UpdateContactAttributesRequest(input)",
          "3214: func (c *Connect) UpdateContactAttributesWithContext(ctx aws.Context, input *UpdateContactAttributesInput, opts ...request.Option) (*UpdateContactAttributesOutput, error) {",
          "3215:  req, out := c.UpdateContactAttributesRequest(input)",
          "3221: const opUpdateUserHierarchy = \"UpdateUserHierarchy\"",
          "3247: func (c *Connect) UpdateUserHierarchyRequest(input *UpdateUserHierarchyInput) (req *request.Request, output *UpdateUserHierarchyOutput) {",
          "3249:   Name:       opUpdateUserHierarchy,",
          "3250:   HTTPMethod: \"POST\",",
          "3251:   HTTPPath:   \"/users/{InstanceId}/{UserId}/hierarchy\",",
          "3252:  }",
          "3255:   input = &UpdateUserHierarchyInput{}",
          "3258:  output = &UpdateUserHierarchyOutput{}",
          "3260:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "",
          "[Added Lines]",
          "3082: func (c *Connect) ListUsers(input *ListUsersInput) (*ListUsersOutput, error) {",
          "3083:  req, out := c.ListUsersRequest(input)",
          "3096: func (c *Connect) ListUsersWithContext(ctx aws.Context, input *ListUsersInput, opts ...request.Option) (*ListUsersOutput, error) {",
          "3097:  req, out := c.ListUsersRequest(input)",
          "3120: func (c *Connect) ListUsersPages(input *ListUsersInput, fn func(*ListUsersOutput, bool) bool) error {",
          "3121:  return c.ListUsersPagesWithContext(aws.BackgroundContext(), input, fn)",
          "3122: }",
          "3131: func (c *Connect) ListUsersPagesWithContext(ctx aws.Context, input *ListUsersInput, fn func(*ListUsersOutput, bool) bool, opts ...request.Option) error {",
          "3132:  p := request.Pagination{",
          "3133:   NewRequest: func() (*request.Request, error) {",
          "3134:    var inCpy *ListUsersInput",
          "3135:    if input != nil {",
          "3136:     tmp := *input",
          "3137:     inCpy = &tmp",
          "3138:    }",
          "3139:    req, _ := c.ListUsersRequest(inCpy)",
          "3140:    req.SetContext(ctx)",
          "3141:    req.ApplyOptions(opts...)",
          "3142:    return req, nil",
          "3143:   },",
          "3144:  }",
          "3146:  for p.Next() {",
          "3147:   if !fn(p.Page().(*ListUsersOutput), !p.HasNextPage()) {",
          "3148:    break",
          "3149:   }",
          "3150:  }",
          "3152:  return p.Err()",
          "3153: }",
          "3155: const opResumeContactRecording = \"ResumeContactRecording\"",
          "3181: func (c *Connect) ResumeContactRecordingRequest(input *ResumeContactRecordingInput) (req *request.Request, output *ResumeContactRecordingOutput) {",
          "3183:   Name:       opResumeContactRecording,",
          "3185:   HTTPPath:   \"/contact/resume-recording\",",
          "3189:   input = &ResumeContactRecordingInput{}",
          "3192:  output = &ResumeContactRecordingOutput{}",
          "3223: func (c *Connect) ResumeContactRecording(input *ResumeContactRecordingInput) (*ResumeContactRecordingOutput, error) {",
          "3224:  req, out := c.ResumeContactRecordingRequest(input)",
          "3237: func (c *Connect) ResumeContactRecordingWithContext(ctx aws.Context, input *ResumeContactRecordingInput, opts ...request.Option) (*ResumeContactRecordingOutput, error) {",
          "3238:  req, out := c.ResumeContactRecordingRequest(input)",
          "3244: const opStartChatContact = \"StartChatContact\"",
          "3270: func (c *Connect) StartChatContactRequest(input *StartChatContactInput) (req *request.Request, output *StartChatContactOutput) {",
          "3272:   Name:       opStartChatContact,",
          "3273:   HTTPMethod: \"PUT\",",
          "3274:   HTTPPath:   \"/contact/chat\",",
          "3275:  }",
          "3278:   input = &StartChatContactInput{}",
          "3281:  output = &StartChatContactOutput{}",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "3294:  return out, req.Send()",
          "3295: }",
          "3308:  req.SetContext(ctx)",
          "3309:  req.ApplyOptions(opts...)",
          "3310:  return out, req.Send()",
          "3311: }",
          "3340:  op := &request.Operation{",
          "3342:   HTTPMethod: \"POST\",",
          "3344:  }",
          "3346:  if input == nil {",
          "3348:  }",
          "3351:  req = c.newRequest(op, input, output)",
          "3352:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "3353:  return",
          "3354: }",
          "",
          "[Removed Lines]",
          "3292: func (c *Connect) UpdateUserHierarchy(input *UpdateUserHierarchyInput) (*UpdateUserHierarchyOutput, error) {",
          "3293:  req, out := c.UpdateUserHierarchyRequest(input)",
          "3306: func (c *Connect) UpdateUserHierarchyWithContext(ctx aws.Context, input *UpdateUserHierarchyInput, opts ...request.Option) (*UpdateUserHierarchyOutput, error) {",
          "3307:  req, out := c.UpdateUserHierarchyRequest(input)",
          "3313: const opUpdateUserIdentityInfo = \"UpdateUserIdentityInfo\"",
          "3339: func (c *Connect) UpdateUserIdentityInfoRequest(input *UpdateUserIdentityInfoInput) (req *request.Request, output *UpdateUserIdentityInfoOutput) {",
          "3341:   Name:       opUpdateUserIdentityInfo,",
          "3343:   HTTPPath:   \"/users/{InstanceId}/{UserId}/identity-info\",",
          "3347:   input = &UpdateUserIdentityInfoInput{}",
          "3350:  output = &UpdateUserIdentityInfoOutput{}",
          "",
          "[Added Lines]",
          "3333: func (c *Connect) StartChatContact(input *StartChatContactInput) (*StartChatContactOutput, error) {",
          "3334:  req, out := c.StartChatContactRequest(input)",
          "3347: func (c *Connect) StartChatContactWithContext(ctx aws.Context, input *StartChatContactInput, opts ...request.Option) (*StartChatContactOutput, error) {",
          "3348:  req, out := c.StartChatContactRequest(input)",
          "3354: const opStartContactRecording = \"StartContactRecording\"",
          "3380: func (c *Connect) StartContactRecordingRequest(input *StartContactRecordingInput) (req *request.Request, output *StartContactRecordingOutput) {",
          "3382:   Name:       opStartContactRecording,",
          "3384:   HTTPPath:   \"/contact/start-recording\",",
          "3388:   input = &StartContactRecordingInput{}",
          "3391:  output = &StartContactRecordingOutput{}",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "3386:  return out, req.Send()",
          "3387: }",
          "3400:  req.SetContext(ctx)",
          "3401:  req.ApplyOptions(opts...)",
          "3402:  return out, req.Send()",
          "3403: }",
          "3432:  op := &request.Operation{",
          "3436:  }",
          "3438:  if input == nil {",
          "3440:  }",
          "3443:  req = c.newRequest(op, input, output)",
          "3445:  return",
          "3446: }",
          "",
          "[Removed Lines]",
          "3384: func (c *Connect) UpdateUserIdentityInfo(input *UpdateUserIdentityInfoInput) (*UpdateUserIdentityInfoOutput, error) {",
          "3385:  req, out := c.UpdateUserIdentityInfoRequest(input)",
          "3398: func (c *Connect) UpdateUserIdentityInfoWithContext(ctx aws.Context, input *UpdateUserIdentityInfoInput, opts ...request.Option) (*UpdateUserIdentityInfoOutput, error) {",
          "3399:  req, out := c.UpdateUserIdentityInfoRequest(input)",
          "3405: const opUpdateUserPhoneConfig = \"UpdateUserPhoneConfig\"",
          "3431: func (c *Connect) UpdateUserPhoneConfigRequest(input *UpdateUserPhoneConfigInput) (req *request.Request, output *UpdateUserPhoneConfigOutput) {",
          "3433:   Name:       opUpdateUserPhoneConfig,",
          "3434:   HTTPMethod: \"POST\",",
          "3435:   HTTPPath:   \"/users/{InstanceId}/{UserId}/phone-config\",",
          "3439:   input = &UpdateUserPhoneConfigInput{}",
          "3442:  output = &UpdateUserPhoneConfigOutput{}",
          "3444:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "",
          "[Added Lines]",
          "3433: func (c *Connect) StartContactRecording(input *StartContactRecordingInput) (*StartContactRecordingOutput, error) {",
          "3434:  req, out := c.StartContactRecordingRequest(input)",
          "3447: func (c *Connect) StartContactRecordingWithContext(ctx aws.Context, input *StartContactRecordingInput, opts ...request.Option) (*StartContactRecordingOutput, error) {",
          "3448:  req, out := c.StartContactRecordingRequest(input)",
          "3454: const opStartOutboundVoiceContact = \"StartOutboundVoiceContact\"",
          "3480: func (c *Connect) StartOutboundVoiceContactRequest(input *StartOutboundVoiceContactInput) (req *request.Request, output *StartOutboundVoiceContactOutput) {",
          "3482:   Name:       opStartOutboundVoiceContact,",
          "3483:   HTTPMethod: \"PUT\",",
          "3484:   HTTPPath:   \"/contact/outbound-voice\",",
          "3488:   input = &StartOutboundVoiceContactInput{}",
          "3491:  output = &StartOutboundVoiceContactOutput{}",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "3478:  return out, req.Send()",
          "3479: }",
          "3492:  req.SetContext(ctx)",
          "3493:  req.ApplyOptions(opts...)",
          "3494:  return out, req.Send()",
          "3495: }",
          "3524:  op := &request.Operation{",
          "3526:   HTTPMethod: \"POST\",",
          "3528:  }",
          "3530:  if input == nil {",
          "3532:  }",
          "3535:  req = c.newRequest(op, input, output)",
          "3536:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "3537:  return",
          "3538: }",
          "3570:  return out, req.Send()",
          "3571: }",
          "3584:  req.SetContext(ctx)",
          "3585:  req.ApplyOptions(opts...)",
          "3586:  return out, req.Send()",
          "3587: }",
          "3616:  op := &request.Operation{",
          "3618:   HTTPMethod: \"POST\",",
          "3620:  }",
          "3622:  if input == nil {",
          "3624:  }",
          "3627:  req = c.newRequest(op, input, output)",
          "3628:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "3629:  return",
          "3630: }",
          "3662:  return out, req.Send()",
          "3663: }",
          "3676:  req.SetContext(ctx)",
          "3677:  req.ApplyOptions(opts...)",
          "3678:  return out, req.Send()",
          "3679: }",
          "3694: }",
          "3699: }",
          "3704: }",
          "3720:  }",
          "3724:  }",
          "3732: }",
          "3738: }",
          "3755: }",
          "3759:  return awsutil.Prettify(s)",
          "3760: }",
          "3764:  return s.String()",
          "3765: }",
          "3770:  return s",
          "3771: }",
          "3776:  return s",
          "3777: }",
          "3782:  return s",
          "3783: }",
          "3788:  return s",
          "3789: }",
          "3798: }",
          "3802:  return awsutil.Prettify(s)",
          "3803: }",
          "3807:  return s.String()",
          "3808: }",
          "3813:  }",
          "3819: }",
          "3827: }",
          "3832: }",
          "3836: }",
          "3841: }",
          "3846: }",
          "3849:  _ struct{} `type:\"structure\"`",
          "3872:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "3904: }",
          "3908:  return awsutil.Prettify(s)",
          "3909: }",
          "3913:  return s.String()",
          "3914: }",
          "3919:  if s.InstanceId == nil {",
          "3920:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "3921:  }",
          "3922:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "3923:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "3924:  }",
          "3945:  }",
          "3950:  }",
          "3954:   }",
          "3955:  }",
          "",
          "[Removed Lines]",
          "3476: func (c *Connect) UpdateUserPhoneConfig(input *UpdateUserPhoneConfigInput) (*UpdateUserPhoneConfigOutput, error) {",
          "3477:  req, out := c.UpdateUserPhoneConfigRequest(input)",
          "3490: func (c *Connect) UpdateUserPhoneConfigWithContext(ctx aws.Context, input *UpdateUserPhoneConfigInput, opts ...request.Option) (*UpdateUserPhoneConfigOutput, error) {",
          "3491:  req, out := c.UpdateUserPhoneConfigRequest(input)",
          "3497: const opUpdateUserRoutingProfile = \"UpdateUserRoutingProfile\"",
          "3523: func (c *Connect) UpdateUserRoutingProfileRequest(input *UpdateUserRoutingProfileInput) (req *request.Request, output *UpdateUserRoutingProfileOutput) {",
          "3525:   Name:       opUpdateUserRoutingProfile,",
          "3527:   HTTPPath:   \"/users/{InstanceId}/{UserId}/routing-profile\",",
          "3531:   input = &UpdateUserRoutingProfileInput{}",
          "3534:  output = &UpdateUserRoutingProfileOutput{}",
          "3568: func (c *Connect) UpdateUserRoutingProfile(input *UpdateUserRoutingProfileInput) (*UpdateUserRoutingProfileOutput, error) {",
          "3569:  req, out := c.UpdateUserRoutingProfileRequest(input)",
          "3582: func (c *Connect) UpdateUserRoutingProfileWithContext(ctx aws.Context, input *UpdateUserRoutingProfileInput, opts ...request.Option) (*UpdateUserRoutingProfileOutput, error) {",
          "3583:  req, out := c.UpdateUserRoutingProfileRequest(input)",
          "3589: const opUpdateUserSecurityProfiles = \"UpdateUserSecurityProfiles\"",
          "3615: func (c *Connect) UpdateUserSecurityProfilesRequest(input *UpdateUserSecurityProfilesInput) (req *request.Request, output *UpdateUserSecurityProfilesOutput) {",
          "3617:   Name:       opUpdateUserSecurityProfiles,",
          "3619:   HTTPPath:   \"/users/{InstanceId}/{UserId}/security-profiles\",",
          "3623:   input = &UpdateUserSecurityProfilesInput{}",
          "3626:  output = &UpdateUserSecurityProfilesOutput{}",
          "3660: func (c *Connect) UpdateUserSecurityProfiles(input *UpdateUserSecurityProfilesInput) (*UpdateUserSecurityProfilesOutput, error) {",
          "3661:  req, out := c.UpdateUserSecurityProfilesRequest(input)",
          "3674: func (c *Connect) UpdateUserSecurityProfilesWithContext(ctx aws.Context, input *UpdateUserSecurityProfilesInput, opts ...request.Option) (*UpdateUserSecurityProfilesOutput, error) {",
          "3675:  req, out := c.UpdateUserSecurityProfilesRequest(input)",
          "3682: type ChatMessage struct {",
          "3683:  _ struct{} `type:\"structure\"`",
          "3688:  Content *string `min:\"1\" type:\"string\" required:\"true\"`",
          "3693:  ContentType *string `min:\"1\" type:\"string\" required:\"true\"`",
          "3697: func (s ChatMessage) String() string {",
          "3698:  return awsutil.Prettify(s)",
          "3702: func (s ChatMessage) GoString() string {",
          "3703:  return s.String()",
          "3707: func (s *ChatMessage) Validate() error {",
          "3708:  invalidParams := request.ErrInvalidParams{Context: \"ChatMessage\"}",
          "3709:  if s.Content == nil {",
          "3710:   invalidParams.Add(request.NewErrParamRequired(\"Content\"))",
          "3711:  }",
          "3712:  if s.Content != nil && len(*s.Content) < 1 {",
          "3713:   invalidParams.Add(request.NewErrParamMinLen(\"Content\", 1))",
          "3714:  }",
          "3715:  if s.ContentType == nil {",
          "3716:   invalidParams.Add(request.NewErrParamRequired(\"ContentType\"))",
          "3717:  }",
          "3718:  if s.ContentType != nil && len(*s.ContentType) < 1 {",
          "3719:   invalidParams.Add(request.NewErrParamMinLen(\"ContentType\", 1))",
          "3722:  if invalidParams.Len() > 0 {",
          "3723:   return invalidParams",
          "3725:  return nil",
          "3726: }",
          "3729: func (s *ChatMessage) SetContent(v string) *ChatMessage {",
          "3730:  s.Content = &v",
          "3731:  return s",
          "3735: func (s *ChatMessage) SetContentType(v string) *ChatMessage {",
          "3736:  s.ContentType = &v",
          "3737:  return s",
          "3741: type ContactFlowSummary struct {",
          "3742:  _ struct{} `type:\"structure\"`",
          "3745:  Arn *string `type:\"string\"`",
          "3748:  ContactFlowType *string `type:\"string\" enum:\"ContactFlowType\"`",
          "3751:  Id *string `type:\"string\"`",
          "3754:  Name *string `type:\"string\"`",
          "3758: func (s ContactFlowSummary) String() string {",
          "3763: func (s ContactFlowSummary) GoString() string {",
          "3768: func (s *ContactFlowSummary) SetArn(v string) *ContactFlowSummary {",
          "3769:  s.Arn = &v",
          "3774: func (s *ContactFlowSummary) SetContactFlowType(v string) *ContactFlowSummary {",
          "3775:  s.ContactFlowType = &v",
          "3780: func (s *ContactFlowSummary) SetId(v string) *ContactFlowSummary {",
          "3781:  s.Id = &v",
          "3786: func (s *ContactFlowSummary) SetName(v string) *ContactFlowSummary {",
          "3787:  s.Name = &v",
          "3792: type ContactNotFoundException struct {",
          "3793:  _            struct{}                  `type:\"structure\"`",
          "3794:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "3797:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "3801: func (s ContactNotFoundException) String() string {",
          "3806: func (s ContactNotFoundException) GoString() string {",
          "3810: func newErrorContactNotFoundException(v protocol.ResponseMetadata) error {",
          "3811:  return &ContactNotFoundException{",
          "3812:   RespMetadata: v,",
          "3814: }",
          "3817: func (s *ContactNotFoundException) Code() string {",
          "3818:  return \"ContactNotFoundException\"",
          "3822: func (s *ContactNotFoundException) Message() string {",
          "3823:  if s.Message_ != nil {",
          "3824:   return *s.Message_",
          "3825:  }",
          "3826:  return \"\"",
          "3830: func (s *ContactNotFoundException) OrigErr() error {",
          "3831:  return nil",
          "3834: func (s *ContactNotFoundException) Error() string {",
          "3835:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "3839: func (s *ContactNotFoundException) StatusCode() int {",
          "3840:  return s.RespMetadata.StatusCode",
          "3844: func (s *ContactNotFoundException) RequestID() string {",
          "3845:  return s.RespMetadata.RequestID",
          "3848: type CreateUserInput struct {",
          "3861:  DirectoryUserId *string `type:\"string\"`",
          "3864:  HierarchyGroupId *string `type:\"string\"`",
          "3867:  IdentityInfo *UserIdentityInfo `type:\"structure\"`",
          "3877:  Password *string `type:\"string\"`",
          "3882:  PhoneConfig *UserPhoneConfig `type:\"structure\" required:\"true\"`",
          "3887:  RoutingProfileId *string `type:\"string\" required:\"true\"`",
          "3892:  SecurityProfileIds []*string `min:\"1\" type:\"list\" required:\"true\"`",
          "3895:  Tags map[string]*string `min:\"1\" type:\"map\"`",
          "3903:  Username *string `min:\"1\" type:\"string\" required:\"true\"`",
          "3907: func (s CreateUserInput) String() string {",
          "3912: func (s CreateUserInput) GoString() string {",
          "3917: func (s *CreateUserInput) Validate() error {",
          "3918:  invalidParams := request.ErrInvalidParams{Context: \"CreateUserInput\"}",
          "3925:  if s.PhoneConfig == nil {",
          "3926:   invalidParams.Add(request.NewErrParamRequired(\"PhoneConfig\"))",
          "3927:  }",
          "3928:  if s.RoutingProfileId == nil {",
          "3929:   invalidParams.Add(request.NewErrParamRequired(\"RoutingProfileId\"))",
          "3930:  }",
          "3931:  if s.SecurityProfileIds == nil {",
          "3932:   invalidParams.Add(request.NewErrParamRequired(\"SecurityProfileIds\"))",
          "3933:  }",
          "3934:  if s.SecurityProfileIds != nil && len(s.SecurityProfileIds) < 1 {",
          "3935:   invalidParams.Add(request.NewErrParamMinLen(\"SecurityProfileIds\", 1))",
          "3936:  }",
          "3937:  if s.Tags != nil && len(s.Tags) < 1 {",
          "3938:   invalidParams.Add(request.NewErrParamMinLen(\"Tags\", 1))",
          "3939:  }",
          "3940:  if s.Username == nil {",
          "3941:   invalidParams.Add(request.NewErrParamRequired(\"Username\"))",
          "3942:  }",
          "3943:  if s.Username != nil && len(*s.Username) < 1 {",
          "3944:   invalidParams.Add(request.NewErrParamMinLen(\"Username\", 1))",
          "3946:  if s.IdentityInfo != nil {",
          "3947:   if err := s.IdentityInfo.Validate(); err != nil {",
          "3948:    invalidParams.AddNested(\"IdentityInfo\", err.(request.ErrInvalidParams))",
          "3949:   }",
          "3951:  if s.PhoneConfig != nil {",
          "3952:   if err := s.PhoneConfig.Validate(); err != nil {",
          "3953:    invalidParams.AddNested(\"PhoneConfig\", err.(request.ErrInvalidParams))",
          "",
          "[Added Lines]",
          "3544: func (c *Connect) StartOutboundVoiceContact(input *StartOutboundVoiceContactInput) (*StartOutboundVoiceContactOutput, error) {",
          "3545:  req, out := c.StartOutboundVoiceContactRequest(input)",
          "3558: func (c *Connect) StartOutboundVoiceContactWithContext(ctx aws.Context, input *StartOutboundVoiceContactInput, opts ...request.Option) (*StartOutboundVoiceContactOutput, error) {",
          "3559:  req, out := c.StartOutboundVoiceContactRequest(input)",
          "3565: const opStopContact = \"StopContact\"",
          "3591: func (c *Connect) StopContactRequest(input *StopContactInput) (req *request.Request, output *StopContactOutput) {",
          "3593:   Name:       opStopContact,",
          "3595:   HTTPPath:   \"/contact/stop\",",
          "3599:   input = &StopContactInput{}",
          "3602:  output = &StopContactOutput{}",
          "3636: func (c *Connect) StopContact(input *StopContactInput) (*StopContactOutput, error) {",
          "3637:  req, out := c.StopContactRequest(input)",
          "3650: func (c *Connect) StopContactWithContext(ctx aws.Context, input *StopContactInput, opts ...request.Option) (*StopContactOutput, error) {",
          "3651:  req, out := c.StopContactRequest(input)",
          "3657: const opStopContactRecording = \"StopContactRecording\"",
          "3683: func (c *Connect) StopContactRecordingRequest(input *StopContactRecordingInput) (req *request.Request, output *StopContactRecordingOutput) {",
          "3685:   Name:       opStopContactRecording,",
          "3687:   HTTPPath:   \"/contact/stop-recording\",",
          "3691:   input = &StopContactRecordingInput{}",
          "3694:  output = &StopContactRecordingOutput{}",
          "3729: func (c *Connect) StopContactRecording(input *StopContactRecordingInput) (*StopContactRecordingOutput, error) {",
          "3730:  req, out := c.StopContactRecordingRequest(input)",
          "3743: func (c *Connect) StopContactRecordingWithContext(ctx aws.Context, input *StopContactRecordingInput, opts ...request.Option) (*StopContactRecordingOutput, error) {",
          "3744:  req, out := c.StopContactRecordingRequest(input)",
          "3750: const opSuspendContactRecording = \"SuspendContactRecording\"",
          "3776: func (c *Connect) SuspendContactRecordingRequest(input *SuspendContactRecordingInput) (req *request.Request, output *SuspendContactRecordingOutput) {",
          "3777:  op := &request.Operation{",
          "3778:   Name:       opSuspendContactRecording,",
          "3779:   HTTPMethod: \"POST\",",
          "3780:   HTTPPath:   \"/contact/suspend-recording\",",
          "3781:  }",
          "3783:  if input == nil {",
          "3784:   input = &SuspendContactRecordingInput{}",
          "3785:  }",
          "3787:  output = &SuspendContactRecordingOutput{}",
          "3788:  req = c.newRequest(op, input, output)",
          "3789:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "3790:  return",
          "3823: func (c *Connect) SuspendContactRecording(input *SuspendContactRecordingInput) (*SuspendContactRecordingOutput, error) {",
          "3824:  req, out := c.SuspendContactRecordingRequest(input)",
          "3825:  return out, req.Send()",
          "3837: func (c *Connect) SuspendContactRecordingWithContext(ctx aws.Context, input *SuspendContactRecordingInput, opts ...request.Option) (*SuspendContactRecordingOutput, error) {",
          "3838:  req, out := c.SuspendContactRecordingRequest(input)",
          "3839:  req.SetContext(ctx)",
          "3840:  req.ApplyOptions(opts...)",
          "3841:  return out, req.Send()",
          "3844: const opTagResource = \"TagResource\"",
          "3870: func (c *Connect) TagResourceRequest(input *TagResourceInput) (req *request.Request, output *TagResourceOutput) {",
          "3871:  op := &request.Operation{",
          "3872:   Name:       opTagResource,",
          "3873:   HTTPMethod: \"POST\",",
          "3874:   HTTPPath:   \"/tags/{resourceArn}\",",
          "3877:  if input == nil {",
          "3878:   input = &TagResourceInput{}",
          "3881:  output = &TagResourceOutput{}",
          "3882:  req = c.newRequest(op, input, output)",
          "3883:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "3884:  return",
          "3921: func (c *Connect) TagResource(input *TagResourceInput) (*TagResourceOutput, error) {",
          "3922:  req, out := c.TagResourceRequest(input)",
          "3923:  return out, req.Send()",
          "3935: func (c *Connect) TagResourceWithContext(ctx aws.Context, input *TagResourceInput, opts ...request.Option) (*TagResourceOutput, error) {",
          "3936:  req, out := c.TagResourceRequest(input)",
          "3937:  req.SetContext(ctx)",
          "3938:  req.ApplyOptions(opts...)",
          "3939:  return out, req.Send()",
          "3940: }",
          "3942: const opUntagResource = \"UntagResource\"",
          "3968: func (c *Connect) UntagResourceRequest(input *UntagResourceInput) (req *request.Request, output *UntagResourceOutput) {",
          "3969:  op := &request.Operation{",
          "3970:   Name:       opUntagResource,",
          "3971:   HTTPMethod: \"DELETE\",",
          "3972:   HTTPPath:   \"/tags/{resourceArn}\",",
          "3973:  }",
          "3975:  if input == nil {",
          "3976:   input = &UntagResourceInput{}",
          "3977:  }",
          "3979:  output = &UntagResourceOutput{}",
          "3980:  req = c.newRequest(op, input, output)",
          "3981:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "3982:  return",
          "3983: }",
          "4013: func (c *Connect) UntagResource(input *UntagResourceInput) (*UntagResourceOutput, error) {",
          "4014:  req, out := c.UntagResourceRequest(input)",
          "4015:  return out, req.Send()",
          "4016: }",
          "4027: func (c *Connect) UntagResourceWithContext(ctx aws.Context, input *UntagResourceInput, opts ...request.Option) (*UntagResourceOutput, error) {",
          "4028:  req, out := c.UntagResourceRequest(input)",
          "4029:  req.SetContext(ctx)",
          "4030:  req.ApplyOptions(opts...)",
          "4031:  return out, req.Send()",
          "4032: }",
          "4034: const opUpdateContactAttributes = \"UpdateContactAttributes\"",
          "4060: func (c *Connect) UpdateContactAttributesRequest(input *UpdateContactAttributesInput) (req *request.Request, output *UpdateContactAttributesOutput) {",
          "4061:  op := &request.Operation{",
          "4062:   Name:       opUpdateContactAttributes,",
          "4063:   HTTPMethod: \"POST\",",
          "4064:   HTTPPath:   \"/contact/attributes\",",
          "4065:  }",
          "4067:  if input == nil {",
          "4068:   input = &UpdateContactAttributesInput{}",
          "4069:  }",
          "4071:  output = &UpdateContactAttributesOutput{}",
          "4072:  req = c.newRequest(op, input, output)",
          "4073:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "4074:  return",
          "4075: }",
          "4122: func (c *Connect) UpdateContactAttributes(input *UpdateContactAttributesInput) (*UpdateContactAttributesOutput, error) {",
          "4123:  req, out := c.UpdateContactAttributesRequest(input)",
          "4124:  return out, req.Send()",
          "4125: }",
          "4136: func (c *Connect) UpdateContactAttributesWithContext(ctx aws.Context, input *UpdateContactAttributesInput, opts ...request.Option) (*UpdateContactAttributesOutput, error) {",
          "4137:  req, out := c.UpdateContactAttributesRequest(input)",
          "4138:  req.SetContext(ctx)",
          "4139:  req.ApplyOptions(opts...)",
          "4140:  return out, req.Send()",
          "4141: }",
          "4143: const opUpdateContactFlowContent = \"UpdateContactFlowContent\"",
          "4169: func (c *Connect) UpdateContactFlowContentRequest(input *UpdateContactFlowContentInput) (req *request.Request, output *UpdateContactFlowContentOutput) {",
          "4170:  op := &request.Operation{",
          "4171:   Name:       opUpdateContactFlowContent,",
          "4172:   HTTPMethod: \"POST\",",
          "4173:   HTTPPath:   \"/contact-flows/{InstanceId}/{ContactFlowId}/content\",",
          "4174:  }",
          "4176:  if input == nil {",
          "4177:   input = &UpdateContactFlowContentInput{}",
          "4178:  }",
          "4180:  output = &UpdateContactFlowContentOutput{}",
          "4181:  req = c.newRequest(op, input, output)",
          "4182:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "4183:  return",
          "4184: }",
          "4217: func (c *Connect) UpdateContactFlowContent(input *UpdateContactFlowContentInput) (*UpdateContactFlowContentOutput, error) {",
          "4218:  req, out := c.UpdateContactFlowContentRequest(input)",
          "4219:  return out, req.Send()",
          "4220: }",
          "4231: func (c *Connect) UpdateContactFlowContentWithContext(ctx aws.Context, input *UpdateContactFlowContentInput, opts ...request.Option) (*UpdateContactFlowContentOutput, error) {",
          "4232:  req, out := c.UpdateContactFlowContentRequest(input)",
          "4233:  req.SetContext(ctx)",
          "4234:  req.ApplyOptions(opts...)",
          "4235:  return out, req.Send()",
          "4236: }",
          "4238: const opUpdateContactFlowName = \"UpdateContactFlowName\"",
          "4264: func (c *Connect) UpdateContactFlowNameRequest(input *UpdateContactFlowNameInput) (req *request.Request, output *UpdateContactFlowNameOutput) {",
          "4265:  op := &request.Operation{",
          "4266:   Name:       opUpdateContactFlowName,",
          "4267:   HTTPMethod: \"POST\",",
          "4268:   HTTPPath:   \"/contact-flows/{InstanceId}/{ContactFlowId}/name\",",
          "4269:  }",
          "4271:  if input == nil {",
          "4272:   input = &UpdateContactFlowNameInput{}",
          "4273:  }",
          "4275:  output = &UpdateContactFlowNameOutput{}",
          "4276:  req = c.newRequest(op, input, output)",
          "4277:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "4278:  return",
          "4279: }",
          "4312: func (c *Connect) UpdateContactFlowName(input *UpdateContactFlowNameInput) (*UpdateContactFlowNameOutput, error) {",
          "4313:  req, out := c.UpdateContactFlowNameRequest(input)",
          "4314:  return out, req.Send()",
          "4315: }",
          "4326: func (c *Connect) UpdateContactFlowNameWithContext(ctx aws.Context, input *UpdateContactFlowNameInput, opts ...request.Option) (*UpdateContactFlowNameOutput, error) {",
          "4327:  req, out := c.UpdateContactFlowNameRequest(input)",
          "4328:  req.SetContext(ctx)",
          "4329:  req.ApplyOptions(opts...)",
          "4330:  return out, req.Send()",
          "4331: }",
          "4333: const opUpdateRoutingProfileConcurrency = \"UpdateRoutingProfileConcurrency\"",
          "4359: func (c *Connect) UpdateRoutingProfileConcurrencyRequest(input *UpdateRoutingProfileConcurrencyInput) (req *request.Request, output *UpdateRoutingProfileConcurrencyOutput) {",
          "4360:  op := &request.Operation{",
          "4361:   Name:       opUpdateRoutingProfileConcurrency,",
          "4362:   HTTPMethod: \"POST\",",
          "4363:   HTTPPath:   \"/routing-profiles/{InstanceId}/{RoutingProfileId}/concurrency\",",
          "4364:  }",
          "4366:  if input == nil {",
          "4367:   input = &UpdateRoutingProfileConcurrencyInput{}",
          "4368:  }",
          "4370:  output = &UpdateRoutingProfileConcurrencyOutput{}",
          "4371:  req = c.newRequest(op, input, output)",
          "4372:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "4373:  return",
          "4374: }",
          "4405: func (c *Connect) UpdateRoutingProfileConcurrency(input *UpdateRoutingProfileConcurrencyInput) (*UpdateRoutingProfileConcurrencyOutput, error) {",
          "4406:  req, out := c.UpdateRoutingProfileConcurrencyRequest(input)",
          "4407:  return out, req.Send()",
          "4408: }",
          "4419: func (c *Connect) UpdateRoutingProfileConcurrencyWithContext(ctx aws.Context, input *UpdateRoutingProfileConcurrencyInput, opts ...request.Option) (*UpdateRoutingProfileConcurrencyOutput, error) {",
          "4420:  req, out := c.UpdateRoutingProfileConcurrencyRequest(input)",
          "4421:  req.SetContext(ctx)",
          "4422:  req.ApplyOptions(opts...)",
          "4423:  return out, req.Send()",
          "4424: }",
          "4426: const opUpdateRoutingProfileDefaultOutboundQueue = \"UpdateRoutingProfileDefaultOutboundQueue\"",
          "4452: func (c *Connect) UpdateRoutingProfileDefaultOutboundQueueRequest(input *UpdateRoutingProfileDefaultOutboundQueueInput) (req *request.Request, output *UpdateRoutingProfileDefaultOutboundQueueOutput) {",
          "4453:  op := &request.Operation{",
          "4454:   Name:       opUpdateRoutingProfileDefaultOutboundQueue,",
          "4455:   HTTPMethod: \"POST\",",
          "4456:   HTTPPath:   \"/routing-profiles/{InstanceId}/{RoutingProfileId}/default-outbound-queue\",",
          "4457:  }",
          "4459:  if input == nil {",
          "4460:   input = &UpdateRoutingProfileDefaultOutboundQueueInput{}",
          "4461:  }",
          "4463:  output = &UpdateRoutingProfileDefaultOutboundQueueOutput{}",
          "4464:  req = c.newRequest(op, input, output)",
          "4465:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "4466:  return",
          "4467: }",
          "4497: func (c *Connect) UpdateRoutingProfileDefaultOutboundQueue(input *UpdateRoutingProfileDefaultOutboundQueueInput) (*UpdateRoutingProfileDefaultOutboundQueueOutput, error) {",
          "4498:  req, out := c.UpdateRoutingProfileDefaultOutboundQueueRequest(input)",
          "4499:  return out, req.Send()",
          "4500: }",
          "4511: func (c *Connect) UpdateRoutingProfileDefaultOutboundQueueWithContext(ctx aws.Context, input *UpdateRoutingProfileDefaultOutboundQueueInput, opts ...request.Option) (*UpdateRoutingProfileDefaultOutboundQueueOutput, error) {",
          "4512:  req, out := c.UpdateRoutingProfileDefaultOutboundQueueRequest(input)",
          "4513:  req.SetContext(ctx)",
          "4514:  req.ApplyOptions(opts...)",
          "4515:  return out, req.Send()",
          "4516: }",
          "4518: const opUpdateRoutingProfileName = \"UpdateRoutingProfileName\"",
          "4544: func (c *Connect) UpdateRoutingProfileNameRequest(input *UpdateRoutingProfileNameInput) (req *request.Request, output *UpdateRoutingProfileNameOutput) {",
          "4545:  op := &request.Operation{",
          "4546:   Name:       opUpdateRoutingProfileName,",
          "4547:   HTTPMethod: \"POST\",",
          "4548:   HTTPPath:   \"/routing-profiles/{InstanceId}/{RoutingProfileId}/name\",",
          "4549:  }",
          "4551:  if input == nil {",
          "4552:   input = &UpdateRoutingProfileNameInput{}",
          "4553:  }",
          "4555:  output = &UpdateRoutingProfileNameOutput{}",
          "4556:  req = c.newRequest(op, input, output)",
          "4557:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "4558:  return",
          "4559: }",
          "4593: func (c *Connect) UpdateRoutingProfileName(input *UpdateRoutingProfileNameInput) (*UpdateRoutingProfileNameOutput, error) {",
          "4594:  req, out := c.UpdateRoutingProfileNameRequest(input)",
          "4595:  return out, req.Send()",
          "4596: }",
          "4607: func (c *Connect) UpdateRoutingProfileNameWithContext(ctx aws.Context, input *UpdateRoutingProfileNameInput, opts ...request.Option) (*UpdateRoutingProfileNameOutput, error) {",
          "4608:  req, out := c.UpdateRoutingProfileNameRequest(input)",
          "4609:  req.SetContext(ctx)",
          "4610:  req.ApplyOptions(opts...)",
          "4611:  return out, req.Send()",
          "4612: }",
          "4614: const opUpdateRoutingProfileQueues = \"UpdateRoutingProfileQueues\"",
          "4640: func (c *Connect) UpdateRoutingProfileQueuesRequest(input *UpdateRoutingProfileQueuesInput) (req *request.Request, output *UpdateRoutingProfileQueuesOutput) {",
          "4641:  op := &request.Operation{",
          "4642:   Name:       opUpdateRoutingProfileQueues,",
          "4643:   HTTPMethod: \"POST\",",
          "4644:   HTTPPath:   \"/routing-profiles/{InstanceId}/{RoutingProfileId}/queues\",",
          "4645:  }",
          "4647:  if input == nil {",
          "4648:   input = &UpdateRoutingProfileQueuesInput{}",
          "4649:  }",
          "4651:  output = &UpdateRoutingProfileQueuesOutput{}",
          "4652:  req = c.newRequest(op, input, output)",
          "4653:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "4654:  return",
          "4655: }",
          "4685: func (c *Connect) UpdateRoutingProfileQueues(input *UpdateRoutingProfileQueuesInput) (*UpdateRoutingProfileQueuesOutput, error) {",
          "4686:  req, out := c.UpdateRoutingProfileQueuesRequest(input)",
          "4687:  return out, req.Send()",
          "4688: }",
          "4699: func (c *Connect) UpdateRoutingProfileQueuesWithContext(ctx aws.Context, input *UpdateRoutingProfileQueuesInput, opts ...request.Option) (*UpdateRoutingProfileQueuesOutput, error) {",
          "4700:  req, out := c.UpdateRoutingProfileQueuesRequest(input)",
          "4701:  req.SetContext(ctx)",
          "4702:  req.ApplyOptions(opts...)",
          "4703:  return out, req.Send()",
          "4704: }",
          "4706: const opUpdateUserHierarchy = \"UpdateUserHierarchy\"",
          "4732: func (c *Connect) UpdateUserHierarchyRequest(input *UpdateUserHierarchyInput) (req *request.Request, output *UpdateUserHierarchyOutput) {",
          "4733:  op := &request.Operation{",
          "4734:   Name:       opUpdateUserHierarchy,",
          "4735:   HTTPMethod: \"POST\",",
          "4736:   HTTPPath:   \"/users/{InstanceId}/{UserId}/hierarchy\",",
          "4737:  }",
          "4739:  if input == nil {",
          "4740:   input = &UpdateUserHierarchyInput{}",
          "4741:  }",
          "4743:  output = &UpdateUserHierarchyOutput{}",
          "4744:  req = c.newRequest(op, input, output)",
          "4745:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "4746:  return",
          "4747: }",
          "4777: func (c *Connect) UpdateUserHierarchy(input *UpdateUserHierarchyInput) (*UpdateUserHierarchyOutput, error) {",
          "4778:  req, out := c.UpdateUserHierarchyRequest(input)",
          "4779:  return out, req.Send()",
          "4780: }",
          "4791: func (c *Connect) UpdateUserHierarchyWithContext(ctx aws.Context, input *UpdateUserHierarchyInput, opts ...request.Option) (*UpdateUserHierarchyOutput, error) {",
          "4792:  req, out := c.UpdateUserHierarchyRequest(input)",
          "4793:  req.SetContext(ctx)",
          "4794:  req.ApplyOptions(opts...)",
          "4795:  return out, req.Send()",
          "4796: }",
          "4798: const opUpdateUserIdentityInfo = \"UpdateUserIdentityInfo\"",
          "4824: func (c *Connect) UpdateUserIdentityInfoRequest(input *UpdateUserIdentityInfoInput) (req *request.Request, output *UpdateUserIdentityInfoOutput) {",
          "4825:  op := &request.Operation{",
          "4826:   Name:       opUpdateUserIdentityInfo,",
          "4827:   HTTPMethod: \"POST\",",
          "4828:   HTTPPath:   \"/users/{InstanceId}/{UserId}/identity-info\",",
          "4829:  }",
          "4831:  if input == nil {",
          "4832:   input = &UpdateUserIdentityInfoInput{}",
          "4833:  }",
          "4835:  output = &UpdateUserIdentityInfoOutput{}",
          "4836:  req = c.newRequest(op, input, output)",
          "4837:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "4838:  return",
          "4839: }",
          "4877: func (c *Connect) UpdateUserIdentityInfo(input *UpdateUserIdentityInfoInput) (*UpdateUserIdentityInfoOutput, error) {",
          "4878:  req, out := c.UpdateUserIdentityInfoRequest(input)",
          "4879:  return out, req.Send()",
          "4880: }",
          "4891: func (c *Connect) UpdateUserIdentityInfoWithContext(ctx aws.Context, input *UpdateUserIdentityInfoInput, opts ...request.Option) (*UpdateUserIdentityInfoOutput, error) {",
          "4892:  req, out := c.UpdateUserIdentityInfoRequest(input)",
          "4893:  req.SetContext(ctx)",
          "4894:  req.ApplyOptions(opts...)",
          "4895:  return out, req.Send()",
          "4896: }",
          "4898: const opUpdateUserPhoneConfig = \"UpdateUserPhoneConfig\"",
          "4924: func (c *Connect) UpdateUserPhoneConfigRequest(input *UpdateUserPhoneConfigInput) (req *request.Request, output *UpdateUserPhoneConfigOutput) {",
          "4925:  op := &request.Operation{",
          "4926:   Name:       opUpdateUserPhoneConfig,",
          "4927:   HTTPMethod: \"POST\",",
          "4928:   HTTPPath:   \"/users/{InstanceId}/{UserId}/phone-config\",",
          "4929:  }",
          "4931:  if input == nil {",
          "4932:   input = &UpdateUserPhoneConfigInput{}",
          "4933:  }",
          "4935:  output = &UpdateUserPhoneConfigOutput{}",
          "4936:  req = c.newRequest(op, input, output)",
          "4937:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "4938:  return",
          "4939: }",
          "4969: func (c *Connect) UpdateUserPhoneConfig(input *UpdateUserPhoneConfigInput) (*UpdateUserPhoneConfigOutput, error) {",
          "4970:  req, out := c.UpdateUserPhoneConfigRequest(input)",
          "4971:  return out, req.Send()",
          "4972: }",
          "4983: func (c *Connect) UpdateUserPhoneConfigWithContext(ctx aws.Context, input *UpdateUserPhoneConfigInput, opts ...request.Option) (*UpdateUserPhoneConfigOutput, error) {",
          "4984:  req, out := c.UpdateUserPhoneConfigRequest(input)",
          "4985:  req.SetContext(ctx)",
          "4986:  req.ApplyOptions(opts...)",
          "4987:  return out, req.Send()",
          "4988: }",
          "4990: const opUpdateUserRoutingProfile = \"UpdateUserRoutingProfile\"",
          "5016: func (c *Connect) UpdateUserRoutingProfileRequest(input *UpdateUserRoutingProfileInput) (req *request.Request, output *UpdateUserRoutingProfileOutput) {",
          "5017:  op := &request.Operation{",
          "5018:   Name:       opUpdateUserRoutingProfile,",
          "5019:   HTTPMethod: \"POST\",",
          "5020:   HTTPPath:   \"/users/{InstanceId}/{UserId}/routing-profile\",",
          "5021:  }",
          "5023:  if input == nil {",
          "5024:   input = &UpdateUserRoutingProfileInput{}",
          "5025:  }",
          "5027:  output = &UpdateUserRoutingProfileOutput{}",
          "5028:  req = c.newRequest(op, input, output)",
          "5029:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "5030:  return",
          "5031: }",
          "5061: func (c *Connect) UpdateUserRoutingProfile(input *UpdateUserRoutingProfileInput) (*UpdateUserRoutingProfileOutput, error) {",
          "5062:  req, out := c.UpdateUserRoutingProfileRequest(input)",
          "5063:  return out, req.Send()",
          "5064: }",
          "5075: func (c *Connect) UpdateUserRoutingProfileWithContext(ctx aws.Context, input *UpdateUserRoutingProfileInput, opts ...request.Option) (*UpdateUserRoutingProfileOutput, error) {",
          "5076:  req, out := c.UpdateUserRoutingProfileRequest(input)",
          "5077:  req.SetContext(ctx)",
          "5078:  req.ApplyOptions(opts...)",
          "5079:  return out, req.Send()",
          "5080: }",
          "5082: const opUpdateUserSecurityProfiles = \"UpdateUserSecurityProfiles\"",
          "5108: func (c *Connect) UpdateUserSecurityProfilesRequest(input *UpdateUserSecurityProfilesInput) (req *request.Request, output *UpdateUserSecurityProfilesOutput) {",
          "5109:  op := &request.Operation{",
          "5110:   Name:       opUpdateUserSecurityProfiles,",
          "5111:   HTTPMethod: \"POST\",",
          "5112:   HTTPPath:   \"/users/{InstanceId}/{UserId}/security-profiles\",",
          "5113:  }",
          "5115:  if input == nil {",
          "5116:   input = &UpdateUserSecurityProfilesInput{}",
          "5117:  }",
          "5119:  output = &UpdateUserSecurityProfilesOutput{}",
          "5120:  req = c.newRequest(op, input, output)",
          "5121:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "5122:  return",
          "5123: }",
          "5153: func (c *Connect) UpdateUserSecurityProfiles(input *UpdateUserSecurityProfilesInput) (*UpdateUserSecurityProfilesOutput, error) {",
          "5154:  req, out := c.UpdateUserSecurityProfilesRequest(input)",
          "5155:  return out, req.Send()",
          "5156: }",
          "5167: func (c *Connect) UpdateUserSecurityProfilesWithContext(ctx aws.Context, input *UpdateUserSecurityProfilesInput, opts ...request.Option) (*UpdateUserSecurityProfilesOutput, error) {",
          "5168:  req, out := c.UpdateUserSecurityProfilesRequest(input)",
          "5169:  req.SetContext(ctx)",
          "5170:  req.ApplyOptions(opts...)",
          "5171:  return out, req.Send()",
          "5172: }",
          "5174: type AssociateRoutingProfileQueuesInput struct {",
          "5175:  _ struct{} `type:\"structure\"`",
          "5180:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "5185:  QueueConfigs []*RoutingProfileQueueConfig `min:\"1\" type:\"list\" required:\"true\"`",
          "5190:  RoutingProfileId *string `location:\"uri\" locationName:\"RoutingProfileId\" type:\"string\" required:\"true\"`",
          "5191: }",
          "5194: func (s AssociateRoutingProfileQueuesInput) String() string {",
          "5195:  return awsutil.Prettify(s)",
          "5196: }",
          "5199: func (s AssociateRoutingProfileQueuesInput) GoString() string {",
          "5200:  return s.String()",
          "5201: }",
          "5204: func (s *AssociateRoutingProfileQueuesInput) Validate() error {",
          "5205:  invalidParams := request.ErrInvalidParams{Context: \"AssociateRoutingProfileQueuesInput\"}",
          "5206:  if s.InstanceId == nil {",
          "5207:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "5208:  }",
          "5209:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "5210:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "5211:  }",
          "5212:  if s.QueueConfigs == nil {",
          "5213:   invalidParams.Add(request.NewErrParamRequired(\"QueueConfigs\"))",
          "5214:  }",
          "5215:  if s.QueueConfigs != nil && len(s.QueueConfigs) < 1 {",
          "5216:   invalidParams.Add(request.NewErrParamMinLen(\"QueueConfigs\", 1))",
          "5217:  }",
          "5218:  if s.RoutingProfileId == nil {",
          "5219:   invalidParams.Add(request.NewErrParamRequired(\"RoutingProfileId\"))",
          "5220:  }",
          "5221:  if s.RoutingProfileId != nil && len(*s.RoutingProfileId) < 1 {",
          "5222:   invalidParams.Add(request.NewErrParamMinLen(\"RoutingProfileId\", 1))",
          "5223:  }",
          "5224:  if s.QueueConfigs != nil {",
          "5225:   for i, v := range s.QueueConfigs {",
          "5226:    if v == nil {",
          "5227:     continue",
          "5228:    }",
          "5229:    if err := v.Validate(); err != nil {",
          "5230:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"QueueConfigs\", i), err.(request.ErrInvalidParams))",
          "5231:    }",
          "5232:   }",
          "5233:  }",
          "5235:  if invalidParams.Len() > 0 {",
          "5236:   return invalidParams",
          "5237:  }",
          "5238:  return nil",
          "5239: }",
          "5242: func (s *AssociateRoutingProfileQueuesInput) SetInstanceId(v string) *AssociateRoutingProfileQueuesInput {",
          "5243:  s.InstanceId = &v",
          "5244:  return s",
          "5245: }",
          "5248: func (s *AssociateRoutingProfileQueuesInput) SetQueueConfigs(v []*RoutingProfileQueueConfig) *AssociateRoutingProfileQueuesInput {",
          "5249:  s.QueueConfigs = v",
          "5250:  return s",
          "5251: }",
          "5254: func (s *AssociateRoutingProfileQueuesInput) SetRoutingProfileId(v string) *AssociateRoutingProfileQueuesInput {",
          "5255:  s.RoutingProfileId = &v",
          "5256:  return s",
          "5257: }",
          "5259: type AssociateRoutingProfileQueuesOutput struct {",
          "5260:  _ struct{} `type:\"structure\"`",
          "5261: }",
          "5264: func (s AssociateRoutingProfileQueuesOutput) String() string {",
          "5265:  return awsutil.Prettify(s)",
          "5266: }",
          "5269: func (s AssociateRoutingProfileQueuesOutput) GoString() string {",
          "5270:  return s.String()",
          "5271: }",
          "5274: type ChatMessage struct {",
          "5275:  _ struct{} `type:\"structure\"`",
          "5280:  Content *string `min:\"1\" type:\"string\" required:\"true\"`",
          "5285:  ContentType *string `min:\"1\" type:\"string\" required:\"true\"`",
          "5286: }",
          "5289: func (s ChatMessage) String() string {",
          "5290:  return awsutil.Prettify(s)",
          "5291: }",
          "5294: func (s ChatMessage) GoString() string {",
          "5295:  return s.String()",
          "5296: }",
          "5299: func (s *ChatMessage) Validate() error {",
          "5300:  invalidParams := request.ErrInvalidParams{Context: \"ChatMessage\"}",
          "5301:  if s.Content == nil {",
          "5302:   invalidParams.Add(request.NewErrParamRequired(\"Content\"))",
          "5303:  }",
          "5304:  if s.Content != nil && len(*s.Content) < 1 {",
          "5305:   invalidParams.Add(request.NewErrParamMinLen(\"Content\", 1))",
          "5306:  }",
          "5307:  if s.ContentType == nil {",
          "5308:   invalidParams.Add(request.NewErrParamRequired(\"ContentType\"))",
          "5309:  }",
          "5310:  if s.ContentType != nil && len(*s.ContentType) < 1 {",
          "5311:   invalidParams.Add(request.NewErrParamMinLen(\"ContentType\", 1))",
          "5312:  }",
          "5314:  if invalidParams.Len() > 0 {",
          "5315:   return invalidParams",
          "5316:  }",
          "5317:  return nil",
          "5318: }",
          "5321: func (s *ChatMessage) SetContent(v string) *ChatMessage {",
          "5322:  s.Content = &v",
          "5323:  return s",
          "5324: }",
          "5327: func (s *ChatMessage) SetContentType(v string) *ChatMessage {",
          "5328:  s.ContentType = &v",
          "5329:  return s",
          "5330: }",
          "5333: type ContactFlow struct {",
          "5334:  _ struct{} `type:\"structure\"`",
          "5337:  Arn *string `type:\"string\"`",
          "5340:  Content *string `type:\"string\"`",
          "5343:  Description *string `type:\"string\"`",
          "5346:  Id *string `type:\"string\"`",
          "5349:  Name *string `min:\"1\" type:\"string\"`",
          "5352:  Tags map[string]*string `min:\"1\" type:\"map\"`",
          "5357:  Type *string `type:\"string\" enum:\"ContactFlowType\"`",
          "5358: }",
          "5361: func (s ContactFlow) String() string {",
          "5362:  return awsutil.Prettify(s)",
          "5363: }",
          "5366: func (s ContactFlow) GoString() string {",
          "5367:  return s.String()",
          "5368: }",
          "5371: func (s *ContactFlow) SetArn(v string) *ContactFlow {",
          "5372:  s.Arn = &v",
          "5373:  return s",
          "5374: }",
          "5377: func (s *ContactFlow) SetContent(v string) *ContactFlow {",
          "5378:  s.Content = &v",
          "5379:  return s",
          "5380: }",
          "5383: func (s *ContactFlow) SetDescription(v string) *ContactFlow {",
          "5384:  s.Description = &v",
          "5385:  return s",
          "5386: }",
          "5389: func (s *ContactFlow) SetId(v string) *ContactFlow {",
          "5390:  s.Id = &v",
          "5391:  return s",
          "5392: }",
          "5395: func (s *ContactFlow) SetName(v string) *ContactFlow {",
          "5396:  s.Name = &v",
          "5397:  return s",
          "5398: }",
          "5401: func (s *ContactFlow) SetTags(v map[string]*string) *ContactFlow {",
          "5402:  s.Tags = v",
          "5403:  return s",
          "5404: }",
          "5407: func (s *ContactFlow) SetType(v string) *ContactFlow {",
          "5408:  s.Type = &v",
          "5409:  return s",
          "5410: }",
          "5413: type ContactFlowNotPublishedException struct {",
          "5414:  _            struct{}                  `type:\"structure\"`",
          "5415:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "5417:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "5418: }",
          "5421: func (s ContactFlowNotPublishedException) String() string {",
          "5422:  return awsutil.Prettify(s)",
          "5423: }",
          "5426: func (s ContactFlowNotPublishedException) GoString() string {",
          "5427:  return s.String()",
          "5428: }",
          "5430: func newErrorContactFlowNotPublishedException(v protocol.ResponseMetadata) error {",
          "5431:  return &ContactFlowNotPublishedException{",
          "5432:   RespMetadata: v,",
          "5433:  }",
          "5434: }",
          "5437: func (s *ContactFlowNotPublishedException) Code() string {",
          "5438:  return \"ContactFlowNotPublishedException\"",
          "5439: }",
          "5442: func (s *ContactFlowNotPublishedException) Message() string {",
          "5443:  if s.Message_ != nil {",
          "5444:   return *s.Message_",
          "5445:  }",
          "5446:  return \"\"",
          "5447: }",
          "5450: func (s *ContactFlowNotPublishedException) OrigErr() error {",
          "5451:  return nil",
          "5452: }",
          "5454: func (s *ContactFlowNotPublishedException) Error() string {",
          "5455:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "5456: }",
          "5459: func (s *ContactFlowNotPublishedException) StatusCode() int {",
          "5460:  return s.RespMetadata.StatusCode",
          "5461: }",
          "5464: func (s *ContactFlowNotPublishedException) RequestID() string {",
          "5465:  return s.RespMetadata.RequestID",
          "5466: }",
          "5469: type ContactFlowSummary struct {",
          "5470:  _ struct{} `type:\"structure\"`",
          "5473:  Arn *string `type:\"string\"`",
          "5476:  ContactFlowType *string `type:\"string\" enum:\"ContactFlowType\"`",
          "5479:  Id *string `type:\"string\"`",
          "5482:  Name *string `min:\"1\" type:\"string\"`",
          "5483: }",
          "5486: func (s ContactFlowSummary) String() string {",
          "5487:  return awsutil.Prettify(s)",
          "5488: }",
          "5491: func (s ContactFlowSummary) GoString() string {",
          "5492:  return s.String()",
          "5493: }",
          "5496: func (s *ContactFlowSummary) SetArn(v string) *ContactFlowSummary {",
          "5497:  s.Arn = &v",
          "5498:  return s",
          "5499: }",
          "5502: func (s *ContactFlowSummary) SetContactFlowType(v string) *ContactFlowSummary {",
          "5503:  s.ContactFlowType = &v",
          "5504:  return s",
          "5505: }",
          "5508: func (s *ContactFlowSummary) SetId(v string) *ContactFlowSummary {",
          "5509:  s.Id = &v",
          "5510:  return s",
          "5511: }",
          "5514: func (s *ContactFlowSummary) SetName(v string) *ContactFlowSummary {",
          "5515:  s.Name = &v",
          "5516:  return s",
          "5517: }",
          "5520: type ContactNotFoundException struct {",
          "5521:  _            struct{}                  `type:\"structure\"`",
          "5522:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "5525:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "5526: }",
          "5529: func (s ContactNotFoundException) String() string {",
          "5530:  return awsutil.Prettify(s)",
          "5531: }",
          "5534: func (s ContactNotFoundException) GoString() string {",
          "5535:  return s.String()",
          "5536: }",
          "5538: func newErrorContactNotFoundException(v protocol.ResponseMetadata) error {",
          "5539:  return &ContactNotFoundException{",
          "5540:   RespMetadata: v,",
          "5541:  }",
          "5542: }",
          "5545: func (s *ContactNotFoundException) Code() string {",
          "5546:  return \"ContactNotFoundException\"",
          "5547: }",
          "5550: func (s *ContactNotFoundException) Message() string {",
          "5551:  if s.Message_ != nil {",
          "5552:   return *s.Message_",
          "5553:  }",
          "5554:  return \"\"",
          "5555: }",
          "5558: func (s *ContactNotFoundException) OrigErr() error {",
          "5559:  return nil",
          "5560: }",
          "5562: func (s *ContactNotFoundException) Error() string {",
          "5563:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "5564: }",
          "5567: func (s *ContactNotFoundException) StatusCode() int {",
          "5568:  return s.RespMetadata.StatusCode",
          "5569: }",
          "5572: func (s *ContactNotFoundException) RequestID() string {",
          "5573:  return s.RespMetadata.RequestID",
          "5574: }",
          "5576: type CreateContactFlowInput struct {",
          "5577:  _ struct{} `type:\"structure\"`",
          "5582:  Content *string `type:\"string\" required:\"true\"`",
          "5585:  Description *string `type:\"string\"`",
          "5590:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "5595:  Name *string `min:\"1\" type:\"string\" required:\"true\"`",
          "5598:  Tags map[string]*string `min:\"1\" type:\"map\"`",
          "5605:  Type *string `type:\"string\" required:\"true\" enum:\"ContactFlowType\"`",
          "5606: }",
          "5609: func (s CreateContactFlowInput) String() string {",
          "5610:  return awsutil.Prettify(s)",
          "5611: }",
          "5614: func (s CreateContactFlowInput) GoString() string {",
          "5615:  return s.String()",
          "5616: }",
          "5619: func (s *CreateContactFlowInput) Validate() error {",
          "5620:  invalidParams := request.ErrInvalidParams{Context: \"CreateContactFlowInput\"}",
          "5621:  if s.Content == nil {",
          "5622:   invalidParams.Add(request.NewErrParamRequired(\"Content\"))",
          "5623:  }",
          "5624:  if s.InstanceId == nil {",
          "5625:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "5626:  }",
          "5627:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "5628:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "5629:  }",
          "5630:  if s.Name == nil {",
          "5631:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "5632:  }",
          "5633:  if s.Name != nil && len(*s.Name) < 1 {",
          "5634:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "5635:  }",
          "5636:  if s.Tags != nil && len(s.Tags) < 1 {",
          "5637:   invalidParams.Add(request.NewErrParamMinLen(\"Tags\", 1))",
          "5638:  }",
          "5639:  if s.Type == nil {",
          "5640:   invalidParams.Add(request.NewErrParamRequired(\"Type\"))",
          "5641:  }",
          "5643:  if invalidParams.Len() > 0 {",
          "5644:   return invalidParams",
          "5645:  }",
          "5646:  return nil",
          "5647: }",
          "5650: func (s *CreateContactFlowInput) SetContent(v string) *CreateContactFlowInput {",
          "5651:  s.Content = &v",
          "5652:  return s",
          "5653: }",
          "5656: func (s *CreateContactFlowInput) SetDescription(v string) *CreateContactFlowInput {",
          "5657:  s.Description = &v",
          "5658:  return s",
          "5659: }",
          "5662: func (s *CreateContactFlowInput) SetInstanceId(v string) *CreateContactFlowInput {",
          "5663:  s.InstanceId = &v",
          "5664:  return s",
          "5665: }",
          "5668: func (s *CreateContactFlowInput) SetName(v string) *CreateContactFlowInput {",
          "5669:  s.Name = &v",
          "5670:  return s",
          "5671: }",
          "5674: func (s *CreateContactFlowInput) SetTags(v map[string]*string) *CreateContactFlowInput {",
          "5675:  s.Tags = v",
          "5676:  return s",
          "5677: }",
          "5680: func (s *CreateContactFlowInput) SetType(v string) *CreateContactFlowInput {",
          "5681:  s.Type = &v",
          "5682:  return s",
          "5683: }",
          "5685: type CreateContactFlowOutput struct {",
          "5686:  _ struct{} `type:\"structure\"`",
          "5689:  ContactFlowArn *string `type:\"string\"`",
          "5692:  ContactFlowId *string `type:\"string\"`",
          "5693: }",
          "5696: func (s CreateContactFlowOutput) String() string {",
          "5697:  return awsutil.Prettify(s)",
          "5698: }",
          "5701: func (s CreateContactFlowOutput) GoString() string {",
          "5702:  return s.String()",
          "5703: }",
          "5706: func (s *CreateContactFlowOutput) SetContactFlowArn(v string) *CreateContactFlowOutput {",
          "5707:  s.ContactFlowArn = &v",
          "5708:  return s",
          "5709: }",
          "5712: func (s *CreateContactFlowOutput) SetContactFlowId(v string) *CreateContactFlowOutput {",
          "5713:  s.ContactFlowId = &v",
          "5714:  return s",
          "5715: }",
          "5717: type CreateRoutingProfileInput struct {",
          "5718:  _ struct{} `type:\"structure\"`",
          "5723:  DefaultOutboundQueueId *string `type:\"string\" required:\"true\"`",
          "5728:  Description *string `min:\"1\" type:\"string\" required:\"true\"`",
          "5733:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "5739:  MediaConcurrencies []*MediaConcurrency `type:\"list\" required:\"true\"`",
          "5744:  Name *string `min:\"1\" type:\"string\" required:\"true\"`",
          "5748:  QueueConfigs []*RoutingProfileQueueConfig `min:\"1\" type:\"list\"`",
          "5751:  Tags map[string]*string `min:\"1\" type:\"map\"`",
          "5752: }",
          "5755: func (s CreateRoutingProfileInput) String() string {",
          "5756:  return awsutil.Prettify(s)",
          "5757: }",
          "5760: func (s CreateRoutingProfileInput) GoString() string {",
          "5761:  return s.String()",
          "5762: }",
          "5765: func (s *CreateRoutingProfileInput) Validate() error {",
          "5766:  invalidParams := request.ErrInvalidParams{Context: \"CreateRoutingProfileInput\"}",
          "5767:  if s.DefaultOutboundQueueId == nil {",
          "5768:   invalidParams.Add(request.NewErrParamRequired(\"DefaultOutboundQueueId\"))",
          "5769:  }",
          "5770:  if s.Description == nil {",
          "5771:   invalidParams.Add(request.NewErrParamRequired(\"Description\"))",
          "5772:  }",
          "5773:  if s.Description != nil && len(*s.Description) < 1 {",
          "5774:   invalidParams.Add(request.NewErrParamMinLen(\"Description\", 1))",
          "5775:  }",
          "5776:  if s.InstanceId == nil {",
          "5777:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "5778:  }",
          "5779:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "5780:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "5781:  }",
          "5782:  if s.MediaConcurrencies == nil {",
          "5783:   invalidParams.Add(request.NewErrParamRequired(\"MediaConcurrencies\"))",
          "5784:  }",
          "5785:  if s.Name == nil {",
          "5786:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "5787:  }",
          "5788:  if s.Name != nil && len(*s.Name) < 1 {",
          "5789:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "5790:  }",
          "5791:  if s.QueueConfigs != nil && len(s.QueueConfigs) < 1 {",
          "5792:   invalidParams.Add(request.NewErrParamMinLen(\"QueueConfigs\", 1))",
          "5793:  }",
          "5794:  if s.Tags != nil && len(s.Tags) < 1 {",
          "5795:   invalidParams.Add(request.NewErrParamMinLen(\"Tags\", 1))",
          "5796:  }",
          "5797:  if s.MediaConcurrencies != nil {",
          "5798:   for i, v := range s.MediaConcurrencies {",
          "5799:    if v == nil {",
          "5800:     continue",
          "5801:    }",
          "5802:    if err := v.Validate(); err != nil {",
          "5803:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"MediaConcurrencies\", i), err.(request.ErrInvalidParams))",
          "5804:    }",
          "5805:   }",
          "5806:  }",
          "5807:  if s.QueueConfigs != nil {",
          "5808:   for i, v := range s.QueueConfigs {",
          "5809:    if v == nil {",
          "5810:     continue",
          "5811:    }",
          "5812:    if err := v.Validate(); err != nil {",
          "5813:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"QueueConfigs\", i), err.(request.ErrInvalidParams))",
          "5814:    }",
          "5815:   }",
          "5816:  }",
          "5818:  if invalidParams.Len() > 0 {",
          "5819:   return invalidParams",
          "5820:  }",
          "5821:  return nil",
          "5822: }",
          "5825: func (s *CreateRoutingProfileInput) SetDefaultOutboundQueueId(v string) *CreateRoutingProfileInput {",
          "5826:  s.DefaultOutboundQueueId = &v",
          "5827:  return s",
          "5828: }",
          "5831: func (s *CreateRoutingProfileInput) SetDescription(v string) *CreateRoutingProfileInput {",
          "5832:  s.Description = &v",
          "5833:  return s",
          "5834: }",
          "5837: func (s *CreateRoutingProfileInput) SetInstanceId(v string) *CreateRoutingProfileInput {",
          "5838:  s.InstanceId = &v",
          "5839:  return s",
          "5840: }",
          "5843: func (s *CreateRoutingProfileInput) SetMediaConcurrencies(v []*MediaConcurrency) *CreateRoutingProfileInput {",
          "5844:  s.MediaConcurrencies = v",
          "5845:  return s",
          "5846: }",
          "5849: func (s *CreateRoutingProfileInput) SetName(v string) *CreateRoutingProfileInput {",
          "5850:  s.Name = &v",
          "5851:  return s",
          "5852: }",
          "5855: func (s *CreateRoutingProfileInput) SetQueueConfigs(v []*RoutingProfileQueueConfig) *CreateRoutingProfileInput {",
          "5856:  s.QueueConfigs = v",
          "5857:  return s",
          "5858: }",
          "5861: func (s *CreateRoutingProfileInput) SetTags(v map[string]*string) *CreateRoutingProfileInput {",
          "5862:  s.Tags = v",
          "5863:  return s",
          "5864: }",
          "5866: type CreateRoutingProfileOutput struct {",
          "5867:  _ struct{} `type:\"structure\"`",
          "5870:  RoutingProfileArn *string `type:\"string\"`",
          "5873:  RoutingProfileId *string `type:\"string\"`",
          "5874: }",
          "5877: func (s CreateRoutingProfileOutput) String() string {",
          "5878:  return awsutil.Prettify(s)",
          "5879: }",
          "5882: func (s CreateRoutingProfileOutput) GoString() string {",
          "5883:  return s.String()",
          "5884: }",
          "5887: func (s *CreateRoutingProfileOutput) SetRoutingProfileArn(v string) *CreateRoutingProfileOutput {",
          "5888:  s.RoutingProfileArn = &v",
          "5889:  return s",
          "5890: }",
          "5893: func (s *CreateRoutingProfileOutput) SetRoutingProfileId(v string) *CreateRoutingProfileOutput {",
          "5894:  s.RoutingProfileId = &v",
          "5895:  return s",
          "5896: }",
          "5898: type CreateUserInput struct {",
          "5899:  _ struct{} `type:\"structure\"`",
          "5911:  DirectoryUserId *string `type:\"string\"`",
          "5914:  HierarchyGroupId *string `type:\"string\"`",
          "5917:  IdentityInfo *UserIdentityInfo `type:\"structure\"`",
          "5922:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "5927:  Password *string `type:\"string\"`",
          "5932:  PhoneConfig *UserPhoneConfig `type:\"structure\" required:\"true\"`",
          "5937:  RoutingProfileId *string `type:\"string\" required:\"true\"`",
          "5942:  SecurityProfileIds []*string `min:\"1\" type:\"list\" required:\"true\"`",
          "5945:  Tags map[string]*string `min:\"1\" type:\"map\"`",
          "5953:  Username *string `min:\"1\" type:\"string\" required:\"true\"`",
          "5954: }",
          "5957: func (s CreateUserInput) String() string {",
          "5958:  return awsutil.Prettify(s)",
          "5959: }",
          "5962: func (s CreateUserInput) GoString() string {",
          "5963:  return s.String()",
          "5964: }",
          "5967: func (s *CreateUserInput) Validate() error {",
          "5968:  invalidParams := request.ErrInvalidParams{Context: \"CreateUserInput\"}",
          "5969:  if s.InstanceId == nil {",
          "5970:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "5971:  }",
          "5972:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "5973:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "5974:  }",
          "5975:  if s.PhoneConfig == nil {",
          "5976:   invalidParams.Add(request.NewErrParamRequired(\"PhoneConfig\"))",
          "5977:  }",
          "5978:  if s.RoutingProfileId == nil {",
          "5979:   invalidParams.Add(request.NewErrParamRequired(\"RoutingProfileId\"))",
          "5980:  }",
          "5981:  if s.SecurityProfileIds == nil {",
          "5982:   invalidParams.Add(request.NewErrParamRequired(\"SecurityProfileIds\"))",
          "5983:  }",
          "5984:  if s.SecurityProfileIds != nil && len(s.SecurityProfileIds) < 1 {",
          "5985:   invalidParams.Add(request.NewErrParamMinLen(\"SecurityProfileIds\", 1))",
          "5986:  }",
          "5987:  if s.Tags != nil && len(s.Tags) < 1 {",
          "5988:   invalidParams.Add(request.NewErrParamMinLen(\"Tags\", 1))",
          "5989:  }",
          "5990:  if s.Username == nil {",
          "5991:   invalidParams.Add(request.NewErrParamRequired(\"Username\"))",
          "5992:  }",
          "5993:  if s.Username != nil && len(*s.Username) < 1 {",
          "5994:   invalidParams.Add(request.NewErrParamMinLen(\"Username\", 1))",
          "5995:  }",
          "5996:  if s.IdentityInfo != nil {",
          "5997:   if err := s.IdentityInfo.Validate(); err != nil {",
          "5998:    invalidParams.AddNested(\"IdentityInfo\", err.(request.ErrInvalidParams))",
          "5999:   }",
          "6000:  }",
          "6001:  if s.PhoneConfig != nil {",
          "6002:   if err := s.PhoneConfig.Validate(); err != nil {",
          "6003:    invalidParams.AddNested(\"PhoneConfig\", err.(request.ErrInvalidParams))",
          "6004:   }",
          "6005:  }",
          "6007:  if invalidParams.Len() > 0 {",
          "6008:   return invalidParams",
          "6009:  }",
          "6010:  return nil",
          "6011: }",
          "6014: func (s *CreateUserInput) SetDirectoryUserId(v string) *CreateUserInput {",
          "6015:  s.DirectoryUserId = &v",
          "6016:  return s",
          "6017: }",
          "6020: func (s *CreateUserInput) SetHierarchyGroupId(v string) *CreateUserInput {",
          "6021:  s.HierarchyGroupId = &v",
          "6022:  return s",
          "6023: }",
          "6026: func (s *CreateUserInput) SetIdentityInfo(v *UserIdentityInfo) *CreateUserInput {",
          "6027:  s.IdentityInfo = v",
          "6028:  return s",
          "6029: }",
          "6032: func (s *CreateUserInput) SetInstanceId(v string) *CreateUserInput {",
          "6033:  s.InstanceId = &v",
          "6034:  return s",
          "6035: }",
          "6038: func (s *CreateUserInput) SetPassword(v string) *CreateUserInput {",
          "6039:  s.Password = &v",
          "6040:  return s",
          "6041: }",
          "6044: func (s *CreateUserInput) SetPhoneConfig(v *UserPhoneConfig) *CreateUserInput {",
          "6045:  s.PhoneConfig = v",
          "6046:  return s",
          "6047: }",
          "6050: func (s *CreateUserInput) SetRoutingProfileId(v string) *CreateUserInput {",
          "6051:  s.RoutingProfileId = &v",
          "6052:  return s",
          "6053: }",
          "6056: func (s *CreateUserInput) SetSecurityProfileIds(v []*string) *CreateUserInput {",
          "6057:  s.SecurityProfileIds = v",
          "6058:  return s",
          "6059: }",
          "6062: func (s *CreateUserInput) SetTags(v map[string]*string) *CreateUserInput {",
          "6063:  s.Tags = v",
          "6064:  return s",
          "6065: }",
          "6068: func (s *CreateUserInput) SetUsername(v string) *CreateUserInput {",
          "6069:  s.Username = &v",
          "6070:  return s",
          "6071: }",
          "6073: type CreateUserOutput struct {",
          "6074:  _ struct{} `type:\"structure\"`",
          "6077:  UserArn *string `type:\"string\"`",
          "6080:  UserId *string `type:\"string\"`",
          "6081: }",
          "6084: func (s CreateUserOutput) String() string {",
          "6085:  return awsutil.Prettify(s)",
          "6086: }",
          "6089: func (s CreateUserOutput) GoString() string {",
          "6090:  return s.String()",
          "6091: }",
          "6094: func (s *CreateUserOutput) SetUserArn(v string) *CreateUserOutput {",
          "6095:  s.UserArn = &v",
          "6096:  return s",
          "6097: }",
          "6100: func (s *CreateUserOutput) SetUserId(v string) *CreateUserOutput {",
          "6101:  s.UserId = &v",
          "6102:  return s",
          "6103: }",
          "6106: type Credentials struct {",
          "6107:  _ struct{} `type:\"structure\"`",
          "6110:  AccessToken *string `type:\"string\" sensitive:\"true\"`",
          "6114:  AccessTokenExpiration *time.Time `type:\"timestamp\"`",
          "6117:  RefreshToken *string `type:\"string\" sensitive:\"true\"`",
          "6120:  RefreshTokenExpiration *time.Time `type:\"timestamp\"`",
          "6121: }",
          "6124: func (s Credentials) String() string {",
          "6125:  return awsutil.Prettify(s)",
          "6126: }",
          "6129: func (s Credentials) GoString() string {",
          "6130:  return s.String()",
          "6131: }",
          "6134: func (s *Credentials) SetAccessToken(v string) *Credentials {",
          "6135:  s.AccessToken = &v",
          "6136:  return s",
          "6137: }",
          "6140: func (s *Credentials) SetAccessTokenExpiration(v time.Time) *Credentials {",
          "6141:  s.AccessTokenExpiration = &v",
          "6142:  return s",
          "6143: }",
          "6146: func (s *Credentials) SetRefreshToken(v string) *Credentials {",
          "6147:  s.RefreshToken = &v",
          "6148:  return s",
          "6149: }",
          "6152: func (s *Credentials) SetRefreshTokenExpiration(v time.Time) *Credentials {",
          "6153:  s.RefreshTokenExpiration = &v",
          "6154:  return s",
          "6155: }",
          "6160: type CurrentMetric struct {",
          "6161:  _ struct{} `type:\"structure\"`",
          "6164:  Name *string `type:\"string\" enum:\"CurrentMetricName\"`",
          "6167:  Unit *string `type:\"string\" enum:\"Unit\"`",
          "6168: }",
          "6171: func (s CurrentMetric) String() string {",
          "6172:  return awsutil.Prettify(s)",
          "6173: }",
          "6176: func (s CurrentMetric) GoString() string {",
          "6177:  return s.String()",
          "6178: }",
          "6181: func (s *CurrentMetric) SetName(v string) *CurrentMetric {",
          "6182:  s.Name = &v",
          "6183:  return s",
          "6184: }",
          "6187: func (s *CurrentMetric) SetUnit(v string) *CurrentMetric {",
          "6188:  s.Unit = &v",
          "6189:  return s",
          "6190: }",
          "6193: type CurrentMetricData struct {",
          "6194:  _ struct{} `type:\"structure\"`",
          "6197:  Metric *CurrentMetric `type:\"structure\"`",
          "6200:  Value *float64 `type:\"double\"`",
          "6201: }",
          "6204: func (s CurrentMetricData) String() string {",
          "6205:  return awsutil.Prettify(s)",
          "6206: }",
          "6209: func (s CurrentMetricData) GoString() string {",
          "6210:  return s.String()",
          "6211: }",
          "6214: func (s *CurrentMetricData) SetMetric(v *CurrentMetric) *CurrentMetricData {",
          "6215:  s.Metric = v",
          "6216:  return s",
          "6217: }",
          "6220: func (s *CurrentMetricData) SetValue(v float64) *CurrentMetricData {",
          "6221:  s.Value = &v",
          "6222:  return s",
          "6223: }",
          "6226: type CurrentMetricResult struct {",
          "6227:  _ struct{} `type:\"structure\"`",
          "6230:  Collections []*CurrentMetricData `type:\"list\"`",
          "6233:  Dimensions *Dimensions `type:\"structure\"`",
          "6234: }",
          "6237: func (s CurrentMetricResult) String() string {",
          "6238:  return awsutil.Prettify(s)",
          "6239: }",
          "6242: func (s CurrentMetricResult) GoString() string {",
          "6243:  return s.String()",
          "6244: }",
          "6247: func (s *CurrentMetricResult) SetCollections(v []*CurrentMetricData) *CurrentMetricResult {",
          "6248:  s.Collections = v",
          "6249:  return s",
          "6250: }",
          "6253: func (s *CurrentMetricResult) SetDimensions(v *Dimensions) *CurrentMetricResult {",
          "6254:  s.Dimensions = v",
          "6255:  return s",
          "6256: }",
          "6258: type DeleteUserInput struct {",
          "6259:  _ struct{} `type:\"structure\"`",
          "6264:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "6269:  UserId *string `location:\"uri\" locationName:\"UserId\" type:\"string\" required:\"true\"`",
          "6270: }",
          "6273: func (s DeleteUserInput) String() string {",
          "6274:  return awsutil.Prettify(s)",
          "6275: }",
          "6278: func (s DeleteUserInput) GoString() string {",
          "6279:  return s.String()",
          "6280: }",
          "6283: func (s *DeleteUserInput) Validate() error {",
          "6284:  invalidParams := request.ErrInvalidParams{Context: \"DeleteUserInput\"}",
          "6285:  if s.InstanceId == nil {",
          "6286:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "6287:  }",
          "6288:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "6289:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "6290:  }",
          "6291:  if s.UserId == nil {",
          "6292:   invalidParams.Add(request.NewErrParamRequired(\"UserId\"))",
          "6293:  }",
          "6294:  if s.UserId != nil && len(*s.UserId) < 1 {",
          "6295:   invalidParams.Add(request.NewErrParamMinLen(\"UserId\", 1))",
          "6296:  }",
          "6298:  if invalidParams.Len() > 0 {",
          "6299:   return invalidParams",
          "6300:  }",
          "6301:  return nil",
          "6302: }",
          "6305: func (s *DeleteUserInput) SetInstanceId(v string) *DeleteUserInput {",
          "6306:  s.InstanceId = &v",
          "6307:  return s",
          "6308: }",
          "6311: func (s *DeleteUserInput) SetUserId(v string) *DeleteUserInput {",
          "6312:  s.UserId = &v",
          "6313:  return s",
          "6314: }",
          "6316: type DeleteUserOutput struct {",
          "6317:  _ struct{} `type:\"structure\"`",
          "6318: }",
          "6321: func (s DeleteUserOutput) String() string {",
          "6322:  return awsutil.Prettify(s)",
          "6323: }",
          "6326: func (s DeleteUserOutput) GoString() string {",
          "6327:  return s.String()",
          "6328: }",
          "6330: type DescribeContactFlowInput struct {",
          "6331:  _ struct{} `type:\"structure\"`",
          "6336:  ContactFlowId *string `location:\"uri\" locationName:\"ContactFlowId\" type:\"string\" required:\"true\"`",
          "6341:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "6342: }",
          "6345: func (s DescribeContactFlowInput) String() string {",
          "6346:  return awsutil.Prettify(s)",
          "6347: }",
          "6350: func (s DescribeContactFlowInput) GoString() string {",
          "6351:  return s.String()",
          "6352: }",
          "6355: func (s *DescribeContactFlowInput) Validate() error {",
          "6356:  invalidParams := request.ErrInvalidParams{Context: \"DescribeContactFlowInput\"}",
          "6357:  if s.ContactFlowId == nil {",
          "6358:   invalidParams.Add(request.NewErrParamRequired(\"ContactFlowId\"))",
          "6359:  }",
          "6360:  if s.ContactFlowId != nil && len(*s.ContactFlowId) < 1 {",
          "6361:   invalidParams.Add(request.NewErrParamMinLen(\"ContactFlowId\", 1))",
          "6362:  }",
          "6363:  if s.InstanceId == nil {",
          "6364:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "6365:  }",
          "6366:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "6367:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "6368:  }",
          "6370:  if invalidParams.Len() > 0 {",
          "6371:   return invalidParams",
          "6372:  }",
          "6373:  return nil",
          "6374: }",
          "6377: func (s *DescribeContactFlowInput) SetContactFlowId(v string) *DescribeContactFlowInput {",
          "6378:  s.ContactFlowId = &v",
          "6379:  return s",
          "6380: }",
          "6383: func (s *DescribeContactFlowInput) SetInstanceId(v string) *DescribeContactFlowInput {",
          "6384:  s.InstanceId = &v",
          "6385:  return s",
          "6386: }",
          "6388: type DescribeContactFlowOutput struct {",
          "6389:  _ struct{} `type:\"structure\"`",
          "6392:  ContactFlow *ContactFlow `type:\"structure\"`",
          "6393: }",
          "6396: func (s DescribeContactFlowOutput) String() string {",
          "6397:  return awsutil.Prettify(s)",
          "6398: }",
          "6401: func (s DescribeContactFlowOutput) GoString() string {",
          "6402:  return s.String()",
          "6403: }",
          "6406: func (s *DescribeContactFlowOutput) SetContactFlow(v *ContactFlow) *DescribeContactFlowOutput {",
          "6407:  s.ContactFlow = v",
          "6408:  return s",
          "6409: }",
          "6411: type DescribeRoutingProfileInput struct {",
          "6412:  _ struct{} `type:\"structure\"`",
          "6417:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "6422:  RoutingProfileId *string `location:\"uri\" locationName:\"RoutingProfileId\" type:\"string\" required:\"true\"`",
          "6423: }",
          "6426: func (s DescribeRoutingProfileInput) String() string {",
          "6427:  return awsutil.Prettify(s)",
          "6428: }",
          "6431: func (s DescribeRoutingProfileInput) GoString() string {",
          "6432:  return s.String()",
          "6433: }",
          "6436: func (s *DescribeRoutingProfileInput) Validate() error {",
          "6437:  invalidParams := request.ErrInvalidParams{Context: \"DescribeRoutingProfileInput\"}",
          "6438:  if s.InstanceId == nil {",
          "6439:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "6440:  }",
          "6441:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "6442:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "6443:  }",
          "6444:  if s.RoutingProfileId == nil {",
          "6445:   invalidParams.Add(request.NewErrParamRequired(\"RoutingProfileId\"))",
          "6446:  }",
          "6447:  if s.RoutingProfileId != nil && len(*s.RoutingProfileId) < 1 {",
          "6448:   invalidParams.Add(request.NewErrParamMinLen(\"RoutingProfileId\", 1))",
          "6449:  }",
          "6451:  if invalidParams.Len() > 0 {",
          "6452:   return invalidParams",
          "6453:  }",
          "6454:  return nil",
          "6455: }",
          "6458: func (s *DescribeRoutingProfileInput) SetInstanceId(v string) *DescribeRoutingProfileInput {",
          "6459:  s.InstanceId = &v",
          "6460:  return s",
          "6461: }",
          "6464: func (s *DescribeRoutingProfileInput) SetRoutingProfileId(v string) *DescribeRoutingProfileInput {",
          "6465:  s.RoutingProfileId = &v",
          "6466:  return s",
          "6467: }",
          "6469: type DescribeRoutingProfileOutput struct {",
          "6470:  _ struct{} `type:\"structure\"`",
          "6473:  RoutingProfile *RoutingProfile `type:\"structure\"`",
          "6474: }",
          "6477: func (s DescribeRoutingProfileOutput) String() string {",
          "6478:  return awsutil.Prettify(s)",
          "6479: }",
          "6482: func (s DescribeRoutingProfileOutput) GoString() string {",
          "6483:  return s.String()",
          "6484: }",
          "6487: func (s *DescribeRoutingProfileOutput) SetRoutingProfile(v *RoutingProfile) *DescribeRoutingProfileOutput {",
          "6488:  s.RoutingProfile = v",
          "6489:  return s",
          "6490: }",
          "6492: type DescribeUserHierarchyGroupInput struct {",
          "6493:  _ struct{} `type:\"structure\"`",
          "6498:  HierarchyGroupId *string `location:\"uri\" locationName:\"HierarchyGroupId\" type:\"string\" required:\"true\"`",
          "6503:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "6504: }",
          "6507: func (s DescribeUserHierarchyGroupInput) String() string {",
          "6508:  return awsutil.Prettify(s)",
          "6509: }",
          "6512: func (s DescribeUserHierarchyGroupInput) GoString() string {",
          "6513:  return s.String()",
          "6514: }",
          "6517: func (s *DescribeUserHierarchyGroupInput) Validate() error {",
          "6518:  invalidParams := request.ErrInvalidParams{Context: \"DescribeUserHierarchyGroupInput\"}",
          "6519:  if s.HierarchyGroupId == nil {",
          "6520:   invalidParams.Add(request.NewErrParamRequired(\"HierarchyGroupId\"))",
          "6521:  }",
          "6522:  if s.HierarchyGroupId != nil && len(*s.HierarchyGroupId) < 1 {",
          "6523:   invalidParams.Add(request.NewErrParamMinLen(\"HierarchyGroupId\", 1))",
          "6524:  }",
          "6525:  if s.InstanceId == nil {",
          "6526:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "6527:  }",
          "6528:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "6529:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "6530:  }",
          "6532:  if invalidParams.Len() > 0 {",
          "6533:   return invalidParams",
          "6534:  }",
          "6535:  return nil",
          "6536: }",
          "6539: func (s *DescribeUserHierarchyGroupInput) SetHierarchyGroupId(v string) *DescribeUserHierarchyGroupInput {",
          "6540:  s.HierarchyGroupId = &v",
          "6541:  return s",
          "6542: }",
          "6545: func (s *DescribeUserHierarchyGroupInput) SetInstanceId(v string) *DescribeUserHierarchyGroupInput {",
          "6546:  s.InstanceId = &v",
          "6547:  return s",
          "6548: }",
          "6550: type DescribeUserHierarchyGroupOutput struct {",
          "6551:  _ struct{} `type:\"structure\"`",
          "6554:  HierarchyGroup *HierarchyGroup `type:\"structure\"`",
          "6555: }",
          "6558: func (s DescribeUserHierarchyGroupOutput) String() string {",
          "6559:  return awsutil.Prettify(s)",
          "6560: }",
          "6563: func (s DescribeUserHierarchyGroupOutput) GoString() string {",
          "6564:  return s.String()",
          "6565: }",
          "6568: func (s *DescribeUserHierarchyGroupOutput) SetHierarchyGroup(v *HierarchyGroup) *DescribeUserHierarchyGroupOutput {",
          "6569:  s.HierarchyGroup = v",
          "6570:  return s",
          "6571: }",
          "6573: type DescribeUserHierarchyStructureInput struct {",
          "6574:  _ struct{} `type:\"structure\"`",
          "6579:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "6580: }",
          "6583: func (s DescribeUserHierarchyStructureInput) String() string {",
          "6584:  return awsutil.Prettify(s)",
          "6585: }",
          "6588: func (s DescribeUserHierarchyStructureInput) GoString() string {",
          "6589:  return s.String()",
          "6590: }",
          "6593: func (s *DescribeUserHierarchyStructureInput) Validate() error {",
          "6594:  invalidParams := request.ErrInvalidParams{Context: \"DescribeUserHierarchyStructureInput\"}",
          "6595:  if s.InstanceId == nil {",
          "6596:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "6597:  }",
          "6598:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "6599:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "6600:  }",
          "6602:  if invalidParams.Len() > 0 {",
          "6603:   return invalidParams",
          "6604:  }",
          "6605:  return nil",
          "6606: }",
          "6609: func (s *DescribeUserHierarchyStructureInput) SetInstanceId(v string) *DescribeUserHierarchyStructureInput {",
          "6610:  s.InstanceId = &v",
          "6611:  return s",
          "6612: }",
          "6614: type DescribeUserHierarchyStructureOutput struct {",
          "6615:  _ struct{} `type:\"structure\"`",
          "6618:  HierarchyStructure *HierarchyStructure `type:\"structure\"`",
          "6619: }",
          "6622: func (s DescribeUserHierarchyStructureOutput) String() string {",
          "6623:  return awsutil.Prettify(s)",
          "6624: }",
          "6627: func (s DescribeUserHierarchyStructureOutput) GoString() string {",
          "6628:  return s.String()",
          "6629: }",
          "6632: func (s *DescribeUserHierarchyStructureOutput) SetHierarchyStructure(v *HierarchyStructure) *DescribeUserHierarchyStructureOutput {",
          "6633:  s.HierarchyStructure = v",
          "6634:  return s",
          "6635: }",
          "6637: type DescribeUserInput struct {",
          "6638:  _ struct{} `type:\"structure\"`",
          "6643:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "6648:  UserId *string `location:\"uri\" locationName:\"UserId\" type:\"string\" required:\"true\"`",
          "6649: }",
          "6652: func (s DescribeUserInput) String() string {",
          "6653:  return awsutil.Prettify(s)",
          "6654: }",
          "6657: func (s DescribeUserInput) GoString() string {",
          "6658:  return s.String()",
          "6659: }",
          "6662: func (s *DescribeUserInput) Validate() error {",
          "6663:  invalidParams := request.ErrInvalidParams{Context: \"DescribeUserInput\"}",
          "6664:  if s.InstanceId == nil {",
          "6665:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "6666:  }",
          "6667:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "6668:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "6669:  }",
          "6670:  if s.UserId == nil {",
          "6671:   invalidParams.Add(request.NewErrParamRequired(\"UserId\"))",
          "6672:  }",
          "6673:  if s.UserId != nil && len(*s.UserId) < 1 {",
          "6674:   invalidParams.Add(request.NewErrParamMinLen(\"UserId\", 1))",
          "6675:  }",
          "6677:  if invalidParams.Len() > 0 {",
          "6678:   return invalidParams",
          "6679:  }",
          "6680:  return nil",
          "6681: }",
          "6684: func (s *DescribeUserInput) SetInstanceId(v string) *DescribeUserInput {",
          "6685:  s.InstanceId = &v",
          "6686:  return s",
          "6687: }",
          "6690: func (s *DescribeUserInput) SetUserId(v string) *DescribeUserInput {",
          "6691:  s.UserId = &v",
          "6692:  return s",
          "6693: }",
          "6695: type DescribeUserOutput struct {",
          "6696:  _ struct{} `type:\"structure\"`",
          "6699:  User *User `type:\"structure\"`",
          "6700: }",
          "6703: func (s DescribeUserOutput) String() string {",
          "6704:  return awsutil.Prettify(s)",
          "6705: }",
          "6708: func (s DescribeUserOutput) GoString() string {",
          "6709:  return s.String()",
          "6710: }",
          "6713: func (s *DescribeUserOutput) SetUser(v *User) *DescribeUserOutput {",
          "6714:  s.User = v",
          "6715:  return s",
          "6716: }",
          "6719: type DestinationNotAllowedException struct {",
          "6720:  _            struct{}                  `type:\"structure\"`",
          "6721:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "6724:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "6725: }",
          "6728: func (s DestinationNotAllowedException) String() string {",
          "6729:  return awsutil.Prettify(s)",
          "6730: }",
          "6733: func (s DestinationNotAllowedException) GoString() string {",
          "6734:  return s.String()",
          "6735: }",
          "6737: func newErrorDestinationNotAllowedException(v protocol.ResponseMetadata) error {",
          "6738:  return &DestinationNotAllowedException{",
          "6739:   RespMetadata: v,",
          "6740:  }",
          "6741: }",
          "6744: func (s *DestinationNotAllowedException) Code() string {",
          "6745:  return \"DestinationNotAllowedException\"",
          "6746: }",
          "6749: func (s *DestinationNotAllowedException) Message() string {",
          "6750:  if s.Message_ != nil {",
          "6751:   return *s.Message_",
          "6752:  }",
          "6753:  return \"\"",
          "6754: }",
          "6757: func (s *DestinationNotAllowedException) OrigErr() error {",
          "6758:  return nil",
          "6759: }",
          "6761: func (s *DestinationNotAllowedException) Error() string {",
          "6762:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "6763: }",
          "6766: func (s *DestinationNotAllowedException) StatusCode() int {",
          "6767:  return s.RespMetadata.StatusCode",
          "6768: }",
          "6771: func (s *DestinationNotAllowedException) RequestID() string {",
          "6772:  return s.RespMetadata.RequestID",
          "6773: }",
          "6776: type Dimensions struct {",
          "6777:  _ struct{} `type:\"structure\"`",
          "6780:  Channel *string `type:\"string\" enum:\"Channel\"`",
          "6783:  Queue *QueueReference `type:\"structure\"`",
          "6784: }",
          "6787: func (s Dimensions) String() string {",
          "6788:  return awsutil.Prettify(s)",
          "6789: }",
          "6792: func (s Dimensions) GoString() string {",
          "6793:  return s.String()",
          "6794: }",
          "6797: func (s *Dimensions) SetChannel(v string) *Dimensions {",
          "6798:  s.Channel = &v",
          "6799:  return s",
          "6800: }",
          "6803: func (s *Dimensions) SetQueue(v *QueueReference) *Dimensions {",
          "6804:  s.Queue = v",
          "6805:  return s",
          "6806: }",
          "6808: type DisassociateRoutingProfileQueuesInput struct {",
          "6809:  _ struct{} `type:\"structure\"`",
          "6814:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "6819:  QueueReferences []*RoutingProfileQueueReference `type:\"list\" required:\"true\"`",
          "6824:  RoutingProfileId *string `location:\"uri\" locationName:\"RoutingProfileId\" type:\"string\" required:\"true\"`",
          "6825: }",
          "6828: func (s DisassociateRoutingProfileQueuesInput) String() string {",
          "6829:  return awsutil.Prettify(s)",
          "6830: }",
          "6833: func (s DisassociateRoutingProfileQueuesInput) GoString() string {",
          "6834:  return s.String()",
          "6835: }",
          "6838: func (s *DisassociateRoutingProfileQueuesInput) Validate() error {",
          "6839:  invalidParams := request.ErrInvalidParams{Context: \"DisassociateRoutingProfileQueuesInput\"}",
          "6840:  if s.InstanceId == nil {",
          "6841:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "6842:  }",
          "6843:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "6844:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "6845:  }",
          "6846:  if s.QueueReferences == nil {",
          "6847:   invalidParams.Add(request.NewErrParamRequired(\"QueueReferences\"))",
          "6848:  }",
          "6849:  if s.RoutingProfileId == nil {",
          "6850:   invalidParams.Add(request.NewErrParamRequired(\"RoutingProfileId\"))",
          "6851:  }",
          "6852:  if s.RoutingProfileId != nil && len(*s.RoutingProfileId) < 1 {",
          "6853:   invalidParams.Add(request.NewErrParamMinLen(\"RoutingProfileId\", 1))",
          "6854:  }",
          "6855:  if s.QueueReferences != nil {",
          "6856:   for i, v := range s.QueueReferences {",
          "6857:    if v == nil {",
          "6858:     continue",
          "6859:    }",
          "6860:    if err := v.Validate(); err != nil {",
          "6861:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"QueueReferences\", i), err.(request.ErrInvalidParams))",
          "6862:    }",
          "6863:   }",
          "6864:  }",
          "6866:  if invalidParams.Len() > 0 {",
          "6867:   return invalidParams",
          "6868:  }",
          "6869:  return nil",
          "6870: }",
          "6873: func (s *DisassociateRoutingProfileQueuesInput) SetInstanceId(v string) *DisassociateRoutingProfileQueuesInput {",
          "6874:  s.InstanceId = &v",
          "6875:  return s",
          "6876: }",
          "6879: func (s *DisassociateRoutingProfileQueuesInput) SetQueueReferences(v []*RoutingProfileQueueReference) *DisassociateRoutingProfileQueuesInput {",
          "6880:  s.QueueReferences = v",
          "6881:  return s",
          "6882: }",
          "6885: func (s *DisassociateRoutingProfileQueuesInput) SetRoutingProfileId(v string) *DisassociateRoutingProfileQueuesInput {",
          "6886:  s.RoutingProfileId = &v",
          "6887:  return s",
          "6888: }",
          "6890: type DisassociateRoutingProfileQueuesOutput struct {",
          "6891:  _ struct{} `type:\"structure\"`",
          "6892: }",
          "6895: func (s DisassociateRoutingProfileQueuesOutput) String() string {",
          "6896:  return awsutil.Prettify(s)",
          "6897: }",
          "6900: func (s DisassociateRoutingProfileQueuesOutput) GoString() string {",
          "6901:  return s.String()",
          "6902: }",
          "6905: type DuplicateResourceException struct {",
          "6906:  _            struct{}                  `type:\"structure\"`",
          "6907:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "6909:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "6910: }",
          "6913: func (s DuplicateResourceException) String() string {",
          "6914:  return awsutil.Prettify(s)",
          "6915: }",
          "6918: func (s DuplicateResourceException) GoString() string {",
          "6919:  return s.String()",
          "6920: }",
          "6922: func newErrorDuplicateResourceException(v protocol.ResponseMetadata) error {",
          "6923:  return &DuplicateResourceException{",
          "6924:   RespMetadata: v,",
          "6925:  }",
          "6926: }",
          "6929: func (s *DuplicateResourceException) Code() string {",
          "6930:  return \"DuplicateResourceException\"",
          "6931: }",
          "6934: func (s *DuplicateResourceException) Message() string {",
          "6935:  if s.Message_ != nil {",
          "6936:   return *s.Message_",
          "6937:  }",
          "6938:  return \"\"",
          "6939: }",
          "6942: func (s *DuplicateResourceException) OrigErr() error {",
          "6943:  return nil",
          "6944: }",
          "6946: func (s *DuplicateResourceException) Error() string {",
          "6947:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "6948: }",
          "6951: func (s *DuplicateResourceException) StatusCode() int {",
          "6952:  return s.RespMetadata.StatusCode",
          "6953: }",
          "6956: func (s *DuplicateResourceException) RequestID() string {",
          "6957:  return s.RespMetadata.RequestID",
          "6958: }",
          "6961: type Filters struct {",
          "6962:  _ struct{} `type:\"structure\"`",
          "6965:  Channels []*string `type:\"list\"`",
          "6969:  Queues []*string `min:\"1\" type:\"list\"`",
          "6970: }",
          "6973: func (s Filters) String() string {",
          "6974:  return awsutil.Prettify(s)",
          "6975: }",
          "6978: func (s Filters) GoString() string {",
          "6979:  return s.String()",
          "6980: }",
          "6983: func (s *Filters) Validate() error {",
          "6984:  invalidParams := request.ErrInvalidParams{Context: \"Filters\"}",
          "6985:  if s.Queues != nil && len(s.Queues) < 1 {",
          "6986:   invalidParams.Add(request.NewErrParamMinLen(\"Queues\", 1))",
          "6987:  }",
          "6989:  if invalidParams.Len() > 0 {",
          "6990:   return invalidParams",
          "6991:  }",
          "6992:  return nil",
          "6993: }",
          "6996: func (s *Filters) SetChannels(v []*string) *Filters {",
          "6997:  s.Channels = v",
          "6998:  return s",
          "6999: }",
          "7002: func (s *Filters) SetQueues(v []*string) *Filters {",
          "7003:  s.Queues = v",
          "7004:  return s",
          "7005: }",
          "7007: type GetContactAttributesInput struct {",
          "7008:  _ struct{} `type:\"structure\"`",
          "7013:  InitialContactId *string `location:\"uri\" locationName:\"InitialContactId\" min:\"1\" type:\"string\" required:\"true\"`",
          "7018:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "7019: }",
          "7022: func (s GetContactAttributesInput) String() string {",
          "7023:  return awsutil.Prettify(s)",
          "7024: }",
          "7027: func (s GetContactAttributesInput) GoString() string {",
          "7028:  return s.String()",
          "7029: }",
          "7032: func (s *GetContactAttributesInput) Validate() error {",
          "7033:  invalidParams := request.ErrInvalidParams{Context: \"GetContactAttributesInput\"}",
          "7034:  if s.InitialContactId == nil {",
          "7035:   invalidParams.Add(request.NewErrParamRequired(\"InitialContactId\"))",
          "7036:  }",
          "7037:  if s.InitialContactId != nil && len(*s.InitialContactId) < 1 {",
          "7038:   invalidParams.Add(request.NewErrParamMinLen(\"InitialContactId\", 1))",
          "7039:  }",
          "7040:  if s.InstanceId == nil {",
          "7041:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "7042:  }",
          "7043:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "7044:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "7045:  }",
          "7047:  if invalidParams.Len() > 0 {",
          "7048:   return invalidParams",
          "7049:  }",
          "7050:  return nil",
          "7051: }",
          "7054: func (s *GetContactAttributesInput) SetInitialContactId(v string) *GetContactAttributesInput {",
          "7055:  s.InitialContactId = &v",
          "7056:  return s",
          "7057: }",
          "7060: func (s *GetContactAttributesInput) SetInstanceId(v string) *GetContactAttributesInput {",
          "7061:  s.InstanceId = &v",
          "7062:  return s",
          "7063: }",
          "7065: type GetContactAttributesOutput struct {",
          "7066:  _ struct{} `type:\"structure\"`",
          "7069:  Attributes map[string]*string `type:\"map\"`",
          "7073: func (s GetContactAttributesOutput) String() string {",
          "7078: func (s GetContactAttributesOutput) GoString() string {",
          "7083: func (s *GetContactAttributesOutput) SetAttributes(v map[string]*string) *GetContactAttributesOutput {",
          "7084:  s.Attributes = v",
          "7088: type GetCurrentMetricDataInput struct {",
          "7089:  _ struct{} `type:\"structure\"`",
          "7183:  CurrentMetrics []*CurrentMetric `type:\"list\" required:\"true\"`",
          "7191:  Filters *Filters `type:\"structure\" required:\"true\"`",
          "7199:  Groupings []*string `type:\"list\"`",
          "7204:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "7207:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "7215:  NextToken *string `type:\"string\"`",
          "7216: }",
          "7219: func (s GetCurrentMetricDataInput) String() string {",
          "7220:  return awsutil.Prettify(s)",
          "7221: }",
          "7224: func (s GetCurrentMetricDataInput) GoString() string {",
          "7225:  return s.String()",
          "7226: }",
          "7229: func (s *GetCurrentMetricDataInput) Validate() error {",
          "7230:  invalidParams := request.ErrInvalidParams{Context: \"GetCurrentMetricDataInput\"}",
          "7231:  if s.CurrentMetrics == nil {",
          "7232:   invalidParams.Add(request.NewErrParamRequired(\"CurrentMetrics\"))",
          "7233:  }",
          "7234:  if s.Filters == nil {",
          "7235:   invalidParams.Add(request.NewErrParamRequired(\"Filters\"))",
          "7236:  }",
          "7237:  if s.InstanceId == nil {",
          "7238:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "7239:  }",
          "7240:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "7241:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "7242:  }",
          "7243:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "7244:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "7245:  }",
          "7246:  if s.Filters != nil {",
          "7247:   if err := s.Filters.Validate(); err != nil {",
          "7248:    invalidParams.AddNested(\"Filters\", err.(request.ErrInvalidParams))",
          "7249:   }",
          "7250:  }",
          "7252:  if invalidParams.Len() > 0 {",
          "7253:   return invalidParams",
          "7254:  }",
          "7255:  return nil",
          "7256: }",
          "7259: func (s *GetCurrentMetricDataInput) SetCurrentMetrics(v []*CurrentMetric) *GetCurrentMetricDataInput {",
          "7260:  s.CurrentMetrics = v",
          "7261:  return s",
          "7262: }",
          "7265: func (s *GetCurrentMetricDataInput) SetFilters(v *Filters) *GetCurrentMetricDataInput {",
          "7266:  s.Filters = v",
          "7267:  return s",
          "7268: }",
          "7271: func (s *GetCurrentMetricDataInput) SetGroupings(v []*string) *GetCurrentMetricDataInput {",
          "7272:  s.Groupings = v",
          "7273:  return s",
          "7274: }",
          "7277: func (s *GetCurrentMetricDataInput) SetInstanceId(v string) *GetCurrentMetricDataInput {",
          "7278:  s.InstanceId = &v",
          "7279:  return s",
          "7280: }",
          "7283: func (s *GetCurrentMetricDataInput) SetMaxResults(v int64) *GetCurrentMetricDataInput {",
          "7284:  s.MaxResults = &v",
          "7285:  return s",
          "7286: }",
          "7289: func (s *GetCurrentMetricDataInput) SetNextToken(v string) *GetCurrentMetricDataInput {",
          "7290:  s.NextToken = &v",
          "7291:  return s",
          "7292: }",
          "7294: type GetCurrentMetricDataOutput struct {",
          "7295:  _ struct{} `type:\"structure\"`",
          "7298:  DataSnapshotTime *time.Time `type:\"timestamp\"`",
          "7301:  MetricResults []*CurrentMetricResult `type:\"list\"`",
          "7308:  NextToken *string `type:\"string\"`",
          "7309: }",
          "7312: func (s GetCurrentMetricDataOutput) String() string {",
          "7313:  return awsutil.Prettify(s)",
          "7314: }",
          "7317: func (s GetCurrentMetricDataOutput) GoString() string {",
          "7318:  return s.String()",
          "7319: }",
          "7322: func (s *GetCurrentMetricDataOutput) SetDataSnapshotTime(v time.Time) *GetCurrentMetricDataOutput {",
          "7323:  s.DataSnapshotTime = &v",
          "7328: func (s *GetCurrentMetricDataOutput) SetMetricResults(v []*CurrentMetricResult) *GetCurrentMetricDataOutput {",
          "7329:  s.MetricResults = v",
          "7334: func (s *GetCurrentMetricDataOutput) SetNextToken(v string) *GetCurrentMetricDataOutput {",
          "7335:  s.NextToken = &v",
          "7339: type GetFederationTokenInput struct {",
          "7340:  _ struct{} `type:\"structure\"`",
          "7345:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "7349: func (s GetFederationTokenInput) String() string {",
          "7354: func (s GetFederationTokenInput) GoString() string {",
          "7359: func (s *GetFederationTokenInput) Validate() error {",
          "7360:  invalidParams := request.ErrInvalidParams{Context: \"GetFederationTokenInput\"}",
          "7361:  if s.InstanceId == nil {",
          "7362:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "7363:  }",
          "7364:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "7365:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "7368:  if invalidParams.Len() > 0 {",
          "7369:   return invalidParams",
          "7370:  }",
          "7371:  return nil",
          "7375: func (s *GetFederationTokenInput) SetInstanceId(v string) *GetFederationTokenInput {",
          "7376:  s.InstanceId = &v",
          "7377:  return s",
          "7380: type GetFederationTokenOutput struct {",
          "7381:  _ struct{} `type:\"structure\"`",
          "7384:  Credentials *Credentials `type:\"structure\"`",
          "7388: func (s GetFederationTokenOutput) String() string {",
          "7389:  return awsutil.Prettify(s)",
          "7393: func (s GetFederationTokenOutput) GoString() string {",
          "7394:  return s.String()",
          "7398: func (s *GetFederationTokenOutput) SetCredentials(v *Credentials) *GetFederationTokenOutput {",
          "7399:  s.Credentials = v",
          "7400:  return s",
          "7403: type GetMetricDataInput struct {",
          "7414:  EndTime *time.Time `type:\"timestamp\" required:\"true\"`",
          "7422:  Filters *Filters `type:\"structure\" required:\"true\"`",
          "7431:  Groupings []*string `type:\"list\"`",
          "7593:  HistoricalMetrics []*HistoricalMetric `type:\"list\" required:\"true\"`",
          "7601:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "7605:  NextToken *string `type:\"string\"`",
          "7615:  StartTime *time.Time `type:\"timestamp\" required:\"true\"`",
          "7619: func (s GetMetricDataInput) String() string {",
          "7624: func (s GetMetricDataInput) GoString() string {",
          "7629: func (s *GetMetricDataInput) Validate() error {",
          "7630:  invalidParams := request.ErrInvalidParams{Context: \"GetMetricDataInput\"}",
          "7631:  if s.EndTime == nil {",
          "7632:   invalidParams.Add(request.NewErrParamRequired(\"EndTime\"))",
          "7633:  }",
          "7634:  if s.Filters == nil {",
          "7635:   invalidParams.Add(request.NewErrParamRequired(\"Filters\"))",
          "7636:  }",
          "7637:  if s.HistoricalMetrics == nil {",
          "7638:   invalidParams.Add(request.NewErrParamRequired(\"HistoricalMetrics\"))",
          "7639:  }",
          "7646:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "7647:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "7649:  if s.StartTime == nil {",
          "7650:   invalidParams.Add(request.NewErrParamRequired(\"StartTime\"))",
          "7652:  if s.Filters != nil {",
          "7653:   if err := s.Filters.Validate(); err != nil {",
          "7654:    invalidParams.AddNested(\"Filters\", err.(request.ErrInvalidParams))",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "3960:  return nil",
          "3961: }",
          "4014:  return s",
          "4015: }",
          "4020:  return s",
          "4021: }",
          "4046:  return s",
          "4047: }",
          "4052:  return s",
          "4053: }",
          "4086:  return s",
          "4087: }",
          "4092:  return s",
          "4093: }",
          "4098:  return s",
          "4099: }",
          "4104:  return s",
          "4105: }",
          "4111:  _ struct{} `type:\"structure\"`",
          "4118: }",
          "4122:  return awsutil.Prettify(s)",
          "4123: }",
          "4127:  return s.String()",
          "4128: }",
          "4133:  return s",
          "4134: }",
          "4139:  return s",
          "4140: }",
          "4144:  _ struct{} `type:\"structure\"`",
          "4151: }",
          "4155:  return awsutil.Prettify(s)",
          "4156: }",
          "4160:  return s.String()",
          "4161: }",
          "4166:  return s",
          "4167: }",
          "4172:  return s",
          "4173: }",
          "4177:  _ struct{} `type:\"structure\"`",
          "4184: }",
          "4188:  return awsutil.Prettify(s)",
          "4189: }",
          "4193:  return s.String()",
          "4194: }",
          "4199:  return s",
          "4200: }",
          "4205:  return s",
          "4206: }",
          "4209:  _ struct{} `type:\"structure\"`",
          "4220: }",
          "4224:  return awsutil.Prettify(s)",
          "4225: }",
          "4229:  return s.String()",
          "4230: }",
          "4252: }",
          "4257:  return s",
          "4258: }",
          "4263:  return s",
          "4264: }",
          "4267:  _ struct{} `type:\"structure\"`",
          "4292: }",
          "4296:  return awsutil.Prettify(s)",
          "4297: }",
          "4324: }",
          "4329:  return s",
          "4330: }",
          "4335:  return s",
          "4336: }",
          "4348: }",
          "4353: }",
          "4358:  return s",
          "4359: }",
          "4362:  _ struct{} `type:\"structure\"`",
          "4368: }",
          "4372:  return awsutil.Prettify(s)",
          "4373: }",
          "4377:  return s.String()",
          "4378: }",
          "4399:  return s",
          "4400: }",
          "4407: }",
          "4412: }",
          "4417: }",
          "4422:  return s",
          "4423: }",
          "4426:  _ struct{} `type:\"structure\"`",
          "4437: }",
          "4441:  return awsutil.Prettify(s)",
          "4442: }",
          "4446:  return s.String()",
          "4447: }",
          "4469: }",
          "4474:  return s",
          "4475: }",
          "4480:  return s",
          "4481: }",
          "4484:  _ struct{} `type:\"structure\"`",
          "4488: }",
          "4492:  return awsutil.Prettify(s)",
          "4493: }",
          "4497:  return s.String()",
          "4498: }",
          "4503:  return s",
          "4504: }",
          "4513: }",
          "4517:  return awsutil.Prettify(s)",
          "4518: }",
          "4522:  return s.String()",
          "4523: }",
          "4556: }",
          "4561: }",
          "4565:  _ struct{} `type:\"structure\"`",
          "4572: }",
          "4576:  return awsutil.Prettify(s)",
          "4577: }",
          "4581:  return s.String()",
          "4582: }",
          "4587:  return s",
          "4588: }",
          "4593:  return s",
          "4594: }",
          "4598:  _            struct{}                  `type:\"structure\"`",
          "4599:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "4601:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "4602: }",
          "4606:  return awsutil.Prettify(s)",
          "4607: }",
          "4611:  return s.String()",
          "4612: }",
          "4616:   RespMetadata: v,",
          "4617:  }",
          "4618: }",
          "4623: }",
          "4627:  if s.Message_ != nil {",
          "4628:   return *s.Message_",
          "4629:  }",
          "",
          "[Removed Lines]",
          "3964: func (s *CreateUserInput) SetDirectoryUserId(v string) *CreateUserInput {",
          "3965:  s.DirectoryUserId = &v",
          "3966:  return s",
          "3967: }",
          "3970: func (s *CreateUserInput) SetHierarchyGroupId(v string) *CreateUserInput {",
          "3971:  s.HierarchyGroupId = &v",
          "3972:  return s",
          "3973: }",
          "3976: func (s *CreateUserInput) SetIdentityInfo(v *UserIdentityInfo) *CreateUserInput {",
          "3977:  s.IdentityInfo = v",
          "3978:  return s",
          "3979: }",
          "3982: func (s *CreateUserInput) SetInstanceId(v string) *CreateUserInput {",
          "3983:  s.InstanceId = &v",
          "3984:  return s",
          "3985: }",
          "3988: func (s *CreateUserInput) SetPassword(v string) *CreateUserInput {",
          "3989:  s.Password = &v",
          "3990:  return s",
          "3991: }",
          "3994: func (s *CreateUserInput) SetPhoneConfig(v *UserPhoneConfig) *CreateUserInput {",
          "3995:  s.PhoneConfig = v",
          "3996:  return s",
          "3997: }",
          "4000: func (s *CreateUserInput) SetRoutingProfileId(v string) *CreateUserInput {",
          "4001:  s.RoutingProfileId = &v",
          "4002:  return s",
          "4003: }",
          "4006: func (s *CreateUserInput) SetSecurityProfileIds(v []*string) *CreateUserInput {",
          "4007:  s.SecurityProfileIds = v",
          "4008:  return s",
          "4009: }",
          "4012: func (s *CreateUserInput) SetTags(v map[string]*string) *CreateUserInput {",
          "4013:  s.Tags = v",
          "4018: func (s *CreateUserInput) SetUsername(v string) *CreateUserInput {",
          "4019:  s.Username = &v",
          "4023: type CreateUserOutput struct {",
          "4024:  _ struct{} `type:\"structure\"`",
          "4027:  UserArn *string `type:\"string\"`",
          "4030:  UserId *string `type:\"string\"`",
          "4031: }",
          "4034: func (s CreateUserOutput) String() string {",
          "4035:  return awsutil.Prettify(s)",
          "4036: }",
          "4039: func (s CreateUserOutput) GoString() string {",
          "4040:  return s.String()",
          "4041: }",
          "4044: func (s *CreateUserOutput) SetUserArn(v string) *CreateUserOutput {",
          "4045:  s.UserArn = &v",
          "4050: func (s *CreateUserOutput) SetUserId(v string) *CreateUserOutput {",
          "4051:  s.UserId = &v",
          "4056: type Credentials struct {",
          "4057:  _ struct{} `type:\"structure\"`",
          "4060:  AccessToken *string `type:\"string\" sensitive:\"true\"`",
          "4064:  AccessTokenExpiration *time.Time `type:\"timestamp\"`",
          "4067:  RefreshToken *string `type:\"string\" sensitive:\"true\"`",
          "4070:  RefreshTokenExpiration *time.Time `type:\"timestamp\"`",
          "4071: }",
          "4074: func (s Credentials) String() string {",
          "4075:  return awsutil.Prettify(s)",
          "4076: }",
          "4079: func (s Credentials) GoString() string {",
          "4080:  return s.String()",
          "4081: }",
          "4084: func (s *Credentials) SetAccessToken(v string) *Credentials {",
          "4085:  s.AccessToken = &v",
          "4090: func (s *Credentials) SetAccessTokenExpiration(v time.Time) *Credentials {",
          "4091:  s.AccessTokenExpiration = &v",
          "4096: func (s *Credentials) SetRefreshToken(v string) *Credentials {",
          "4097:  s.RefreshToken = &v",
          "4102: func (s *Credentials) SetRefreshTokenExpiration(v time.Time) *Credentials {",
          "4103:  s.RefreshTokenExpiration = &v",
          "4110: type CurrentMetric struct {",
          "4114:  Name *string `type:\"string\" enum:\"CurrentMetricName\"`",
          "4117:  Unit *string `type:\"string\" enum:\"Unit\"`",
          "4121: func (s CurrentMetric) String() string {",
          "4126: func (s CurrentMetric) GoString() string {",
          "4131: func (s *CurrentMetric) SetName(v string) *CurrentMetric {",
          "4132:  s.Name = &v",
          "4137: func (s *CurrentMetric) SetUnit(v string) *CurrentMetric {",
          "4138:  s.Unit = &v",
          "4143: type CurrentMetricData struct {",
          "4147:  Metric *CurrentMetric `type:\"structure\"`",
          "4150:  Value *float64 `type:\"double\"`",
          "4154: func (s CurrentMetricData) String() string {",
          "4159: func (s CurrentMetricData) GoString() string {",
          "4164: func (s *CurrentMetricData) SetMetric(v *CurrentMetric) *CurrentMetricData {",
          "4165:  s.Metric = v",
          "4170: func (s *CurrentMetricData) SetValue(v float64) *CurrentMetricData {",
          "4171:  s.Value = &v",
          "4176: type CurrentMetricResult struct {",
          "4180:  Collections []*CurrentMetricData `type:\"list\"`",
          "4183:  Dimensions *Dimensions `type:\"structure\"`",
          "4187: func (s CurrentMetricResult) String() string {",
          "4192: func (s CurrentMetricResult) GoString() string {",
          "4197: func (s *CurrentMetricResult) SetCollections(v []*CurrentMetricData) *CurrentMetricResult {",
          "4198:  s.Collections = v",
          "4203: func (s *CurrentMetricResult) SetDimensions(v *Dimensions) *CurrentMetricResult {",
          "4204:  s.Dimensions = v",
          "4208: type DeleteUserInput struct {",
          "4214:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "4219:  UserId *string `location:\"uri\" locationName:\"UserId\" type:\"string\" required:\"true\"`",
          "4223: func (s DeleteUserInput) String() string {",
          "4228: func (s DeleteUserInput) GoString() string {",
          "4233: func (s *DeleteUserInput) Validate() error {",
          "4234:  invalidParams := request.ErrInvalidParams{Context: \"DeleteUserInput\"}",
          "4235:  if s.InstanceId == nil {",
          "4236:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "4237:  }",
          "4238:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "4239:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "4240:  }",
          "4241:  if s.UserId == nil {",
          "4242:   invalidParams.Add(request.NewErrParamRequired(\"UserId\"))",
          "4243:  }",
          "4244:  if s.UserId != nil && len(*s.UserId) < 1 {",
          "4245:   invalidParams.Add(request.NewErrParamMinLen(\"UserId\", 1))",
          "4246:  }",
          "4248:  if invalidParams.Len() > 0 {",
          "4249:   return invalidParams",
          "4250:  }",
          "4251:  return nil",
          "4255: func (s *DeleteUserInput) SetInstanceId(v string) *DeleteUserInput {",
          "4256:  s.InstanceId = &v",
          "4261: func (s *DeleteUserInput) SetUserId(v string) *DeleteUserInput {",
          "4262:  s.UserId = &v",
          "4266: type DeleteUserOutput struct {",
          "4268: }",
          "4271: func (s DeleteUserOutput) String() string {",
          "4272:  return awsutil.Prettify(s)",
          "4273: }",
          "4276: func (s DeleteUserOutput) GoString() string {",
          "4277:  return s.String()",
          "4278: }",
          "4280: type DescribeUserHierarchyGroupInput struct {",
          "4281:  _ struct{} `type:\"structure\"`",
          "4286:  HierarchyGroupId *string `location:\"uri\" locationName:\"HierarchyGroupId\" type:\"string\" required:\"true\"`",
          "4291:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "4295: func (s DescribeUserHierarchyGroupInput) String() string {",
          "4300: func (s DescribeUserHierarchyGroupInput) GoString() string {",
          "4301:  return s.String()",
          "4302: }",
          "4305: func (s *DescribeUserHierarchyGroupInput) Validate() error {",
          "4306:  invalidParams := request.ErrInvalidParams{Context: \"DescribeUserHierarchyGroupInput\"}",
          "4307:  if s.HierarchyGroupId == nil {",
          "4308:   invalidParams.Add(request.NewErrParamRequired(\"HierarchyGroupId\"))",
          "4309:  }",
          "4310:  if s.HierarchyGroupId != nil && len(*s.HierarchyGroupId) < 1 {",
          "4311:   invalidParams.Add(request.NewErrParamMinLen(\"HierarchyGroupId\", 1))",
          "4312:  }",
          "4313:  if s.InstanceId == nil {",
          "4314:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "4315:  }",
          "4316:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "4317:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "4318:  }",
          "4320:  if invalidParams.Len() > 0 {",
          "4321:   return invalidParams",
          "4322:  }",
          "4323:  return nil",
          "4327: func (s *DescribeUserHierarchyGroupInput) SetHierarchyGroupId(v string) *DescribeUserHierarchyGroupInput {",
          "4328:  s.HierarchyGroupId = &v",
          "4333: func (s *DescribeUserHierarchyGroupInput) SetInstanceId(v string) *DescribeUserHierarchyGroupInput {",
          "4334:  s.InstanceId = &v",
          "4338: type DescribeUserHierarchyGroupOutput struct {",
          "4339:  _ struct{} `type:\"structure\"`",
          "4342:  HierarchyGroup *HierarchyGroup `type:\"structure\"`",
          "4343: }",
          "4346: func (s DescribeUserHierarchyGroupOutput) String() string {",
          "4347:  return awsutil.Prettify(s)",
          "4351: func (s DescribeUserHierarchyGroupOutput) GoString() string {",
          "4352:  return s.String()",
          "4356: func (s *DescribeUserHierarchyGroupOutput) SetHierarchyGroup(v *HierarchyGroup) *DescribeUserHierarchyGroupOutput {",
          "4357:  s.HierarchyGroup = v",
          "4361: type DescribeUserHierarchyStructureInput struct {",
          "4367:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "4371: func (s DescribeUserHierarchyStructureInput) String() string {",
          "4376: func (s DescribeUserHierarchyStructureInput) GoString() string {",
          "4381: func (s *DescribeUserHierarchyStructureInput) Validate() error {",
          "4382:  invalidParams := request.ErrInvalidParams{Context: \"DescribeUserHierarchyStructureInput\"}",
          "4383:  if s.InstanceId == nil {",
          "4384:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "4385:  }",
          "4386:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "4387:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "4388:  }",
          "4390:  if invalidParams.Len() > 0 {",
          "4391:   return invalidParams",
          "4392:  }",
          "4393:  return nil",
          "4394: }",
          "4397: func (s *DescribeUserHierarchyStructureInput) SetInstanceId(v string) *DescribeUserHierarchyStructureInput {",
          "4398:  s.InstanceId = &v",
          "4402: type DescribeUserHierarchyStructureOutput struct {",
          "4403:  _ struct{} `type:\"structure\"`",
          "4406:  HierarchyStructure *HierarchyStructure `type:\"structure\"`",
          "4410: func (s DescribeUserHierarchyStructureOutput) String() string {",
          "4411:  return awsutil.Prettify(s)",
          "4415: func (s DescribeUserHierarchyStructureOutput) GoString() string {",
          "4416:  return s.String()",
          "4420: func (s *DescribeUserHierarchyStructureOutput) SetHierarchyStructure(v *HierarchyStructure) *DescribeUserHierarchyStructureOutput {",
          "4421:  s.HierarchyStructure = v",
          "4425: type DescribeUserInput struct {",
          "4431:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "4436:  UserId *string `location:\"uri\" locationName:\"UserId\" type:\"string\" required:\"true\"`",
          "4440: func (s DescribeUserInput) String() string {",
          "4445: func (s DescribeUserInput) GoString() string {",
          "4450: func (s *DescribeUserInput) Validate() error {",
          "4451:  invalidParams := request.ErrInvalidParams{Context: \"DescribeUserInput\"}",
          "4452:  if s.InstanceId == nil {",
          "4453:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "4454:  }",
          "4455:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "4456:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "4457:  }",
          "4458:  if s.UserId == nil {",
          "4459:   invalidParams.Add(request.NewErrParamRequired(\"UserId\"))",
          "4460:  }",
          "4461:  if s.UserId != nil && len(*s.UserId) < 1 {",
          "4462:   invalidParams.Add(request.NewErrParamMinLen(\"UserId\", 1))",
          "4463:  }",
          "4465:  if invalidParams.Len() > 0 {",
          "4466:   return invalidParams",
          "4467:  }",
          "4468:  return nil",
          "4472: func (s *DescribeUserInput) SetInstanceId(v string) *DescribeUserInput {",
          "4473:  s.InstanceId = &v",
          "4478: func (s *DescribeUserInput) SetUserId(v string) *DescribeUserInput {",
          "4479:  s.UserId = &v",
          "4483: type DescribeUserOutput struct {",
          "4487:  User *User `type:\"structure\"`",
          "4491: func (s DescribeUserOutput) String() string {",
          "4496: func (s DescribeUserOutput) GoString() string {",
          "4501: func (s *DescribeUserOutput) SetUser(v *User) *DescribeUserOutput {",
          "4502:  s.User = v",
          "4507: type DestinationNotAllowedException struct {",
          "4508:  _            struct{}                  `type:\"structure\"`",
          "4509:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "4512:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "4516: func (s DestinationNotAllowedException) String() string {",
          "4521: func (s DestinationNotAllowedException) GoString() string {",
          "4525: func newErrorDestinationNotAllowedException(v protocol.ResponseMetadata) error {",
          "4526:  return &DestinationNotAllowedException{",
          "4527:   RespMetadata: v,",
          "4528:  }",
          "4529: }",
          "4532: func (s *DestinationNotAllowedException) Code() string {",
          "4533:  return \"DestinationNotAllowedException\"",
          "4534: }",
          "4537: func (s *DestinationNotAllowedException) Message() string {",
          "4538:  if s.Message_ != nil {",
          "4539:   return *s.Message_",
          "4540:  }",
          "4541:  return \"\"",
          "4542: }",
          "4545: func (s *DestinationNotAllowedException) OrigErr() error {",
          "4546:  return nil",
          "4547: }",
          "4549: func (s *DestinationNotAllowedException) Error() string {",
          "4550:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "4551: }",
          "4554: func (s *DestinationNotAllowedException) StatusCode() int {",
          "4555:  return s.RespMetadata.StatusCode",
          "4559: func (s *DestinationNotAllowedException) RequestID() string {",
          "4560:  return s.RespMetadata.RequestID",
          "4564: type Dimensions struct {",
          "4568:  Channel *string `type:\"string\" enum:\"Channel\"`",
          "4571:  Queue *QueueReference `type:\"structure\"`",
          "4575: func (s Dimensions) String() string {",
          "4580: func (s Dimensions) GoString() string {",
          "4585: func (s *Dimensions) SetChannel(v string) *Dimensions {",
          "4586:  s.Channel = &v",
          "4591: func (s *Dimensions) SetQueue(v *QueueReference) *Dimensions {",
          "4592:  s.Queue = v",
          "4597: type DuplicateResourceException struct {",
          "4605: func (s DuplicateResourceException) String() string {",
          "4610: func (s DuplicateResourceException) GoString() string {",
          "4614: func newErrorDuplicateResourceException(v protocol.ResponseMetadata) error {",
          "4615:  return &DuplicateResourceException{",
          "4621: func (s *DuplicateResourceException) Code() string {",
          "4622:  return \"DuplicateResourceException\"",
          "4626: func (s *DuplicateResourceException) Message() string {",
          "",
          "[Added Lines]",
          "7665: func (s *GetMetricDataInput) SetEndTime(v time.Time) *GetMetricDataInput {",
          "7666:  s.EndTime = &v",
          "7671: func (s *GetMetricDataInput) SetFilters(v *Filters) *GetMetricDataInput {",
          "7672:  s.Filters = v",
          "7677: func (s *GetMetricDataInput) SetGroupings(v []*string) *GetMetricDataInput {",
          "7678:  s.Groupings = v",
          "7683: func (s *GetMetricDataInput) SetHistoricalMetrics(v []*HistoricalMetric) *GetMetricDataInput {",
          "7684:  s.HistoricalMetrics = v",
          "7689: func (s *GetMetricDataInput) SetInstanceId(v string) *GetMetricDataInput {",
          "7690:  s.InstanceId = &v",
          "7695: func (s *GetMetricDataInput) SetMaxResults(v int64) *GetMetricDataInput {",
          "7696:  s.MaxResults = &v",
          "7701: func (s *GetMetricDataInput) SetNextToken(v string) *GetMetricDataInput {",
          "7702:  s.NextToken = &v",
          "7707: func (s *GetMetricDataInput) SetStartTime(v time.Time) *GetMetricDataInput {",
          "7708:  s.StartTime = &v",
          "7712: type GetMetricDataOutput struct {",
          "7718:  MetricResults []*HistoricalMetricResult `type:\"list\"`",
          "7725:  NextToken *string `type:\"string\"`",
          "7729: func (s GetMetricDataOutput) String() string {",
          "7734: func (s GetMetricDataOutput) GoString() string {",
          "7739: func (s *GetMetricDataOutput) SetMetricResults(v []*HistoricalMetricResult) *GetMetricDataOutput {",
          "7740:  s.MetricResults = v",
          "7745: func (s *GetMetricDataOutput) SetNextToken(v string) *GetMetricDataOutput {",
          "7746:  s.NextToken = &v",
          "7751: type HierarchyGroup struct {",
          "7755:  Arn *string `type:\"string\"`",
          "7758:  HierarchyPath *HierarchyPath `type:\"structure\"`",
          "7761:  Id *string `type:\"string\"`",
          "7764:  LevelId *string `type:\"string\"`",
          "7767:  Name *string `type:\"string\"`",
          "7771: func (s HierarchyGroup) String() string {",
          "7776: func (s HierarchyGroup) GoString() string {",
          "7781: func (s *HierarchyGroup) SetArn(v string) *HierarchyGroup {",
          "7782:  s.Arn = &v",
          "7787: func (s *HierarchyGroup) SetHierarchyPath(v *HierarchyPath) *HierarchyGroup {",
          "7788:  s.HierarchyPath = v",
          "7793: func (s *HierarchyGroup) SetId(v string) *HierarchyGroup {",
          "7794:  s.Id = &v",
          "7795:  return s",
          "7796: }",
          "7799: func (s *HierarchyGroup) SetLevelId(v string) *HierarchyGroup {",
          "7800:  s.LevelId = &v",
          "7801:  return s",
          "7802: }",
          "7805: func (s *HierarchyGroup) SetName(v string) *HierarchyGroup {",
          "7806:  s.Name = &v",
          "7807:  return s",
          "7808: }",
          "7811: type HierarchyGroupSummary struct {",
          "7815:  Arn *string `type:\"string\"`",
          "7818:  Id *string `type:\"string\"`",
          "7821:  Name *string `type:\"string\"`",
          "7825: func (s HierarchyGroupSummary) String() string {",
          "7830: func (s HierarchyGroupSummary) GoString() string {",
          "7835: func (s *HierarchyGroupSummary) SetArn(v string) *HierarchyGroupSummary {",
          "7836:  s.Arn = &v",
          "7841: func (s *HierarchyGroupSummary) SetId(v string) *HierarchyGroupSummary {",
          "7842:  s.Id = &v",
          "7847: func (s *HierarchyGroupSummary) SetName(v string) *HierarchyGroupSummary {",
          "7848:  s.Name = &v",
          "7849:  return s",
          "7850: }",
          "7853: type HierarchyLevel struct {",
          "7857:  Arn *string `type:\"string\"`",
          "7860:  Id *string `type:\"string\"`",
          "7863:  Name *string `type:\"string\"`",
          "7867: func (s HierarchyLevel) String() string {",
          "7872: func (s HierarchyLevel) GoString() string {",
          "7877: func (s *HierarchyLevel) SetArn(v string) *HierarchyLevel {",
          "7878:  s.Arn = &v",
          "7879:  return s",
          "7883: func (s *HierarchyLevel) SetId(v string) *HierarchyLevel {",
          "7884:  s.Id = &v",
          "7889: func (s *HierarchyLevel) SetName(v string) *HierarchyLevel {",
          "7890:  s.Name = &v",
          "7895: type HierarchyPath struct {",
          "7899:  LevelFive *HierarchyGroupSummary `type:\"structure\"`",
          "7902:  LevelFour *HierarchyGroupSummary `type:\"structure\"`",
          "7905:  LevelOne *HierarchyGroupSummary `type:\"structure\"`",
          "7908:  LevelThree *HierarchyGroupSummary `type:\"structure\"`",
          "7911:  LevelTwo *HierarchyGroupSummary `type:\"structure\"`",
          "7915: func (s HierarchyPath) String() string {",
          "7920: func (s HierarchyPath) GoString() string {",
          "7921:  return s.String()",
          "7925: func (s *HierarchyPath) SetLevelFive(v *HierarchyGroupSummary) *HierarchyPath {",
          "7926:  s.LevelFive = v",
          "7931: func (s *HierarchyPath) SetLevelFour(v *HierarchyGroupSummary) *HierarchyPath {",
          "7932:  s.LevelFour = v",
          "7937: func (s *HierarchyPath) SetLevelOne(v *HierarchyGroupSummary) *HierarchyPath {",
          "7938:  s.LevelOne = v",
          "7939:  return s",
          "7943: func (s *HierarchyPath) SetLevelThree(v *HierarchyGroupSummary) *HierarchyPath {",
          "7944:  s.LevelThree = v",
          "7945:  return s",
          "7949: func (s *HierarchyPath) SetLevelTwo(v *HierarchyGroupSummary) *HierarchyPath {",
          "7950:  s.LevelTwo = v",
          "7955: type HierarchyStructure struct {",
          "7959:  LevelFive *HierarchyLevel `type:\"structure\"`",
          "7962:  LevelFour *HierarchyLevel `type:\"structure\"`",
          "7965:  LevelOne *HierarchyLevel `type:\"structure\"`",
          "7968:  LevelThree *HierarchyLevel `type:\"structure\"`",
          "7971:  LevelTwo *HierarchyLevel `type:\"structure\"`",
          "7975: func (s HierarchyStructure) String() string {",
          "7980: func (s HierarchyStructure) GoString() string {",
          "7985: func (s *HierarchyStructure) SetLevelFive(v *HierarchyLevel) *HierarchyStructure {",
          "7986:  s.LevelFive = v",
          "7991: func (s *HierarchyStructure) SetLevelFour(v *HierarchyLevel) *HierarchyStructure {",
          "7992:  s.LevelFour = v",
          "7993:  return s",
          "7997: func (s *HierarchyStructure) SetLevelOne(v *HierarchyLevel) *HierarchyStructure {",
          "7998:  s.LevelOne = v",
          "7999:  return s",
          "8003: func (s *HierarchyStructure) SetLevelThree(v *HierarchyLevel) *HierarchyStructure {",
          "8004:  s.LevelThree = v",
          "8005:  return s",
          "8009: func (s *HierarchyStructure) SetLevelTwo(v *HierarchyLevel) *HierarchyStructure {",
          "8010:  s.LevelTwo = v",
          "8017: type HistoricalMetric struct {",
          "8021:  Name *string `type:\"string\" enum:\"HistoricalMetricName\"`",
          "8024:  Statistic *string `type:\"string\" enum:\"Statistic\"`",
          "8027:  Threshold *Threshold `type:\"structure\"`",
          "8030:  Unit *string `type:\"string\" enum:\"Unit\"`",
          "8034: func (s HistoricalMetric) String() string {",
          "8039: func (s HistoricalMetric) GoString() string {",
          "8044: func (s *HistoricalMetric) SetName(v string) *HistoricalMetric {",
          "8045:  s.Name = &v",
          "8046:  return s",
          "8047: }",
          "8050: func (s *HistoricalMetric) SetStatistic(v string) *HistoricalMetric {",
          "8051:  s.Statistic = &v",
          "8052:  return s",
          "8056: func (s *HistoricalMetric) SetThreshold(v *Threshold) *HistoricalMetric {",
          "8057:  s.Threshold = v",
          "8062: func (s *HistoricalMetric) SetUnit(v string) *HistoricalMetric {",
          "8063:  s.Unit = &v",
          "8068: type HistoricalMetricData struct {",
          "8072:  Metric *HistoricalMetric `type:\"structure\"`",
          "8075:  Value *float64 `type:\"double\"`",
          "8079: func (s HistoricalMetricData) String() string {",
          "8084: func (s HistoricalMetricData) GoString() string {",
          "8089: func (s *HistoricalMetricData) SetMetric(v *HistoricalMetric) *HistoricalMetricData {",
          "8090:  s.Metric = v",
          "8095: func (s *HistoricalMetricData) SetValue(v float64) *HistoricalMetricData {",
          "8096:  s.Value = &v",
          "8097:  return s",
          "8098: }",
          "8101: type HistoricalMetricResult struct {",
          "8102:  _ struct{} `type:\"structure\"`",
          "8105:  Collections []*HistoricalMetricData `type:\"list\"`",
          "8108:  Dimensions *Dimensions `type:\"structure\"`",
          "8112: func (s HistoricalMetricResult) String() string {",
          "8117: func (s HistoricalMetricResult) GoString() string {",
          "8122: func (s *HistoricalMetricResult) SetCollections(v []*HistoricalMetricData) *HistoricalMetricResult {",
          "8123:  s.Collections = v",
          "8124:  return s",
          "8128: func (s *HistoricalMetricResult) SetDimensions(v *Dimensions) *HistoricalMetricResult {",
          "8129:  s.Dimensions = v",
          "8130:  return s",
          "8134: type HoursOfOperationSummary struct {",
          "8138:  Arn *string `type:\"string\"`",
          "8141:  Id *string `type:\"string\"`",
          "8144:  Name *string `type:\"string\"`",
          "8148: func (s HoursOfOperationSummary) String() string {",
          "8153: func (s HoursOfOperationSummary) GoString() string {",
          "8158: func (s *HoursOfOperationSummary) SetArn(v string) *HoursOfOperationSummary {",
          "8159:  s.Arn = &v",
          "8164: func (s *HoursOfOperationSummary) SetId(v string) *HoursOfOperationSummary {",
          "8165:  s.Id = &v",
          "8170: func (s *HoursOfOperationSummary) SetName(v string) *HoursOfOperationSummary {",
          "8171:  s.Name = &v",
          "8172:  return s",
          "8173: }",
          "8176: type InternalServiceException struct {",
          "8185: func (s InternalServiceException) String() string {",
          "8190: func (s InternalServiceException) GoString() string {",
          "8194: func newErrorInternalServiceException(v protocol.ResponseMetadata) error {",
          "8195:  return &InternalServiceException{",
          "8201: func (s *InternalServiceException) Code() string {",
          "8202:  return \"InternalServiceException\"",
          "8206: func (s *InternalServiceException) Message() string {",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "4631: }",
          "4635:  return nil",
          "4636: }",
          "4639:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "4640: }",
          "4644:  return s.RespMetadata.StatusCode",
          "4645: }",
          "4649:  return s.RespMetadata.RequestID",
          "4650: }",
          "4711: }",
          "4715:  return awsutil.Prettify(s)",
          "4716: }",
          "4720:  return s.String()",
          "4721: }",
          "4741:  }",
          "4772: }",
          "4778: }",
          "4874: }",
          "4878:  return awsutil.Prettify(s)",
          "4879: }",
          "4883:  return s.String()",
          "4884: }",
          "4908:  }",
          "4912:  }",
          "4913:  return nil",
          "4914: }",
          "4920: }",
          "4926: }",
          "4932: }",
          "4938: }",
          "4944: }",
          "4950: }",
          "4967: }",
          "4971:  return awsutil.Prettify(s)",
          "4972: }",
          "4976:  return s.String()",
          "4977: }",
          "4983: }",
          "4989: }",
          "4995: }",
          "4998:  _ struct{} `type:\"structure\"`",
          "5003:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "5004: }",
          "5008:  return awsutil.Prettify(s)",
          "5009: }",
          "5013:  return s.String()",
          "5014: }",
          "5019:  if s.InstanceId == nil {",
          "5020:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "5021:  }",
          "5022:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "5023:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "5024:  }",
          "5026:  if invalidParams.Len() > 0 {",
          "5027:   return invalidParams",
          "",
          "[Removed Lines]",
          "4634: func (s *DuplicateResourceException) OrigErr() error {",
          "4638: func (s *DuplicateResourceException) Error() string {",
          "4643: func (s *DuplicateResourceException) StatusCode() int {",
          "4648: func (s *DuplicateResourceException) RequestID() string {",
          "4653: type Filters struct {",
          "4654:  _ struct{} `type:\"structure\"`",
          "4657:  Channels []*string `type:\"list\"`",
          "4661:  Queues []*string `min:\"1\" type:\"list\"`",
          "4662: }",
          "4665: func (s Filters) String() string {",
          "4666:  return awsutil.Prettify(s)",
          "4667: }",
          "4670: func (s Filters) GoString() string {",
          "4671:  return s.String()",
          "4672: }",
          "4675: func (s *Filters) Validate() error {",
          "4676:  invalidParams := request.ErrInvalidParams{Context: \"Filters\"}",
          "4677:  if s.Queues != nil && len(s.Queues) < 1 {",
          "4678:   invalidParams.Add(request.NewErrParamMinLen(\"Queues\", 1))",
          "4679:  }",
          "4681:  if invalidParams.Len() > 0 {",
          "4682:   return invalidParams",
          "4683:  }",
          "4684:  return nil",
          "4685: }",
          "4688: func (s *Filters) SetChannels(v []*string) *Filters {",
          "4689:  s.Channels = v",
          "4690:  return s",
          "4691: }",
          "4694: func (s *Filters) SetQueues(v []*string) *Filters {",
          "4695:  s.Queues = v",
          "4696:  return s",
          "4697: }",
          "4699: type GetContactAttributesInput struct {",
          "4700:  _ struct{} `type:\"structure\"`",
          "4705:  InitialContactId *string `location:\"uri\" locationName:\"InitialContactId\" min:\"1\" type:\"string\" required:\"true\"`",
          "4710:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "4714: func (s GetContactAttributesInput) String() string {",
          "4719: func (s GetContactAttributesInput) GoString() string {",
          "4724: func (s *GetContactAttributesInput) Validate() error {",
          "4725:  invalidParams := request.ErrInvalidParams{Context: \"GetContactAttributesInput\"}",
          "4726:  if s.InitialContactId == nil {",
          "4727:   invalidParams.Add(request.NewErrParamRequired(\"InitialContactId\"))",
          "4728:  }",
          "4729:  if s.InitialContactId != nil && len(*s.InitialContactId) < 1 {",
          "4730:   invalidParams.Add(request.NewErrParamMinLen(\"InitialContactId\", 1))",
          "4731:  }",
          "4732:  if s.InstanceId == nil {",
          "4733:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "4734:  }",
          "4735:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "4736:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "4737:  }",
          "4739:  if invalidParams.Len() > 0 {",
          "4740:   return invalidParams",
          "4742:  return nil",
          "4743: }",
          "4746: func (s *GetContactAttributesInput) SetInitialContactId(v string) *GetContactAttributesInput {",
          "4747:  s.InitialContactId = &v",
          "4748:  return s",
          "4749: }",
          "4752: func (s *GetContactAttributesInput) SetInstanceId(v string) *GetContactAttributesInput {",
          "4753:  s.InstanceId = &v",
          "4754:  return s",
          "4755: }",
          "4757: type GetContactAttributesOutput struct {",
          "4758:  _ struct{} `type:\"structure\"`",
          "4761:  Attributes map[string]*string `type:\"map\"`",
          "4762: }",
          "4765: func (s GetContactAttributesOutput) String() string {",
          "4766:  return awsutil.Prettify(s)",
          "4767: }",
          "4770: func (s GetContactAttributesOutput) GoString() string {",
          "4771:  return s.String()",
          "4775: func (s *GetContactAttributesOutput) SetAttributes(v map[string]*string) *GetContactAttributesOutput {",
          "4776:  s.Attributes = v",
          "4777:  return s",
          "4780: type GetCurrentMetricDataInput struct {",
          "4781:  _ struct{} `type:\"structure\"`",
          "4841:  CurrentMetrics []*CurrentMetric `type:\"list\" required:\"true\"`",
          "4849:  Filters *Filters `type:\"structure\" required:\"true\"`",
          "4857:  Groupings []*string `type:\"list\"`",
          "4862:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "4865:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "4873:  NextToken *string `type:\"string\"`",
          "4877: func (s GetCurrentMetricDataInput) String() string {",
          "4882: func (s GetCurrentMetricDataInput) GoString() string {",
          "4887: func (s *GetCurrentMetricDataInput) Validate() error {",
          "4888:  invalidParams := request.ErrInvalidParams{Context: \"GetCurrentMetricDataInput\"}",
          "4889:  if s.CurrentMetrics == nil {",
          "4890:   invalidParams.Add(request.NewErrParamRequired(\"CurrentMetrics\"))",
          "4891:  }",
          "4892:  if s.Filters == nil {",
          "4893:   invalidParams.Add(request.NewErrParamRequired(\"Filters\"))",
          "4894:  }",
          "4895:  if s.InstanceId == nil {",
          "4896:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "4897:  }",
          "4898:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "4899:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "4900:  }",
          "4901:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "4902:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "4903:  }",
          "4904:  if s.Filters != nil {",
          "4905:   if err := s.Filters.Validate(); err != nil {",
          "4906:    invalidParams.AddNested(\"Filters\", err.(request.ErrInvalidParams))",
          "4907:   }",
          "4910:  if invalidParams.Len() > 0 {",
          "4911:   return invalidParams",
          "4917: func (s *GetCurrentMetricDataInput) SetCurrentMetrics(v []*CurrentMetric) *GetCurrentMetricDataInput {",
          "4918:  s.CurrentMetrics = v",
          "4919:  return s",
          "4923: func (s *GetCurrentMetricDataInput) SetFilters(v *Filters) *GetCurrentMetricDataInput {",
          "4924:  s.Filters = v",
          "4925:  return s",
          "4929: func (s *GetCurrentMetricDataInput) SetGroupings(v []*string) *GetCurrentMetricDataInput {",
          "4930:  s.Groupings = v",
          "4931:  return s",
          "4935: func (s *GetCurrentMetricDataInput) SetInstanceId(v string) *GetCurrentMetricDataInput {",
          "4936:  s.InstanceId = &v",
          "4937:  return s",
          "4941: func (s *GetCurrentMetricDataInput) SetMaxResults(v int64) *GetCurrentMetricDataInput {",
          "4942:  s.MaxResults = &v",
          "4943:  return s",
          "4947: func (s *GetCurrentMetricDataInput) SetNextToken(v string) *GetCurrentMetricDataInput {",
          "4948:  s.NextToken = &v",
          "4949:  return s",
          "4952: type GetCurrentMetricDataOutput struct {",
          "4953:  _ struct{} `type:\"structure\"`",
          "4956:  DataSnapshotTime *time.Time `type:\"timestamp\"`",
          "4959:  MetricResults []*CurrentMetricResult `type:\"list\"`",
          "4966:  NextToken *string `type:\"string\"`",
          "4970: func (s GetCurrentMetricDataOutput) String() string {",
          "4975: func (s GetCurrentMetricDataOutput) GoString() string {",
          "4980: func (s *GetCurrentMetricDataOutput) SetDataSnapshotTime(v time.Time) *GetCurrentMetricDataOutput {",
          "4981:  s.DataSnapshotTime = &v",
          "4982:  return s",
          "4986: func (s *GetCurrentMetricDataOutput) SetMetricResults(v []*CurrentMetricResult) *GetCurrentMetricDataOutput {",
          "4987:  s.MetricResults = v",
          "4988:  return s",
          "4992: func (s *GetCurrentMetricDataOutput) SetNextToken(v string) *GetCurrentMetricDataOutput {",
          "4993:  s.NextToken = &v",
          "4994:  return s",
          "4997: type GetFederationTokenInput struct {",
          "5007: func (s GetFederationTokenInput) String() string {",
          "5012: func (s GetFederationTokenInput) GoString() string {",
          "5017: func (s *GetFederationTokenInput) Validate() error {",
          "5018:  invalidParams := request.ErrInvalidParams{Context: \"GetFederationTokenInput\"}",
          "",
          "[Added Lines]",
          "8214: func (s *InternalServiceException) OrigErr() error {",
          "8218: func (s *InternalServiceException) Error() string {",
          "8223: func (s *InternalServiceException) StatusCode() int {",
          "8228: func (s *InternalServiceException) RequestID() string {",
          "8233: type InvalidContactFlowException struct {",
          "8234:  _            struct{}                  `type:\"structure\"`",
          "8235:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "8237:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "8240:  Problems []*ProblemDetail `locationName:\"problems\" min:\"1\" type:\"list\"`",
          "8244: func (s InvalidContactFlowException) String() string {",
          "8249: func (s InvalidContactFlowException) GoString() string {",
          "8253: func newErrorInvalidContactFlowException(v protocol.ResponseMetadata) error {",
          "8254:  return &InvalidContactFlowException{",
          "8255:   RespMetadata: v,",
          "8260: func (s *InvalidContactFlowException) Code() string {",
          "8261:  return \"InvalidContactFlowException\"",
          "8265: func (s *InvalidContactFlowException) Message() string {",
          "8266:  if s.Message_ != nil {",
          "8267:   return *s.Message_",
          "8268:  }",
          "8269:  return \"\"",
          "8270: }",
          "8273: func (s *InvalidContactFlowException) OrigErr() error {",
          "8274:  return nil",
          "8275: }",
          "8277: func (s *InvalidContactFlowException) Error() string {",
          "8278:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "8279: }",
          "8282: func (s *InvalidContactFlowException) StatusCode() int {",
          "8283:  return s.RespMetadata.StatusCode",
          "8284: }",
          "8287: func (s *InvalidContactFlowException) RequestID() string {",
          "8288:  return s.RespMetadata.RequestID",
          "8289: }",
          "8292: type InvalidParameterException struct {",
          "8293:  _            struct{}                  `type:\"structure\"`",
          "8294:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "8297:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "8301: func (s InvalidParameterException) String() string {",
          "8306: func (s InvalidParameterException) GoString() string {",
          "8310: func newErrorInvalidParameterException(v protocol.ResponseMetadata) error {",
          "8311:  return &InvalidParameterException{",
          "8312:   RespMetadata: v,",
          "8314: }",
          "8317: func (s *InvalidParameterException) Code() string {",
          "8318:  return \"InvalidParameterException\"",
          "8319: }",
          "8322: func (s *InvalidParameterException) Message() string {",
          "8323:  if s.Message_ != nil {",
          "8324:   return *s.Message_",
          "8326:  return \"\"",
          "8327: }",
          "8330: func (s *InvalidParameterException) OrigErr() error {",
          "8334: func (s *InvalidParameterException) Error() string {",
          "8335:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "8339: func (s *InvalidParameterException) StatusCode() int {",
          "8340:  return s.RespMetadata.StatusCode",
          "8344: func (s *InvalidParameterException) RequestID() string {",
          "8345:  return s.RespMetadata.RequestID",
          "8349: type InvalidRequestException struct {",
          "8350:  _            struct{}                  `type:\"structure\"`",
          "8351:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "8354:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "8358: func (s InvalidRequestException) String() string {",
          "8359:  return awsutil.Prettify(s)",
          "8363: func (s InvalidRequestException) GoString() string {",
          "8364:  return s.String()",
          "8367: func newErrorInvalidRequestException(v protocol.ResponseMetadata) error {",
          "8368:  return &InvalidRequestException{",
          "8369:   RespMetadata: v,",
          "8370:  }",
          "8371: }",
          "8374: func (s *InvalidRequestException) Code() string {",
          "8375:  return \"InvalidRequestException\"",
          "8376: }",
          "8379: func (s *InvalidRequestException) Message() string {",
          "8380:  if s.Message_ != nil {",
          "8381:   return *s.Message_",
          "8382:  }",
          "8383:  return \"\"",
          "8384: }",
          "8387: func (s *InvalidRequestException) OrigErr() error {",
          "8388:  return nil",
          "8389: }",
          "8391: func (s *InvalidRequestException) Error() string {",
          "8392:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "8393: }",
          "8396: func (s *InvalidRequestException) StatusCode() int {",
          "8397:  return s.RespMetadata.StatusCode",
          "8398: }",
          "8401: func (s *InvalidRequestException) RequestID() string {",
          "8402:  return s.RespMetadata.RequestID",
          "8403: }",
          "8406: type LimitExceededException struct {",
          "8407:  _            struct{}                  `type:\"structure\"`",
          "8408:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "8411:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "8415: func (s LimitExceededException) String() string {",
          "8420: func (s LimitExceededException) GoString() string {",
          "8424: func newErrorLimitExceededException(v protocol.ResponseMetadata) error {",
          "8425:  return &LimitExceededException{",
          "8426:   RespMetadata: v,",
          "8427:  }",
          "8431: func (s *LimitExceededException) Code() string {",
          "8432:  return \"LimitExceededException\"",
          "8436: func (s *LimitExceededException) Message() string {",
          "8437:  if s.Message_ != nil {",
          "8438:   return *s.Message_",
          "8439:  }",
          "8440:  return \"\"",
          "8444: func (s *LimitExceededException) OrigErr() error {",
          "8445:  return nil",
          "8446: }",
          "8448: func (s *LimitExceededException) Error() string {",
          "8449:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "8450: }",
          "8453: func (s *LimitExceededException) StatusCode() int {",
          "8454:  return s.RespMetadata.StatusCode",
          "8455: }",
          "8458: func (s *LimitExceededException) RequestID() string {",
          "8459:  return s.RespMetadata.RequestID",
          "8460: }",
          "8462: type ListContactFlowsInput struct {",
          "8466:  ContactFlowTypes []*string `location:\"querystring\" locationName:\"contactFlowTypes\" type:\"list\"`",
          "8474:  MaxResults *int64 `location:\"querystring\" locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "8478:  NextToken *string `location:\"querystring\" locationName:\"nextToken\" type:\"string\"`",
          "8482: func (s ListContactFlowsInput) String() string {",
          "8487: func (s ListContactFlowsInput) GoString() string {",
          "8492: func (s *ListContactFlowsInput) Validate() error {",
          "8493:  invalidParams := request.ErrInvalidParams{Context: \"ListContactFlowsInput\"}",
          "8500:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "8501:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "8502:  }",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "5029:  return nil",
          "5030: }",
          "5034:  s.InstanceId = &v",
          "5035:  return s",
          "5036: }",
          "5039:  _ struct{} `type:\"structure\"`",
          "5043: }",
          "5047:  return awsutil.Prettify(s)",
          "5048: }",
          "5052:  return s.String()",
          "5053: }",
          "5058:  return s",
          "5059: }",
          "",
          "[Removed Lines]",
          "5033: func (s *GetFederationTokenInput) SetInstanceId(v string) *GetFederationTokenInput {",
          "5038: type GetFederationTokenOutput struct {",
          "5042:  Credentials *Credentials `type:\"structure\"`",
          "5046: func (s GetFederationTokenOutput) String() string {",
          "5051: func (s GetFederationTokenOutput) GoString() string {",
          "5056: func (s *GetFederationTokenOutput) SetCredentials(v *Credentials) *GetFederationTokenOutput {",
          "5057:  s.Credentials = v",
          "5061: type GetMetricDataInput struct {",
          "5062:  _ struct{} `type:\"structure\"`",
          "5072:  EndTime *time.Time `type:\"timestamp\" required:\"true\"`",
          "5080:  Filters *Filters `type:\"structure\" required:\"true\"`",
          "5089:  Groupings []*string `type:\"list\"`",
          "5251:  HistoricalMetrics []*HistoricalMetric `type:\"list\" required:\"true\"`",
          "",
          "[Added Lines]",
          "8511: func (s *ListContactFlowsInput) SetContactFlowTypes(v []*string) *ListContactFlowsInput {",
          "8512:  s.ContactFlowTypes = v",
          "8513:  return s",
          "8514: }",
          "8517: func (s *ListContactFlowsInput) SetInstanceId(v string) *ListContactFlowsInput {",
          "8523: func (s *ListContactFlowsInput) SetMaxResults(v int64) *ListContactFlowsInput {",
          "8524:  s.MaxResults = &v",
          "8525:  return s",
          "8526: }",
          "8529: func (s *ListContactFlowsInput) SetNextToken(v string) *ListContactFlowsInput {",
          "8530:  s.NextToken = &v",
          "8531:  return s",
          "8532: }",
          "8534: type ListContactFlowsOutput struct {",
          "8538:  ContactFlowSummaryList []*ContactFlowSummary `type:\"list\"`",
          "8541:  NextToken *string `type:\"string\"`",
          "8545: func (s ListContactFlowsOutput) String() string {",
          "8550: func (s ListContactFlowsOutput) GoString() string {",
          "8555: func (s *ListContactFlowsOutput) SetContactFlowSummaryList(v []*ContactFlowSummary) *ListContactFlowsOutput {",
          "8556:  s.ContactFlowSummaryList = v",
          "8561: func (s *ListContactFlowsOutput) SetNextToken(v string) *ListContactFlowsOutput {",
          "8562:  s.NextToken = &v",
          "8563:  return s",
          "8564: }",
          "8566: type ListHoursOfOperationsInput struct {",
          "8567:  _ struct{} `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "5256:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "5274: }",
          "5278:  return awsutil.Prettify(s)",
          "5279: }",
          "5283:  return s.String()",
          "5284: }",
          "5298:  if s.InstanceId == nil {",
          "5299:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "5300:  }",
          "5301:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "5302:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "5303:  }",
          "5304:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "5305:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "5306:  }",
          "5316:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "5259:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "5263:  NextToken *string `type:\"string\"`",
          "5273:  StartTime *time.Time `type:\"timestamp\" required:\"true\"`",
          "5277: func (s GetMetricDataInput) String() string {",
          "5282: func (s GetMetricDataInput) GoString() string {",
          "5287: func (s *GetMetricDataInput) Validate() error {",
          "5288:  invalidParams := request.ErrInvalidParams{Context: \"GetMetricDataInput\"}",
          "5289:  if s.EndTime == nil {",
          "5290:   invalidParams.Add(request.NewErrParamRequired(\"EndTime\"))",
          "5291:  }",
          "5292:  if s.Filters == nil {",
          "5293:   invalidParams.Add(request.NewErrParamRequired(\"Filters\"))",
          "5294:  }",
          "5295:  if s.HistoricalMetrics == nil {",
          "5296:   invalidParams.Add(request.NewErrParamRequired(\"HistoricalMetrics\"))",
          "5297:  }",
          "5307:  if s.StartTime == nil {",
          "5308:   invalidParams.Add(request.NewErrParamRequired(\"StartTime\"))",
          "5309:  }",
          "5310:  if s.Filters != nil {",
          "5311:   if err := s.Filters.Validate(); err != nil {",
          "5312:    invalidParams.AddNested(\"Filters\", err.(request.ErrInvalidParams))",
          "5313:   }",
          "5314:  }",
          "",
          "[Added Lines]",
          "8575:  MaxResults *int64 `location:\"querystring\" locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "8579:  NextToken *string `location:\"querystring\" locationName:\"nextToken\" type:\"string\"`",
          "8583: func (s ListHoursOfOperationsInput) String() string {",
          "8588: func (s ListHoursOfOperationsInput) GoString() string {",
          "8593: func (s *ListHoursOfOperationsInput) Validate() error {",
          "8594:  invalidParams := request.ErrInvalidParams{Context: \"ListHoursOfOperationsInput\"}",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "5319:  return nil",
          "5320: }",
          "5348:  s.InstanceId = &v",
          "5349:  return s",
          "5350: }",
          "5354:  s.MaxResults = &v",
          "5355:  return s",
          "5356: }",
          "5360:  s.NextToken = &v",
          "5361:  return s",
          "5362: }",
          "5371:  _ struct{} `type:\"structure\"`",
          "5383:  NextToken *string `type:\"string\"`",
          "5384: }",
          "5388:  return awsutil.Prettify(s)",
          "5389: }",
          "5393:  return s.String()",
          "5394: }",
          "5399:  return s",
          "5400: }",
          "5404:  s.NextToken = &v",
          "5405:  return s",
          "5406: }",
          "5410:  _ struct{} `type:\"structure\"`",
          "5426: }",
          "5430:  return awsutil.Prettify(s)",
          "5431: }",
          "5435:  return s.String()",
          "5436: }",
          "5441:  return s",
          "5442: }",
          "5447:  return s",
          "5448: }",
          "5453:  return s",
          "5454: }",
          "5459:  return s",
          "5460: }",
          "5465:  return s",
          "5466: }",
          "5470:  _ struct{} `type:\"structure\"`",
          "5480: }",
          "5484:  return awsutil.Prettify(s)",
          "5485: }",
          "5489:  return s.String()",
          "5490: }",
          "5501:  return s",
          "5502: }",
          "5507:  return s",
          "5508: }",
          "5512:  _ struct{} `type:\"structure\"`",
          "5522: }",
          "5526:  return awsutil.Prettify(s)",
          "5527: }",
          "5531:  return s.String()",
          "5532: }",
          "5538: }",
          "5543:  return s",
          "5544: }",
          "5549:  return s",
          "5550: }",
          "5570: }",
          "5574:  return awsutil.Prettify(s)",
          "5575: }",
          "5579:  return s.String()",
          "5580: }",
          "5603:  return s",
          "5604: }",
          "5609:  return s",
          "5610: }",
          "5614:  _ struct{} `type:\"structure\"`",
          "5630: }",
          "5634:  return awsutil.Prettify(s)",
          "5635: }",
          "5639:  return s.String()",
          "5640: }",
          "5646: }",
          "5651:  return s",
          "5652: }",
          "5657:  return s",
          "5658: }",
          "5663:  return s",
          "5664: }",
          "5669:  return s",
          "5670: }",
          "5676:  _ struct{} `type:\"structure\"`",
          "5689: }",
          "5693:  return awsutil.Prettify(s)",
          "5694: }",
          "5698:  return s.String()",
          "5699: }",
          "5704:  return s",
          "5705: }",
          "5710:  return s",
          "5711: }",
          "5734: }",
          "5738:  return awsutil.Prettify(s)",
          "5739: }",
          "5743:  return s.String()",
          "5744: }",
          "5749:  return s",
          "5750: }",
          "5755:  return s",
          "5756: }",
          "5760:  _ struct{} `type:\"structure\"`",
          "5767: }",
          "5771:  return awsutil.Prettify(s)",
          "5772: }",
          "5776:  return s.String()",
          "5777: }",
          "5782:  return s",
          "5783: }",
          "5788:  return s",
          "5789: }",
          "5793:  _ struct{} `type:\"structure\"`",
          "5803: }",
          "5807:  return awsutil.Prettify(s)",
          "5808: }",
          "5812:  return s.String()",
          "5813: }",
          "5818:  return s",
          "5819: }",
          "5824:  return s",
          "5825: }",
          "5830:  return s",
          "5831: }",
          "5840: }",
          "5844:  return awsutil.Prettify(s)",
          "5845: }",
          "5849:  return s.String()",
          "5850: }",
          "5874: }",
          "5878: }",
          "5897: }",
          "5901:  return awsutil.Prettify(s)",
          "5902: }",
          "5906:  return s.String()",
          "5907: }",
          "5912:  }",
          "5924:  }",
          "5930:  return nil",
          "5931: }",
          "5935: }",
          "5940: }",
          "5945: }",
          "5954: }",
          "5958:  return awsutil.Prettify(s)",
          "5959: }",
          "5963:  return s.String()",
          "5964: }",
          "5997: }",
          "6002: }",
          "6011: }",
          "6015:  return awsutil.Prettify(s)",
          "6016: }",
          "6020:  return s.String()",
          "6021: }",
          "6026:  }",
          "6027: }",
          "6032: }",
          "6045: }",
          "6049: }",
          "6054: }",
          "6059: }",
          "6062:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "5323: func (s *GetMetricDataInput) SetEndTime(v time.Time) *GetMetricDataInput {",
          "5324:  s.EndTime = &v",
          "5325:  return s",
          "5326: }",
          "5329: func (s *GetMetricDataInput) SetFilters(v *Filters) *GetMetricDataInput {",
          "5330:  s.Filters = v",
          "5331:  return s",
          "5332: }",
          "5335: func (s *GetMetricDataInput) SetGroupings(v []*string) *GetMetricDataInput {",
          "5336:  s.Groupings = v",
          "5337:  return s",
          "5338: }",
          "5341: func (s *GetMetricDataInput) SetHistoricalMetrics(v []*HistoricalMetric) *GetMetricDataInput {",
          "5342:  s.HistoricalMetrics = v",
          "5343:  return s",
          "5344: }",
          "5347: func (s *GetMetricDataInput) SetInstanceId(v string) *GetMetricDataInput {",
          "5353: func (s *GetMetricDataInput) SetMaxResults(v int64) *GetMetricDataInput {",
          "5359: func (s *GetMetricDataInput) SetNextToken(v string) *GetMetricDataInput {",
          "5365: func (s *GetMetricDataInput) SetStartTime(v time.Time) *GetMetricDataInput {",
          "5366:  s.StartTime = &v",
          "5367:  return s",
          "5368: }",
          "5370: type GetMetricDataOutput struct {",
          "5376:  MetricResults []*HistoricalMetricResult `type:\"list\"`",
          "5387: func (s GetMetricDataOutput) String() string {",
          "5392: func (s GetMetricDataOutput) GoString() string {",
          "5397: func (s *GetMetricDataOutput) SetMetricResults(v []*HistoricalMetricResult) *GetMetricDataOutput {",
          "5398:  s.MetricResults = v",
          "5403: func (s *GetMetricDataOutput) SetNextToken(v string) *GetMetricDataOutput {",
          "5409: type HierarchyGroup struct {",
          "5413:  Arn *string `type:\"string\"`",
          "5416:  HierarchyPath *HierarchyPath `type:\"structure\"`",
          "5419:  Id *string `type:\"string\"`",
          "5422:  LevelId *string `type:\"string\"`",
          "5425:  Name *string `type:\"string\"`",
          "5429: func (s HierarchyGroup) String() string {",
          "5434: func (s HierarchyGroup) GoString() string {",
          "5439: func (s *HierarchyGroup) SetArn(v string) *HierarchyGroup {",
          "5440:  s.Arn = &v",
          "5445: func (s *HierarchyGroup) SetHierarchyPath(v *HierarchyPath) *HierarchyGroup {",
          "5446:  s.HierarchyPath = v",
          "5451: func (s *HierarchyGroup) SetId(v string) *HierarchyGroup {",
          "5452:  s.Id = &v",
          "5457: func (s *HierarchyGroup) SetLevelId(v string) *HierarchyGroup {",
          "5458:  s.LevelId = &v",
          "5463: func (s *HierarchyGroup) SetName(v string) *HierarchyGroup {",
          "5464:  s.Name = &v",
          "5469: type HierarchyGroupSummary struct {",
          "5473:  Arn *string `type:\"string\"`",
          "5476:  Id *string `type:\"string\"`",
          "5479:  Name *string `type:\"string\"`",
          "5483: func (s HierarchyGroupSummary) String() string {",
          "5488: func (s HierarchyGroupSummary) GoString() string {",
          "5493: func (s *HierarchyGroupSummary) SetArn(v string) *HierarchyGroupSummary {",
          "5494:  s.Arn = &v",
          "5495:  return s",
          "5496: }",
          "5499: func (s *HierarchyGroupSummary) SetId(v string) *HierarchyGroupSummary {",
          "5500:  s.Id = &v",
          "5505: func (s *HierarchyGroupSummary) SetName(v string) *HierarchyGroupSummary {",
          "5506:  s.Name = &v",
          "5511: type HierarchyLevel struct {",
          "5515:  Arn *string `type:\"string\"`",
          "5518:  Id *string `type:\"string\"`",
          "5521:  Name *string `type:\"string\"`",
          "5525: func (s HierarchyLevel) String() string {",
          "5530: func (s HierarchyLevel) GoString() string {",
          "5535: func (s *HierarchyLevel) SetArn(v string) *HierarchyLevel {",
          "5536:  s.Arn = &v",
          "5537:  return s",
          "5541: func (s *HierarchyLevel) SetId(v string) *HierarchyLevel {",
          "5542:  s.Id = &v",
          "5547: func (s *HierarchyLevel) SetName(v string) *HierarchyLevel {",
          "5548:  s.Name = &v",
          "5553: type HierarchyPath struct {",
          "5554:  _ struct{} `type:\"structure\"`",
          "5557:  LevelFive *HierarchyGroupSummary `type:\"structure\"`",
          "5560:  LevelFour *HierarchyGroupSummary `type:\"structure\"`",
          "5563:  LevelOne *HierarchyGroupSummary `type:\"structure\"`",
          "5566:  LevelThree *HierarchyGroupSummary `type:\"structure\"`",
          "5569:  LevelTwo *HierarchyGroupSummary `type:\"structure\"`",
          "5573: func (s HierarchyPath) String() string {",
          "5578: func (s HierarchyPath) GoString() string {",
          "5583: func (s *HierarchyPath) SetLevelFive(v *HierarchyGroupSummary) *HierarchyPath {",
          "5584:  s.LevelFive = v",
          "5585:  return s",
          "5586: }",
          "5589: func (s *HierarchyPath) SetLevelFour(v *HierarchyGroupSummary) *HierarchyPath {",
          "5590:  s.LevelFour = v",
          "5591:  return s",
          "5592: }",
          "5595: func (s *HierarchyPath) SetLevelOne(v *HierarchyGroupSummary) *HierarchyPath {",
          "5596:  s.LevelOne = v",
          "5597:  return s",
          "5598: }",
          "5601: func (s *HierarchyPath) SetLevelThree(v *HierarchyGroupSummary) *HierarchyPath {",
          "5602:  s.LevelThree = v",
          "5607: func (s *HierarchyPath) SetLevelTwo(v *HierarchyGroupSummary) *HierarchyPath {",
          "5608:  s.LevelTwo = v",
          "5613: type HierarchyStructure struct {",
          "5617:  LevelFive *HierarchyLevel `type:\"structure\"`",
          "5620:  LevelFour *HierarchyLevel `type:\"structure\"`",
          "5623:  LevelOne *HierarchyLevel `type:\"structure\"`",
          "5626:  LevelThree *HierarchyLevel `type:\"structure\"`",
          "5629:  LevelTwo *HierarchyLevel `type:\"structure\"`",
          "5633: func (s HierarchyStructure) String() string {",
          "5638: func (s HierarchyStructure) GoString() string {",
          "5643: func (s *HierarchyStructure) SetLevelFive(v *HierarchyLevel) *HierarchyStructure {",
          "5644:  s.LevelFive = v",
          "5645:  return s",
          "5649: func (s *HierarchyStructure) SetLevelFour(v *HierarchyLevel) *HierarchyStructure {",
          "5650:  s.LevelFour = v",
          "5655: func (s *HierarchyStructure) SetLevelOne(v *HierarchyLevel) *HierarchyStructure {",
          "5656:  s.LevelOne = v",
          "5661: func (s *HierarchyStructure) SetLevelThree(v *HierarchyLevel) *HierarchyStructure {",
          "5662:  s.LevelThree = v",
          "5667: func (s *HierarchyStructure) SetLevelTwo(v *HierarchyLevel) *HierarchyStructure {",
          "5668:  s.LevelTwo = v",
          "5675: type HistoricalMetric struct {",
          "5679:  Name *string `type:\"string\" enum:\"HistoricalMetricName\"`",
          "5682:  Statistic *string `type:\"string\" enum:\"Statistic\"`",
          "5685:  Threshold *Threshold `type:\"structure\"`",
          "5688:  Unit *string `type:\"string\" enum:\"Unit\"`",
          "5692: func (s HistoricalMetric) String() string {",
          "5697: func (s HistoricalMetric) GoString() string {",
          "5702: func (s *HistoricalMetric) SetName(v string) *HistoricalMetric {",
          "5703:  s.Name = &v",
          "5708: func (s *HistoricalMetric) SetStatistic(v string) *HistoricalMetric {",
          "5709:  s.Statistic = &v",
          "5714: func (s *HistoricalMetric) SetThreshold(v *Threshold) *HistoricalMetric {",
          "5715:  s.Threshold = v",
          "5716:  return s",
          "5717: }",
          "5720: func (s *HistoricalMetric) SetUnit(v string) *HistoricalMetric {",
          "5721:  s.Unit = &v",
          "5722:  return s",
          "5723: }",
          "5726: type HistoricalMetricData struct {",
          "5727:  _ struct{} `type:\"structure\"`",
          "5730:  Metric *HistoricalMetric `type:\"structure\"`",
          "5733:  Value *float64 `type:\"double\"`",
          "5737: func (s HistoricalMetricData) String() string {",
          "5742: func (s HistoricalMetricData) GoString() string {",
          "5747: func (s *HistoricalMetricData) SetMetric(v *HistoricalMetric) *HistoricalMetricData {",
          "5748:  s.Metric = v",
          "5753: func (s *HistoricalMetricData) SetValue(v float64) *HistoricalMetricData {",
          "5754:  s.Value = &v",
          "5759: type HistoricalMetricResult struct {",
          "5763:  Collections []*HistoricalMetricData `type:\"list\"`",
          "5766:  Dimensions *Dimensions `type:\"structure\"`",
          "5770: func (s HistoricalMetricResult) String() string {",
          "5775: func (s HistoricalMetricResult) GoString() string {",
          "5780: func (s *HistoricalMetricResult) SetCollections(v []*HistoricalMetricData) *HistoricalMetricResult {",
          "5781:  s.Collections = v",
          "5786: func (s *HistoricalMetricResult) SetDimensions(v *Dimensions) *HistoricalMetricResult {",
          "5787:  s.Dimensions = v",
          "5792: type HoursOfOperationSummary struct {",
          "5796:  Arn *string `type:\"string\"`",
          "5799:  Id *string `type:\"string\"`",
          "5802:  Name *string `type:\"string\"`",
          "5806: func (s HoursOfOperationSummary) String() string {",
          "5811: func (s HoursOfOperationSummary) GoString() string {",
          "5816: func (s *HoursOfOperationSummary) SetArn(v string) *HoursOfOperationSummary {",
          "5817:  s.Arn = &v",
          "5822: func (s *HoursOfOperationSummary) SetId(v string) *HoursOfOperationSummary {",
          "5823:  s.Id = &v",
          "5828: func (s *HoursOfOperationSummary) SetName(v string) *HoursOfOperationSummary {",
          "5829:  s.Name = &v",
          "5834: type InternalServiceException struct {",
          "5835:  _            struct{}                  `type:\"structure\"`",
          "5836:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "5839:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "5843: func (s InternalServiceException) String() string {",
          "5848: func (s InternalServiceException) GoString() string {",
          "5852: func newErrorInternalServiceException(v protocol.ResponseMetadata) error {",
          "5853:  return &InternalServiceException{",
          "5854:   RespMetadata: v,",
          "5855:  }",
          "5856: }",
          "5859: func (s *InternalServiceException) Code() string {",
          "5860:  return \"InternalServiceException\"",
          "5861: }",
          "5864: func (s *InternalServiceException) Message() string {",
          "5865:  if s.Message_ != nil {",
          "5866:   return *s.Message_",
          "5867:  }",
          "5868:  return \"\"",
          "5869: }",
          "5872: func (s *InternalServiceException) OrigErr() error {",
          "5873:  return nil",
          "5876: func (s *InternalServiceException) Error() string {",
          "5877:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "5881: func (s *InternalServiceException) StatusCode() int {",
          "5882:  return s.RespMetadata.StatusCode",
          "5883: }",
          "5886: func (s *InternalServiceException) RequestID() string {",
          "5887:  return s.RespMetadata.RequestID",
          "5888: }",
          "5891: type InvalidParameterException struct {",
          "5892:  _            struct{}                  `type:\"structure\"`",
          "5893:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "5896:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "5900: func (s InvalidParameterException) String() string {",
          "5905: func (s InvalidParameterException) GoString() string {",
          "5909: func newErrorInvalidParameterException(v protocol.ResponseMetadata) error {",
          "5910:  return &InvalidParameterException{",
          "5911:   RespMetadata: v,",
          "5913: }",
          "5916: func (s *InvalidParameterException) Code() string {",
          "5917:  return \"InvalidParameterException\"",
          "5918: }",
          "5921: func (s *InvalidParameterException) Message() string {",
          "5922:  if s.Message_ != nil {",
          "5923:   return *s.Message_",
          "5925:  return \"\"",
          "5926: }",
          "5929: func (s *InvalidParameterException) OrigErr() error {",
          "5933: func (s *InvalidParameterException) Error() string {",
          "5934:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "5938: func (s *InvalidParameterException) StatusCode() int {",
          "5939:  return s.RespMetadata.StatusCode",
          "5943: func (s *InvalidParameterException) RequestID() string {",
          "5944:  return s.RespMetadata.RequestID",
          "5948: type InvalidRequestException struct {",
          "5949:  _            struct{}                  `type:\"structure\"`",
          "5950:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "5953:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "5957: func (s InvalidRequestException) String() string {",
          "5962: func (s InvalidRequestException) GoString() string {",
          "5966: func newErrorInvalidRequestException(v protocol.ResponseMetadata) error {",
          "5967:  return &InvalidRequestException{",
          "5968:   RespMetadata: v,",
          "5969:  }",
          "5970: }",
          "5973: func (s *InvalidRequestException) Code() string {",
          "5974:  return \"InvalidRequestException\"",
          "5975: }",
          "5978: func (s *InvalidRequestException) Message() string {",
          "5979:  if s.Message_ != nil {",
          "5980:   return *s.Message_",
          "5981:  }",
          "5982:  return \"\"",
          "5983: }",
          "5986: func (s *InvalidRequestException) OrigErr() error {",
          "5987:  return nil",
          "5988: }",
          "5990: func (s *InvalidRequestException) Error() string {",
          "5991:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "5992: }",
          "5995: func (s *InvalidRequestException) StatusCode() int {",
          "5996:  return s.RespMetadata.StatusCode",
          "6000: func (s *InvalidRequestException) RequestID() string {",
          "6001:  return s.RespMetadata.RequestID",
          "6005: type LimitExceededException struct {",
          "6006:  _            struct{}                  `type:\"structure\"`",
          "6007:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "6010:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "6014: func (s LimitExceededException) String() string {",
          "6019: func (s LimitExceededException) GoString() string {",
          "6023: func newErrorLimitExceededException(v protocol.ResponseMetadata) error {",
          "6024:  return &LimitExceededException{",
          "6025:   RespMetadata: v,",
          "6030: func (s *LimitExceededException) Code() string {",
          "6031:  return \"LimitExceededException\"",
          "6035: func (s *LimitExceededException) Message() string {",
          "6036:  if s.Message_ != nil {",
          "6037:   return *s.Message_",
          "6038:  }",
          "6039:  return \"\"",
          "6040: }",
          "6043: func (s *LimitExceededException) OrigErr() error {",
          "6044:  return nil",
          "6047: func (s *LimitExceededException) Error() string {",
          "6048:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "6052: func (s *LimitExceededException) StatusCode() int {",
          "6053:  return s.RespMetadata.StatusCode",
          "6057: func (s *LimitExceededException) RequestID() string {",
          "6058:  return s.RespMetadata.RequestID",
          "6061: type ListContactFlowsInput struct {",
          "6065:  ContactFlowTypes []*string `location:\"querystring\" locationName:\"contactFlowTypes\" type:\"list\"`",
          "",
          "[Added Lines]",
          "8612: func (s *ListHoursOfOperationsInput) SetInstanceId(v string) *ListHoursOfOperationsInput {",
          "8618: func (s *ListHoursOfOperationsInput) SetMaxResults(v int64) *ListHoursOfOperationsInput {",
          "8624: func (s *ListHoursOfOperationsInput) SetNextToken(v string) *ListHoursOfOperationsInput {",
          "8629: type ListHoursOfOperationsOutput struct {",
          "8633:  HoursOfOperationSummaryList []*HoursOfOperationSummary `type:\"list\"`",
          "8640: func (s ListHoursOfOperationsOutput) String() string {",
          "8645: func (s ListHoursOfOperationsOutput) GoString() string {",
          "8650: func (s *ListHoursOfOperationsOutput) SetHoursOfOperationSummaryList(v []*HoursOfOperationSummary) *ListHoursOfOperationsOutput {",
          "8651:  s.HoursOfOperationSummaryList = v",
          "8656: func (s *ListHoursOfOperationsOutput) SetNextToken(v string) *ListHoursOfOperationsOutput {",
          "8661: type ListPhoneNumbersInput struct {",
          "8667:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "8670:  MaxResults *int64 `location:\"querystring\" locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "8674:  NextToken *string `location:\"querystring\" locationName:\"nextToken\" type:\"string\"`",
          "8677:  PhoneNumberCountryCodes []*string `location:\"querystring\" locationName:\"phoneNumberCountryCodes\" type:\"list\"`",
          "8680:  PhoneNumberTypes []*string `location:\"querystring\" locationName:\"phoneNumberTypes\" type:\"list\"`",
          "8684: func (s ListPhoneNumbersInput) String() string {",
          "8689: func (s ListPhoneNumbersInput) GoString() string {",
          "8694: func (s *ListPhoneNumbersInput) Validate() error {",
          "8695:  invalidParams := request.ErrInvalidParams{Context: \"ListPhoneNumbersInput\"}",
          "8696:  if s.InstanceId == nil {",
          "8697:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "8698:  }",
          "8699:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "8700:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "8701:  }",
          "8702:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "8703:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "8704:  }",
          "8706:  if invalidParams.Len() > 0 {",
          "8707:   return invalidParams",
          "8708:  }",
          "8709:  return nil",
          "8710: }",
          "8713: func (s *ListPhoneNumbersInput) SetInstanceId(v string) *ListPhoneNumbersInput {",
          "8714:  s.InstanceId = &v",
          "8719: func (s *ListPhoneNumbersInput) SetMaxResults(v int64) *ListPhoneNumbersInput {",
          "8720:  s.MaxResults = &v",
          "8725: func (s *ListPhoneNumbersInput) SetNextToken(v string) *ListPhoneNumbersInput {",
          "8726:  s.NextToken = &v",
          "8731: func (s *ListPhoneNumbersInput) SetPhoneNumberCountryCodes(v []*string) *ListPhoneNumbersInput {",
          "8732:  s.PhoneNumberCountryCodes = v",
          "8737: func (s *ListPhoneNumbersInput) SetPhoneNumberTypes(v []*string) *ListPhoneNumbersInput {",
          "8738:  s.PhoneNumberTypes = v",
          "8742: type ListPhoneNumbersOutput struct {",
          "8746:  NextToken *string `type:\"string\"`",
          "8749:  PhoneNumberSummaryList []*PhoneNumberSummary `type:\"list\"`",
          "8753: func (s ListPhoneNumbersOutput) String() string {",
          "8758: func (s ListPhoneNumbersOutput) GoString() string {",
          "8763: func (s *ListPhoneNumbersOutput) SetNextToken(v string) *ListPhoneNumbersOutput {",
          "8764:  s.NextToken = &v",
          "8769: func (s *ListPhoneNumbersOutput) SetPhoneNumberSummaryList(v []*PhoneNumberSummary) *ListPhoneNumbersOutput {",
          "8770:  s.PhoneNumberSummaryList = v",
          "8774: type ListPromptsInput struct {",
          "8780:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "8783:  MaxResults *int64 `location:\"querystring\" locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "8787:  NextToken *string `location:\"querystring\" locationName:\"nextToken\" type:\"string\"`",
          "8791: func (s ListPromptsInput) String() string {",
          "8796: func (s ListPromptsInput) GoString() string {",
          "8801: func (s *ListPromptsInput) Validate() error {",
          "8802:  invalidParams := request.ErrInvalidParams{Context: \"ListPromptsInput\"}",
          "8803:  if s.InstanceId == nil {",
          "8804:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "8805:  }",
          "8806:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "8807:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "8808:  }",
          "8809:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "8810:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "8811:  }",
          "8813:  if invalidParams.Len() > 0 {",
          "8814:   return invalidParams",
          "8815:  }",
          "8816:  return nil",
          "8820: func (s *ListPromptsInput) SetInstanceId(v string) *ListPromptsInput {",
          "8821:  s.InstanceId = &v",
          "8826: func (s *ListPromptsInput) SetMaxResults(v int64) *ListPromptsInput {",
          "8827:  s.MaxResults = &v",
          "8832: func (s *ListPromptsInput) SetNextToken(v string) *ListPromptsInput {",
          "8833:  s.NextToken = &v",
          "8834:  return s",
          "8835: }",
          "8837: type ListPromptsOutput struct {",
          "8838:  _ struct{} `type:\"structure\"`",
          "8841:  NextToken *string `type:\"string\"`",
          "8844:  PromptSummaryList []*PromptSummary `type:\"list\"`",
          "8848: func (s ListPromptsOutput) String() string {",
          "8853: func (s ListPromptsOutput) GoString() string {",
          "8858: func (s *ListPromptsOutput) SetNextToken(v string) *ListPromptsOutput {",
          "8859:  s.NextToken = &v",
          "8864: func (s *ListPromptsOutput) SetPromptSummaryList(v []*PromptSummary) *ListPromptsOutput {",
          "8865:  s.PromptSummaryList = v",
          "8869: type ListQueuesInput struct {",
          "8875:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "8878:  MaxResults *int64 `location:\"querystring\" locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "8882:  NextToken *string `location:\"querystring\" locationName:\"nextToken\" type:\"string\"`",
          "8885:  QueueTypes []*string `location:\"querystring\" locationName:\"queueTypes\" type:\"list\"`",
          "8889: func (s ListQueuesInput) String() string {",
          "8894: func (s ListQueuesInput) GoString() string {",
          "8899: func (s *ListQueuesInput) Validate() error {",
          "8900:  invalidParams := request.ErrInvalidParams{Context: \"ListQueuesInput\"}",
          "8901:  if s.InstanceId == nil {",
          "8902:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "8903:  }",
          "8904:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "8905:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "8906:  }",
          "8907:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "8908:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "8909:  }",
          "8911:  if invalidParams.Len() > 0 {",
          "8912:   return invalidParams",
          "8913:  }",
          "8914:  return nil",
          "8918: func (s *ListQueuesInput) SetInstanceId(v string) *ListQueuesInput {",
          "8919:  s.InstanceId = &v",
          "8924: func (s *ListQueuesInput) SetMaxResults(v int64) *ListQueuesInput {",
          "8925:  s.MaxResults = &v",
          "8930: func (s *ListQueuesInput) SetNextToken(v string) *ListQueuesInput {",
          "8931:  s.NextToken = &v",
          "8936: func (s *ListQueuesInput) SetQueueTypes(v []*string) *ListQueuesInput {",
          "8937:  s.QueueTypes = v",
          "8941: type ListQueuesOutput struct {",
          "8945:  NextToken *string `type:\"string\"`",
          "8948:  QueueSummaryList []*QueueSummary `type:\"list\"`",
          "8952: func (s ListQueuesOutput) String() string {",
          "8957: func (s ListQueuesOutput) GoString() string {",
          "8962: func (s *ListQueuesOutput) SetNextToken(v string) *ListQueuesOutput {",
          "8963:  s.NextToken = &v",
          "8968: func (s *ListQueuesOutput) SetQueueSummaryList(v []*QueueSummary) *ListQueuesOutput {",
          "8969:  s.QueueSummaryList = v",
          "8973: type ListRoutingProfileQueuesInput struct {",
          "8974:  _ struct{} `type:\"structure\"`",
          "8979:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "8982:  MaxResults *int64 `location:\"querystring\" locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "8986:  NextToken *string `location:\"querystring\" locationName:\"nextToken\" type:\"string\"`",
          "8991:  RoutingProfileId *string `location:\"uri\" locationName:\"RoutingProfileId\" type:\"string\" required:\"true\"`",
          "8995: func (s ListRoutingProfileQueuesInput) String() string {",
          "9000: func (s ListRoutingProfileQueuesInput) GoString() string {",
          "9005: func (s *ListRoutingProfileQueuesInput) Validate() error {",
          "9006:  invalidParams := request.ErrInvalidParams{Context: \"ListRoutingProfileQueuesInput\"}",
          "9007:  if s.InstanceId == nil {",
          "9008:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "9009:  }",
          "9010:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "9011:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "9012:  }",
          "9013:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "9014:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "9015:  }",
          "9016:  if s.RoutingProfileId == nil {",
          "9017:   invalidParams.Add(request.NewErrParamRequired(\"RoutingProfileId\"))",
          "9018:  }",
          "9019:  if s.RoutingProfileId != nil && len(*s.RoutingProfileId) < 1 {",
          "9020:   invalidParams.Add(request.NewErrParamMinLen(\"RoutingProfileId\", 1))",
          "9021:  }",
          "9023:  if invalidParams.Len() > 0 {",
          "9024:   return invalidParams",
          "9025:  }",
          "9026:  return nil",
          "9027: }",
          "9030: func (s *ListRoutingProfileQueuesInput) SetInstanceId(v string) *ListRoutingProfileQueuesInput {",
          "9031:  s.InstanceId = &v",
          "9036: func (s *ListRoutingProfileQueuesInput) SetMaxResults(v int64) *ListRoutingProfileQueuesInput {",
          "9037:  s.MaxResults = &v",
          "9042: func (s *ListRoutingProfileQueuesInput) SetNextToken(v string) *ListRoutingProfileQueuesInput {",
          "9043:  s.NextToken = &v",
          "9044:  return s",
          "9045: }",
          "9048: func (s *ListRoutingProfileQueuesInput) SetRoutingProfileId(v string) *ListRoutingProfileQueuesInput {",
          "9049:  s.RoutingProfileId = &v",
          "9050:  return s",
          "9051: }",
          "9053: type ListRoutingProfileQueuesOutput struct {",
          "9057:  NextToken *string `type:\"string\"`",
          "9060:  RoutingProfileQueueConfigSummaryList []*RoutingProfileQueueConfigSummary `type:\"list\"`",
          "9064: func (s ListRoutingProfileQueuesOutput) String() string {",
          "9069: func (s ListRoutingProfileQueuesOutput) GoString() string {",
          "9074: func (s *ListRoutingProfileQueuesOutput) SetNextToken(v string) *ListRoutingProfileQueuesOutput {",
          "9075:  s.NextToken = &v",
          "9080: func (s *ListRoutingProfileQueuesOutput) SetRoutingProfileQueueConfigSummaryList(v []*RoutingProfileQueueConfigSummary) *ListRoutingProfileQueuesOutput {",
          "9081:  s.RoutingProfileQueueConfigSummaryList = v",
          "9085: type ListRoutingProfilesInput struct {",
          "9091:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "9094:  MaxResults *int64 `location:\"querystring\" locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "9098:  NextToken *string `location:\"querystring\" locationName:\"nextToken\" type:\"string\"`",
          "9102: func (s ListRoutingProfilesInput) String() string {",
          "9107: func (s ListRoutingProfilesInput) GoString() string {",
          "9112: func (s *ListRoutingProfilesInput) Validate() error {",
          "9113:  invalidParams := request.ErrInvalidParams{Context: \"ListRoutingProfilesInput\"}",
          "9114:  if s.InstanceId == nil {",
          "9115:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "9116:  }",
          "9117:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "9118:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "9119:  }",
          "9120:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "9121:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "9122:  }",
          "9124:  if invalidParams.Len() > 0 {",
          "9125:   return invalidParams",
          "9126:  }",
          "9127:  return nil",
          "9128: }",
          "9131: func (s *ListRoutingProfilesInput) SetInstanceId(v string) *ListRoutingProfilesInput {",
          "9132:  s.InstanceId = &v",
          "9137: func (s *ListRoutingProfilesInput) SetMaxResults(v int64) *ListRoutingProfilesInput {",
          "9138:  s.MaxResults = &v",
          "9143: func (s *ListRoutingProfilesInput) SetNextToken(v string) *ListRoutingProfilesInput {",
          "9144:  s.NextToken = &v",
          "9148: type ListRoutingProfilesOutput struct {",
          "9149:  _ struct{} `type:\"structure\"`",
          "9152:  NextToken *string `type:\"string\"`",
          "9155:  RoutingProfileSummaryList []*RoutingProfileSummary `type:\"list\"`",
          "9159: func (s ListRoutingProfilesOutput) String() string {",
          "9164: func (s ListRoutingProfilesOutput) GoString() string {",
          "9169: func (s *ListRoutingProfilesOutput) SetNextToken(v string) *ListRoutingProfilesOutput {",
          "9170:  s.NextToken = &v",
          "9171:  return s",
          "9175: func (s *ListRoutingProfilesOutput) SetRoutingProfileSummaryList(v []*RoutingProfileSummary) *ListRoutingProfilesOutput {",
          "9176:  s.RoutingProfileSummaryList = v",
          "9177:  return s",
          "9180: type ListSecurityProfilesInput struct {",
          "9181:  _ struct{} `type:\"structure\"`",
          "9186:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "9189:  MaxResults *int64 `location:\"querystring\" locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "9193:  NextToken *string `location:\"querystring\" locationName:\"nextToken\" type:\"string\"`",
          "9197: func (s ListSecurityProfilesInput) String() string {",
          "9202: func (s ListSecurityProfilesInput) GoString() string {",
          "9207: func (s *ListSecurityProfilesInput) Validate() error {",
          "9208:  invalidParams := request.ErrInvalidParams{Context: \"ListSecurityProfilesInput\"}",
          "9209:  if s.InstanceId == nil {",
          "9210:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "9212:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "9213:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "9214:  }",
          "9215:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "9216:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "9219:  if invalidParams.Len() > 0 {",
          "9220:   return invalidParams",
          "9221:  }",
          "9226: func (s *ListSecurityProfilesInput) SetInstanceId(v string) *ListSecurityProfilesInput {",
          "9227:  s.InstanceId = &v",
          "9228:  return s",
          "9232: func (s *ListSecurityProfilesInput) SetMaxResults(v int64) *ListSecurityProfilesInput {",
          "9233:  s.MaxResults = &v",
          "9234:  return s",
          "9238: func (s *ListSecurityProfilesInput) SetNextToken(v string) *ListSecurityProfilesInput {",
          "9239:  s.NextToken = &v",
          "9240:  return s",
          "9243: type ListSecurityProfilesOutput struct {",
          "9244:  _ struct{} `type:\"structure\"`",
          "9247:  NextToken *string `type:\"string\"`",
          "9250:  SecurityProfileSummaryList []*SecurityProfileSummary `type:\"list\"`",
          "9254: func (s ListSecurityProfilesOutput) String() string {",
          "9259: func (s ListSecurityProfilesOutput) GoString() string {",
          "9264: func (s *ListSecurityProfilesOutput) SetNextToken(v string) *ListSecurityProfilesOutput {",
          "9265:  s.NextToken = &v",
          "9266:  return s",
          "9270: func (s *ListSecurityProfilesOutput) SetSecurityProfileSummaryList(v []*SecurityProfileSummary) *ListSecurityProfilesOutput {",
          "9271:  s.SecurityProfileSummaryList = v",
          "9272:  return s",
          "9275: type ListTagsForResourceInput struct {",
          "9276:  _ struct{} `type:\"structure\"`",
          "9281:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" type:\"string\" required:\"true\"`",
          "9285: func (s ListTagsForResourceInput) String() string {",
          "9290: func (s ListTagsForResourceInput) GoString() string {",
          "9295: func (s *ListTagsForResourceInput) Validate() error {",
          "9296:  invalidParams := request.ErrInvalidParams{Context: \"ListTagsForResourceInput\"}",
          "9297:  if s.ResourceArn == nil {",
          "9298:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "9299:  }",
          "9300:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "9301:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "9302:  }",
          "9304:  if invalidParams.Len() > 0 {",
          "9305:   return invalidParams",
          "9307:  return nil",
          "9311: func (s *ListTagsForResourceInput) SetResourceArn(v string) *ListTagsForResourceInput {",
          "9312:  s.ResourceArn = &v",
          "9313:  return s",
          "9316: type ListTagsForResourceOutput struct {",
          "9317:  _ struct{} `type:\"structure\"`",
          "9320:  Tags map[string]*string `locationName:\"tags\" min:\"1\" type:\"map\"`",
          "9324: func (s ListTagsForResourceOutput) String() string {",
          "9325:  return awsutil.Prettify(s)",
          "9329: func (s ListTagsForResourceOutput) GoString() string {",
          "9330:  return s.String()",
          "9334: func (s *ListTagsForResourceOutput) SetTags(v map[string]*string) *ListTagsForResourceOutput {",
          "9335:  s.Tags = v",
          "9336:  return s",
          "9339: type ListUserHierarchyGroupsInput struct {",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "6078: }",
          "6082:  return awsutil.Prettify(s)",
          "6083: }",
          "6087:  return s.String()",
          "6088: }",
          "6093:  if s.InstanceId == nil {",
          "6094:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "6095:  }",
          "",
          "[Removed Lines]",
          "6081: func (s ListContactFlowsInput) String() string {",
          "6086: func (s ListContactFlowsInput) GoString() string {",
          "6091: func (s *ListContactFlowsInput) Validate() error {",
          "6092:  invalidParams := request.ErrInvalidParams{Context: \"ListContactFlowsInput\"}",
          "",
          "[Added Lines]",
          "9356: func (s ListUserHierarchyGroupsInput) String() string {",
          "9361: func (s ListUserHierarchyGroupsInput) GoString() string {",
          "9366: func (s *ListUserHierarchyGroupsInput) Validate() error {",
          "9367:  invalidParams := request.ErrInvalidParams{Context: \"ListUserHierarchyGroupsInput\"}",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "6106:  return nil",
          "6107: }",
          "6117:  s.InstanceId = &v",
          "6118:  return s",
          "6119: }",
          "6123:  s.MaxResults = &v",
          "6124:  return s",
          "6125: }",
          "6129:  s.NextToken = &v",
          "6130:  return s",
          "6131: }",
          "6134:  _ struct{} `type:\"structure\"`",
          "6140:  NextToken *string `type:\"string\"`",
          "6141: }",
          "6145:  return awsutil.Prettify(s)",
          "6146: }",
          "6150:  return s.String()",
          "6151: }",
          "6156:  return s",
          "6157: }",
          "6162:  return s",
          "6163: }",
          "6166:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "6110: func (s *ListContactFlowsInput) SetContactFlowTypes(v []*string) *ListContactFlowsInput {",
          "6111:  s.ContactFlowTypes = v",
          "6112:  return s",
          "6113: }",
          "6116: func (s *ListContactFlowsInput) SetInstanceId(v string) *ListContactFlowsInput {",
          "6122: func (s *ListContactFlowsInput) SetMaxResults(v int64) *ListContactFlowsInput {",
          "6128: func (s *ListContactFlowsInput) SetNextToken(v string) *ListContactFlowsInput {",
          "6133: type ListContactFlowsOutput struct {",
          "6137:  ContactFlowSummaryList []*ContactFlowSummary `type:\"list\"`",
          "6144: func (s ListContactFlowsOutput) String() string {",
          "6149: func (s ListContactFlowsOutput) GoString() string {",
          "6154: func (s *ListContactFlowsOutput) SetContactFlowSummaryList(v []*ContactFlowSummary) *ListContactFlowsOutput {",
          "6155:  s.ContactFlowSummaryList = v",
          "6160: func (s *ListContactFlowsOutput) SetNextToken(v string) *ListContactFlowsOutput {",
          "6161:  s.NextToken = &v",
          "6165: type ListHoursOfOperationsInput struct {",
          "",
          "[Added Lines]",
          "9385: func (s *ListUserHierarchyGroupsInput) SetInstanceId(v string) *ListUserHierarchyGroupsInput {",
          "9391: func (s *ListUserHierarchyGroupsInput) SetMaxResults(v int64) *ListUserHierarchyGroupsInput {",
          "9397: func (s *ListUserHierarchyGroupsInput) SetNextToken(v string) *ListUserHierarchyGroupsInput {",
          "9402: type ListUserHierarchyGroupsOutput struct {",
          "9409:  UserHierarchyGroupSummaryList []*HierarchyGroupSummary `type:\"list\"`",
          "9413: func (s ListUserHierarchyGroupsOutput) String() string {",
          "9418: func (s ListUserHierarchyGroupsOutput) GoString() string {",
          "9423: func (s *ListUserHierarchyGroupsOutput) SetNextToken(v string) *ListUserHierarchyGroupsOutput {",
          "9424:  s.NextToken = &v",
          "9429: func (s *ListUserHierarchyGroupsOutput) SetUserHierarchyGroupSummaryList(v []*HierarchyGroupSummary) *ListUserHierarchyGroupsOutput {",
          "9430:  s.UserHierarchyGroupSummaryList = v",
          "9434: type ListUsersInput struct {",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "6179: }",
          "6183:  return awsutil.Prettify(s)",
          "6184: }",
          "6188:  return s.String()",
          "6189: }",
          "6194:  if s.InstanceId == nil {",
          "6195:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "6196:  }",
          "",
          "[Removed Lines]",
          "6182: func (s ListHoursOfOperationsInput) String() string {",
          "6187: func (s ListHoursOfOperationsInput) GoString() string {",
          "6192: func (s *ListHoursOfOperationsInput) Validate() error {",
          "6193:  invalidParams := request.ErrInvalidParams{Context: \"ListHoursOfOperationsInput\"}",
          "",
          "[Added Lines]",
          "9451: func (s ListUsersInput) String() string {",
          "9456: func (s ListUsersInput) GoString() string {",
          "9461: func (s *ListUsersInput) Validate() error {",
          "9462:  invalidParams := request.ErrInvalidParams{Context: \"ListUsersInput\"}",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "6208: }",
          "6212:  s.InstanceId = &v",
          "6213:  return s",
          "6214: }",
          "6218:  s.MaxResults = &v",
          "6219:  return s",
          "6220: }",
          "6224:  s.NextToken = &v",
          "6225:  return s",
          "6226: }",
          "6229:  _ struct{} `type:\"structure\"`",
          "6235:  NextToken *string `type:\"string\"`",
          "6236: }",
          "6240:  return awsutil.Prettify(s)",
          "6241: }",
          "6245:  return s.String()",
          "6246: }",
          "6252: }",
          "6257:  return s",
          "6258: }",
          "6261:  _ struct{} `type:\"structure\"`",
          "6280: }",
          "6284:  return awsutil.Prettify(s)",
          "6285: }",
          "6289:  return s.String()",
          "6290: }",
          "6314:  return s",
          "6315: }",
          "6320:  return s",
          "6321: }",
          "6326:  return s",
          "6327: }",
          "6332:  return s",
          "6333: }",
          "6338:  return s",
          "6339: }",
          "6342:  _ struct{} `type:\"structure\"`",
          "6349: }",
          "6353:  return awsutil.Prettify(s)",
          "6354: }",
          "6358:  return s.String()",
          "6359: }",
          "6370:  return s",
          "6371: }",
          "6374:  _ struct{} `type:\"structure\"`",
          "6390: }",
          "6394:  return awsutil.Prettify(s)",
          "6395: }",
          "6399:  return s.String()",
          "6400: }",
          "6430:  return s",
          "6431: }",
          "6436:  return s",
          "6437: }",
          "6442:  return s",
          "6443: }",
          "6446:  _ struct{} `type:\"structure\"`",
          "6453: }",
          "6457:  return awsutil.Prettify(s)",
          "6458: }",
          "6462:  return s.String()",
          "6463: }",
          "6468:  return s",
          "6469: }",
          "6474:  return s",
          "6475: }",
          "6478:  _ struct{} `type:\"structure\"`",
          "6491: }",
          "6495:  return awsutil.Prettify(s)",
          "6496: }",
          "6500:  return s.String()",
          "6501: }",
          "6520: }",
          "6525:  return s",
          "6526: }",
          "6531:  return s",
          "6532: }",
          "6537:  return s",
          "6538: }",
          "6548: }",
          "6552:  return awsutil.Prettify(s)",
          "6553: }",
          "6557:  return s.String()",
          "6558: }",
          "6564: }",
          "6570: }",
          "6573:  _ struct{} `type:\"structure\"`",
          "6586: }",
          "6590:  return awsutil.Prettify(s)",
          "6591: }",
          "6595:  return s.String()",
          "6596: }",
          "6601:  if s.InstanceId == nil {",
          "6602:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "6603:  }",
          "6604:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "6605:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "6606:  }",
          "6611:  if invalidParams.Len() > 0 {",
          "6612:   return invalidParams",
          "",
          "[Removed Lines]",
          "6211: func (s *ListHoursOfOperationsInput) SetInstanceId(v string) *ListHoursOfOperationsInput {",
          "6217: func (s *ListHoursOfOperationsInput) SetMaxResults(v int64) *ListHoursOfOperationsInput {",
          "6223: func (s *ListHoursOfOperationsInput) SetNextToken(v string) *ListHoursOfOperationsInput {",
          "6228: type ListHoursOfOperationsOutput struct {",
          "6232:  HoursOfOperationSummaryList []*HoursOfOperationSummary `type:\"list\"`",
          "6239: func (s ListHoursOfOperationsOutput) String() string {",
          "6244: func (s ListHoursOfOperationsOutput) GoString() string {",
          "6249: func (s *ListHoursOfOperationsOutput) SetHoursOfOperationSummaryList(v []*HoursOfOperationSummary) *ListHoursOfOperationsOutput {",
          "6250:  s.HoursOfOperationSummaryList = v",
          "6251:  return s",
          "6255: func (s *ListHoursOfOperationsOutput) SetNextToken(v string) *ListHoursOfOperationsOutput {",
          "6256:  s.NextToken = &v",
          "6260: type ListPhoneNumbersInput struct {",
          "6266:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "6269:  MaxResults *int64 `location:\"querystring\" locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "6273:  NextToken *string `location:\"querystring\" locationName:\"nextToken\" type:\"string\"`",
          "6276:  PhoneNumberCountryCodes []*string `location:\"querystring\" locationName:\"phoneNumberCountryCodes\" type:\"list\"`",
          "6279:  PhoneNumberTypes []*string `location:\"querystring\" locationName:\"phoneNumberTypes\" type:\"list\"`",
          "6283: func (s ListPhoneNumbersInput) String() string {",
          "6288: func (s ListPhoneNumbersInput) GoString() string {",
          "6293: func (s *ListPhoneNumbersInput) Validate() error {",
          "6294:  invalidParams := request.ErrInvalidParams{Context: \"ListPhoneNumbersInput\"}",
          "6295:  if s.InstanceId == nil {",
          "6296:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "6297:  }",
          "6298:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "6299:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "6300:  }",
          "6301:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "6302:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "6303:  }",
          "6305:  if invalidParams.Len() > 0 {",
          "6306:   return invalidParams",
          "6307:  }",
          "6308:  return nil",
          "6309: }",
          "6312: func (s *ListPhoneNumbersInput) SetInstanceId(v string) *ListPhoneNumbersInput {",
          "6313:  s.InstanceId = &v",
          "6318: func (s *ListPhoneNumbersInput) SetMaxResults(v int64) *ListPhoneNumbersInput {",
          "6319:  s.MaxResults = &v",
          "6324: func (s *ListPhoneNumbersInput) SetNextToken(v string) *ListPhoneNumbersInput {",
          "6325:  s.NextToken = &v",
          "6330: func (s *ListPhoneNumbersInput) SetPhoneNumberCountryCodes(v []*string) *ListPhoneNumbersInput {",
          "6331:  s.PhoneNumberCountryCodes = v",
          "6336: func (s *ListPhoneNumbersInput) SetPhoneNumberTypes(v []*string) *ListPhoneNumbersInput {",
          "6337:  s.PhoneNumberTypes = v",
          "6341: type ListPhoneNumbersOutput struct {",
          "6345:  NextToken *string `type:\"string\"`",
          "6348:  PhoneNumberSummaryList []*PhoneNumberSummary `type:\"list\"`",
          "6352: func (s ListPhoneNumbersOutput) String() string {",
          "6357: func (s ListPhoneNumbersOutput) GoString() string {",
          "6362: func (s *ListPhoneNumbersOutput) SetNextToken(v string) *ListPhoneNumbersOutput {",
          "6363:  s.NextToken = &v",
          "6364:  return s",
          "6365: }",
          "6368: func (s *ListPhoneNumbersOutput) SetPhoneNumberSummaryList(v []*PhoneNumberSummary) *ListPhoneNumbersOutput {",
          "6369:  s.PhoneNumberSummaryList = v",
          "6373: type ListQueuesInput struct {",
          "6379:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "6382:  MaxResults *int64 `location:\"querystring\" locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "6386:  NextToken *string `location:\"querystring\" locationName:\"nextToken\" type:\"string\"`",
          "6389:  QueueTypes []*string `location:\"querystring\" locationName:\"queueTypes\" type:\"list\"`",
          "6393: func (s ListQueuesInput) String() string {",
          "6398: func (s ListQueuesInput) GoString() string {",
          "6403: func (s *ListQueuesInput) Validate() error {",
          "6404:  invalidParams := request.ErrInvalidParams{Context: \"ListQueuesInput\"}",
          "6405:  if s.InstanceId == nil {",
          "6406:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "6407:  }",
          "6408:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "6409:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "6410:  }",
          "6411:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "6412:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "6413:  }",
          "6415:  if invalidParams.Len() > 0 {",
          "6416:   return invalidParams",
          "6417:  }",
          "6418:  return nil",
          "6419: }",
          "6422: func (s *ListQueuesInput) SetInstanceId(v string) *ListQueuesInput {",
          "6423:  s.InstanceId = &v",
          "6424:  return s",
          "6425: }",
          "6428: func (s *ListQueuesInput) SetMaxResults(v int64) *ListQueuesInput {",
          "6429:  s.MaxResults = &v",
          "6434: func (s *ListQueuesInput) SetNextToken(v string) *ListQueuesInput {",
          "6435:  s.NextToken = &v",
          "6440: func (s *ListQueuesInput) SetQueueTypes(v []*string) *ListQueuesInput {",
          "6441:  s.QueueTypes = v",
          "6445: type ListQueuesOutput struct {",
          "6449:  NextToken *string `type:\"string\"`",
          "6452:  QueueSummaryList []*QueueSummary `type:\"list\"`",
          "6456: func (s ListQueuesOutput) String() string {",
          "6461: func (s ListQueuesOutput) GoString() string {",
          "6466: func (s *ListQueuesOutput) SetNextToken(v string) *ListQueuesOutput {",
          "6467:  s.NextToken = &v",
          "6472: func (s *ListQueuesOutput) SetQueueSummaryList(v []*QueueSummary) *ListQueuesOutput {",
          "6473:  s.QueueSummaryList = v",
          "6477: type ListRoutingProfilesInput struct {",
          "6483:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "6486:  MaxResults *int64 `location:\"querystring\" locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "6490:  NextToken *string `location:\"querystring\" locationName:\"nextToken\" type:\"string\"`",
          "6494: func (s ListRoutingProfilesInput) String() string {",
          "6499: func (s ListRoutingProfilesInput) GoString() string {",
          "6504: func (s *ListRoutingProfilesInput) Validate() error {",
          "6505:  invalidParams := request.ErrInvalidParams{Context: \"ListRoutingProfilesInput\"}",
          "6506:  if s.InstanceId == nil {",
          "6507:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "6508:  }",
          "6509:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "6510:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "6511:  }",
          "6512:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "6513:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "6514:  }",
          "6516:  if invalidParams.Len() > 0 {",
          "6517:   return invalidParams",
          "6518:  }",
          "6519:  return nil",
          "6523: func (s *ListRoutingProfilesInput) SetInstanceId(v string) *ListRoutingProfilesInput {",
          "6524:  s.InstanceId = &v",
          "6529: func (s *ListRoutingProfilesInput) SetMaxResults(v int64) *ListRoutingProfilesInput {",
          "6530:  s.MaxResults = &v",
          "6535: func (s *ListRoutingProfilesInput) SetNextToken(v string) *ListRoutingProfilesInput {",
          "6536:  s.NextToken = &v",
          "6540: type ListRoutingProfilesOutput struct {",
          "6541:  _ struct{} `type:\"structure\"`",
          "6544:  NextToken *string `type:\"string\"`",
          "6547:  RoutingProfileSummaryList []*RoutingProfileSummary `type:\"list\"`",
          "6551: func (s ListRoutingProfilesOutput) String() string {",
          "6556: func (s ListRoutingProfilesOutput) GoString() string {",
          "6561: func (s *ListRoutingProfilesOutput) SetNextToken(v string) *ListRoutingProfilesOutput {",
          "6562:  s.NextToken = &v",
          "6563:  return s",
          "6567: func (s *ListRoutingProfilesOutput) SetRoutingProfileSummaryList(v []*RoutingProfileSummary) *ListRoutingProfilesOutput {",
          "6568:  s.RoutingProfileSummaryList = v",
          "6569:  return s",
          "6572: type ListSecurityProfilesInput struct {",
          "6578:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "6581:  MaxResults *int64 `location:\"querystring\" locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "6585:  NextToken *string `location:\"querystring\" locationName:\"nextToken\" type:\"string\"`",
          "6589: func (s ListSecurityProfilesInput) String() string {",
          "6594: func (s ListSecurityProfilesInput) GoString() string {",
          "6599: func (s *ListSecurityProfilesInput) Validate() error {",
          "6600:  invalidParams := request.ErrInvalidParams{Context: \"ListSecurityProfilesInput\"}",
          "6607:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "6608:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "6609:  }",
          "",
          "[Added Lines]",
          "9480: func (s *ListUsersInput) SetInstanceId(v string) *ListUsersInput {",
          "9486: func (s *ListUsersInput) SetMaxResults(v int64) *ListUsersInput {",
          "9492: func (s *ListUsersInput) SetNextToken(v string) *ListUsersInput {",
          "9497: type ListUsersOutput struct {",
          "9504:  UserSummaryList []*UserSummary `type:\"list\"`",
          "9508: func (s ListUsersOutput) String() string {",
          "9513: func (s ListUsersOutput) GoString() string {",
          "9514:  return s.String()",
          "9515: }",
          "9518: func (s *ListUsersOutput) SetNextToken(v string) *ListUsersOutput {",
          "9519:  s.NextToken = &v",
          "9520:  return s",
          "9521: }",
          "9524: func (s *ListUsersOutput) SetUserSummaryList(v []*UserSummary) *ListUsersOutput {",
          "9525:  s.UserSummaryList = v",
          "9526:  return s",
          "9527: }",
          "9531: type MediaConcurrency struct {",
          "9532:  _ struct{} `type:\"structure\"`",
          "9537:  Channel *string `type:\"string\" required:\"true\" enum:\"Channel\"`",
          "9542:  Concurrency *int64 `min:\"1\" type:\"integer\" required:\"true\"`",
          "9543: }",
          "9546: func (s MediaConcurrency) String() string {",
          "9547:  return awsutil.Prettify(s)",
          "9548: }",
          "9551: func (s MediaConcurrency) GoString() string {",
          "9552:  return s.String()",
          "9553: }",
          "9556: func (s *MediaConcurrency) Validate() error {",
          "9557:  invalidParams := request.ErrInvalidParams{Context: \"MediaConcurrency\"}",
          "9558:  if s.Channel == nil {",
          "9559:   invalidParams.Add(request.NewErrParamRequired(\"Channel\"))",
          "9560:  }",
          "9561:  if s.Concurrency == nil {",
          "9562:   invalidParams.Add(request.NewErrParamRequired(\"Concurrency\"))",
          "9563:  }",
          "9564:  if s.Concurrency != nil && *s.Concurrency < 1 {",
          "9565:   invalidParams.Add(request.NewErrParamMinValue(\"Concurrency\", 1))",
          "9566:  }",
          "9568:  if invalidParams.Len() > 0 {",
          "9569:   return invalidParams",
          "9570:  }",
          "9571:  return nil",
          "9572: }",
          "9575: func (s *MediaConcurrency) SetChannel(v string) *MediaConcurrency {",
          "9576:  s.Channel = &v",
          "9577:  return s",
          "9578: }",
          "9581: func (s *MediaConcurrency) SetConcurrency(v int64) *MediaConcurrency {",
          "9582:  s.Concurrency = &v",
          "9583:  return s",
          "9584: }",
          "9587: type OutboundContactNotPermittedException struct {",
          "9588:  _            struct{}                  `type:\"structure\"`",
          "9589:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "9592:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "9593: }",
          "9596: func (s OutboundContactNotPermittedException) String() string {",
          "9597:  return awsutil.Prettify(s)",
          "9598: }",
          "9601: func (s OutboundContactNotPermittedException) GoString() string {",
          "9602:  return s.String()",
          "9603: }",
          "9605: func newErrorOutboundContactNotPermittedException(v protocol.ResponseMetadata) error {",
          "9606:  return &OutboundContactNotPermittedException{",
          "9607:   RespMetadata: v,",
          "9608:  }",
          "9609: }",
          "9612: func (s *OutboundContactNotPermittedException) Code() string {",
          "9613:  return \"OutboundContactNotPermittedException\"",
          "9614: }",
          "9617: func (s *OutboundContactNotPermittedException) Message() string {",
          "9618:  if s.Message_ != nil {",
          "9619:   return *s.Message_",
          "9620:  }",
          "9621:  return \"\"",
          "9622: }",
          "9625: func (s *OutboundContactNotPermittedException) OrigErr() error {",
          "9626:  return nil",
          "9627: }",
          "9629: func (s *OutboundContactNotPermittedException) Error() string {",
          "9630:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "9631: }",
          "9634: func (s *OutboundContactNotPermittedException) StatusCode() int {",
          "9635:  return s.RespMetadata.StatusCode",
          "9636: }",
          "9639: func (s *OutboundContactNotPermittedException) RequestID() string {",
          "9640:  return s.RespMetadata.RequestID",
          "9641: }",
          "9644: type ParticipantDetails struct {",
          "9645:  _ struct{} `type:\"structure\"`",
          "9650:  DisplayName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "9651: }",
          "9654: func (s ParticipantDetails) String() string {",
          "9655:  return awsutil.Prettify(s)",
          "9656: }",
          "9659: func (s ParticipantDetails) GoString() string {",
          "9664: func (s *ParticipantDetails) Validate() error {",
          "9665:  invalidParams := request.ErrInvalidParams{Context: \"ParticipantDetails\"}",
          "9666:  if s.DisplayName == nil {",
          "9667:   invalidParams.Add(request.NewErrParamRequired(\"DisplayName\"))",
          "9668:  }",
          "9669:  if s.DisplayName != nil && len(*s.DisplayName) < 1 {",
          "9670:   invalidParams.Add(request.NewErrParamMinLen(\"DisplayName\", 1))",
          "9671:  }",
          "9673:  if invalidParams.Len() > 0 {",
          "9674:   return invalidParams",
          "9675:  }",
          "9676:  return nil",
          "9680: func (s *ParticipantDetails) SetDisplayName(v string) *ParticipantDetails {",
          "9681:  s.DisplayName = &v",
          "9686: type PhoneNumberSummary struct {",
          "9690:  Arn *string `type:\"string\"`",
          "9693:  Id *string `type:\"string\"`",
          "9696:  PhoneNumber *string `type:\"string\"`",
          "9699:  PhoneNumberCountryCode *string `type:\"string\" enum:\"PhoneNumberCountryCode\"`",
          "9702:  PhoneNumberType *string `type:\"string\" enum:\"PhoneNumberType\"`",
          "9706: func (s PhoneNumberSummary) String() string {",
          "9711: func (s PhoneNumberSummary) GoString() string {",
          "9716: func (s *PhoneNumberSummary) SetArn(v string) *PhoneNumberSummary {",
          "9717:  s.Arn = &v",
          "9722: func (s *PhoneNumberSummary) SetId(v string) *PhoneNumberSummary {",
          "9723:  s.Id = &v",
          "9728: func (s *PhoneNumberSummary) SetPhoneNumber(v string) *PhoneNumberSummary {",
          "9729:  s.PhoneNumber = &v",
          "9734: func (s *PhoneNumberSummary) SetPhoneNumberCountryCode(v string) *PhoneNumberSummary {",
          "9735:  s.PhoneNumberCountryCode = &v",
          "9740: func (s *PhoneNumberSummary) SetPhoneNumberType(v string) *PhoneNumberSummary {",
          "9741:  s.PhoneNumberType = &v",
          "9746: type ProblemDetail struct {",
          "9750:  Message *string `locationName:\"message\" min:\"1\" type:\"string\"`",
          "9754: func (s ProblemDetail) String() string {",
          "9759: func (s ProblemDetail) GoString() string {",
          "9764: func (s *ProblemDetail) SetMessage(v string) *ProblemDetail {",
          "9765:  s.Message = &v",
          "9770: type PromptSummary struct {",
          "9774:  Arn *string `type:\"string\"`",
          "9777:  Id *string `min:\"1\" type:\"string\"`",
          "9780:  Name *string `min:\"1\" type:\"string\"`",
          "9784: func (s PromptSummary) String() string {",
          "9789: func (s PromptSummary) GoString() string {",
          "9794: func (s *PromptSummary) SetArn(v string) *PromptSummary {",
          "9795:  s.Arn = &v",
          "9800: func (s *PromptSummary) SetId(v string) *PromptSummary {",
          "9801:  s.Id = &v",
          "9806: func (s *PromptSummary) SetName(v string) *PromptSummary {",
          "9807:  s.Name = &v",
          "9812: type QueueReference struct {",
          "9816:  Arn *string `type:\"string\"`",
          "9819:  Id *string `type:\"string\"`",
          "9823: func (s QueueReference) String() string {",
          "9828: func (s QueueReference) GoString() string {",
          "9833: func (s *QueueReference) SetArn(v string) *QueueReference {",
          "9834:  s.Arn = &v",
          "9839: func (s *QueueReference) SetId(v string) *QueueReference {",
          "9840:  s.Id = &v",
          "9845: type QueueSummary struct {",
          "9849:  Arn *string `type:\"string\"`",
          "9852:  Id *string `type:\"string\"`",
          "9855:  Name *string `min:\"1\" type:\"string\"`",
          "9858:  QueueType *string `type:\"string\" enum:\"QueueType\"`",
          "9862: func (s QueueSummary) String() string {",
          "9867: func (s QueueSummary) GoString() string {",
          "9872: func (s *QueueSummary) SetArn(v string) *QueueSummary {",
          "9873:  s.Arn = &v",
          "9874:  return s",
          "9878: func (s *QueueSummary) SetId(v string) *QueueSummary {",
          "9879:  s.Id = &v",
          "9884: func (s *QueueSummary) SetName(v string) *QueueSummary {",
          "9885:  s.Name = &v",
          "9890: func (s *QueueSummary) SetQueueType(v string) *QueueSummary {",
          "9891:  s.QueueType = &v",
          "9896: type ResourceNotFoundException struct {",
          "9897:  _            struct{}                  `type:\"structure\"`",
          "9898:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "9901:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "9905: func (s ResourceNotFoundException) String() string {",
          "9910: func (s ResourceNotFoundException) GoString() string {",
          "9914: func newErrorResourceNotFoundException(v protocol.ResponseMetadata) error {",
          "9915:  return &ResourceNotFoundException{",
          "9916:   RespMetadata: v,",
          "9917:  }",
          "9921: func (s *ResourceNotFoundException) Code() string {",
          "9922:  return \"ResourceNotFoundException\"",
          "9926: func (s *ResourceNotFoundException) Message() string {",
          "9927:  if s.Message_ != nil {",
          "9928:   return *s.Message_",
          "9929:  }",
          "9930:  return \"\"",
          "9931: }",
          "9934: func (s *ResourceNotFoundException) OrigErr() error {",
          "9935:  return nil",
          "9936: }",
          "9938: func (s *ResourceNotFoundException) Error() string {",
          "9939:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "9940: }",
          "9943: func (s *ResourceNotFoundException) StatusCode() int {",
          "9944:  return s.RespMetadata.StatusCode",
          "9945: }",
          "9948: func (s *ResourceNotFoundException) RequestID() string {",
          "9949:  return s.RespMetadata.RequestID",
          "9950: }",
          "9952: type ResumeContactRecordingInput struct {",
          "9958:  ContactId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "9964:  InitialContactId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "9969:  InstanceId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "9973: func (s ResumeContactRecordingInput) String() string {",
          "9978: func (s ResumeContactRecordingInput) GoString() string {",
          "9983: func (s *ResumeContactRecordingInput) Validate() error {",
          "9984:  invalidParams := request.ErrInvalidParams{Context: \"ResumeContactRecordingInput\"}",
          "9985:  if s.ContactId == nil {",
          "9986:   invalidParams.Add(request.NewErrParamRequired(\"ContactId\"))",
          "9987:  }",
          "9988:  if s.ContactId != nil && len(*s.ContactId) < 1 {",
          "9989:   invalidParams.Add(request.NewErrParamMinLen(\"ContactId\", 1))",
          "9990:  }",
          "9991:  if s.InitialContactId == nil {",
          "9992:   invalidParams.Add(request.NewErrParamRequired(\"InitialContactId\"))",
          "9993:  }",
          "9994:  if s.InitialContactId != nil && len(*s.InitialContactId) < 1 {",
          "9995:   invalidParams.Add(request.NewErrParamMinLen(\"InitialContactId\", 1))",
          "9996:  }",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "6614:  return nil",
          "6615: }",
          "6620:  return s",
          "6621: }",
          "6626:  return s",
          "6627: }",
          "6632:  return s",
          "6633: }",
          "6636:  _ struct{} `type:\"structure\"`",
          "6643: }",
          "6647:  return awsutil.Prettify(s)",
          "6648: }",
          "6652:  return s.String()",
          "6653: }",
          "6674: }",
          "6678:  return awsutil.Prettify(s)",
          "6679: }",
          "6683:  return s.String()",
          "6684: }",
          "6700: }",
          "6705:  return s",
          "6706: }",
          "6713: }",
          "6718: }",
          "6723: }",
          "6727:  s.Tags = v",
          "6728:  return s",
          "6729: }",
          "6732:  _ struct{} `type:\"structure\"`",
          "6745: }",
          "6749:  return awsutil.Prettify(s)",
          "6750: }",
          "6754:  return s.String()",
          "6755: }",
          "6762:  }",
          "6765:  }",
          "6768:  }",
          "6770:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "6618: func (s *ListSecurityProfilesInput) SetInstanceId(v string) *ListSecurityProfilesInput {",
          "6619:  s.InstanceId = &v",
          "6624: func (s *ListSecurityProfilesInput) SetMaxResults(v int64) *ListSecurityProfilesInput {",
          "6625:  s.MaxResults = &v",
          "6630: func (s *ListSecurityProfilesInput) SetNextToken(v string) *ListSecurityProfilesInput {",
          "6631:  s.NextToken = &v",
          "6635: type ListSecurityProfilesOutput struct {",
          "6639:  NextToken *string `type:\"string\"`",
          "6642:  SecurityProfileSummaryList []*SecurityProfileSummary `type:\"list\"`",
          "6646: func (s ListSecurityProfilesOutput) String() string {",
          "6651: func (s ListSecurityProfilesOutput) GoString() string {",
          "6656: func (s *ListSecurityProfilesOutput) SetNextToken(v string) *ListSecurityProfilesOutput {",
          "6657:  s.NextToken = &v",
          "6658:  return s",
          "6659: }",
          "6662: func (s *ListSecurityProfilesOutput) SetSecurityProfileSummaryList(v []*SecurityProfileSummary) *ListSecurityProfilesOutput {",
          "6663:  s.SecurityProfileSummaryList = v",
          "6664:  return s",
          "6665: }",
          "6667: type ListTagsForResourceInput struct {",
          "6668:  _ struct{} `type:\"structure\"`",
          "6673:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" type:\"string\" required:\"true\"`",
          "6677: func (s ListTagsForResourceInput) String() string {",
          "6682: func (s ListTagsForResourceInput) GoString() string {",
          "6687: func (s *ListTagsForResourceInput) Validate() error {",
          "6688:  invalidParams := request.ErrInvalidParams{Context: \"ListTagsForResourceInput\"}",
          "6689:  if s.ResourceArn == nil {",
          "6690:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "6691:  }",
          "6692:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "6693:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "6694:  }",
          "6696:  if invalidParams.Len() > 0 {",
          "6697:   return invalidParams",
          "6698:  }",
          "6699:  return nil",
          "6703: func (s *ListTagsForResourceInput) SetResourceArn(v string) *ListTagsForResourceInput {",
          "6704:  s.ResourceArn = &v",
          "6708: type ListTagsForResourceOutput struct {",
          "6709:  _ struct{} `type:\"structure\"`",
          "6712:  Tags map[string]*string `locationName:\"tags\" min:\"1\" type:\"map\"`",
          "6716: func (s ListTagsForResourceOutput) String() string {",
          "6717:  return awsutil.Prettify(s)",
          "6721: func (s ListTagsForResourceOutput) GoString() string {",
          "6722:  return s.String()",
          "6726: func (s *ListTagsForResourceOutput) SetTags(v map[string]*string) *ListTagsForResourceOutput {",
          "6731: type ListUserHierarchyGroupsInput struct {",
          "6737:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "6740:  MaxResults *int64 `location:\"querystring\" locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "6744:  NextToken *string `location:\"querystring\" locationName:\"nextToken\" type:\"string\"`",
          "6748: func (s ListUserHierarchyGroupsInput) String() string {",
          "6753: func (s ListUserHierarchyGroupsInput) GoString() string {",
          "6758: func (s *ListUserHierarchyGroupsInput) Validate() error {",
          "6759:  invalidParams := request.ErrInvalidParams{Context: \"ListUserHierarchyGroupsInput\"}",
          "6760:  if s.InstanceId == nil {",
          "6761:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "6763:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "6764:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "6766:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "6767:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "",
          "[Added Lines]",
          "10011: func (s *ResumeContactRecordingInput) SetContactId(v string) *ResumeContactRecordingInput {",
          "10012:  s.ContactId = &v",
          "10017: func (s *ResumeContactRecordingInput) SetInitialContactId(v string) *ResumeContactRecordingInput {",
          "10018:  s.InitialContactId = &v",
          "10023: func (s *ResumeContactRecordingInput) SetInstanceId(v string) *ResumeContactRecordingInput {",
          "10024:  s.InstanceId = &v",
          "10028: type ResumeContactRecordingOutput struct {",
          "10033: func (s ResumeContactRecordingOutput) String() string {",
          "10038: func (s ResumeContactRecordingOutput) GoString() string {",
          "10043: type RoutingProfile struct {",
          "10044:  _ struct{} `type:\"structure\"`",
          "10047:  DefaultOutboundQueueId *string `type:\"string\"`",
          "10050:  Description *string `min:\"1\" type:\"string\"`",
          "10053:  InstanceId *string `min:\"1\" type:\"string\"`",
          "10057:  MediaConcurrencies []*MediaConcurrency `type:\"list\"`",
          "10060:  Name *string `min:\"1\" type:\"string\"`",
          "10063:  RoutingProfileArn *string `type:\"string\"`",
          "10066:  RoutingProfileId *string `type:\"string\"`",
          "10069:  Tags map[string]*string `min:\"1\" type:\"map\"`",
          "10073: func (s RoutingProfile) String() string {",
          "10078: func (s RoutingProfile) GoString() string {",
          "10083: func (s *RoutingProfile) SetDefaultOutboundQueueId(v string) *RoutingProfile {",
          "10084:  s.DefaultOutboundQueueId = &v",
          "10085:  return s",
          "10086: }",
          "10089: func (s *RoutingProfile) SetDescription(v string) *RoutingProfile {",
          "10090:  s.Description = &v",
          "10091:  return s",
          "10095: func (s *RoutingProfile) SetInstanceId(v string) *RoutingProfile {",
          "10096:  s.InstanceId = &v",
          "10101: func (s *RoutingProfile) SetMediaConcurrencies(v []*MediaConcurrency) *RoutingProfile {",
          "10102:  s.MediaConcurrencies = v",
          "10103:  return s",
          "10104: }",
          "10107: func (s *RoutingProfile) SetName(v string) *RoutingProfile {",
          "10108:  s.Name = &v",
          "10109:  return s",
          "10113: func (s *RoutingProfile) SetRoutingProfileArn(v string) *RoutingProfile {",
          "10114:  s.RoutingProfileArn = &v",
          "10115:  return s",
          "10119: func (s *RoutingProfile) SetRoutingProfileId(v string) *RoutingProfile {",
          "10120:  s.RoutingProfileId = &v",
          "10121:  return s",
          "10125: func (s *RoutingProfile) SetTags(v map[string]*string) *RoutingProfile {",
          "10132: type RoutingProfileQueueConfig struct {",
          "10141:  Delay *int64 `type:\"integer\" required:\"true\"`",
          "10147:  Priority *int64 `min:\"1\" type:\"integer\" required:\"true\"`",
          "10152:  QueueReference *RoutingProfileQueueReference `type:\"structure\" required:\"true\"`",
          "10156: func (s RoutingProfileQueueConfig) String() string {",
          "10161: func (s RoutingProfileQueueConfig) GoString() string {",
          "10166: func (s *RoutingProfileQueueConfig) Validate() error {",
          "10167:  invalidParams := request.ErrInvalidParams{Context: \"RoutingProfileQueueConfig\"}",
          "10168:  if s.Delay == nil {",
          "10169:   invalidParams.Add(request.NewErrParamRequired(\"Delay\"))",
          "10171:  if s.Priority == nil {",
          "10172:   invalidParams.Add(request.NewErrParamRequired(\"Priority\"))",
          "10174:  if s.Priority != nil && *s.Priority < 1 {",
          "10175:   invalidParams.Add(request.NewErrParamMinValue(\"Priority\", 1))",
          "10176:  }",
          "10177:  if s.QueueReference == nil {",
          "10178:   invalidParams.Add(request.NewErrParamRequired(\"QueueReference\"))",
          "10179:  }",
          "10180:  if s.QueueReference != nil {",
          "10181:   if err := s.QueueReference.Validate(); err != nil {",
          "10182:    invalidParams.AddNested(\"QueueReference\", err.(request.ErrInvalidParams))",
          "10183:   }",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "6773:  return nil",
          "6774: }",
          "6779:  return s",
          "6780: }",
          "6785:  return s",
          "6786: }",
          "6791:  return s",
          "6792: }",
          "6795:  _ struct{} `type:\"structure\"`",
          "6802: }",
          "6806:  return awsutil.Prettify(s)",
          "6807: }",
          "6811:  return s.String()",
          "6812: }",
          "6817:  return s",
          "6818: }",
          "6823:  return s",
          "6824: }",
          "6827:  _ struct{} `type:\"structure\"`",
          "6840: }",
          "6844:  return awsutil.Prettify(s)",
          "6845: }",
          "6849:  return s.String()",
          "6850: }",
          "6860:  }",
          "6863:  }",
          "6865:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "6777: func (s *ListUserHierarchyGroupsInput) SetInstanceId(v string) *ListUserHierarchyGroupsInput {",
          "6778:  s.InstanceId = &v",
          "6783: func (s *ListUserHierarchyGroupsInput) SetMaxResults(v int64) *ListUserHierarchyGroupsInput {",
          "6784:  s.MaxResults = &v",
          "6789: func (s *ListUserHierarchyGroupsInput) SetNextToken(v string) *ListUserHierarchyGroupsInput {",
          "6790:  s.NextToken = &v",
          "6794: type ListUserHierarchyGroupsOutput struct {",
          "6798:  NextToken *string `type:\"string\"`",
          "6801:  UserHierarchyGroupSummaryList []*HierarchyGroupSummary `type:\"list\"`",
          "6805: func (s ListUserHierarchyGroupsOutput) String() string {",
          "6810: func (s ListUserHierarchyGroupsOutput) GoString() string {",
          "6815: func (s *ListUserHierarchyGroupsOutput) SetNextToken(v string) *ListUserHierarchyGroupsOutput {",
          "6816:  s.NextToken = &v",
          "6821: func (s *ListUserHierarchyGroupsOutput) SetUserHierarchyGroupSummaryList(v []*HierarchyGroupSummary) *ListUserHierarchyGroupsOutput {",
          "6822:  s.UserHierarchyGroupSummaryList = v",
          "6826: type ListUsersInput struct {",
          "6832:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "6835:  MaxResults *int64 `location:\"querystring\" locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "6839:  NextToken *string `location:\"querystring\" locationName:\"nextToken\" type:\"string\"`",
          "6843: func (s ListUsersInput) String() string {",
          "6848: func (s ListUsersInput) GoString() string {",
          "6853: func (s *ListUsersInput) Validate() error {",
          "6854:  invalidParams := request.ErrInvalidParams{Context: \"ListUsersInput\"}",
          "6855:  if s.InstanceId == nil {",
          "6856:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "6857:  }",
          "6858:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "6859:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "6861:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "6862:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "",
          "[Added Lines]",
          "10193: func (s *RoutingProfileQueueConfig) SetDelay(v int64) *RoutingProfileQueueConfig {",
          "10194:  s.Delay = &v",
          "10199: func (s *RoutingProfileQueueConfig) SetPriority(v int64) *RoutingProfileQueueConfig {",
          "10200:  s.Priority = &v",
          "10205: func (s *RoutingProfileQueueConfig) SetQueueReference(v *RoutingProfileQueueReference) *RoutingProfileQueueConfig {",
          "10206:  s.QueueReference = v",
          "10211: type RoutingProfileQueueConfigSummary struct {",
          "10217:  Channel *string `type:\"string\" required:\"true\" enum:\"Channel\"`",
          "10225:  Delay *int64 `type:\"integer\" required:\"true\"`",
          "10231:  Priority *int64 `min:\"1\" type:\"integer\" required:\"true\"`",
          "10236:  QueueArn *string `type:\"string\" required:\"true\"`",
          "10241:  QueueId *string `type:\"string\" required:\"true\"`",
          "10246:  QueueName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "10250: func (s RoutingProfileQueueConfigSummary) String() string {",
          "10255: func (s RoutingProfileQueueConfigSummary) GoString() string {",
          "10260: func (s *RoutingProfileQueueConfigSummary) SetChannel(v string) *RoutingProfileQueueConfigSummary {",
          "10261:  s.Channel = &v",
          "10266: func (s *RoutingProfileQueueConfigSummary) SetDelay(v int64) *RoutingProfileQueueConfigSummary {",
          "10267:  s.Delay = &v",
          "10272: func (s *RoutingProfileQueueConfigSummary) SetPriority(v int64) *RoutingProfileQueueConfigSummary {",
          "10273:  s.Priority = &v",
          "10274:  return s",
          "10275: }",
          "10278: func (s *RoutingProfileQueueConfigSummary) SetQueueArn(v string) *RoutingProfileQueueConfigSummary {",
          "10279:  s.QueueArn = &v",
          "10280:  return s",
          "10281: }",
          "10284: func (s *RoutingProfileQueueConfigSummary) SetQueueId(v string) *RoutingProfileQueueConfigSummary {",
          "10285:  s.QueueId = &v",
          "10286:  return s",
          "10287: }",
          "10290: func (s *RoutingProfileQueueConfigSummary) SetQueueName(v string) *RoutingProfileQueueConfigSummary {",
          "10291:  s.QueueName = &v",
          "10292:  return s",
          "10293: }",
          "10296: type RoutingProfileQueueReference struct {",
          "10303:  Channel *string `type:\"string\" required:\"true\" enum:\"Channel\"`",
          "10308:  QueueId *string `type:\"string\" required:\"true\"`",
          "10312: func (s RoutingProfileQueueReference) String() string {",
          "10317: func (s RoutingProfileQueueReference) GoString() string {",
          "10322: func (s *RoutingProfileQueueReference) Validate() error {",
          "10323:  invalidParams := request.ErrInvalidParams{Context: \"RoutingProfileQueueReference\"}",
          "10324:  if s.Channel == nil {",
          "10325:   invalidParams.Add(request.NewErrParamRequired(\"Channel\"))",
          "10327:  if s.QueueId == nil {",
          "10328:   invalidParams.Add(request.NewErrParamRequired(\"QueueId\"))",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "6868:  return nil",
          "6869: }",
          "6880:  return s",
          "6881: }",
          "6886:  return s",
          "6887: }",
          "6890:  _ struct{} `type:\"structure\"`",
          "6897: }",
          "6901:  return awsutil.Prettify(s)",
          "6902: }",
          "6906:  return s.String()",
          "6907: }",
          "6912:  return s",
          "6913: }",
          "6918:  return s",
          "6919: }",
          "6928: }",
          "6932:  return awsutil.Prettify(s)",
          "6933: }",
          "6937:  return s.String()",
          "6938: }",
          "6944: }",
          "6949: }",
          "6957: }",
          "6986: }",
          "6990:  return awsutil.Prettify(s)",
          "6991: }",
          "6995:  return s.String()",
          "6996: }",
          "7003:  }",
          "7006:  }",
          "7010:  }",
          "7043: }",
          "7048: }",
          "7053:  return s",
          "7054: }",
          "7059:  return s",
          "7060: }",
          "7065:  return s",
          "7066: }",
          "7071:  return s",
          "7072: }",
          "7077:  return s",
          "7078: }",
          "7082:  _ struct{} `type:\"structure\"`",
          "7089: }",
          "7093:  return awsutil.Prettify(s)",
          "7094: }",
          "7098:  return s.String()",
          "7099: }",
          "7104:  return s",
          "7105: }",
          "7110:  return s",
          "7111: }",
          "7115:  _ struct{} `type:\"structure\"`",
          "7128: }",
          "7132:  return awsutil.Prettify(s)",
          "7133: }",
          "7137:  return s.String()",
          "7138: }",
          "7144: }",
          "7149:  return s",
          "7150: }",
          "7155:  return s",
          "7156: }",
          "7161:  return s",
          "7162: }",
          "7171: }",
          "7175:  return awsutil.Prettify(s)",
          "7176: }",
          "7180:  return s.String()",
          "7181: }",
          "7238:  InstanceId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "7239: }",
          "7243:  return awsutil.Prettify(s)",
          "7244: }",
          "7248:  return s.String()",
          "7249: }",
          "7262:  }",
          "7265:  }",
          "7266:  if s.InstanceId == nil {",
          "7267:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "",
          "[Removed Lines]",
          "6872: func (s *ListUsersInput) SetInstanceId(v string) *ListUsersInput {",
          "6873:  s.InstanceId = &v",
          "6874:  return s",
          "6875: }",
          "6878: func (s *ListUsersInput) SetMaxResults(v int64) *ListUsersInput {",
          "6879:  s.MaxResults = &v",
          "6884: func (s *ListUsersInput) SetNextToken(v string) *ListUsersInput {",
          "6885:  s.NextToken = &v",
          "6889: type ListUsersOutput struct {",
          "6893:  NextToken *string `type:\"string\"`",
          "6896:  UserSummaryList []*UserSummary `type:\"list\"`",
          "6900: func (s ListUsersOutput) String() string {",
          "6905: func (s ListUsersOutput) GoString() string {",
          "6910: func (s *ListUsersOutput) SetNextToken(v string) *ListUsersOutput {",
          "6911:  s.NextToken = &v",
          "6916: func (s *ListUsersOutput) SetUserSummaryList(v []*UserSummary) *ListUsersOutput {",
          "6917:  s.UserSummaryList = v",
          "6922: type OutboundContactNotPermittedException struct {",
          "6923:  _            struct{}                  `type:\"structure\"`",
          "6924:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "6927:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "6931: func (s OutboundContactNotPermittedException) String() string {",
          "6936: func (s OutboundContactNotPermittedException) GoString() string {",
          "6940: func newErrorOutboundContactNotPermittedException(v protocol.ResponseMetadata) error {",
          "6941:  return &OutboundContactNotPermittedException{",
          "6942:   RespMetadata: v,",
          "6943:  }",
          "6947: func (s *OutboundContactNotPermittedException) Code() string {",
          "6948:  return \"OutboundContactNotPermittedException\"",
          "6952: func (s *OutboundContactNotPermittedException) Message() string {",
          "6953:  if s.Message_ != nil {",
          "6954:   return *s.Message_",
          "6955:  }",
          "6956:  return \"\"",
          "6960: func (s *OutboundContactNotPermittedException) OrigErr() error {",
          "6961:  return nil",
          "6962: }",
          "6964: func (s *OutboundContactNotPermittedException) Error() string {",
          "6965:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "6966: }",
          "6969: func (s *OutboundContactNotPermittedException) StatusCode() int {",
          "6970:  return s.RespMetadata.StatusCode",
          "6971: }",
          "6974: func (s *OutboundContactNotPermittedException) RequestID() string {",
          "6975:  return s.RespMetadata.RequestID",
          "6976: }",
          "6979: type ParticipantDetails struct {",
          "6980:  _ struct{} `type:\"structure\"`",
          "6985:  DisplayName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "6989: func (s ParticipantDetails) String() string {",
          "6994: func (s ParticipantDetails) GoString() string {",
          "6999: func (s *ParticipantDetails) Validate() error {",
          "7000:  invalidParams := request.ErrInvalidParams{Context: \"ParticipantDetails\"}",
          "7001:  if s.DisplayName == nil {",
          "7002:   invalidParams.Add(request.NewErrParamRequired(\"DisplayName\"))",
          "7004:  if s.DisplayName != nil && len(*s.DisplayName) < 1 {",
          "7005:   invalidParams.Add(request.NewErrParamMinLen(\"DisplayName\", 1))",
          "7008:  if invalidParams.Len() > 0 {",
          "7009:   return invalidParams",
          "7011:  return nil",
          "7012: }",
          "7015: func (s *ParticipantDetails) SetDisplayName(v string) *ParticipantDetails {",
          "7016:  s.DisplayName = &v",
          "7017:  return s",
          "7018: }",
          "7021: type PhoneNumberSummary struct {",
          "7022:  _ struct{} `type:\"structure\"`",
          "7025:  Arn *string `type:\"string\"`",
          "7028:  Id *string `type:\"string\"`",
          "7031:  PhoneNumber *string `type:\"string\"`",
          "7034:  PhoneNumberCountryCode *string `type:\"string\" enum:\"PhoneNumberCountryCode\"`",
          "7037:  PhoneNumberType *string `type:\"string\" enum:\"PhoneNumberType\"`",
          "7038: }",
          "7041: func (s PhoneNumberSummary) String() string {",
          "7042:  return awsutil.Prettify(s)",
          "7046: func (s PhoneNumberSummary) GoString() string {",
          "7047:  return s.String()",
          "7051: func (s *PhoneNumberSummary) SetArn(v string) *PhoneNumberSummary {",
          "7052:  s.Arn = &v",
          "7057: func (s *PhoneNumberSummary) SetId(v string) *PhoneNumberSummary {",
          "7058:  s.Id = &v",
          "7063: func (s *PhoneNumberSummary) SetPhoneNumber(v string) *PhoneNumberSummary {",
          "7064:  s.PhoneNumber = &v",
          "7069: func (s *PhoneNumberSummary) SetPhoneNumberCountryCode(v string) *PhoneNumberSummary {",
          "7070:  s.PhoneNumberCountryCode = &v",
          "7075: func (s *PhoneNumberSummary) SetPhoneNumberType(v string) *PhoneNumberSummary {",
          "7076:  s.PhoneNumberType = &v",
          "7081: type QueueReference struct {",
          "7085:  Arn *string `type:\"string\"`",
          "7088:  Id *string `type:\"string\"`",
          "7092: func (s QueueReference) String() string {",
          "7097: func (s QueueReference) GoString() string {",
          "7102: func (s *QueueReference) SetArn(v string) *QueueReference {",
          "7103:  s.Arn = &v",
          "7108: func (s *QueueReference) SetId(v string) *QueueReference {",
          "7109:  s.Id = &v",
          "7114: type QueueSummary struct {",
          "7118:  Arn *string `type:\"string\"`",
          "7121:  Id *string `type:\"string\"`",
          "7124:  Name *string `min:\"1\" type:\"string\"`",
          "7127:  QueueType *string `type:\"string\" enum:\"QueueType\"`",
          "7131: func (s QueueSummary) String() string {",
          "7136: func (s QueueSummary) GoString() string {",
          "7141: func (s *QueueSummary) SetArn(v string) *QueueSummary {",
          "7142:  s.Arn = &v",
          "7143:  return s",
          "7147: func (s *QueueSummary) SetId(v string) *QueueSummary {",
          "7148:  s.Id = &v",
          "7153: func (s *QueueSummary) SetName(v string) *QueueSummary {",
          "7154:  s.Name = &v",
          "7159: func (s *QueueSummary) SetQueueType(v string) *QueueSummary {",
          "7160:  s.QueueType = &v",
          "7165: type ResourceNotFoundException struct {",
          "7166:  _            struct{}                  `type:\"structure\"`",
          "7167:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "7170:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "7174: func (s ResourceNotFoundException) String() string {",
          "7179: func (s ResourceNotFoundException) GoString() string {",
          "7183: func newErrorResourceNotFoundException(v protocol.ResponseMetadata) error {",
          "7184:  return &ResourceNotFoundException{",
          "7185:   RespMetadata: v,",
          "7186:  }",
          "7187: }",
          "7190: func (s *ResourceNotFoundException) Code() string {",
          "7191:  return \"ResourceNotFoundException\"",
          "7192: }",
          "7195: func (s *ResourceNotFoundException) Message() string {",
          "7196:  if s.Message_ != nil {",
          "7197:   return *s.Message_",
          "7198:  }",
          "7199:  return \"\"",
          "7200: }",
          "7203: func (s *ResourceNotFoundException) OrigErr() error {",
          "7204:  return nil",
          "7205: }",
          "7207: func (s *ResourceNotFoundException) Error() string {",
          "7208:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "7209: }",
          "7212: func (s *ResourceNotFoundException) StatusCode() int {",
          "7213:  return s.RespMetadata.StatusCode",
          "7214: }",
          "7217: func (s *ResourceNotFoundException) RequestID() string {",
          "7218:  return s.RespMetadata.RequestID",
          "7219: }",
          "7221: type ResumeContactRecordingInput struct {",
          "7222:  _ struct{} `type:\"structure\"`",
          "7227:  ContactId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "7233:  InitialContactId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "7242: func (s ResumeContactRecordingInput) String() string {",
          "7247: func (s ResumeContactRecordingInput) GoString() string {",
          "7252: func (s *ResumeContactRecordingInput) Validate() error {",
          "7253:  invalidParams := request.ErrInvalidParams{Context: \"ResumeContactRecordingInput\"}",
          "7254:  if s.ContactId == nil {",
          "7255:   invalidParams.Add(request.NewErrParamRequired(\"ContactId\"))",
          "7256:  }",
          "7257:  if s.ContactId != nil && len(*s.ContactId) < 1 {",
          "7258:   invalidParams.Add(request.NewErrParamMinLen(\"ContactId\", 1))",
          "7259:  }",
          "7260:  if s.InitialContactId == nil {",
          "7261:   invalidParams.Add(request.NewErrParamRequired(\"InitialContactId\"))",
          "7263:  if s.InitialContactId != nil && len(*s.InitialContactId) < 1 {",
          "7264:   invalidParams.Add(request.NewErrParamMinLen(\"InitialContactId\", 1))",
          "",
          "[Added Lines]",
          "10338: func (s *RoutingProfileQueueReference) SetChannel(v string) *RoutingProfileQueueReference {",
          "10339:  s.Channel = &v",
          "10344: func (s *RoutingProfileQueueReference) SetQueueId(v string) *RoutingProfileQueueReference {",
          "10345:  s.QueueId = &v",
          "10350: type RoutingProfileSummary struct {",
          "10354:  Arn *string `type:\"string\"`",
          "10357:  Id *string `type:\"string\"`",
          "10360:  Name *string `min:\"1\" type:\"string\"`",
          "10364: func (s RoutingProfileSummary) String() string {",
          "10369: func (s RoutingProfileSummary) GoString() string {",
          "10374: func (s *RoutingProfileSummary) SetArn(v string) *RoutingProfileSummary {",
          "10375:  s.Arn = &v",
          "10380: func (s *RoutingProfileSummary) SetId(v string) *RoutingProfileSummary {",
          "10381:  s.Id = &v",
          "10386: func (s *RoutingProfileSummary) SetName(v string) *RoutingProfileSummary {",
          "10387:  s.Name = &v",
          "10388:  return s",
          "10389: }",
          "10392: type SecurityProfileSummary struct {",
          "10393:  _ struct{} `type:\"structure\"`",
          "10396:  Arn *string `type:\"string\"`",
          "10399:  Id *string `type:\"string\"`",
          "10402:  Name *string `type:\"string\"`",
          "10406: func (s SecurityProfileSummary) String() string {",
          "10411: func (s SecurityProfileSummary) GoString() string {",
          "10416: func (s *SecurityProfileSummary) SetArn(v string) *SecurityProfileSummary {",
          "10417:  s.Arn = &v",
          "10418:  return s",
          "10422: func (s *SecurityProfileSummary) SetId(v string) *SecurityProfileSummary {",
          "10423:  s.Id = &v",
          "10424:  return s",
          "10428: func (s *SecurityProfileSummary) SetName(v string) *SecurityProfileSummary {",
          "10429:  s.Name = &v",
          "10430:  return s",
          "10433: type StartChatContactInput struct {",
          "10434:  _ struct{} `type:\"structure\"`",
          "10442:  Attributes map[string]*string `type:\"map\"`",
          "10446:  ClientToken *string `type:\"string\" idempotencyToken:\"true\"`",
          "10457:  ContactFlowId *string `type:\"string\" required:\"true\"`",
          "10460:  InitialMessage *ChatMessage `type:\"structure\"`",
          "10465:  InstanceId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "10470:  ParticipantDetails *ParticipantDetails `type:\"structure\" required:\"true\"`",
          "10474: func (s StartChatContactInput) String() string {",
          "10479: func (s StartChatContactInput) GoString() string {",
          "10484: func (s *StartChatContactInput) Validate() error {",
          "10485:  invalidParams := request.ErrInvalidParams{Context: \"StartChatContactInput\"}",
          "10486:  if s.ContactFlowId == nil {",
          "10487:   invalidParams.Add(request.NewErrParamRequired(\"ContactFlowId\"))",
          "10489:  if s.InstanceId == nil {",
          "10490:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "10492:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "10493:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "10494:  }",
          "10495:  if s.ParticipantDetails == nil {",
          "10496:   invalidParams.Add(request.NewErrParamRequired(\"ParticipantDetails\"))",
          "10497:  }",
          "10498:  if s.InitialMessage != nil {",
          "10499:   if err := s.InitialMessage.Validate(); err != nil {",
          "10500:    invalidParams.AddNested(\"InitialMessage\", err.(request.ErrInvalidParams))",
          "10501:   }",
          "10502:  }",
          "10503:  if s.ParticipantDetails != nil {",
          "10504:   if err := s.ParticipantDetails.Validate(); err != nil {",
          "10505:    invalidParams.AddNested(\"ParticipantDetails\", err.(request.ErrInvalidParams))",
          "10506:   }",
          "10509:  if invalidParams.Len() > 0 {",
          "10510:   return invalidParams",
          "10511:  }",
          "10512:  return nil",
          "10516: func (s *StartChatContactInput) SetAttributes(v map[string]*string) *StartChatContactInput {",
          "10517:  s.Attributes = v",
          "10518:  return s",
          "10522: func (s *StartChatContactInput) SetClientToken(v string) *StartChatContactInput {",
          "10523:  s.ClientToken = &v",
          "10528: func (s *StartChatContactInput) SetContactFlowId(v string) *StartChatContactInput {",
          "10529:  s.ContactFlowId = &v",
          "10534: func (s *StartChatContactInput) SetInitialMessage(v *ChatMessage) *StartChatContactInput {",
          "10535:  s.InitialMessage = v",
          "10540: func (s *StartChatContactInput) SetInstanceId(v string) *StartChatContactInput {",
          "10541:  s.InstanceId = &v",
          "10546: func (s *StartChatContactInput) SetParticipantDetails(v *ParticipantDetails) *StartChatContactInput {",
          "10547:  s.ParticipantDetails = v",
          "10551: type StartChatContactOutput struct {",
          "10555:  ContactId *string `min:\"1\" type:\"string\"`",
          "10559:  ParticipantId *string `min:\"1\" type:\"string\"`",
          "10564:  ParticipantToken *string `min:\"1\" type:\"string\"`",
          "10568: func (s StartChatContactOutput) String() string {",
          "10573: func (s StartChatContactOutput) GoString() string {",
          "10578: func (s *StartChatContactOutput) SetContactId(v string) *StartChatContactOutput {",
          "10579:  s.ContactId = &v",
          "10584: func (s *StartChatContactOutput) SetParticipantId(v string) *StartChatContactOutput {",
          "10585:  s.ParticipantId = &v",
          "10590: func (s *StartChatContactOutput) SetParticipantToken(v string) *StartChatContactOutput {",
          "10591:  s.ParticipantToken = &v",
          "10592:  return s",
          "10593: }",
          "10595: type StartContactRecordingInput struct {",
          "10601:  ContactId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "10607:  InitialContactId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "10612:  InstanceId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "10617:  VoiceRecordingConfiguration *VoiceRecordingConfiguration `type:\"structure\" required:\"true\"`",
          "10621: func (s StartContactRecordingInput) String() string {",
          "10626: func (s StartContactRecordingInput) GoString() string {",
          "10631: func (s *StartContactRecordingInput) Validate() error {",
          "10632:  invalidParams := request.ErrInvalidParams{Context: \"StartContactRecordingInput\"}",
          "10633:  if s.ContactId == nil {",
          "10634:   invalidParams.Add(request.NewErrParamRequired(\"ContactId\"))",
          "10635:  }",
          "10636:  if s.ContactId != nil && len(*s.ContactId) < 1 {",
          "10637:   invalidParams.Add(request.NewErrParamMinLen(\"ContactId\", 1))",
          "10638:  }",
          "10639:  if s.InitialContactId == nil {",
          "10640:   invalidParams.Add(request.NewErrParamRequired(\"InitialContactId\"))",
          "10641:  }",
          "10642:  if s.InitialContactId != nil && len(*s.InitialContactId) < 1 {",
          "10643:   invalidParams.Add(request.NewErrParamMinLen(\"InitialContactId\", 1))",
          "10644:  }",
          "10645:  if s.InstanceId == nil {",
          "10646:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "10647:  }",
          "10648:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "10649:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "10650:  }",
          "10651:  if s.VoiceRecordingConfiguration == nil {",
          "10652:   invalidParams.Add(request.NewErrParamRequired(\"VoiceRecordingConfiguration\"))",
          "10653:  }",
          "10655:  if invalidParams.Len() > 0 {",
          "10656:   return invalidParams",
          "10657:  }",
          "10658:  return nil",
          "10662: func (s *StartContactRecordingInput) SetContactId(v string) *StartContactRecordingInput {",
          "10663:  s.ContactId = &v",
          "10668: func (s *StartContactRecordingInput) SetInitialContactId(v string) *StartContactRecordingInput {",
          "10669:  s.InitialContactId = &v",
          "10674: func (s *StartContactRecordingInput) SetInstanceId(v string) *StartContactRecordingInput {",
          "10675:  s.InstanceId = &v",
          "10680: func (s *StartContactRecordingInput) SetVoiceRecordingConfiguration(v *VoiceRecordingConfiguration) *StartContactRecordingInput {",
          "10681:  s.VoiceRecordingConfiguration = v",
          "10682:  return s",
          "10683: }",
          "10685: type StartContactRecordingOutput struct {",
          "10686:  _ struct{} `type:\"structure\"`",
          "10690: func (s StartContactRecordingOutput) String() string {",
          "10695: func (s StartContactRecordingOutput) GoString() string {",
          "10699: type StartOutboundVoiceContactInput struct {",
          "10700:  _ struct{} `type:\"structure\"`",
          "10708:  Attributes map[string]*string `type:\"map\"`",
          "10714:  ClientToken *string `type:\"string\" idempotencyToken:\"true\"`",
          "10725:  ContactFlowId *string `type:\"string\" required:\"true\"`",
          "10730:  DestinationPhoneNumber *string `type:\"string\" required:\"true\"`",
          "10741:  QueueId *string `type:\"string\"`",
          "10745:  SourcePhoneNumber *string `type:\"string\"`",
          "10749: func (s StartOutboundVoiceContactInput) String() string {",
          "10754: func (s StartOutboundVoiceContactInput) GoString() string {",
          "10759: func (s *StartOutboundVoiceContactInput) Validate() error {",
          "10760:  invalidParams := request.ErrInvalidParams{Context: \"StartOutboundVoiceContactInput\"}",
          "10761:  if s.ContactFlowId == nil {",
          "10762:   invalidParams.Add(request.NewErrParamRequired(\"ContactFlowId\"))",
          "10764:  if s.DestinationPhoneNumber == nil {",
          "10765:   invalidParams.Add(request.NewErrParamRequired(\"DestinationPhoneNumber\"))",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "7276:  return nil",
          "7277: }",
          "7282:  return s",
          "7283: }",
          "7288:  return s",
          "7289: }",
          "7293:  s.InstanceId = &v",
          "7294:  return s",
          "7295: }",
          "7298:  _ struct{} `type:\"structure\"`",
          "7299: }",
          "7303:  return awsutil.Prettify(s)",
          "7304: }",
          "7308:  return s.String()",
          "7309: }",
          "7323: }",
          "7327:  return awsutil.Prettify(s)",
          "7328: }",
          "7332:  return s.String()",
          "7333: }",
          "7339: }",
          "7344:  return s",
          "7345: }",
          "7350:  return s",
          "7351: }",
          "7355:  _ struct{} `type:\"structure\"`",
          "7365: }",
          "7369:  return awsutil.Prettify(s)",
          "7370: }",
          "7374:  return s.String()",
          "7375: }",
          "7396:  _ struct{} `type:\"structure\"`",
          "7421:  InstanceId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "7427: }",
          "7431:  return awsutil.Prettify(s)",
          "7432: }",
          "7436:  return s.String()",
          "7437: }",
          "7444:  }",
          "7445:  if s.InstanceId == nil {",
          "7446:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "",
          "[Removed Lines]",
          "7280: func (s *ResumeContactRecordingInput) SetContactId(v string) *ResumeContactRecordingInput {",
          "7281:  s.ContactId = &v",
          "7286: func (s *ResumeContactRecordingInput) SetInitialContactId(v string) *ResumeContactRecordingInput {",
          "7287:  s.InitialContactId = &v",
          "7292: func (s *ResumeContactRecordingInput) SetInstanceId(v string) *ResumeContactRecordingInput {",
          "7297: type ResumeContactRecordingOutput struct {",
          "7302: func (s ResumeContactRecordingOutput) String() string {",
          "7307: func (s ResumeContactRecordingOutput) GoString() string {",
          "7312: type RoutingProfileSummary struct {",
          "7313:  _ struct{} `type:\"structure\"`",
          "7316:  Arn *string `type:\"string\"`",
          "7319:  Id *string `type:\"string\"`",
          "7322:  Name *string `min:\"1\" type:\"string\"`",
          "7326: func (s RoutingProfileSummary) String() string {",
          "7331: func (s RoutingProfileSummary) GoString() string {",
          "7336: func (s *RoutingProfileSummary) SetArn(v string) *RoutingProfileSummary {",
          "7337:  s.Arn = &v",
          "7338:  return s",
          "7342: func (s *RoutingProfileSummary) SetId(v string) *RoutingProfileSummary {",
          "7343:  s.Id = &v",
          "7348: func (s *RoutingProfileSummary) SetName(v string) *RoutingProfileSummary {",
          "7349:  s.Name = &v",
          "7354: type SecurityProfileSummary struct {",
          "7358:  Arn *string `type:\"string\"`",
          "7361:  Id *string `type:\"string\"`",
          "7364:  Name *string `type:\"string\"`",
          "7368: func (s SecurityProfileSummary) String() string {",
          "7373: func (s SecurityProfileSummary) GoString() string {",
          "7378: func (s *SecurityProfileSummary) SetArn(v string) *SecurityProfileSummary {",
          "7379:  s.Arn = &v",
          "7380:  return s",
          "7381: }",
          "7384: func (s *SecurityProfileSummary) SetId(v string) *SecurityProfileSummary {",
          "7385:  s.Id = &v",
          "7386:  return s",
          "7387: }",
          "7390: func (s *SecurityProfileSummary) SetName(v string) *SecurityProfileSummary {",
          "7391:  s.Name = &v",
          "7392:  return s",
          "7393: }",
          "7395: type StartChatContactInput struct {",
          "7404:  Attributes map[string]*string `type:\"map\"`",
          "7408:  ClientToken *string `type:\"string\" idempotencyToken:\"true\"`",
          "7413:  ContactFlowId *string `type:\"string\" required:\"true\"`",
          "7416:  InitialMessage *ChatMessage `type:\"structure\"`",
          "7426:  ParticipantDetails *ParticipantDetails `type:\"structure\" required:\"true\"`",
          "7430: func (s StartChatContactInput) String() string {",
          "7435: func (s StartChatContactInput) GoString() string {",
          "7440: func (s *StartChatContactInput) Validate() error {",
          "7441:  invalidParams := request.ErrInvalidParams{Context: \"StartChatContactInput\"}",
          "7442:  if s.ContactFlowId == nil {",
          "7443:   invalidParams.Add(request.NewErrParamRequired(\"ContactFlowId\"))",
          "",
          "[Added Lines]",
          "10781: func (s *StartOutboundVoiceContactInput) SetAttributes(v map[string]*string) *StartOutboundVoiceContactInput {",
          "10782:  s.Attributes = v",
          "10787: func (s *StartOutboundVoiceContactInput) SetClientToken(v string) *StartOutboundVoiceContactInput {",
          "10788:  s.ClientToken = &v",
          "10789:  return s",
          "10790: }",
          "10793: func (s *StartOutboundVoiceContactInput) SetContactFlowId(v string) *StartOutboundVoiceContactInput {",
          "10794:  s.ContactFlowId = &v",
          "10795:  return s",
          "10796: }",
          "10799: func (s *StartOutboundVoiceContactInput) SetDestinationPhoneNumber(v string) *StartOutboundVoiceContactInput {",
          "10800:  s.DestinationPhoneNumber = &v",
          "10805: func (s *StartOutboundVoiceContactInput) SetInstanceId(v string) *StartOutboundVoiceContactInput {",
          "10811: func (s *StartOutboundVoiceContactInput) SetQueueId(v string) *StartOutboundVoiceContactInput {",
          "10812:  s.QueueId = &v",
          "10813:  return s",
          "10814: }",
          "10817: func (s *StartOutboundVoiceContactInput) SetSourcePhoneNumber(v string) *StartOutboundVoiceContactInput {",
          "10818:  s.SourcePhoneNumber = &v",
          "10819:  return s",
          "10820: }",
          "10822: type StartOutboundVoiceContactOutput struct {",
          "10826:  ContactId *string `min:\"1\" type:\"string\"`",
          "10830: func (s StartOutboundVoiceContactOutput) String() string {",
          "10835: func (s StartOutboundVoiceContactOutput) GoString() string {",
          "10840: func (s *StartOutboundVoiceContactOutput) SetContactId(v string) *StartOutboundVoiceContactOutput {",
          "10841:  s.ContactId = &v",
          "10842:  return s",
          "10843: }",
          "10845: type StopContactInput struct {",
          "10846:  _ struct{} `type:\"structure\"`",
          "10851:  ContactId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "10856:  InstanceId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "10860: func (s StopContactInput) String() string {",
          "10865: func (s StopContactInput) GoString() string {",
          "10870: func (s *StopContactInput) Validate() error {",
          "10871:  invalidParams := request.ErrInvalidParams{Context: \"StopContactInput\"}",
          "10872:  if s.ContactId == nil {",
          "10873:   invalidParams.Add(request.NewErrParamRequired(\"ContactId\"))",
          "10874:  }",
          "10875:  if s.ContactId != nil && len(*s.ContactId) < 1 {",
          "10876:   invalidParams.Add(request.NewErrParamMinLen(\"ContactId\", 1))",
          "10877:  }",
          "10878:  if s.InstanceId == nil {",
          "10879:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "10880:  }",
          "10881:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "10882:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "10883:  }",
          "10885:  if invalidParams.Len() > 0 {",
          "10886:   return invalidParams",
          "10887:  }",
          "10888:  return nil",
          "10892: func (s *StopContactInput) SetContactId(v string) *StopContactInput {",
          "10893:  s.ContactId = &v",
          "10898: func (s *StopContactInput) SetInstanceId(v string) *StopContactInput {",
          "10899:  s.InstanceId = &v",
          "10903: type StopContactOutput struct {",
          "10908: func (s StopContactOutput) String() string {",
          "10913: func (s StopContactOutput) GoString() string {",
          "10917: type StopContactRecordingInput struct {",
          "10923:  ContactId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "10929:  InitialContactId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "10938: func (s StopContactRecordingInput) String() string {",
          "10943: func (s StopContactRecordingInput) GoString() string {",
          "10948: func (s *StopContactRecordingInput) Validate() error {",
          "10949:  invalidParams := request.ErrInvalidParams{Context: \"StopContactRecordingInput\"}",
          "10950:  if s.ContactId == nil {",
          "10951:   invalidParams.Add(request.NewErrParamRequired(\"ContactId\"))",
          "10952:  }",
          "10953:  if s.ContactId != nil && len(*s.ContactId) < 1 {",
          "10954:   invalidParams.Add(request.NewErrParamMinLen(\"ContactId\", 1))",
          "10955:  }",
          "10956:  if s.InitialContactId == nil {",
          "10957:   invalidParams.Add(request.NewErrParamRequired(\"InitialContactId\"))",
          "10958:  }",
          "10959:  if s.InitialContactId != nil && len(*s.InitialContactId) < 1 {",
          "10960:   invalidParams.Add(request.NewErrParamMinLen(\"InitialContactId\", 1))",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "7448:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "7449:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "7450:  }",
          "7465:  if invalidParams.Len() > 0 {",
          "7466:   return invalidParams",
          "",
          "[Removed Lines]",
          "7451:  if s.ParticipantDetails == nil {",
          "7452:   invalidParams.Add(request.NewErrParamRequired(\"ParticipantDetails\"))",
          "7453:  }",
          "7454:  if s.InitialMessage != nil {",
          "7455:   if err := s.InitialMessage.Validate(); err != nil {",
          "7456:    invalidParams.AddNested(\"InitialMessage\", err.(request.ErrInvalidParams))",
          "7457:   }",
          "7458:  }",
          "7459:  if s.ParticipantDetails != nil {",
          "7460:   if err := s.ParticipantDetails.Validate(); err != nil {",
          "7461:    invalidParams.AddNested(\"ParticipantDetails\", err.(request.ErrInvalidParams))",
          "7462:   }",
          "7463:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "7468:  return nil",
          "7469: }",
          "7486:  return s",
          "7487: }",
          "7492:  return s",
          "7493: }",
          "7497:  s.InstanceId = &v",
          "7498:  return s",
          "7499: }",
          "7508:  _ struct{} `type:\"structure\"`",
          "7521: }",
          "7525:  return awsutil.Prettify(s)",
          "7526: }",
          "7530:  return s.String()",
          "7531: }",
          "7552:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "7472: func (s *StartChatContactInput) SetAttributes(v map[string]*string) *StartChatContactInput {",
          "7473:  s.Attributes = v",
          "7474:  return s",
          "7475: }",
          "7478: func (s *StartChatContactInput) SetClientToken(v string) *StartChatContactInput {",
          "7479:  s.ClientToken = &v",
          "7480:  return s",
          "7481: }",
          "7484: func (s *StartChatContactInput) SetContactFlowId(v string) *StartChatContactInput {",
          "7485:  s.ContactFlowId = &v",
          "7490: func (s *StartChatContactInput) SetInitialMessage(v *ChatMessage) *StartChatContactInput {",
          "7491:  s.InitialMessage = v",
          "7496: func (s *StartChatContactInput) SetInstanceId(v string) *StartChatContactInput {",
          "7502: func (s *StartChatContactInput) SetParticipantDetails(v *ParticipantDetails) *StartChatContactInput {",
          "7503:  s.ParticipantDetails = v",
          "7504:  return s",
          "7505: }",
          "7507: type StartChatContactOutput struct {",
          "7511:  ContactId *string `min:\"1\" type:\"string\"`",
          "7515:  ParticipantId *string `min:\"1\" type:\"string\"`",
          "7520:  ParticipantToken *string `min:\"1\" type:\"string\"`",
          "7524: func (s StartChatContactOutput) String() string {",
          "7529: func (s StartChatContactOutput) GoString() string {",
          "7534: func (s *StartChatContactOutput) SetContactId(v string) *StartChatContactOutput {",
          "7535:  s.ContactId = &v",
          "7536:  return s",
          "7537: }",
          "7540: func (s *StartChatContactOutput) SetParticipantId(v string) *StartChatContactOutput {",
          "7541:  s.ParticipantId = &v",
          "7542:  return s",
          "7543: }",
          "7546: func (s *StartChatContactOutput) SetParticipantToken(v string) *StartChatContactOutput {",
          "7547:  s.ParticipantToken = &v",
          "7548:  return s",
          "7549: }",
          "7551: type StartContactRecordingInput struct {",
          "",
          "[Added Lines]",
          "10976: func (s *StopContactRecordingInput) SetContactId(v string) *StopContactRecordingInput {",
          "10977:  s.ContactId = &v",
          "10982: func (s *StopContactRecordingInput) SetInitialContactId(v string) *StopContactRecordingInput {",
          "10983:  s.InitialContactId = &v",
          "10988: func (s *StopContactRecordingInput) SetInstanceId(v string) *StopContactRecordingInput {",
          "10993: type StopContactRecordingOutput struct {",
          "10998: func (s StopContactRecordingOutput) String() string {",
          "11003: func (s StopContactRecordingOutput) GoString() string {",
          "11007: type SuspendContactRecordingInput struct {",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "7568:  InstanceId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "7574: }",
          "7578:  return awsutil.Prettify(s)",
          "7579: }",
          "7583:  return s.String()",
          "7584: }",
          "7589:  if s.ContactId == nil {",
          "7590:   invalidParams.Add(request.NewErrParamRequired(\"ContactId\"))",
          "7591:  }",
          "",
          "[Removed Lines]",
          "7573:  VoiceRecordingConfiguration *VoiceRecordingConfiguration `type:\"structure\" required:\"true\"`",
          "7577: func (s StartContactRecordingInput) String() string {",
          "7582: func (s StartContactRecordingInput) GoString() string {",
          "7587: func (s *StartContactRecordingInput) Validate() error {",
          "7588:  invalidParams := request.ErrInvalidParams{Context: \"StartContactRecordingInput\"}",
          "",
          "[Added Lines]",
          "11028: func (s SuspendContactRecordingInput) String() string {",
          "11033: func (s SuspendContactRecordingInput) GoString() string {",
          "11038: func (s *SuspendContactRecordingInput) Validate() error {",
          "11039:  invalidParams := request.ErrInvalidParams{Context: \"SuspendContactRecordingInput\"}",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "7604:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "7605:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "7606:  }",
          "7611:  if invalidParams.Len() > 0 {",
          "7612:   return invalidParams",
          "",
          "[Removed Lines]",
          "7607:  if s.VoiceRecordingConfiguration == nil {",
          "7608:   invalidParams.Add(request.NewErrParamRequired(\"VoiceRecordingConfiguration\"))",
          "7609:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "7615: }",
          "7619:  s.ContactId = &v",
          "7620:  return s",
          "7621: }",
          "7625:  s.InitialContactId = &v",
          "7626:  return s",
          "7627: }",
          "7631:  s.InstanceId = &v",
          "7632:  return s",
          "7633: }",
          "7638:  return s",
          "7639: }",
          "7642:  _ struct{} `type:\"structure\"`",
          "7643: }",
          "7647:  return awsutil.Prettify(s)",
          "7648: }",
          "7652:  return s.String()",
          "7653: }",
          "7656:  _ struct{} `type:\"structure\"`",
          "7696: }",
          "7700:  return awsutil.Prettify(s)",
          "7701: }",
          "7705:  return s.String()",
          "7706: }",
          "7713:  }",
          "7716:  }",
          "7719:  }",
          "7722:  }",
          "7724:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "7618: func (s *StartContactRecordingInput) SetContactId(v string) *StartContactRecordingInput {",
          "7624: func (s *StartContactRecordingInput) SetInitialContactId(v string) *StartContactRecordingInput {",
          "7630: func (s *StartContactRecordingInput) SetInstanceId(v string) *StartContactRecordingInput {",
          "7636: func (s *StartContactRecordingInput) SetVoiceRecordingConfiguration(v *VoiceRecordingConfiguration) *StartContactRecordingInput {",
          "7637:  s.VoiceRecordingConfiguration = v",
          "7641: type StartContactRecordingOutput struct {",
          "7646: func (s StartContactRecordingOutput) String() string {",
          "7651: func (s StartContactRecordingOutput) GoString() string {",
          "7655: type StartOutboundVoiceContactInput struct {",
          "7664:  Attributes map[string]*string `type:\"map\"`",
          "7670:  ClientToken *string `type:\"string\" idempotencyToken:\"true\"`",
          "7675:  ContactFlowId *string `type:\"string\" required:\"true\"`",
          "7680:  DestinationPhoneNumber *string `type:\"string\" required:\"true\"`",
          "7685:  InstanceId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "7691:  QueueId *string `type:\"string\"`",
          "7695:  SourcePhoneNumber *string `type:\"string\"`",
          "7699: func (s StartOutboundVoiceContactInput) String() string {",
          "7704: func (s StartOutboundVoiceContactInput) GoString() string {",
          "7709: func (s *StartOutboundVoiceContactInput) Validate() error {",
          "7710:  invalidParams := request.ErrInvalidParams{Context: \"StartOutboundVoiceContactInput\"}",
          "7711:  if s.ContactFlowId == nil {",
          "7712:   invalidParams.Add(request.NewErrParamRequired(\"ContactFlowId\"))",
          "7714:  if s.DestinationPhoneNumber == nil {",
          "7715:   invalidParams.Add(request.NewErrParamRequired(\"DestinationPhoneNumber\"))",
          "7717:  if s.InstanceId == nil {",
          "7718:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "7720:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "7721:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "",
          "[Added Lines]",
          "11066: func (s *SuspendContactRecordingInput) SetContactId(v string) *SuspendContactRecordingInput {",
          "11072: func (s *SuspendContactRecordingInput) SetInitialContactId(v string) *SuspendContactRecordingInput {",
          "11078: func (s *SuspendContactRecordingInput) SetInstanceId(v string) *SuspendContactRecordingInput {",
          "11083: type SuspendContactRecordingOutput struct {",
          "11084:  _ struct{} `type:\"structure\"`",
          "11085: }",
          "11088: func (s SuspendContactRecordingOutput) String() string {",
          "11089:  return awsutil.Prettify(s)",
          "11090: }",
          "11093: func (s SuspendContactRecordingOutput) GoString() string {",
          "11094:  return s.String()",
          "11095: }",
          "11097: type TagResourceInput struct {",
          "11098:  _ struct{} `type:\"structure\"`",
          "11103:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" type:\"string\" required:\"true\"`",
          "11109:  Tags map[string]*string `locationName:\"tags\" min:\"1\" type:\"map\" required:\"true\"`",
          "11110: }",
          "11113: func (s TagResourceInput) String() string {",
          "11114:  return awsutil.Prettify(s)",
          "11115: }",
          "11118: func (s TagResourceInput) GoString() string {",
          "11119:  return s.String()",
          "11120: }",
          "11123: func (s *TagResourceInput) Validate() error {",
          "11124:  invalidParams := request.ErrInvalidParams{Context: \"TagResourceInput\"}",
          "11125:  if s.ResourceArn == nil {",
          "11126:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "11127:  }",
          "11128:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "11129:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "11130:  }",
          "11131:  if s.Tags == nil {",
          "11132:   invalidParams.Add(request.NewErrParamRequired(\"Tags\"))",
          "11133:  }",
          "11134:  if s.Tags != nil && len(s.Tags) < 1 {",
          "11135:   invalidParams.Add(request.NewErrParamMinLen(\"Tags\", 1))",
          "11136:  }",
          "11138:  if invalidParams.Len() > 0 {",
          "11139:   return invalidParams",
          "11140:  }",
          "11141:  return nil",
          "11142: }",
          "11145: func (s *TagResourceInput) SetResourceArn(v string) *TagResourceInput {",
          "11146:  s.ResourceArn = &v",
          "11151: func (s *TagResourceInput) SetTags(v map[string]*string) *TagResourceInput {",
          "11152:  s.Tags = v",
          "11153:  return s",
          "11154: }",
          "11156: type TagResourceOutput struct {",
          "11161: func (s TagResourceOutput) String() string {",
          "11166: func (s TagResourceOutput) GoString() string {",
          "11171: type Threshold struct {",
          "11175:  Comparison *string `type:\"string\" enum:\"Comparison\"`",
          "11178:  ThresholdValue *float64 `type:\"double\"`",
          "11179: }",
          "11182: func (s Threshold) String() string {",
          "11183:  return awsutil.Prettify(s)",
          "11184: }",
          "11187: func (s Threshold) GoString() string {",
          "11188:  return s.String()",
          "11189: }",
          "11192: func (s *Threshold) SetComparison(v string) *Threshold {",
          "11193:  s.Comparison = &v",
          "11194:  return s",
          "11195: }",
          "11198: func (s *Threshold) SetThresholdValue(v float64) *Threshold {",
          "11199:  s.ThresholdValue = &v",
          "11200:  return s",
          "11201: }",
          "11204: type ThrottlingException struct {",
          "11205:  _            struct{}                  `type:\"structure\"`",
          "11206:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "11208:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "11209: }",
          "11212: func (s ThrottlingException) String() string {",
          "11213:  return awsutil.Prettify(s)",
          "11214: }",
          "11217: func (s ThrottlingException) GoString() string {",
          "11218:  return s.String()",
          "11219: }",
          "11221: func newErrorThrottlingException(v protocol.ResponseMetadata) error {",
          "11222:  return &ThrottlingException{",
          "11223:   RespMetadata: v,",
          "11224:  }",
          "11225: }",
          "11228: func (s *ThrottlingException) Code() string {",
          "11229:  return \"ThrottlingException\"",
          "11230: }",
          "11233: func (s *ThrottlingException) Message() string {",
          "11234:  if s.Message_ != nil {",
          "11235:   return *s.Message_",
          "11236:  }",
          "11237:  return \"\"",
          "11238: }",
          "11241: func (s *ThrottlingException) OrigErr() error {",
          "11242:  return nil",
          "11243: }",
          "11245: func (s *ThrottlingException) Error() string {",
          "11246:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "11247: }",
          "11250: func (s *ThrottlingException) StatusCode() int {",
          "11251:  return s.RespMetadata.StatusCode",
          "11252: }",
          "11255: func (s *ThrottlingException) RequestID() string {",
          "11256:  return s.RespMetadata.RequestID",
          "11257: }",
          "11259: type UntagResourceInput struct {",
          "11260:  _ struct{} `type:\"structure\"`",
          "11265:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" type:\"string\" required:\"true\"`",
          "11270:  TagKeys []*string `location:\"querystring\" locationName:\"tagKeys\" min:\"1\" type:\"list\" required:\"true\"`",
          "11274: func (s UntagResourceInput) String() string {",
          "11279: func (s UntagResourceInput) GoString() string {",
          "11284: func (s *UntagResourceInput) Validate() error {",
          "11285:  invalidParams := request.ErrInvalidParams{Context: \"UntagResourceInput\"}",
          "11286:  if s.ResourceArn == nil {",
          "11287:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "11289:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "11290:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "11292:  if s.TagKeys == nil {",
          "11293:   invalidParams.Add(request.NewErrParamRequired(\"TagKeys\"))",
          "11295:  if s.TagKeys != nil && len(s.TagKeys) < 1 {",
          "11296:   invalidParams.Add(request.NewErrParamMinLen(\"TagKeys\", 1))",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "7727:  return nil",
          "7728: }",
          "7763:  return s",
          "7764: }",
          "7769:  return s",
          "7770: }",
          "7773:  _ struct{} `type:\"structure\"`",
          "7777: }",
          "7781:  return awsutil.Prettify(s)",
          "7782: }",
          "7786:  return s.String()",
          "7787: }",
          "7796:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "7731: func (s *StartOutboundVoiceContactInput) SetAttributes(v map[string]*string) *StartOutboundVoiceContactInput {",
          "7732:  s.Attributes = v",
          "7733:  return s",
          "7734: }",
          "7737: func (s *StartOutboundVoiceContactInput) SetClientToken(v string) *StartOutboundVoiceContactInput {",
          "7738:  s.ClientToken = &v",
          "7739:  return s",
          "7740: }",
          "7743: func (s *StartOutboundVoiceContactInput) SetContactFlowId(v string) *StartOutboundVoiceContactInput {",
          "7744:  s.ContactFlowId = &v",
          "7745:  return s",
          "7746: }",
          "7749: func (s *StartOutboundVoiceContactInput) SetDestinationPhoneNumber(v string) *StartOutboundVoiceContactInput {",
          "7750:  s.DestinationPhoneNumber = &v",
          "7751:  return s",
          "7752: }",
          "7755: func (s *StartOutboundVoiceContactInput) SetInstanceId(v string) *StartOutboundVoiceContactInput {",
          "7756:  s.InstanceId = &v",
          "7757:  return s",
          "7758: }",
          "7761: func (s *StartOutboundVoiceContactInput) SetQueueId(v string) *StartOutboundVoiceContactInput {",
          "7762:  s.QueueId = &v",
          "7767: func (s *StartOutboundVoiceContactInput) SetSourcePhoneNumber(v string) *StartOutboundVoiceContactInput {",
          "7768:  s.SourcePhoneNumber = &v",
          "7772: type StartOutboundVoiceContactOutput struct {",
          "7776:  ContactId *string `min:\"1\" type:\"string\"`",
          "7780: func (s StartOutboundVoiceContactOutput) String() string {",
          "7785: func (s StartOutboundVoiceContactOutput) GoString() string {",
          "7790: func (s *StartOutboundVoiceContactOutput) SetContactId(v string) *StartOutboundVoiceContactOutput {",
          "7791:  s.ContactId = &v",
          "7792:  return s",
          "7793: }",
          "7795: type StopContactInput struct {",
          "7801:  ContactId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "11306: func (s *UntagResourceInput) SetResourceArn(v string) *UntagResourceInput {",
          "11307:  s.ResourceArn = &v",
          "11312: func (s *UntagResourceInput) SetTagKeys(v []*string) *UntagResourceInput {",
          "11313:  s.TagKeys = v",
          "11317: type UntagResourceOutput struct {",
          "11322: func (s UntagResourceOutput) String() string {",
          "11327: func (s UntagResourceOutput) GoString() string {",
          "11331: type UpdateContactAttributesInput struct {",
          "11341:  Attributes map[string]*string `type:\"map\" required:\"true\"`",
          "11347:  InitialContactId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "7807: }",
          "7811:  return awsutil.Prettify(s)",
          "7812: }",
          "7816:  return s.String()",
          "7817: }",
          "7824:  }",
          "7827:  }",
          "7828:  if s.InstanceId == nil {",
          "7829:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "",
          "[Removed Lines]",
          "7810: func (s StopContactInput) String() string {",
          "7815: func (s StopContactInput) GoString() string {",
          "7820: func (s *StopContactInput) Validate() error {",
          "7821:  invalidParams := request.ErrInvalidParams{Context: \"StopContactInput\"}",
          "7822:  if s.ContactId == nil {",
          "7823:   invalidParams.Add(request.NewErrParamRequired(\"ContactId\"))",
          "7825:  if s.ContactId != nil && len(*s.ContactId) < 1 {",
          "7826:   invalidParams.Add(request.NewErrParamMinLen(\"ContactId\", 1))",
          "",
          "[Added Lines]",
          "11356: func (s UpdateContactAttributesInput) String() string {",
          "11361: func (s UpdateContactAttributesInput) GoString() string {",
          "11366: func (s *UpdateContactAttributesInput) Validate() error {",
          "11367:  invalidParams := request.ErrInvalidParams{Context: \"UpdateContactAttributesInput\"}",
          "11368:  if s.Attributes == nil {",
          "11369:   invalidParams.Add(request.NewErrParamRequired(\"Attributes\"))",
          "11371:  if s.InitialContactId == nil {",
          "11372:   invalidParams.Add(request.NewErrParamRequired(\"InitialContactId\"))",
          "11373:  }",
          "11374:  if s.InitialContactId != nil && len(*s.InitialContactId) < 1 {",
          "11375:   invalidParams.Add(request.NewErrParamMinLen(\"InitialContactId\", 1))",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "7838:  return nil",
          "7839: }",
          "7844:  return s",
          "7845: }",
          "7849:  s.InstanceId = &v",
          "7850:  return s",
          "7851: }",
          "7854:  _ struct{} `type:\"structure\"`",
          "7855: }",
          "7859:  return awsutil.Prettify(s)",
          "7860: }",
          "7864:  return s.String()",
          "7865: }",
          "7868:  _ struct{} `type:\"structure\"`",
          "7885: }",
          "7889:  return awsutil.Prettify(s)",
          "7890: }",
          "7894:  return s.String()",
          "7895: }",
          "7905:  }",
          "7908:  }",
          "7911:  }",
          "7912:  if s.InstanceId == nil {",
          "7913:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "",
          "[Removed Lines]",
          "7842: func (s *StopContactInput) SetContactId(v string) *StopContactInput {",
          "7843:  s.ContactId = &v",
          "7848: func (s *StopContactInput) SetInstanceId(v string) *StopContactInput {",
          "7853: type StopContactOutput struct {",
          "7858: func (s StopContactOutput) String() string {",
          "7863: func (s StopContactOutput) GoString() string {",
          "7867: type StopContactRecordingInput struct {",
          "7873:  ContactId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "7879:  InitialContactId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "7884:  InstanceId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "7888: func (s StopContactRecordingInput) String() string {",
          "7893: func (s StopContactRecordingInput) GoString() string {",
          "7898: func (s *StopContactRecordingInput) Validate() error {",
          "7899:  invalidParams := request.ErrInvalidParams{Context: \"StopContactRecordingInput\"}",
          "7900:  if s.ContactId == nil {",
          "7901:   invalidParams.Add(request.NewErrParamRequired(\"ContactId\"))",
          "7902:  }",
          "7903:  if s.ContactId != nil && len(*s.ContactId) < 1 {",
          "7904:   invalidParams.Add(request.NewErrParamMinLen(\"ContactId\", 1))",
          "7906:  if s.InitialContactId == nil {",
          "7907:   invalidParams.Add(request.NewErrParamRequired(\"InitialContactId\"))",
          "7909:  if s.InitialContactId != nil && len(*s.InitialContactId) < 1 {",
          "7910:   invalidParams.Add(request.NewErrParamMinLen(\"InitialContactId\", 1))",
          "",
          "[Added Lines]",
          "11391: func (s *UpdateContactAttributesInput) SetAttributes(v map[string]*string) *UpdateContactAttributesInput {",
          "11392:  s.Attributes = v",
          "11393:  return s",
          "11394: }",
          "11397: func (s *UpdateContactAttributesInput) SetInitialContactId(v string) *UpdateContactAttributesInput {",
          "11398:  s.InitialContactId = &v",
          "11403: func (s *UpdateContactAttributesInput) SetInstanceId(v string) *UpdateContactAttributesInput {",
          "11408: type UpdateContactAttributesOutput struct {",
          "11413: func (s UpdateContactAttributesOutput) String() string {",
          "11418: func (s UpdateContactAttributesOutput) GoString() string {",
          "11422: type UpdateContactFlowContentInput struct {",
          "11428:  ContactFlowId *string `location:\"uri\" locationName:\"ContactFlowId\" type:\"string\" required:\"true\"`",
          "11433:  Content *string `type:\"string\" required:\"true\"`",
          "11438:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "11442: func (s UpdateContactFlowContentInput) String() string {",
          "11447: func (s UpdateContactFlowContentInput) GoString() string {",
          "11452: func (s *UpdateContactFlowContentInput) Validate() error {",
          "11453:  invalidParams := request.ErrInvalidParams{Context: \"UpdateContactFlowContentInput\"}",
          "11454:  if s.ContactFlowId == nil {",
          "11455:   invalidParams.Add(request.NewErrParamRequired(\"ContactFlowId\"))",
          "11457:  if s.ContactFlowId != nil && len(*s.ContactFlowId) < 1 {",
          "11458:   invalidParams.Add(request.NewErrParamMinLen(\"ContactFlowId\", 1))",
          "11460:  if s.Content == nil {",
          "11461:   invalidParams.Add(request.NewErrParamRequired(\"Content\"))",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "7922:  return nil",
          "7923: }",
          "7928:  return s",
          "7929: }",
          "7934:  return s",
          "7935: }",
          "7939:  s.InstanceId = &v",
          "7940:  return s",
          "7941: }",
          "7944:  _ struct{} `type:\"structure\"`",
          "7945: }",
          "7949:  return awsutil.Prettify(s)",
          "7950: }",
          "7954:  return s.String()",
          "7955: }",
          "7958:  _ struct{} `type:\"structure\"`",
          "7975: }",
          "7979:  return awsutil.Prettify(s)",
          "7980: }",
          "7984:  return s.String()",
          "7985: }",
          "7998:  }",
          "8001:  }",
          "8002:  if s.InstanceId == nil {",
          "8003:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "",
          "[Removed Lines]",
          "7926: func (s *StopContactRecordingInput) SetContactId(v string) *StopContactRecordingInput {",
          "7927:  s.ContactId = &v",
          "7932: func (s *StopContactRecordingInput) SetInitialContactId(v string) *StopContactRecordingInput {",
          "7933:  s.InitialContactId = &v",
          "7938: func (s *StopContactRecordingInput) SetInstanceId(v string) *StopContactRecordingInput {",
          "7943: type StopContactRecordingOutput struct {",
          "7948: func (s StopContactRecordingOutput) String() string {",
          "7953: func (s StopContactRecordingOutput) GoString() string {",
          "7957: type SuspendContactRecordingInput struct {",
          "7963:  ContactId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "7969:  InitialContactId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "7974:  InstanceId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "7978: func (s SuspendContactRecordingInput) String() string {",
          "7983: func (s SuspendContactRecordingInput) GoString() string {",
          "7988: func (s *SuspendContactRecordingInput) Validate() error {",
          "7989:  invalidParams := request.ErrInvalidParams{Context: \"SuspendContactRecordingInput\"}",
          "7990:  if s.ContactId == nil {",
          "7991:   invalidParams.Add(request.NewErrParamRequired(\"ContactId\"))",
          "7992:  }",
          "7993:  if s.ContactId != nil && len(*s.ContactId) < 1 {",
          "7994:   invalidParams.Add(request.NewErrParamMinLen(\"ContactId\", 1))",
          "7995:  }",
          "7996:  if s.InitialContactId == nil {",
          "7997:   invalidParams.Add(request.NewErrParamRequired(\"InitialContactId\"))",
          "7999:  if s.InitialContactId != nil && len(*s.InitialContactId) < 1 {",
          "8000:   invalidParams.Add(request.NewErrParamMinLen(\"InitialContactId\", 1))",
          "",
          "[Added Lines]",
          "11477: func (s *UpdateContactFlowContentInput) SetContactFlowId(v string) *UpdateContactFlowContentInput {",
          "11478:  s.ContactFlowId = &v",
          "11483: func (s *UpdateContactFlowContentInput) SetContent(v string) *UpdateContactFlowContentInput {",
          "11484:  s.Content = &v",
          "11489: func (s *UpdateContactFlowContentInput) SetInstanceId(v string) *UpdateContactFlowContentInput {",
          "11494: type UpdateContactFlowContentOutput struct {",
          "11499: func (s UpdateContactFlowContentOutput) String() string {",
          "11504: func (s UpdateContactFlowContentOutput) GoString() string {",
          "11508: type UpdateContactFlowNameInput struct {",
          "11514:  ContactFlowId *string `location:\"uri\" locationName:\"ContactFlowId\" type:\"string\" required:\"true\"`",
          "11517:  Description *string `type:\"string\"`",
          "11522:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "11525:  Name *string `min:\"1\" type:\"string\"`",
          "11529: func (s UpdateContactFlowNameInput) String() string {",
          "11534: func (s UpdateContactFlowNameInput) GoString() string {",
          "11539: func (s *UpdateContactFlowNameInput) Validate() error {",
          "11540:  invalidParams := request.ErrInvalidParams{Context: \"UpdateContactFlowNameInput\"}",
          "11541:  if s.ContactFlowId == nil {",
          "11542:   invalidParams.Add(request.NewErrParamRequired(\"ContactFlowId\"))",
          "11544:  if s.ContactFlowId != nil && len(*s.ContactFlowId) < 1 {",
          "11545:   invalidParams.Add(request.NewErrParamMinLen(\"ContactFlowId\", 1))",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "8005:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "8006:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "8007:  }",
          "8009:  if invalidParams.Len() > 0 {",
          "8010:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11553:  if s.Name != nil && len(*s.Name) < 1 {",
          "11554:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "11555:  }",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "8012:  return nil",
          "8013: }",
          "8018:  return s",
          "8019: }",
          "8024:  return s",
          "8025: }",
          "8029:  s.InstanceId = &v",
          "8030:  return s",
          "8031: }",
          "8034:  _ struct{} `type:\"structure\"`",
          "8035: }",
          "8039:  return awsutil.Prettify(s)",
          "8040: }",
          "8044:  return s.String()",
          "8045: }",
          "8048:  _ struct{} `type:\"structure\"`",
          "8060: }",
          "8064:  return awsutil.Prettify(s)",
          "8065: }",
          "8069:  return s.String()",
          "8070: }",
          "8077:  }",
          "8080:  }",
          "8083:  }",
          "8086:  }",
          "8088:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "8016: func (s *SuspendContactRecordingInput) SetContactId(v string) *SuspendContactRecordingInput {",
          "8017:  s.ContactId = &v",
          "8022: func (s *SuspendContactRecordingInput) SetInitialContactId(v string) *SuspendContactRecordingInput {",
          "8023:  s.InitialContactId = &v",
          "8028: func (s *SuspendContactRecordingInput) SetInstanceId(v string) *SuspendContactRecordingInput {",
          "8033: type SuspendContactRecordingOutput struct {",
          "8038: func (s SuspendContactRecordingOutput) String() string {",
          "8043: func (s SuspendContactRecordingOutput) GoString() string {",
          "8047: type TagResourceInput struct {",
          "8053:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" type:\"string\" required:\"true\"`",
          "8059:  Tags map[string]*string `locationName:\"tags\" min:\"1\" type:\"map\" required:\"true\"`",
          "8063: func (s TagResourceInput) String() string {",
          "8068: func (s TagResourceInput) GoString() string {",
          "8073: func (s *TagResourceInput) Validate() error {",
          "8074:  invalidParams := request.ErrInvalidParams{Context: \"TagResourceInput\"}",
          "8075:  if s.ResourceArn == nil {",
          "8076:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "8078:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "8079:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "8081:  if s.Tags == nil {",
          "8082:   invalidParams.Add(request.NewErrParamRequired(\"Tags\"))",
          "8084:  if s.Tags != nil && len(s.Tags) < 1 {",
          "8085:   invalidParams.Add(request.NewErrParamMinLen(\"Tags\", 1))",
          "",
          "[Added Lines]",
          "11564: func (s *UpdateContactFlowNameInput) SetContactFlowId(v string) *UpdateContactFlowNameInput {",
          "11565:  s.ContactFlowId = &v",
          "11570: func (s *UpdateContactFlowNameInput) SetDescription(v string) *UpdateContactFlowNameInput {",
          "11571:  s.Description = &v",
          "11576: func (s *UpdateContactFlowNameInput) SetInstanceId(v string) *UpdateContactFlowNameInput {",
          "11582: func (s *UpdateContactFlowNameInput) SetName(v string) *UpdateContactFlowNameInput {",
          "11583:  s.Name = &v",
          "11584:  return s",
          "11585: }",
          "11587: type UpdateContactFlowNameOutput struct {",
          "11592: func (s UpdateContactFlowNameOutput) String() string {",
          "11597: func (s UpdateContactFlowNameOutput) GoString() string {",
          "11601: type UpdateRoutingProfileConcurrencyInput struct {",
          "11607:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "11612:  MediaConcurrencies []*MediaConcurrency `type:\"list\" required:\"true\"`",
          "11617:  RoutingProfileId *string `location:\"uri\" locationName:\"RoutingProfileId\" type:\"string\" required:\"true\"`",
          "11621: func (s UpdateRoutingProfileConcurrencyInput) String() string {",
          "11626: func (s UpdateRoutingProfileConcurrencyInput) GoString() string {",
          "11631: func (s *UpdateRoutingProfileConcurrencyInput) Validate() error {",
          "11632:  invalidParams := request.ErrInvalidParams{Context: \"UpdateRoutingProfileConcurrencyInput\"}",
          "11633:  if s.InstanceId == nil {",
          "11634:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "11636:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "11637:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "11639:  if s.MediaConcurrencies == nil {",
          "11640:   invalidParams.Add(request.NewErrParamRequired(\"MediaConcurrencies\"))",
          "11642:  if s.RoutingProfileId == nil {",
          "11643:   invalidParams.Add(request.NewErrParamRequired(\"RoutingProfileId\"))",
          "11644:  }",
          "11645:  if s.RoutingProfileId != nil && len(*s.RoutingProfileId) < 1 {",
          "11646:   invalidParams.Add(request.NewErrParamMinLen(\"RoutingProfileId\", 1))",
          "11647:  }",
          "11648:  if s.MediaConcurrencies != nil {",
          "11649:   for i, v := range s.MediaConcurrencies {",
          "11650:    if v == nil {",
          "11651:     continue",
          "11652:    }",
          "11653:    if err := v.Validate(); err != nil {",
          "11654:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"MediaConcurrencies\", i), err.(request.ErrInvalidParams))",
          "11655:    }",
          "11656:   }",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "8091:  return nil",
          "8092: }",
          "8097:  return s",
          "8098: }",
          "8103:  return s",
          "8104: }",
          "8118: }",
          "8122:  _ struct{} `type:\"structure\"`",
          "8129: }",
          "8133:  return awsutil.Prettify(s)",
          "8134: }",
          "8138:  return s.String()",
          "8139: }",
          "8159: }",
          "8163:  return awsutil.Prettify(s)",
          "8164: }",
          "8168:  return s.String()",
          "8169: }",
          "8174:  }",
          "8175: }",
          "8180: }",
          "8188: }",
          "8193: }",
          "8197: }",
          "8202: }",
          "8207: }",
          "8210:  _ struct{} `type:\"structure\"`",
          "8221: }",
          "8225:  return awsutil.Prettify(s)",
          "8226: }",
          "8230:  return s.String()",
          "8231: }",
          "8238:  }",
          "8241:  }",
          "8244:  }",
          "8247:  }",
          "8249:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "8095: func (s *TagResourceInput) SetResourceArn(v string) *TagResourceInput {",
          "8096:  s.ResourceArn = &v",
          "8101: func (s *TagResourceInput) SetTags(v map[string]*string) *TagResourceInput {",
          "8102:  s.Tags = v",
          "8106: type TagResourceOutput struct {",
          "8107:  _ struct{} `type:\"structure\"`",
          "8108: }",
          "8111: func (s TagResourceOutput) String() string {",
          "8112:  return awsutil.Prettify(s)",
          "8113: }",
          "8116: func (s TagResourceOutput) GoString() string {",
          "8117:  return s.String()",
          "8121: type Threshold struct {",
          "8125:  Comparison *string `type:\"string\" enum:\"Comparison\"`",
          "8128:  ThresholdValue *float64 `type:\"double\"`",
          "8132: func (s Threshold) String() string {",
          "8137: func (s Threshold) GoString() string {",
          "8142: func (s *Threshold) SetComparison(v string) *Threshold {",
          "8143:  s.Comparison = &v",
          "8144:  return s",
          "8145: }",
          "8148: func (s *Threshold) SetThresholdValue(v float64) *Threshold {",
          "8149:  s.ThresholdValue = &v",
          "8150:  return s",
          "8151: }",
          "8154: type ThrottlingException struct {",
          "8155:  _            struct{}                  `type:\"structure\"`",
          "8156:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "8158:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "8162: func (s ThrottlingException) String() string {",
          "8167: func (s ThrottlingException) GoString() string {",
          "8171: func newErrorThrottlingException(v protocol.ResponseMetadata) error {",
          "8172:  return &ThrottlingException{",
          "8173:   RespMetadata: v,",
          "8178: func (s *ThrottlingException) Code() string {",
          "8179:  return \"ThrottlingException\"",
          "8183: func (s *ThrottlingException) Message() string {",
          "8184:  if s.Message_ != nil {",
          "8185:   return *s.Message_",
          "8186:  }",
          "8187:  return \"\"",
          "8191: func (s *ThrottlingException) OrigErr() error {",
          "8192:  return nil",
          "8195: func (s *ThrottlingException) Error() string {",
          "8196:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "8200: func (s *ThrottlingException) StatusCode() int {",
          "8201:  return s.RespMetadata.StatusCode",
          "8205: func (s *ThrottlingException) RequestID() string {",
          "8206:  return s.RespMetadata.RequestID",
          "8209: type UntagResourceInput struct {",
          "8215:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" type:\"string\" required:\"true\"`",
          "8220:  TagKeys []*string `location:\"querystring\" locationName:\"tagKeys\" min:\"1\" type:\"list\" required:\"true\"`",
          "8224: func (s UntagResourceInput) String() string {",
          "8229: func (s UntagResourceInput) GoString() string {",
          "8234: func (s *UntagResourceInput) Validate() error {",
          "8235:  invalidParams := request.ErrInvalidParams{Context: \"UntagResourceInput\"}",
          "8236:  if s.ResourceArn == nil {",
          "8237:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "8239:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "8240:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "8242:  if s.TagKeys == nil {",
          "8243:   invalidParams.Add(request.NewErrParamRequired(\"TagKeys\"))",
          "8245:  if s.TagKeys != nil && len(s.TagKeys) < 1 {",
          "8246:   invalidParams.Add(request.NewErrParamMinLen(\"TagKeys\", 1))",
          "",
          "[Added Lines]",
          "11666: func (s *UpdateRoutingProfileConcurrencyInput) SetInstanceId(v string) *UpdateRoutingProfileConcurrencyInput {",
          "11667:  s.InstanceId = &v",
          "11672: func (s *UpdateRoutingProfileConcurrencyInput) SetMediaConcurrencies(v []*MediaConcurrency) *UpdateRoutingProfileConcurrencyInput {",
          "11673:  s.MediaConcurrencies = v",
          "11678: func (s *UpdateRoutingProfileConcurrencyInput) SetRoutingProfileId(v string) *UpdateRoutingProfileConcurrencyInput {",
          "11679:  s.RoutingProfileId = &v",
          "11680:  return s",
          "11683: type UpdateRoutingProfileConcurrencyOutput struct {",
          "11688: func (s UpdateRoutingProfileConcurrencyOutput) String() string {",
          "11693: func (s UpdateRoutingProfileConcurrencyOutput) GoString() string {",
          "11697: type UpdateRoutingProfileDefaultOutboundQueueInput struct {",
          "11698:  _ struct{} `type:\"structure\"`",
          "11703:  DefaultOutboundQueueId *string `type:\"string\" required:\"true\"`",
          "11708:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "11713:  RoutingProfileId *string `location:\"uri\" locationName:\"RoutingProfileId\" type:\"string\" required:\"true\"`",
          "11717: func (s UpdateRoutingProfileDefaultOutboundQueueInput) String() string {",
          "11722: func (s UpdateRoutingProfileDefaultOutboundQueueInput) GoString() string {",
          "11727: func (s *UpdateRoutingProfileDefaultOutboundQueueInput) Validate() error {",
          "11728:  invalidParams := request.ErrInvalidParams{Context: \"UpdateRoutingProfileDefaultOutboundQueueInput\"}",
          "11729:  if s.DefaultOutboundQueueId == nil {",
          "11730:   invalidParams.Add(request.NewErrParamRequired(\"DefaultOutboundQueueId\"))",
          "11731:  }",
          "11732:  if s.InstanceId == nil {",
          "11733:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "11734:  }",
          "11735:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "11736:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "11737:  }",
          "11738:  if s.RoutingProfileId == nil {",
          "11739:   invalidParams.Add(request.NewErrParamRequired(\"RoutingProfileId\"))",
          "11740:  }",
          "11741:  if s.RoutingProfileId != nil && len(*s.RoutingProfileId) < 1 {",
          "11742:   invalidParams.Add(request.NewErrParamMinLen(\"RoutingProfileId\", 1))",
          "11745:  if invalidParams.Len() > 0 {",
          "11746:   return invalidParams",
          "11747:  }",
          "11748:  return nil",
          "11752: func (s *UpdateRoutingProfileDefaultOutboundQueueInput) SetDefaultOutboundQueueId(v string) *UpdateRoutingProfileDefaultOutboundQueueInput {",
          "11753:  s.DefaultOutboundQueueId = &v",
          "11754:  return s",
          "11758: func (s *UpdateRoutingProfileDefaultOutboundQueueInput) SetInstanceId(v string) *UpdateRoutingProfileDefaultOutboundQueueInput {",
          "11759:  s.InstanceId = &v",
          "11760:  return s",
          "11764: func (s *UpdateRoutingProfileDefaultOutboundQueueInput) SetRoutingProfileId(v string) *UpdateRoutingProfileDefaultOutboundQueueInput {",
          "11765:  s.RoutingProfileId = &v",
          "11766:  return s",
          "11769: type UpdateRoutingProfileDefaultOutboundQueueOutput struct {",
          "11770:  _ struct{} `type:\"structure\"`",
          "11774: func (s UpdateRoutingProfileDefaultOutboundQueueOutput) String() string {",
          "11775:  return awsutil.Prettify(s)",
          "11779: func (s UpdateRoutingProfileDefaultOutboundQueueOutput) GoString() string {",
          "11780:  return s.String()",
          "11783: type UpdateRoutingProfileNameInput struct {",
          "11787:  Description *string `min:\"1\" type:\"string\"`",
          "11792:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "11795:  Name *string `min:\"1\" type:\"string\"`",
          "11800:  RoutingProfileId *string `location:\"uri\" locationName:\"RoutingProfileId\" type:\"string\" required:\"true\"`",
          "11804: func (s UpdateRoutingProfileNameInput) String() string {",
          "11809: func (s UpdateRoutingProfileNameInput) GoString() string {",
          "11814: func (s *UpdateRoutingProfileNameInput) Validate() error {",
          "11815:  invalidParams := request.ErrInvalidParams{Context: \"UpdateRoutingProfileNameInput\"}",
          "11816:  if s.Description != nil && len(*s.Description) < 1 {",
          "11817:   invalidParams.Add(request.NewErrParamMinLen(\"Description\", 1))",
          "11819:  if s.InstanceId == nil {",
          "11820:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "11822:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "11823:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "11825:  if s.Name != nil && len(*s.Name) < 1 {",
          "11826:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "11827:  }",
          "11828:  if s.RoutingProfileId == nil {",
          "11829:   invalidParams.Add(request.NewErrParamRequired(\"RoutingProfileId\"))",
          "11830:  }",
          "11831:  if s.RoutingProfileId != nil && len(*s.RoutingProfileId) < 1 {",
          "11832:   invalidParams.Add(request.NewErrParamMinLen(\"RoutingProfileId\", 1))",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "8252:  return nil",
          "8253: }",
          "8258:  return s",
          "8259: }",
          "8264:  return s",
          "8265: }",
          "8268:  _ struct{} `type:\"structure\"`",
          "8269: }",
          "8273:  return awsutil.Prettify(s)",
          "8274: }",
          "8278:  return s.String()",
          "8279: }",
          "8282:  _ struct{} `type:\"structure\"`",
          "8303: }",
          "8307:  return awsutil.Prettify(s)",
          "8308: }",
          "8312:  return s.String()",
          "8313: }",
          "8327:  if s.InstanceId == nil {",
          "8328:   invalidParams.Add(request.NewErrParamRequired(\"InstanceId\"))",
          "8329:  }",
          "8330:  if s.InstanceId != nil && len(*s.InstanceId) < 1 {",
          "8331:   invalidParams.Add(request.NewErrParamMinLen(\"InstanceId\", 1))",
          "8332:  }",
          "8334:  if invalidParams.Len() > 0 {",
          "8335:   return invalidParams",
          "",
          "[Removed Lines]",
          "8256: func (s *UntagResourceInput) SetResourceArn(v string) *UntagResourceInput {",
          "8257:  s.ResourceArn = &v",
          "8262: func (s *UntagResourceInput) SetTagKeys(v []*string) *UntagResourceInput {",
          "8263:  s.TagKeys = v",
          "8267: type UntagResourceOutput struct {",
          "8272: func (s UntagResourceOutput) String() string {",
          "8277: func (s UntagResourceOutput) GoString() string {",
          "8281: type UpdateContactAttributesInput struct {",
          "8291:  Attributes map[string]*string `type:\"map\" required:\"true\"`",
          "8297:  InitialContactId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "8302:  InstanceId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "8306: func (s UpdateContactAttributesInput) String() string {",
          "8311: func (s UpdateContactAttributesInput) GoString() string {",
          "8316: func (s *UpdateContactAttributesInput) Validate() error {",
          "8317:  invalidParams := request.ErrInvalidParams{Context: \"UpdateContactAttributesInput\"}",
          "8318:  if s.Attributes == nil {",
          "8319:   invalidParams.Add(request.NewErrParamRequired(\"Attributes\"))",
          "8320:  }",
          "8321:  if s.InitialContactId == nil {",
          "8322:   invalidParams.Add(request.NewErrParamRequired(\"InitialContactId\"))",
          "8323:  }",
          "8324:  if s.InitialContactId != nil && len(*s.InitialContactId) < 1 {",
          "8325:   invalidParams.Add(request.NewErrParamMinLen(\"InitialContactId\", 1))",
          "8326:  }",
          "",
          "[Added Lines]",
          "11842: func (s *UpdateRoutingProfileNameInput) SetDescription(v string) *UpdateRoutingProfileNameInput {",
          "11843:  s.Description = &v",
          "11848: func (s *UpdateRoutingProfileNameInput) SetInstanceId(v string) *UpdateRoutingProfileNameInput {",
          "11849:  s.InstanceId = &v",
          "11854: func (s *UpdateRoutingProfileNameInput) SetName(v string) *UpdateRoutingProfileNameInput {",
          "11855:  s.Name = &v",
          "11856:  return s",
          "11857: }",
          "11860: func (s *UpdateRoutingProfileNameInput) SetRoutingProfileId(v string) *UpdateRoutingProfileNameInput {",
          "11861:  s.RoutingProfileId = &v",
          "11862:  return s",
          "11863: }",
          "11865: type UpdateRoutingProfileNameOutput struct {",
          "11870: func (s UpdateRoutingProfileNameOutput) String() string {",
          "11875: func (s UpdateRoutingProfileNameOutput) GoString() string {",
          "11879: type UpdateRoutingProfileQueuesInput struct {",
          "11885:  InstanceId *string `location:\"uri\" locationName:\"InstanceId\" min:\"1\" type:\"string\" required:\"true\"`",
          "11890:  QueueConfigs []*RoutingProfileQueueConfig `min:\"1\" type:\"list\" required:\"true\"`",
          "11895:  RoutingProfileId *string `location:\"uri\" locationName:\"RoutingProfileId\" type:\"string\" required:\"true\"`",
          "11899: func (s UpdateRoutingProfileQueuesInput) String() string {",
          "11904: func (s UpdateRoutingProfileQueuesInput) GoString() string {",
          "11909: func (s *UpdateRoutingProfileQueuesInput) Validate() error {",
          "11910:  invalidParams := request.ErrInvalidParams{Context: \"UpdateRoutingProfileQueuesInput\"}",
          "11917:  if s.QueueConfigs == nil {",
          "11918:   invalidParams.Add(request.NewErrParamRequired(\"QueueConfigs\"))",
          "11919:  }",
          "11920:  if s.QueueConfigs != nil && len(s.QueueConfigs) < 1 {",
          "11921:   invalidParams.Add(request.NewErrParamMinLen(\"QueueConfigs\", 1))",
          "11922:  }",
          "11923:  if s.RoutingProfileId == nil {",
          "11924:   invalidParams.Add(request.NewErrParamRequired(\"RoutingProfileId\"))",
          "11925:  }",
          "11926:  if s.RoutingProfileId != nil && len(*s.RoutingProfileId) < 1 {",
          "11927:   invalidParams.Add(request.NewErrParamMinLen(\"RoutingProfileId\", 1))",
          "11928:  }",
          "11929:  if s.QueueConfigs != nil {",
          "11930:   for i, v := range s.QueueConfigs {",
          "11931:    if v == nil {",
          "11932:     continue",
          "11933:    }",
          "11934:    if err := v.Validate(); err != nil {",
          "11935:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"QueueConfigs\", i), err.(request.ErrInvalidParams))",
          "11936:    }",
          "11937:   }",
          "11938:  }",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "8337:  return nil",
          "8338: }",
          "8343:  return s",
          "8344: }",
          "8349:  return s",
          "8350: }",
          "8355:  return s",
          "8356: }",
          "8359:  _ struct{} `type:\"structure\"`",
          "8360: }",
          "8364:  return awsutil.Prettify(s)",
          "8365: }",
          "8369:  return s.String()",
          "8370: }",
          "",
          "[Removed Lines]",
          "8341: func (s *UpdateContactAttributesInput) SetAttributes(v map[string]*string) *UpdateContactAttributesInput {",
          "8342:  s.Attributes = v",
          "8347: func (s *UpdateContactAttributesInput) SetInitialContactId(v string) *UpdateContactAttributesInput {",
          "8348:  s.InitialContactId = &v",
          "8353: func (s *UpdateContactAttributesInput) SetInstanceId(v string) *UpdateContactAttributesInput {",
          "8354:  s.InstanceId = &v",
          "8358: type UpdateContactAttributesOutput struct {",
          "8363: func (s UpdateContactAttributesOutput) String() string {",
          "8368: func (s UpdateContactAttributesOutput) GoString() string {",
          "",
          "[Added Lines]",
          "11947: func (s *UpdateRoutingProfileQueuesInput) SetInstanceId(v string) *UpdateRoutingProfileQueuesInput {",
          "11948:  s.InstanceId = &v",
          "11953: func (s *UpdateRoutingProfileQueuesInput) SetQueueConfigs(v []*RoutingProfileQueueConfig) *UpdateRoutingProfileQueuesInput {",
          "11954:  s.QueueConfigs = v",
          "11959: func (s *UpdateRoutingProfileQueuesInput) SetRoutingProfileId(v string) *UpdateRoutingProfileQueuesInput {",
          "11960:  s.RoutingProfileId = &v",
          "11964: type UpdateRoutingProfileQueuesOutput struct {",
          "11969: func (s UpdateRoutingProfileQueuesOutput) String() string {",
          "11974: func (s UpdateRoutingProfileQueuesOutput) GoString() string {",
          "",
          "---------------"
        ],
        "service/connect/connectiface/interface.go||service/connect/connectiface/interface.go": [
          "File: service/connect/connectiface/interface.go -> service/connect/connectiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "62: type ConnectAPI interface {",
          "63:  CreateUser(*connect.CreateUserInput) (*connect.CreateUserOutput, error)",
          "64:  CreateUserWithContext(aws.Context, *connect.CreateUserInput, ...request.Option) (*connect.CreateUserOutput, error)",
          "65:  CreateUserRequest(*connect.CreateUserInput) (*request.Request, *connect.CreateUserOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63:  AssociateRoutingProfileQueues(*connect.AssociateRoutingProfileQueuesInput) (*connect.AssociateRoutingProfileQueuesOutput, error)",
          "64:  AssociateRoutingProfileQueuesWithContext(aws.Context, *connect.AssociateRoutingProfileQueuesInput, ...request.Option) (*connect.AssociateRoutingProfileQueuesOutput, error)",
          "65:  AssociateRoutingProfileQueuesRequest(*connect.AssociateRoutingProfileQueuesInput) (*request.Request, *connect.AssociateRoutingProfileQueuesOutput)",
          "67:  CreateContactFlow(*connect.CreateContactFlowInput) (*connect.CreateContactFlowOutput, error)",
          "68:  CreateContactFlowWithContext(aws.Context, *connect.CreateContactFlowInput, ...request.Option) (*connect.CreateContactFlowOutput, error)",
          "69:  CreateContactFlowRequest(*connect.CreateContactFlowInput) (*request.Request, *connect.CreateContactFlowOutput)",
          "71:  CreateRoutingProfile(*connect.CreateRoutingProfileInput) (*connect.CreateRoutingProfileOutput, error)",
          "72:  CreateRoutingProfileWithContext(aws.Context, *connect.CreateRoutingProfileInput, ...request.Option) (*connect.CreateRoutingProfileOutput, error)",
          "73:  CreateRoutingProfileRequest(*connect.CreateRoutingProfileInput) (*request.Request, *connect.CreateRoutingProfileOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68:  DeleteUserWithContext(aws.Context, *connect.DeleteUserInput, ...request.Option) (*connect.DeleteUserOutput, error)",
          "69:  DeleteUserRequest(*connect.DeleteUserInput) (*request.Request, *connect.DeleteUserOutput)",
          "71:  DescribeUser(*connect.DescribeUserInput) (*connect.DescribeUserOutput, error)",
          "72:  DescribeUserWithContext(aws.Context, *connect.DescribeUserInput, ...request.Option) (*connect.DescribeUserOutput, error)",
          "73:  DescribeUserRequest(*connect.DescribeUserInput) (*request.Request, *connect.DescribeUserOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:  DescribeContactFlow(*connect.DescribeContactFlowInput) (*connect.DescribeContactFlowOutput, error)",
          "84:  DescribeContactFlowWithContext(aws.Context, *connect.DescribeContactFlowInput, ...request.Option) (*connect.DescribeContactFlowOutput, error)",
          "85:  DescribeContactFlowRequest(*connect.DescribeContactFlowInput) (*request.Request, *connect.DescribeContactFlowOutput)",
          "87:  DescribeRoutingProfile(*connect.DescribeRoutingProfileInput) (*connect.DescribeRoutingProfileOutput, error)",
          "88:  DescribeRoutingProfileWithContext(aws.Context, *connect.DescribeRoutingProfileInput, ...request.Option) (*connect.DescribeRoutingProfileOutput, error)",
          "89:  DescribeRoutingProfileRequest(*connect.DescribeRoutingProfileInput) (*request.Request, *connect.DescribeRoutingProfileOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "80:  DescribeUserHierarchyStructureWithContext(aws.Context, *connect.DescribeUserHierarchyStructureInput, ...request.Option) (*connect.DescribeUserHierarchyStructureOutput, error)",
          "81:  DescribeUserHierarchyStructureRequest(*connect.DescribeUserHierarchyStructureInput) (*request.Request, *connect.DescribeUserHierarchyStructureOutput)",
          "83:  GetContactAttributes(*connect.GetContactAttributesInput) (*connect.GetContactAttributesOutput, error)",
          "84:  GetContactAttributesWithContext(aws.Context, *connect.GetContactAttributesInput, ...request.Option) (*connect.GetContactAttributesOutput, error)",
          "85:  GetContactAttributesRequest(*connect.GetContactAttributesInput) (*request.Request, *connect.GetContactAttributesOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103:  DisassociateRoutingProfileQueues(*connect.DisassociateRoutingProfileQueuesInput) (*connect.DisassociateRoutingProfileQueuesOutput, error)",
          "104:  DisassociateRoutingProfileQueuesWithContext(aws.Context, *connect.DisassociateRoutingProfileQueuesInput, ...request.Option) (*connect.DisassociateRoutingProfileQueuesOutput, error)",
          "105:  DisassociateRoutingProfileQueuesRequest(*connect.DisassociateRoutingProfileQueuesInput) (*request.Request, *connect.DisassociateRoutingProfileQueuesOutput)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "123:  ListPhoneNumbersPages(*connect.ListPhoneNumbersInput, func(*connect.ListPhoneNumbersOutput, bool) bool) error",
          "124:  ListPhoneNumbersPagesWithContext(aws.Context, *connect.ListPhoneNumbersInput, func(*connect.ListPhoneNumbersOutput, bool) bool, ...request.Option) error",
          "126:  ListQueues(*connect.ListQueuesInput) (*connect.ListQueuesOutput, error)",
          "127:  ListQueuesWithContext(aws.Context, *connect.ListQueuesInput, ...request.Option) (*connect.ListQueuesOutput, error)",
          "128:  ListQueuesRequest(*connect.ListQueuesInput) (*request.Request, *connect.ListQueuesOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "150:  ListPrompts(*connect.ListPromptsInput) (*connect.ListPromptsOutput, error)",
          "151:  ListPromptsWithContext(aws.Context, *connect.ListPromptsInput, ...request.Option) (*connect.ListPromptsOutput, error)",
          "152:  ListPromptsRequest(*connect.ListPromptsInput) (*request.Request, *connect.ListPromptsOutput)",
          "154:  ListPromptsPages(*connect.ListPromptsInput, func(*connect.ListPromptsOutput, bool) bool) error",
          "155:  ListPromptsPagesWithContext(aws.Context, *connect.ListPromptsInput, func(*connect.ListPromptsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "130:  ListQueuesPages(*connect.ListQueuesInput, func(*connect.ListQueuesOutput, bool) bool) error",
          "131:  ListQueuesPagesWithContext(aws.Context, *connect.ListQueuesInput, func(*connect.ListQueuesOutput, bool) bool, ...request.Option) error",
          "133:  ListRoutingProfiles(*connect.ListRoutingProfilesInput) (*connect.ListRoutingProfilesOutput, error)",
          "134:  ListRoutingProfilesWithContext(aws.Context, *connect.ListRoutingProfilesInput, ...request.Option) (*connect.ListRoutingProfilesOutput, error)",
          "135:  ListRoutingProfilesRequest(*connect.ListRoutingProfilesInput) (*request.Request, *connect.ListRoutingProfilesOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "164:  ListRoutingProfileQueues(*connect.ListRoutingProfileQueuesInput) (*connect.ListRoutingProfileQueuesOutput, error)",
          "165:  ListRoutingProfileQueuesWithContext(aws.Context, *connect.ListRoutingProfileQueuesInput, ...request.Option) (*connect.ListRoutingProfileQueuesOutput, error)",
          "166:  ListRoutingProfileQueuesRequest(*connect.ListRoutingProfileQueuesInput) (*request.Request, *connect.ListRoutingProfileQueuesOutput)",
          "168:  ListRoutingProfileQueuesPages(*connect.ListRoutingProfileQueuesInput, func(*connect.ListRoutingProfileQueuesOutput, bool) bool) error",
          "169:  ListRoutingProfileQueuesPagesWithContext(aws.Context, *connect.ListRoutingProfileQueuesInput, func(*connect.ListRoutingProfileQueuesOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "202:  UpdateContactAttributesWithContext(aws.Context, *connect.UpdateContactAttributesInput, ...request.Option) (*connect.UpdateContactAttributesOutput, error)",
          "203:  UpdateContactAttributesRequest(*connect.UpdateContactAttributesInput) (*request.Request, *connect.UpdateContactAttributesOutput)",
          "205:  UpdateUserHierarchy(*connect.UpdateUserHierarchyInput) (*connect.UpdateUserHierarchyOutput, error)",
          "206:  UpdateUserHierarchyWithContext(aws.Context, *connect.UpdateUserHierarchyInput, ...request.Option) (*connect.UpdateUserHierarchyOutput, error)",
          "207:  UpdateUserHierarchyRequest(*connect.UpdateUserHierarchyInput) (*request.Request, *connect.UpdateUserHierarchyOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "243:  UpdateContactFlowContent(*connect.UpdateContactFlowContentInput) (*connect.UpdateContactFlowContentOutput, error)",
          "244:  UpdateContactFlowContentWithContext(aws.Context, *connect.UpdateContactFlowContentInput, ...request.Option) (*connect.UpdateContactFlowContentOutput, error)",
          "245:  UpdateContactFlowContentRequest(*connect.UpdateContactFlowContentInput) (*request.Request, *connect.UpdateContactFlowContentOutput)",
          "247:  UpdateContactFlowName(*connect.UpdateContactFlowNameInput) (*connect.UpdateContactFlowNameOutput, error)",
          "248:  UpdateContactFlowNameWithContext(aws.Context, *connect.UpdateContactFlowNameInput, ...request.Option) (*connect.UpdateContactFlowNameOutput, error)",
          "249:  UpdateContactFlowNameRequest(*connect.UpdateContactFlowNameInput) (*request.Request, *connect.UpdateContactFlowNameOutput)",
          "251:  UpdateRoutingProfileConcurrency(*connect.UpdateRoutingProfileConcurrencyInput) (*connect.UpdateRoutingProfileConcurrencyOutput, error)",
          "252:  UpdateRoutingProfileConcurrencyWithContext(aws.Context, *connect.UpdateRoutingProfileConcurrencyInput, ...request.Option) (*connect.UpdateRoutingProfileConcurrencyOutput, error)",
          "253:  UpdateRoutingProfileConcurrencyRequest(*connect.UpdateRoutingProfileConcurrencyInput) (*request.Request, *connect.UpdateRoutingProfileConcurrencyOutput)",
          "255:  UpdateRoutingProfileDefaultOutboundQueue(*connect.UpdateRoutingProfileDefaultOutboundQueueInput) (*connect.UpdateRoutingProfileDefaultOutboundQueueOutput, error)",
          "256:  UpdateRoutingProfileDefaultOutboundQueueWithContext(aws.Context, *connect.UpdateRoutingProfileDefaultOutboundQueueInput, ...request.Option) (*connect.UpdateRoutingProfileDefaultOutboundQueueOutput, error)",
          "257:  UpdateRoutingProfileDefaultOutboundQueueRequest(*connect.UpdateRoutingProfileDefaultOutboundQueueInput) (*request.Request, *connect.UpdateRoutingProfileDefaultOutboundQueueOutput)",
          "259:  UpdateRoutingProfileName(*connect.UpdateRoutingProfileNameInput) (*connect.UpdateRoutingProfileNameOutput, error)",
          "260:  UpdateRoutingProfileNameWithContext(aws.Context, *connect.UpdateRoutingProfileNameInput, ...request.Option) (*connect.UpdateRoutingProfileNameOutput, error)",
          "261:  UpdateRoutingProfileNameRequest(*connect.UpdateRoutingProfileNameInput) (*request.Request, *connect.UpdateRoutingProfileNameOutput)",
          "263:  UpdateRoutingProfileQueues(*connect.UpdateRoutingProfileQueuesInput) (*connect.UpdateRoutingProfileQueuesOutput, error)",
          "264:  UpdateRoutingProfileQueuesWithContext(aws.Context, *connect.UpdateRoutingProfileQueuesInput, ...request.Option) (*connect.UpdateRoutingProfileQueuesOutput, error)",
          "265:  UpdateRoutingProfileQueuesRequest(*connect.UpdateRoutingProfileQueuesInput) (*request.Request, *connect.UpdateRoutingProfileQueuesOutput)",
          "",
          "---------------"
        ],
        "service/connect/doc.go||service/connect/doc.go": [
          "File: service/connect/doc.go -> service/connect/doc.go"
        ],
        "service/connect/errors.go||service/connect/errors.go": [
          "File: service/connect/errors.go -> service/connect/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15:  ErrCodeContactFlowNotPublishedException = \"ContactFlowNotPublishedException\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33:  ErrCodeInternalServiceException = \"InternalServiceException\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45:  ErrCodeInvalidContactFlowException = \"InvalidContactFlowException\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "76: )",
          "78: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
          "79:  \"ContactNotFoundException\":             newErrorContactNotFoundException,",
          "80:  \"DestinationNotAllowedException\":       newErrorDestinationNotAllowedException,",
          "81:  \"DuplicateResourceException\":           newErrorDuplicateResourceException,",
          "82:  \"InternalServiceException\":             newErrorInternalServiceException,",
          "83:  \"InvalidParameterException\":            newErrorInvalidParameterException,",
          "84:  \"InvalidRequestException\":              newErrorInvalidRequestException,",
          "85:  \"LimitExceededException\":               newErrorLimitExceededException,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91:  \"ContactFlowNotPublishedException\":     newErrorContactFlowNotPublishedException,",
          "96:  \"InvalidContactFlowException\":          newErrorInvalidContactFlowException,",
          "",
          "---------------"
        ],
        "service/dlm/api.go||service/dlm/api.go": [
          "File: service/dlm/api.go -> service/dlm/api.go"
        ],
        "service/greengrass/api.go||service/greengrass/api.go": [
          "File: service/greengrass/api.go -> service/greengrass/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4348:  return out, req.Send()",
          "4349: }",
          "4351: const opListBulkDeploymentDetailedReports = \"ListBulkDeploymentDetailedReports\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4351: const opGetThingRuntimeConfiguration = \"GetThingRuntimeConfiguration\"",
          "4377: func (c *Greengrass) GetThingRuntimeConfigurationRequest(input *GetThingRuntimeConfigurationInput) (req *request.Request, output *GetThingRuntimeConfigurationOutput) {",
          "4378:  op := &request.Operation{",
          "4379:   Name:       opGetThingRuntimeConfiguration,",
          "4380:   HTTPMethod: \"GET\",",
          "4381:   HTTPPath:   \"/greengrass/things/{ThingName}/runtimeconfig\",",
          "4382:  }",
          "4384:  if input == nil {",
          "4385:   input = &GetThingRuntimeConfigurationInput{}",
          "4386:  }",
          "4388:  output = &GetThingRuntimeConfigurationOutput{}",
          "4389:  req = c.newRequest(op, input, output)",
          "4390:  return",
          "4391: }",
          "4412: func (c *Greengrass) GetThingRuntimeConfiguration(input *GetThingRuntimeConfigurationInput) (*GetThingRuntimeConfigurationOutput, error) {",
          "4413:  req, out := c.GetThingRuntimeConfigurationRequest(input)",
          "4414:  return out, req.Send()",
          "4415: }",
          "4426: func (c *Greengrass) GetThingRuntimeConfigurationWithContext(ctx aws.Context, input *GetThingRuntimeConfigurationInput, opts ...request.Option) (*GetThingRuntimeConfigurationOutput, error) {",
          "4427:  req, out := c.GetThingRuntimeConfigurationRequest(input)",
          "4428:  req.SetContext(ctx)",
          "4429:  req.ApplyOptions(opts...)",
          "4430:  return out, req.Send()",
          "4431: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7187:  return out, req.Send()",
          "7188: }",
          "7190: type AssociateRoleToGroupInput struct {",
          "7191:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7272: const opUpdateThingRuntimeConfiguration = \"UpdateThingRuntimeConfiguration\"",
          "7298: func (c *Greengrass) UpdateThingRuntimeConfigurationRequest(input *UpdateThingRuntimeConfigurationInput) (req *request.Request, output *UpdateThingRuntimeConfigurationOutput) {",
          "7299:  op := &request.Operation{",
          "7300:   Name:       opUpdateThingRuntimeConfiguration,",
          "7301:   HTTPMethod: \"PUT\",",
          "7302:   HTTPPath:   \"/greengrass/things/{ThingName}/runtimeconfig\",",
          "7303:  }",
          "7305:  if input == nil {",
          "7306:   input = &UpdateThingRuntimeConfigurationInput{}",
          "7307:  }",
          "7309:  output = &UpdateThingRuntimeConfigurationOutput{}",
          "7310:  req = c.newRequest(op, input, output)",
          "7311:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "7312:  return",
          "7313: }",
          "7334: func (c *Greengrass) UpdateThingRuntimeConfiguration(input *UpdateThingRuntimeConfigurationInput) (*UpdateThingRuntimeConfigurationOutput, error) {",
          "7335:  req, out := c.UpdateThingRuntimeConfigurationRequest(input)",
          "7336:  return out, req.Send()",
          "7337: }",
          "7348: func (c *Greengrass) UpdateThingRuntimeConfigurationWithContext(ctx aws.Context, input *UpdateThingRuntimeConfigurationInput, opts ...request.Option) (*UpdateThingRuntimeConfigurationOutput, error) {",
          "7349:  req, out := c.UpdateThingRuntimeConfigurationRequest(input)",
          "7350:  req.SetContext(ctx)",
          "7351:  req.ApplyOptions(opts...)",
          "7352:  return out, req.Send()",
          "7353: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "13979:  return s",
          "13980: }",
          "13983: type GroupCertificateAuthorityProperties struct {",
          "13984:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14147: type GetThingRuntimeConfigurationInput struct {",
          "14148:  _ struct{} `type:\"structure\"`",
          "14151:  ThingName *string `location:\"uri\" locationName:\"ThingName\" type:\"string\" required:\"true\"`",
          "14152: }",
          "14155: func (s GetThingRuntimeConfigurationInput) String() string {",
          "14156:  return awsutil.Prettify(s)",
          "14157: }",
          "14160: func (s GetThingRuntimeConfigurationInput) GoString() string {",
          "14161:  return s.String()",
          "14162: }",
          "14165: func (s *GetThingRuntimeConfigurationInput) Validate() error {",
          "14166:  invalidParams := request.ErrInvalidParams{Context: \"GetThingRuntimeConfigurationInput\"}",
          "14167:  if s.ThingName == nil {",
          "14168:   invalidParams.Add(request.NewErrParamRequired(\"ThingName\"))",
          "14169:  }",
          "14170:  if s.ThingName != nil && len(*s.ThingName) < 1 {",
          "14171:   invalidParams.Add(request.NewErrParamMinLen(\"ThingName\", 1))",
          "14172:  }",
          "14174:  if invalidParams.Len() > 0 {",
          "14175:   return invalidParams",
          "14176:  }",
          "14177:  return nil",
          "14178: }",
          "14181: func (s *GetThingRuntimeConfigurationInput) SetThingName(v string) *GetThingRuntimeConfigurationInput {",
          "14182:  s.ThingName = &v",
          "14183:  return s",
          "14184: }",
          "14187: type GetThingRuntimeConfigurationOutput struct {",
          "14188:  _ struct{} `type:\"structure\"`",
          "14191:  RuntimeConfiguration *RuntimeConfiguration `type:\"structure\"`",
          "14192: }",
          "14195: func (s GetThingRuntimeConfigurationOutput) String() string {",
          "14196:  return awsutil.Prettify(s)",
          "14197: }",
          "14200: func (s GetThingRuntimeConfigurationOutput) GoString() string {",
          "14201:  return s.String()",
          "14202: }",
          "14205: func (s *GetThingRuntimeConfigurationOutput) SetRuntimeConfiguration(v *RuntimeConfiguration) *GetThingRuntimeConfigurationOutput {",
          "14206:  s.RuntimeConfiguration = v",
          "14207:  return s",
          "14208: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "16403:  return s",
          "16404: }",
          "16407: type S3MachineLearningModelResourceData struct {",
          "16408:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16635: type RuntimeConfiguration struct {",
          "16636:  _ struct{} `type:\"structure\"`",
          "16639:  TelemetryConfiguration *TelemetryConfiguration `type:\"structure\"`",
          "16640: }",
          "16643: func (s RuntimeConfiguration) String() string {",
          "16644:  return awsutil.Prettify(s)",
          "16645: }",
          "16648: func (s RuntimeConfiguration) GoString() string {",
          "16649:  return s.String()",
          "16650: }",
          "16653: func (s *RuntimeConfiguration) SetTelemetryConfiguration(v *TelemetryConfiguration) *RuntimeConfiguration {",
          "16654:  s.TelemetryConfiguration = v",
          "16655:  return s",
          "16656: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "16912:  return s.String()",
          "16913: }",
          "16915: type UntagResourceInput struct {",
          "16916:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17168: type TelemetryConfiguration struct {",
          "17169:  _ struct{} `type:\"structure\"`",
          "17173:  ConfigurationSyncStatus *string `type:\"string\" enum:\"ConfigurationSyncStatus\"`",
          "17178:  Telemetry *string `type:\"string\" required:\"true\" enum:\"Telemetry\"`",
          "17179: }",
          "17182: func (s TelemetryConfiguration) String() string {",
          "17183:  return awsutil.Prettify(s)",
          "17184: }",
          "17187: func (s TelemetryConfiguration) GoString() string {",
          "17188:  return s.String()",
          "17189: }",
          "17192: func (s *TelemetryConfiguration) SetConfigurationSyncStatus(v string) *TelemetryConfiguration {",
          "17193:  s.ConfigurationSyncStatus = &v",
          "17194:  return s",
          "17195: }",
          "17198: func (s *TelemetryConfiguration) SetTelemetry(v string) *TelemetryConfiguration {",
          "17199:  s.Telemetry = &v",
          "17200:  return s",
          "17201: }",
          "17204: type TelemetryConfigurationUpdate struct {",
          "17205:  _ struct{} `type:\"structure\"`",
          "17210:  Telemetry *string `type:\"string\" required:\"true\" enum:\"Telemetry\"`",
          "17211: }",
          "17214: func (s TelemetryConfigurationUpdate) String() string {",
          "17215:  return awsutil.Prettify(s)",
          "17216: }",
          "17219: func (s TelemetryConfigurationUpdate) GoString() string {",
          "17220:  return s.String()",
          "17221: }",
          "17224: func (s *TelemetryConfigurationUpdate) Validate() error {",
          "17225:  invalidParams := request.ErrInvalidParams{Context: \"TelemetryConfigurationUpdate\"}",
          "17226:  if s.Telemetry == nil {",
          "17227:   invalidParams.Add(request.NewErrParamRequired(\"Telemetry\"))",
          "17228:  }",
          "17230:  if invalidParams.Len() > 0 {",
          "17231:   return invalidParams",
          "17232:  }",
          "17233:  return nil",
          "17234: }",
          "17237: func (s *TelemetryConfigurationUpdate) SetTelemetry(v string) *TelemetryConfigurationUpdate {",
          "17238:  s.Telemetry = &v",
          "17239:  return s",
          "17240: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "17632:  return s.String()",
          "17633: }",
          "17636: type VersionInformation struct {",
          "17637:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17962: type UpdateThingRuntimeConfigurationInput struct {",
          "17963:  _ struct{} `type:\"structure\"`",
          "17966:  TelemetryConfiguration *TelemetryConfigurationUpdate `type:\"structure\"`",
          "17969:  ThingName *string `location:\"uri\" locationName:\"ThingName\" type:\"string\" required:\"true\"`",
          "17970: }",
          "17973: func (s UpdateThingRuntimeConfigurationInput) String() string {",
          "17974:  return awsutil.Prettify(s)",
          "17975: }",
          "17978: func (s UpdateThingRuntimeConfigurationInput) GoString() string {",
          "17979:  return s.String()",
          "17980: }",
          "17983: func (s *UpdateThingRuntimeConfigurationInput) Validate() error {",
          "17984:  invalidParams := request.ErrInvalidParams{Context: \"UpdateThingRuntimeConfigurationInput\"}",
          "17985:  if s.ThingName == nil {",
          "17986:   invalidParams.Add(request.NewErrParamRequired(\"ThingName\"))",
          "17987:  }",
          "17988:  if s.ThingName != nil && len(*s.ThingName) < 1 {",
          "17989:   invalidParams.Add(request.NewErrParamMinLen(\"ThingName\", 1))",
          "17990:  }",
          "17991:  if s.TelemetryConfiguration != nil {",
          "17992:   if err := s.TelemetryConfiguration.Validate(); err != nil {",
          "17993:    invalidParams.AddNested(\"TelemetryConfiguration\", err.(request.ErrInvalidParams))",
          "17994:   }",
          "17995:  }",
          "17997:  if invalidParams.Len() > 0 {",
          "17998:   return invalidParams",
          "17999:  }",
          "18000:  return nil",
          "18001: }",
          "18004: func (s *UpdateThingRuntimeConfigurationInput) SetTelemetryConfiguration(v *TelemetryConfigurationUpdate) *UpdateThingRuntimeConfigurationInput {",
          "18005:  s.TelemetryConfiguration = v",
          "18006:  return s",
          "18007: }",
          "18010: func (s *UpdateThingRuntimeConfigurationInput) SetThingName(v string) *UpdateThingRuntimeConfigurationInput {",
          "18011:  s.ThingName = &v",
          "18012:  return s",
          "18013: }",
          "18015: type UpdateThingRuntimeConfigurationOutput struct {",
          "18016:  _ struct{} `type:\"structure\"`",
          "18017: }",
          "18020: func (s UpdateThingRuntimeConfigurationOutput) String() string {",
          "18021:  return awsutil.Prettify(s)",
          "18022: }",
          "18025: func (s UpdateThingRuntimeConfigurationOutput) GoString() string {",
          "18026:  return s.String()",
          "18027: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "17716:  }",
          "17717: }",
          "17721: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18113: const (",
          "18115:  ConfigurationSyncStatusInSync = \"InSync\"",
          "18118:  ConfigurationSyncStatusOutOfSync = \"OutOfSync\"",
          "18119: )",
          "18122: func ConfigurationSyncStatus_Values() []string {",
          "18123:  return []string{",
          "18124:   ConfigurationSyncStatusInSync,",
          "18125:   ConfigurationSyncStatusOutOfSync,",
          "18126:  }",
          "18127: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "17873:  }",
          "17874: }",
          "17878: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18286: const (",
          "18288:  TelemetryOn = \"On\"",
          "18291:  TelemetryOff = \"Off\"",
          "18292: )",
          "18295: func Telemetry_Values() []string {",
          "18296:  return []string{",
          "18297:   TelemetryOn,",
          "18298:   TelemetryOff,",
          "18299:  }",
          "18300: }",
          "",
          "---------------"
        ],
        "service/greengrass/greengrassiface/interface.go||service/greengrass/greengrassiface/interface.go": [
          "File: service/greengrass/greengrassiface/interface.go -> service/greengrass/greengrassiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "276:  GetSubscriptionDefinitionVersionWithContext(aws.Context, *greengrass.GetSubscriptionDefinitionVersionInput, ...request.Option) (*greengrass.GetSubscriptionDefinitionVersionOutput, error)",
          "277:  GetSubscriptionDefinitionVersionRequest(*greengrass.GetSubscriptionDefinitionVersionInput) (*request.Request, *greengrass.GetSubscriptionDefinitionVersionOutput)",
          "279:  ListBulkDeploymentDetailedReports(*greengrass.ListBulkDeploymentDetailedReportsInput) (*greengrass.ListBulkDeploymentDetailedReportsOutput, error)",
          "280:  ListBulkDeploymentDetailedReportsWithContext(aws.Context, *greengrass.ListBulkDeploymentDetailedReportsInput, ...request.Option) (*greengrass.ListBulkDeploymentDetailedReportsOutput, error)",
          "281:  ListBulkDeploymentDetailedReportsRequest(*greengrass.ListBulkDeploymentDetailedReportsInput) (*request.Request, *greengrass.ListBulkDeploymentDetailedReportsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "279:  GetThingRuntimeConfiguration(*greengrass.GetThingRuntimeConfigurationInput) (*greengrass.GetThingRuntimeConfigurationOutput, error)",
          "280:  GetThingRuntimeConfigurationWithContext(aws.Context, *greengrass.GetThingRuntimeConfigurationInput, ...request.Option) (*greengrass.GetThingRuntimeConfigurationOutput, error)",
          "281:  GetThingRuntimeConfigurationRequest(*greengrass.GetThingRuntimeConfigurationInput) (*request.Request, *greengrass.GetThingRuntimeConfigurationOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "419:  UpdateSubscriptionDefinition(*greengrass.UpdateSubscriptionDefinitionInput) (*greengrass.UpdateSubscriptionDefinitionOutput, error)",
          "420:  UpdateSubscriptionDefinitionWithContext(aws.Context, *greengrass.UpdateSubscriptionDefinitionInput, ...request.Option) (*greengrass.UpdateSubscriptionDefinitionOutput, error)",
          "421:  UpdateSubscriptionDefinitionRequest(*greengrass.UpdateSubscriptionDefinitionInput) (*request.Request, *greengrass.UpdateSubscriptionDefinitionOutput)",
          "422: }",
          "424: var _ GreengrassAPI = (*greengrass.Greengrass)(nil)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "427:  UpdateThingRuntimeConfiguration(*greengrass.UpdateThingRuntimeConfigurationInput) (*greengrass.UpdateThingRuntimeConfigurationOutput, error)",
          "428:  UpdateThingRuntimeConfigurationWithContext(aws.Context, *greengrass.UpdateThingRuntimeConfigurationInput, ...request.Option) (*greengrass.UpdateThingRuntimeConfigurationOutput, error)",
          "429:  UpdateThingRuntimeConfigurationRequest(*greengrass.UpdateThingRuntimeConfigurationInput) (*request.Request, *greengrass.UpdateThingRuntimeConfigurationOutput)",
          "",
          "---------------"
        ],
        "service/servicecatalog/api.go||service/servicecatalog/api.go": [
          "File: service/servicecatalog/api.go -> service/servicecatalog/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "11865:  AcceptLanguage *string `type:\"string\"`",
          "11871: }",
          "",
          "[Removed Lines]",
          "11870:  Id *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "11879:  Id *string `min:\"1\" type:\"string\"`",
          "11886:  Name *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11884: func (s *DescribeProvisionedProductInput) Validate() error {",
          "11885:  invalidParams := request.ErrInvalidParams{Context: \"DescribeProvisionedProductInput\"}",
          "11889:  if s.Id != nil && len(*s.Id) < 1 {",
          "11890:   invalidParams.Add(request.NewErrParamMinLen(\"Id\", 1))",
          "11891:  }",
          "11893:  if invalidParams.Len() > 0 {",
          "11894:   return invalidParams",
          "",
          "[Removed Lines]",
          "11886:  if s.Id == nil {",
          "11887:   invalidParams.Add(request.NewErrParamRequired(\"Id\"))",
          "11888:  }",
          "",
          "[Added Lines]",
          "11905:  if s.Name != nil && len(*s.Name) < 1 {",
          "11906:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "11907:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "11908:  return s",
          "11909: }",
          "11911: type DescribeProvisionedProductOutput struct {",
          "11912:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11928: func (s *DescribeProvisionedProductInput) SetName(v string) *DescribeProvisionedProductInput {",
          "11929:  s.Name = &v",
          "11930:  return s",
          "11931: }",
          "",
          "---------------"
        ],
        "service/ssm/api.go||service/ssm/api.go": [
          "File: service/ssm/api.go -> service/ssm/api.go"
        ]
      }
    }
  ]
}