{
  "cve_id": "CVE-2021-45229",
  "cve_desc": "It was discovered that the \"Trigger DAG with config\" screen was susceptible to XSS attacks via the `origin` query argument. This issue affects Apache Airflow versions 2.2.3 and below.",
  "repo": "apache/airflow",
  "patch_hash": "628aa1f99c865d97d0b1c7c76e630e43a7b8d319",
  "patch_info": {
    "commit_hash": "628aa1f99c865d97d0b1c7c76e630e43a7b8d319",
    "repo": "apache/airflow",
    "commit_url": "https://github.com/apache/airflow/commit/628aa1f99c865d97d0b1c7c76e630e43a7b8d319",
    "files": [
      "airflow/www/templates/airflow/trigger.html",
      "tests/www/views/test_views_trigger_dag.py"
    ],
    "message": "Simplify trigger cancel button (#21591)\n\nCo-authored-by: Jed Cunningham <jedcunningham@apache.org>\n(cherry picked from commit 65297673a318660fba76797e50d0c06804dfcafc)",
    "before_after_code_files": [
      "airflow/www/templates/airflow/trigger.html||airflow/www/templates/airflow/trigger.html",
      "tests/www/views/test_views_trigger_dag.py||tests/www/views/test_views_trigger_dag.py"
    ]
  },
  "patch_diff": {
    "airflow/www/templates/airflow/trigger.html||airflow/www/templates/airflow/trigger.html": [
      "File: airflow/www/templates/airflow/trigger.html -> airflow/www/templates/airflow/trigger.html",
      "--- Hunk 1 ---",
      "[Context before]",
      "63:       </label>",
      "64:     </div>",
      "65:     <button type=\"submit\" class=\"btn btn-primary\">Trigger</button>",
      "67:   </form>",
      "68: {% endblock %}",
      "",
      "[Removed Lines]",
      "66:     <button type=\"button\" class=\"btn\" onclick=\"location.href = '{{ origin }}'; return false\">Cancel</button>",
      "",
      "[Added Lines]",
      "66:     <a class=\"btn\" href=\"{{ origin }}\">Cancel</a>",
      "",
      "---------------"
    ],
    "tests/www/views/test_views_trigger_dag.py||tests/www/views/test_views_trigger_dag.py": [
      "File: tests/www/views/test_views_trigger_dag.py -> tests/www/views/test_views_trigger_dag.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "133:         (\"javascript:alert(1)\", \"/home\"),",
      "134:         (\"http://google.com\", \"/home\"),",
      "135:         (\"36539'%3balert(1)%2f%2f166\", \"/home\"),",
      "136:         (",
      "137:             \"%2Ftree%3Fdag_id%3Dexample_bash_operator';alert(33)//\",",
      "138:             \"/home\",",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "136:         (",
      "137:             '\"><script>alert(99)</script><a href=\"',",
      "138:             \"&#34;&gt;&lt;script&gt;alert(99)&lt;/script&gt;&lt;a href=&#34;\",",
      "139:         ),",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "145:     test_dag_id = \"example_bash_operator\"",
      "147:     resp = admin_client.get(f'trigger?dag_id={test_dag_id}&origin={test_origin}')",
      "156: @pytest.mark.parametrize(",
      "",
      "[Removed Lines]",
      "148:     check_content_in_response(",
      "149:         '<button type=\"button\" class=\"btn\" onclick=\"location.href = \\'{}\\'; return false\">'.format(",
      "150:             expected_origin",
      "151:         ),",
      "152:         resp,",
      "153:     )",
      "",
      "[Added Lines]",
      "152:     check_content_in_response(f'<a class=\"btn\" href=\"{expected_origin}\">Cancel</a>', resp)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6d8342e78c6b6546845a7d2d5ba0a761af73d5f0",
      "candidate_info": {
        "commit_hash": "6d8342e78c6b6546845a7d2d5ba0a761af73d5f0",
        "repo": "apache/airflow",
        "commit_url": "https://github.com/apache/airflow/commit/6d8342e78c6b6546845a7d2d5ba0a761af73d5f0",
        "files": [
          "airflow/models/dag.py"
        ],
        "message": "Removed duplicated dag_run join in Dag.get_task_instances() (#20591)\n\nCo-authored-by: hubert-pietron <hubert.pietron95@gmail.com>\n(cherry picked from commit 960f573615b5357677c10bd9f7ec11811a0355c6)",
        "before_after_code_files": [
          "airflow/models/dag.py||airflow/models/dag.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/airflow/pull/21659"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "airflow/models/dag.py||airflow/models/dag.py": [
          "File: airflow/models/dag.py -> airflow/models/dag.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1343:                 as_pk_tuple=False,",
          "1344:                 session=session,",
          "1345:             )",
          "1347:             .order_by(DagRun.execution_date)",
          "1348:             .all()",
          "1349:         )",
          "",
          "[Removed Lines]",
          "1346:             .join(TaskInstance.dag_run)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ae184690fd27cc3f549dc427d9d70cc1c10020da",
      "candidate_info": {
        "commit_hash": "ae184690fd27cc3f549dc427d9d70cc1c10020da",
        "repo": "apache/airflow",
        "commit_url": "https://github.com/apache/airflow/commit/ae184690fd27cc3f549dc427d9d70cc1c10020da",
        "files": [
          "dev/provider_packages/prepare_provider_packages.py"
        ],
        "message": "Update known warnings for Python 3.7 (#19333)\n\nAfter seting 3.7 the default (#19317) the warning printed by\nPython during importing all providers (specifically apache beam)\nhas slightly changed. Apparently collections.abc warning was\na bit more \"scary\" - warning that it's 3.9 not 3.10 where the\nold collection imports will stop working (Note that actually\nthis did not happen even in 3.10, apparently)\n\nThis PR fixes the \"known\" warning message to match it but also\na separate PR (https://github.com/apache/beam/pull/15850) was\nopened to Beam to get rid of the warnings altogether.\n\nAlso seems 'dns` stopped generating this warning so I removed it\nand in case warnings are generated, they are printed outside of\nthe folded group, so that it's immediately visible.\n\n(cherry picked from commit 4bb1317c892c6d65557b3d998bd8d1bd971ba96b)",
        "before_after_code_files": [
          "dev/provider_packages/prepare_provider_packages.py||dev/provider_packages/prepare_provider_packages.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/airflow/pull/21659"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "dev/provider_packages/prepare_provider_packages.py||dev/provider_packages/prepare_provider_packages.py": [
          "File: dev/provider_packages/prepare_provider_packages.py -> dev/provider_packages/prepare_provider_packages.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "2026:         console.print()",
          "2027:         raise_error = True",
          "2028:     if warns:",
          "2029:         console.print()",
          "2030:         console.print(\"[red]Unknown warnings generated:[/]\")",
          "2031:         console.print()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2029:         if os.environ.get('GITHUB_ACTIONS'):",
          "2030:             # Ends group in GitHub Actions so that the errors are immediately visible in CI log",
          "2031:             console.print(\"::endgroup::\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2072:     ),",
          "2073:     (",
          "2074:         \"Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since\"",
          "2076:         \"apache_beam\",",
          "2077:     ),",
          "2083:     (",
          "2084:         'pyarrow.HadoopFileSystem is deprecated as of 2.0.0, please use pyarrow.fs.HadoopFileSystem instead.',",
          "2085:         \"papermill\",",
          "",
          "[Removed Lines]",
          "2075:         \" Python 3.3, and in 3.10 it will stop working\",",
          "2078:     (",
          "2079:         \"Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since\"",
          "2080:         \" Python 3.3, and in 3.10 it will stop working\",",
          "2081:         \"dns\",",
          "2082:     ),",
          "",
          "[Added Lines]",
          "2078:         \" Python 3.3,and in 3.9 it will stop working\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "01b909b5f71ec1d4563be23b3c590bd4240d513d",
      "candidate_info": {
        "commit_hash": "01b909b5f71ec1d4563be23b3c590bd4240d513d",
        "repo": "apache/airflow",
        "commit_url": "https://github.com/apache/airflow/commit/01b909b5f71ec1d4563be23b3c590bd4240d513d",
        "files": [
          "setup.cfg"
        ],
        "message": "Pin Markupsafe until we are able to upgrade Flask/Jinja (#21664)\n\nMarkupsafe 2.1.0 breaks with error: import name 'soft_unicode' from 'markupsafe'.\nThis should be removed when either this issue is closed:\nhttps://github.com/pallets/markupsafe/issues/284\nor when we will be able to upgrade JINJA to newer version (currently\nlimited due to Flask and Flask Application Builder)\n\n(cherry picked from commit 366c66b8f6eddc0d22028ef494c62bb757bd8b8b)",
        "before_after_code_files": [
          "setup.cfg||setup.cfg"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/airflow/pull/21659"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "setup.cfg||setup.cfg": [
          "File: setup.cfg -> setup.cfg",
          "--- Hunk 1 ---",
          "[Context before]",
          "132:     lazy-object-proxy",
          "133:     lockfile>=0.12.2",
          "134:     markdown>=2.5.2, <4.0",
          "136:     marshmallow-oneofschema>=2.0.1",
          "137:     packaging>=14.0",
          "138:     pendulum~=2.0",
          "",
          "[Removed Lines]",
          "135:     markupsafe>=1.1.1",
          "",
          "[Added Lines]",
          "135:     # Markupsafe 2.1.0 breaks with error: import name 'soft_unicode' from 'markupsafe'.",
          "136:     # This should be removed when either this issue is closed:",
          "137:     # https://github.com/pallets/markupsafe/issues/284",
          "138:     # or when we will be able to upgrade JINJA to newer version (currently limited due to Flask and",
          "139:     # Flask Application Builder)",
          "140:     markupsafe>=1.1.1,<2.1.0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "500946ad7f939d4e19fe37f84bcc020d58095b74",
      "candidate_info": {
        "commit_hash": "500946ad7f939d4e19fe37f84bcc020d58095b74",
        "repo": "apache/airflow",
        "commit_url": "https://github.com/apache/airflow/commit/500946ad7f939d4e19fe37f84bcc020d58095b74",
        "files": [
          "scripts/ci/testing/ci_run_airflow_testing.sh"
        ],
        "message": "Run Other tests sequentially for Public GitHub runners (#19766)\n\nThe Other tests take a lot of memory (> 1GB when tests of\nwebserver are running). This causes OOM issues for Public GitHub\nrunners when those tests are run in parallel to other tests.\n\nThis PR add Other to sequentially run tests which will make sure\nthey are not run in parallel with any other tests.\n\n(cherry picked from commit ba6909494c4de94b41d4abebea8d4f66e05c9c64)",
        "before_after_code_files": [
          "scripts/ci/testing/ci_run_airflow_testing.sh||scripts/ci/testing/ci_run_airflow_testing.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/airflow/pull/21659"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "scripts/ci/testing/ci_run_airflow_testing.sh||scripts/ci/testing/ci_run_airflow_testing.sh": [
          "File: scripts/ci/testing/ci_run_airflow_testing.sh -> scripts/ci/testing/ci_run_airflow_testing.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "97:             test_types_to_run=\"${test_types_to_run//Core/}\"",
          "98:             sequential_tests+=(\"Core\")",
          "99:         fi",
          "100:         if [[ ${BACKEND} == \"mssql\" || ${BACKEND} == \"mysql\" ]]; then",
          "101:             # For mssql/mysql - they take far more memory than postgres (or sqlite) - we skip the Provider",
          "102:             # tests altogether as they take too much memory even if run sequentially.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "100:         if [[ ${test_types_to_run} == *\"Other\"* ]]; then",
          "101:             echo \"${COLOR_YELLOW}Remove Other from tests_types_to_run and add them to sequential tests due to low memory.${COLOR_RESET}\"",
          "102:             test_types_to_run=\"${test_types_to_run//Other/}\"",
          "103:             sequential_tests+=(\"Other\")",
          "104:         fi",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "01edc7e66dd880e2f2316893403f8e80aad78762",
      "candidate_info": {
        "commit_hash": "01edc7e66dd880e2f2316893403f8e80aad78762",
        "repo": "apache/airflow",
        "commit_url": "https://github.com/apache/airflow/commit/01edc7e66dd880e2f2316893403f8e80aad78762",
        "files": [
          "breeze",
          "scripts/ci/docker-compose/_docker_compose.env",
          "scripts/ci/docker-compose/base.yml",
          "scripts/ci/libraries/_initialization.sh",
          "scripts/in_container/entrypoint_ci.sh"
        ],
        "message": "Workaround docker-compose-v2 env passing (#18887)\n\n* Workaround docker-compose-v2 env passing\n\nDocker Compose v2 has environment parsing broken in many ways.\nUntil this is fixed, we cannot use env files, instead we must\nset all the variables directly, because parsing variables without\nvalues or parsing variables which have empty values is broken\nin several ways. Some of the issues are closed but not released,\nand until this is fixed, some extra code duplication and explicitly\nsetting all default variables to \"\" when needed should solve the\nproblem for both Docker-Compose v1 and Docker-Compose v2\n\n(cherry picked from commit ab5b2bfca6b5be57a19bdbfe2206319bd2e71ac9)",
        "before_after_code_files": [
          "scripts/ci/docker-compose/_docker_compose.env||scripts/ci/docker-compose/_docker_compose.env",
          "scripts/ci/libraries/_initialization.sh||scripts/ci/libraries/_initialization.sh",
          "scripts/in_container/entrypoint_ci.sh||scripts/in_container/entrypoint_ci.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/airflow/pull/21659"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "scripts/ci/docker-compose/_docker_compose.env||scripts/ci/docker-compose/_docker_compose.env": [
          "File: scripts/ci/docker-compose/_docker_compose.env -> scripts/ci/docker-compose/_docker_compose.env",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "scripts/ci/libraries/_initialization.sh||scripts/ci/libraries/_initialization.sh": [
          "File: scripts/ci/libraries/_initialization.sh -> scripts/ci/libraries/_initialization.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "312:     # Can be set to true to skip if the image is newer in registry",
          "313:     export SKIP_CHECK_REMOTE_IMAGE=${SKIP_CHECK_REMOTE_IMAGE:=\"false\"}",
          "314: }",
          "316: # Determine information about the host",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "315:     # integrations are disabled by default",
          "316:     export ENABLED_INTEGRATIONS=${ENABLED_INTEGRATIONS:=\"\"}",
          "318:     # systems are disabled by default",
          "319:     export ENABLED_SYSTEMS=${ENABLED_SYSTEMS:=\"\"}",
          "321:     # no issue id by default (quarantined builds only)",
          "322:     export ISSUE_ID=${ISSUE_ID:=\"\"}",
          "324:     # no NUM_RUNS by default (quarantined builds only)",
          "325:     export NUM_RUNS=${NUM_RUNS:=\"\"}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "576:     # In case we want to force certain test type to run, this variable should be set to this type",
          "577:     # Otherwise TEST_TYPEs to run will be derived from TEST_TYPES space-separated string",
          "578:     export FORCE_TEST_TYPE=${FORCE_TEST_TYPE:=\"\"}",
          "579: }",
          "581: function initialization::initialize_package_variables() {",
          "582:     export PACKAGE_FORMAT=${PACKAGE_FORMAT:=\"wheel\"}",
          "583: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "593:     # Do not run tests by default",
          "594:     export RUN_TESTS=${RUN_TESTS:=\"false\"}",
          "596:     # Do not run integration tests by default",
          "597:     export RUN_INTEGRATION_TESTS=${RUN_INTEGRATION_TESTS:=\"false\"}",
          "599:     # Do not run system tests by default",
          "600:     export RUN_SYSTEM_TESTS=${RUN_SYSTEM_TESTS:=\"false\"}",
          "605:     # default package format",
          "607:     # default version suffixes",
          "608:     export VERSION_SUFFIX_FOR_PYPI=${VERSION_SUFFIX_FOR_PYPI:=\"\"}",
          "609:     export VERSION_SUFFIX_FOR_SVN=${VERSION_SUFFIX_FOR_SVN:=\"\"}",
          "",
          "---------------"
        ],
        "scripts/in_container/entrypoint_ci.sh||scripts/in_container/entrypoint_ci.sh": [
          "File: scripts/in_container/entrypoint_ci.sh -> scripts/in_container/entrypoint_ci.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:     export RUN_AIRFLOW_1_10=\"false\"",
          "53: fi",
          "56:     export PYTHONPATH=${AIRFLOW_SOURCES}",
          "57:     echo",
          "58:     echo \"Using already installed airflow version\"",
          "",
          "[Removed Lines]",
          "55: if [[ -z ${USE_AIRFLOW_VERSION=} ]]; then",
          "",
          "[Added Lines]",
          "55: if [[ ${USE_AIRFLOW_VERSION} == \"\" ]]; then",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "185: cd \"${AIRFLOW_SOURCES}\"",
          "187: if [[ ${START_AIRFLOW:=\"false\"} == \"true\" ]]; then",
          "188:     export AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS=${LOAD_DEFAULT_CONNECTIONS}",
          "189:     export AIRFLOW__CORE__LOAD_EXAMPLES=${LOAD_EXAMPLES}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "187: echo \"START_AIRFLOW:=${START_AIRFLOW}\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}