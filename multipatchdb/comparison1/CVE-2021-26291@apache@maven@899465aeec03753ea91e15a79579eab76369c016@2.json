{
  "cve_id": "CVE-2021-26291",
  "cve_desc": "Apache Maven will follow repositories that are defined in a dependency\u2019s Project Object Model (pom) which may be surprising to some users, resulting in potential risk if a malicious actor takes over that repository or is able to insert themselves into a position to pretend to be that repository. Maven is changing the default behavior in 3.8.1+ to no longer follow http (non-SSL) repository references by default. More details available in the referenced urls. If you are currently using a repository manager to govern the repositories used by your builds, you are unaffected by the risks present in the legacy behavior, and are unaffected by this vulnerability and change to default behavior. See this link for more information about repository management: https://maven.apache.org/repository-management.html",
  "repo": "apache/maven",
  "patch_hash": "899465aeec03753ea91e15a79579eab76369c016",
  "patch_info": {
    "commit_hash": "899465aeec03753ea91e15a79579eab76369c016",
    "repo": "apache/maven",
    "commit_url": "https://github.com/apache/maven/commit/899465aeec03753ea91e15a79579eab76369c016",
    "files": [
      "maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java",
      "maven-settings/pom.xml",
      "maven-settings/src/main/mdo/settings.mdo"
    ],
    "message": "[MNG-7117] add support for blocked mirror",
    "before_after_code_files": [
      "maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java||maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java",
      "maven-settings/src/main/mdo/settings.mdo||maven-settings/src/main/mdo/settings.mdo"
    ]
  },
  "patch_diff": {
    "maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java||maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java": [
      "File: maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java -> maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "177:         DefaultMirrorSelector mirrorSelector = new DefaultMirrorSelector();",
      "178:         for ( Mirror mirror : request.getMirrors() )",
      "179:         {",
      "182:         }",
      "183:         session.setMirrorSelector( mirrorSelector );",
      "",
      "[Removed Lines]",
      "180:             mirrorSelector.add( mirror.getId(), mirror.getUrl(), mirror.getLayout(), false, mirror.getMirrorOf(),",
      "181:                                 mirror.getMirrorOfLayouts() );",
      "",
      "[Added Lines]",
      "180:             mirrorSelector.add( mirror.getId(), mirror.getUrl(), mirror.getLayout(), false, mirror.isBlocked(),",
      "181:                                 mirror.getMirrorOf(), mirror.getMirrorOfLayouts() );",
      "",
      "---------------"
    ],
    "maven-settings/src/main/mdo/settings.mdo||maven-settings/src/main/mdo/settings.mdo": [
      "File: maven-settings/src/main/mdo/settings.mdo -> maven-settings/src/main/mdo/settings.mdo",
      "--- Hunk 1 ---",
      "[Context before]",
      "633:             of the mirror to repositories with a matching layout (apart from a matching id). Since Maven 3.",
      "634:           </description>",
      "635:         </field>",
      "636:       </fields>",
      "637:       <codeSegments>",
      "638:         <codeSegment>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "636:         <field>",
      "637:           <name>blocked</name>",
      "638:           <version>1.2.0+</version>",
      "639:           <type>boolean</type>",
      "640:           <defaultValue>false</defaultValue>",
      "641:           <description>",
      "642:             Whether this mirror should be blocked from any download request but fail the download process, explaining why.",
      "643:           </description>",
      "644:         </field>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "648:         sb.append( \",mirrorOf=\" ).append( mirrorOf );",
      "649:         sb.append( \",url=\" ).append( this.url );",
      "650:         sb.append( \",name=\" ).append( this.name );",
      "651:         sb.append( \"]\" );",
      "652:         return sb.toString();",
      "653:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "660:         if ( isBlocked() )",
      "661:         {",
      "662:             sb.append( \",blocked\" );",
      "663:         }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "22a8cfa05976b23284388675dcabd7e5e8037fb0",
      "candidate_info": {
        "commit_hash": "22a8cfa05976b23284388675dcabd7e5e8037fb0",
        "repo": "apache/maven",
        "commit_url": "https://github.com/apache/maven/commit/22a8cfa05976b23284388675dcabd7e5e8037fb0",
        "files": [
          "apache-maven/src/bin/mvn.cmd"
        ],
        "message": "[MNG-6648] 'mavenrc_pre' script does not receive arguments like mavenrc in Bourne shell does\n\nThis closes #511",
        "before_after_code_files": [
          "apache-maven/src/bin/mvn.cmd||apache-maven/src/bin/mvn.cmd"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/maven/pull/762"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apache-maven/src/bin/mvn.cmd||apache-maven/src/bin/mvn.cmd": [
          "File: apache-maven/src/bin/mvn.cmd -> apache-maven/src/bin/mvn.cmd",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: @REM Execute a user defined script before this one",
          "36: if not \"%MAVEN_SKIP_RC%\"==\"\" goto skipRcPre",
          "37: @REM check for pre script, once with legacy .bat ending and once with .cmd ending",
          "40: :skipRcPre",
          "42: @setlocal",
          "",
          "[Removed Lines]",
          "38: if exist \"%USERPROFILE%\\mavenrc_pre.bat\" call \"%USERPROFILE%\\mavenrc_pre.bat\"",
          "39: if exist \"%USERPROFILE%\\mavenrc_pre.cmd\" call \"%USERPROFILE%\\mavenrc_pre.cmd\"",
          "",
          "[Added Lines]",
          "38: if exist \"%USERPROFILE%\\mavenrc_pre.bat\" call \"%USERPROFILE%\\mavenrc_pre.bat\" %*",
          "39: if exist \"%USERPROFILE%\\mavenrc_pre.cmd\" call \"%USERPROFILE%\\mavenrc_pre.cmd\" %*",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e08834b79e9387811ece442f6e7b445b19110fcf",
      "candidate_info": {
        "commit_hash": "e08834b79e9387811ece442f6e7b445b19110fcf",
        "repo": "apache/maven",
        "commit_url": "https://github.com/apache/maven/commit/e08834b79e9387811ece442f6e7b445b19110fcf",
        "files": [
          "apache-maven/src/main/appended-resources/META-INF/LICENSE.vm",
          "apache-maven/src/main/appended-resources/META-INF/NOTICE.vm",
          "apache-maven/src/main/appended-resources/licenses/CDDL-1.0.txt",
          "apache-maven/src/main/appended-resources/licenses/unrecognized-javax.annotation-api-1.2.txt",
          "maven-core/src/main/resources/META-INF/maven/extension.xml",
          "maven-embedder/pom.xml",
          "pom.xml"
        ],
        "message": "[MNG-7250] Upgrade Sisu Inject/Plexus to 0.3.5\n\nSince we have replaced the old JSR 250 library with javax.annotation library we\ngo straight to 1.2.\n\nThis closes #539",
        "before_after_code_files": [
          "apache-maven/src/main/appended-resources/META-INF/LICENSE.vm||apache-maven/src/main/appended-resources/META-INF/LICENSE.vm",
          "apache-maven/src/main/appended-resources/META-INF/NOTICE.vm||apache-maven/src/main/appended-resources/META-INF/NOTICE.vm"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/maven/pull/762"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apache-maven/src/main/appended-resources/META-INF/LICENSE.vm||apache-maven/src/main/appended-resources/META-INF/LICENSE.vm": [
          "File: apache-maven/src/main/appended-resources/META-INF/LICENSE.vm -> apache-maven/src/main/appended-resources/META-INF/LICENSE.vm",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #*    *### advertise about each non-Maven dependency",
          "34: #*    *###",
          "35: #*    *### infer SPDX license id",
          "39: #*      *##set ( $spdx = 'MIT' )",
          "40: #*    *##elseif ( $license.name == \"Eclipse Public License, Version 1.0\" )",
          "41: #*      *##set ( $spdx = 'EPL-1.0' )",
          "",
          "[Removed Lines]",
          "36: #*    *##if ( $license.name == \"COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) Version 1.0\" )",
          "37: #*      *##set ( $spdx = 'CDDL-1.0' )",
          "38: #*    *##elseif ( $MITLicenseNames.contains( $license.name ) )",
          "",
          "[Added Lines]",
          "36: #*    *##if ( $MITLicenseNames.contains( $license.name ) )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "62: #*    *###",
          "63: #*    *### copy license file to lib/$artifactId.license",
          "64: #*    *##set ( $licFile = $directory + '/' + $project.artifact.artifactId + '.license' )",
          "66: #*      *### MIT license contains date and copyright that makes the file specific to each artifact",
          "67: #*      *##set ( $downloaded = $locator.getResourceAsFile( \"licenses/${spdx}-${project.artifact.artifactId}-${project.artifact.version}.txt\", \"licenses/${licFile}\" ) )",
          "68: #*    *##else",
          "",
          "[Removed Lines]",
          "65: #*    *##if ( $spdx == \"MIT\" )",
          "",
          "[Added Lines]",
          "63: #*    *##if ( $spdx == \"MIT\" || $spdx == \"unrecognized\" )",
          "",
          "---------------"
        ],
        "apache-maven/src/main/appended-resources/META-INF/NOTICE.vm||apache-maven/src/main/appended-resources/META-INF/NOTICE.vm": [
          "File: apache-maven/src/main/appended-resources/META-INF/NOTICE.vm -> apache-maven/src/main/appended-resources/META-INF/NOTICE.vm",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: This product includes software developed by",
          "37: Rome (https://rome.dev.java.net/).",
          "41: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"",
          "42:     \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">",
          "",
          "[Removed Lines]",
          "39: about.html in archive lib/org.eclipse.sisu.inject-0.3.4.jar",
          "",
          "[Added Lines]",
          "39: about.html in archive lib/org.eclipse.sisu.inject-0.3.5.jar",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a9f337fd63963b2017c7b057234f9a9e3e78be46",
      "candidate_info": {
        "commit_hash": "a9f337fd63963b2017c7b057234f9a9e3e78be46",
        "repo": "apache/maven",
        "commit_url": "https://github.com/apache/maven/commit/a9f337fd63963b2017c7b057234f9a9e3e78be46",
        "files": [
          "maven-model-builder/src/test/java/org/apache/maven/model/interpolation/StringSearchModelInterpolatorTest.java"
        ],
        "message": "[MNG-6937] StringSearchModelInterpolatorTest fails on symlinked paths\n\nDon't compare baseDir in a canonical form when the second comparing value\n(System.getProperty( \"user.dir\" )) is not canonicalized.\n\nThis closes #361",
        "before_after_code_files": [
          "maven-model-builder/src/test/java/org/apache/maven/model/interpolation/StringSearchModelInterpolatorTest.java||maven-model-builder/src/test/java/org/apache/maven/model/interpolation/StringSearchModelInterpolatorTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/maven/pull/762"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "maven-model-builder/src/test/java/org/apache/maven/model/interpolation/StringSearchModelInterpolatorTest.java||maven-model-builder/src/test/java/org/apache/maven/model/interpolation/StringSearchModelInterpolatorTest.java": [
          "File: maven-model-builder/src/test/java/org/apache/maven/model/interpolation/StringSearchModelInterpolatorTest.java -> maven-model-builder/src/test/java/org/apache/maven/model/interpolation/StringSearchModelInterpolatorTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "365:         interpolator.interpolateObject( obj, model, new File( \".\" ), config, collector );",
          "366:         assertProblemFree( collector );",
          "369:         assertThat( obj.values.size(), is( 1 ) );",
          "370:         assertThat( (String) obj.values.get( \"key\" ), is( anyOf(",
          "371:                 is( System.getProperty( \"user.dir\" ) + File.separator + \"target\" ),",
          "",
          "[Removed Lines]",
          "368:         assertThat( baseDir.getCanonicalPath(), is( System.getProperty( \"user.dir\" ) ) );",
          "",
          "[Added Lines]",
          "368:         assertThat( baseDir.getAbsolutePath(), is( System.getProperty( \"user.dir\" ) ) );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d6c9614fa922027be8453c507c948f3727a91327",
      "candidate_info": {
        "commit_hash": "d6c9614fa922027be8453c507c948f3727a91327",
        "repo": "apache/maven",
        "commit_url": "https://github.com/apache/maven/commit/d6c9614fa922027be8453c507c948f3727a91327",
        "files": [
          "maven-settings/src/site/apt/index.apt"
        ],
        "message": "[MNG-7117] update link to settings xsd for version 1.2.0",
        "before_after_code_files": [
          "maven-settings/src/site/apt/index.apt||maven-settings/src/site/apt/index.apt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/maven/pull/762"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "maven-settings/src/site/apt/index.apt||maven-settings/src/site/apt/index.apt": [
          "File: maven-settings/src/site/apt/index.apt -> maven-settings/src/site/apt/index.apt"
        ]
      }
    },
    {
      "candidate_hash": "3645593bfa98b06f54eb8bc0874b871948651169",
      "candidate_info": {
        "commit_hash": "3645593bfa98b06f54eb8bc0874b871948651169",
        "repo": "apache/maven",
        "commit_url": "https://github.com/apache/maven/commit/3645593bfa98b06f54eb8bc0874b871948651169",
        "files": [
          "maven-core/src/test/java/org/apache/maven/project/ProjectBuilderTest.java",
          "maven-core/src/test/projects/project-builder/MNG-6983/parent-pom.xml",
          "maven-core/src/test/projects/project-builder/MNG-6983/pom.xml",
          "maven-model/src/main/mdo/maven.mdo"
        ],
        "message": "[MNG-6983] Plugin key can get out of sync with artifactId and groupId\n\nThe plugin key is build as combination of artifactId and groupId but not\nupdated if either of these two ids change.\nThis can be a problem if artifactId or groupId is a variable. The calculated\nkey will likely contain the unresolved property and is not updated once the\nvariable is interpolated.\n\nThis closes #372",
        "before_after_code_files": [
          "maven-core/src/test/java/org/apache/maven/project/ProjectBuilderTest.java||maven-core/src/test/java/org/apache/maven/project/ProjectBuilderTest.java",
          "maven-model/src/main/mdo/maven.mdo||maven-model/src/main/mdo/maven.mdo"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/maven/pull/762"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "maven-core/src/test/java/org/apache/maven/project/ProjectBuilderTest.java||maven-core/src/test/java/org/apache/maven/project/ProjectBuilderTest.java": [
          "File: maven-core/src/test/java/org/apache/maven/project/ProjectBuilderTest.java -> maven-core/src/test/java/org/apache/maven/project/ProjectBuilderTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: import org.apache.maven.AbstractCoreMavenComponentTestCase;",
          "35: import org.apache.maven.artifact.InvalidArtifactRTException;",
          "36: import org.apache.maven.execution.MavenSession;",
          "37: import org.apache.maven.model.building.FileModelSource;",
          "38: import org.apache.maven.model.building.ModelBuildingRequest;",
          "39: import org.apache.maven.model.building.ModelSource;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37: import org.apache.maven.model.Plugin;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "328:         assertEquals( 1, project.getMailingLists().size() );",
          "329:         assertEquals( 1, project.getResources().size() );",
          "330:     }",
          "331: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "333:     public void testPropertyInPluginManagementGroupId()",
          "334:             throws Exception",
          "335:     {",
          "336:         File pom = getProject( \"MNG-6983\" );",
          "338:         MavenSession session = createMavenSession( pom );",
          "339:         MavenProject project = session.getCurrentProject();",
          "341:         for (Plugin buildPlugin : project.getBuildPlugins()) {",
          "342:             assertNotNull( \"Missing version for build plugin \" + buildPlugin.getKey(), buildPlugin.getVersion() );",
          "343:         }",
          "344:     }",
          "",
          "---------------"
        ],
        "maven-model/src/main/mdo/maven.mdo||maven-model/src/main/mdo/maven.mdo": [
          "File: maven-model/src/main/mdo/maven.mdo -> maven-model/src/main/mdo/maven.mdo",
          "--- Hunk 1 ---",
          "[Context before]",
          "2314:         return id.toString();",
          "2315:     }",
          "2322:     public String getKey()",
          "2323:     {",
          "2329:     }",
          "",
          "[Removed Lines]",
          "2318:     private String key = null;",
          "2324:         if ( key == null )",
          "2325:         {",
          "2326:             key = constructKey( groupId, artifactId );",
          "2327:         }",
          "2328:         return key;",
          "",
          "[Added Lines]",
          "2322:         return constructKey( groupId, artifactId );",
          "",
          "---------------"
        ]
      }
    }
  ]
}