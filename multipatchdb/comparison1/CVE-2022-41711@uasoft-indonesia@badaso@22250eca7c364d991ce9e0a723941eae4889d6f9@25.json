{
  "cve_id": "CVE-2022-41711",
  "cve_desc": "Badaso version 2.6.0 allows an unauthenticated remote attacker to execute arbitrary code remotely on the server. This is possible because the application does not properly validate the data uploaded by users.",
  "repo": "uasoft-indonesia/badaso",
  "patch_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
  "patch_info": {
    "commit_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
    "repo": "uasoft-indonesia/badaso",
    "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/22250eca7c364d991ce9e0a723941eae4889d6f9",
    "files": [
      "src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue"
    ],
    "message": "Merge pull request #807 from uasoft-indonesia/bugfix/v2/filter-mimeType\n\nBugfix[v2] add filter mimeType",
    "before_after_code_files": [
      "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue"
    ]
  },
  "patch_diff": {
    "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue": [
      "File: src/resources/js/components/BadasoUploadFile.vue -> src/resources/js/components/BadasoUploadFile.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "336:           });",
      "337:           return;",
      "338:         }",
      "340:         this.uploadFile(files[0]);",
      "341:       }",
      "342:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "339:         if (!this.availableMimetypes.file.validMime.includes(files[0].type)) {",
      "340:           this.$vs.notify({",
      "341:             title: this.$t(\"alert.danger\"),",
      "342:             text: \"File type not allowed\",",
      "343:             color: \"danger\",",
      "344:           });",
      "345:           return;",
      "346:         }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadFileMultiple.vue -> src/resources/js/components/BadasoUploadFileMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "367:             });",
      "368:             return;",
      "369:           }",
      "371:           this.uploadFile(file);",
      "372:         }",
      "373:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "370:           if (!this.availableMimetypes.file.validMime.includes(file.type)) {",
      "371:             this.$vs.notify({",
      "372:               title: this.$t(\"alert.danger\"),",
      "373:               text: \"File type not allowed\",",
      "374:               color: \"danger\",",
      "375:             });",
      "376:             return;",
      "377:           }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue": [
      "File: src/resources/js/components/BadasoUploadImage.vue -> src/resources/js/components/BadasoUploadImage.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "380:           });",
      "381:           return;",
      "382:         }",
      "384:         this.uploadImage(files[0]);",
      "385:       }",
      "386:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "383:         if (!this.availableMimetypes.image.validMime.includes(files[0].type)){",
      "384:           this.$vs.notify({",
      "385:             title: this.$t(\"alert.danger\"),",
      "386:             text: \"File type not allowed\",",
      "387:             color: \"danger\",",
      "388:           });",
      "389:           return;",
      "390:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "421:     uploadImage(file) {",
      "422:       const files = new FormData();",
      "423:       files.append(\"upload\", file);",
      "425:       files.append(\"working_dir\", this.getActiveFolder);",
      "426:       this.$api.badasoFile",
      "427:         .uploadUsingLfm(files)",
      "",
      "[Removed Lines]",
      "424:       files.append(\"type\", \"image\");",
      "",
      "[Added Lines]",
      "431:       files.append(\"type\", file.type);",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadImageMultiple.vue -> src/resources/js/components/BadasoUploadImageMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:             });",
      "396:             return;",
      "397:           }",
      "399:           this.uploadImage(file);",
      "400:         }",
      "401:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "398:           if (!this.availableMimetypes.image.validMime.includes(file.type)) {",
      "399:             this.$vs.notify({",
      "400:               title: this.$t(\"alert.danger\"),",
      "401:               text: \"File type not allowed\",",
      "402:               color: \"danger\",",
      "403:             });",
      "404:             return;",
      "405:           }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3c01dc1cd3c736d65181a6e1d3286e667b3acc4e",
      "candidate_info": {
        "commit_hash": "3c01dc1cd3c736d65181a6e1d3286e667b3acc4e",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/3c01dc1cd3c736d65181a6e1d3286e667b3acc4e",
        "files": [
          "src/Migrations/2022_11_15_081356_add_phone_number_to_badaso_users_table.php"
        ],
        "message": "change size type data",
        "before_after_code_files": [
          "src/Migrations/2022_11_15_081356_add_phone_number_to_badaso_users_table.php||src/Migrations/2022_11_15_081356_add_phone_number_to_badaso_users_table.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Migrations/2022_11_15_081356_add_phone_number_to_badaso_users_table.php||src/Migrations/2022_11_15_081356_add_phone_number_to_badaso_users_table.php": [
          "File: src/Migrations/2022_11_15_081356_add_phone_number_to_badaso_users_table.php -> src/Migrations/2022_11_15_081356_add_phone_number_to_badaso_users_table.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:     public function up()",
          "15:     {",
          "16:         Schema::table('badaso_users', function (Blueprint $table) {",
          "18:         });",
          "19:     }",
          "",
          "[Removed Lines]",
          "17:             $table->string('phone', 255)->nullable()->after('avatar');",
          "",
          "[Added Lines]",
          "17:             $table->string('phone', 20)->nullable()->after('avatar');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "50f83926ce3cfc6e9d5b8bb40847689a10157d8f",
      "candidate_info": {
        "commit_hash": "50f83926ce3cfc6e9d5b8bb40847689a10157d8f",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/50f83926ce3cfc6e9d5b8bb40847689a10157d8f",
        "files": [
          ".github/workflows/phpstan.yml",
          "phpstan-baseline.neon",
          "phpstan.neon.dist",
          "src/Helpers/MigrationParser.php"
        ],
        "message": "test1",
        "before_after_code_files": [
          "phpstan-baseline.neon||phpstan-baseline.neon",
          "phpstan.neon.dist||phpstan.neon.dist",
          "src/Helpers/MigrationParser.php||src/Helpers/MigrationParser.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "phpstan-baseline.neon||phpstan-baseline.neon": [
          "File: phpstan-baseline.neon -> phpstan-baseline.neon",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:     - '#Call to an undefined static method Uasoft\\\\Badaso\\\\Models\\\\Role::[a-zA-Z0-9-()\\_]+.#'",
          "4:     - '#Call to an undefined static method Uasoft\\\\Badaso\\\\Models\\\\User::[a-zA-Z0-9-()\\_]+.#'",
          "5:     - '#Call to an undefined static method Spatie\\\\Activitylog\\\\Models\\\\Activity::[a-zA-Z0-9-()\\_]+.#'",
          "6:     - '#Call to an undefined static method Uasoft\\\\Badaso\\\\Models\\\\DataType::[a-zA-Z0-9-()\\_]+.#'",
          "7:     - '#Call to an undefined static method Uasoft\\\\Badaso\\\\Facades\\\\Badaso::[a-zA-Z0-9-()\\_]+.#'",
          "8:     - '#Call to an undefined static method Uasoft\\\\Badaso\\\\Models\\\\DataRow::[a-zA-Z0-9-()\\_]+.#'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6:     - '#Call to an undefined static method Uasoft\\\\Badaso\\\\Models\\\\UserVerification::[a-zA-Z0-9-()\\_]+.#'",
          "7:     - '#Call to an undefined static method Uasoft\\\\Badaso\\\\Models\\\\PasswordReset::[a-zA-Z0-9-()\\_]+.#'",
          "8:     - '#Call to an undefined static method Uasoft\\\\Badaso\\\\Models\\\\EmailReset::[a-zA-Z0-9-()\\_]+.#'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "18:     - '#Call to an undefined static method Uasoft\\\\Badaso\\\\Database\\\\Schema\\\\SchemaManager::[a-zA-Z0-9-()\\_]+.#'",
          "19:     - '#Call to an undefined static method Illuminate\\\\Support\\\\Facades\\\\DB::[a-zA-Z0-9-()\\_]+.#'",
          "20:     - '#Call to an undefined static method Illuminate\\\\Support\\\\Facades\\\\Redis::[a-zA-Z0-9-()\\_]+.#'",
          "23:     - '#Call to static method [a-zA-Z0-9-()\\_]+ on an unknown class Route.#'",
          "24:     - '#Result of method [a-zA-Z0-9\\\\_]+::[a-zA-Z0-9-()\\_]+ [a-zA-Z0-9-()\\_]+ is used.#'",
          "25:     - '#Method [a-zA-Z0-9\\\\_]+::[a-zA-Z0-9-()\\_]+ should return int but return statement is missing.#'",
          "26:     - '#Call to sprintf contains 1 placeholder, 0 values given.#'",
          "27:     - '#Call to static method debug[()]+ on an unknown class Log.#'",
          "28:     - '#Call to static method first[()]+ on an unknown class Uasoft\\\\Badaso\\\\Models\\\\FirebaseServices.#'",
          "29:     - '#Call to static method user[()]+ on an unknown class JWTAuth.#'",
          "",
          "[Removed Lines]",
          "21:     - '#Class App\\\\Http\\\\Controllers\\\\Controller not found.#'",
          "22:     - '#Parameter \\$test_case of method Uasoft\\\\Badaso\\\\Helpers\\\\CallHelperTest::[a-zA-Z0-9-()\\_]+ has invalid type Tests\\\\TestCase.#'",
          "",
          "[Added Lines]",
          "28:     - '#Variable \\$custom_permissions might not be defined.#'",
          "",
          "---------------"
        ],
        "phpstan.neon.dist||phpstan.neon.dist": [
          "File: phpstan.neon.dist -> phpstan.neon.dist",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: parameters:",
          "5:     paths:",
          "6:         - src",
          "8:     level: 1",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7:         - tests",
          "",
          "---------------"
        ],
        "src/Helpers/MigrationParser.php||src/Helpers/MigrationParser.php": [
          "File: src/Helpers/MigrationParser.php -> src/Helpers/MigrationParser.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "182:     public static function getAlterMigrationRelationshipSchemaUp($name, $relations)",
          "183:     {",
          "185:         if (implode(PHP_EOL.chr(9).chr(9).chr(9), self::getAlterMigrationRelationshipUp($relations)) !== '') {",
          "186:             return sprintf(self::ALTER_WRAPPER,",
          "187:                 $name['current_name'],",
          "",
          "[Removed Lines]",
          "184:         dd(\"ALSJLKASD\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "07c41e3fa0eec560f1dfc61729d01378a63db5c6",
      "candidate_info": {
        "commit_hash": "07c41e3fa0eec560f1dfc61729d01378a63db5c6",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/07c41e3fa0eec560f1dfc61729d01378a63db5c6",
        "files": [
          "src/Commands/BadasoSetup.php",
          "src/Config/badaso.php",
          "src/Config/lfm.php",
          "src/Controllers/BadasoConfigurationsController.php",
          "src/Controllers/BadasoFileController.php",
          "src/Helpers/HandleFile.php",
          "src/Migrations/2020_11_12_000000_create_badaso_users_table.php",
          "src/Providers/BadasoServiceProvider.php",
          "src/Routes/api.php",
          "src/Seeder/Configurations/ConfigurationsSeeder.php",
          "src/resources/js/api/modules/badaso-file.js",
          "src/resources/js/apps/App.vue",
          "src/resources/js/assets/scss/module/_upload-file-multiple.scss",
          "src/resources/js/assets/scss/module/_upload-file.scss",
          "src/resources/js/assets/scss/module/_upload-image-multiple.scss",
          "src/resources/js/assets/scss/module/_upload-image.scss",
          "src/resources/js/components/BadasoUploadFile.vue",
          "src/resources/js/components/BadasoUploadFileMultiple.vue",
          "src/resources/js/components/BadasoUploadImage.vue",
          "src/resources/js/components/BadasoUploadImageMultiple.vue",
          "src/resources/js/store/modules/badaso.js",
          "src/resources/views/mail/email-verification.blade.php",
          "src/resources/views/mail/forgot-password.blade.php"
        ],
        "message": "Update lfm",
        "before_after_code_files": [
          "src/Commands/BadasoSetup.php||src/Commands/BadasoSetup.php",
          "src/Config/badaso.php||src/Config/badaso.php",
          "src/Config/lfm.php||src/Config/lfm.php",
          "src/Controllers/BadasoConfigurationsController.php||src/Controllers/BadasoConfigurationsController.php",
          "src/Controllers/BadasoFileController.php||src/Controllers/BadasoFileController.php",
          "src/Helpers/HandleFile.php||src/Helpers/HandleFile.php",
          "src/Migrations/2020_11_12_000000_create_badaso_users_table.php||src/Migrations/2020_11_12_000000_create_badaso_users_table.php",
          "src/Providers/BadasoServiceProvider.php||src/Providers/BadasoServiceProvider.php",
          "src/Routes/api.php||src/Routes/api.php",
          "src/Seeder/Configurations/ConfigurationsSeeder.php||src/Seeder/Configurations/ConfigurationsSeeder.php",
          "src/resources/js/api/modules/badaso-file.js||src/resources/js/api/modules/badaso-file.js",
          "src/resources/js/apps/App.vue||src/resources/js/apps/App.vue",
          "src/resources/js/assets/scss/module/_upload-file-multiple.scss||src/resources/js/assets/scss/module/_upload-file-multiple.scss",
          "src/resources/js/assets/scss/module/_upload-file.scss||src/resources/js/assets/scss/module/_upload-file.scss",
          "src/resources/js/assets/scss/module/_upload-image-multiple.scss||src/resources/js/assets/scss/module/_upload-image-multiple.scss",
          "src/resources/js/assets/scss/module/_upload-image.scss||src/resources/js/assets/scss/module/_upload-image.scss",
          "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue",
          "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue",
          "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue",
          "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue",
          "src/resources/js/store/modules/badaso.js||src/resources/js/store/modules/badaso.js",
          "src/resources/views/mail/email-verification.blade.php||src/resources/views/mail/email-verification.blade.php",
          "src/resources/views/mail/forgot-password.blade.php||src/resources/views/mail/forgot-password.blade.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [
            "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue",
            "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue",
            "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue",
            "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue"
          ],
          "candidate": [
            "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue",
            "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue",
            "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue",
            "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue"
          ]
        }
      },
      "candidate_diff": {
        "src/Commands/BadasoSetup.php||src/Commands/BadasoSetup.php": [
          "File: src/Commands/BadasoSetup.php -> src/Commands/BadasoSetup.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "98:         $decoded_json['dependencies']['@johmun/vue-tags-input'] = '^2.1.0';",
          "99:         $decoded_json['dependencies']['@tinymce/tinymce-vue'] = '^3';",
          "100:         $decoded_json['dependencies']['chart.js'] = '^2.8.0';",
          "101:         $decoded_json['dependencies']['firebase'] = '^8.4.2';",
          "102:         $decoded_json['dependencies']['jspdf'] = '^2.3.1';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "100:         $decoded_json['dependencies']['body-scroll-lock'] = '^4.0.0-beta.0';",
          "",
          "---------------"
        ],
        "src/Config/badaso.php||src/Config/badaso.php": [
          "File: src/Config/badaso.php -> src/Config/badaso.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:         'description' => 'Badaso Progressive Web App ',",
          "40:         'icons' => [",
          "41:             [",
          "43:                 'sizes' => '144x144',",
          "44:                 'type' => 'image/png',",
          "45:             ],",
          "46:             [",
          "48:                 'sizes' => '192x192',",
          "49:                 'type' => 'image/png',",
          "50:             ],",
          "51:             [",
          "53:                 'sizes' => '512x512',",
          "54:                 'type' => 'image/png',",
          "55:             ],",
          "",
          "[Removed Lines]",
          "42:                 'src' => '/storage/files/shares/logo-144px.png',",
          "47:                 'src' => '/storage/files/shares/logo-192px.png',",
          "52:                 'src' => '/storage/files/shares/logo-512px.png',",
          "",
          "[Added Lines]",
          "42:                 'src' => '/storage/photos/shares/logo-144px.png',",
          "47:                 'src' => '/storage/photos/shares/logo-192px.png',",
          "52:                 'src' => '/storage/photos/shares/logo-512px.png',",
          "",
          "---------------"
        ],
        "src/Config/lfm.php||src/Config/lfm.php": [
          "File: src/Config/lfm.php -> src/Config/lfm.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:             'startup_view' => 'list',",
          "54:             'max_size' => 50000, // size in KB",
          "55:             'valid_mime' => [",
          "61:                 'application/pdf',",
          "62:                 'text/plain',",
          "63:             ],",
          "",
          "[Removed Lines]",
          "56:                 'image/jpeg',",
          "57:                 'image/pjpeg',",
          "58:                 'image/png',",
          "59:                 'image/gif',",
          "60:                 'image/svg+xml',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoConfigurationsController.php||src/Controllers/BadasoConfigurationsController.php": [
          "File: src/Controllers/BadasoConfigurationsController.php -> src/Controllers/BadasoConfigurationsController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "130:             if (! is_null($configuration)) {",
          "131:                 $configuration->key = $request->key;",
          "132:                 $configuration->display_name = $request->display_name;",
          "142:                 $configuration->details = $request->details;",
          "143:                 $configuration->type = $request->type;",
          "144:                 $configuration->order = $request->order;",
          "",
          "[Removed Lines]",
          "133:                 if (in_array($request->type, ['upload_image', 'upload_file'])) {",
          "134:                     $uploaded_path = $this->handleUploadFiles([$request->value]);",
          "135:                     $configuration->value = implode(',', $uploaded_path);",
          "136:                 } elseif (in_array($request->type, ['upload_image_multiple', 'upload_file_multiple'])) {",
          "137:                     $uploaded_path = $this->handleUploadFiles($request->value);",
          "138:                     $configuration->value = implode(',', $uploaded_path);",
          "139:                 } else {",
          "140:                     $configuration->value = $request->value;",
          "141:                 }",
          "",
          "[Added Lines]",
          "133:                 $configuration->value = $request->value;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "172:                 if (! is_null($configuration)) {",
          "173:                     $updated_configuration->key = $configuration['key'];",
          "174:                     $updated_configuration->display_name = $configuration['display_name'];",
          "184:                     $updated_configuration->details = json_encode($configuration['details']);",
          "185:                     $updated_configuration->type = $configuration['type'];",
          "186:                     $updated_configuration->order = $configuration['order'];",
          "",
          "[Removed Lines]",
          "175:                     if (in_array($configuration['type'], ['upload_image', 'upload_file'])) {",
          "176:                         $uploaded_path = $this->handleUploadFiles([$configuration['value']]);",
          "177:                         $updated_configuration->value = implode(',', $uploaded_path);",
          "178:                     } elseif (in_array($configuration['type'], ['upload_image_multiple', 'upload_file_multiple'])) {",
          "179:                         $uploaded_path = $this->handleUploadFiles($configuration['value']);",
          "180:                         $updated_configuration->value = implode(',', $uploaded_path);",
          "181:                     } else {",
          "182:                         $updated_configuration->value = $configuration['value'];",
          "183:                     }",
          "",
          "[Added Lines]",
          "167:                     $updated_configuration->value = $configuration['value'];",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoFileController.php||src/Controllers/BadasoFileController.php": [
          "File: src/Controllers/BadasoFileController.php -> src/Controllers/BadasoFileController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:         return ApiResponse::success(json_decode(json_encode($file)));",
          "69:     }",
          "70: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71:     public function availableMimetype()",
          "72:     {",
          "73:         return ApiResponse::success(config('lfm.folder_categories'));",
          "74:     }",
          "",
          "---------------"
        ],
        "src/Helpers/HandleFile.php||src/Helpers/HandleFile.php": [
          "File: src/Helpers/HandleFile.php -> src/Helpers/HandleFile.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:             );",
          "40:         }",
          "42:         return $val;",
          "43:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42:         if (Str::contains($val, config('lfm.folder_categories.image.folder_name').'/')) {",
          "43:             return str_replace(",
          "44:                 config('lfm.folder_categories.image.folder_name').'/',",
          "45:                 Storage::url('/').config('lfm.folder_categories.image.folder_name').'/',",
          "46:                 $val",
          "47:             );",
          "48:         }",
          "",
          "---------------"
        ],
        "src/Migrations/2020_11_12_000000_create_badaso_users_table.php||src/Migrations/2020_11_12_000000_create_badaso_users_table.php": [
          "File: src/Migrations/2020_11_12_000000_create_badaso_users_table.php -> src/Migrations/2020_11_12_000000_create_badaso_users_table.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:             $table->string('name');",
          "19:             $table->string('email')->unique();",
          "20:             $table->text('additional_info')->nullable();",
          "22:             $table->timestamp('email_verified_at')->nullable();",
          "23:             $table->string('password');",
          "24:             $table->rememberToken();",
          "",
          "[Removed Lines]",
          "21:             $table->string('avatar')->nullable()->default('files/shares/default-user.png');",
          "",
          "[Added Lines]",
          "21:             $table->string('avatar')->nullable()->default('photos/shares/default-user.png');",
          "",
          "---------------"
        ],
        "src/Providers/BadasoServiceProvider.php||src/Providers/BadasoServiceProvider.php": [
          "File: src/Providers/BadasoServiceProvider.php -> src/Providers/BadasoServiceProvider.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:             __DIR__.'/../Config/backup.php' => config_path('backup.php'),",
          "50:             __DIR__.'/../Seeder/Configurations' => database_path('seeders/Badaso'),",
          "51:             __DIR__.'/../Seeder/CRUD' => database_path('seeders/Badaso/CRUD'),",
          "53:             __DIR__.'/../Seeder/ManualGenerate' => database_path('seeders/Badaso/ManualGenerate'),",
          "54:             __DIR__.'/../resources/customization/' => resource_path('js/badaso'),",
          "55:             __DIR__.'/../resources/lang' => resource_path('lang/vendor/badaso'),",
          "",
          "[Removed Lines]",
          "52:             __DIR__.'/../Images/badaso-images/' => storage_path('app/public/files/shares'),",
          "",
          "[Added Lines]",
          "52:             __DIR__.'/../Images/badaso-images/' => storage_path('app/public/photos/shares'),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "85:         $this->publishes([",
          "86:             __DIR__.'/../resources/customization/' => resource_path('js/badaso'),",
          "88:             __DIR__.'/../resources/views/vendor' => resource_path('views/vendor'),",
          "90:         ], 'BadasoResource');",
          "",
          "[Removed Lines]",
          "87:             __DIR__.'/../Images/badaso-images/' => storage_path('app/public/files/shares'),",
          "",
          "[Added Lines]",
          "87:             __DIR__.'/../Images/badaso-images/' => storage_path('app/public/photos/shares'),",
          "",
          "---------------"
        ],
        "src/Routes/api.php||src/Routes/api.php": [
          "File: src/Routes/api.php -> src/Routes/api.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:             Route::get('/browse/lfm', 'BadasoFileController@browseFileUsingLfm');",
          "55:             Route::post('/upload/lfm', 'BadasoFileController@uploadFileUsingLfm');",
          "56:             Route::get('/delete/lfm', 'BadasoFileController@deleteFileUsingLfm');",
          "57:         });",
          "59:         Route::group(['prefix' => 'configurations'], function () {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57:             Route::get('/mimetypes', 'BadasoFileController@availableMimetype');",
          "",
          "---------------"
        ],
        "src/Seeder/Configurations/ConfigurationsSeeder.php||src/Seeder/Configurations/ConfigurationsSeeder.php": [
          "File: src/Seeder/Configurations/ConfigurationsSeeder.php -> src/Seeder/Configurations/ConfigurationsSeeder.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:                     'id' => 3,",
          "47:                     'key' => 'adminPanelLogo',",
          "48:                     'display_name' => 'Admin Panel Logo',",
          "50:                     'details' => '{\"type\":\"shares-only\"}',",
          "51:                     'type' => 'upload_image',",
          "52:                     'order' => 3,",
          "",
          "[Removed Lines]",
          "49:                     'value' => 'files/shares/logo.webp',",
          "",
          "[Added Lines]",
          "49:                     'value' => 'photos/shares/logo.webp',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "101:                     'id' => 8,",
          "102:                     'key' => 'favicon',",
          "103:                     'display_name' => 'Favicon',",
          "105:                     'details' => '{\"type\":\"shares-only\"}',",
          "106:                     'type' => 'upload_image',",
          "107:                     'order' => 7,",
          "",
          "[Removed Lines]",
          "104:                     'value' => 'files/shares/favicon.png',",
          "",
          "[Added Lines]",
          "104:                     'value' => 'photos/shares/favicon.png',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "123:                     'id' => 10,",
          "124:                     'key' => 'authBackgroundImage',",
          "125:                     'display_name' => 'Background image for login page.',",
          "127:                     'details' => 'Admin still can access the dashboard.',",
          "128:                     'type' => 'upload_image',",
          "129:                     'order' => 9,",
          "",
          "[Removed Lines]",
          "126:                     'value' => 'files/shares/auth-bg.jpg',",
          "",
          "[Added Lines]",
          "126:                     'value' => 'photos/shares/auth-bg.jpg',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "134:                     'id' => 11,",
          "135:                     'key' => 'maintenanceImage',",
          "136:                     'display_name' => 'Image for maintenance page',",
          "138:                     'details' => '{\"type\":\"shares-only\"}',",
          "139:                     'type' => 'upload_image',",
          "140:                     'order' => 10,",
          "",
          "[Removed Lines]",
          "137:                     'value' => 'files/shares/maintenance.png',",
          "",
          "[Added Lines]",
          "137:                     'value' => 'photos/shares/maintenance.png',",
          "",
          "---------------"
        ],
        "src/resources/js/api/modules/badaso-file.js||src/resources/js/api/modules/badaso-file.js": [
          "File: src/resources/js/api/modules/badaso-file.js -> src/resources/js/api/modules/badaso-file.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "48:     let qs = QueryString(data);",
          "49:     let url = ep + qs;",
          "50:     return resource.get(url);",
          "52: };",
          "",
          "[Removed Lines]",
          "51:   }",
          "",
          "[Added Lines]",
          "51:   },",
          "53:   browseConfiguration(data = {}) {",
          "54:     let ep = apiPrefix + \"/v1/file/mimetypes\";",
          "55:     let qs = QueryString(data);",
          "56:     let url = ep + qs;",
          "57:     return resource.get(url);",
          "58:   },",
          "",
          "---------------"
        ],
        "src/resources/js/apps/App.vue||src/resources/js/apps/App.vue": [
          "File: src/resources/js/apps/App.vue -> src/resources/js/apps/App.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:   mounted() {",
          "74:     this.$i18n.locale = this.getSelectedLocale.key;",
          "75:     this.$store.commit(\"badaso/FETCH_CONFIGURATION\");",
          "76:   },",
          "77:   beforeMount() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:     this.$store.commit(\"badaso/FETCH_FILE_CONFIGURATION\");",
          "",
          "---------------"
        ],
        "src/resources/js/assets/scss/module/_upload-file-multiple.scss||src/resources/js/assets/scss/module/_upload-file-multiple.scss": [
          "File: src/resources/js/assets/scss/module/_upload-file-multiple.scss -> src/resources/js/assets/scss/module/_upload-file-multiple.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:       display: none;",
          "14:     }",
          "15:   }",
          "17:   &__popup {",
          "18:     &--bottom-bar {",
          "20:       grid-row: 3/4;",
          "21:       display: flex;",
          "22:       align-items: center;",
          "",
          "[Removed Lines]",
          "19:       grid-column: 1/3;",
          "",
          "[Added Lines]",
          "17:   &__menu {",
          "18:     &--disabled {",
          "19:       opacity: 0.25;",
          "20:       pointer-events: none;",
          "21:       cursor: not-allowed;",
          "22:     }",
          "23:   }",
          "27:       grid-column: 2/3;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27:     &--left-bar {",
          "28:       grid-column: 1/2;",
          "29:       display: flex;",
          "30:       flex-direction: column;",
          "31:       list-style-type: none;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37:       grid-row: 2/4;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "55:       column-gap: 8px;",
          "56:       row-gap: 8px;",
          "57:       padding: 8px;",
          "59:       overflow-y: auto;",
          "60:       place-content: baseline;",
          "61:     }",
          "63:     &--top-bar {",
          "",
          "[Removed Lines]",
          "58:       grid-template-columns: repeat(4, 1fr);",
          "",
          "[Added Lines]",
          "67:       grid-template-columns: repeat(6, 1fr);",
          "70:       overflow-x: hidden;",
          "71:       width: 100%;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "71:   }",
          "73:   &__popup-button {",
          "74:     &--delete {",
          "75:       margin-right: 0.5rem !important;",
          "76:     }",
          "78:     &--footer {",
          "79:       margin-right: 5px;",
          "80:     }",
          "81:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "85:     &:first-of-type {",
          "86:       margin-right: 8px;",
          "87:     }",
          "95:       width: 100%;",
          "96:       display: flex;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "165:   &__popup-file-text {",
          "166:     color: #06bbd3;",
          "168:     margin-bottom: 0px;",
          "169:   }",
          "171:   &__popup-file {",
          "",
          "[Removed Lines]",
          "167:     font-size: 18px;",
          "",
          "[Added Lines]",
          "184:     font-size: 16px;",
          "186:     text-align: center;",
          "187:     word-break: break-all;",
          "188:     word-wrap: break-word;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "183:     -ms-user-select: none;",
          "184:     user-select: none;",
          "185:     cursor: pointer;",
          "187:     &.active {",
          "188:       border: 4px solid #06bbd3;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "206:     padding: 0 16px;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "193:       width: 100% !important;",
          "194:     }",
          "195:   }",
          "196: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "218:   &__popup-file-container {",
          "219:     aspect-ratio: 1/1;",
          "220:   }",
          "",
          "---------------"
        ],
        "src/resources/js/assets/scss/module/_upload-file.scss||src/resources/js/assets/scss/module/_upload-file.scss": [
          "File: src/resources/js/assets/scss/module/_upload-file.scss -> src/resources/js/assets/scss/module/_upload-file.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:     }",
          "15:   }",
          "17:   &__popup {",
          "18:     &--bottom-bar {",
          "20:       grid-row: 3/4;",
          "21:       display: flex;",
          "22:       align-items: center;",
          "",
          "[Removed Lines]",
          "19:       grid-column: 1/3;",
          "",
          "[Added Lines]",
          "17:   &__menu {",
          "18:     &--disabled {",
          "19:       opacity: 0.25;",
          "20:       pointer-events: none;",
          "21:       cursor: not-allowed;",
          "22:     }",
          "23:   }",
          "27:       grid-column: 2/3;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27:     &--left-bar {",
          "28:       grid-column: 1/2;",
          "29:       display: flex;",
          "30:       flex-direction: column;",
          "31:       list-style-type: none;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37:       grid-row: 2/4;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "55:       column-gap: 8px;",
          "56:       row-gap: 8px;",
          "57:       padding: 8px;",
          "59:       overflow-y: auto;",
          "60:       place-content: baseline;",
          "61:     }",
          "63:     &--top-bar {",
          "",
          "[Removed Lines]",
          "58:       grid-template-columns: repeat(4, 1fr);",
          "",
          "[Added Lines]",
          "67:       grid-template-columns: repeat(6, 1fr);",
          "70:       overflow-x: hidden;",
          "71:       width: 100%;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "71:   }",
          "73:   &__popup-button {",
          "74:     &--delete {",
          "75:       margin-right: 0.5rem !important;",
          "76:     }",
          "78:     &--footer {",
          "79:       margin-right: 5px;",
          "80:     }",
          "81:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "85:     &:first-of-type {",
          "86:       margin-right: 8px;",
          "87:     }",
          "95:       width: 100%;",
          "96:       display: flex;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "165:   &__popup-file-text {",
          "166:     color: #06bbd3;",
          "168:     margin-bottom: 0px;",
          "169:   }",
          "171:   &__popup-file {",
          "",
          "[Removed Lines]",
          "167:     font-size: 18px;",
          "",
          "[Added Lines]",
          "184:     font-size: 16px;",
          "186:     text-align: center;",
          "187:     word-break: break-all;",
          "188:     word-wrap: break-word;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "183:     -ms-user-select: none;",
          "184:     user-select: none;",
          "185:     cursor: pointer;",
          "187:     &.active {",
          "188:       border: 4px solid #06bbd3;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "206:     padding: 0 16px;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "193:       width: 100% !important;",
          "194:     }",
          "195:   }",
          "196: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "218:   &__popup-file-container {",
          "219:     aspect-ratio: 1/1;",
          "220:   }",
          "",
          "---------------"
        ],
        "src/resources/js/assets/scss/module/_upload-image-multiple.scss||src/resources/js/assets/scss/module/_upload-image-multiple.scss": [
          "File: src/resources/js/assets/scss/module/_upload-image-multiple.scss -> src/resources/js/assets/scss/module/_upload-image-multiple.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:     }",
          "15:   }",
          "17:   &__popup {",
          "18:     &--bottom-bar {",
          "20:       grid-row: 3/4;",
          "21:       display: flex;",
          "22:       align-items: center;",
          "",
          "[Removed Lines]",
          "19:       grid-column: 1/3;",
          "",
          "[Added Lines]",
          "17:   &__menu {",
          "18:     &--disabled {",
          "19:       opacity: 0.25;",
          "20:       pointer-events: none;",
          "21:       cursor: not-allowed;",
          "22:     }",
          "23:   }",
          "27:       grid-column: 2/3;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27:     &--left-bar {",
          "28:       grid-column: 1/2;",
          "29:       display: flex;",
          "30:       flex-direction: column;",
          "31:       list-style-type: none;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37:       grid-row: 2/4;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "55:       column-gap: 8px;",
          "56:       row-gap: 8px;",
          "57:       padding: 8px;",
          "59:       overflow-y: auto;",
          "60:       place-content: baseline;",
          "62:       &.badaso-upload-image-multiple__popup--url-bar {",
          "63:         grid-template-columns: 1fr;",
          "",
          "[Removed Lines]",
          "58:       grid-template-columns: repeat(4, 1fr);",
          "",
          "[Added Lines]",
          "67:       grid-template-columns: repeat(6, 1fr);",
          "70:       overflow-x: hidden;",
          "71:       width: 100%;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "76:   }",
          "78:   &__popup-button {",
          "79:     &--delete {",
          "80:       margin-right: 0.5rem !important;",
          "81:     }",
          "83:     &--footer {",
          "84:       margin-right: 5px;",
          "85:     }",
          "86:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "90:     &:first-of-type {",
          "91:       margin-right: 8px;",
          "92:     }",
          "100:       width: 100%;",
          "101:       display: flex;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "142:   &__preview-image {",
          "143:     width: 100%;",
          "144:   }",
          "146:   &__remove-button {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "161:     display: block;",
          "",
          "---------------"
        ],
        "src/resources/js/assets/scss/module/_upload-image.scss||src/resources/js/assets/scss/module/_upload-image.scss": [
          "File: src/resources/js/assets/scss/module/_upload-image.scss -> src/resources/js/assets/scss/module/_upload-image.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:   &__popup {",
          "26:     &--bottom-bar {",
          "28:       grid-row: 3/4;",
          "29:       display: flex;",
          "30:       align-items: center;",
          "",
          "[Removed Lines]",
          "27:       grid-column: 1/3;",
          "",
          "[Added Lines]",
          "27:       grid-column: 2/3;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "35:     &--left-bar {",
          "36:       grid-column: 1/2;",
          "37:       display: flex;",
          "38:       flex-direction: column;",
          "39:       list-style-type: none;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37:       grid-row: 2/4;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "63:       column-gap: 8px;",
          "64:       row-gap: 8px;",
          "65:       padding: 8px;",
          "67:       overflow-y: auto;",
          "68:       place-content: baseline;",
          "70:       &.badaso-upload-image__popup--url-bar {",
          "71:         grid-template-columns: 1fr;",
          "",
          "[Removed Lines]",
          "66:       grid-template-columns: repeat(4, 1fr);",
          "",
          "[Added Lines]",
          "67:       grid-template-columns: repeat(6, 1fr);",
          "70:       overflow-x: hidden;",
          "71:       width: 100%;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "84:   }",
          "86:   &__popup-button {",
          "87:     &--delete {",
          "88:       margin-right: 0.5rem !important;",
          "89:     }",
          "91:     &--footer {",
          "92:       margin-right: 5px;",
          "93:     }",
          "94:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "90:     &:first-of-type {",
          "91:       margin-right: 8px;",
          "92:     }",
          "100:       width: 100%;",
          "101:       display: flex;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "150:   &__preview-image {",
          "151:     width: 100%;",
          "152:   }",
          "154:   &__remove-button {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "161:     display: block;",
          "",
          "---------------"
        ],
        "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue": [
          "File: src/resources/js/components/BadasoUploadFile.vue -> src/resources/js/components/BadasoUploadFile.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <template>",
          "2:   <vs-col :vs-lg=\"size\" vs-xs=\"12\" class=\"badaso-upload-file__container\">",
          "5:       <vs-col vs-lg=\"4\" vs-sm=\"12\">",
          "8:           <div class=\"badaso-upload-file__preview-text\">",
          "10:           </div>",
          "11:         </div>",
          "12:       </vs-col>",
          "13:     </vs-row>",
          "15:       <div class=\"badaso-upload-file__popup-container\">",
          "16:         <div class=\"badaso-upload-file__popup--top-bar\">",
          "17:           <h3>{{ $t(\"fileManager.title\") }}</h3>",
          "18:           <vs-spacer />",
          "20:             <vs-icon icon=\"delete\"></vs-icon>",
          "21:           </vs-button>",
          "22:         </div>",
          "23:         <ul class=\"badaso-upload-file__popup--left-bar\">",
          "25:             Private",
          "26:           </li>",
          "28:             Shares",
          "29:           </li>",
          "30:         </ul>",
          "31:         <div class=\"badaso-upload-file__popup--right-bar\">",
          "34:           </div>",
          "39:             </div>",
          "40:           </div>",
          "41:         </div>",
          "42:         <div class=\"badaso-upload-file__popup--bottom-bar\">",
          "43:           <div class=\"badaso-upload-file__popup-button--footer\">",
          "45:               {{ $t(\"button.submit\") }}",
          "46:             </vs-button>",
          "48:               {{ $t(\"button.close\") }}",
          "49:             </vs-button>",
          "50:           </div>",
          "51:         </div>",
          "52:       </div>",
          "53:     </div>",
          "67:       <p>{{ $t(\"action.delete.text\") }}</p>",
          "68:       <div class=\"badaso-upload-file__popup-dialog-content--delete\">",
          "75:       </div>",
          "76:     </vs-popup>",
          "77:   </vs-col>",
          "78: </template>",
          "80: <script>",
          "82: export default {",
          "83:   name: \"BadasoUploadFile\",",
          "84:   props: {",
          "85:     size: {",
          "87:       default: \"12\",",
          "88:     },",
          "89:     label: {",
          "",
          "[Removed Lines]",
          "3:     <vs-input :label=\"label\" :placeholder=\"placeholder\" @click=\"showOverlay\" v-on:keyup.space=\"showOverlay\" readonly v-model=\"fileData\" icon=\"attach_file\" icon-after=\"true\" />",
          "4:     <vs-row>",
          "6:         <div class=\"badaso-upload-file__preview\" v-if=\"isString(value) && value !== ''\">",
          "7:           <vs-button class=\"badaso-upload-file__remove-button\" color=\"danger\" icon=\"close\" @click=\"deleteFilePicked(value)\" />",
          "9:             <a target=\"_blank\" :href=\"`${$api.badasoFile.download(value)}`\">{{ value.split(\"/\").reverse()[0] }}</a>",
          "14:     <div class=\"badaso-upload-file__popup-dialog\" tabindex=\"0\" v-if=\"show\">",
          "19:           <vs-button color=\"danger\" type=\"relief\" class=\"badaso-upload-file__popup-button--delete\" v-if=\"getSelected !== 'url' && isFileSelected\" @click=\"openDialog\">",
          "24:           <li :class=\"[getSelected === 'private' ? 'active' : '']\" @click=\"selected = 'private'\" v-if=\"privateOnly || (!privateOnly && !sharesOnly)\" >",
          "27:           <li :class=\"[getSelected === 'shares' ? 'active' : '']\" @click=\"selected = 'shares'\" v-if=\"sharesOnly || (!sharesOnly && !privateOnly)\" >",
          "32:           <div class=\"badaso-upload-file__popup-add-file\" @click=\"pickFile\">",
          "33:             <vs-icon icon=\"add\" color=\"#06bbd3\" size=\"75px\"></vs-icon>",
          "35:           <div v-for=\"(item, index) in files.items\" :key=\"index\" @click=\"activeFile = index; isFileSelected = true\">",
          "36:             <div :class=\"[activeFile === index ? 'active' : '', 'badaso-upload-file__popup-file']\">",
          "37:               <vs-icon icon=\"insert_drive_file\" size=\"45px\" color=\"#06bbd3\"></vs-icon>",
          "38:               <p class=\"badaso-upload-file__popup-file-text\">{{ item.name }}</p>",
          "44:             <vs-button color=\"primary\" type=\"relief\" @click=\"emitInput\" :disabled=\"isSubmitDisable\">",
          "47:             <vs-button color=\"danger\" type=\"relief\" @click=\"closeOverlay\">",
          "54:     <input type=\"file\" class=\"badaso-upload-file__input--hidden\" ref=\"file\" @change=\"onFilePicked\" />",
          "55:     <div v-if=\"additionalInfo\" v-html=\"additionalInfo\"></div>",
          "56:     <div v-if=\"alert\">",
          "57:       <div v-if=\"$helper.isArray(alert)\">",
          "58:         <span class=\"badaso-upload-file__input--error\" v-for=\"(info, index) in alert\" :key=\"index\">",
          "59:           {{ info }}",
          "60:         </span>",
          "61:       </div>",
          "62:       <div v-else>",
          "63:         <span class=\"badaso-upload-file__input--error\" v-html=\"alert\"></span>",
          "64:       </div>",
          "65:     </div>",
          "66:     <vs-popup :title=\"$t('action.delete.title')\" :active.sync=\"dialog\" class=\"badaso-upload-file__popup-dialog--delete\">",
          "69:         <vs-button color=\"primary\" type=\"relief\" @click=\"dialog = false\">{{",
          "70:           $t(\"action.delete.cancel\")",
          "71:         }}</vs-button>",
          "72:         <vs-button color=\"danger\" type=\"relief\" @click=\"deleteFile\">{{",
          "73:           $t(\"action.delete.accept\")",
          "74:         }}</vs-button>",
          "81: import * as _ from \"lodash\"",
          "86:       type: String,",
          "",
          "[Added Lines]",
          "3:     <vs-input",
          "4:       :label=\"label\"",
          "5:       :placeholder=\"placeholder\"",
          "6:       @click=\"openFileManager\"",
          "7:       v-on:keyup.space=\"openFileManager\"",
          "8:       readonly",
          "9:       v-model=\"value\"",
          "10:       icon=\"attach_file\"",
          "11:       icon-after=\"true\"",
          "12:     />",
          "13:     <input",
          "14:       type=\"file\"",
          "15:       class=\"badaso-upload-file__input--hidden\"",
          "16:       ref=\"file\"",
          "17:       :accept=\"availableMimetypes.file.validMime.join(',')\"",
          "18:       @change=\"onFilePicked\"",
          "19:     />",
          "20:     <div v-if=\"additionalInfo\" v-html=\"additionalInfo\"></div>",
          "21:     <div v-if=\"alert\">",
          "22:       <div v-if=\"$helper.isArray(alert)\">",
          "23:         <span",
          "24:           class=\"badaso-upload-file__input--error\"",
          "25:           v-for=\"(info, index) in alert\"",
          "26:           :key=\"index\"",
          "27:         >",
          "28:           {{ info }}",
          "29:         </span>",
          "30:       </div>",
          "31:       <div v-else>",
          "32:         <span class=\"badaso-upload-file__input--error\" v-html=\"alert\"></span>",
          "33:       </div>",
          "34:     </div>",
          "35:     <vs-row v-if=\"hasValue\">",
          "37:         <div class=\"badaso-upload-file__preview\">",
          "38:           <vs-button",
          "39:             class=\"badaso-upload-file__remove-button\"",
          "40:             color=\"danger\"",
          "41:             icon=\"close\"",
          "42:             @click=\"$emit('input', null)\"",
          "43:           />",
          "45:             <a target=\"_blank\" :href=\"$api.badasoFile.download(value)\">",
          "46:               {{ value.split(\"/\").reverse()[0] | truncate }}",
          "47:             </a>",
          "53:     <div",
          "54:       class=\"badaso-upload-file__popup-dialog\"",
          "55:       tabindex=\"0\"",
          "56:       v-if=\"showFileManager\"",
          "57:     >",
          "62:           <vs-button",
          "63:             color=\"danger\"",
          "64:             type=\"relief\"",
          "65:             class=\"badaso-upload-file__popup-button--delete\"",
          "66:             v-if=\"model\"",
          "67:             @click=\"openDeleteDialog\"",
          "68:           >",
          "74:           <li",
          "75:             :class=\"{ active: getActiveTab === 'private' }\"",
          "76:             @click=\"setActiveTab('private')\"",
          "77:             v-if=\"privateOnly || (!privateOnly && !sharesOnly)\"",
          "78:           >",
          "81:           <li",
          "82:             :class=\"{ active: getActiveTab === 'shares' }\"",
          "83:             @click=\"setActiveTab('shares')\"",
          "84:             v-if=\"sharesOnly || (!sharesOnly && !privateOnly)\"",
          "85:           >",
          "91:           <div",
          "92:             class=\"badaso-upload-file__popup-add-file\"",
          "93:             @click=\"$refs.file.click()\"",
          "94:           >",
          "95:             <vs-icon icon=\"add\" color=\"#06bbd3\" size=\"40px\"></vs-icon>",
          "97:           <div",
          "98:             v-for=\"(file, index) in files\"",
          "99:             :key=\"index\"",
          "100:             @click=\"model = file.url\"",
          "101:             class=\"badaso-upload-file__popup-file-container\"",
          "102:           >",
          "103:             <div",
          "104:               :class=\"{",
          "105:                 active: model === file.url,",
          "106:                 'badaso-upload-file__popup-file': true,",
          "107:               }\"",
          "108:             >",
          "109:               <vs-icon",
          "110:                 icon=\"insert_drive_file\"",
          "111:                 size=\"45px\"",
          "112:                 color=\"#06bbd3\"",
          "113:               ></vs-icon>",
          "114:               <p class=\"badaso-upload-file__popup-file-text\">",
          "115:                 {{ file.name | truncate }}",
          "116:               </p>",
          "123:             <div>",
          "124:               <vs-pagination",
          "125:                 :total=\"Math.ceil(paginator.total / paginator.perPage)\"",
          "126:                 v-model=\"page\"",
          "127:                 :max=\"1\"",
          "128:               ></vs-pagination>",
          "129:             </div>",
          "130:             <vs-spacer />",
          "131:             <vs-button",
          "132:               color=\"primary\"",
          "133:               type=\"relief\"",
          "134:               @click=\"emitInput\"",
          "135:               :disabled=\"!model\"",
          "136:               class=\"badaso-upload-file__popup-button\"",
          "137:             >",
          "140:             <vs-button",
          "141:               color=\"danger\"",
          "142:               type=\"relief\"",
          "143:               @click=\"closeFileManager\"",
          "144:               class=\"badaso-upload-file__popup-button\"",
          "145:             >",
          "153:     <vs-popup",
          "154:       :title=\"$t('action.delete.title')\"",
          "155:       :active.sync=\"showDeleteFile\"",
          "156:       class=\"badaso-upload-file__popup-dialog--delete\"",
          "157:     >",
          "160:         <vs-button color=\"primary\" type=\"relief\" @click=\"closeDeleteDialog\">",
          "161:           {{ $t(\"action.delete.cancel\") }}",
          "162:         </vs-button>",
          "163:         <vs-button color=\"danger\" type=\"relief\" @click=\"deleteFile()\">",
          "164:           {{ $t(\"action.delete.accept\") }}",
          "165:         </vs-button>",
          "172: import { mapState } from \"vuex\";",
          "173: import * as _ from \"lodash\";",
          "174: import { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";",
          "179:       type: String | Number,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95:       default: \"Upload File\",",
          "96:     },",
          "97:     value: {",
          "100:     },",
          "101:     additionalInfo: {",
          "102:       type: String,",
          "",
          "[Removed Lines]",
          "98:       type: String,",
          "99:       default: \"\",",
          "",
          "[Added Lines]",
          "191:       default: null,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "115:   },",
          "116:   data() {",
          "117:     return {",
          "128:       files: [],",
          "130:     };",
          "131:   },",
          "133:     if (this.sharesOnly) {",
          "135:     }",
          "138:   },",
          "139:   computed: {",
          "143:     },",
          "147:     },",
          "150:     },",
          "154:       }",
          "158:       }",
          "161:     },",
          "166:         this.getFiles();",
          "169:     },",
          "174:     },",
          "179:     },",
          "185:     },",
          "190:     },",
          "191:     onFilePicked(e) {",
          "192:       const files = e.target.files;",
          "193:       if (files[0] !== undefined) {",
          "196:           return;",
          "197:         }",
          "202:       }",
          "203:     },",
          "229:     getFiles() {",
          "232:         this.$api.badasoFile",
          "233:           .browseUsingLfm({",
          "235:           })",
          "236:           .then((res) => {",
          "238:             if (error) {",
          "239:               this.$vs.notify({",
          "240:                 title: this.$t(\"alert.danger\"),",
          "",
          "[Removed Lines]",
          "118:       fileData: \"\",",
          "119:       dialog: false,",
          "120:       activeFile: 0,",
          "121:       show: false,",
          "122:       selected: \"private\",",
          "123:       files: {",
          "124:         display: \"\",",
          "125:         items: [],",
          "126:         paginator: {},",
          "127:       },",
          "129:       isFileSelected: false,",
          "132:   mounted() {",
          "134:       this.selected = \"shares\";",
          "137:     this.fileData = this.value;",
          "140:     getSelected() {",
          "141:       this.activeFile = null;",
          "142:       return this.selected;",
          "144:     getSelectedFolder() {",
          "145:       if (this.getSelected === \"shares\") return \"/shares\";",
          "146:       else return this.getUserFolder;",
          "148:     getUserFolder() {",
          "149:       return \"/\" + this.$store.state.badaso.user.id;",
          "151:     isSubmitDisable() {",
          "152:       if (!this.isFileSelected) {",
          "153:         return true;",
          "156:       if (this.activeFile === null) {",
          "157:         return true;",
          "160:       return false;",
          "162:   },",
          "163:   watch: {",
          "164:     selected: {",
          "165:       handler(val) {",
          "167:         this.isFileSelected = false;",
          "168:       },",
          "170:     value: {",
          "171:       handler(val) {",
          "172:         this.fileData = val;",
          "173:       },",
          "175:   },",
          "176:   methods: {",
          "177:     pickFile() {",
          "178:       this.$refs.file.click();",
          "180:     showOverlay() {",
          "181:       this.show = true;",
          "182:       document.body.style.setProperty(\"position\", \"fixed\");",
          "183:       document.body.style.setProperty(\"width\", \"100%\");",
          "184:       this.getFiles();",
          "186:     closeOverlay() {",
          "187:       this.show = false;",
          "188:       document.body.style.removeProperty(\"position\");",
          "189:       document.body.style.removeProperty(\"width\");",
          "194:         if (files[0].size > 512000) {",
          "195:           this.errorMessages = [\"Out of limit size\"];",
          "199:         this.files = files;",
          "201:         this.uploadFile();",
          "204:     uploadFile() {",
          "205:       const files = new FormData();",
          "206:       files.append(\"upload\", this.files[0]);",
          "207:       files.append(\"working_dir\", this.getSelectedFolder);",
          "208:       this.$api.badasoFile",
          "209:         .uploadUsingLfm(files)",
          "210:         .then((res) => {",
          "211:           let error = _.get(res, 'data.original.error', null)",
          "212:           if (error) {",
          "213:             this.$vs.notify({",
          "214:               title: this.$t(\"alert.danger\"),",
          "215:               text: error.message,",
          "216:               color: \"danger\",",
          "217:             });",
          "218:           }",
          "219:           this.getFiles();",
          "220:         })",
          "221:         .catch((error) => {",
          "222:           console.error(error);",
          "223:         });",
          "224:     },",
          "225:     isString(str) {",
          "226:       if (typeof str === \"string\" || str instanceof String) return true;",
          "227:       else return false;",
          "228:     },",
          "230:       this.files.items = [];",
          "231:       if (this.getSelectedFolder) {",
          "234:             workingDir: this.getSelectedFolder,",
          "237:             let error = _.get(res, 'data.original.error', null)",
          "",
          "[Added Lines]",
          "210:       showFileManager: false,",
          "211:       activeTab: \"private\",",
          "212:       showDeleteFile: false,",
          "213:       page: 1,",
          "215:       paginator: {",
          "216:         total: 1,",
          "217:         perPage: 30,",
          "218:       },",
          "219:       model: null,",
          "222:   filters: {",
          "223:     truncate(val) {",
          "224:       return _.truncate(val, {",
          "225:         length: 15,",
          "226:       });",
          "227:     },",
          "228:   },",
          "229:   watch: {",
          "230:     page: {",
          "231:       handler() {",
          "232:         this.getFiles();",
          "233:       },",
          "234:       immediate: false,",
          "235:     },",
          "236:   },",
          "237:   created() {",
          "239:       this.activeTab = \"shares\";",
          "243:     getActiveTab() {",
          "244:       return this.activeTab;",
          "246:     getActiveFolder() {",
          "247:       switch (this.getActiveTab) {",
          "248:         case \"url\":",
          "249:           return;",
          "250:         case \"shares\":",
          "251:           return \"/shares\";",
          "252:         default:",
          "253:           return `/${this.userId}`;",
          "254:       }",
          "256:     hasValue() {",
          "257:       return (",
          "258:         this.value !== null &&",
          "259:         this.value !== \"null\" &&",
          "260:         this.value !== \"\" &&",
          "261:         this.value !== \"[]\" &&",
          "262:         this.value !== \"{}\"",
          "263:       );",
          "265:     ...mapState({",
          "266:       userId(state) {",
          "267:         return state.badaso.user.id;",
          "268:       },",
          "269:       availableMimetypes(state) {",
          "270:         return state.badaso.availableMimetypes",
          "272:     }),",
          "273:   },",
          "274:   methods: {",
          "275:     resetState() {",
          "276:       this.showFileManager = false;",
          "277:       if (this.sharesOnly) {",
          "278:         this.activeTab = \"shares\";",
          "279:       } else {",
          "280:         this.activeTab = \"private\";",
          "281:       }",
          "282:       this.showDeleteFile = false;",
          "283:       this.page = 1;",
          "284:       this.files = [];",
          "285:       this.paginator = {",
          "286:         total: 1,",
          "287:         perPage: 30,",
          "288:       };",
          "289:       if (!this.hasValue) {",
          "290:         this.model = null;",
          "293:     setActiveTab(tab) {",
          "294:       if (this.getActiveTab !== tab) {",
          "295:         this.activeTab = tab;",
          "296:         this.model = null;",
          "297:         this.page = 1;",
          "299:       }",
          "301:     openFileManager() {",
          "302:       this.showFileManager = true;",
          "303:       this.disableScrollOnBody();",
          "304:       this.getFiles();",
          "306:     closeFileManager() {",
          "307:       this.showFileManager = false;",
          "308:       this.enableScrollOnBody();",
          "309:       this.resetState();",
          "311:     openDeleteDialog() {",
          "312:       this.showDeleteFile = true;",
          "314:     closeDeleteDialog() {",
          "315:       this.showDeleteFile = false;",
          "316:     },",
          "317:     emitInput() {",
          "318:       this.$emit(\"input\", this.model);",
          "319:       this.closeFileManager();",
          "320:     },",
          "321:     disableScrollOnBody() {",
          "322:       disableBodyScroll(document.querySelector(\"body\"));",
          "323:     },",
          "324:     enableScrollOnBody() {",
          "325:       enableBodyScroll(document.querySelector(\"body\"));",
          "328:       this.$refs.file.tabindex = -1;",
          "331:         if (files[0].size > (this.availableMimetypes.file.maxSize * 100)) {",
          "332:           this.$vs.notify({",
          "333:             title: this.$t(\"alert.danger\"),",
          "334:             text: \"Size too large (Max. 5MB)\",",
          "335:             color: \"danger\",",
          "336:           });",
          "340:         this.uploadFile(files[0]);",
          "344:       if (this.getActiveFolder) {",
          "345:         this.$openLoader();",
          "348:             workingDir: this.getActiveFolder,",
          "349:             type: \"file\",",
          "350:             page: this.page,",
          "353:             let error = _.get(res, \"data.original.error\", null);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "242:                 color: \"danger\",",
          "243:               });",
          "244:             }",
          "249:           })",
          "250:           .catch((error) => {",
          "251:             console.log(error);",
          "252:           });",
          "253:       }",
          "254:     },",
          "259:     },",
          "260:     deleteFile() {",
          "261:       this.$api.badasoFile",
          "262:         .deleteUsingLfm({",
          "265:         })",
          "266:         .then((res) => {",
          "268:           if (error) {",
          "269:             this.$vs.notify({",
          "270:               title: this.$t(\"alert.danger\"),",
          "",
          "[Removed Lines]",
          "245:             this.files = res.data;",
          "246:             this.files.items = res.data.items.filter((val) => {",
          "247:               return val.thumbUrl === null;",
          "248:             });",
          "255:     emitInput() {",
          "256:       let url = this.files.items[this.activeFile].url;",
          "257:       this.$emit(\"input\", url);",
          "258:       this.closeOverlay();",
          "263:           workingDir: this.getSelectedFolder,",
          "264:           \"items[]\": this.files.items[this.activeFile].name,",
          "267:           let error = _.get(res, 'data.original.error', null)",
          "",
          "[Added Lines]",
          "362:             this.files = res.data.items;",
          "363:             this.paginator = res.data.paginator;",
          "367:           })",
          "368:           .finally(() => {",
          "369:             this.$closeLoader();",
          "373:     uploadFile(file) {",
          "374:       const files = new FormData();",
          "375:       files.append(\"upload\", file);",
          "376:       files.append(\"working_dir\", this.getActiveFolder);",
          "377:       this.$api.badasoFile",
          "378:         .uploadUsingLfm(files)",
          "379:         .then((res) => {",
          "380:           let error = _.get(res, \"data.original.error\", null);",
          "381:           if (error) {",
          "382:             this.$vs.notify({",
          "383:               title: this.$t(\"alert.danger\"),",
          "384:               text: error.message,",
          "385:               color: \"danger\",",
          "386:             });",
          "387:           } else {",
          "388:             this.$vs.notify({",
          "389:               title: this.$t(\"alert.success\"),",
          "390:               text: \"Upload successful\",",
          "391:               color: \"success\",",
          "392:             });",
          "393:           }",
          "394:         })",
          "395:         .catch((error) => {",
          "396:           this.$vs.notify({",
          "397:             title: this.$t(\"alert.danger\"),",
          "398:             text: error.message,",
          "399:             color: \"danger\",",
          "400:           });",
          "401:         })",
          "402:         .finally(() => {",
          "403:           this.getFiles();",
          "404:         });",
          "407:       this.$openLoader();",
          "410:           workingDir: this.getActiveFolder,",
          "411:           \"items[]\": _.find(this.files, { url: this.model }).name,",
          "414:           let error = _.get(res, \"data.original.error\", null);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "272:               color: \"danger\",",
          "273:             });",
          "274:           }",
          "275:           this.getFiles();",
          "276:         })",
          "277:         .catch((error) => {",
          "278:           console.log(error);",
          "279:         });",
          "295:     },",
          "296:   },",
          "297: };",
          "",
          "[Removed Lines]",
          "281:       this.activeFile = null;",
          "282:       this.dialog = false;",
          "283:     },",
          "284:     openDialog() {",
          "285:       this.dialog = true;",
          "286:     },",
          "287:     deleteFilePicked(item) {",
          "288:       if (item === null || item === undefined) return;",
          "290:       if (typeof item === \"string\" && item !== \"\") this.$emit(\"input\", null);",
          "291:       if (typeof item === \"object\") {",
          "292:         this.selectedImageData = {};",
          "293:         this.$emit(\"input\", null);",
          "294:       }",
          "298: </script>",
          "",
          "[Added Lines]",
          "427:         })",
          "428:         .finally(() => {",
          "429:           this.$closeLoader();",
          "430:           this.closeDeleteDialog();",
          "435: </script>",
          "",
          "---------------"
        ],
        "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue": [
          "File: src/resources/js/components/BadasoUploadFileMultiple.vue -> src/resources/js/components/BadasoUploadFileMultiple.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <template>",
          "6:         <div class=\"badaso-upload-file-multiple__preview\">",
          "8:           <div class=\"badaso-upload-file-multiple__preview-text\">",
          "10:           </div>",
          "11:         </div>",
          "12:       </vs-col>",
          "13:     </vs-row>",
          "15:       <div class=\"badaso-upload-file-multiple__popup-container\">",
          "16:         <div class=\"badaso-upload-file-multiple__popup--top-bar\">",
          "17:           <h3>{{ $t(\"fileManager.title\") }}</h3>",
          "18:           <vs-spacer />",
          "20:             <vs-icon icon=\"delete\"></vs-icon>",
          "21:           </vs-button>",
          "22:         </div>",
          "23:         <ul class=\"badaso-upload-file-multiple__popup--left-bar\">",
          "25:             Private",
          "26:           </li>",
          "28:             Shares",
          "29:           </li>",
          "30:         </ul>",
          "31:         <div class=\"badaso-upload-file-multiple__popup--right-bar\">",
          "34:           </div>",
          "38:           </div>",
          "39:         </div>",
          "40:         <div class=\"badaso-upload-file-multiple__popup--bottom-bar\">",
          "41:           <div class=\"badaso-upload-file-multiple__popup-button--footer\">",
          "43:               {{ $t(\"button.submit\") }}",
          "44:             </vs-button>",
          "46:               {{ $t(\"button.close\") }}",
          "47:             </vs-button>",
          "48:           </div>",
          "49:         </div>",
          "50:       </div>",
          "51:     </div>",
          "65:       <p>{{ $t(\"action.delete.text\") }}</p>",
          "66:       <div class=\"badaso-upload-file-multiple__popup-dialog-content--delete\">",
          "73:       </div>",
          "74:     </vs-popup>",
          "75:   </vs-col>",
          "76: </template>",
          "78: <script>",
          "81: export default {",
          "82:   name: \"BadasoUploadFileMultiple\",",
          "83:   props: {",
          "84:     size: {",
          "86:       default: \"12\",",
          "87:     },",
          "88:     label: {",
          "",
          "[Removed Lines]",
          "2:   <vs-col :vs-lg=\"size\" vs-xs=\"12\" class=\"badaso-upload-file-multiple__container\">",
          "3:     <vs-input :label=\"label\" :placeholder=\"placeholder\" @click=\"showOverlay\" v-on:keyup.space=\"showOverlay\" readonly v-model=\"filesName\" icon=\"attach_file\" icon-after=\"true\" />",
          "4:     <vs-row>",
          "5:       <vs-col vs-lg=\"4\" vs-sm=\"12\" v-for=\"(fileData, index) in value\" :key=\"index\">",
          "7:           <vs-button class=\"badaso-upload-file-multiple__remove-button\" color=\"danger\" icon=\"close\" @click=\"deleteFilePicked(fileData)\" />",
          "9:             <a target=\"_blank\" :href=\"`${$api.badasoFile.download(fileData)}`\" >{{ fileData.split(\"/\").reverse()[0] }}</a>",
          "14:     <div class=\"badaso-upload-file-multiple__popup-dialog\" tabindex=\"0\" v-if=\"show\">",
          "19:           <vs-button color=\"danger\" type=\"relief\" class=\"badaso-upload-file-multiple__popup-button--delete\" v-if=\"getSelected !== 'url' && isFileSelected\" @click=\"openDialog\">",
          "24:           <li :class=\"[getSelected === 'private' ? 'active' : '']\" @click=\"selected = 'private'\" v-if=\"privateOnly || (!privateOnly && !sharesOnly)\">",
          "27:           <li :class=\"[getSelected === 'shares' ? 'active' : '']\" @click=\"selected = 'shares'\" v-if=\"sharesOnly || (!sharesOnly && !privateOnly)\">",
          "32:           <div class=\"badaso-upload-file-multiple__popup-add-image\" @click=\"pickFile\">",
          "33:             <vs-icon icon=\"add\" color=\"#06bbd3\" size=\"75px\"></vs-icon>",
          "35:           <div :class=\"[activeFile.includes(index) ? 'active' : '', 'badaso-upload-file-multiple__popup-file']\" v-for=\"(item, index) in files.items\" :key=\"index\" @click=\"selectFile(index)\">",
          "36:             <vs-icon icon=\"insert_drive_file\" size=\"45px\" color=\"#06bbd3\"></vs-icon>",
          "37:             <p class=\"badaso-upload-file-multiple__popup-file-text\">{{ item.name }}</p>",
          "42:             <vs-button color=\"primary\" type=\"relief\" @click=\"emitInput\" :disabled=\"isSubmitDisable\">",
          "45:             <vs-button color=\"danger\" type=\"relief\" @click=\"closeOverlay\">",
          "52:     <input type=\"file\" class=\"badaso-upload-file-multiple__input--hidden\" ref=\"file\" @change=\"onFilePicked\" multiple />",
          "53:     <div v-if=\"additionalInfo\" v-html=\"additionalInfo\"></div>",
          "54:     <div v-if=\"alert\">",
          "55:       <div v-if=\"$helper.isArray(alert)\">",
          "56:         <span class=\"badaso-upload-file-multiple__input--error\" v-for=\"(info, index) in alert\" :key=\"index\" >",
          "57:           {{ info }}",
          "58:         </span>",
          "59:       </div>",
          "60:       <div v-else>",
          "61:         <span class=\"badaso-upload-file-multiple__input--error\" v-html=\"alert\"></span>",
          "62:       </div>",
          "63:     </div>",
          "64:     <vs-popup :title=\"$t('action.delete.title')\" :active.sync=\"dialog\" class=\"badaso-upload-file-multiple__popup-dialog--delete\">",
          "67:         <vs-button color=\"primary\" type=\"relief\" @click=\"dialog = false\">{{",
          "68:           $t(\"action.delete.cancel\")",
          "69:         }}</vs-button>",
          "70:         <vs-button color=\"danger\" type=\"relief\" @click=\"deleteFile\">{{",
          "71:           $t(\"action.delete.accept\")",
          "72:         }}</vs-button>",
          "79: import _ from \"lodash\";",
          "85:       type: String,",
          "",
          "[Added Lines]",
          "2:   <vs-col",
          "3:     :vs-lg=\"size\"",
          "4:     vs-xs=\"12\"",
          "5:     class=\"badaso-upload-file-multiple__container\"",
          "6:   >",
          "7:     <vs-input",
          "8:       :label=\"label\"",
          "9:       :placeholder=\"placeholder\"",
          "10:       @click=\"openFileManager\"",
          "11:       v-on:keyup.space=\"openFileManager\"",
          "12:       readonly",
          "13:       v-model=\"value\"",
          "14:       icon=\"attach_file\"",
          "15:       icon-after=\"true\"",
          "16:     />",
          "17:     <input",
          "18:       type=\"file\"",
          "19:       class=\"badaso-upload-file-multiple__input--hidden\"",
          "20:       ref=\"file\"",
          "21:       :accept=\"availableMimetypes.file.validMime.join(',')\"",
          "22:       @change=\"onFilePicked\"",
          "23:       multiple",
          "24:     />",
          "25:     <div v-if=\"additionalInfo\" v-html=\"additionalInfo\"></div>",
          "26:     <div v-if=\"alert\">",
          "27:       <div v-if=\"$helper.isArray(alert)\">",
          "28:         <span",
          "29:           class=\"badaso-upload-file-multiple__input--error\"",
          "30:           v-for=\"(info, index) in alert\"",
          "31:           :key=\"index\"",
          "32:         >",
          "33:           {{ info }}",
          "34:         </span>",
          "35:       </div>",
          "36:       <div v-else>",
          "37:         <span",
          "38:           class=\"badaso-upload-file-multiple__input--error\"",
          "39:           v-html=\"alert\"",
          "40:         ></span>",
          "41:       </div>",
          "42:     </div>",
          "43:     <vs-row v-if=\"hasValue\">",
          "44:       <vs-col",
          "45:         vs-lg=\"4\"",
          "46:         vs-sm=\"12\"",
          "47:         v-for=\"(file, index) in getFileModels\"",
          "48:         :key=\"index\"",
          "49:       >",
          "51:           <vs-button",
          "52:             class=\"badaso-upload-file-multiple__remove-button\"",
          "53:             color=\"danger\"",
          "54:             icon=\"close\"",
          "55:             @click=\"() => deleteSelectedFile(file)\"",
          "56:           />",
          "58:             <a target=\"_blank\" :href=\"$api.badasoFile.download(file)\">",
          "59:               {{ file.split(\"/\").reverse()[0] | truncate }}",
          "60:             </a>",
          "66:     <div",
          "67:       class=\"badaso-upload-file-multiple__popup-dialog\"",
          "68:       tabindex=\"0\"",
          "69:       v-if=\"showFileManager\"",
          "70:     >",
          "75:           <vs-button",
          "76:             color=\"danger\"",
          "77:             type=\"relief\"",
          "78:             class=\"badaso-upload-file-multiple__popup-button--delete\"",
          "79:             v-if=\"getActiveTab !== 'url' && model\"",
          "80:             @click=\"openDeleteDialog\"",
          "81:           >",
          "87:           <li",
          "88:             :class=\"{ active: getActiveTab === 'private' }\"",
          "89:             @click=\"setActiveTab('private')\"",
          "90:             v-if=\"privateOnly || (!privateOnly && !sharesOnly)\"",
          "91:           >",
          "94:           <li",
          "95:             :class=\"{ active: getActiveTab === 'shares' }\"",
          "96:             @click=\"setActiveTab('shares')\"",
          "97:             v-if=\"sharesOnly || (!sharesOnly && !privateOnly)\"",
          "98:           >",
          "104:           <div",
          "105:             class=\"badaso-upload-file-multiple__popup-add-file\"",
          "106:             @click=\"$refs.file.click()\"",
          "107:           >",
          "108:             <vs-icon icon=\"add\" color=\"#06bbd3\" size=\"40px\"></vs-icon>",
          "110:           <div",
          "111:             :class=\"{",
          "112:               active: model.includes(file.url),",
          "113:               'badaso-upload-file-multiple__popup-file': true,",
          "114:             }\"",
          "115:             v-for=\"(file, index) in files\"",
          "116:             :key=\"index\"",
          "117:             @click=\"selectFile(file.url)\"",
          "118:             class=\"badaso-upload-file__popup-file-container\"",
          "119:           >",
          "120:             <vs-icon",
          "121:               icon=\"insert_drive_file\"",
          "122:               size=\"45px\"",
          "123:               color=\"#06bbd3\"",
          "124:             ></vs-icon>",
          "125:             <p class=\"badaso-upload-file-multiple__popup-file-text\">",
          "126:               {{ file.name | truncate }}",
          "127:             </p>",
          "133:             <div>",
          "134:               <vs-pagination",
          "135:                 :total=\"Math.ceil(paginator.total / paginator.perPage)\"",
          "136:                 v-model=\"page\"",
          "137:                 :max=\"1\"",
          "138:               ></vs-pagination>",
          "139:             </div>",
          "140:             <vs-spacer />",
          "141:             <vs-button",
          "142:               color=\"primary\"",
          "143:               type=\"relief\"",
          "144:               @click=\"emitInput\"",
          "145:               :disabled=\"!model\"",
          "146:               class=\"badaso-upload-file__popup-button\"",
          "147:             >",
          "150:             <vs-button",
          "151:               color=\"danger\"",
          "152:               type=\"relief\"",
          "153:               @click=\"closeFileManager\"",
          "154:               class=\"badaso-upload-file__popup-button\"",
          "155:             >",
          "163:     <vs-popup",
          "164:       :title=\"$t('action.delete.title')\"",
          "165:       :active.sync=\"showDeleteFile\"",
          "166:       class=\"badaso-upload-file-multiple__popup-dialog--delete\"",
          "167:     >",
          "170:         <vs-button color=\"primary\" type=\"relief\" @click=\"closeDeleteDialog\">",
          "171:           {{ $t(\"action.delete.cancel\") }}",
          "172:         </vs-button>",
          "173:         <vs-button color=\"danger\" type=\"relief\" @click=\"deleteFile()\">",
          "174:           {{ $t(\"action.delete.accept\") }}",
          "175:         </vs-button>",
          "182: import { mapState } from \"vuex\";",
          "183: import * as _ from \"lodash\";",
          "184: import { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";",
          "189:       type: String | Number,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "91:     },",
          "92:     placeholder: {",
          "93:       type: String,",
          "95:     },",
          "96:     value: {",
          "101:     },",
          "102:     additionalInfo: {",
          "103:       type: String,",
          "",
          "[Removed Lines]",
          "94:       default: \"Upload File Multiple\",",
          "97:       type: Array,",
          "98:       default: () => {",
          "99:         return [];",
          "100:       },",
          "",
          "[Added Lines]",
          "198:       default: \"Upload File\",",
          "201:       default: null,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "114:       type: Boolean,",
          "115:     },",
          "116:   },",
          "122:       },",
          "123:     },",
          "127:       },",
          "128:     },",
          "129:   },",
          "131:     if (this.sharesOnly) {",
          "133:     }",
          "155:   },",
          "156:   computed: {",
          "160:     },",
          "164:     },",
          "167:     },",
          "175:       }",
          "178:     },",
          "179:   },",
          "180:   methods: {",
          "183:     },",
          "188:       this.getFiles();",
          "189:     },",
          "194:     },",
          "205:     },",
          "215:             this.$vs.notify({",
          "216:               title: this.$t(\"alert.danger\"),",
          "218:               color: \"danger\",",
          "219:             });",
          "220:           }",
          "226:     },",
          "227:     getFiles() {",
          "230:         this.$api.badasoFile",
          "231:           .browseUsingLfm({",
          "233:           })",
          "234:           .then((res) => {",
          "236:             if (error) {",
          "237:               this.$vs.notify({",
          "238:                 title: this.$t(\"alert.danger\"),",
          "",
          "[Removed Lines]",
          "117:   watch: {",
          "118:     selected: {",
          "119:       handler(val) {",
          "120:         this.getFiles();",
          "121:         this.isFileSelected = false;",
          "124:     value: {",
          "125:       handler(val) {",
          "126:         this.fileDatas = val;",
          "130:   mounted() {",
          "132:       this.selected = \"shares\";",
          "135:     this.fileDatas = this.value;",
          "136:     this.filesName = this.fileDatas.join(\", \");",
          "137:   },",
          "138:   data() {",
          "139:     return {",
          "140:       fileDatas: [],",
          "141:       filesName: \"\",",
          "142:       dialog: false,",
          "143:       activeFile: [],",
          "144:       show: false,",
          "145:       selected: \"private\",",
          "146:       files: {",
          "147:         display: \"\",",
          "148:         items: [],",
          "149:         paginator: {},",
          "150:       },",
          "151:       files: [],",
          "152:       isFileSelected: false,",
          "153:       dirty: false,",
          "154:     };",
          "157:     getSelected() {",
          "158:       this.activeFile = [];",
          "159:       return this.selected;",
          "161:     getSelectedFolder() {",
          "162:       if (this.getSelected === \"shares\") return \"/shares\";",
          "163:       else return this.getUserFolder;",
          "165:     getUserFolder() {",
          "166:       return \"/\" + this.$store.state.badaso.user.id;",
          "168:     isSubmitDisable() {",
          "169:       if (!this.isFileSelected) {",
          "170:         return true;",
          "171:       }",
          "173:       if (this.activeFile.length === 0) {",
          "174:         return true;",
          "177:       return false;",
          "181:     pickFile() {",
          "182:       this.$refs.file.click();",
          "184:     showOverlay() {",
          "185:       this.show = true;",
          "186:       document.body.style.setProperty(\"position\", \"fixed\");",
          "187:       document.body.style.setProperty(\"width\", \"100%\");",
          "190:     closeOverlay() {",
          "191:       this.show = false;",
          "192:       document.body.style.removeProperty(\"position\");",
          "193:       document.body.style.removeProperty(\"width\");",
          "195:     onFilePicked(e) {",
          "196:       let files = e.target.files;",
          "197:       files.forEach((file) => {",
          "198:         if (file.size > 512000) {",
          "199:           this.errorMessages = [\"Out of limit size\"];",
          "200:           return;",
          "201:         }",
          "202:         this.files = file;",
          "203:         this.uploadFile();",
          "204:       });",
          "206:     uploadFile() {",
          "207:       const files = new FormData();",
          "208:       files.append(\"upload\", this.files);",
          "209:       files.append(\"working_dir\", this.getSelectedFolder);",
          "210:       this.$api.badasoFile",
          "211:         .uploadUsingLfm(files)",
          "212:         .then((res) => {",
          "213:           let error = _.get(res, 'data.original.error', null)",
          "214:           if (error) {",
          "217:               text: error.message,",
          "221:           this.getFiles();",
          "222:         })",
          "223:         .catch((error) => {",
          "224:           console.error(error);",
          "225:         });",
          "228:       this.files.items = [];",
          "229:       if (this.getSelectedFolder) {",
          "232:             workingDir: this.getSelectedFolder,",
          "235:             let error = _.get(res, 'data.original.error', null)",
          "",
          "[Added Lines]",
          "218:   data() {",
          "219:     return {",
          "220:       showFileManager: false,",
          "221:       activeTab: \"private\",",
          "222:       showDeleteFile: false,",
          "223:       page: 1,",
          "224:       files: [],",
          "225:       paginator: {",
          "226:         total: 1,",
          "227:         perPage: 30,",
          "229:       model: [],",
          "230:     };",
          "231:   },",
          "232:   filters: {",
          "233:     truncate(val) {",
          "234:       return _.truncate(val, {",
          "235:         length: 15,",
          "236:       });",
          "238:   },",
          "239:   watch: {",
          "240:     page: {",
          "241:       handler() {",
          "242:         this.getFiles();",
          "244:       immediate: false,",
          "247:   created() {",
          "249:       this.activeTab = \"shares\";",
          "253:     getActiveTab() {",
          "254:       return this.activeTab;",
          "256:     getActiveFolder() {",
          "257:       switch (this.getActiveTab) {",
          "258:         case \"url\":",
          "259:           return;",
          "260:         case \"shares\":",
          "261:           return \"/shares\";",
          "262:         default:",
          "263:           return `/${this.userId}`;",
          "264:       }",
          "266:     hasValue() {",
          "267:       return (",
          "268:         this.value !== null &&",
          "269:         this.value !== \"null\" &&",
          "270:         this.value !== \"\" &&",
          "271:         this.value !== \"[]\" &&",
          "272:         this.value !== \"{}\"",
          "273:       );",
          "275:     getFileModels() {",
          "276:       if (this.hasValue) {",
          "277:         return JSON.parse(this.value);",
          "278:       } else {",
          "279:         return this.model;",
          "282:     ...mapState({",
          "283:       userId(state) {",
          "284:         return state.badaso.user.id;",
          "285:       },",
          "286:       availableMimetypes(state) {",
          "287:         return state.badaso.availableMimetypes;",
          "288:       },",
          "289:     }),",
          "292:     deleteSelectedFile(url) {",
          "293:       let index = this.getFileModels.indexOf(url);",
          "294:       this.getFileModels.splice(index, 1);",
          "295:       this.$emit(\"input\", JSON.stringify(this.getFileModels));",
          "297:     selectFile(url) {",
          "298:       if (this.model.includes(url)) {",
          "299:         let idx = this.model.indexOf(url);",
          "300:         this.model.splice(idx, 1);",
          "301:       } else {",
          "302:         this.model.push(url);",
          "303:       }",
          "304:     },",
          "305:     resetState() {",
          "306:       this.showFileManager = false;",
          "307:       if (this.sharesOnly) {",
          "308:         this.activeTab = \"shares\";",
          "309:       } else {",
          "310:         this.activeTab = \"private\";",
          "311:       }",
          "312:       this.showDeleteFile = false;",
          "313:       this.page = 1;",
          "314:       this.files = [];",
          "315:       this.paginator = {",
          "316:         total: 1,",
          "317:         perPage: 30,",
          "318:       };",
          "319:       if (!this.hasValue) {",
          "320:         this.model = [];",
          "321:       }",
          "322:     },",
          "323:     setActiveTab(tab) {",
          "324:       if (this.getActiveTab !== tab) {",
          "325:         this.activeTab = tab;",
          "326:         this.model = [];",
          "327:         this.page = 1;",
          "328:         this.getFiles();",
          "329:       }",
          "330:     },",
          "331:     openFileManager() {",
          "332:       this.showFileManager = true;",
          "333:       this.disableScrollOnBody();",
          "336:     closeFileManager() {",
          "337:       this.showFileManager = false;",
          "338:       this.enableScrollOnBody();",
          "339:       this.resetState();",
          "341:     openDeleteDialog() {",
          "342:       this.showDeleteFile = true;",
          "344:     closeDeleteDialog() {",
          "345:       this.showDeleteFile = false;",
          "346:     },",
          "347:     emitInput() {",
          "348:       this.$emit(\"input\", JSON.stringify(this.model));",
          "349:       this.closeFileManager();",
          "350:     },",
          "351:     disableScrollOnBody() {",
          "352:       disableBodyScroll(document.querySelector(\"body\"));",
          "353:     },",
          "354:     enableScrollOnBody() {",
          "355:       enableBodyScroll(document.querySelector(\"body\"));",
          "356:     },",
          "357:     onFilePicked(e) {",
          "358:       this.$refs.file.tabindex = -1;",
          "359:       const files = e.target.files;",
          "360:       for (const file of files) {",
          "361:         if (file !== undefined) {",
          "362:           if (file.size > (this.availableMimetypes.file.maxSize * 100)) {",
          "365:               text: \"Size too large (Max. 5MB)\",",
          "368:             return;",
          "371:           this.uploadFile(file);",
          "372:         }",
          "373:       }",
          "376:       if (this.getActiveFolder) {",
          "377:         this.$openLoader();",
          "380:             workingDir: this.getActiveFolder,",
          "381:             type: \"file\",",
          "382:             page: this.page,",
          "385:             let error = _.get(res, \"data.original.error\", null);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "240:                 color: \"danger\",",
          "241:               });",
          "242:             }",
          "247:           })",
          "248:           .catch((error) => {",
          "249:             console.log(error);",
          "250:           });",
          "251:       }",
          "252:     },",
          "261:     },",
          "262:     deleteFile() {",
          "263:       this.$api.badasoFile",
          "264:         .deleteUsingLfm({",
          "267:         })",
          "268:         .then((res) => {",
          "270:           if (error) {",
          "271:             this.$vs.notify({",
          "272:               title: this.$t(\"alert.danger\"),",
          "",
          "[Removed Lines]",
          "243:             this.files = res.data;",
          "244:             this.files.items = res.data.items.filter((val) => {",
          "245:               return val.thumbUrl === null;",
          "246:             });",
          "253:     emitInput() {",
          "254:       let url = [];",
          "255:       this.activeFile.forEach((element) => {",
          "256:         url.push(this.files.items[element].url)",
          "257:       });",
          "258:       this.filesName = url.join(\", \");",
          "259:       this.$emit(\"input\", url);",
          "260:       this.closeOverlay();",
          "265:           workingDir: this.getSelectedFolder,",
          "266:           \"items[]\": this.files.items[this.activeFile].name,",
          "269:           let error = _.get(res, 'data.original.error', null)",
          "",
          "[Added Lines]",
          "394:             this.files = res.data.items;",
          "395:             this.paginator = res.data.paginator;",
          "399:           })",
          "400:           .finally(() => {",
          "401:             this.$closeLoader();",
          "405:     uploadFile(file) {",
          "406:       const files = new FormData();",
          "407:       files.append(\"upload\", file);",
          "408:       files.append(\"working_dir\", this.getActiveFolder);",
          "409:       this.$api.badasoFile",
          "410:         .uploadUsingLfm(files)",
          "411:         .then((res) => {",
          "412:           let error = _.get(res, \"data.original.error\", null);",
          "413:           if (error) {",
          "414:             this.$vs.notify({",
          "415:               title: this.$t(\"alert.danger\"),",
          "416:               text: error.message,",
          "417:               color: \"danger\",",
          "418:             });",
          "419:           } else {",
          "420:             this.$vs.notify({",
          "421:               title: this.$t(\"alert.success\"),",
          "422:               text: \"Upload successful\",",
          "423:               color: \"success\",",
          "424:             });",
          "425:           }",
          "426:         })",
          "427:         .catch((error) => {",
          "428:           this.$vs.notify({",
          "429:             title: this.$t(\"alert.danger\"),",
          "430:             text: error.message,",
          "431:             color: \"danger\",",
          "432:           });",
          "433:         })",
          "434:         .finally(() => {",
          "435:           this.getFiles();",
          "436:         });",
          "439:       this.$openLoader();",
          "442:           workingDir: this.getActiveFolder,",
          "443:           \"items[]\": _.find(this.files, { url: this.model }).name,",
          "446:           let error = _.get(res, \"data.original.error\", null);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "274:               color: \"danger\",",
          "275:             });",
          "276:           }",
          "277:           this.getFiles();",
          "278:         })",
          "279:         .catch((error) => {",
          "280:           console.log(error);",
          "281:         });",
          "310:     },",
          "311:   },",
          "312: };",
          "",
          "[Removed Lines]",
          "283:       this.activeFile = [];",
          "284:       this.dialog = false;",
          "285:     },",
          "286:     openDialog() {",
          "287:       this.dialog = true;",
          "288:     },",
          "289:     selectFile(index) {",
          "290:       if (!this.activeFile.includes(index)) {",
          "291:         this.activeFile.push(index);",
          "292:       } else {",
          "293:         let idx = this.activeFile.indexOf(index);",
          "294:         this.activeFile.splice(idx, 1);",
          "295:       }",
          "297:       this.isFileSelected = true;",
          "298:     },",
          "299:     deleteFilePicked(item) {",
          "300:       if (item === null || item === undefined) return;",
          "302:       if (typeof item === \"string\" && item !== \"\") {",
          "303:         let idx = this.fileDatas.indexOf(item);",
          "304:         let activeIdx = this.activeFile.indexOf(idx);",
          "305:         this.activeFile.splice(activeIdx, 1);",
          "306:         this.fileDatas.splice(idx, 1);",
          "307:         this.filesName = this.fileDatas.join(\", \");",
          "308:         this.$emit(\"input\", this.fileDatas);",
          "309:       }",
          "313: </script>",
          "",
          "[Added Lines]",
          "459:         })",
          "460:         .finally(() => {",
          "461:           this.$closeLoader();",
          "462:           this.closeDeleteDialog();",
          "467: </script>",
          "",
          "---------------"
        ],
        "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue": [
          "File: src/resources/js/components/BadasoUploadImage.vue -> src/resources/js/components/BadasoUploadImage.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <template>",
          "2:   <vs-col :vs-lg=\"size\" vs-xs=\"12\" class=\"badaso-upload-image__container\">",
          "5:       <vs-col vs-lg=\"4\" vs-sm=\"12\">",
          "8:           <img :src=\"value\" class=\"badaso-upload-image__preview-image\" />",
          "9:         </div>",
          "10:       </vs-col>",
          "11:     </vs-row>",
          "13:       <div class=\"badaso-upload-image__popup-container\">",
          "14:         <div class=\"badaso-upload-image__popup--top-bar\">",
          "15:           <h3>{{ $t(\"fileManager.title\") }}</h3>",
          "16:           <vs-spacer />",
          "18:             <vs-icon icon=\"delete\"></vs-icon>",
          "19:           </vs-button>",
          "20:         </div>",
          "21:         <ul class=\"badaso-upload-image__popup--left-bar\">",
          "25:         </ul>",
          "29:           </div>",
          "31:         </div>",
          "35:             Only valid image (PNG and JPEG) is accepted",
          "36:           </p>",
          "38:         </div>",
          "39:         <div class=\"badaso-upload-image__popup--bottom-bar\">",
          "40:           <div class=\"badaso-upload-image__popup-button--footer\">",
          "42:               {{ $t(\"button.submit\") }}",
          "43:             </vs-button>",
          "45:               {{ $t(\"button.close\") }}",
          "46:             </vs-button>",
          "47:           </div>",
          "48:         </div>",
          "49:       </div>",
          "50:     </div>",
          "67:       <p>{{ $t(\"action.delete.text\") }}</p>",
          "68:       <div class=\"badaso-upload-image__popup-dialog-content--delete\">",
          "75:       </div>",
          "76:     </vs-popup>",
          "77:   </vs-col>",
          "78: </template>",
          "80: <script>",
          "82: export default {",
          "83:   name: \"BadasoUploadImage\",",
          "84:   props: {",
          "85:     size: {",
          "87:       default: \"12\",",
          "88:     },",
          "89:     label: {",
          "",
          "[Removed Lines]",
          "3:     <vs-input :label=\"label\" :placeholder=\"placeholder\" @click=\"showOverlay\" v-on:keyup.space=\"showOverlay\" readonly v-model=\"imageUrl\" icon=\"attach_file\" icon-after=\"true\" ></vs-input>",
          "4:     <vs-row>",
          "6:         <div class=\"badaso-upload-image__preview\" v-if=\"imageUrl !== null && imageUrl !== ''\">",
          "7:           <vs-button class=\"badaso-upload-image__remove-button\" color=\"danger\" icon=\"close\" @click=\"deleteFilePicked(value)\" />",
          "12:     <div class=\"badaso-upload-image__popup-dialog\" tabindex=\"0\" v-if=\"show\">",
          "17:           <vs-button color=\"danger\" type=\"relief\" class=\"badaso-upload-image__popup-button--delete\" v-if=\"getSelected !== 'url' && isImageSelected\" @click=\"openDialog\">",
          "22:           <li :class=\"[getSelected === 'private' ? 'active' : '']\" @click=\"selected = 'private'\" v-if=\"privateOnly || (!privateOnly && !sharesOnly)\" >Private</li>",
          "23:           <li :class=\"[getSelected === 'shares' ? 'active' : '']\" @click=\"selected = 'shares'\" v-if=\"sharesOnly || (!sharesOnly && !privateOnly)\">Shares</li>",
          "24:           <li :class=\"[getSelected === 'url' ? 'active' : '', $store.state.badaso.isOnline ? '' : 'badaso-upload-image__menu--disabled']\" @click=\"selected = 'url'\">Insert by URL</li>",
          "26:         <div class=\"badaso-upload-image__popup--right-bar\" v-if=\"getSelected !== 'url'\">",
          "27:           <div class=\"badaso-upload-image__popup-add-image\" @click=\"pickFile\">",
          "28:             <vs-icon icon=\"add\" color=\"#06bbd3\" size=\"75px\"></vs-icon>",
          "30:           <img :class=\"[activeImage === index ? 'active' : '', 'badaso-upload-image__popup-image']\" :src=\"item.thumbUrl\" v-for=\"(item, index) in images.items\" :key=\"index\" @click=\"activeImage = index; isImageSelected = true; \" />",
          "32:         <div v-if=\"getSelected === 'url'\" class=\"badaso-upload-image__popup--right-bar badaso-upload-image__popup--url-bar\">",
          "33:           <vs-input v-if=\"getSelected === 'url'\" label=\"Paste an image URL here\" placeholder=\"URL\" v-model=\"inputByUrl\" description-text=\"If your URL is correct, you'll see an image preview here. Large images may take a few minutes to appear. Only accept PNG and JPEG.\" @input=\"inputByUrl === '' ? (dirty = false) : (dirty = true)\"></vs-input>",
          "34:           <p v-if=\"!isValidImage && getSelected === 'url' && dirty\" class=\"badaso-upload-image__input--error\">",
          "37:           <img accept=\"image/png\" v-if=\"getSelected === 'url'\" :src=\"inputByUrl\" alt=\"\" @load=\"isValidImage = true\" @error=\"isValidImage = false\" class=\"badaso-upload-image__preview--small\" />",
          "41:             <vs-button color=\"primary\" type=\"relief\" @click=\"emitInput\" :disabled=\"isSubmitDisable\">",
          "44:             <vs-button color=\"danger\" type=\"relief\" @click=\"closeOverlay\">",
          "51:     <input type=\"file\" class=\"badaso-upload-image__input--hidden\" ref=\"image\" accept=\"image/*\" @change=\"onFilePicked\"/>",
          "52:     <div v-if=\"additionalInfo\" v-html=\"additionalInfo\"></div>",
          "53:     <div v-if=\"alert\">",
          "54:       <div v-if=\"$helper.isArray(alert)\">",
          "55:         <p",
          "56:           class=\"badaso-upload-image__input--error\"",
          "57:           v-for=\"(info, index) in alert\"",
          "58:           :key=\"index\"",
          "59:           v-html=\"info + '<br />'\"",
          "60:         ></p>",
          "61:       </div>",
          "62:       <div v-else>",
          "63:         <span class=\"badaso-upload-image__input--error\" v-html=\"alert\"></span>",
          "64:       </div>",
          "65:     </div>",
          "66:     <vs-popup :title=\"$t('action.delete.title')\" :active.sync=\"dialog\" class=\"badaso-upload-image__popup-dialog--delete\">",
          "69:         <vs-button color=\"primary\" type=\"relief\" @click=\"dialog = false\">{{",
          "70:           $t(\"action.delete.cancel\")",
          "71:         }}</vs-button>",
          "72:         <vs-button color=\"danger\" type=\"relief\" @click=\"deleteImage\">{{",
          "73:           $t(\"action.delete.accept\")",
          "74:         }}</vs-button>",
          "81: import * as _ from \"lodash\"",
          "86:       type: String,",
          "",
          "[Added Lines]",
          "3:     <vs-input",
          "4:       :label=\"label\"",
          "5:       :placeholder=\"placeholder\"",
          "6:       @click=\"openFileManager\"",
          "7:       v-on:keyup.space=\"openFileManager\"",
          "8:       readonly",
          "9:       v-model=\"value\"",
          "10:       icon=\"attach_file\"",
          "11:       icon-after=\"true\"",
          "12:     />",
          "13:     <input",
          "14:       type=\"file\"",
          "15:       class=\"badaso-upload-image__input--hidden\"",
          "16:       ref=\"image\"",
          "17:       :accept=\"availableMimetypes.image.validMime.join(',')\"",
          "18:       @change=\"onFilePicked\"",
          "19:     />",
          "20:     <div v-if=\"additionalInfo\" v-html=\"additionalInfo\" />",
          "21:     <div v-if=\"alert\">",
          "22:       <div v-if=\"$helper.isArray(alert)\">",
          "23:         <p",
          "24:           class=\"badaso-upload-image__input--error\"",
          "25:           v-for=\"(info, index) in alert\"",
          "26:           :key=\"index\"",
          "27:           v-html=\"info + '<br />'\"",
          "28:         />",
          "29:       </div>",
          "30:       <div v-else>",
          "31:         <span class=\"badaso-upload-image__input--error\" v-html=\"alert\" />",
          "32:       </div>",
          "33:     </div>",
          "34:     <vs-row v-if=\"hasValue\">",
          "36:         <div class=\"badaso-upload-image__preview\">",
          "37:           <vs-button",
          "38:             class=\"badaso-upload-image__remove-button\"",
          "39:             color=\"danger\"",
          "40:             icon=\"close\"",
          "41:             @click=\"$emit('input', null)\"",
          "42:           />",
          "48:     <div",
          "49:       class=\"badaso-upload-image__popup-dialog\"",
          "50:       tabindex=\"0\"",
          "51:       v-if=\"showFileManager\"",
          "52:     >",
          "57:           <vs-button",
          "58:             color=\"danger\"",
          "59:             type=\"relief\"",
          "60:             class=\"badaso-upload-image__popup-button--delete\"",
          "61:             v-if=\"getActiveTab !== 'url' && model\"",
          "62:             @click=\"openDeleteDialog\"",
          "63:           >",
          "69:           <li",
          "70:             :class=\"{ active: getActiveTab === 'private' }\"",
          "71:             @click=\"setActiveTab('private')\"",
          "72:             v-if=\"privateOnly || (!privateOnly && !sharesOnly)\"",
          "73:           >",
          "74:             Private",
          "75:           </li>",
          "76:           <li",
          "77:             :class=\"{ active: getActiveTab === 'shares' }\"",
          "78:             @click=\"setActiveTab('shares')\"",
          "79:             v-if=\"sharesOnly || (!sharesOnly && !privateOnly)\"",
          "80:           >",
          "81:             Shares",
          "82:           </li>",
          "83:           <li",
          "84:             :class=\"{",
          "85:               active: getActiveTab === 'url',",
          "86:               'badaso-upload-image__menu--disabled':",
          "87:                 !$store.state.badaso.isOnline,",
          "88:             }\"",
          "89:             @click=\"setActiveTab('url')\"",
          "90:           >",
          "91:             Insert by URL",
          "92:           </li>",
          "95:         <div",
          "96:           class=\"badaso-upload-image__popup--right-bar\"",
          "97:           v-if=\"getActiveTab !== 'url'\"",
          "98:         >",
          "99:           <div",
          "100:             class=\"badaso-upload-image__popup-add-image\"",
          "101:             @click=\"$refs.image.click()\"",
          "102:           >",
          "103:             <vs-icon icon=\"add\" color=\"#06bbd3\" size=\"40px\"></vs-icon>",
          "105:           <img",
          "106:             :class=\"{",
          "107:               active: model === image.url,",
          "108:               'badaso-upload-image__popup-image': true,",
          "109:             }\"",
          "110:             :src=\"image.thumbUrl ? image.thumbUrl : image.url\"",
          "111:             v-for=\"(image, index) in images\"",
          "112:             :key=\"index\"",
          "113:             @click=\"model = image.url\"",
          "114:           />",
          "117:         <div",
          "118:           v-if=\"getActiveTab === 'url'\"",
          "119:           class=\"",
          "120:             badaso-upload-image__popup--right-bar",
          "121:             badaso-upload-image__popup--url-bar",
          "122:           \"",
          "123:         >",
          "124:           <vs-input",
          "125:             label=\"Paste an image URL here\"",
          "126:             placeholder=\"URL\"",
          "127:             v-model=\"model\"",
          "128:             @input=\"$openLoader()\"",
          "129:             description-text=\"If your URL is correct, you'll see an image preview here. Large images may take a few minutes to appear. Only accept PNG and JPEG.\"",
          "130:           />",
          "131:           <p",
          "132:             v-if=\"isValidImageUrl === false && model\"",
          "133:             class=\"badaso-upload-image__input--error\"",
          "134:           >",
          "137:           <img",
          "138:             accept=\"image/png\"",
          "139:             :src=\"model\"",
          "140:             alt=\"\"",
          "141:             @load=\"",
          "142:               isValidImageUrl = true;",
          "143:               $closeLoader();",
          "144:             \"",
          "145:             @error=\"",
          "146:               isValidImageUrl = false;",
          "147:               $closeLoader();",
          "148:             \"",
          "149:             class=\"badaso-upload-image__preview--small\"",
          "150:           />",
          "155:             <div v-if=\"getActiveTab !== 'url'\">",
          "156:               <vs-pagination",
          "157:                 :total=\"Math.ceil(paginator.total / paginator.perPage)\"",
          "158:                 v-model=\"page\"",
          "159:                 :max=\"1\"",
          "160:               ></vs-pagination>",
          "161:             </div>",
          "162:             <vs-spacer />",
          "163:             <vs-button",
          "164:               color=\"primary\"",
          "165:               type=\"relief\"",
          "166:               @click=\"emitInput\"",
          "167:               :disabled=\"!model\"",
          "168:               class=\"badaso-upload-image__popup-button\"",
          "169:             >",
          "172:             <vs-button",
          "173:               color=\"danger\"",
          "174:               class=\"badaso-upload-image__popup-button\"",
          "175:               type=\"relief\"",
          "176:               @click=\"closeFileManager\"",
          "177:             >",
          "185:     <vs-popup",
          "186:       :title=\"$t('action.delete.title')\"",
          "187:       :active.sync=\"showDeleteImage\"",
          "188:       class=\"badaso-upload-image__popup-dialog--delete\"",
          "189:     >",
          "192:         <vs-button color=\"primary\" type=\"relief\" @click=\"closeDeleteDialog\">",
          "193:           {{ $t(\"action.delete.cancel\") }}",
          "194:         </vs-button>",
          "195:         <vs-button color=\"danger\" type=\"relief\" @click=\"deleteImage()\">",
          "196:           {{ $t(\"action.delete.accept\") }}",
          "197:         </vs-button>",
          "204: import { mapState } from \"vuex\";",
          "205: import * as _ from \"lodash\";",
          "206: import { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";",
          "211:       type: String | Number,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95:       default: \"Upload Image\",",
          "96:     },",
          "97:     value: {",
          "100:     },",
          "101:     additionalInfo: {",
          "102:       type: String,",
          "",
          "[Removed Lines]",
          "98:       type: String,",
          "99:       default: \"\",",
          "",
          "[Added Lines]",
          "223:       default: null,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "115:   },",
          "116:   data() {",
          "117:     return {",
          "126:       },",
          "133:     };",
          "134:   },",
          "162:     },",
          "163:   },",
          "165:     if (this.sharesOnly) {",
          "167:     }",
          "170:   },",
          "177:     },",
          "182:     },",
          "183:   },",
          "184:   methods: {",
          "187:     },",
          "192:       this.getImages();",
          "193:     },",
          "199:     },",
          "200:     onFilePicked(e) {",
          "201:       this.$refs.image.tabindex = -1;",
          "202:       const files = e.target.files;",
          "203:       if (files[0] !== undefined) {",
          "206:           return;",
          "207:         }",
          "211:       }",
          "212:     },",
          "238:     getImages() {",
          "241:         this.$api.badasoFile",
          "242:           .browseUsingLfm({",
          "244:           })",
          "245:           .then((res) => {",
          "247:             if (error) {",
          "248:               this.$vs.notify({",
          "249:                 title: this.$t(\"alert.danger\"),",
          "",
          "[Removed Lines]",
          "118:       dialog: false,",
          "119:       activeImage: null,",
          "120:       show: false,",
          "121:       selected: \"private\",",
          "122:       images: {",
          "123:         display: \"\",",
          "124:         items: [],",
          "125:         paginator: {},",
          "127:       files: [],",
          "128:       imageUrl: \"\",",
          "129:       inputByUrl: \"\",",
          "130:       isValidImage: false,",
          "131:       isImageSelected: false,",
          "132:       dirty: false,",
          "135:   computed: {",
          "136:     getSelected() {",
          "137:       this.activeImage = null;",
          "138:       return this.selected;",
          "139:     },",
          "140:     getSelectedFolder() {",
          "141:       if (this.getSelected === \"shares\") return \"/shares\";",
          "142:       else if (this.getSelected === \"url\") return;",
          "143:       else return this.getUserFolder;",
          "144:     },",
          "145:     getUserFolder() {",
          "146:       return \"/\" + this.$store.state.badaso.user.id;",
          "147:     },",
          "148:     isSubmitDisable() {",
          "149:       if (!this.isImageSelected && this.selected !== \"url\") {",
          "150:         return true;",
          "151:       }",
          "153:       if (!this.isValidImage && this.selected === \"url\") {",
          "154:         return true;",
          "155:       }",
          "157:       if (this.activeImage === null && this.selected !== \"url\") {",
          "158:         return true;",
          "159:       }",
          "161:       return false;",
          "164:   mounted() {",
          "166:       this.selected = \"shares\";",
          "169:     this.imageUrl = this.value;",
          "171:   watch: {",
          "172:     selected: {",
          "173:       handler(val) {",
          "174:         this.getImages();",
          "175:         this.isImageSelected = false;",
          "176:       },",
          "178:     value: {",
          "179:       handler(val) {",
          "180:         this.imageUrl = val;",
          "181:       },",
          "185:     pickFile() {",
          "186:       this.$refs.image.click();",
          "188:     showOverlay() {",
          "189:       this.show = true;",
          "190:       document.body.style.setProperty(\"position\", \"fixed\");",
          "191:       document.body.style.setProperty(\"width\", \"100%\");",
          "194:     closeOverlay() {",
          "195:       this.show = false;",
          "196:       this.activeImage = null;",
          "197:       document.body.style.removeProperty(\"position\");",
          "198:       document.body.style.removeProperty(\"width\");",
          "204:         if (files[0].size > 512000) {",
          "205:           this.errorMessages = [\"Out of limit size\"];",
          "209:         this.files = files;",
          "210:         this.uploadImage();",
          "213:     uploadImage() {",
          "214:       const files = new FormData();",
          "215:       files.append(\"upload\", this.files[0]);",
          "216:       files.append(\"working_dir\", this.getSelectedFolder);",
          "217:       this.$api.badasoFile",
          "218:         .uploadUsingLfm(files)",
          "219:         .then((res) => {",
          "220:           let error = _.get(res, 'data.original.error', null)",
          "221:           if (error) {",
          "222:             this.$vs.notify({",
          "223:               title: this.$t(\"alert.danger\"),",
          "224:               text: error.message,",
          "225:               color: \"danger\",",
          "226:             });",
          "227:           }",
          "228:           this.getImages();",
          "229:         })",
          "230:         .catch((error) => {",
          "231:           console.error(error);",
          "232:         });",
          "233:     },",
          "234:     isString(str) {",
          "235:       if (typeof str === \"string\" || str instanceof String) return true;",
          "236:       else return false;",
          "237:     },",
          "239:       this.images.items = [];",
          "240:       if (this.getSelectedFolder) {",
          "243:             workingDir: this.getSelectedFolder,",
          "246:             let error = _.get(res, 'data.original.error', null)",
          "",
          "[Added Lines]",
          "242:       showFileManager: false,",
          "243:       activeTab: \"private\",",
          "244:       showDeleteImage: false,",
          "245:       page: 1,",
          "246:       images: [],",
          "247:       paginator: {",
          "248:         total: 1,",
          "249:         perPage: 30,",
          "251:       isValidImageUrl: undefined,",
          "252:       model: null,",
          "255:   watch: {",
          "256:     page: {",
          "257:       handler() {",
          "258:         this.getImages();",
          "259:       },",
          "260:       immediate: false,",
          "263:   created() {",
          "265:       this.activeTab = \"shares\";",
          "268:   computed: {",
          "269:     getActiveTab() {",
          "270:       return this.activeTab;",
          "272:     getActiveFolder() {",
          "273:       switch (this.getActiveTab) {",
          "274:         case \"url\":",
          "275:           return;",
          "276:         case \"shares\":",
          "277:           return \"/shares\";",
          "278:         default:",
          "279:           return `/${this.userId}`;",
          "280:       }",
          "281:     },",
          "282:     hasValue() {",
          "283:       return (",
          "284:         this.value !== null &&",
          "285:         this.value !== \"null\" &&",
          "286:         this.value !== \"\" &&",
          "287:         this.value !== \"[]\" &&",
          "288:         this.value !== \"{}\"",
          "289:       );",
          "291:     ...mapState({",
          "292:       userId(state) {",
          "293:         return state.badaso.user.id;",
          "294:       },",
          "295:       availableMimetypes(state) {",
          "296:         return state.badaso.availableMimetypes;",
          "297:       },",
          "298:     }),",
          "301:     resetState() {",
          "302:       this.showFileManager = false;",
          "303:       if (this.sharesOnly) {",
          "304:         this.activeTab = \"shares\";",
          "305:       } else {",
          "306:         this.activeTab = \"private\";",
          "307:       }",
          "308:       this.showDeleteImage = false;",
          "309:       this.page = 1;",
          "310:       this.images = [];",
          "311:       this.paginator = {",
          "312:         total: 1,",
          "313:         perPage: 30,",
          "314:       };",
          "315:       if (!this.hasValue) {",
          "316:         this.model = null;",
          "317:       }",
          "318:       this.isValidImageUrl = undefined;",
          "320:     setActiveTab(tab) {",
          "321:       if (this.getActiveTab !== tab) {",
          "322:         this.activeTab = tab;",
          "323:         this.model = null;",
          "324:         this.page = 1;",
          "325:         this.getImages();",
          "326:       }",
          "327:     },",
          "328:     openFileManager() {",
          "329:       this.showFileManager = true;",
          "330:       this.disableScrollOnBody();",
          "333:     closeFileManager() {",
          "334:       this.showFileManager = false;",
          "335:       this.enableScrollOnBody();",
          "336:       this.resetState();",
          "337:     },",
          "338:     openDeleteDialog() {",
          "339:       this.showDeleteImage = true;",
          "340:     },",
          "341:     closeDeleteDialog() {",
          "342:       this.showDeleteImage = false;",
          "343:     },",
          "344:     emitInput() {",
          "345:       this.$emit(\"input\", this.model);",
          "346:       this.closeFileManager();",
          "347:     },",
          "348:     disableScrollOnBody() {",
          "349:       disableBodyScroll(document.querySelector(\"body\"));",
          "350:     },",
          "351:     enableScrollOnBody() {",
          "352:       enableBodyScroll(document.querySelector(\"body\"));",
          "358:         if (files[0].size > (this.availableMimetypes.image.maxSize * 100)) {",
          "359:           this.$vs.notify({",
          "360:             title: this.$t(\"alert.danger\"),",
          "361:             text: \"Size too large (Max. 5MB)\",",
          "362:             color: \"danger\",",
          "363:           });",
          "367:         this.uploadImage(files[0]);",
          "371:       if (this.getActiveFolder) {",
          "372:         this.$openLoader();",
          "375:             workingDir: this.getActiveFolder,",
          "376:             type: \"image\",",
          "377:             page: this.page,",
          "380:             let error = _.get(res, \"data.original.error\", null);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "251:                 color: \"danger\",",
          "252:               });",
          "253:             }",
          "258:           })",
          "259:           .catch((error) => {",
          "260:             console.log(error);",
          "261:           });",
          "262:       }",
          "263:     },",
          "272:     },",
          "273:     deleteImage() {",
          "274:       this.$api.badasoFile",
          "275:         .deleteUsingLfm({",
          "278:         })",
          "279:         .then((res) => {",
          "281:           if (error) {",
          "282:             this.$vs.notify({",
          "283:               title: this.$t(\"alert.danger\"),",
          "",
          "[Removed Lines]",
          "254:             this.images = res.data;",
          "255:             this.images.items = res.data.items.filter((val) => {",
          "256:               return val.thumbUrl !== null;",
          "257:             });",
          "264:     emitInput() {",
          "265:       if (this.selected !== \"url\") {",
          "266:         let url = this.images.items[this.activeImage].url;",
          "267:         this.$emit(\"input\", url);",
          "268:       } else {",
          "269:         this.$emit(\"input\", this.inputByUrl);",
          "270:       }",
          "271:       this.closeOverlay();",
          "276:           workingDir: this.getSelectedFolder,",
          "277:           \"items[]\": this.images.items[this.activeImage].name,",
          "280:           let error = _.get(res, 'data.original.error', null)",
          "",
          "[Added Lines]",
          "389:             this.images = res.data.items;",
          "390:             this.paginator = res.data.paginator;",
          "394:           })",
          "395:           .finally(() => {",
          "396:             this.$closeLoader();",
          "400:     uploadImage(file) {",
          "401:       const files = new FormData();",
          "402:       files.append(\"upload\", file);",
          "403:       files.append(\"type\", \"image\");",
          "404:       files.append(\"working_dir\", this.getActiveFolder);",
          "405:       this.$api.badasoFile",
          "406:         .uploadUsingLfm(files)",
          "407:         .then((res) => {",
          "408:           let error = _.get(res, \"data.original.error\", null);",
          "409:           if (error) {",
          "410:             this.$vs.notify({",
          "411:               title: this.$t(\"alert.danger\"),",
          "412:               text: error.message,",
          "413:               color: \"danger\",",
          "414:             });",
          "415:           } else {",
          "416:             this.$vs.notify({",
          "417:               title: this.$t(\"alert.success\"),",
          "418:               text: \"Upload successful\",",
          "419:               color: \"success\",",
          "420:             });",
          "421:           }",
          "422:         })",
          "423:         .catch((error) => {",
          "424:           this.$vs.notify({",
          "425:             title: this.$t(\"alert.danger\"),",
          "426:             text: error.message,",
          "427:             color: \"danger\",",
          "428:           });",
          "429:         })",
          "430:         .finally(() => {",
          "431:           this.getImages();",
          "432:         });",
          "435:       this.$openLoader();",
          "438:           workingDir: this.getActiveFolder,",
          "439:           type: \"image\",",
          "440:           \"items[]\": _.find(this.images, { url: this.model }).name,",
          "443:           let error = _.get(res, \"data.original.error\", null);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "285:               color: \"danger\",",
          "286:             });",
          "287:           }",
          "288:           this.getImages();",
          "289:         })",
          "290:         .catch((error) => {",
          "291:           console.log(error);",
          "292:         });",
          "307:     },",
          "308:   },",
          "309: };",
          "",
          "[Removed Lines]",
          "294:       this.activeImage = null;",
          "295:       this.dialog = false;",
          "296:     },",
          "297:     openDialog() {",
          "298:       this.dialog = true;",
          "299:     },",
          "300:     deleteFilePicked(item) {",
          "301:       if (item === null || item === undefined) return;",
          "303:       if (typeof item === \"string\" && item !== \"\") this.$emit(\"input\", null);",
          "304:       if (typeof item === \"object\") {",
          "305:         this.$emit(\"input\", null);",
          "306:       }",
          "310: </script>",
          "",
          "[Added Lines]",
          "456:         })",
          "457:         .finally(() => {",
          "458:           this.$closeLoader();",
          "459:           this.closeDeleteDialog();",
          "464: </script>",
          "",
          "---------------"
        ],
        "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue": [
          "File: src/resources/js/components/BadasoUploadImageMultiple.vue -> src/resources/js/components/BadasoUploadImageMultiple.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <template>",
          "6:         <div class=\"badaso-upload-image-multiple__preview\">",
          "9:         </div>",
          "10:       </vs-col>",
          "11:     </vs-row>",
          "13:       <div class=\"badaso-upload-image-multiple__popup-container\">",
          "14:         <div class=\"badaso-upload-image-multiple__popup--top-bar\">",
          "16:           <vs-spacer />",
          "18:             <vs-icon icon=\"delete\"></vs-icon>",
          "19:           </vs-button>",
          "20:         </div>",
          "21:         <ul class=\"badaso-upload-image-multiple__popup--left-bar\">",
          "25:         </ul>",
          "29:           </div>",
          "31:         </div>",
          "36:         </div>",
          "37:         <div class=\"badaso-upload-image-multiple__popup--bottom-bar\">",
          "38:           <div class=\"badaso-upload-image-multiple__popup-button--footer\">",
          "41:             </vs-button>",
          "44:             </vs-button>",
          "45:           </div>",
          "46:         </div>",
          "47:       </div>",
          "48:     </div>",
          "59:       </div>",
          "61:   </vs-col>",
          "62: </template>",
          "64: <script>",
          "66: export default {",
          "67:   name: \"BadasoUploadImageMultiple\",",
          "68:   props: {",
          "69:     size: {",
          "71:       default: \"12\",",
          "72:     },",
          "73:     label: {",
          "",
          "[Removed Lines]",
          "2:   <vs-col :vs-lg=\"size\" vs-xs=\"12\" class=\"badaso-upload-image-multiple__container\">",
          "3:     <vs-input :label=\"label\" :placeholder=\"placeholder\" @click=\"showOverlay\" v-on:keyup.space=\"showOverlay\" readonly v-model=\"imagesName\" icon=\"attach_file\" icon-after=\"true\" />",
          "4:     <vs-row>",
          "5:       <vs-col vs-lg=\"4\" vs-sm=\"12\" v-for=\"(imageData, index) in value\" :key=\"index\">",
          "7:           <vs-button class=\"badaso-upload-image-multiple__remove-button\" color=\"danger\" icon=\"close\" @click=\"deleteFilePicked(imageData)\" />",
          "8:           <img :src=\"imageData\" class=\"badaso-upload-image-multiple__preview-image\" />",
          "12:     <div class=\"badaso-upload-image-multiple__popup-dialog\" tabindex=\"0\" v-if=\"show\">",
          "15:           <h3>{{ $t('fileManager.title') }}</h3>",
          "17:           <vs-button color=\"danger\" type=\"relief\" class=\"badaso-upload-image-multiple__popup-button--delete\" v-if=\"getSelected !== 'url' &&   isImageSelected\" @click=\"openDialog\">",
          "22:           <li :class=\"[getSelected === 'private'  ? 'active' : '' ]\" @click=\"selected = 'private'\" v-if=\"privateOnly || !privateOnly && !sharesOnly\">Private</li>",
          "23:           <li :class=\"[getSelected === 'shares' ? 'active' : '' ]\" @click=\"selected = 'shares'\" v-if=\"sharesOnly || !sharesOnly && !privateOnly\">Shares</li>",
          "24:           <li :class=\"[getSelected === 'url' ? 'active' : '', $store.state.badaso.isOnline ? '' : 'badaso-upload-image__menu--disabled' ]\" @click=\"selected = 'url'\">Insert by URL</li>",
          "26:         <div class=\"badaso-upload-image-multiple__popup--right-bar\" v-if=\"getSelected !== 'url'\">",
          "27:           <div class=\"badaso-upload-image-multiple__popup-add-image\" @click=\"pickFile\">",
          "28:             <vs-icon icon=\"add\" color=\"#06bbd3\" size=\"75px\"></vs-icon>",
          "30:           <img :class=\"[activeImage.includes(index) ? 'active' : '', 'badaso-upload-image-multiple__popup-image']\" :src=\"item.thumbUrl\" v-for=\"(item, index) in images.items\" :key=\"index\" @click=\"selectImage(index)\">",
          "32:         <div v-if=\"getSelected === 'url'\" class=\"badaso-upload-image-multiple__popup--right-bar badaso-upload-image-multiple__popup--url-bar\">",
          "33:           <vs-input v-if=\"getSelected === 'url'\" label=\"Paste an image URL here\" placeholder=\"URL\" v-model=\"inputByUrl\" description-text=\"If your URL is correct, you'll see an image preview here. Large images may take a few minutes to appear. Only accept PNG and JPEG.\" @input=\"inputByUrl === '' ? dirty = false : dirty = true\" ></vs-input>",
          "34:           <p v-if=\"!isValidImage && getSelected === 'url' && dirty\" class=\"is-error\">Only valid image (PNG and JPEG) is accepted</p>",
          "35:           <img accept=\"image/png\" v-if=\"getSelected === 'url'\" :src=\"inputByUrl\" alt=\"\" @load=\"isValidImage = true\" @error=\"isValidImage = false\" class=\"badaso-upload-image-multiple__preview--small\">",
          "39:             <vs-button color=\"primary\" type=\"relief\" @click=\"emitInput\" :disabled=\"isSubmitDisable\">",
          "40:               {{ $t('button.submit') }}",
          "42:             <vs-button color=\"danger\" type=\"relief\" @click=\"closeOverlay\">",
          "43:               {{ $t('button.close') }}",
          "49:     <input type=\"file\" class=\"badaso-upload-image__input--hidden\" ref=\"image\" accept=\"image/*\" @change=\"onFilePicked\" multiple />",
          "50:     <div v-if=\"additionalInfo\" v-html=\"additionalInfo\"></div>",
          "51:     <div v-if=\"alert\">",
          "52:       <div v-if=\"$helper.isArray(alert)\">",
          "53:         <span class=\"badaso-upload-image-multiple__input--error\" v-for=\"(info, index) in alert\" :key=\"index\">",
          "54:           {{ info }}",
          "55:         </span>",
          "56:       </div>",
          "57:       <div v-else>",
          "58:         <span class=\"badaso-upload-image-multiple__input--error\" v-html=\"alert\"></span>",
          "60:     </div>",
          "65: import * as _ from \"lodash\"",
          "70:       type: String,",
          "",
          "[Added Lines]",
          "2:   <vs-col",
          "3:     :vs-lg=\"size\"",
          "4:     vs-xs=\"12\"",
          "5:     class=\"badaso-upload-image-multiple__container\"",
          "6:   >",
          "7:     <vs-input",
          "8:       :label=\"label\"",
          "9:       :placeholder=\"placeholder\"",
          "10:       @click=\"openFileManager\"",
          "11:       v-on:keyup.space=\"openFileManager\"",
          "12:       readonly",
          "13:       v-model=\"value\"",
          "14:       icon=\"attach_file\"",
          "15:       icon-after=\"true\"",
          "16:     />",
          "17:     <input",
          "18:       type=\"file\"",
          "19:       class=\"badaso-upload-image-multiple__input--hidden\"",
          "20:       ref=\"image\"",
          "21:       :accept=\"availableMimetypes.image.validMime.join(',')\"",
          "22:       @change=\"onFilePicked\"",
          "23:       multiple",
          "24:     />",
          "25:     <div v-if=\"additionalInfo\" v-html=\"additionalInfo\" />",
          "26:     <div v-if=\"alert\">",
          "27:       <div v-if=\"$helper.isArray(alert)\">",
          "28:         <span",
          "29:           class=\"badaso-upload-image-multiple__input--error\"",
          "30:           v-for=\"(info, index) in alert\"",
          "31:           :key=\"index\"",
          "32:         >",
          "33:           {{ info }}",
          "34:         </span>",
          "35:       </div>",
          "36:       <div v-else>",
          "37:         <span",
          "38:           class=\"badaso-upload-image-multiple__input--error\"",
          "39:           v-html=\"alert\"",
          "40:         />",
          "41:       </div>",
          "42:     </div>",
          "43:     <vs-row v-if=\"hasValue\">",
          "44:       <vs-col",
          "45:         vs-lg=\"4\"",
          "46:         vs-sm=\"12\"",
          "47:         v-for=\"(val, index) in getImageModels\"",
          "48:         :key=\"index\"",
          "49:       >",
          "51:           <vs-button",
          "52:             class=\"badaso-upload-image-multiple__remove-button\"",
          "53:             color=\"danger\"",
          "54:             icon=\"close\"",
          "55:             @click=\"() => deleteSelectedImage(val)\"",
          "56:           />",
          "57:           <img :src=\"val\" class=\"badaso-upload-image-multiple__preview-image\" />",
          "62:     <div",
          "63:       class=\"badaso-upload-image-multiple__popup-dialog\"",
          "64:       tabindex=\"0\"",
          "65:       v-if=\"showFileManager\"",
          "66:     >",
          "69:           <h3>{{ $t(\"fileManager.title\") }}</h3>",
          "71:           <vs-button",
          "72:             color=\"danger\"",
          "73:             type=\"relief\"",
          "74:             class=\"badaso-upload-image-multiple__popup-button--delete\"",
          "75:             v-if=\"getActiveTab !== 'url' && model\"",
          "76:             @click=\"openDeleteDialog\"",
          "77:           >",
          "83:           <li",
          "84:             :class=\"{ active: getActiveTab === 'private' }\"",
          "85:             @click=\"setActiveTab('private')\"",
          "86:             v-if=\"privateOnly || (!privateOnly && !sharesOnly)\"",
          "87:           >",
          "88:             Private",
          "89:           </li>",
          "90:           <li",
          "91:             :class=\"{ active: getActiveTab === 'shares' }\"",
          "92:             @click=\"setActiveTab('shares')\"",
          "93:             v-if=\"sharesOnly || (!sharesOnly && !privateOnly)\"",
          "94:           >",
          "95:             Shares",
          "96:           </li>",
          "97:           <li",
          "98:             :class=\"{",
          "99:               active: getActiveTab === 'url',",
          "100:               'badaso-upload-image-multiple__menu--disabled':",
          "101:                 !$store.state.badaso.isOnline,",
          "102:             }\"",
          "103:             @click=\"setActiveTab('url')\"",
          "104:           >",
          "105:             Insert by URL",
          "106:           </li>",
          "109:         <div",
          "110:           class=\"badaso-upload-image-multiple__popup--right-bar\"",
          "111:           v-if=\"getActiveTab !== 'url'\"",
          "112:         >",
          "113:           <div",
          "114:             class=\"badaso-upload-image-multiple__popup-add-image\"",
          "115:             @click=\"$refs.image.click()\"",
          "116:           >",
          "117:             <vs-icon icon=\"add\" color=\"#06bbd3\" size=\"40px\"></vs-icon>",
          "119:           <img",
          "120:             :class=\"{",
          "121:               active: model.includes(image.url),",
          "122:               'badaso-upload-image-multiple__popup-image': true,",
          "123:             }\"",
          "124:             :src=\"image.thumbUrl ? image.thumbUrl : image.url\"",
          "125:             v-for=\"(image, index) in images\"",
          "126:             :key=\"index\"",
          "127:             @click=\"selectImage(image.url)\"",
          "128:           />",
          "131:         <div",
          "132:           v-if=\"getActiveTab === 'url'\"",
          "133:           class=\"",
          "134:             badaso-upload-image-multiple__popup--right-bar",
          "135:             badaso-upload-image-multiple__popup--url-bar",
          "136:           \"",
          "137:         >",
          "138:           <vs-input",
          "139:             label=\"Paste an image URL here\"",
          "140:             placeholder=\"URL\"",
          "141:             v-model=\"model\"",
          "142:             @input=\"$openLoader()\"",
          "143:             description-text=\"If your URL is correct, you'll see an image preview here. Large images may take a few minutes to appear. Only accept PNG and JPEG.\"",
          "144:           />",
          "145:           <p",
          "146:             v-if=\"isValidImageUrl === false && model.length > 0\"",
          "147:             class=\"is-error\"",
          "148:           >",
          "149:             Only valid image (PNG and JPEG) is accepted",
          "150:           </p>",
          "151:           <img",
          "152:             accept=\"image/png\"",
          "153:             :src=\"model\"",
          "154:             alt=\"\"",
          "155:             @load=\"",
          "156:               isValidImageUrl = true;",
          "157:               $closeLoader();",
          "158:             \"",
          "159:             @error=\"",
          "160:               isValidImageUrl = false;",
          "161:               $closeLoader();",
          "162:             \"",
          "163:             class=\"badaso-upload-image-multiple__preview--small\"",
          "164:           />",
          "169:             <div v-if=\"getActiveTab !== 'url'\">",
          "170:               <vs-pagination",
          "171:                 :total=\"Math.ceil(paginator.total / paginator.perPage)\"",
          "172:                 v-model=\"page\"",
          "173:                 :max=\"1\"",
          "174:               ></vs-pagination>",
          "175:             </div>",
          "176:             <vs-spacer />",
          "177:             <vs-button",
          "178:               color=\"primary\"",
          "179:               type=\"relief\"",
          "180:               class=\"badaso-upload-image-multiple__popup-button\"",
          "181:               @click=\"emitInput\"",
          "182:               :disabled=\"!model || model.length === 0\"",
          "183:             >",
          "184:               {{ $t(\"button.submit\") }}",
          "186:             <vs-button",
          "187:               color=\"danger\"",
          "188:               type=\"relief\"",
          "189:               class=\"badaso-upload-image-multiple__popup-button\"",
          "190:               @click=\"closeFileManager\"",
          "191:             >",
          "192:               {{ $t(\"button.close\") }}",
          "199:     <vs-popup",
          "200:       :title=\"$t('action.delete.title')\"",
          "201:       :active.sync=\"showDeleteImage\"",
          "202:       class=\"badaso-upload-image-multiple__popup-dialog--delete\"",
          "203:     >",
          "204:       <p>{{ $t(\"action.delete.text\") }}</p>",
          "205:       <div class=\"badaso-upload-image-multiple__popup-dialog-content--delete\">",
          "206:         <vs-button color=\"primary\" type=\"relief\" @click=\"closeDeleteDialog\">",
          "207:           {{ $t(\"action.delete.cancel\") }}",
          "208:         </vs-button>",
          "209:         <vs-button color=\"danger\" type=\"relief\" @click=\"deleteImage()\">",
          "210:           {{ $t(\"action.delete.accept\") }}",
          "211:         </vs-button>",
          "213:     </vs-popup>",
          "218: import { mapState } from \"vuex\";",
          "219: import * as _ from \"lodash\";",
          "220: import { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";",
          "225:       type: String | Number,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79:       default: \"Upload Image Multiple\",",
          "80:     },",
          "81:     value: {",
          "86:     },",
          "87:     additionalInfo: {",
          "88:       type: String,",
          "",
          "[Removed Lines]",
          "82:       type: Array,",
          "83:       default: () => {",
          "84:         return [];",
          "85:       },",
          "",
          "[Added Lines]",
          "237:       default: \"\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "99:       type: Boolean,",
          "100:     },",
          "101:   },",
          "115:   data() {",
          "116:     return {",
          "126:       },",
          "133:     };",
          "134:   },",
          "136:     if (this.sharesOnly) {",
          "138:     }",
          "142:   },",
          "143:   computed: {",
          "147:     },",
          "152:     },",
          "155:     },",
          "165:       }",
          "168:   },",
          "169:   methods: {",
          "172:     },",
          "178:     },",
          "183:     },",
          "184:     onFilePicked(e) {",
          "190:         }",
          "194:     },",
          "207:           });",
          "213:     },",
          "222:           if (error) {",
          "223:             this.$vs.notify({",
          "224:               title: this.$t(\"alert.danger\"),",
          "225:               text: error.message,",
          "226:               color: \"danger\",",
          "227:             });",
          "228:           }",
          "237:         })",
          "262:           this.$vs.notify({",
          "263:             title: this.$t(\"alert.danger\"),",
          "264:             text: error.message,",
          "265:             color: \"danger\",",
          "266:           });",
          "278:     },",
          "285:       }",
          "287:     },",
          "299:   },",
          "300: };",
          "",
          "[Removed Lines]",
          "102:   watch: {",
          "103:     selected: {",
          "104:       handler(val) {",
          "105:         this.getImages()",
          "106:         this.isImageSelected = false",
          "107:       }",
          "108:     },",
          "109:     value: {",
          "110:       handler(val) {",
          "111:         this.imageUrl = val",
          "112:       }",
          "113:     }",
          "114:   },",
          "117:       imagesName: \"\",",
          "118:       dialog: false,",
          "119:       activeImage: [],",
          "120:       show: false,",
          "121:       selected: 'private',",
          "122:       images: {",
          "123:         display: \"\",",
          "124:         items: [],",
          "125:         paginator: {},",
          "127:       files: [],",
          "128:       imageUrl: [],",
          "129:       inputByUrl: \"\",",
          "130:       isValidImage: false,",
          "131:       isImageSelected: false,",
          "132:       dirty: false,",
          "135:   mounted() {",
          "137:       this.selected = \"shares\"",
          "140:     this.imageUrl = this.value",
          "141:     this.imagesName = this.imageUrl.join(', ')",
          "144:     getSelected() {",
          "145:       this.activeImage = []",
          "146:       return this.selected",
          "148:     getSelectedFolder() {",
          "149:       if (this.getSelected === 'shares') return '/shares'",
          "150:       else if (this.getSelected === 'url') return",
          "151:       else return this.getUserFolder",
          "153:     getUserFolder() {",
          "154:       return '/' + this.$store.state.badaso.user.id",
          "156:     isSubmitDisable() {",
          "157:       if (!this.isImageSelected && this.selected !== 'url') {",
          "158:         return true",
          "159:       }",
          "160:       if (!this.isValidImage && this.selected === 'url') {",
          "161:         return true",
          "162:       }",
          "163:       if (this.activeImage.length === 0 && this.selected !== 'url') {",
          "164:         return true",
          "166:       return false",
          "167:     }",
          "170:     pickFile() {",
          "171:       this.$refs.image.click();",
          "173:     showOverlay() {",
          "174:       this.show = true",
          "175:       document.body.style.setProperty('position', 'fixed')",
          "176:       document.body.style.setProperty(\"width\", \"100%\");",
          "177:       this.getImages()",
          "179:     closeOverlay() {",
          "180:       this.show = false",
          "181:       document.body.style.removeProperty('position')",
          "182:       document.body.style.removeProperty(\"width\");",
          "185:       let files = e.target.files;",
          "186:       files.forEach((file) => {",
          "187:         if (file.size > 512000) {",
          "188:           this.errorMessages = [\"Out of limit size\"];",
          "189:           return;",
          "191:         this.files = file",
          "192:         this.uploadImage()",
          "193:       });",
          "195:     uploadImage() {",
          "196:       const files = new FormData()",
          "197:       files.append('upload', this.files)",
          "198:       files.append('working_dir', this.getSelectedFolder)",
          "199:       this.$api.badasoFile.uploadUsingLfm(files)",
          "200:       .then(res => {",
          "201:         let error = _.get(res, 'data.original.error', null)",
          "202:         if (error) {",
          "203:           this.$vs.notify({",
          "204:             title: this.$t(\"alert.danger\"),",
          "205:             text: error.message,",
          "206:             color: \"danger\",",
          "208:         }",
          "209:         this.getImages()",
          "210:       }).catch(error => {",
          "211:         console.error(error);",
          "212:       })",
          "214:     getImages() {",
          "215:       this.images.items = []",
          "216:       if (this.getSelectedFolder) {",
          "217:         this.$api.badasoFile.browseUsingLfm({",
          "218:           workingDir: this.getSelectedFolder",
          "219:         })",
          "220:         .then(res => {",
          "221:           let error = _.get(res, 'data.original.error', null)",
          "229:           const items = res.data.items.filter(val => {",
          "230:             return val.thumbUrl !== null",
          "231:           })",
          "232:           this.images = res.data",
          "233:           this.images.items = items",
          "234:         })",
          "235:         .catch(error => {",
          "236:           console.log(error);",
          "238:       }",
          "239:     },",
          "240:     emitInput() {",
          "241:       if (this.selected !== 'url') {",
          "242:         let url = []",
          "243:         this.activeImage.forEach(element => {",
          "244:           url.push(this.images.items[element].url)",
          "245:         });",
          "246:         this.imagesName = url.join(', ')",
          "247:         this.isPicked = true",
          "248:         this.$emit('input', url)",
          "249:       } else {",
          "250:         this.$emit('input', this.inputByUrl)",
          "251:       }",
          "252:       this.closeOverlay()",
          "253:     },",
          "254:     deleteImage() {",
          "255:       this.$api.badasoFile.deleteUsingLfm({",
          "256:         workingDir: this.getSelectedFolder,",
          "257:         'items[]': this.images.items[this.activeImage].name",
          "258:       })",
          "259:       .then(res => {",
          "260:         let error = _.get(res, 'data.original.error', null)",
          "261:         if (error) {",
          "267:         }",
          "268:         this.getImages()",
          "269:       })",
          "270:       .catch(error => {",
          "271:         console.log(error);",
          "272:       })",
          "273:       this.activeImage = []",
          "274:       this.dialog = false",
          "275:     },",
          "276:     openDialog() {",
          "277:       this.dialog = true",
          "279:     selectImage(index) {",
          "280:       if (!this.activeImage.includes(index)) {",
          "281:         this.activeImage.push(index)",
          "282:       } else {",
          "283:         let idx = this.activeImage.indexOf(index)",
          "284:         this.activeImage.splice(idx, 1)",
          "286:       this.isImageSelected = true",
          "288:     deleteFilePicked(item) {",
          "289:       if (item === null || item === undefined) return",
          "290:       if (typeof item === 'string' && item !== '') {",
          "291:         let idx = this.imageUrl.indexOf(item)",
          "292:         let activeIdx = this.activeImage.indexOf(idx)",
          "293:         this.activeImage.splice(activeIdx, 1)",
          "294:         this.imageUrl.splice(idx, 1)",
          "295:         this.imagesName = this.imageUrl.join(', ')",
          "296:         this.$emit('input', this.imageUrl)",
          "297:       }",
          "298:     }",
          "301: </script>",
          "",
          "[Added Lines]",
          "256:       showFileManager: false,",
          "257:       activeTab: \"private\",",
          "258:       showDeleteImage: false,",
          "259:       page: 1,",
          "260:       images: [],",
          "261:       paginator: {",
          "262:         total: 1,",
          "263:         perPage: 30,",
          "265:       model: [],",
          "266:       isValidImageUrl: undefined,",
          "269:   watch: {",
          "270:     page: {",
          "271:       handler() {",
          "272:         this.getImages();",
          "273:       },",
          "274:       immediate: false,",
          "275:     },",
          "276:   },",
          "277:   created() {",
          "279:       this.activeTab = \"shares\";",
          "283:     getActiveTab() {",
          "284:       return this.activeTab;",
          "286:     getActiveFolder() {",
          "287:       switch (this.getActiveTab) {",
          "288:         case \"url\":",
          "289:           return;",
          "290:         case \"shares\":",
          "291:           return \"/shares\";",
          "292:         default:",
          "293:           return `/${this.userId}`;",
          "294:       }",
          "296:     hasValue() {",
          "297:       return (",
          "298:         this.value !== null &&",
          "299:         this.value !== \"null\" &&",
          "300:         this.value !== \"\" &&",
          "301:         this.value !== \"[]\" &&",
          "302:         this.value !== \"{}\"",
          "303:       );",
          "305:     getImageModels() {",
          "306:       if (this.hasValue) {",
          "307:         return JSON.parse(this.value);",
          "308:       } else {",
          "309:         return this.model;",
          "311:     },",
          "312:     ...mapState({",
          "313:       userId(state) {",
          "314:         return state.badaso.user.id;",
          "315:       },",
          "316:       availableMimetypes(state) {",
          "317:         return state.badaso.availableMimetypes;",
          "318:       },",
          "319:     }),",
          "322:     deleteSelectedImage(url) {",
          "323:       let index = this.getImageModels.indexOf(url);",
          "324:       this.getImageModels.splice(index, 1);",
          "325:       this.$emit(\"input\", JSON.stringify(this.getImageModels));",
          "326:     },",
          "327:     selectImage(url) {",
          "328:       if (this.model.includes(url)) {",
          "329:         let idx = this.model.indexOf(url);",
          "330:         this.model.splice(idx, 1);",
          "331:       } else {",
          "332:         this.model.push(url);",
          "333:       }",
          "334:     },",
          "335:     resetState() {",
          "336:       this.showFileManager = false;",
          "337:       if (this.sharesOnly) {",
          "338:         this.activeTab = \"shares\";",
          "339:       } else {",
          "340:         this.activeTab = \"private\";",
          "341:       }",
          "342:       this.showDeleteImage = false;",
          "343:       this.page = 1;",
          "344:       this.images = [];",
          "345:       this.paginator = {",
          "346:         total: 1,",
          "347:         perPage: 30,",
          "348:       };",
          "349:       if (!this.hasValue) {",
          "350:         this.model = [];",
          "351:       }",
          "352:       this.isValidImageUrl = undefined;",
          "353:     },",
          "354:     setActiveTab(tab) {",
          "355:       if (this.getActiveTab !== tab) {",
          "356:         this.activeTab = tab;",
          "357:         this.model = [];",
          "358:         this.page = 1;",
          "359:         this.getImages();",
          "360:       }",
          "362:     openFileManager() {",
          "363:       this.showFileManager = true;",
          "364:       this.disableScrollOnBody();",
          "365:       this.getImages();",
          "367:     closeFileManager() {",
          "368:       this.showFileManager = false;",
          "369:       this.enableScrollOnBody();",
          "370:       this.resetState();",
          "371:     },",
          "372:     openDeleteDialog() {",
          "373:       this.showDeleteImage = true;",
          "374:     },",
          "375:     closeDeleteDialog() {",
          "376:       this.showDeleteImage = false;",
          "377:     },",
          "378:     emitInput() {",
          "379:       this.$emit(\"input\", JSON.stringify(this.model));",
          "380:       this.closeFileManager();",
          "381:     },",
          "382:     disableScrollOnBody() {",
          "383:       disableBodyScroll(document.querySelector(\"body\"));",
          "384:     },",
          "385:     enableScrollOnBody() {",
          "386:       enableBodyScroll(document.querySelector(\"body\"));",
          "389:       this.$refs.image.tabindex = -1;",
          "390:       const files = e.target.files;",
          "391:       for (const file of files) {",
          "392:         if (file !== undefined) {",
          "393:           if (file.size > (this.availableMimetypes.image.maxSize * 100)) {",
          "394:             this.$vs.notify({",
          "395:               title: this.$t(\"alert.danger\"),",
          "396:               text: \"Size too large (Max. 5MB)\",",
          "397:               color: \"danger\",",
          "398:             });",
          "399:             return;",
          "400:           }",
          "402:           this.uploadImage(file);",
          "404:       }",
          "406:     getImages() {",
          "407:       if (this.getActiveFolder) {",
          "408:         this.$openLoader();",
          "409:         this.$api.badasoFile",
          "410:           .browseUsingLfm({",
          "411:             workingDir: this.getActiveFolder,",
          "412:             type: \"image\",",
          "413:             page: this.page,",
          "414:           })",
          "415:           .then((res) => {",
          "416:             let error = _.get(res, \"data.original.error\", null);",
          "417:             if (error) {",
          "418:               this.$vs.notify({",
          "419:                 title: this.$t(\"alert.danger\"),",
          "420:                 text: error.message,",
          "421:                 color: \"danger\",",
          "422:               });",
          "423:             }",
          "425:             this.images = res.data.items;",
          "426:             this.paginator = res.data.paginator;",
          "427:           })",
          "428:           .catch((error) => {",
          "429:             console.log(error);",
          "430:           })",
          "431:           .finally(() => {",
          "432:             this.$closeLoader();",
          "434:       }",
          "436:     uploadImage(file) {",
          "437:       const files = new FormData();",
          "438:       files.append(\"upload\", file);",
          "439:       files.append(\"type\", \"image\");",
          "440:       files.append(\"working_dir\", this.getActiveFolder);",
          "441:       this.$api.badasoFile",
          "442:         .uploadUsingLfm(files)",
          "443:         .then((res) => {",
          "444:           let error = _.get(res, \"data.original.error\", null);",
          "451:           } else {",
          "452:             this.$vs.notify({",
          "453:               title: this.$t(\"alert.success\"),",
          "454:               text: \"Upload successful\",",
          "455:               color: \"success\",",
          "456:             });",
          "459:         .catch((error) => {",
          "465:         })",
          "466:         .finally(() => {",
          "467:           this.getImages();",
          "468:         });",
          "470:     deleteImage() {",
          "471:       this.$openLoader();",
          "473:       for (let index = 0; index < this.model.length; index++) {",
          "474:         const element = this.model[index];",
          "475:         console.log(element);",
          "476:         const currentModel = _.filter(this.images, { url: element });",
          "477:         this.$api.badasoFile",
          "478:           .deleteUsingLfm({",
          "479:             workingDir: this.getActiveFolder,",
          "480:             type: \"image\",",
          "481:             \"items[]\": currentModel[0].name,",
          "482:           })",
          "483:           .then((res) => {",
          "484:             let error = _.get(res, \"data.original.error\", null);",
          "485:             if (error) {",
          "486:               this.$vs.notify({",
          "487:                 title: this.$t(\"alert.danger\"),",
          "488:                 text: error.message,",
          "489:                 color: \"danger\",",
          "490:               });",
          "491:             }",
          "493:             if (index + 1 === this.model.length) {",
          "494:               this.getImages();",
          "495:             }",
          "496:           })",
          "497:           .catch((error) => {",
          "498:             console.log(error);",
          "499:           })",
          "500:           .finally(() => {",
          "501:             if (index + 1 === this.model.length) {",
          "502:               this.$closeLoader();",
          "503:               this.closeDeleteDialog();",
          "504:             }",
          "505:           });",
          "510: </script>",
          "",
          "---------------"
        ],
        "src/resources/js/store/modules/badaso.js||src/resources/js/store/modules/badaso.js": [
          "File: src/resources/js/store/modules/badaso.js -> src/resources/js/store/modules/badaso.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "15:     groupList: [],",
          "16:     config: {},",
          "17:     user: {",
          "19:     },",
          "20:     locale: lang.languages,",
          "21:     selectedLocale: {",
          "",
          "[Removed Lines]",
          "18:       avatar: 'files/shares/default-user.png'",
          "",
          "[Added Lines]",
          "18:       avatar: 'photos/shares/default-user.png'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30:     },",
          "31:     isOnline: false,",
          "32:     countUnreadMessage: 0,",
          "33:   },",
          "34:   mutations: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33:     availableMimetypes: {",
          "34:       file: {},",
          "35:       image: {},",
          "36:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "188:       localStorage.clear();",
          "189:       window.location.reload();",
          "190:     },",
          "192:     SET_GLOBAL_STATE(state, { key, value }) {",
          "193:       state[key] = value;",
          "194:     },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "195:     FETCH_FILE_CONFIGURATION(state) {",
          "196:       api.badasoFile.browseConfiguration()",
          "197:       .then(res => {",
          "198:         state.availableMimetypes.image = res.data.image;",
          "199:         state.availableMimetypes.file = res.data.file;",
          "200:       })",
          "201:       .catch(err => {",
          "202:         console.error(err);",
          "203:       })",
          "204:     },",
          "",
          "---------------"
        ],
        "src/resources/views/mail/email-verification.blade.php||src/resources/views/mail/email-verification.blade.php": [
          "File: src/resources/views/mail/email-verification.blade.php -> src/resources/views/mail/email-verification.blade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "161:       <td class=\"container\"",
          "162:         style=\"font-family: sans-serif; font-size: 14px; vertical-align: top; display: block; Margin: 0 auto; max-width: 580px; padding: 10px; width: 580px;\">",
          "163:         <div style=\"text-align: center;\"><img",
          "165:             width=\"25%\" alt=\"Logo Badaso\"></div>",
          "166:         <div class=\"content\"",
          "167:           style=\"box-sizing: border-box; display: block; Margin: 0 auto; max-width: 580px; padding: 10px;\">",
          "",
          "[Removed Lines]",
          "164:             src=\"{{ Storage::url('files/shares/logo-144px.png') }}\"",
          "",
          "[Added Lines]",
          "164:             src=\"{{ Storage::url('photos/shares/logo-144px.png') }}\"",
          "",
          "---------------"
        ],
        "src/resources/views/mail/forgot-password.blade.php||src/resources/views/mail/forgot-password.blade.php": [
          "File: src/resources/views/mail/forgot-password.blade.php -> src/resources/views/mail/forgot-password.blade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "161:       <td class=\"container\"",
          "162:         style=\"font-family: sans-serif; font-size: 14px; vertical-align: top; display: block; Margin: 0 auto; max-width: 580px; padding: 10px; width: 580px;\">",
          "163:         <div style=\"text-align: center;\"><img",
          "165:             width=\"25%\" alt=\"Logo Badaso\"></div>",
          "166:         <div class=\"content\"",
          "167:           style=\"box-sizing: border-box; display: block; Margin: 0 auto; max-width: 580px; padding: 10px;\">",
          "",
          "[Removed Lines]",
          "164:         src=\"{{ Storage::url('files/shares/logo-144px.png') }}\"",
          "",
          "[Added Lines]",
          "164:         src=\"{{ Storage::url('photos/shares/logo-144px.png') }}\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5464a658cbe268b472890ff6c86f2dcbd1268691",
      "candidate_info": {
        "commit_hash": "5464a658cbe268b472890ff6c86f2dcbd1268691",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/5464a658cbe268b472890ff6c86f2dcbd1268691",
        "files": [
          "src/Controllers/BadasoBaseController.php",
          "src/Helpers/GetData.php",
          "src/resources/js/components/BadasoUploadImage.vue",
          "src/resources/js/pages/crud-generated/browse.vue",
          "src/resources/js/pages/crud-generated/read.vue"
        ],
        "message": "fix link url api",
        "before_after_code_files": [
          "src/Controllers/BadasoBaseController.php||src/Controllers/BadasoBaseController.php",
          "src/Helpers/GetData.php||src/Helpers/GetData.php",
          "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue",
          "src/resources/js/pages/crud-generated/browse.vue||src/resources/js/pages/crud-generated/browse.vue",
          "src/resources/js/pages/crud-generated/read.vue||src/resources/js/pages/crud-generated/read.vue"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [
            "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue"
          ],
          "candidate": [
            "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue"
          ]
        }
      },
      "candidate_diff": {
        "src/Controllers/BadasoBaseController.php||src/Controllers/BadasoBaseController.php": [
          "File: src/Controllers/BadasoBaseController.php -> src/Controllers/BadasoBaseController.php"
        ],
        "src/Helpers/GetData.php||src/Helpers/GetData.php": [
          "File: src/Helpers/GetData.php -> src/Helpers/GetData.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:         $field_identify_related_user = null;",
          "33:         $roles_can_see_all_data = [];",
          "37:         $field_identify_related_user = $permissions ? $permissions['field_identify_related_user'] : null;",
          "",
          "[Removed Lines]",
          "35:         $permissions = Permission::where('key', 'browse_'.$data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->first();",
          "",
          "[Added Lines]",
          "35:         $permissions = Permission::where('key', 'browse_' . $data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->first();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56:         $records = [];",
          "57:         $query = $model::query()->select($fields);",
          "60:             if ($is_field) {",
          "61:                 $query = $model::query()->select($fields)->where($field_identify_related_user, auth()->user()->id);",
          "62:             }",
          "",
          "[Removed Lines]",
          "59:         if (! $is_roles) {",
          "",
          "[Added Lines]",
          "59:         if (!$is_roles) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "120:         $field_identify_related_user = null;",
          "121:         $roles_can_see_all_data = [];",
          "125:         $field_identify_related_user = $permissions ? $permissions['field_identify_related_user'] : null;",
          "",
          "[Removed Lines]",
          "123:         $permissions = Permission::where('key', 'browse_'.$data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->first();",
          "",
          "[Added Lines]",
          "123:         $permissions = Permission::where('key', 'browse_' . $data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->first();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "150:         if ($order_field) {",
          "151:             $data = $model::query()->select($fields)->orderBy($order_field, $order_direction);",
          "153:                 if ($is_field) {",
          "154:                     $data = $model::query()->select($fields)->orderBy($order_field, $order_direction)->where($field_identify_related_user, auth()->user()->id);",
          "155:                 }",
          "156:             }",
          "157:         } else {",
          "158:             $data = $model::query()->select($fields);",
          "160:                 if ($is_field) {",
          "161:                     $data = $model::query()->select($fields)->where($field_identify_related_user, auth()->user()->id);",
          "162:                 }",
          "",
          "[Removed Lines]",
          "152:             if (! $is_roles) {",
          "159:             if (! $is_roles) {",
          "",
          "[Added Lines]",
          "152:             if (!$is_roles) {",
          "159:             if (!$is_roles) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "238:         $field_identify_related_user = null;",
          "239:         $roles_can_see_all_data = [];",
          "243:         $field_identify_related_user = $permissions ? $permissions['field_identify_related_user'] : null;",
          "",
          "[Removed Lines]",
          "241:         $permissions = Permission::where('key', 'browse_'.$data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->first();",
          "",
          "[Added Lines]",
          "241:         $permissions = Permission::where('key', 'browse_' . $data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->first();",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "259:         $fields = array_diff(array_merge($fields, $ids, $fields_data_identifier), $field_other_relation);",
          "260:         $query = DB::table($data_type->name)->select($fields);",
          "263:             if ($is_field) {",
          "264:                 $query = DB::table($data_type->name)->select($fields)->where($field_identify_related_user, auth()->user()->id);",
          "265:             }",
          "",
          "[Removed Lines]",
          "262:         if (! $is_roles) {",
          "",
          "[Added Lines]",
          "262:         if (!$is_roles) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "329:         $field_identify_related_user = null;",
          "330:         $roles_can_see_all_data = [];",
          "334:         $field_identify_related_user = $permissions ? $permissions['field_identify_related_user'] : null;",
          "",
          "[Removed Lines]",
          "332:         $permissions = Permission::where('key', 'browse_'.$data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->first();",
          "",
          "[Added Lines]",
          "332:         $permissions = Permission::where('key', 'browse_' . $data_type->name)->where('table_name', $data_type->name)->select('roles_can_see_all_data', 'field_identify_related_user')->first();",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "383:                                     $upload_image_multiple[] = $file_name;",
          "384:                                     $upload_image_multiple = join('/', $upload_image_multiple);",
          "385:                                 }",
          "388:                                 return $asset;",
          "389:                             });",
          "",
          "[Removed Lines]",
          "386:                                 $asset = asset('storage/'.$upload_image_multiple);",
          "",
          "[Added Lines]",
          "386:                                 $asset = asset('storage/' . $upload_image_multiple);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "394:                 } elseif ($data_row->type == 'upload_image') {",
          "395:                     if (isset($record->{$data_row->field})) {",
          "396:                         $upload_image = $record->{$data_row->field};",
          "397:                         if (isset($upload_image)) {",
          "405:                             }",
          "407:                             $record->{$data_row->field} = $upload_image;",
          "408:                         }",
          "409:                     }",
          "",
          "[Removed Lines]",
          "398:                             if (config('lfm.should_create_thumbnails') == true) {",
          "399:                                 $put_thumbs = config('lfm.thumb_folder_name');",
          "400:                                 $upload_image = explode('/', $upload_image);",
          "401:                                 $file_name = $upload_image[count($upload_image) - 1];",
          "402:                                 $upload_image[count($upload_image) - 1] = $put_thumbs;",
          "403:                                 $upload_image[] = $file_name;",
          "404:                                 $upload_image = join('/', $upload_image);",
          "406:                             $upload_image = asset('storage/'.$upload_image);",
          "",
          "[Added Lines]",
          "399:                             if (str_contains($upload_image, 'https')) {",
          "400:                                 $upload_image = $upload_image;",
          "401:                             } else {",
          "402:                                 if (config('lfm.should_create_thumbnails') == true) {",
          "403:                                     $put_thumbs = config('lfm.thumb_folder_name');",
          "404:                                     $upload_image = explode('/', $upload_image);",
          "405:                                     $file_name = $upload_image[count($upload_image) - 1];",
          "406:                                     $upload_image[count($upload_image) - 1] = $put_thumbs;",
          "407:                                     $upload_image[] = $file_name;",
          "408:                                     $upload_image = join('/', $upload_image);",
          "409:                                 }",
          "410:                                 $upload_image = asset('storage/' . $upload_image);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "413:                     $record->$table_manytomany = $data_relation;",
          "414:                 }",
          "415:             }",
          "417:             return $record;",
          "418:         });",
          "420:             if ($is_field) {",
          "421:                 foreach ($records as $key => $record) {",
          "424:                         unset($records[$key]);",
          "425:                     }",
          "426:                 }",
          "",
          "[Removed Lines]",
          "419:         if (! $is_roles) {",
          "422:                     if (isset($record->{$field_identify_related_user}) &&",
          "423:                         $record->{$field_identify_related_user} != auth()->user()->id) {",
          "",
          "[Added Lines]",
          "423:         if (!$is_roles) {",
          "426:                     if (",
          "427:                         isset($record->{$field_identify_related_user}) &&",
          "428:                         $record->{$field_identify_related_user} != auth()->user()->id",
          "429:                     ) {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "474:                 if (isset($destination_table_display_more_column)) {",
          "475:                     foreach ($destination_table_display_more_column as $index => $item_destination_table_display_more_column) {",
          "477:                             $arr_query_select[] = $item_destination_table_display_more_column;",
          "478:                         }",
          "479:                     }",
          "",
          "[Removed Lines]",
          "476:                         if (! in_array($item_destination_table_display_more_column, $arr_query_select)) {",
          "",
          "[Added Lines]",
          "482:                         if (!in_array($item_destination_table_display_more_column, $arr_query_select)) {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "482:                 if (isset($row->{$field->field}) && $field->relation['relation_type'] == 'belongs_to_many') {",
          "483:                     $data_table_destination = DB::table($destination_table)->get();",
          "485:                     $row->{$field->field}->filter(function ($fields, $key) use ($data_table_destination, $destination_table, $destination_table_display_column) {",
          "486:                         foreach ($data_table_destination as $key => $value) {",
          "488:                                 $fields->{$destination_table_display_column} = $value->{$destination_table_display_column};",
          "489:                             }",
          "490:                         }",
          "",
          "[Removed Lines]",
          "484:                     $table_primary_id = $data_type['name'].'_id';",
          "487:                             if ($fields->{$destination_table.'_id'} == $value->id) {",
          "",
          "[Added Lines]",
          "490:                     $table_primary_id = $data_type['name'] . '_id';",
          "493:                             if ($fields->{$destination_table . '_id'} == $value->id) {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "496:                     });",
          "497:                 } else {",
          "498:                     $relation_datas = DB::table($destination_table)->select($arr_query_select)",
          "500:                     switch ($relation_type) {",
          "501:                         case 'belongs_to':",
          "502:                             if (isset($row->{$destination_table})) {",
          "",
          "[Removed Lines]",
          "499:                     ->get();",
          "",
          "[Added Lines]",
          "505:                         ->get();",
          "",
          "---------------"
        ],
        "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue": [
          "File: src/resources/js/components/BadasoUploadImage.vue -> src/resources/js/components/BadasoUploadImage.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:         <div class=\"badaso-upload-image__popup--top-bar\">",
          "55:           <h3>{{ $t(\"fileManager.title\") }}</h3>",
          "56:           <vs-spacer />",
          "60:           style=\"margin-bottom: 0px !important; margin-right: 1rem;\"",
          "62:           :items=\"sortTypeList\"",
          "63:           @input=\"sortImages\" >",
          "64:           </badaso-select>",
          "",
          "[Removed Lines]",
          "57:           <badaso-select",
          "58:           v-model=\"sortTypeValue\"",
          "59:           size=\"2\"",
          "61:           placeholder=\"Sort Type\"",
          "",
          "[Added Lines]",
          "57:           <badaso-select",
          "58:           v-model=\"sortTypeValue\"",
          "59:           size=\"2\"",
          "61:           placeholder=\"Sort Type\"",
          "",
          "---------------"
        ],
        "src/resources/js/pages/crud-generated/browse.vue||src/resources/js/pages/crud-generated/browse.vue": [
          "File: src/resources/js/pages/crud-generated/browse.vue -> src/resources/js/pages/crud-generated/browse.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "867:         });",
          "868:         this.$closeLoader();",
          "869:         this.data = response.data;",
          "871:         this.records = response.data.data;",
          "872:         this.records.map((record) => {",
          "873:           if (record.createdAt || record.updatedAt) {",
          "",
          "[Removed Lines]",
          "870:         console.log(this.data,'data')",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resources/js/pages/crud-generated/read.vue||src/resources/js/pages/crud-generated/read.vue": [
          "File: src/resources/js/pages/crud-generated/read.vue -> src/resources/js/pages/crud-generated/read.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "262:         this.$closeLoader();",
          "263:         this.dataType = dataType;",
          "264:         this.record = response.data;",
          "266:         const dataRows = this.dataType.dataRows.map((data) => {",
          "267:           try {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "265:         console.log(this.record,'rec')",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "07c5db3c3557741ead6b03771eda284853194862",
      "candidate_info": {
        "commit_hash": "07c5db3c3557741ead6b03771eda284853194862",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/07c5db3c3557741ead6b03771eda284853194862",
        "files": [
          "src/resources/js/lang/modules/en.js",
          "src/resources/js/lang/modules/id.js",
          "src/resources/js/pages/activity-log/browse.vue"
        ],
        "message": "change causer id to causer name",
        "before_after_code_files": [
          "src/resources/js/lang/modules/en.js||src/resources/js/lang/modules/en.js",
          "src/resources/js/lang/modules/id.js||src/resources/js/lang/modules/id.js",
          "src/resources/js/pages/activity-log/browse.vue||src/resources/js/pages/activity-log/browse.vue"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/resources/js/lang/modules/en.js||src/resources/js/lang/modules/en.js": [
          "File: src/resources/js/lang/modules/en.js -> src/resources/js/lang/modules/en.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "186:       logName: \"Log Name\",",
          "187:       causerType: \"Causer Type\",",
          "188:       causerId: \"Causer Id\",",
          "189:       subjectType: \"Subject Type\",",
          "190:       subjectId: \"Subject Id\",",
          "191:       description: \"Description\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "189:       causerName: \"Causer Name\",",
          "",
          "---------------"
        ],
        "src/resources/js/lang/modules/id.js||src/resources/js/lang/modules/id.js": [
          "File: src/resources/js/lang/modules/id.js -> src/resources/js/lang/modules/id.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "186:       logName: \"Nama Log\",",
          "187:       causerType: \"Jenis Penyebab\",",
          "188:       causerId: \"Id Penyebab\",",
          "189:       subjectType: \"Jenis Subjek\",",
          "190:       subjectId: \"Id Subjek\",",
          "191:       description: \"Deskripsi\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "189:       causerName: \"Nama Penyebab\",",
          "",
          "---------------"
        ],
        "src/resources/js/pages/activity-log/browse.vue||src/resources/js/pages/activity-log/browse.vue": [
          "File: src/resources/js/pages/activity-log/browse.vue -> src/resources/js/pages/activity-log/browse.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:                 <badaso-th sort-key=\"logName\">",
          "40:                   {{ $t(\"activityLog.header.logName\") }}",
          "41:                 </badaso-th>",
          "44:                 </badaso-th>",
          "45:                 <badaso-th sort-key=\"description\">",
          "46:                   {{ $t(\"activityLog.header.description\") }}",
          "",
          "[Removed Lines]",
          "42:                 <badaso-th sort-key=\"causerId\">",
          "43:                   {{ $t(\"activityLog.header.causerId\") }}",
          "",
          "[Added Lines]",
          "42:                 <badaso-th sort-key=\"causerName\">",
          "43:                   {{ $t(\"activityLog.header.causerName\") }}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "171:           this.$closeLoader();",
          "172:           this.selected = [];",
          "173:           this.data = response.data;",
          "176:           this.totalItem =",
          "177:             response.data.total > 0",
          "178:               ? Math.ceil(response.data.total / this.limit)",
          "",
          "[Removed Lines]",
          "174:           this.activitylogs = response.data.activitylog;",
          "175:           console.log(this.activitylogs);",
          "",
          "[Added Lines]",
          "174:           this.activitylogs = response.data.data;",
          "",
          "---------------"
        ]
      }
    }
  ]
}