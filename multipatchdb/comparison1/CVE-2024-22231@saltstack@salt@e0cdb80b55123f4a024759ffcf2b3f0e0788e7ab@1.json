{
  "cve_id": "CVE-2024-22231",
  "cve_desc": "Syndic cache directory creation is vulnerable to a directory traversal attack in salt project which can lead\u00a0a malicious attacker to create an arbitrary directory on a Salt master.",
  "repo": "saltstack/salt",
  "patch_hash": "e0cdb80b55123f4a024759ffcf2b3f0e0788e7ab",
  "patch_info": {
    "commit_hash": "e0cdb80b55123f4a024759ffcf2b3f0e0788e7ab",
    "repo": "saltstack/salt",
    "commit_url": "https://github.com/saltstack/salt/commit/e0cdb80b55123f4a024759ffcf2b3f0e0788e7ab",
    "files": [
      "salt/fileserver/__init__.py",
      "salt/fileserver/roots.py",
      "salt/master.py",
      "tests/pytests/unit/fileserver/test_roots.py",
      "tests/pytests/unit/test_fileserver.py",
      "tests/pytests/unit/test_master.py",
      "tests/unit/test_fileserver.py"
    ],
    "message": "CVE fix",
    "before_after_code_files": [
      "salt/fileserver/__init__.py||salt/fileserver/__init__.py",
      "salt/fileserver/roots.py||salt/fileserver/roots.py",
      "salt/master.py||salt/master.py",
      "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py",
      "tests/pytests/unit/test_fileserver.py||tests/pytests/unit/test_fileserver.py",
      "tests/pytests/unit/test_master.py||tests/pytests/unit/test_master.py",
      "tests/unit/test_fileserver.py||tests/unit/test_fileserver.py"
    ]
  },
  "patch_diff": {
    "salt/fileserver/__init__.py||salt/fileserver/__init__.py": [
      "File: salt/fileserver/__init__.py -> salt/fileserver/__init__.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "568:         saltenv = salt.utils.stringutils.to_unicode(saltenv)",
      "569:         back = self.backends(back)",
      "570:         kwargs = {}",
      "576:         if salt.utils.url.is_escaped(path):",
      "577:             # don't attempt to find URL query arguments in the path",
      "578:             path = salt.utils.url.unescape(path)",
      "",
      "[Removed Lines]",
      "571:         fnd = {\"path\": \"\", \"rel\": \"\"}",
      "572:         if os.path.isabs(path):",
      "573:             return fnd",
      "574:         if \"../\" in path:",
      "575:             return fnd",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "588:                     args = comp.split(\"=\", 1)",
      "589:                     kwargs[args[0]] = args[1]",
      "591:         if \"env\" in kwargs:",
      "592:             # \"env\" is not supported; Use \"saltenv\".",
      "593:             kwargs.pop(\"env\")",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "586:         fnd = {\"path\": \"\", \"rel\": \"\"}",
      "587:         if os.path.isabs(path) or \"../\" in path:",
      "588:             return fnd",
      "",
      "---------------"
    ],
    "salt/fileserver/roots.py||salt/fileserver/roots.py": [
      "File: salt/fileserver/roots.py -> salt/fileserver/roots.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: import salt.utils.path",
      "28: import salt.utils.platform",
      "29: import salt.utils.stringutils",
      "30: import salt.utils.versions",
      "32: log = logging.getLogger(__name__)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "30: import salt.utils.verify",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "98:         if saltenv == \"__env__\":",
      "99:             root = root.replace(\"__env__\", actual_saltenv)",
      "100:         full = os.path.join(root, path)",
      "101:         if os.path.isfile(full) and not salt.fileserver.is_file_ignored(__opts__, full):",
      "102:             fnd[\"path\"] = full",
      "103:             fnd[\"rel\"] = path",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "103:         # Refuse to serve file that is not under the root.",
      "104:         if not salt.utils.verify.clean_path(root, full, subdir=True):",
      "105:             continue",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "128:     ret[\"dest\"] = fnd[\"rel\"]",
      "129:     gzip = load.get(\"gzip\", None)",
      "130:     fpath = os.path.normpath(fnd[\"path\"])",
      "131:     with salt.utils.files.fopen(fpath, \"rb\") as fp_:",
      "132:         fp_.seek(load[\"loc\"])",
      "133:         data = fp_.read(__opts__[\"file_buffer_size\"])",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "138:     actual_saltenv = saltenv = load[\"saltenv\"]",
      "139:     if saltenv not in __opts__[\"file_roots\"]:",
      "140:         if \"__env__\" in __opts__[\"file_roots\"]:",
      "141:             log.debug(",
      "142:                 \"salt environment '%s' maps to __env__ file_roots directory\", saltenv",
      "143:             )",
      "144:             saltenv = \"__env__\"",
      "145:         else:",
      "146:             return fnd",
      "147:     file_in_root = False",
      "148:     for root in __opts__[\"file_roots\"][saltenv]:",
      "149:         if saltenv == \"__env__\":",
      "150:             root = root.replace(\"__env__\", actual_saltenv)",
      "151:         # Refuse to serve file that is not under the root.",
      "152:         if salt.utils.verify.clean_path(root, fpath, subdir=True):",
      "153:             file_in_root = True",
      "154:     if not file_in_root:",
      "155:         return ret",
      "",
      "---------------"
    ],
    "salt/master.py||salt/master.py": [
      "File: salt/master.py -> salt/master.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "1036:         \"\"\"",
      "1037:         key = payload[\"enc\"]",
      "1038:         load = payload[\"load\"]",
      "1040:         raise salt.ext.tornado.gen.Return(ret)",
      "1042:     def _post_stats(self, start, cmd):",
      "",
      "[Removed Lines]",
      "1039:         ret = {\"aes\": self._handle_aes, \"clear\": self._handle_clear}[key](load)",
      "",
      "[Added Lines]",
      "1039:         if key == \"aes\":",
      "1040:             ret = self.handle_aes(load)",
      "1041:         else:",
      "1042:             ret = self.handle_clear(load)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1738:                 self.mminion.returners[fstr](load[\"jid\"], load[\"load\"])",
      "1740:             # Register the syndic",
      "1741:             syndic_cache_path = os.path.join(",
      "1742:                 self.opts[\"cachedir\"], \"syndics\", load[\"id\"]",
      "1743:             )",
      "1745:                 path_name = os.path.split(syndic_cache_path)[0]",
      "1746:                 if not os.path.exists(path_name):",
      "1747:                     os.makedirs(path_name)",
      "",
      "[Removed Lines]",
      "1744:             if not os.path.exists(syndic_cache_path):",
      "",
      "[Added Lines]",
      "1745:             # We are creating a path using user suplied input. Use the",
      "1746:             # clean_path to prevent a directory traversal.",
      "1747:             root = os.path.join(self.opts[\"cachedir\"], \"syndics\")",
      "1751:             if salt.utils.verify.clean_path(",
      "1752:                 root, syndic_cache_path",
      "1753:             ) and not os.path.exists(syndic_cache_path):",
      "",
      "---------------"
    ],
    "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py": [
      "File: tests/pytests/unit/fileserver/test_roots.py -> tests/pytests/unit/fileserver/test_roots.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "53:     return dirname",
      "56: @pytest.fixture",
      "57: def configure_loader_modules(tmp_state_tree, temp_salt_master):",
      "58:     opts = temp_salt_master.config.copy()",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "56: @pytest.fixture(autouse=True)",
      "57: def testfilepath(tmp_state_tree, testfile):",
      "58:     return tmp_state_tree / testfile.name",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "75:     assert full_path_to_file == ret[\"path\"]",
      "79:     with patch.dict(roots.__opts__, {\"file_buffer_size\": 262144}):",
      "80:         load = {",
      "81:             \"saltenv\": \"base\",",
      "83:             \"loc\": 0,",
      "84:         }",
      "86:         ret = roots.serve_file(load, fnd)",
      "89:             data = fp_.read()",
      "91:         assert ret == {\"data\": data, \"dest\": \"testfile\"}",
      "",
      "[Removed Lines]",
      "78: def test_serve_file(testfile):",
      "82:             \"path\": str(testfile),",
      "85:         fnd = {\"path\": str(testfile), \"rel\": \"testfile\"}",
      "88:         with salt.utils.files.fopen(str(testfile), \"rb\") as fp_:",
      "",
      "[Added Lines]",
      "83: def test_serve_file(testfilepath):",
      "87:             \"path\": str(testfilepath),",
      "90:         fnd = {\"path\": str(testfilepath), \"rel\": \"testfile\"}",
      "93:         with salt.utils.files.fopen(str(testfilepath), \"rb\") as fp_:",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "236:     # between Python releases.",
      "237:     lines_written = sorted(mtime_map_mock.write_calls())",
      "238:     expected = sorted(",
      "240:         for key, val in new_mtime_map.items()",
      "241:     )",
      "242:     assert lines_written == expected, lines_written",
      "",
      "[Removed Lines]",
      "239:         salt.utils.stringutils.to_bytes(\"{key}:{val}\\n\".format(key=key, val=val))",
      "",
      "[Added Lines]",
      "244:         salt.utils.stringutils.to_bytes(f\"{key}:{val}\\n\")",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "277:         },",
      "278:         \"backend\": \"roots\",",
      "279:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "287: def test_find_file_not_in_root(tmp_state_tree):",
      "288:     \"\"\"",
      "289:     Fileroots should never 'find' a file that is outside of it's root.",
      "290:     \"\"\"",
      "291:     badfile = pathlib.Path(tmp_state_tree).parent / \"bar\"",
      "292:     badfile.write_text(\"Bad file\")",
      "293:     badpath = f\"../bar\"",
      "294:     ret = roots.find_file(badpath)",
      "295:     assert ret == {\"path\": \"\", \"rel\": \"\"}",
      "296:     badpath = f\"{tmp_state_tree / '..' / 'bar'}\"",
      "297:     ret = roots.find_file(badpath)",
      "298:     assert ret == {\"path\": \"\", \"rel\": \"\"}",
      "301: def test_serve_file_not_in_root(tmp_state_tree):",
      "302:     \"\"\"",
      "303:     Fileroots should never 'serve' a file that is outside of it's root.",
      "304:     \"\"\"",
      "305:     badfile = pathlib.Path(tmp_state_tree).parent / \"bar\"",
      "306:     badfile.write_text(\"Bad file\")",
      "307:     badpath = f\"../bar\"",
      "308:     load = {\"path\": \"salt://|..\\\\bar\", \"saltenv\": \"base\", \"loc\": 0}",
      "309:     fnd = {",
      "310:         \"path\": f\"{tmp_state_tree / '..' / 'bar'}\",",
      "311:         \"rel\": f\"{pathlib.Path('..') / 'bar'}\",",
      "312:     }",
      "313:     ret = roots.serve_file(load, fnd)",
      "314:     assert ret == {\"data\": \"\", \"dest\": \"../bar\"}",
      "",
      "---------------"
    ],
    "tests/pytests/unit/test_fileserver.py||tests/pytests/unit/test_fileserver.py": [
      "File: tests/pytests/unit/test_fileserver.py -> tests/pytests/unit/test_fileserver.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: \"\"\"",
      "2: \"\"\"",
      "5: import datetime",
      "6: import os",
      "7: import time",
      "9: import salt.fileserver",
      "10: import salt.utils.files",
      "13: def test_diff_with_diffent_keys():",
      "14:     \"\"\"",
      "15:     Test that different maps are indeed reported different",
      "16:     \"\"\"",
      "17:     map1 = {\"file1\": 1234}",
      "18:     map2 = {\"file2\": 1234}",
      "19:     assert salt.fileserver.diff_mtime_map(map1, map2) is True",
      "22: def test_diff_with_diffent_values():",
      "23:     \"\"\"",
      "24:     Test that different maps are indeed reported different",
      "25:     \"\"\"",
      "26:     map1 = {\"file1\": 12345}",
      "27:     map2 = {\"file1\": 1234}",
      "28:     assert salt.fileserver.diff_mtime_map(map1, map2) is True",
      "31: def test_whitelist():",
      "32:     opts = {",
      "33:         \"fileserver_backend\": [\"roots\", \"git\", \"s3fs\", \"hgfs\", \"svn\"],",
      "34:         \"extension_modules\": \"\",",
      "35:     }",
      "36:     fs = salt.fileserver.Fileserver(opts)",
      "37:     assert sorted(fs.servers.whitelist) == sorted(",
      "38:         [\"git\", \"gitfs\", \"hg\", \"hgfs\", \"svn\", \"svnfs\", \"roots\", \"s3fs\"]",
      "39:     ), fs.servers.whitelist",
      "42: def test_future_file_list_cache_file_ignored(tmp_path):",
      "43:     opts = {",
      "44:         \"fileserver_backend\": [\"roots\"],",
      "45:         \"cachedir\": tmp_path,",
      "46:         \"extension_modules\": \"\",",
      "47:     }",
      "49:     back_cachedir = os.path.join(tmp_path, \"file_lists/roots\")",
      "50:     os.makedirs(os.path.join(back_cachedir))",
      "52:     # Touch a couple files",
      "53:     for filename in (\"base.p\", \"foo.txt\"):",
      "54:         with salt.utils.files.fopen(os.path.join(back_cachedir, filename), \"wb\") as _f:",
      "55:             if filename == \"base.p\":",
      "56:                 _f.write(b\"\\x80\")",
      "58:     # Set modification time to file list cache file to 1 year in the future",
      "59:     now = datetime.datetime.utcnow()",
      "60:     future = now + datetime.timedelta(days=365)",
      "61:     mod_time = time.mktime(future.timetuple())",
      "62:     os.utime(os.path.join(back_cachedir, \"base.p\"), (mod_time, mod_time))",
      "64:     list_cache = os.path.join(back_cachedir, \"base.p\")",
      "65:     w_lock = os.path.join(back_cachedir, \".base.w\")",
      "66:     ret = salt.fileserver.check_file_list_cache(opts, \"files\", list_cache, w_lock)",
      "67:     assert (",
      "68:         ret[1] is True",
      "69:     ), \"Cache file list cache file is not refreshed when future modification time\"",
      "72: def test_file_server_url_escape(tmp_path):",
      "73:     (tmp_path / \"srv\").mkdir()",
      "74:     (tmp_path / \"srv\" / \"salt\").mkdir()",
      "75:     (tmp_path / \"foo\").mkdir()",
      "76:     (tmp_path / \"foo\" / \"bar\").write_text(\"Bad file\")",
      "77:     fileroot = str(tmp_path / \"srv\" / \"salt\")",
      "78:     badfile = str(tmp_path / \"foo\" / \"bar\")",
      "79:     opts = {",
      "80:         \"fileserver_backend\": [\"roots\"],",
      "81:         \"extension_modules\": \"\",",
      "82:         \"optimization_order\": [",
      "83:             0,",
      "84:         ],",
      "85:         \"file_roots\": {",
      "86:             \"base\": [fileroot],",
      "87:         },",
      "88:         \"file_ignore_regex\": \"\",",
      "89:         \"file_ignore_glob\": \"\",",
      "90:     }",
      "91:     fs = salt.fileserver.Fileserver(opts)",
      "92:     ret = fs.find_file(",
      "93:         \"salt://|..\\\\..\\\\..\\\\foo/bar\",",
      "94:         \"base\",",
      "95:     )",
      "96:     assert ret == {\"path\": \"\", \"rel\": \"\"}",
      "99: def test_file_server_serve_url_escape(tmp_path):",
      "100:     (tmp_path / \"srv\").mkdir()",
      "101:     (tmp_path / \"srv\" / \"salt\").mkdir()",
      "102:     (tmp_path / \"foo\").mkdir()",
      "103:     (tmp_path / \"foo\" / \"bar\").write_text(\"Bad file\")",
      "104:     fileroot = str(tmp_path / \"srv\" / \"salt\")",
      "105:     badfile = str(tmp_path / \"foo\" / \"bar\")",
      "106:     opts = {",
      "107:         \"fileserver_backend\": [\"roots\"],",
      "108:         \"extension_modules\": \"\",",
      "109:         \"optimization_order\": [",
      "110:             0,",
      "111:         ],",
      "112:         \"file_roots\": {",
      "113:             \"base\": [fileroot],",
      "114:         },",
      "115:         \"file_ignore_regex\": \"\",",
      "116:         \"file_ignore_glob\": \"\",",
      "117:         \"file_buffer_size\": 2048,",
      "118:     }",
      "119:     fs = salt.fileserver.Fileserver(opts)",
      "120:     ret = fs.serve_file(",
      "121:         {",
      "122:             \"path\": \"salt://|..\\\\..\\\\..\\\\foo/bar\",",
      "123:             \"saltenv\": \"base\",",
      "124:             \"loc\": 0,",
      "125:         }",
      "126:     )",
      "127:     assert ret == {\"data\": \"\", \"dest\": \"\"}",
      "",
      "---------------"
    ],
    "tests/pytests/unit/test_master.py||tests/pytests/unit/test_master.py": [
      "File: tests/pytests/unit/test_master.py -> tests/pytests/unit/test_master.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: import time",
      "3: import pytest",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: import pathlib",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "160:     with patch.object(encrypted_requests, \"_return\", autospec=True) as fake_return:",
      "161:         encrypted_requests._syndic_return(payload)",
      "162:         fake_return.assert_called_with(expected_return)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "166: def test_syndic_return_cache_dir_creation(encrypted_requests):",
      "167:     \"\"\"master's cachedir for a syndic will be created by AESFuncs._syndic_return method\"\"\"",
      "168:     cachedir = pathlib.Path(encrypted_requests.opts[\"cachedir\"])",
      "169:     assert not (cachedir / \"syndics\").exists()",
      "170:     encrypted_requests._syndic_return(",
      "171:         {",
      "172:             \"id\": \"mamajama\",",
      "173:             \"jid\": \"\",",
      "174:             \"return\": {},",
      "175:         }",
      "176:     )",
      "177:     assert (cachedir / \"syndics\").exists()",
      "178:     assert (cachedir / \"syndics\" / \"mamajama\").exists()",
      "181: def test_syndic_return_cache_dir_creation_traversal(encrypted_requests):",
      "182:     \"\"\"",
      "183:     master's  AESFuncs._syndic_return method cachdir creation is not vulnerable to a directory traversal",
      "184:     \"\"\"",
      "185:     cachedir = pathlib.Path(encrypted_requests.opts[\"cachedir\"])",
      "186:     assert not (cachedir / \"syndics\").exists()",
      "187:     encrypted_requests._syndic_return(",
      "188:         {",
      "189:             \"id\": \"../mamajama\",",
      "190:             \"jid\": \"\",",
      "191:             \"return\": {},",
      "192:         }",
      "193:     )",
      "194:     assert not (cachedir / \"syndics\").exists()",
      "195:     assert not (cachedir / \"mamajama\").exists()",
      "",
      "---------------"
    ],
    "tests/unit/test_fileserver.py||tests/unit/test_fileserver.py": [
      "File: tests/unit/test_fileserver.py -> tests/unit/test_fileserver.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e7b7cf2272a647debed7bb4fa20496cab1606bf4",
      "candidate_info": {
        "commit_hash": "e7b7cf2272a647debed7bb4fa20496cab1606bf4",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/e7b7cf2272a647debed7bb4fa20496cab1606bf4",
        "files": [
          "tests/pytests/pkg/integration/test_salt_state_file.py"
        ],
        "message": "Simplify the state to run\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tests/pytests/pkg/integration/test_salt_state_file.py||tests/pytests/pkg/integration/test_salt_state_file.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/pkg/integration/test_salt_state_file.py||tests/pytests/pkg/integration/test_salt_state_file.py": [
          "File: tests/pytests/pkg/integration/test_salt_state_file.py -> tests/pytests/pkg/integration/test_salt_state_file.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import subprocess",
          "3: import pytest",
          "4: from pytestskipmarkers.utils import platform",
          "11: @pytest.fixture",
          "13:     name = \"some-state\"",
          "17:       file.managed:",
          "33:     \"\"\"",
          "34:     with salt_master.state_tree.base.temp_file(f\"{name}.sls\", sls_contents):",
          "35:         if not platform.is_windows() and not platform.is_darwin():",
          "36:             subprocess.run(",
          "",
          "[Removed Lines]",
          "6: pytestmark = [",
          "7:     pytest.mark.skip_on_windows,",
          "8: ]",
          "12: def state_name(salt_master):",
          "14:     if platform.is_windows():",
          "15:         sls_contents = \"\"\"",
          "16:     create_empty_file:",
          "18:         - name: C://salt/test/txt",
          "19:     salt_dude:",
          "20:       user.present:",
          "21:         - name: dude",
          "22:         - fullname: Salt Dude",
          "23:     \"\"\"",
          "24:     else:",
          "25:         sls_contents = \"\"\"",
          "26:     update:",
          "27:       pkg.installed:",
          "28:         - name: bash",
          "29:     salt_dude:",
          "30:       user.present:",
          "31:         - name: dude",
          "32:         - fullname: Salt Dude",
          "",
          "[Added Lines]",
          "2: import types",
          "6: from saltfactories.utils.functional import MultiStateResult",
          "9: @pytest.fixture",
          "10: def files(tmp_path):",
          "11:     return types.SimpleNamespace(",
          "12:         fpath_1=tmp_path / \"fpath_1.txt\",",
          "13:         fpath_2=tmp_path / \"fpath_2.txt\",",
          "14:         fpath_3=tmp_path / \"fpath_3.txt\",",
          "15:     )",
          "19: def state_name(files, salt_master):",
          "21:     sls_contents = f\"\"\"",
          "22:     create-fpath-1-file:",
          "24:         - name: {files.fpath_1}",
          "26:     create-fpath-2-file:",
          "27:       file.managed:",
          "28:         - name: {files.fpath_2}",
          "30:     create-fpath-3-file:",
          "31:       file.managed:",
          "32:         - name: {files.fpath_3}",
          "34:     assert files.fpath_1.exists() is False",
          "35:     assert files.fpath_2.exists() is False",
          "36:     assert files.fpath_3.exists() is False",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:         yield name",
          "49:     \"\"\"",
          "50:     Test state file",
          "51:     \"\"\"",
          "52:     ret = salt_cli.run(\"state.apply\", state_name, minion_tgt=salt_minion.id)",
          "53:     assert ret.returncode == 0",
          "54:     assert ret.data",
          "55:     if ret.stdout and \"Minion did not return\" in ret.stdout:",
          "56:         pytest.skip(\"Skipping test, state took too long to apply\")",
          "",
          "[Removed Lines]",
          "48: def test_salt_state_file(salt_cli, salt_minion, state_name):",
          "57:     sls_ret = ret.data[next(iter(ret.data))]",
          "58:     assert \"changes\" in sls_ret",
          "59:     assert \"name\" in sls_ret",
          "",
          "[Added Lines]",
          "51: def test_salt_state_file(salt_cli, salt_minion, state_name, files):",
          "55:     assert files.fpath_1.exists() is False",
          "56:     assert files.fpath_2.exists() is False",
          "57:     assert files.fpath_3.exists() is False",
          "65:     for state_return in MultiStateResult(ret.data):",
          "66:         assert state_return.result is True",
          "68:     assert files.fpath_1.exists() is True",
          "69:     assert files.fpath_2.exists() is True",
          "70:     assert files.fpath_3.exists() is True",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f7ebfbc9460f60e82095e96a8296aa85f58e20b6",
      "candidate_info": {
        "commit_hash": "f7ebfbc9460f60e82095e96a8296aa85f58e20b6",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/f7ebfbc9460f60e82095e96a8296aa85f58e20b6",
        "files": [
          ".github/actions/build-onedir-salt/action.yml",
          ".github/actions/build-source-tarball/action.yml",
          ".github/actions/download-artifact/action.yml",
          ".github/actions/upload-artifact/action.yml",
          ".github/workflows/build-deps-ci-action.yml",
          ".github/workflows/build-docs.yml",
          ".github/workflows/build-packages.yml",
          ".github/workflows/ci.yml",
          ".github/workflows/nightly.yml",
          ".github/workflows/release.yml",
          ".github/workflows/scheduled.yml",
          ".github/workflows/staging.yml",
          ".github/workflows/templates/build-deb-repo.yml.jinja",
          ".github/workflows/templates/build-deps-ci-action.yml.jinja",
          ".github/workflows/templates/build-macos-repo.yml.jinja",
          ".github/workflows/templates/build-onedir-repo.yml.jinja",
          ".github/workflows/templates/build-rpm-repo.yml.jinja",
          ".github/workflows/templates/build-src-repo.yml.jinja",
          ".github/workflows/templates/build-windows-repo.yml.jinja",
          ".github/workflows/templates/ci.yml.jinja",
          ".github/workflows/templates/layout.yml.jinja",
          ".github/workflows/templates/nightly.yml.jinja",
          ".github/workflows/templates/release.yml.jinja",
          ".github/workflows/templates/staging.yml.jinja",
          ".github/workflows/templates/test-package-downloads-action.yml.jinja",
          ".github/workflows/test-action-linux.yml",
          ".github/workflows/test-action-macos.yml",
          ".github/workflows/test-action-windows.yml",
          ".github/workflows/test-package-downloads-action.yml",
          ".github/workflows/test-packages-action-linux.yml",
          ".github/workflows/test-packages-action-macos.yml",
          ".github/workflows/test-packages-action-windows.yml",
          ".github/workflows/triage.yml"
        ],
        "message": "Switch to `actions/upload-artifact@v4` and `actions/download-artifact@v4`\n\nThere are breaking changes with this new version.\nSee https://github.blog/changelog/2023-12-14-github-actions-artifacts-v4-is-now-generally-available/\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          ".github/workflows/templates/build-deb-repo.yml.jinja||.github/workflows/templates/build-deb-repo.yml.jinja",
          ".github/workflows/templates/build-deps-ci-action.yml.jinja||.github/workflows/templates/build-deps-ci-action.yml.jinja",
          ".github/workflows/templates/build-macos-repo.yml.jinja||.github/workflows/templates/build-macos-repo.yml.jinja",
          ".github/workflows/templates/build-onedir-repo.yml.jinja||.github/workflows/templates/build-onedir-repo.yml.jinja",
          ".github/workflows/templates/build-rpm-repo.yml.jinja||.github/workflows/templates/build-rpm-repo.yml.jinja",
          ".github/workflows/templates/build-src-repo.yml.jinja||.github/workflows/templates/build-src-repo.yml.jinja",
          ".github/workflows/templates/build-windows-repo.yml.jinja||.github/workflows/templates/build-windows-repo.yml.jinja",
          ".github/workflows/templates/ci.yml.jinja||.github/workflows/templates/ci.yml.jinja",
          ".github/workflows/templates/layout.yml.jinja||.github/workflows/templates/layout.yml.jinja",
          ".github/workflows/templates/nightly.yml.jinja||.github/workflows/templates/nightly.yml.jinja",
          ".github/workflows/templates/release.yml.jinja||.github/workflows/templates/release.yml.jinja",
          ".github/workflows/templates/staging.yml.jinja||.github/workflows/templates/staging.yml.jinja",
          ".github/workflows/templates/test-package-downloads-action.yml.jinja||.github/workflows/templates/test-package-downloads-action.yml.jinja"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".github/workflows/templates/build-deb-repo.yml.jinja||.github/workflows/templates/build-deb-repo.yml.jinja": [
          "File: .github/workflows/templates/build-deb-repo.yml.jinja -> .github/workflows/templates/build-deb-repo.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:           echo \"SPB_ENVIRONMENT=$SPB_ENVIRONMENT\" >> \"$GITHUB_ENV\"",
          "32:       - name: Download DEB Packages",
          "34:         with:",
          "35:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-${{ matrix.arch }}-deb",
          "36:           path: artifacts/pkgs/incoming",
          "",
          "[Removed Lines]",
          "33:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "33:         uses: actions/download-artifact@v4",
          "",
          "---------------"
        ],
        ".github/workflows/templates/build-deps-ci-action.yml.jinja||.github/workflows/templates/build-deps-ci-action.yml.jinja": [
          "File: .github/workflows/templates/build-deps-ci-action.yml.jinja -> .github/workflows/templates/build-deps-ci-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:       - name: Download Onedir Tarball as an Artifact",
          "81:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "83:         with:",
          "84:           name: ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-linux-${{ matrix.arch }}.tar.xz",
          "85:           path: artifacts/",
          "",
          "[Removed Lines]",
          "82:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "82:         uses: actions/download-artifact@v4",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "189:       - name: Download Onedir Tarball as an Artifact",
          "190:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "192:         with:",
          "193:           name: ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-macos-${{ matrix.arch }}.tar.xz",
          "194:           path: artifacts/",
          "",
          "[Removed Lines]",
          "191:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "191:         uses: actions/download-artifact@v4",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "280:       - name: Download Onedir Tarball as an Artifact",
          "281:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "283:         with:",
          "284:           name: ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-windows-${{ matrix.arch }}.tar.xz",
          "285:           path: artifacts/",
          "",
          "[Removed Lines]",
          "282:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "282:         uses: actions/download-artifact@v4",
          "",
          "---------------"
        ],
        ".github/workflows/templates/build-macos-repo.yml.jinja||.github/workflows/templates/build-macos-repo.yml.jinja": [
          "File: .github/workflows/templates/build-macos-repo.yml.jinja -> .github/workflows/templates/build-macos-repo.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:           echo \"SPB_ENVIRONMENT=$SPB_ENVIRONMENT\" >> \"$GITHUB_ENV\"",
          "22:       - name: Download macOS x86_64 Packages",
          "24:         with:",
          "25:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-x86_64-macos",
          "26:           path: artifacts/pkgs/incoming",
          "28:       - name: Download macOS Arch64 Packages",
          "30:         with:",
          "31:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-arm64-macos",
          "32:           path: artifacts/pkgs/incoming",
          "",
          "[Removed Lines]",
          "23:         uses: actions/download-artifact@v3",
          "29:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "23:         uses: actions/download-artifact@v4",
          "29:         uses: actions/download-artifact@v4",
          "",
          "---------------"
        ],
        ".github/workflows/templates/build-onedir-repo.yml.jinja||.github/workflows/templates/build-onedir-repo.yml.jinja": [
          "File: .github/workflows/templates/build-onedir-repo.yml.jinja -> .github/workflows/templates/build-onedir-repo.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:           echo \"SPB_ENVIRONMENT=$SPB_ENVIRONMENT\" >> \"$GITHUB_ENV\"",
          "22:       - name: Download Linux x86_64 Onedir Archive",
          "24:         with:",
          "25:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-onedir-linux-x86_64.tar.xz",
          "26:           path: artifacts/pkgs/incoming",
          "28:       - name: Download Linux arm64 Onedir Archive",
          "30:         with:",
          "31:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-onedir-linux-arm64.tar.xz",
          "32:           path: artifacts/pkgs/incoming",
          "34:       - name: Download macOS x86_64 Onedir Archive",
          "36:         with:",
          "37:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-onedir-macos-x86_64.tar.xz",
          "38:           path: artifacts/pkgs/incoming",
          "40:       - name: Download macOS arm64 Onedir Archive",
          "42:         with:",
          "43:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-onedir-macos-arm64.tar.xz",
          "44:           path: artifacts/pkgs/incoming",
          "46:       - name: Download Windows amd64 Onedir Archive",
          "48:         with:",
          "49:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-onedir-windows-amd64.tar.xz",
          "50:           path: artifacts/pkgs/incoming",
          "52:       - name: Download Windows amd64 Onedir Archive(zip)",
          "54:         with:",
          "55:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-onedir-windows-amd64.zip",
          "56:           path: artifacts/pkgs/incoming",
          "58:       - name: Download Windows x86 Onedir Archive",
          "60:         with:",
          "61:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-onedir-windows-x86.tar.xz",
          "62:           path: artifacts/pkgs/incoming",
          "64:       - name: Download Windows amd64 Onedir Archive(zip)",
          "66:         with:",
          "67:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-onedir-windows-x86.zip",
          "68:           path: artifacts/pkgs/incoming",
          "",
          "[Removed Lines]",
          "23:         uses: actions/download-artifact@v3",
          "29:         uses: actions/download-artifact@v3",
          "35:         uses: actions/download-artifact@v3",
          "41:         uses: actions/download-artifact@v3",
          "47:         uses: actions/download-artifact@v3",
          "53:         uses: actions/download-artifact@v3",
          "59:         uses: actions/download-artifact@v3",
          "65:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "23:         uses: actions/download-artifact@v4",
          "29:         uses: actions/download-artifact@v4",
          "35:         uses: actions/download-artifact@v4",
          "41:         uses: actions/download-artifact@v4",
          "47:         uses: actions/download-artifact@v4",
          "53:         uses: actions/download-artifact@v4",
          "59:         uses: actions/download-artifact@v4",
          "65:         uses: actions/download-artifact@v4",
          "",
          "---------------"
        ],
        ".github/workflows/templates/build-rpm-repo.yml.jinja||.github/workflows/templates/build-rpm-repo.yml.jinja": [
          "File: .github/workflows/templates/build-rpm-repo.yml.jinja -> .github/workflows/templates/build-rpm-repo.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:           echo \"SPB_ENVIRONMENT=$SPB_ENVIRONMENT\" >> \"$GITHUB_ENV\"",
          "32:       - name: Download RPM Packages",
          "34:         with:",
          "35:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-${{ matrix.arch == 'aarch64' && 'arm64' || matrix.arch }}-rpm",
          "36:           path: artifacts/pkgs/incoming",
          "",
          "[Removed Lines]",
          "33:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "33:         uses: actions/download-artifact@v4",
          "",
          "---------------"
        ],
        ".github/workflows/templates/build-src-repo.yml.jinja||.github/workflows/templates/build-src-repo.yml.jinja": [
          "File: .github/workflows/templates/build-src-repo.yml.jinja -> .github/workflows/templates/build-src-repo.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:           echo \"SPB_ENVIRONMENT=$SPB_ENVIRONMENT\" >> \"$GITHUB_ENV\"",
          "22:       - name: Download Source Tarball",
          "24:         with:",
          "25:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}.tar.gz",
          "26:           path: artifacts/pkgs/incoming",
          "",
          "[Removed Lines]",
          "23:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "23:         uses: actions/download-artifact@v4",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70:           find artifacts/pkgs/repo -type f -print -exec cp {} artifacts/src \\;",
          "72:       - name: Upload Standalone Repository As An Artifact",
          "74:         with:",
          "75:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-<{ gh_environment }>-src-repo",
          "76:           path: |",
          "",
          "[Removed Lines]",
          "73:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "73:         uses: actions/upload-artifact@v4",
          "",
          "---------------"
        ],
        ".github/workflows/templates/build-windows-repo.yml.jinja||.github/workflows/templates/build-windows-repo.yml.jinja": [
          "File: .github/workflows/templates/build-windows-repo.yml.jinja -> .github/workflows/templates/build-windows-repo.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:           echo \"SPB_ENVIRONMENT=$SPB_ENVIRONMENT\" >> \"$GITHUB_ENV\"",
          "22:       - name: Download Windows NSIS x86 Packages",
          "24:         with:",
          "25:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-x86-NSIS",
          "26:           path: artifacts/pkgs/incoming",
          "28:       - name: Download Windows MSI x86 Packages",
          "30:         with:",
          "31:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-x86-MSI",
          "32:           path: artifacts/pkgs/incoming",
          "34:       - name: Download Windows NSIS amd64 Packages",
          "36:         with:",
          "37:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-amd64-NSIS",
          "38:           path: artifacts/pkgs/incoming",
          "40:       - name: Download Windows MSI amd64 Packages",
          "42:         with:",
          "43:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-amd64-MSI",
          "44:           path: artifacts/pkgs/incoming",
          "",
          "[Removed Lines]",
          "23:         uses: actions/download-artifact@v3",
          "29:         uses: actions/download-artifact@v3",
          "35:         uses: actions/download-artifact@v3",
          "41:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "23:         uses: actions/download-artifact@v4",
          "29:         uses: actions/download-artifact@v4",
          "35:         uses: actions/download-artifact@v4",
          "41:         uses: actions/download-artifact@v4",
          "",
          "---------------"
        ],
        ".github/workflows/templates/ci.yml.jinja||.github/workflows/templates/ci.yml.jinja": [
          "File: .github/workflows/templates/ci.yml.jinja -> .github/workflows/templates/ci.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "167:           git format-patch --keep-subject --binary --stdout HEAD^ > salt-${{ needs.prepare-workflow.outputs.salt-version }}.patch",
          "169:       - name: Upload Changes Diff Artifact",
          "171:         if: ${{ startsWith(github.event.ref, 'refs/tags') == false }}",
          "172:         with:",
          "173:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}.patch",
          "",
          "[Removed Lines]",
          "170:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "170:         uses: actions/upload-artifact@v4",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "343:       - name: Get coverage reports",
          "344:         id: get-coverage-reports",
          "346:         with:",
          "347:           name: all-testrun-coverage-artifacts",
          "348:           path: artifacts/coverage/",
          "",
          "[Removed Lines]",
          "345:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "345:         uses: actions/download-artifact@v4",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "390:           nox --force-color -e create-html-coverage-report -- salt",
          "392:       - name: Upload Salt Code Coverage HTML Report",
          "394:         with:",
          "395:           name: code-coverage-salt-html-report",
          "396:           path: artifacts/coverage/html/salt",
          "",
          "[Removed Lines]",
          "393:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "393:         uses: actions/upload-artifact@v4",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "406:           nox --force-color -e create-json-coverage-reports",
          "408:       - name: Upload Combined Code Coverage JSON Report",
          "410:         with:",
          "411:           name: code-coverage-full-json-report",
          "412:           path: artifacts/coverage/coverage.json",
          "",
          "[Removed Lines]",
          "409:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "409:         uses: actions/upload-artifact@v4",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "418:           nox --force-color -e create-html-coverage-report",
          "420:       - name: Upload Combined Code Coverage HTML Report",
          "422:         with:",
          "423:           name: code-coverage-full-html-report",
          "424:           path: artifacts/coverage/html/full",
          "",
          "[Removed Lines]",
          "421:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "421:         uses: actions/upload-artifact@v4",
          "",
          "---------------"
        ],
        ".github/workflows/templates/layout.yml.jinja||.github/workflows/templates/layout.yml.jinja": [
          "File: .github/workflows/templates/layout.yml.jinja -> .github/workflows/templates/layout.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "302:       - name: Upload testrun-changed-files.txt",
          "303:         if: ${{ fromJSON(steps.define-testrun.outputs.testrun)['type'] != 'full' }}",
          "305:         with:",
          "306:           name: testrun-changed-files.txt",
          "307:           path: testrun-changed-files.txt",
          "",
          "[Removed Lines]",
          "304:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "304:         uses: actions/upload-artifact@v4",
          "",
          "---------------"
        ],
        ".github/workflows/templates/nightly.yml.jinja||.github/workflows/templates/nightly.yml.jinja": [
          "File: .github/workflows/templates/nightly.yml.jinja -> .github/workflows/templates/nightly.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "170:           cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}",
          "172:       - name: Download Repository Artifact",
          "174:         with:",
          "175:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-<{ gh_environment }>-repo",
          "176:           path: repo/",
          "",
          "[Removed Lines]",
          "173:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "173:         uses: actions/download-artifact@v4",
          "",
          "---------------"
        ],
        ".github/workflows/templates/release.yml.jinja||.github/workflows/templates/release.yml.jinja": [
          "File: .github/workflows/templates/release.yml.jinja -> .github/workflows/templates/release.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "195:           tools release download-onedir-artifact --platform=${{ matrix.platform }} --arch=${{ matrix.arch }} ${{ inputs.salt-version }}",
          "197:       - name: Upload Onedir Tarball as an Artifact",
          "199:         with:",
          "200:           name: salt-${{ inputs.salt-version }}-onedir-${{ matrix.platform }}-${{ matrix.arch }}.tar.xz",
          "201:           path: artifacts/salt-${{ inputs.salt-version }}-onedir-${{ matrix.platform }}-${{ matrix.arch }}.tar.xz*",
          "",
          "[Removed Lines]",
          "198:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "198:         uses: actions/upload-artifact@v4",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "378:           tag: v${{ needs.prepare-workflow.outputs.salt-version }}",
          "380:       - name: Upload PyPi Artifacts",
          "382:         with:",
          "383:           name: pypi-artifacts",
          "384:           path: |",
          "",
          "[Removed Lines]",
          "381:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "381:         uses: actions/upload-artifact@v4",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "470:           echo \"twine-password=$TWINE_PASSWORD\" >> \"${GITHUB_OUTPUT}\"",
          "472:       - name: Download PyPi Artifacts",
          "474:         with:",
          "475:           name: pypi-artifacts",
          "476:           path: artifacts/release",
          "",
          "[Removed Lines]",
          "473:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "473:         uses: actions/download-artifact@v4",
          "",
          "---------------"
        ],
        ".github/workflows/templates/staging.yml.jinja||.github/workflows/templates/staging.yml.jinja": [
          "File: .github/workflows/templates/staging.yml.jinja -> .github/workflows/templates/staging.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "107:           cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}",
          "109:       - name: Download Release Patch",
          "111:         with:",
          "112:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}.patch",
          "113:           path: artifacts/release",
          "115:       - name: Download Source Repository",
          "117:         with:",
          "118:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-<{ gh_environment }>-src-repo",
          "119:           path: artifacts/release",
          "121:       - name: Download Release Documentation (HTML)",
          "123:         with:",
          "124:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-docs-html.tar.xz",
          "125:           path: artifacts/release",
          "127:       - name: Download Release Documentation (ePub)",
          "129:         with:",
          "130:           name: Salt-${{ needs.prepare-workflow.outputs.salt-version }}.epub",
          "131:           path: artifacts/release",
          "",
          "[Removed Lines]",
          "110:         uses: actions/download-artifact@v3",
          "116:         uses: actions/download-artifact@v3",
          "122:         uses: actions/download-artifact@v3",
          "128:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "110:         uses: actions/download-artifact@v4",
          "116:         uses: actions/download-artifact@v4",
          "122:         uses: actions/download-artifact@v4",
          "128:         uses: actions/download-artifact@v4",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "137:       {#-",
          "139:       - name: Download Release Documentation (PDF)",
          "141:         with:",
          "142:           name: Salt-${{ needs.prepare-workflow.outputs.salt-version }}.pdf",
          "143:           path: artifacts/release",
          "",
          "[Removed Lines]",
          "140:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "140:         uses: actions/download-artifact@v4",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "149:           tools release upload-artifacts ${{ needs.prepare-workflow.outputs.salt-version }} artifacts/release",
          "151:       - name: Upload PyPi Artifacts",
          "153:         with:",
          "154:           name: pypi-artifacts",
          "155:           path: |",
          "",
          "[Removed Lines]",
          "152:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "152:         uses: actions/upload-artifact@v4",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "216:           echo \"twine-password=$TWINE_PASSWORD\" >> \"${GITHUB_OUTPUT}\"",
          "218:       - name: Download PyPi Artifacts",
          "220:         with:",
          "221:           name: pypi-artifacts",
          "222:           path: artifacts/release",
          "",
          "[Removed Lines]",
          "219:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "219:         uses: actions/download-artifact@v4",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-package-downloads-action.yml.jinja||.github/workflows/templates/test-package-downloads-action.yml.jinja": [
          "File: .github/workflows/templates/test-package-downloads-action.yml.jinja -> .github/workflows/templates/test-package-downloads-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "82:         uses: actions/checkout@v4",
          "84:       - name: Download Onedir Tarball as an Artifact",
          "86:         with:",
          "87:           name: ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-linux-${{ matrix.arch }}.tar.xz",
          "88:           path: artifacts/",
          "",
          "[Removed Lines]",
          "85:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "85:         uses: actions/download-artifact@v4",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "268:       - name: Upload Test Run Artifacts",
          "269:         if: always() && steps.download-artifacts-from-vm.outcome == 'success'",
          "271:         with:",
          "272:           name: pkg-testrun-artifacts-${{ matrix.distro-slug }}-${{ matrix.arch }}",
          "273:           path: |",
          "",
          "[Removed Lines]",
          "270:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "270:         uses: actions/upload-artifact@v4",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "302:         uses: actions/checkout@v4",
          "304:       - name: Download Onedir Tarball as an Artifact",
          "306:         with:",
          "307:           name: ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-macos-${{ matrix.arch }}.tar.xz",
          "308:           path: artifacts/",
          "",
          "[Removed Lines]",
          "305:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "305:         uses: actions/download-artifact@v4",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "474:       - name: Upload Test Run Artifacts",
          "475:         if: always()",
          "477:         with:",
          "478:           name: pkg-testrun-artifacts-${{ matrix.distro-slug }}-${{ matrix.arch }}",
          "479:           path: |",
          "",
          "[Removed Lines]",
          "476:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "476:         uses: actions/upload-artifact@v4",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "505:         uses: actions/checkout@v4",
          "507:       - name: Download Onedir Tarball as an Artifact",
          "509:         with:",
          "510:           name: ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-windows-${{ matrix.arch }}.tar.xz",
          "511:           path: artifacts/",
          "",
          "[Removed Lines]",
          "508:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "508:         uses: actions/download-artifact@v4",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "691:       - name: Upload Test Run Artifacts",
          "692:         if: always() && steps.download-artifacts-from-vm.outcome == 'success'",
          "694:         with:",
          "695:           name: pkg-testrun-artifacts-${{ matrix.distro-slug }}-${{ matrix.arch }}",
          "696:           path: |",
          "",
          "[Removed Lines]",
          "693:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "693:         uses: actions/upload-artifact@v4",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5303d2198a2dbd2aac59d390ed67418df1f58cb9",
      "candidate_info": {
        "commit_hash": "5303d2198a2dbd2aac59d390ed67418df1f58cb9",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/5303d2198a2dbd2aac59d390ed67418df1f58cb9",
        "files": [
          ".github/workflows/templates/test-package-downloads-action.yml.jinja",
          ".github/workflows/test-package-downloads-action.yml"
        ],
        "message": "Fix artifact downloads when testing package downloads\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          ".github/workflows/templates/test-package-downloads-action.yml.jinja||.github/workflows/templates/test-package-downloads-action.yml.jinja"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".github/workflows/templates/test-package-downloads-action.yml.jinja||.github/workflows/templates/test-package-downloads-action.yml.jinja": [
          "File: .github/workflows/templates/test-package-downloads-action.yml.jinja -> .github/workflows/templates/test-package-downloads-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:       - name: Download Onedir Tarball as an Artifact",
          "87:         uses: actions/download-artifact@v4",
          "88:         with:",
          "90:           path: artifacts/",
          "92:       - name: Decompress Onedir Tarball",
          "",
          "[Removed Lines]",
          "89:           name: ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-linux-${{ matrix.arch }}.tar.xz",
          "",
          "[Added Lines]",
          "89:           name: ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-linux-${{ matrix.arch == 'aarch64' && 'arm64' || matrix.arch }}.tar.xz",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94:         run: |",
          "95:           python3 -c \"import os; os.makedirs('artifacts', exist_ok=True)\"",
          "96:           cd artifacts",
          "100:         uses: actions/download-artifact@v4",
          "101:         with:",
          "104:       - name: Setup Python Tools Scripts",
          "105:         uses: ./.github/actions/setup-python-tools-scripts",
          "",
          "[Removed Lines]",
          "97:           tar xvf ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-linux-${{ matrix.arch }}.tar.xz",
          "99:       - name: Download nox.linux.${{ matrix.arch }}.tar.* artifact for session ${{ inputs.nox-session }}",
          "102:           name: nox-linux-${{ matrix.arch }}-${{ inputs.nox-session }}",
          "",
          "[Added Lines]",
          "97:           tar xvf ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-linux-${{ matrix.arch == 'aarch64' && 'arm64' || matrix.arch }}.tar.xz",
          "99:       - name: Download nox.linux.${{ matrix.arch == 'aarch64' && 'arm64' || matrix.arch }}.tar.* artifact for session ${{ inputs.nox-session }}",
          "102:           name: nox-linux-${{ matrix.arch == 'aarch64' && 'arm64' || matrix.arch }}-${{ inputs.nox-session }}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5ef5b5aa315f52a8ea58df56ed384d720c751f7b",
      "candidate_info": {
        "commit_hash": "5ef5b5aa315f52a8ea58df56ed384d720c751f7b",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/5ef5b5aa315f52a8ea58df56ed384d720c751f7b",
        "files": [
          "tests/pytests/pkg/integration/test_check_imports.py"
        ],
        "message": "Don't override the results.\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tests/pytests/pkg/integration/test_check_imports.py||tests/pytests/pkg/integration/test_check_imports.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/pkg/integration/test_check_imports.py||tests/pytests/pkg/integration/test_check_imports.py": [
          "File: tests/pytests/pkg/integration/test_check_imports.py -> tests/pytests/pkg/integration/test_check_imports.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: def run():",
          "20:     config = {}",
          "22:         'templates', 'platform', 'cli', 'executors', 'config', 'wheel', 'netapi',",
          "23:         'cache', 'proxy', 'transport', 'metaproxy', 'modules', 'tokens', 'matchers',",
          "24:         'acl', 'auth', 'log', 'engines', 'client', 'returners', 'runners', 'tops',",
          "",
          "[Removed Lines]",
          "21:     for test_import in [",
          "",
          "[Added Lines]",
          "21:     for module in [",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26:         'beacons', 'pillar', 'spm', 'utils', 'sdb', 'fileserver', 'defaults',",
          "27:         'ext', 'queues', 'grains', 'serializers'",
          "28:     ]:",
          "29:         try:",
          "31:             importlib.import_module(import_name)",
          "33:                 'test.succeed_without_changes': [",
          "34:                     {",
          "38:             }",
          "39:         except ModuleNotFoundError as err:",
          "41:                 'test.fail_without_changes': [",
          "42:                     {",
          "47:             }",
          "50:         try:",
          "53:                 'test.succeed_without_changes': [",
          "54:                     {",
          "58:             }",
          "59:         except ModuleNotFoundError as err:",
          "61:                 'test.fail_without_changes': [",
          "62:                     {",
          "67:             }",
          "68:     return config",
          "69: \"\"\"",
          "",
          "[Removed Lines]",
          "30:             import_name = \"salt.{}\".format(test_import)",
          "32:             config['test_imports_succeeded'] = {",
          "35:                         'name': import_name",
          "36:                     },",
          "37:                 ],",
          "40:             config['test_imports_failed'] = {",
          "43:                         'name': import_name,",
          "44:                         'comment': \"The imports test failed. The error was: {}\".format(err)",
          "45:                     },",
          "46:                 ],",
          "49:     for stdlib_import in [\"telnetlib\"]:",
          "51:             importlib.import_module(stdlib_import)",
          "52:             config['stdlib_imports_succeeded'] = {",
          "55:                         'name': stdlib_import",
          "56:                     },",
          "57:                 ],",
          "60:             config['stdlib_imports_failed'] = {",
          "63:                         'name': stdlib_import,",
          "64:                         'comment': \"The stdlib imports test failed. The error was: {}\".format(err)",
          "65:                     },",
          "66:                 ],",
          "",
          "[Added Lines]",
          "29:         import_name = \"salt.{}\".format(module)",
          "32:             config[import_name] = {",
          "35:                         \"name\": import_name,",
          "36:                         'comment': \"The '{}' import succeeded.\".format(import_name)",
          "37:                     }",
          "38:                 ]",
          "41:             config[import_name] = {",
          "44:                         \"name\": import_name,",
          "45:                         'comment': \"The '{}' import failed. The error was: {}\".format(import_name, err)",
          "46:                     }",
          "47:                 ]",
          "50:     for import_name in [\"telnetlib\"]:",
          "52:             importlib.import_module(import_name)",
          "53:             config[import_name] = {",
          "56:                         \"name\": import_name,",
          "57:                         'comment': \"The '{}' import succeeded.\".format(import_name)",
          "58:                     }",
          "59:                 ]",
          "62:             config[import_name] = {",
          "65:                         \"name\": import_name,",
          "66:                         'comment': \"The '{}' import failed. The error was: {}\".format(import_name, err)",
          "67:                     }",
          "68:                 ]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d8facee4de9fda5ed26c6622acfad603a904bd90",
      "candidate_info": {
        "commit_hash": "d8facee4de9fda5ed26c6622acfad603a904bd90",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/d8facee4de9fda5ed26c6622acfad603a904bd90",
        "files": [
          ".pylintrc",
          "tests/pytests/unit/utils/test_aws.py"
        ],
        "message": "Fix and `AttributeError` on Windows\n\n```\nAttributeError: module 'signal' has no attribute 'SIGALRM'. Did you mean: 'SIGABRT'?\n```\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tests/pytests/unit/utils/test_aws.py||tests/pytests/unit/utils/test_aws.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/unit/utils/test_aws.py||tests/pytests/unit/utils/test_aws.py": [
          "File: tests/pytests/unit/utils/test_aws.py -> tests/pytests/unit/utils/test_aws.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: import pytest",
          "13: import requests",
          "15: import salt.utils.aws as aws",
          "16: from tests.support.helpers import patched_environ",
          "17: from tests.support.mock import MagicMock, patch",
          "19: pytestmark = [",
          "22:     pytest.mark.skip_on_windows,",
          "24: ]",
          "",
          "[Removed Lines]",
          "20:     # Skip testing on windows since it does not support signals",
          "21:     # which is what the timeout marker is using.",
          "23:     pytest.mark.timeout(60, method=\"signal\"),",
          "",
          "[Added Lines]",
          "14: from pytest_timeout import DEFAULT_METHOD",
          "21:     # Skip testing on windows since it does not support signal.SIGALRM",
          "22:     # which is what the timeout marker is using by default.",
          "24:     pytest.mark.timeout(60, method=DEFAULT_METHOD),",
          "",
          "---------------"
        ]
      }
    }
  ]
}