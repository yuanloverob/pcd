{
  "cve_id": "CVE-2019-3808",
  "cve_desc": "A flaw was found in Moodle versions 3.6 to 3.6.1, 3.5 to 3.5.3, 3.4 to 3.4.6, 3.1 to 3.1.15 and earlier unsupported versions. The 'manage groups' capability did not have the 'XSS risk' flag assigned to it, but does have that access in certain places. Note that the capability is intended for use by trusted users, and is only assigned to teachers and managers by default.",
  "repo": "moodle/moodle",
  "patch_hash": "6360f87cdca744a6a71c315853f6d811a3e54e26",
  "patch_info": {
    "commit_hash": "6360f87cdca744a6a71c315853f6d811a3e54e26",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/6360f87cdca744a6a71c315853f6d811a3e54e26",
    "files": [
      "lib/db/access.php",
      "version.php"
    ],
    "message": "MDL-64395 groups: Added XSS Risk to the manage groups capability",
    "before_after_code_files": [
      "lib/db/access.php||lib/db/access.php",
      "version.php||version.php"
    ]
  },
  "patch_diff": {
    "lib/db/access.php||lib/db/access.php": [
      "File: lib/db/access.php -> lib/db/access.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "1123:     ),",
      "1125:     'moodle/course:managegroups' => array(",
      "1127:         'captype' => 'write',",
      "1128:         'contextlevel' => CONTEXT_COURSE,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1126:         'riskbitmask' => RISK_XSS,",
      "",
      "---------------"
    ],
    "version.php||version.php": [
      "File: version.php -> version.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "30: defined('MOODLE_INTERNAL') || die();",
      "",
      "[Removed Lines]",
      "32: $version  = 2018122000.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
      "",
      "[Added Lines]",
      "32: $version  = 2018122000.02;              // YYYYMMDD      = weekly release date of this DEV branch.",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "acee831165396e079a81975216260e81bbdac528",
      "candidate_info": {
        "commit_hash": "acee831165396e079a81975216260e81bbdac528",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/acee831165396e079a81975216260e81bbdac528",
        "files": [
          "admin/tool/mobile/lang/en/tool_mobile.php",
          "admin/tool/mobile/settings.php",
          "version.php"
        ],
        "message": "MDL-61669 tool_mobile: New app policy setting",
        "before_after_code_files": [
          "admin/tool/mobile/lang/en/tool_mobile.php||admin/tool/mobile/lang/en/tool_mobile.php",
          "admin/tool/mobile/settings.php||admin/tool/mobile/settings.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/tool/mobile/lang/en/tool_mobile.php||admin/tool/mobile/lang/en/tool_mobile.php": [
          "File: admin/tool/mobile/lang/en/tool_mobile.php -> admin/tool/mobile/lang/en/tool_mobile.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: $string['adodbdebugwarning'] = 'ADOdb debugging is enabled. It should be disabled in the external database authentication or external database enrolment plugin settings.';",
          "26: $string['androidappid'] = 'Android app\\'s unique identifier';",
          "27: $string['androidappid_desc'] = 'This setting may be left as default unless you have a custom Android app.';",
          "28: $string['autologinkeygenerationlockout'] = 'Auto-login key generation is blocked. You need to wait 6 minutes between requests.';",
          "29: $string['autologinnotallowedtoadmins'] = 'Auto-login is not allowed for site admins.';",
          "30: $string['cachedef_plugininfo'] = 'This stores the list of plugins with mobile addons';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: $string['apppolicy'] = 'App policy URL';",
          "29: $string['apppolicy_help'] = 'The URL of a policy for app users which is listed on the About page in the app. If the field is left empty, the site policy URL will be used instead.';",
          "",
          "---------------"
        ],
        "admin/tool/mobile/settings.php||admin/tool/mobile/settings.php": [
          "File: admin/tool/mobile/settings.php -> admin/tool/mobile/settings.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:                 new lang_string('configenablemobilewebservice', 'admin', $enablemobiledoclink), $default));",
          "44:     }",
          "46:     $ADMIN->add('mobileapp', $temp);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46:     $temp->add(new admin_setting_configtext('tool_mobile/apppolicy', new lang_string('apppolicy', 'tool_mobile'),",
          "47:         new lang_string('apppolicy_help', 'tool_mobile'), '', PARAM_URL));",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2018042100.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2018042100.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bde97497ef78f4e8a83577ebb14d35b2be6af10a",
      "candidate_info": {
        "commit_hash": "bde97497ef78f4e8a83577ebb14d35b2be6af10a",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/bde97497ef78f4e8a83577ebb14d35b2be6af10a",
        "files": [
          "competency/classes/api.php",
          "competency/classes/external.php",
          "competency/tests/api_test.php",
          "competency/tests/external_test.php",
          "lib/db/services.php",
          "version.php"
        ],
        "message": "MDL-65078 competencies: webservices\n\nThe webservice list_course_module_competencies calls a function that does not exist and\nis not exposed as a webservice.",
        "before_after_code_files": [
          "competency/classes/api.php||competency/classes/api.php",
          "competency/classes/external.php||competency/classes/external.php",
          "competency/tests/api_test.php||competency/tests/api_test.php",
          "competency/tests/external_test.php||competency/tests/external_test.php",
          "lib/db/services.php||lib/db/services.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "competency/classes/api.php||competency/classes/api.php": [
          "File: competency/classes/api.php -> competency/classes/api.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1203:         return $uc;",
          "1204:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1212:     public static function count_course_module_competencies($cmorid) {",
          "1213:         static::require_enabled();",
          "1214:         $cm = $cmorid;",
          "1215:         if (!is_object($cmorid)) {",
          "1216:             $cm = get_coursemodule_from_id('', $cmorid, 0, true, MUST_EXIST);",
          "1217:         }",
          "1220:         self::validate_course_module($cm);",
          "1221:         $context = context_module::instance($cm->id);",
          "1223:         $capabilities = array('moodle/competency:coursecompetencyview', 'moodle/competency:coursecompetencymanage');",
          "1224:         if (!has_any_capability($capabilities, $context)) {",
          "1225:             throw new required_capability_exception($context, 'moodle/competency:coursecompetencyview', 'nopermissions', '');",
          "1226:         }",
          "1228:         return course_module_competency::count_competencies($cm->id);",
          "1229:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1231:         $result = array();",
          "1235:         $competencies = course_module_competency::list_competencies($cm->id);",
          "",
          "[Removed Lines]",
          "1234:         $coursemodulecompetencies = course_competency::list_course_module_competencies($cm->id);",
          "",
          "[Added Lines]",
          "1259:         $coursemodulecompetencies = course_module_competency::list_course_module_competencies($cm->id);",
          "",
          "---------------"
        ],
        "competency/classes/external.php||competency/classes/external.php": [
          "File: competency/classes/external.php -> competency/classes/external.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: use context;",
          "32: use context_system;",
          "33: use context_course;",
          "34: use context_helper;",
          "35: use context_user;",
          "36: use coding_exception;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34: use context_module;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48: use core_competency\\external\\competency_framework_exporter;",
          "49: use core_competency\\external\\course_competency_exporter;",
          "50: use core_competency\\external\\course_competency_settings_exporter;",
          "51: use core_competency\\external\\evidence_exporter;",
          "52: use core_competency\\external\\performance_helper;",
          "53: use core_competency\\external\\plan_exporter;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52: use core_competency\\external\\course_module_competency_exporter;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1275:         foreach ($apiresult as $cmrecord) {",
          "1276:             $one = new \\stdClass();",
          "1278:             $one->competency = $exporter->export($output);",
          "1280:             $one->coursemodulecompetency = $exporter->export($output);",
          "1282:             $result[] = (array) $one;",
          "",
          "[Removed Lines]",
          "1277:             $exporter = new competency_exporter($cmrecord['competency']);",
          "1279:             $exporter = new course_module_competency_exporter($cmrecord['coursemodulecompetency']);",
          "",
          "[Added Lines]",
          "1279:             $exporter = new competency_exporter($cmrecord['competency'], ['context' => $context]);",
          "1281:             $exporter = new course_module_competency_exporter($cmrecord['coursemodulecompetency'], ['context' => $context]);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1316:         return new external_function_parameters($params);",
          "1317:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1326:     public static function count_course_module_competencies_parameters() {",
          "1327:         $cmid = new external_value(",
          "1328:             PARAM_INT,",
          "1329:             'The course module id',",
          "1330:             VALUE_REQUIRED",
          "1331:         );",
          "1332:         $params = array(",
          "1333:             'cmid' => $cmid",
          "1334:         );",
          "1335:         return new external_function_parameters($params);",
          "1336:     }",
          "1344:     public static function count_course_module_competencies($cmid) {",
          "1345:         $params = self::validate_parameters(self::count_course_module_competencies_parameters(), array(",
          "1346:             'cmid' => $cmid",
          "1347:         ));",
          "1349:         $context = context_module::instance($params['cmid']);",
          "1350:         self::validate_context($context);",
          "1352:         return api::count_course_module_competencies($params['cmid']);",
          "1353:     }",
          "1360:     public static function count_course_module_competencies_returns() {",
          "1361:         return new external_value(PARAM_INT, 'The number of competencies found.');",
          "1362:     }",
          "",
          "---------------"
        ],
        "competency/tests/api_test.php||competency/tests/api_test.php": [
          "File: competency/tests/api_test.php -> competency/tests/api_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2757:         $result = api::list_course_module_competencies_in_course_module($cm->id);",
          "2758:         $this->assertEquals($result[0]->get('competencyid'), $c->get('id'));",
          "2759:         $this->assertEquals($result[1]->get('competencyid'), $c2->get('id'));",
          "2760:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2762:         $result = api::list_course_module_competencies($cm->id);",
          "2765:         foreach ($result as $instance) {",
          "2766:             $cmc = $instance['coursemodulecompetency'];",
          "2767:             $c = $instance['competency'];",
          "2768:             $this->assertEquals($cmc->get('competencyid'), $c->get('id'));",
          "2769:         }",
          "",
          "---------------"
        ],
        "competency/tests/external_test.php||competency/tests/external_test.php": [
          "File: competency/tests/external_test.php -> competency/tests/external_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2838:         $this->assertEquals($filter, $result[0]->shortname);",
          "2839:     }",
          "2841: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2846:     public function test_list_competencies_with_course_module() {",
          "2847:         $this->resetAfterTest(true);",
          "2848:         $this->setAdminUser();",
          "2849:         $dg = $this->getDataGenerator();",
          "2850:         $lpg = $this->getDataGenerator()->get_plugin_generator('core_competency');",
          "2851:         $course = $dg->create_course();",
          "2853:         $framework = $lpg->create_framework();",
          "2854:         $c1 = $lpg->create_competency(array('competencyframeworkid' => $framework->get('id')));",
          "2855:         $c2 = $lpg->create_competency(array('competencyframeworkid' => $framework->get('id')));",
          "2856:         $c3 = $lpg->create_competency(array('competencyframeworkid' => $framework->get('id')));",
          "2857:         $c4 = $lpg->create_competency(array('competencyframeworkid' => $framework->get('id')));",
          "2858:         $c5 = $lpg->create_competency(array('competencyframeworkid' => $framework->get('id')));",
          "2860:         $cc1 = api::add_competency_to_course($course->id, $c1->get('id'));",
          "2861:         $cc2 = api::add_competency_to_course($course->id, $c2->get('id'));",
          "2862:         $cc3 = api::add_competency_to_course($course->id, $c3->get('id'));",
          "2864:         $pagegenerator = $this->getDataGenerator()->get_plugin_generator('mod_page');",
          "2865:         $page = $pagegenerator->create_instance(array('course' => $course->id));",
          "2867:         $cm = get_coursemodule_from_instance('page', $page->id);",
          "2869:         $ccm1 = api::add_competency_to_course_module($cm, $c1->get('id'));",
          "2870:         $ccm2 = api::add_competency_to_course_module($cm, $c2->get('id'));",
          "2873:         $total = external::count_course_module_competencies($cm->id);",
          "2874:         $result = external::list_course_module_competencies($cm->id);",
          "2875:         $this->assertCount($total, $result);",
          "2879:         foreach ($result as $instance) {",
          "2880:             $cmc = $instance['coursemodulecompetency'];",
          "2881:             $c = $instance['competency'];",
          "2882:             $this->assertEquals($cmc->competencyid, $c->id);",
          "2883:         }",
          "2885:     }",
          "",
          "---------------"
        ],
        "lib/db/services.php||lib/db/services.php": [
          "File: lib/db/services.php -> lib/db/services.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1966:         'capabilities' => 'moodle/competency:competencymanage',",
          "1967:         'ajax'         => true,",
          "1968:     ),",
          "1969:     'core_competency_list_course_competencies' => array(",
          "1970:         'classname'    => 'core_competency\\external',",
          "1971:         'methodname'   => 'list_course_competencies',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1969:     'core_competency_list_course_module_competencies' => array(",
          "1970:         'classname'    => 'core_competency\\external',",
          "1971:         'methodname'   => 'list_course_module_competencies',",
          "1972:         'classpath'    => '',",
          "1973:         'description'  => 'List the competencies in a course module',",
          "1974:         'type'         => 'read',",
          "1975:         'capabilities' => 'moodle/competency:coursecompetencyview',",
          "1976:         'ajax'         => true,",
          "1977:     ),",
          "1978:     'core_competency_count_course_module_competencies' => array(",
          "1979:         'classname'    => 'core_competency\\external',",
          "1980:         'methodname'   => 'count_course_module_competencies',",
          "1981:         'classpath'    => '',",
          "1982:         'description'  => 'Count the competencies in a course module',",
          "1983:         'type'         => 'read',",
          "1984:         'capabilities' => 'moodle/competency:coursecompetencyview',",
          "1985:         'ajax'         => true,",
          "1986:     ),",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2019071200.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2019071200.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "75290313680125d0f8e1264f004016778d0a14b4",
      "candidate_info": {
        "commit_hash": "75290313680125d0f8e1264f004016778d0a14b4",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/75290313680125d0f8e1264f004016778d0a14b4",
        "files": [
          "lib/db/upgrade.php",
          "version.php"
        ],
        "message": "MDL-61876 admin: for upgraded sites keep forceclean=0",
        "before_after_code_files": [
          "lib/db/upgrade.php||lib/db/upgrade.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/db/upgrade.php||lib/db/upgrade.php": [
          "File: lib/db/upgrade.php -> lib/db/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2216:         upgrade_main_savepoint(true, 2018040500.01);",
          "2217:     }",
          "2219:     return true;",
          "2220: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2219:     if ($oldversion < 2018050200.01) {",
          "2223:         set_config('forceclean', 0);",
          "2226:         upgrade_main_savepoint(true, 2018050200.01);",
          "2227:     }",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2018050200.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2018050200.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c7d148dc202ea5667a04b8677df8b6f3b9182fc9",
      "candidate_info": {
        "commit_hash": "c7d148dc202ea5667a04b8677df8b6f3b9182fc9",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/c7d148dc202ea5667a04b8677df8b6f3b9182fc9",
        "files": [
          "version.php"
        ],
        "message": "weekly release 3.6dev",
        "before_after_code_files": [
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "38: $branch   = '36';                       // This version's branch.",
          "39: $maturity = MATURITY_ALPHA;             // This version's maturity level.",
          "",
          "[Removed Lines]",
          "32: $version  = 2018062800.03;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "36: $release  = '3.6dev (Build: 20180628)'; // Human-friendly version name",
          "",
          "[Added Lines]",
          "32: $version  = 2018070600.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "36: $release  = '3.6dev (Build: 20180706)'; // Human-friendly version name",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "765579d02199ea44a1eed8c90a079072e4a4cc3b",
      "candidate_info": {
        "commit_hash": "765579d02199ea44a1eed8c90a079072e4a4cc3b",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/765579d02199ea44a1eed8c90a079072e4a4cc3b",
        "files": [
          "version.php"
        ],
        "message": "weekly release 3.7.2+",
        "before_after_code_files": [
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "38: $branch   = '37';                       // This version's branch.",
          "39: $maturity = MATURITY_STABLE;             // This version's maturity level.",
          "",
          "[Removed Lines]",
          "32: $version  = 2019052002.06;              // 20190520      = branching date YYYYMMDD - do not modify!",
          "36: $release  = '3.7.2+ (Build: 20191004)'; // Human-friendly version name",
          "",
          "[Added Lines]",
          "32: $version  = 2019052002.07;              // 20190520      = branching date YYYYMMDD - do not modify!",
          "36: $release  = '3.7.2+ (Build: 20191008)'; // Human-friendly version name",
          "",
          "---------------"
        ]
      }
    }
  ]
}