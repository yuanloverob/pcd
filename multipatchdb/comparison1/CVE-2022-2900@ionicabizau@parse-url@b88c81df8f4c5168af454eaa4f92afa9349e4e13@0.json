{
  "cve_id": "CVE-2022-2900",
  "cve_desc": "Server-Side Request Forgery (SSRF) in GitHub repository ionicabizau/parse-url prior to 8.1.0.",
  "repo": "ionicabizau/parse-url",
  "patch_hash": "b88c81df8f4c5168af454eaa4f92afa9349e4e13",
  "patch_info": {
    "commit_hash": "b88c81df8f4c5168af454eaa4f92afa9349e4e13",
    "repo": "ionicabizau/parse-url",
    "commit_url": "https://github.com/ionicabizau/parse-url/commit/b88c81df8f4c5168af454eaa4f92afa9349e4e13",
    "files": [
      "lib/index.js",
      "test/index.js"
    ],
    "message": "Throw if url is invalid. Add a length limit.",
    "before_after_code_files": [
      "lib/index.js||lib/index.js",
      "test/index.js||test/index.js"
    ]
  },
  "patch_diff": {
    "lib/index.js||lib/index.js": [
      "File: lib/index.js -> lib/index.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "36: const parseUrl = (url, normalize = false) => {",
      "39:     const GIT_RE = /(^(git@|http(s)?:\\/\\/)([\\w\\.\\-@]+)(\\/|:))(([\\~,\\.\\w,\\-,\\_,\\/]+)(.git){0,1}((\\/){0,1}))/",
      "43:         err.subject_url = url",
      "44:         throw err",
      "45:     }",
      "47:     if (normalize) {",
      "48:         if (typeof normalize !== \"object\") {",
      "49:             normalize = {",
      "",
      "[Removed Lines]",
      "41:     if (typeof url !== \"string\" || !url.trim()) {",
      "42:         const err = new Error(\"Invalid url.\")",
      "",
      "[Added Lines]",
      "42:     const throwErr = msg => {",
      "43:         const err = new Error(msg)",
      "48:     if (typeof url !== \"string\" || !url.trim()) {",
      "49:         throwErr(\"Invalid url.\")",
      "50:     }",
      "52:     if (url.length > parseUrl.MAX_INPUT_LENGTH) {",
      "53:         throwErr(\"Input exceeds maximum length. If needed, change the value of parseUrl.MAX_INPUT_LENGTH.\")",
      "54:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "56:     const parsed = parsePath(url)",
      "60:         const matched  = parsed.href.match(GIT_RE)",
      "61:         if (matched) {",
      "62:             parsed.protocols = [\"ssh\"]",
      "",
      "[Removed Lines]",
      "59:     if (parsed.protocol === \"file\") {",
      "",
      "[Added Lines]",
      "68:     if (parsed.parse_failed) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "65:             parsed.host = matched[4]",
      "66:             parsed.user = \"git\"",
      "67:             parsed.pathname = `/${matched[6]}`",
      "68:         }",
      "69:     }",
      "71:     return parsed;",
      "72: }",
      "74: export default parseUrl;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "77:             parsed.parse_failed = false",
      "78:         } else {",
      "79:             throwErr(\"URL parsing failed.\")",
      "86: parseUrl.MAX_INPUT_LENGTH = 2048",
      "",
      "---------------"
    ],
    "test/index.js||test/index.js": [
      "File: test/index.js -> test/index.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "17:           , hash: \"\"",
      "18:           , search: \"\"",
      "19:           , query: {}",
      "20:         }",
      "21:     ]",
      "22:   , [",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "20:           , parse_failed: false",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "32:           , hash: \"\"",
      "33:           , search: \"\"",
      "34:           , query: {}",
      "35:         }",
      "36:     ]",
      "37:   , [",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "36:           , parse_failed: false",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "47:           , hash: \"some-hash?foo=bar\"",
      "48:           , search: \"\"",
      "49:           , query: {}",
      "50:         }",
      "51:     ]",
      "52:   , [",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "52:           , parse_failed: false",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "62:           , hash: \"\"",
      "63:           , search: \"\"",
      "64:           , query: {}",
      "65:         }",
      "66:     ]",
      "67:   , [",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "68:           , parse_failed: false",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "77:           , hash: \"\"",
      "78:           , search: \"\"",
      "79:           , query: {}",
      "80:         }",
      "81:     ]",
      "82:   , [",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "84:           , parse_failed: false",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "92:           , hash: \"\"",
      "93:           , search: \"\"",
      "94:           , query: {}",
      "95:         }",
      "96:     ]",
      "97:   , [",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "100:           , parse_failed: false",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "107:           , hash: \"http://a:1:1\"",
      "108:           , search: \"\"",
      "109:           , query: {}",
      "110:         }",
      "111:     ]",
      "112:   , [",
      "113:         [\"git@github.my-enterprise.com:my-org/my-repo.git\", false],",
      "114:         {",
      "115:             protocols: [ 'ssh' ]",
      "126:         }",
      "127:     ]",
      "128:   , [",
      "",
      "[Removed Lines]",
      "116:             , protocol: 'ssh'",
      "117:             , port: ''",
      "118:             , resource: 'github.my-enterprise.com'",
      "119:             , host: 'github.my-enterprise.com'",
      "120:             , user: 'git'",
      "121:             , password: ''",
      "122:             , pathname: '/my-org/my-repo.git'",
      "123:             , hash: ''",
      "124:             , search: ''",
      "125:             , query: {}",
      "",
      "[Added Lines]",
      "116:           , parse_failed: false",
      "123:           , protocol: 'ssh'",
      "124:           , port: ''",
      "125:           , resource: 'github.my-enterprise.com'",
      "126:           , host: 'github.my-enterprise.com'",
      "127:           , user: 'git'",
      "128:           , password: ''",
      "129:           , pathname: '/my-org/my-repo.git'",
      "130:           , hash: ''",
      "131:           , search: ''",
      "132:           , query: {}",
      "133:           , parse_failed: false",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "138:         , hash: \"\"",
      "139:         , search: \"\"",
      "140:         , query: {}",
      "141:       }",
      "142:   ]",
      "143: ];",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "149:         , parse_failed: false",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "165:             parseUrl(\"\")",
      "166:         }).toThrow(/invalid url/i)",
      "167:     })",
      "168: });",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "178:     test.should(\"throw if url is too long\", () => {",
      "179:         parseUrl.MAX_INPUT_LENGTH = 10",
      "180:         test.expect(() => {",
      "181:             parseUrl(\"https://domain.com/\")",
      "182:         }).toThrow(/input exceeds maximum length/i)",
      "183:     })",
      "185:     test.should(\"throw if url is invalid\", () => {",
      "186:         test.expect(() => {",
      "187:             parseUrl(\"foo\")",
      "188:         }).toThrow(/url parsing failed/i)",
      "189:     })",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0790043afad5d8cfa17b52aff985ad4e1414beb1",
      "candidate_info": {
        "commit_hash": "0790043afad5d8cfa17b52aff985ad4e1414beb1",
        "repo": "ionicabizau/parse-url",
        "commit_url": "https://github.com/ionicabizau/parse-url/commit/0790043afad5d8cfa17b52aff985ad4e1414beb1",
        "files": [
          "lib/index.js",
          "package.json",
          "test/index.js"
        ],
        "message": "Add the host and update the parse-path.",
        "before_after_code_files": [
          "lib/index.js||lib/index.js",
          "test/index.js||test/index.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/IonicaBizau/parse-url/pull/55"
        ],
        "olp_code_files": {
          "patch": [
            "lib/index.js||lib/index.js",
            "test/index.js||test/index.js"
          ],
          "candidate": [
            "lib/index.js||lib/index.js",
            "test/index.js||test/index.js"
          ]
        }
      },
      "candidate_diff": {
        "lib/index.js||lib/index.js": [
          "File: lib/index.js -> lib/index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "63:             parsed.protocols = [\"ssh\"]",
          "64:             parsed.protocol = \"ssh\"",
          "65:             parsed.resource = matched[4]",
          "66:             parsed.user = \"git\"",
          "67:             parsed.pathname = `/${matched[6]}`",
          "68:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:             parsed.host = matched[4]",
          "",
          "---------------"
        ],
        "test/index.js||test/index.js": [
          "File: test/index.js -> test/index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:           , protocol: \"http\"",
          "12:           , port: \"\"",
          "13:           , resource: \"ionicabizau.net\"",
          "14:           , user: \"\"",
          "15:           , pathname: \"/blog\"",
          "16:           , hash: \"\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14:           , host: \"ionicabizau.net\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25:           , protocol: \"http\"",
          "26:           , port: \"\"",
          "27:           , resource: \"ionicabizau.net\"",
          "28:           , user: \"\"",
          "29:           , pathname: \"/foo.js\"",
          "30:           , hash: \"\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:           , host: \"ionicabizau.net\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "39:           , protocol: \"http\"",
          "40:           , port: \"\"",
          "41:           , resource: \"domain.com\"",
          "42:           , user: \"\"",
          "43:           , pathname: \"/path/name\"",
          "44:           , hash: \"some-hash?foo=bar\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:           , host: \"domain.com\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "53:           , protocol: \"git\"",
          "54:           , port: \"\"",
          "55:           , resource: \"host.xz\"",
          "56:           , user: \"git\"",
          "57:           , pathname: \"/path/name.git\"",
          "58:           , hash: \"\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59:           , host: \"host.xz\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "67:           , protocol: \"ssh\"",
          "68:           , port: \"\"",
          "69:           , resource: \"github.com\"",
          "70:           , user: \"git\"",
          "71:           , pathname: \"/IonicaBizau/git-stats.git\"",
          "72:           , hash: \"\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74:           , host: \"github.com\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "81:           , protocol: \"http\"",
          "82:           , port: \"\"",
          "83:           , resource: \"ionicabizau.net\"",
          "84:           , user: \"\"",
          "85:           , pathname: \"/with-true-normalize\"",
          "86:           , hash: \"\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89:           , host: \"ionicabizau.net\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "95:           , protocol: \"file\"",
          "96:           , port: \"\"",
          "97:           , resource: \"\"",
          "98:           , user: \"\"",
          "99:           , pathname: \"/etc/passwd\"",
          "100:           , hash: \"http://a:1:1\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "104:           , host: \"\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2373f7f942a0e01288e1e4551e0c297030ea41cf",
      "candidate_info": {
        "commit_hash": "2373f7f942a0e01288e1e4551e0c297030ea41cf",
        "repo": "ionicabizau/parse-url",
        "commit_url": "https://github.com/ionicabizau/parse-url/commit/2373f7f942a0e01288e1e4551e0c297030ea41cf",
        "files": [
          ".gitignore",
          "DOCUMENTATION.md",
          "README.md",
          "dist/index.js",
          "dist/index.mjs"
        ],
        "message": "Updated docs",
        "before_after_code_files": [
          "dist/index.js||dist/index.js",
          "dist/index.mjs||dist/index.mjs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/IonicaBizau/parse-url/pull/55"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "dist/index.js||dist/index.js": [
          "File: dist/index.js -> dist/index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: 'use strict';",
          "3: var parsePath = require('parse-path');",
          "4: var normalizeUrl = require('normalize-url');",
          "6: function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }",
          "8: var parsePath__default = /*#__PURE__*/_interopDefaultLegacy(parsePath);",
          "9: var normalizeUrl__default = /*#__PURE__*/_interopDefaultLegacy(normalizeUrl);",
          "43: const parseUrl = (url, normalize = false) => {",
          "46:     const GIT_RE = /(^(git@|http(s)?:\\/\\/)([\\w\\.\\-@]+)(\\/|:))(([\\~,\\.\\w,\\-,\\_,\\/]+)(.git){0,1}((\\/){0,1}))/;",
          "48:     const throwErr = msg => {",
          "49:         const err = new Error(msg);",
          "50:         err.subject_url = url;",
          "51:         throw err",
          "52:     };",
          "54:     if (typeof url !== \"string\" || !url.trim()) {",
          "55:         throwErr(\"Invalid url.\");",
          "56:     }",
          "58:     if (url.length > parseUrl.MAX_INPUT_LENGTH) {",
          "59:         throwErr(\"Input exceeds maximum length. If needed, change the value of parseUrl.MAX_INPUT_LENGTH.\");",
          "60:     }",
          "62:     if (normalize) {",
          "63:         if (typeof normalize !== \"object\") {",
          "64:             normalize = {",
          "65:                 stripHash: false",
          "66:             };",
          "67:         }",
          "68:         url = normalizeUrl__default[\"default\"](url, normalize);",
          "69:     }",
          "71:     const parsed = parsePath__default[\"default\"](url);",
          "74:     if (parsed.parse_failed) {",
          "75:         const matched  = parsed.href.match(GIT_RE);",
          "76:         if (matched) {",
          "77:             parsed.protocols = [\"ssh\"];",
          "78:             parsed.protocol = \"ssh\";",
          "79:             parsed.resource = matched[4];",
          "80:             parsed.host = matched[4];",
          "81:             parsed.user = \"git\";",
          "82:             parsed.pathname = `/${matched[6]}`;",
          "83:             parsed.parse_failed = false;",
          "84:         } else {",
          "85:             throwErr(\"URL parsing failed.\");",
          "86:         }",
          "87:     }",
          "89:     return parsed;",
          "90: };",
          "92: parseUrl.MAX_INPUT_LENGTH = 2048;",
          "94: module.exports = parseUrl;",
          "",
          "---------------"
        ],
        "dist/index.mjs||dist/index.mjs": [
          "File: dist/index.mjs -> dist/index.mjs",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import parsePath from 'parse-path';",
          "2: import normalizeUrl from 'normalize-url';",
          "36: const parseUrl = (url, normalize = false) => {",
          "39:     const GIT_RE = /(^(git@|http(s)?:\\/\\/)([\\w\\.\\-@]+)(\\/|:))(([\\~,\\.\\w,\\-,\\_,\\/]+)(.git){0,1}((\\/){0,1}))/;",
          "41:     const throwErr = msg => {",
          "42:         const err = new Error(msg);",
          "43:         err.subject_url = url;",
          "44:         throw err",
          "45:     };",
          "47:     if (typeof url !== \"string\" || !url.trim()) {",
          "48:         throwErr(\"Invalid url.\");",
          "49:     }",
          "51:     if (url.length > parseUrl.MAX_INPUT_LENGTH) {",
          "52:         throwErr(\"Input exceeds maximum length. If needed, change the value of parseUrl.MAX_INPUT_LENGTH.\");",
          "53:     }",
          "55:     if (normalize) {",
          "56:         if (typeof normalize !== \"object\") {",
          "57:             normalize = {",
          "58:                 stripHash: false",
          "59:             };",
          "60:         }",
          "61:         url = normalizeUrl(url, normalize);",
          "62:     }",
          "64:     const parsed = parsePath(url);",
          "67:     if (parsed.parse_failed) {",
          "68:         const matched  = parsed.href.match(GIT_RE);",
          "69:         if (matched) {",
          "70:             parsed.protocols = [\"ssh\"];",
          "71:             parsed.protocol = \"ssh\";",
          "72:             parsed.resource = matched[4];",
          "73:             parsed.host = matched[4];",
          "74:             parsed.user = \"git\";",
          "75:             parsed.pathname = `/${matched[6]}`;",
          "76:             parsed.parse_failed = false;",
          "77:         } else {",
          "78:             throwErr(\"URL parsing failed.\");",
          "79:         }",
          "80:     }",
          "82:     return parsed;",
          "83: };",
          "85: parseUrl.MAX_INPUT_LENGTH = 2048;",
          "87: export { parseUrl as default };",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3c169ee5fb06cad60e455b45dd9890fded498734",
      "candidate_info": {
        "commit_hash": "3c169ee5fb06cad60e455b45dd9890fded498734",
        "repo": "ionicabizau/parse-url",
        "commit_url": "https://github.com/ionicabizau/parse-url/commit/3c169ee5fb06cad60e455b45dd9890fded498734",
        "files": [
          "lib/index.js"
        ],
        "message": "fix file protocol spoofing\n\nfix file protocol spoofing",
        "before_after_code_files": [
          "lib/index.js||lib/index.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/IonicaBizau/parse-url/pull/55"
        ],
        "olp_code_files": {
          "patch": [
            "lib/index.js||lib/index.js"
          ],
          "candidate": [
            "lib/index.js||lib/index.js"
          ]
        }
      },
      "candidate_diff": {
        "lib/index.js||lib/index.js": [
          "File: lib/index.js -> lib/index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: const parseUrl = (url, normalize = false) => {",
          "42:     if (typeof url !== \"string\" || !url.trim()) {",
          "43:         const err = new Error(\"Invalid url.\")",
          "",
          "[Removed Lines]",
          "40:     const GIT_RE = /((git@|http(s)?:\\/\\/)([\\w\\.@]+)(\\/|:))(([\\~,\\w,\\-,\\_,\\/]+)(.git){0,1}((\\/){0,1}))/",
          "",
          "[Added Lines]",
          "40:     const GIT_RE = /(^(git@|http(s)?:\\/\\/)([\\w\\.@]+)(\\/|:))(([\\~,\\w,\\-,\\_,\\/]+)(.git){0,1}((\\/){0,1}))/",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bdd9745b6c3c9f48b40babe73b282675219f352f",
      "candidate_info": {
        "commit_hash": "bdd9745b6c3c9f48b40babe73b282675219f352f",
        "repo": "ionicabizau/parse-url",
        "commit_url": "https://github.com/ionicabizau/parse-url/commit/bdd9745b6c3c9f48b40babe73b282675219f352f",
        "files": [
          "lib/index.js",
          "test/index.js"
        ],
        "message": "fix: support dot in git@ URLS",
        "before_after_code_files": [
          "lib/index.js||lib/index.js",
          "test/index.js||test/index.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/IonicaBizau/parse-url/pull/55"
        ],
        "olp_code_files": {
          "patch": [
            "lib/index.js||lib/index.js",
            "test/index.js||test/index.js"
          ],
          "candidate": [
            "lib/index.js||lib/index.js",
            "test/index.js||test/index.js"
          ]
        }
      },
      "candidate_diff": {
        "lib/index.js||lib/index.js": [
          "File: lib/index.js -> lib/index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: const parseUrl = (url, normalize = false) => {",
          "42:     if (typeof url !== \"string\" || !url.trim()) {",
          "43:         const err = new Error(\"Invalid url.\")",
          "",
          "[Removed Lines]",
          "40:     const GIT_RE = /((git@|http(s)?:\\/\\/)([\\w\\.@]+)(\\/|:))(([\\~,\\w,\\-,\\_,\\/]+)(.git){0,1}((\\/){0,1}))/",
          "",
          "[Added Lines]",
          "40:     const GIT_RE = /((git@|http(s)?:\\/\\/)([\\w\\.@]+)(\\/|:))(([\\~,\\.\\w,\\-,\\_,\\/]+)(.git){0,1}((\\/){0,1}))/",
          "",
          "---------------"
        ],
        "test/index.js||test/index.js": [
          "File: test/index.js -> test/index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:           , query: {}",
          "89:         }",
          "90:     ]",
          "91: ];",
          "93: tester.describe(\"check urls\", test => {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91:   , [",
          "92:       [\"git@github.com:halup/Cloud.API.Gateway.git\", false]",
          "93:     , {",
          "94:           protocols: [ \"ssh\" ]",
          "95:         , protocol: \"ssh\"",
          "96:         , port: \"\"",
          "97:         , resource: \"github.com\"",
          "98:         , user: \"git\"",
          "99:         , pathname: \"/halup/Cloud.API.Gateway.git\"",
          "100:         , hash: \"\"",
          "101:         , search: \"\"",
          "102:         , query: {}",
          "103:       }",
          "104:   ]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4093bbae882749dca6649b86b136e2f077f9055f",
      "candidate_info": {
        "commit_hash": "4093bbae882749dca6649b86b136e2f077f9055f",
        "repo": "ionicabizau/parse-url",
        "commit_url": "https://github.com/ionicabizau/parse-url/commit/4093bbae882749dca6649b86b136e2f077f9055f",
        "files": [
          "lib/index.js"
        ],
        "message": "Add the url in the error object, fixes #14",
        "before_after_code_files": [
          "lib/index.js||lib/index.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/index.js||lib/index.js"
          ],
          "candidate": [
            "lib/index.js||lib/index.js"
          ]
        }
      },
      "candidate_diff": {
        "lib/index.js||lib/index.js": [
          "File: lib/index.js -> lib/index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:     const GIT_RE = /((git@|http(s)?:\\/\\/)([\\w\\.@]+)(\\/|:))(([\\~,\\w,\\-,\\_,\\/]+)(.git){0,1}((\\/){0,1}))/",
          "42:     if (typeof url !== \"string\" || !url.trim()) {",
          "44:     }",
          "46:     if (normalize) {",
          "",
          "[Removed Lines]",
          "43:         throw new Error(\"Invalid url.\")",
          "",
          "[Added Lines]",
          "43:         const err = new Error(\"Invalid url.\")",
          "44:         err.subject_url = url",
          "45:         throw err",
          "",
          "---------------"
        ]
      }
    }
  ]
}