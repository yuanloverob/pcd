{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6bdbb0000739294cd3f069e8be9f5992a7f325e4",
      "candidate_info": {
        "commit_hash": "6bdbb0000739294cd3f069e8be9f5992a7f325e4",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/6bdbb0000739294cd3f069e8be9f5992a7f325e4",
        "files": [
          "ambari-common/src/main/python/ambari_commons/shell.py"
        ],
        "message": "AMBARI-24309. Hadoop Metrics Sink Precheck takes 5 minutes to complete - failing the prechecks API call due to timeout. (aonishuk)",
        "before_after_code_files": [
          "ambari-common/src/main/python/ambari_commons/shell.py||ambari-common/src/main/python/ambari_commons/shell.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-common/src/main/python/ambari_commons/shell.py||ambari-common/src/main/python/ambari_commons/shell.py": [
          "File: ambari-common/src/main/python/ambari_commons/shell.py -> ambari-common/src/main/python/ambari_commons/shell.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "494:       yield []",
          "495:       return",
          "496:     kill_timer = threading.Timer(timeout, lambda: cmd.kill())",
          "497:     if timeout > -1:",
          "498:       kill_timer.start()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "497:     kill_timer.daemon = True",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "512:     if error_callback and cmd.returncode and cmd.returncode > 0:",
          "513:       error_callback(command, cmd.stderr.readlines(), cmd.returncode)",
          "514:   except Exception as e:",
          "517:     _logger.error(\"Exception during command '{0}' execution: {1}\".format(command, str(e)))",
          "518:     if error_callback:",
          "519:       error_callback(command, [str(e)], -1)",
          "",
          "[Removed Lines]",
          "515:     if kill_timer:",
          "516:       kill_timer.cancel()",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "522:   finally:",
          "523:     if buff_queue:",
          "524:       buff_queue.notify_end()",
          "527: def get_all_children(base_pid):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "524:     if kill_timer:",
          "525:       kill_timer.cancel()",
          "526:       kill_timer.join()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cf3ec0c543681387f2bfeec7a921207d1fcbc6d7",
      "candidate_info": {
        "commit_hash": "cf3ec0c543681387f2bfeec7a921207d1fcbc6d7",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/cf3ec0c543681387f2bfeec7a921207d1fcbc6d7",
        "files": [
          "ambari-web/app/mixins/common/configs/config_recommendation_parser.js"
        ],
        "message": "[AMBARI-24452] [UI Deploy] LLAP queue is not created/set in YARN conf\u2026 (#2016)\n\n* [AMBARI-24452] [UI Deploy] LLAP queue is not created/set in YARN configs while enabling HSI.\n\n* Changed function parameters info",
        "before_after_code_files": [
          "ambari-web/app/mixins/common/configs/config_recommendation_parser.js||ambari-web/app/mixins/common/configs/config_recommendation_parser.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/mixins/common/configs/config_recommendation_parser.js||ambari-web/app/mixins/common/configs/config_recommendation_parser.js": [
          "File: ambari-web/app/mixins/common/configs/config_recommendation_parser.js -> ambari-web/app/mixins/common/configs/config_recommendation_parser.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "169:           allowConfigUpdate = false;",
          "170:         }",
          "171:       }",
          "172:       if (prevRecommeneded !== value) {",
          "173:         allowConfigUpdate = false;",
          "174:       }",
          "175:       if (allowConfigUpdate) {",
          "176:         Em.setProperties(config, {",
          "177:           value: recommendedValue,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "177:       if (name === \"capacity-scheduler\") {",
          "178:         allowConfigUpdate = this.compareCapacitySchedulerValues(prevRecommeneded, value);",
          "179:       }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "191:     return config;",
          "192:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "210:   compareCapacitySchedulerValues: function (prevRec, value) {",
          "213:     let prevRecArr = prevRec.split(\"\\n\");",
          "214:     let valueArr = value.split(\"\\n\");",
          "217:     if (valueArr[0].includes(\"capacity-scheduler\")) {",
          "218:       valueArr = valueArr.splice(1);",
          "219:     }",
          "221:     if (prevRecArr.length !== valueArr.length) {",
          "222:       return false;",
          "223:     }",
          "224:     if (prevRecArr.length < 2 || valueArr.length < 2) {",
          "225:       return prevRec === value;",
          "226:     }",
          "227:     let strMap = {};",
          "228:     for (var i=0; i <prevRecArr.length; i++) {",
          "229:       strMap[prevRecArr[i]] = true;",
          "230:     }",
          "231:     for (var i=0; i<valueArr.length; i++) {",
          "232:       if (!strMap[valueArr[i]]) {",
          "233:         return false;",
          "234:       }",
          "235:     }",
          "236:     return true;",
          "237:   },",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2cb50c87ca751ea96b24e26c2098b7425b8e1642",
      "candidate_info": {
        "commit_hash": "2cb50c87ca751ea96b24e26c2098b7425b8e1642",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/2cb50c87ca751ea96b24e26c2098b7425b8e1642",
        "files": [
          "ambari-infra/ambari-infra-solr-client/src/main/python/migrationHelper.py"
        ],
        "message": "AMBARI-23945. Infra Solr migration: REQUESTSTATUS response content type is xml instead of json (#1738)",
        "before_after_code_files": [
          "ambari-infra/ambari-infra-solr-client/src/main/python/migrationHelper.py||ambari-infra/ambari-infra-solr-client/src/main/python/migrationHelper.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-infra/ambari-infra-solr-client/src/main/python/migrationHelper.py||ambari-infra/ambari-infra-solr-client/src/main/python/migrationHelper.py": [
          "File: ambari-infra/ambari-infra-solr-client/src/main/python/migrationHelper.py -> ambari-infra/ambari-infra-solr-client/src/main/python/migrationHelper.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "70: CREATE_SOLR_COLLECTION_URL = '{0}/admin/collections?action=CREATE&name={1}&collection.configName={2}&numShards={3}&replicationFactor={4}&maxShardsPerNode={5}&wt=json'",
          "71: DELETE_SOLR_COLLECTION_URL = '{0}/admin/collections?action=DELETE&name={1}&wt=json&async={2}'",
          "72: RELOAD_SOLR_COLLECTION_URL = '{0}/admin/collections?action=RELOAD&name={1}&wt=json'",
          "74: CORE_DETAILS_URL = '{0}replication?command=details&wt=json'",
          "76: INFRA_SOLR_CLIENT_BASE_PATH = '/usr/lib/ambari-infra-solr-client/'",
          "",
          "[Removed Lines]",
          "73: REQUEST_STATUS_SOLR_COLLECTION_URL = '{0}/admin/collections?action=REQUESTSTATUS&requestid={1}'",
          "",
          "[Added Lines]",
          "73: REQUEST_STATUS_SOLR_COLLECTION_URL = '{0}/admin/collections?action=REQUESTSTATUS&requestid={1}&wt=json'",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5f3da4323503b712da29e2ef956cb0159d8c92d8",
      "candidate_info": {
        "commit_hash": "5f3da4323503b712da29e2ef956cb0159d8c92d8",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/5f3da4323503b712da29e2ef956cb0159d8c92d8",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/state/PropertyUpgradeBehavior.java",
          "ambari-server/src/main/java/org/apache/ambari/server/upgrade/AbstractUpgradeCatalog.java",
          "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog275.java"
        ],
        "message": "AMBARI-25379 Upgrade AMS Grafana version to 6.3.5\n\nUpon Ambari upgrade the grafana configuration template is updated based on the scak code.\n\nChange-Id: I11f32df3a9df56abde721608f7a61c2d703001e1",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/state/PropertyUpgradeBehavior.java||ambari-server/src/main/java/org/apache/ambari/server/state/PropertyUpgradeBehavior.java",
          "ambari-server/src/main/java/org/apache/ambari/server/upgrade/AbstractUpgradeCatalog.java||ambari-server/src/main/java/org/apache/ambari/server/upgrade/AbstractUpgradeCatalog.java",
          "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog275.java||ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog275.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/state/PropertyUpgradeBehavior.java||ambari-server/src/main/java/org/apache/ambari/server/state/PropertyUpgradeBehavior.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/state/PropertyUpgradeBehavior.java -> ambari-server/src/main/java/org/apache/ambari/server/state/PropertyUpgradeBehavior.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "82:   public boolean isUpdate() {",
          "83:     return update;",
          "84:   }",
          "85: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "86:   @Override",
          "87:   public String toString() {",
          "88:     return \"PropertyUpgradeBehavior{\" +",
          "89:             \"add=\" + add +",
          "90:             \", delete=\" + delete +",
          "91:             \", update=\" + update +",
          "92:             '}';",
          "93:   }",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/upgrade/AbstractUpgradeCatalog.java||ambari-server/src/main/java/org/apache/ambari/server/upgrade/AbstractUpgradeCatalog.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/upgrade/AbstractUpgradeCatalog.java -> ambari-server/src/main/java/org/apache/ambari/server/upgrade/AbstractUpgradeCatalog.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "425:           for (PropertyInfo property : properties) {",
          "426:             String configType = ConfigHelper.fileNameToConfigType(property.getFilename());",
          "427:             PropertyUpgradeBehavior upgradeBehavior = property.getPropertyAmbariUpgradeBehavior();",
          "429:             if (property.isDeleted()) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "428:             LOG.debug(\"Property: {}, Config Type: {}\", property, configType);",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog275.java||ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog275.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog275.java -> ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog275.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: import com.google.inject.Inject;",
          "33: import com.google.inject.Injector;",
          "38: public class UpgradeCatalog275 extends AbstractUpgradeCatalog {",
          "40:   static final Gson GSON = new Gson();",
          "43:   @Inject",
          "44:   public UpgradeCatalog275(Injector injector) {",
          "45:     super(injector);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35: import org.slf4j.Logger;",
          "36: import org.slf4j.LoggerFactory;",
          "44:   private static final Logger LOG = LoggerFactory.getLogger(UpgradeCatalog275.class);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "75:   @Override",
          "76:   protected void executePreDMLUpdates() throws AmbariException, SQLException {",
          "77:     removeDfsHAInitial();",
          "78:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "81:     LOG.debug(\"UpgradeCatalog275 executing Pre-DML Updates.\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "86:   @Override",
          "87:   protected void executeDMLUpdates() throws AmbariException, SQLException {",
          "88:     addNewConfigurationsFromXml();",
          "89:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "93:     LOG.debug(\"UpgradeCatalog275 executing DML Updates.\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a54005372232047cfadc21b0fbe39625acfebb22",
      "candidate_info": {
        "commit_hash": "a54005372232047cfadc21b0fbe39625acfebb22",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/a54005372232047cfadc21b0fbe39625acfebb22",
        "files": [
          "ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/scripts/namenode.py"
        ],
        "message": "updating string command",
        "before_after_code_files": [
          "ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/scripts/namenode.py||ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/scripts/namenode.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/scripts/namenode.py||ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/scripts/namenode.py": [
          "File: ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/scripts/namenode.py -> ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/scripts/namenode.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "172:   def print_topology(self, env):",
          "173:     import params",
          "174:     env.set_params(params)",
          "176:             user=params.hdfs_user,",
          "177:             path=[params.hadoop_bin_dir],",
          "178:             logoutput=True",
          "",
          "[Removed Lines]",
          "175:     Execute(format(\"hdfs dfsadmin -printTopology\"),",
          "",
          "[Added Lines]",
          "175:     Execute(\"hdfs dfsadmin -printTopology\",",
          "",
          "---------------"
        ]
      }
    }
  ]
}