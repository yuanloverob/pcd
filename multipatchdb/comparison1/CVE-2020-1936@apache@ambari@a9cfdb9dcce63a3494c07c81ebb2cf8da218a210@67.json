{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2eb4c0d295888e62aabc292f32ec64b5208fba13",
      "candidate_info": {
        "commit_hash": "2eb4c0d295888e62aabc292f32ec64b5208fba13",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/2eb4c0d295888e62aabc292f32ec64b5208fba13",
        "files": [
          "ambari-web/app/controllers/wizard/step7_controller.js"
        ],
        "message": "AMBARI-24402. HBase Configuration page fails to load while UI Deploy when Ranger, KMS are not selected and service configurations are entered in a particular order",
        "before_after_code_files": [
          "ambari-web/app/controllers/wizard/step7_controller.js||ambari-web/app/controllers/wizard/step7_controller.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/controllers/wizard/step7_controller.js||ambari-web/app/controllers/wizard/step7_controller.js": [
          "File: ambari-web/app/controllers/wizard/step7_controller.js -> ambari-web/app/controllers/wizard/step7_controller.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "2108:     var recommendations = this.get('changedProperties.length');",
          "2109:     var validations = this.get('stepConfigs').mapProperty('configsWithErrors.length').reduce(Em.sum, 0);",
          "2110:     var configErrorList = this.get('configErrorList');",
          "2111:     this.set('issuesCounter', recommendations + validations + configErrorList.get('issues.length') + configErrorList.get('criticalIssues.length'));",
          "2112:     if (validations !== this.get('validationsCounter')) {",
          "2113:       this.ringBell();",
          "2114:     }",
          "2116:     this.set('validationsCounter', validations);",
          "2117:   }.observes('changedProperties.length', 'stepConfigs.@each.configsWithErrors.length', 'configErrorList.issues.length', 'configErrorList.criticalIssues.length'),",
          "",
          "[Removed Lines]",
          "2115:     this.set('hasErrors', Boolean(validations + configErrorList.get('criticalIssues.length')));",
          "",
          "[Added Lines]",
          "2111:     this.set('hasErrors', Boolean(validations + configErrorList.get('criticalIssues.length')));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4b6541b50f0161c6a4b823fb429a4db8aa8911e0",
      "candidate_info": {
        "commit_hash": "4b6541b50f0161c6a4b823fb429a4db8aa8911e0",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/4b6541b50f0161c6a4b823fb429a4db8aa8911e0",
        "files": [
          "ambari-common/src/main/python/resource_management/libraries/functions/constants.py",
          "ambari-metrics/ambari-metrics-assembly/pom.xml",
          "ambari-metrics/ambari-metrics-assembly/src/main/package/deb/control/preinst",
          "ambari-metrics/ambari-metrics-assembly/src/main/package/rpm/sink/preinstall.sh",
          "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java",
          "ambari-server/src/main/resources/common-services/ACCUMULO/1.6.1.2.2.0/package/scripts/params.py",
          "ambari-server/src/main/resources/common-services/ACCUMULO/1.6.1.2.2.0/package/templates/hadoop-metrics2-accumulo.properties.j2",
          "ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/scripts/hbase_service.py",
          "ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/templates/hadoop-metrics2-hbase.properties.j2",
          "ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/hbase_service.py",
          "ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/params_linux.py",
          "ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/templates/hadoop-metrics2-hbase.properties-GANGLIA-MASTER.j2",
          "ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/templates/hadoop-metrics2-hbase.properties-GANGLIA-RS.j2",
          "ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/scripts/utils.py",
          "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/hive_service.py",
          "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/params_linux.py",
          "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-hivemetastore.properties.j2",
          "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-hiveserver2.properties.j2",
          "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-llapdaemon.j2",
          "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-llaptaskscheduler.j2",
          "ambari-server/src/main/resources/common-services/YARN/2.1.0.2.0/package/scripts/service.py",
          "ambari-server/src/main/resources/stack-hooks/before-START/scripts/params.py",
          "ambari-server/src/main/resources/stack-hooks/before-START/templates/hadoop-metrics2.properties.j2",
          "ambari-server/src/main/resources/stacks/HDP/2.0.6/properties/stack_features.json",
          "ambari-server/src/main/resources/stacks/HDP/2.6/services/HDFS/configuration/hadoop-metrics2.properties.xml",
          "ambari-server/src/test/java/org/apache/ambari/server/upgrade/UpgradeCatalog270Test.java"
        ],
        "message": "AMBARI-24263. Restart services just before stack upgrade fails due to AMS package incompatibility errors, causing EU not to be started. (mpapirkovskyy) (#1707) (#1726)\n\n* AMBARI-24263. Restart services just before stack upgrade fails due to AMS package incompatibility errors, causing EU not to be started. (mpapirkovskyy)\n\n* AMBARI-24263. Scriptlets logic update. Nullable metrics template. (mpapirkovskyy)\n\n* AMBARI-24263. Conditional metrics templates. (mpapirkovskyy)\n\n* AMBARI-24263. Templates typo fix. (mpapirkovskyy)\n\n* AMBARI-24263. Fix template in config. (mpapirkovskyy)\n\n* AMBARI-24263. Fix IFS usage side effects. (mpapirkovskyy)\n\n* AMBARI-24263. Restart services just before stack upgrade fails due to AMS package incompatibility errors, causing EU not to be started. (mpapirkovskyy)",
        "before_after_code_files": [
          "ambari-common/src/main/python/resource_management/libraries/functions/constants.py||ambari-common/src/main/python/resource_management/libraries/functions/constants.py",
          "ambari-metrics/ambari-metrics-assembly/src/main/package/rpm/sink/preinstall.sh||ambari-metrics/ambari-metrics-assembly/src/main/package/rpm/sink/preinstall.sh",
          "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java||ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java",
          "ambari-server/src/main/resources/common-services/ACCUMULO/1.6.1.2.2.0/package/scripts/params.py||ambari-server/src/main/resources/common-services/ACCUMULO/1.6.1.2.2.0/package/scripts/params.py",
          "ambari-server/src/main/resources/common-services/ACCUMULO/1.6.1.2.2.0/package/templates/hadoop-metrics2-accumulo.properties.j2||ambari-server/src/main/resources/common-services/ACCUMULO/1.6.1.2.2.0/package/templates/hadoop-metrics2-accumulo.properties.j2",
          "ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/scripts/hbase_service.py||ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/scripts/hbase_service.py",
          "ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/templates/hadoop-metrics2-hbase.properties.j2||ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/templates/hadoop-metrics2-hbase.properties.j2",
          "ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/hbase_service.py||ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/hbase_service.py",
          "ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/params_linux.py||ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/params_linux.py",
          "ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/templates/hadoop-metrics2-hbase.properties-GANGLIA-MASTER.j2||ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/templates/hadoop-metrics2-hbase.properties-GANGLIA-MASTER.j2",
          "ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/templates/hadoop-metrics2-hbase.properties-GANGLIA-RS.j2||ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/templates/hadoop-metrics2-hbase.properties-GANGLIA-RS.j2",
          "ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/scripts/utils.py||ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/scripts/utils.py",
          "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/hive_service.py||ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/hive_service.py",
          "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/params_linux.py||ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/params_linux.py",
          "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-hivemetastore.properties.j2||ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-hivemetastore.properties.j2",
          "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-hiveserver2.properties.j2||ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-hiveserver2.properties.j2",
          "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-llapdaemon.j2||ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-llapdaemon.j2",
          "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-llaptaskscheduler.j2||ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-llaptaskscheduler.j2",
          "ambari-server/src/main/resources/common-services/YARN/2.1.0.2.0/package/scripts/service.py||ambari-server/src/main/resources/common-services/YARN/2.1.0.2.0/package/scripts/service.py",
          "ambari-server/src/main/resources/stack-hooks/before-START/scripts/params.py||ambari-server/src/main/resources/stack-hooks/before-START/scripts/params.py",
          "ambari-server/src/main/resources/stack-hooks/before-START/templates/hadoop-metrics2.properties.j2||ambari-server/src/main/resources/stack-hooks/before-START/templates/hadoop-metrics2.properties.j2",
          "ambari-server/src/test/java/org/apache/ambari/server/upgrade/UpgradeCatalog270Test.java||ambari-server/src/test/java/org/apache/ambari/server/upgrade/UpgradeCatalog270Test.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-common/src/main/python/resource_management/libraries/functions/constants.py||ambari-common/src/main/python/resource_management/libraries/functions/constants.py": [
          "File: ambari-common/src/main/python/resource_management/libraries/functions/constants.py -> ambari-common/src/main/python/resource_management/libraries/functions/constants.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "123:   KAFKA_EXTENDED_SASL_SUPPORT = \"kafka_extended_sasl_support\"",
          "124:   OOZIE_EXTJS_INCLUDED = \"oozie_extjs_included\"",
          "125:   MULTIPLE_ENV_SH_FILES_SUPPORT = \"multiple_env_sh_files_support\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "126:   AMS_LEGACY_HADOOP_SINK = \"ams_legacy_hadoop_sink\"",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-assembly/src/main/package/rpm/sink/preinstall.sh||ambari-metrics/ambari-metrics-assembly/src/main/package/rpm/sink/preinstall.sh": [
          "File: ambari-metrics/ambari-metrics-assembly/src/main/package/rpm/sink/preinstall.sh -> ambari-metrics/ambari-metrics-assembly/src/main/package/rpm/sink/preinstall.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #!/bin/bash",
          "2: # Licensed to the Apache Software Foundation (ASF) under one or more",
          "3: # contributor license agreements.  See the NOTICE file distributed with",
          "4: # this work for additional information regarding copyright ownership.",
          "5: # The ASF licenses this file to You under the Apache License, Version 2.0",
          "6: # (the \"License\"); you may not use this file except in compliance with",
          "7: # the License.  You may obtain a copy of the License at",
          "8: #",
          "9: #     http://www.apache.org/licenses/LICENSE-2.0",
          "10: #",
          "11: # Unless required by applicable law or agreed to in writing, software",
          "12: # distributed under the License is distributed on an \"AS IS\" BASIS,",
          "13: # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
          "14: # See the License for the specific language governing permissions and",
          "15: # limitations under the License",
          "17: JAR_FILES_LEGACY_FOLDER=\"/usr/lib/ambari-metrics-sink-legacy\"",
          "19: HADOOP_SINK_LINK=\"/usr/lib/ambari-metrics-hadoop-sink/ambari-metrics-hadoop-sink.jar\"",
          "21: HADOOP_LEGACY_LINK_NAME=\"/usr/lib/ambari-metrics-hadoop-sink/ambari-metrics-hadoop-sink-legacy.jar\"",
          "23: if [ -f ${HADOOP_SINK_LINK} ]",
          "24: then",
          "25:     old_jar=$(readlink -f ${HADOOP_SINK_LINK})",
          "26:     version_part=$(basename ${old_jar} | awk -F\"-\" '{print $7}')",
          "27:     IFS=. version=(${version_part})",
          "28:     unset IFS",
          "30:     if [[ ${version[0]} -le 2 && ${version[1]} -lt 7 ]] # backup only required on upgrade from version < 2.7",
          "31:     then",
          "32:         if [ ! -d \"$JAR_FILES_LEGACY_FOLDER\" ]",
          "33:         then",
          "34:             mkdir -p \"$JAR_FILES_LEGACY_FOLDER\"",
          "35:         fi",
          "36:         echo \"Backing up Ambari metrics hadoop sink jar ${old_jar} -> $JAR_FILES_LEGACY_FOLDER/\"",
          "37:         cp \"${old_jar}\" \"${JAR_FILES_LEGACY_FOLDER}/\"",
          "39:         HADOOP_SINK_LEGACY_JAR=\"$JAR_FILES_LEGACY_FOLDER/$(basename ${old_jar})\"",
          "40:         echo \"Creating symlink for backup jar $HADOOP_LEGACY_LINK_NAME -> $HADOOP_SINK_LEGACY_JAR\"",
          "41:         rm -f \"${HADOOP_LEGACY_LINK_NAME}\" ; ln -s \"${HADOOP_SINK_LEGACY_JAR}\" \"${HADOOP_LEGACY_LINK_NAME}\"",
          "42:     fi",
          "43: fi",
          "45: exit 0",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java||ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java -> ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1062:     updateSolrConfigurations();",
          "1063:     updateAmsConfigs();",
          "1064:     updateStormConfigs();",
          "1065:   }",
          "1067:   protected void renameAmbariInfra() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1065:     clearHadoopMetrics2Content();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1942:       }",
          "1943:     }",
          "1944:   }",
          "1945: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1947:   protected void clearHadoopMetrics2Content() throws AmbariException {",
          "1948:     AmbariManagementController ambariManagementController = injector.getInstance(AmbariManagementController.class);",
          "1949:     Clusters clusters = ambariManagementController.getClusters();",
          "1950:     if (clusters != null) {",
          "1951:       Map<String, Cluster> clusterMap = clusters.getClusters();",
          "1953:       if (clusterMap != null && !clusterMap.isEmpty()) {",
          "1954:         String hadoopMetrics2ContentProperty = \"content\";",
          "1955:         String hadoopMetrics2ContentValue = \"\";",
          "1956:         String hadoopMetrics2ConfigType = \"hadoop-metrics2.properties\";",
          "1957:         for (final Cluster cluster : clusterMap.values()) {",
          "1958:           Config config = cluster.getDesiredConfigByType(hadoopMetrics2ConfigType);",
          "1959:           if (config != null) {",
          "1960:             Map<String, String> hadoopMetrics2Configs = config.getProperties();",
          "1961:             if (hadoopMetrics2Configs.containsKey(hadoopMetrics2ContentProperty)) {",
          "1962:               LOG.info(\"Updating \" + hadoopMetrics2ContentProperty);",
          "1963:               Map<String, String> updateProperty = Collections.singletonMap(hadoopMetrics2ContentProperty, hadoopMetrics2ContentValue);",
          "1964:               updateConfigurationPropertiesForCluster(cluster, hadoopMetrics2ConfigType, updateProperty, Collections.EMPTY_SET,",
          "1965:                   true, false);",
          "1966:             }",
          "1967:           }",
          "1968:         }",
          "1969:       }",
          "1970:     }",
          "1971:   }",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/ACCUMULO/1.6.1.2.2.0/package/scripts/params.py||ambari-server/src/main/resources/common-services/ACCUMULO/1.6.1.2.2.0/package/scripts/params.py": [
          "File: ambari-server/src/main/resources/common-services/ACCUMULO/1.6.1.2.2.0/package/scripts/params.py -> ambari-server/src/main/resources/common-services/ACCUMULO/1.6.1.2.2.0/package/scripts/params.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "150:   metric_truststore_path= default(\"/configurations/ams-ssl-client/ssl.client.truststore.location\", \"\")",
          "151:   metric_truststore_type= default(\"/configurations/ams-ssl-client/ssl.client.truststore.type\", \"\")",
          "152:   metric_truststore_password= default(\"/configurations/ams-ssl-client/ssl.client.truststore.password\", \"\")",
          "153:   pass",
          "154: metrics_report_interval = default(\"/configurations/ams-site/timeline.metrics.sink.report.interval\", 60)",
          "155: metrics_collection_period = default(\"/configurations/ams-site/timeline.metrics.sink.collection.period\", 10)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "153:   metric_legacy_hadoop_sink = check_stack_feature(StackFeature.AMS_LEGACY_HADOOP_SINK, stack_version_formatted)",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/ACCUMULO/1.6.1.2.2.0/package/templates/hadoop-metrics2-accumulo.properties.j2||ambari-server/src/main/resources/common-services/ACCUMULO/1.6.1.2.2.0/package/templates/hadoop-metrics2-accumulo.properties.j2": [
          "File: ambari-server/src/main/resources/common-services/ACCUMULO/1.6.1.2.2.0/package/templates/hadoop-metrics2-accumulo.properties.j2 -> ambari-server/src/main/resources/common-services/ACCUMULO/1.6.1.2.2.0/package/templates/hadoop-metrics2-accumulo.properties.j2",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: {% if has_metric_collector %}",
          "29: accumulo.class=org.apache.hadoop.metrics2.sink.timeline.HadoopTimelineMetricsSink",
          "30: accumulo.period={{metrics_collection_period}}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: {% if metric_legacy_hadoop_sink %}",
          "29: {% else %}",
          "31: {% endif %}",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/scripts/hbase_service.py||ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/scripts/hbase_service.py": [
          "File: ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/scripts/hbase_service.py -> ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/scripts/hbase_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: from resource_management.core.resources.system import Execute, File",
          "22: from resource_management.libraries.functions.format import format",
          "25: def hbase_service(",
          "26:   name,",
          "",
          "[Removed Lines]",
          "23: from ambari_commons.repo_manager.repo_manager_helper import check_installed_metrics_hadoop_sink_version",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34:     no_op_test = format(\"ls {pid_file} >/dev/null 2>&1 && ps `cat {pid_file}` >/dev/null 2>&1\")",
          "36:     if action == 'start':",
          "40:       daemon_cmd = format(\"{cmd} start {role}\")",
          "",
          "[Removed Lines]",
          "37:       # Check ambari-metrics-hadoop-sink version is less than 2.7.0.0",
          "38:       check_installed_metrics_hadoop_sink_version()",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/templates/hadoop-metrics2-hbase.properties.j2||ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/templates/hadoop-metrics2-hbase.properties.j2": [
          "File: ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/templates/hadoop-metrics2-hbase.properties.j2 -> ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/templates/hadoop-metrics2-hbase.properties.j2",
          "--- Hunk 1 ---",
          "[Context before]",
          "60: # Switch off metrics generation on a per region basis",
          "",
          "[Removed Lines]",
          "62: hbase.*.source.filter.exclude=.*(Regions|Users|Tables).*",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/hbase_service.py||ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/hbase_service.py": [
          "File: ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/hbase_service.py -> ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/hbase_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: from resource_management.libraries.functions.show_logs import show_logs",
          "23: from resource_management.core.shell import as_sudo",
          "24: from resource_management.core.resources.system import Execute, File",
          "27: def hbase_service(",
          "28:   name,",
          "",
          "[Removed Lines]",
          "25: from ambari_commons.repo_manager.repo_manager_helper import check_installed_metrics_hadoop_sink_version",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37:     no_op_test = as_sudo([\"test\", \"-f\", pid_file]) + format(\" && ps -p `{pid_expression}` >/dev/null 2>&1\")",
          "39:     if action == 'start':",
          "43:       daemon_cmd = format(\"{cmd} start {role}\")",
          "",
          "[Removed Lines]",
          "40:       # Check ambari-metrics-hadoop-sink version is less than 2.7.0.0",
          "41:       check_installed_metrics_hadoop_sink_version()",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/params_linux.py||ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/params_linux.py": [
          "File: ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/params_linux.py -> ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/scripts/params_linux.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "186:   metric_truststore_path= default(\"/configurations/ams-ssl-client/ssl.client.truststore.location\", \"\")",
          "187:   metric_truststore_type= default(\"/configurations/ams-ssl-client/ssl.client.truststore.type\", \"\")",
          "188:   metric_truststore_password= default(\"/configurations/ams-ssl-client/ssl.client.truststore.password\", \"\")",
          "190:   pass",
          "191: metrics_report_interval = default(\"/configurations/ams-site/timeline.metrics.sink.report.interval\", 60)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "189:   metric_legacy_hadoop_sink = check_stack_feature(StackFeature.AMS_LEGACY_HADOOP_SINK, version_for_stack_feature_checks)",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/templates/hadoop-metrics2-hbase.properties-GANGLIA-MASTER.j2||ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/templates/hadoop-metrics2-hbase.properties-GANGLIA-MASTER.j2": [
          "File: ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/templates/hadoop-metrics2-hbase.properties-GANGLIA-MASTER.j2 -> ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/templates/hadoop-metrics2-hbase.properties-GANGLIA-MASTER.j2",
          "--- Hunk 1 ---",
          "[Context before]",
          "50: {% if has_metric_collector %}",
          "55: hbase.class=org.apache.hadoop.metrics2.sink.timeline.HadoopTimelineMetricsSink",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52: {% if metric_legacy_hadoop_sink %}",
          "54: {% else %}",
          "56: {% endif %}",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/templates/hadoop-metrics2-hbase.properties-GANGLIA-RS.j2||ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/templates/hadoop-metrics2-hbase.properties-GANGLIA-RS.j2": [
          "File: ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/templates/hadoop-metrics2-hbase.properties-GANGLIA-RS.j2 -> ambari-server/src/main/resources/common-services/HBASE/0.96.0.2.0/package/templates/hadoop-metrics2-hbase.properties-GANGLIA-RS.j2",
          "--- Hunk 1 ---",
          "[Context before]",
          "49: {% if has_metric_collector %}",
          "53: hbase.class=org.apache.hadoop.metrics2.sink.timeline.HadoopTimelineMetricsSink",
          "54: hbase.period={{metrics_collection_period}}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51: {% if metric_legacy_hadoop_sink %}",
          "53: {% else %}",
          "55: {% endif %}",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/scripts/utils.py||ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/scripts/utils.py": [
          "File: ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/scripts/utils.py -> ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/package/scripts/utils.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: from resource_management.libraries.script.script import Script",
          "38: from resource_management.libraries.functions.namenode_ha_utils import get_namenode_states",
          "39: from resource_management.libraries.functions.show_logs import show_logs",
          "41: from ambari_commons.inet_utils import ensure_ssl_using_protocol",
          "42: from zkfc_slave import ZkfcSlaveDefault",
          "",
          "[Removed Lines]",
          "40: from ambari_commons.repo_manager.repo_manager_helper import check_installed_metrics_hadoop_sink_version",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "270:     daemon_cmd = as_user(cmd, user)",
          "272:   if action == \"start\":",
          "276:     # remove pid file from dead process",
          "277:     File(pid_file, action=\"delete\", not_if=process_id_exists_command)",
          "",
          "[Removed Lines]",
          "273:     # Check ambari-metrics-hadoop-sink version is less than 2.7.0.0",
          "274:     check_installed_metrics_hadoop_sink_version()",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/hive_service.py||ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/hive_service.py": [
          "File: ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/hive_service.py -> ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/hive_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: from ambari_commons.os_family_impl import OsFamilyFuncImpl, OsFamilyImpl",
          "38: from ambari_commons import OSConst",
          "42: @OsFamilyFuncImpl(os_family=OSConst.WINSRV_FAMILY)",
          "",
          "[Removed Lines]",
          "39: from ambari_commons.repo_manager.repo_manager_helper import check_installed_metrics_hadoop_sink_version",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "73:   process_id_exists_command = format(\"ls {pid_file} >/dev/null 2>&1 && ps -p {pid} >/dev/null 2>&1\")",
          "75:   if action == 'start':",
          "79:     if name == 'hiveserver2':",
          "80:       check_fs_root(params.hive_server_conf_dir, params.execute_path)",
          "",
          "[Removed Lines]",
          "76:     # Check ambari-metrics-hadoop-sink version is less than 2.7.0.0",
          "77:     check_installed_metrics_hadoop_sink_version()",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/params_linux.py||ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/params_linux.py": [
          "File: ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/params_linux.py -> ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/params_linux.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "574:   metric_truststore_path= default(\"/configurations/ams-ssl-client/ssl.client.truststore.location\", \"\")",
          "575:   metric_truststore_type= default(\"/configurations/ams-ssl-client/ssl.client.truststore.type\", \"\")",
          "576:   metric_truststore_password= default(\"/configurations/ams-ssl-client/ssl.client.truststore.password\", \"\")",
          "578: metrics_report_interval = default(\"/configurations/ams-site/timeline.metrics.sink.report.interval\", 60)",
          "579: metrics_collection_period = default(\"/configurations/ams-site/timeline.metrics.sink.collection.period\", 10)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "577:   metric_legacy_hadoop_sink = check_stack_feature(StackFeature.AMS_LEGACY_HADOOP_SINK, version_for_stack_feature_checks)",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-hivemetastore.properties.j2||ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-hivemetastore.properties.j2": [
          "File: ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-hivemetastore.properties.j2 -> ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-hivemetastore.properties.j2",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: {% if has_metric_collector %}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:   {% if metric_legacy_hadoop_sink %}",
          "42:   {% else %}",
          "44:   {% endif %}",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-hiveserver2.properties.j2||ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-hiveserver2.properties.j2": [
          "File: ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-hiveserver2.properties.j2 -> ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-hiveserver2.properties.j2",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: {% if has_metric_collector %}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:   {% if metric_legacy_hadoop_sink %}",
          "42:   {% else %}",
          "44:   {% endif %}",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-llapdaemon.j2||ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-llapdaemon.j2": [
          "File: ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-llapdaemon.j2 -> ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-llapdaemon.j2",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: {% if has_metric_collector %}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:   {% if metric_legacy_hadoop_sink %}",
          "42:   {% else %}",
          "44:   {% endif %}",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-llaptaskscheduler.j2||ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-llaptaskscheduler.j2": [
          "File: ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-llaptaskscheduler.j2 -> ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/hadoop-metrics2-llaptaskscheduler.j2",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: {% if has_metric_collector %}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:   {% if metric_legacy_hadoop_sink %}",
          "42:   {% else %}",
          "44:   {% endif %}",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/YARN/2.1.0.2.0/package/scripts/service.py||ambari-server/src/main/resources/common-services/YARN/2.1.0.2.0/package/scripts/service.py": [
          "File: ambari-server/src/main/resources/common-services/YARN/2.1.0.2.0/package/scripts/service.py -> ambari-server/src/main/resources/common-services/YARN/2.1.0.2.0/package/scripts/service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: from ambari_commons.os_family_impl import OsFamilyFuncImpl, OsFamilyImpl",
          "23: from ambari_commons import OSConst",
          "25: from resource_management.core.shell import as_user, as_sudo",
          "26: from resource_management.libraries.functions.show_logs import show_logs",
          "27: from resource_management.libraries.functions.format import format",
          "",
          "[Removed Lines]",
          "24: from ambari_commons.repo_manager.repo_manager_helper import check_installed_metrics_hadoop_sink_version",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "65:   cmd = format(\"export HADOOP_LIBEXEC_DIR={hadoop_libexec_dir} && {daemon} --config {hadoop_conf_dir}\")",
          "67:   if action == 'start':",
          "71:     daemon_cmd = format(\"{ulimit_cmd} {cmd} start {componentName}\")",
          "72:     check_process = as_sudo([\"test\", \"-f\", pid_file]) + \" && \" + as_sudo([\"pgrep\", \"-F\", pid_file])",
          "",
          "[Removed Lines]",
          "68:     # Check ambari-metrics-hadoop-sink version is less than 2.7.0.0",
          "69:     check_installed_metrics_hadoop_sink_version()",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/stack-hooks/before-START/scripts/params.py||ambari-server/src/main/resources/stack-hooks/before-START/scripts/params.py": [
          "File: ambari-server/src/main/resources/stack-hooks/before-START/scripts/params.py -> ambari-server/src/main/resources/stack-hooks/before-START/scripts/params.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "162:   metric_truststore_path= default(\"/configurations/ams-ssl-client/ssl.client.truststore.location\", \"\")",
          "163:   metric_truststore_type= default(\"/configurations/ams-ssl-client/ssl.client.truststore.type\", \"\")",
          "164:   metric_truststore_password= default(\"/configurations/ams-ssl-client/ssl.client.truststore.password\", \"\")",
          "166:   pass",
          "167: metrics_report_interval = default(\"/configurations/ams-site/timeline.metrics.sink.report.interval\", 60)",
          "168: metrics_collection_period = default(\"/configurations/ams-site/timeline.metrics.sink.collection.period\", 10)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "165:   metric_legacy_hadoop_sink = check_stack_feature(StackFeature.AMS_LEGACY_HADOOP_SINK, version_for_stack_feature_checks)",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/stack-hooks/before-START/templates/hadoop-metrics2.properties.j2||ambari-server/src/main/resources/stack-hooks/before-START/templates/hadoop-metrics2.properties.j2": [
          "File: ambari-server/src/main/resources/stack-hooks/before-START/templates/hadoop-metrics2.properties.j2 -> ambari-server/src/main/resources/stack-hooks/before-START/templates/hadoop-metrics2.properties.j2",
          "--- Hunk 1 ---",
          "[Context before]",
          "67: {% if has_metric_collector %}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70: {% if metric_legacy_hadoop_sink %}",
          "72: {% else %}",
          "74: {% endif %}",
          "",
          "---------------"
        ],
        "ambari-server/src/test/java/org/apache/ambari/server/upgrade/UpgradeCatalog270Test.java||ambari-server/src/test/java/org/apache/ambari/server/upgrade/UpgradeCatalog270Test.java": [
          "File: ambari-server/src/test/java/org/apache/ambari/server/upgrade/UpgradeCatalog270Test.java -> ambari-server/src/test/java/org/apache/ambari/server/upgrade/UpgradeCatalog270Test.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "330:     Method updateSolrConfigurations = UpgradeCatalog270.class.getDeclaredMethod(\"updateSolrConfigurations\");",
          "331:     Method updateAmsConfigurations = UpgradeCatalog270.class.getDeclaredMethod(\"updateAmsConfigs\");",
          "332:     Method updateStormConfigurations = UpgradeCatalog270.class.getDeclaredMethod(\"updateStormConfigs\");",
          "334:     UpgradeCatalog270 upgradeCatalog270 = createMockBuilder(UpgradeCatalog270.class)",
          "335:         .addMockedMethod(showHcatDeletedUserMessage)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "333:     Method clearHadoopMetrics2Content = UpgradeCatalog270.class.getDeclaredMethod(\"clearHadoopMetrics2Content\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "346:         .addMockedMethod(updateSolrConfigurations)",
          "347:         .addMockedMethod(updateAmsConfigurations)",
          "348:         .addMockedMethod(updateStormConfigurations)",
          "349:         .createMock();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "350:         .addMockedMethod(clearHadoopMetrics2Content)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "389:     upgradeCatalog270.updateStormConfigs();",
          "390:     expectLastCall().once();",
          "392:     replay(upgradeCatalog270);",
          "394:     upgradeCatalog270.executeDMLUpdates();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "394:     upgradeCatalog270.clearHadoopMetrics2Content();",
          "395:     expectLastCall().once();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1664:     assertTrue(Maps.difference(newStormProperties, updatedProperties).areEqual());",
          "1666:   }",
          "1667: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1673:   @Test",
          "1674:   public void testClearHadoopMetrics2Content() throws Exception {",
          "1676:     Map<String, String> oldContentProperty = new HashMap<String, String>() {",
          "1677:       {",
          "1678:         put(\"content\", \"# Licensed to the Apache Software Foundation (ASF) under one or more...\");",
          "1679:       }",
          "1680:     };",
          "1681:     Map<String, String> newContentProperty = new HashMap<String, String>() {",
          "1682:       {",
          "1683:         put(\"content\", \"\");",
          "1684:       }",
          "1685:     };",
          "1687:     EasyMockSupport easyMockSupport = new EasyMockSupport();",
          "1689:     Clusters clusters = easyMockSupport.createNiceMock(Clusters.class);",
          "1690:     final Cluster cluster = easyMockSupport.createNiceMock(Cluster.class);",
          "1691:     Config mockHadoopMetrics2Properties = easyMockSupport.createNiceMock(Config.class);",
          "1693:     expect(clusters.getClusters()).andReturn(new HashMap<String, Cluster>() {{",
          "1694:       put(\"normal\", cluster);",
          "1695:     }}).once();",
          "1696:     expect(cluster.getDesiredConfigByType(\"hadoop-metrics2.properties\")).andReturn(mockHadoopMetrics2Properties).atLeastOnce();",
          "1697:     expect(mockHadoopMetrics2Properties.getProperties()).andReturn(oldContentProperty).anyTimes();",
          "1699:     Injector injector = easyMockSupport.createNiceMock(Injector.class);",
          "1701:     replay(injector, clusters, mockHadoopMetrics2Properties, cluster);",
          "1703:     AmbariManagementControllerImpl controller = createMockBuilder(AmbariManagementControllerImpl.class)",
          "1704:         .addMockedMethod(\"getClusters\", new Class[] { })",
          "1705:         .addMockedMethod(\"createConfig\")",
          "1706:         .withConstructor(createNiceMock(ActionManager.class), clusters, injector)",
          "1707:         .createNiceMock();",
          "1709:     Injector injector2 = easyMockSupport.createNiceMock(Injector.class);",
          "1710:     Capture<Map> propertiesCapture = EasyMock.newCapture();",
          "1712:     expect(injector2.getInstance(AmbariManagementController.class)).andReturn(controller).anyTimes();",
          "1713:     expect(controller.getClusters()).andReturn(clusters).anyTimes();",
          "1714:     expect(controller.createConfig(anyObject(Cluster.class), anyObject(StackId.class), anyString(), capture(propertiesCapture), anyString(),",
          "1715:         anyObject(Map.class))).andReturn(createNiceMock(Config.class)).once();",
          "1717:     replay(controller, injector2);",
          "1718:     new UpgradeCatalog270(injector2).clearHadoopMetrics2Content();",
          "1719:     easyMockSupport.verifyAll();",
          "1721:     Map<String, String> updatedProperties = propertiesCapture.getValue();",
          "1722:     assertTrue(Maps.difference(newContentProperty, updatedProperties).areEqual());",
          "1724:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9303409f70be58eeb9cb53b71a60c8c73b3c35a6",
      "candidate_info": {
        "commit_hash": "9303409f70be58eeb9cb53b71a60c8c73b3c35a6",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/9303409f70be58eeb9cb53b71a60c8c73b3c35a6",
        "files": [
          "ambari-web/app/utils/ajax/ajax.js",
          "ambari-web/app/views/main/host/details/host_component_views/regionserver_view.js",
          "ambari-web/test/views/main/host/details/host_component_views/regionserver_view_test.js"
        ],
        "message": "AMBARI-24260 Ambari shows success when HBase Decommission/Recommission operations fail. (ababiichuk)",
        "before_after_code_files": [
          "ambari-web/app/utils/ajax/ajax.js||ambari-web/app/utils/ajax/ajax.js",
          "ambari-web/app/views/main/host/details/host_component_views/regionserver_view.js||ambari-web/app/views/main/host/details/host_component_views/regionserver_view.js",
          "ambari-web/test/views/main/host/details/host_component_views/regionserver_view_test.js||ambari-web/test/views/main/host/details/host_component_views/regionserver_view_test.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/utils/ajax/ajax.js||ambari-web/app/utils/ajax/ajax.js": [
          "File: ambari-web/app/utils/ajax/ajax.js -> ambari-web/app/utils/ajax/ajax.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "988:     'real': '/clusters/{clusterName}/host_components?HostRoles/component_name=NAMENODE&HostRoles/host_name.in({hostNames})&fields=metrics/dfs/namenode',",
          "989:     'mock': '/data/hosts/HDP2/decommission_state.json'",
          "990:   },",
          "991:   'host.region_servers.in_inservice': {",
          "992:     'real': '/clusters/{clusterName}/host_components?HostRoles/component_name=HBASE_REGIONSERVER&HostRoles/desired_admin_state=INSERVICE&fields=HostRoles/host_name&minimal_response=true',",
          "993:     'mock': ''",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "991:   'host.host_component.decommission_status_regionserver': {",
          "992:     'real': '/clusters/{clusterName}/host_components?HostRoles/component_name=HBASE_MASTER&HostRoles/host_name={hostName}&fields=metrics/hbase/master/liveRegionServersHosts,metrics/hbase/master/deadRegionServersHosts&minimal_response=true'",
          "993:   },",
          "",
          "---------------"
        ],
        "ambari-web/app/views/main/host/details/host_component_views/regionserver_view.js||ambari-web/app/views/main/host/details/host_component_views/regionserver_view.js": [
          "File: ambari-web/app/views/main/host/details/host_component_views/regionserver_view.js -> ambari-web/app/views/main/host/details/host_component_views/regionserver_view.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:   componentForCheckDecommission: 'HBASE_MASTER',",
          "25:   setDesiredAdminState: function (desiredAdminState) {",
          "26:     switch (desiredAdminState) {",
          "28:         this.setStatusAs(desiredAdminState);",
          "29:         break;",
          "32:         break;",
          "33:     }",
          "34:   }",
          "",
          "[Removed Lines]",
          "27:       case \"INSERVICE\":",
          "30:       case \"DECOMMISSIONED\":",
          "31:         this.setStatusAs(\"RS_DECOMMISSIONED\");",
          "",
          "[Added Lines]",
          "26:     this.getRSDecommissionStatus(desiredAdminState);",
          "27:   },",
          "29:   getRSDecommissionStatus: function (desiredAdminState) {",
          "30:     const hostName = App.HBaseService.find('HBASE').get('master.hostName');",
          "31:     App.ajax.send({",
          "32:       name: 'host.host_component.decommission_status_regionserver',",
          "33:       sender: this,",
          "34:       data: {",
          "35:         hostName,",
          "36:         desiredAdminState",
          "37:       },",
          "38:       success: 'getRSDecommissionStatusSuccessCallback',",
          "39:       error: 'getRSDecommissionStatusErrorCallback'",
          "40:     });",
          "41:   },",
          "43:   getRSDecommissionStatusSuccessCallback: function (data, opt, params) {",
          "44:     const {desiredAdminState} = params,",
          "45:       hostName = this.get('content.hostName');",
          "46:     if (data) {",
          "47:       const liveRSHostsMetrics = Em.get(data, 'items.0.metrics.hbase.master.liveRegionServersHosts'),",
          "48:         deadRSHostsMetrics = Em.get(data, 'items.0.metrics.hbase.master.deadRegionServersHosts'),",
          "49:         liveRSHosts = this.parseRegionServersHosts(liveRSHostsMetrics),",
          "50:         deadRSHosts = this.parseRegionServersHosts(deadRSHostsMetrics),",
          "51:         isLiveRS = liveRSHosts.contains(hostName),",
          "52:         isDeadRS = deadRSHosts.contains(hostName),",
          "53:         isInServiceDesired = desiredAdminState === 'INSERVICE',",
          "54:         isDecommissionedDesired = desiredAdminState === 'DECOMMISSIONED';",
          "55:       if ((liveRSHosts.length + deadRSHosts.length === 0) || (isInServiceDesired && isLiveRS) || (isDecommissionedDesired && isDeadRS)) {",
          "56:         this.setDesiredAdminStateDefault(desiredAdminState);",
          "57:       } else if (isInServiceDesired) {",
          "58:         this.setStatusAs('RS_DECOMMISSIONED');",
          "59:       } else if (isDecommissionedDesired) {",
          "60:         this.setStatusAs('INSERVICE');",
          "61:       }",
          "62:     } else {",
          "63:       this.setDesiredAdminStateDefault(desiredAdminState);",
          "64:     }",
          "65:   },",
          "67:   getRSDecommissionStatusErrorCallback: function (request, ajaxOptions, error, opt, params) {",
          "68:     this.setDesiredAdminStateDefault(params.desiredAdminState);",
          "69:   },",
          "71:   parseRegionServersHosts: function (str) {",
          "72:     const items = str ? str.split(';') : [],",
          "73:       hosts = items.map(item => item.split(',')[0]);",
          "74:     return hosts;",
          "75:   },",
          "77:   setDesiredAdminStateDefault: function (desiredAdminState) {",
          "79:       case 'INSERVICE':",
          "82:       case 'DECOMMISSIONED':",
          "83:         this.setStatusAs('RS_DECOMMISSIONED');",
          "",
          "---------------"
        ],
        "ambari-web/test/views/main/host/details/host_component_views/regionserver_view_test.js||ambari-web/test/views/main/host/details/host_component_views/regionserver_view_test.js": [
          "File: ambari-web/test/views/main/host/details/host_component_views/regionserver_view_test.js -> ambari-web/test/views/main/host/details/host_component_views/regionserver_view_test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: require('views/main/host/details/host_component_views/regionserver_view');",
          "22: describe('App.RegionServerComponentView', function () {",
          "26:     beforeEach(function () {",
          "27:       sinon.stub(view, 'setStatusAs', Em.K);",
          "28:     });",
          "29:     afterEach(function () {",
          "30:       view.setStatusAs.restore();",
          "31:     });",
          "34:       expect(view.setStatusAs.calledWith('INSERVICE')).to.be.true;",
          "35:     });",
          "38:       expect(view.setStatusAs.calledWith('RS_DECOMMISSIONED')).to.be.true;",
          "39:     });",
          "40:   });",
          "41: });",
          "",
          "[Removed Lines]",
          "23:   var view = App.RegionServerComponentView.create();",
          "25:   describe(\"#setDesiredAdminState()\", function () {",
          "32:     it(\"INSERVICE state)\", function () {",
          "33:       view.setDesiredAdminState('INSERVICE');",
          "36:     it(\"DECOMMISSIONED state)\", function () {",
          "37:       view.setDesiredAdminState('DECOMMISSIONED');",
          "",
          "[Added Lines]",
          "23:   var view;",
          "25:   beforeEach(function () {",
          "26:     view = App.RegionServerComponentView.create();",
          "27:   });",
          "29:   describe('#setDesiredAdminStateDefault()', function () {",
          "36:     it('INSERVICE state', function () {",
          "37:       view.setDesiredAdminStateDefault('INSERVICE');",
          "40:     it('DECOMMISSIONED state', function () {",
          "41:       view.setDesiredAdminStateDefault('DECOMMISSIONED');",
          "46:   describe('#parseRegionServersHosts()', function () {",
          "47:     var cases = [",
          "48:       {",
          "49:         input: undefined,",
          "50:         result: [],",
          "51:         title: 'undefined input'",
          "52:       },",
          "53:       {",
          "54:         input: '',",
          "55:         result: [],",
          "56:         title: 'empty string'",
          "57:       },",
          "58:       {",
          "59:         input: 'host,1,2',",
          "60:         result: ['host'],",
          "61:         title: 'single host string'",
          "62:       },",
          "63:       {",
          "64:         input: 'host1,1,2;host2,3,4',",
          "65:         result: ['host1', 'host2'],",
          "66:         title: 'multiple hosts string'",
          "67:       }",
          "68:     ];",
          "70:     cases.forEach(function (test) {",
          "71:       it(test.title, function () {",
          "72:         expect(view.parseRegionServersHosts(test.input)).to.eql(test.result);",
          "73:       });",
          "74:     });",
          "75:   });",
          "77:   describe('#getRSDecommissionStatusSuccessCallback()', function () {",
          "78:     var cases = [",
          "79:       {",
          "80:         data: null,",
          "81:         desiredAdminState: 'INSERVICE',",
          "82:         resultingState: 'INSERVICE',",
          "83:         title: 'no data, INSERVICE desired state'",
          "84:       },",
          "85:       {",
          "86:         data: null,",
          "87:         desiredAdminState: 'DECOMMISSIONED',",
          "88:         resultingState: 'RS_DECOMMISSIONED',",
          "89:         title: 'no data, DECOMMISSIONED desired state'",
          "90:       },",
          "91:       {",
          "92:         data: {},",
          "93:         desiredAdminState: 'INSERVICE',",
          "94:         resultingState: 'INSERVICE',",
          "95:         title: 'empty data, INSERVICE desired state'",
          "96:       },",
          "97:       {",
          "98:         data: {},",
          "99:         desiredAdminState: 'DECOMMISSIONED',",
          "100:         resultingState: 'RS_DECOMMISSIONED',",
          "101:         title: 'empty data, DECOMMISSIONED desired state'",
          "102:       },",
          "103:       {",
          "104:         data: {",
          "105:           items: []",
          "106:         },",
          "107:         desiredAdminState: 'INSERVICE',",
          "108:         resultingState: 'INSERVICE',",
          "109:         title: 'empty items array, INSERVICE desired state'",
          "110:       },",
          "111:       {",
          "112:         data: {",
          "113:           items: []",
          "114:         },",
          "115:         desiredAdminState: 'DECOMMISSIONED',",
          "116:         resultingState: 'RS_DECOMMISSIONED',",
          "117:         title: 'empty items array, DECOMMISSIONED desired state'",
          "118:       },",
          "119:       {",
          "120:         data: {",
          "121:           items: [",
          "122:             {",
          "123:               metrics: {",
          "124:                 hbase: {",
          "125:                   master: {}",
          "126:                 }",
          "127:               }",
          "128:             }",
          "129:           ]",
          "130:         },",
          "131:         desiredAdminState: 'INSERVICE',",
          "132:         resultingState: 'INSERVICE',",
          "133:         title: 'no live and dead RS hosts provided, INSERVICE desired state'",
          "134:       },",
          "135:       {",
          "136:         data: {",
          "137:           items: [",
          "138:             {",
          "139:               metrics: {",
          "140:                 hbase: {",
          "141:                   master: {}",
          "142:                 }",
          "143:               }",
          "144:             }",
          "145:           ]",
          "146:         },",
          "147:         desiredAdminState: 'DECOMMISSIONED',",
          "148:         resultingState: 'RS_DECOMMISSIONED',",
          "149:         title: 'no live and dead RS hosts provided, DECOMMISSIONED desired state'",
          "150:       },",
          "151:       {",
          "152:         data: {",
          "153:           items: [",
          "154:             {",
          "155:               metrics: {",
          "156:                 hbase: {",
          "157:                   master: {",
          "158:                     liveRegionServersHosts: 'h0,1,2;h1,3,4'",
          "159:                   }",
          "160:                 }",
          "161:               }",
          "162:             }",
          "163:           ]",
          "164:         },",
          "165:         desiredAdminState: 'INSERVICE',",
          "166:         resultingState: 'INSERVICE',",
          "167:         title: 'RS is live, INSERVICE desired state'",
          "168:       },",
          "169:       {",
          "170:         data: {",
          "171:           items: [",
          "172:             {",
          "173:               metrics: {",
          "174:                 hbase: {",
          "175:                   master: {",
          "176:                     liveRegionServersHosts: 'h0,1,2;h1,3,4'",
          "177:                   }",
          "178:                 }",
          "179:               }",
          "180:             }",
          "181:           ]",
          "182:         },",
          "183:         desiredAdminState: 'DECOMMISSIONED',",
          "184:         resultingState: 'INSERVICE',",
          "185:         title: 'RS is live, DECOMMISSIONED desired state'",
          "186:       },",
          "187:       {",
          "188:         data: {",
          "189:           items: [",
          "190:             {",
          "191:               metrics: {",
          "192:                 hbase: {",
          "193:                   master: {",
          "194:                     deadRegionServersHosts: 'h0,1,2;h1,3,4'",
          "195:                   }",
          "196:                 }",
          "197:               }",
          "198:             }",
          "199:           ]",
          "200:         },",
          "201:         desiredAdminState: 'INSERVICE',",
          "202:         resultingState: 'RS_DECOMMISSIONED',",
          "203:         title: 'RS is dead, INSERVICE desired state'",
          "204:       },",
          "205:       {",
          "206:         data: {",
          "207:           items: [",
          "208:             {",
          "209:               metrics: {",
          "210:                 hbase: {",
          "211:                   master: {",
          "212:                     deadRegionServersHosts: 'h0,1,2;h1,3,4'",
          "213:                   }",
          "214:                 }",
          "215:               }",
          "216:             }",
          "217:           ]",
          "218:         },",
          "219:         desiredAdminState: 'DECOMMISSIONED',",
          "220:         resultingState: 'RS_DECOMMISSIONED',",
          "221:         title: 'RS is dead, DECOMMISSIONED desired state'",
          "222:       }",
          "223:     ];",
          "225:     beforeEach(function () {",
          "226:       sinon.stub(view, 'setStatusAs', Em.K);",
          "227:       sinon.stub(view, 'startBlinking', Em.K);",
          "228:       view.set('content', {",
          "229:         hostName: 'h0'",
          "230:       });",
          "231:     });",
          "233:     afterEach(function () {",
          "234:       view.setStatusAs.restore();",
          "235:       view.startBlinking.restore();",
          "236:     });",
          "238:     cases.forEach(function (test) {",
          "239:       it(test.title, function () {",
          "240:         view.getRSDecommissionStatusSuccessCallback(test.data, null, {",
          "241:           desiredAdminState: test.desiredAdminState",
          "242:         });",
          "243:         expect(view.setStatusAs.calledWith(test.resultingState)).to.be.true;",
          "244:       });",
          "245:     });",
          "246:   });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "09a1ef80047c99b2c59926530a0d78237c552061",
      "candidate_info": {
        "commit_hash": "09a1ef80047c99b2c59926530a0d78237c552061",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/09a1ef80047c99b2c59926530a0d78237c552061",
        "files": [
          "ambari-common/src/main/python/ambari_commons/repo_manager/apt_manager.py"
        ],
        "message": "AMBARI-24563. global name 'VERIFY_DEPENDENCY_CMD' is not defined' (amagyar) (#2202) (#2504)",
        "before_after_code_files": [
          "ambari-common/src/main/python/ambari_commons/repo_manager/apt_manager.py||ambari-common/src/main/python/ambari_commons/repo_manager/apt_manager.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-common/src/main/python/ambari_commons/repo_manager/apt_manager.py||ambari-common/src/main/python/ambari_commons/repo_manager/apt_manager.py": [
          "File: ambari-common/src/main/python/ambari_commons/repo_manager/apt_manager.py -> ambari-common/src/main/python/ambari_commons/repo_manager/apt_manager.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "215:     pattern = re.compile(\"has missing dependency|E:\")",
          "217:     if r.code or (r.out and pattern.search(r.out)):",
          "219:       Logger.error(err_msg)",
          "220:       return False",
          "",
          "[Removed Lines]",
          "218:       err_msg = Logger.filter_text(\"Failed to verify package dependencies. Execution of '%s' returned %s. %s\" % (VERIFY_DEPENDENCY_CMD, code, out))",
          "",
          "[Added Lines]",
          "218:       err_msg = Logger.filter_text(\"Failed to verify package dependencies. Execution of '%s' returned %s. %s\" % (self.properties.verify_dependency_cmd, r.code, r.out))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ddcd748bee64427e5ef4110650a15bafb3a3c1e0",
      "candidate_info": {
        "commit_hash": "ddcd748bee64427e5ef4110650a15bafb3a3c1e0",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/ddcd748bee64427e5ef4110650a15bafb3a3c1e0",
        "files": [
          "ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsCreateCtrl.js",
          "ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsEditCtrl.js",
          "ambari-web/app/config.js",
          "ambari-web/app/views/wizard/step1_view.js"
        ],
        "message": "AMBARI-25419. Add option to disable URL credential auto-update behaviour",
        "before_after_code_files": [
          "ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsCreateCtrl.js||ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsCreateCtrl.js",
          "ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsEditCtrl.js||ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsEditCtrl.js",
          "ambari-web/app/config.js||ambari-web/app/config.js",
          "ambari-web/app/views/wizard/step1_view.js||ambari-web/app/views/wizard/step1_view.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsCreateCtrl.js||ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsCreateCtrl.js": [
          "File: ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsCreateCtrl.js -> ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsCreateCtrl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: 'use strict';",
          "20: angular.module('ambariAdminConsole')",
          "23:   var $t = $translate.instant;",
          "24:   $scope.constants = {",
          "25:     os: $t('versions.os')",
          "",
          "[Removed Lines]",
          "21: .controller('StackVersionsCreateCtrl', ['$scope', 'Stack', 'Utility', '$routeParams', '$location', '$timeout' ,'Alert', '$translate', 'Cluster', 'AddRepositoryModal', 'AddVersionModal', 'ConfirmationModal',",
          "22:     function($scope, Stack, Utility, $routeParams, $location, $timeout, Alert, $translate, Cluster, AddRepositoryModal, AddVersionModal, ConfirmationModal) {",
          "",
          "[Added Lines]",
          "21: .controller('StackVersionsCreateCtrl', ['$scope', '$rootScope', 'Stack', 'Utility', '$routeParams', '$location', '$timeout' ,'Alert', '$translate', 'Cluster', 'AddRepositoryModal', 'AddVersionModal', 'ConfirmationModal',",
          "22:     function($scope, $rootScope, Stack, Utility, $routeParams, $location, $timeout, Alert, $translate, Cluster, AddRepositoryModal, AddVersionModal, ConfirmationModal) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "448:   };",
          "450:   $scope.setUsernameAndPasswordsIfNeeded = function(repo) {",
          "451:     try {",
          "452:       var urlObject = new URL(repo.Repositories.base_url);",
          "453:       var username = urlObject.username;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "451:     if ($rootScope.supports.disableCredentialsAutocompleteForRepoUrls) {",
          "452:       return;",
          "453:     }",
          "",
          "---------------"
        ],
        "ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsEditCtrl.js||ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsEditCtrl.js": [
          "File: ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsEditCtrl.js -> ambari-admin/src/main/resources/ui/admin-web/app/scripts/controllers/stackVersions/StackVersionsEditCtrl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: 'use strict';",
          "20: angular.module('ambariAdminConsole')",
          "22:   var $t = $translate.instant;",
          "23:   $scope.constants = {",
          "24:     os: $t('versions.os')",
          "",
          "[Removed Lines]",
          "21: .controller('StackVersionsEditCtrl', ['$scope', '$location', 'Cluster', 'Stack', '$routeParams', 'ConfirmationModal', 'Alert', '$translate', 'AddRepositoryModal', function($scope, $location, Cluster, Stack, $routeParams, ConfirmationModal, Alert, $translate, AddRepositoryModal) {",
          "",
          "[Added Lines]",
          "21: .controller('StackVersionsEditCtrl', ['$scope', '$rootScope', '$location', 'Cluster', 'Stack', '$routeParams', 'ConfirmationModal', 'Alert', '$translate', 'AddRepositoryModal', function($scope, $rootScope, $location, Cluster, Stack, $routeParams, ConfirmationModal, Alert, $translate, AddRepositoryModal) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "323:   };",
          "325:   $scope.onRepoUrlChange = function(repo) {",
          "326:     try {",
          "327:       var urlObject = new URL(repo.Repositories.base_url);",
          "328:       var username = urlObject.username;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "326:     if ($rootScope.supports.disableCredentialsAutocompleteForRepoUrls) {",
          "327:       return;",
          "328:     }",
          "",
          "---------------"
        ],
        "ambari-web/app/config.js||ambari-web/app/config.js": [
          "File: ambari-web/app/config.js -> ambari-web/app/config.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "90:   manageJournalNode: true,",
          "91:   enableToggleKerberos: true,",
          "92:   enableAddDeleteServices: true,",
          "94: };",
          "96: if (App.enableExperimental) {",
          "",
          "[Removed Lines]",
          "93:   regenerateKeytabsOnSingleHost: false",
          "",
          "[Added Lines]",
          "93:   regenerateKeytabsOnSingleHost: false,",
          "94:   disableCredentialsAutocompleteForRepoUrls: false",
          "",
          "---------------"
        ],
        "ambari-web/app/views/wizard/step1_view.js||ambari-web/app/views/wizard/step1_view.js": [
          "File: ambari-web/app/views/wizard/step1_view.js -> ambari-web/app/views/wizard/step1_view.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "324:         });",
          "325:       }",
          "326:     }, this);",
          "328:       try {",
          "329:         var urlObject = new URL(changedRepo.get('baseUrl'));",
          "330:       } catch (e) {",
          "",
          "[Removed Lines]",
          "327:     if (changedRepo) {",
          "",
          "[Added Lines]",
          "327:     if (changedRepo && !App.supports.disableCredentialsAutocompleteForRepoUrls) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}