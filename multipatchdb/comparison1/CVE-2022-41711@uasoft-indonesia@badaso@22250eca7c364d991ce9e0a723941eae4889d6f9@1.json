{
  "cve_id": "CVE-2022-41711",
  "cve_desc": "Badaso version 2.6.0 allows an unauthenticated remote attacker to execute arbitrary code remotely on the server. This is possible because the application does not properly validate the data uploaded by users.",
  "repo": "uasoft-indonesia/badaso",
  "patch_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
  "patch_info": {
    "commit_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
    "repo": "uasoft-indonesia/badaso",
    "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/22250eca7c364d991ce9e0a723941eae4889d6f9",
    "files": [
      "src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue"
    ],
    "message": "Merge pull request #807 from uasoft-indonesia/bugfix/v2/filter-mimeType\n\nBugfix[v2] add filter mimeType",
    "before_after_code_files": [
      "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue"
    ]
  },
  "patch_diff": {
    "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue": [
      "File: src/resources/js/components/BadasoUploadFile.vue -> src/resources/js/components/BadasoUploadFile.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "336:           });",
      "337:           return;",
      "338:         }",
      "340:         this.uploadFile(files[0]);",
      "341:       }",
      "342:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "339:         if (!this.availableMimetypes.file.validMime.includes(files[0].type)) {",
      "340:           this.$vs.notify({",
      "341:             title: this.$t(\"alert.danger\"),",
      "342:             text: \"File type not allowed\",",
      "343:             color: \"danger\",",
      "344:           });",
      "345:           return;",
      "346:         }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadFileMultiple.vue -> src/resources/js/components/BadasoUploadFileMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "367:             });",
      "368:             return;",
      "369:           }",
      "371:           this.uploadFile(file);",
      "372:         }",
      "373:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "370:           if (!this.availableMimetypes.file.validMime.includes(file.type)) {",
      "371:             this.$vs.notify({",
      "372:               title: this.$t(\"alert.danger\"),",
      "373:               text: \"File type not allowed\",",
      "374:               color: \"danger\",",
      "375:             });",
      "376:             return;",
      "377:           }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue": [
      "File: src/resources/js/components/BadasoUploadImage.vue -> src/resources/js/components/BadasoUploadImage.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "380:           });",
      "381:           return;",
      "382:         }",
      "384:         this.uploadImage(files[0]);",
      "385:       }",
      "386:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "383:         if (!this.availableMimetypes.image.validMime.includes(files[0].type)){",
      "384:           this.$vs.notify({",
      "385:             title: this.$t(\"alert.danger\"),",
      "386:             text: \"File type not allowed\",",
      "387:             color: \"danger\",",
      "388:           });",
      "389:           return;",
      "390:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "421:     uploadImage(file) {",
      "422:       const files = new FormData();",
      "423:       files.append(\"upload\", file);",
      "425:       files.append(\"working_dir\", this.getActiveFolder);",
      "426:       this.$api.badasoFile",
      "427:         .uploadUsingLfm(files)",
      "",
      "[Removed Lines]",
      "424:       files.append(\"type\", \"image\");",
      "",
      "[Added Lines]",
      "431:       files.append(\"type\", file.type);",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadImageMultiple.vue -> src/resources/js/components/BadasoUploadImageMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:             });",
      "396:             return;",
      "397:           }",
      "399:           this.uploadImage(file);",
      "400:         }",
      "401:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "398:           if (!this.availableMimetypes.image.validMime.includes(file.type)) {",
      "399:             this.$vs.notify({",
      "400:               title: this.$t(\"alert.danger\"),",
      "401:               text: \"File type not allowed\",",
      "402:               color: \"danger\",",
      "403:             });",
      "404:             return;",
      "405:           }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "34044ee36cc46b7b6c4c21693c5eb839c62ddba4",
      "candidate_info": {
        "commit_hash": "34044ee36cc46b7b6c4c21693c5eb839c62ddba4",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/34044ee36cc46b7b6c4c21693c5eb839c62ddba4",
        "files": [
          "src/resources/js/pages/crud-management/add.vue"
        ],
        "message": "bugfix id missing for example request body api docs",
        "before_after_code_files": [
          "src/resources/js/pages/crud-management/add.vue||src/resources/js/pages/crud-management/add.vue"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/resources/js/pages/crud-management/add.vue||src/resources/js/pages/crud-management/add.vue": [
          "File: src/resources/js/pages/crud-management/add.vue -> src/resources/js/pages/crud-management/add.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "957:             };",
          "958:           });",
          "959:           this.crudData.rows = fieldList.map((field) => {",
          "960:             if (",
          "962:                 field.name",
          "963:               )",
          "964:             ) {",
          "",
          "[Removed Lines]",
          "961:               [\"id\", \"created_at\", \"updated_at\", \"deleted_at\"].includes(",
          "",
          "[Added Lines]",
          "960:             if ([\"id\"].includes(field.name)) {",
          "961:               return {",
          "962:                 field: field.name,",
          "963:                 type: field.type,",
          "964:                 displayName: this.$helper.generateDisplayName(field.name),",
          "965:                 required: field.isNotNull,",
          "966:                 browse: true,",
          "967:                 read: true,",
          "968:                 edit: true,",
          "969:                 add: true,",
          "970:                 delete: true,",
          "971:                 details: \"{}\",",
          "972:                 order: 1,",
          "973:                 setRelation: false,",
          "974:               };",
          "975:             }",
          "977:               [\"created_at\", \"updated_at\", \"deleted_at\"].includes(",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "45871e62bce442f7616dc98f1e60f16c5caf99c2",
      "candidate_info": {
        "commit_hash": "45871e62bce442f7616dc98f1e60f16c5caf99c2",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/45871e62bce442f7616dc98f1e60f16c5caf99c2",
        "files": [
          "src/resources/js/pages/activity-log/browse.vue",
          "src/resources/js/pages/crud-management/browse.vue",
          "src/resources/js/pages/database-management/browse.vue",
          "src/resources/js/pages/role-management/browse.vue",
          "src/resources/js/pages/user-management/browse.vue"
        ],
        "message": "clean code",
        "before_after_code_files": [
          "src/resources/js/pages/activity-log/browse.vue||src/resources/js/pages/activity-log/browse.vue",
          "src/resources/js/pages/crud-management/browse.vue||src/resources/js/pages/crud-management/browse.vue",
          "src/resources/js/pages/database-management/browse.vue||src/resources/js/pages/database-management/browse.vue",
          "src/resources/js/pages/role-management/browse.vue||src/resources/js/pages/role-management/browse.vue",
          "src/resources/js/pages/user-management/browse.vue||src/resources/js/pages/user-management/browse.vue"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/resources/js/pages/activity-log/browse.vue||src/resources/js/pages/activity-log/browse.vue": [
          "File: src/resources/js/pages/activity-log/browse.vue -> src/resources/js/pages/activity-log/browse.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "130: <script>",
          "132: import moment from \"moment\";",
          "134: import downloadExcel from \"vue-json-excel\";",
          "135: import jsPDF from \"jspdf\";",
          "136: import \"jspdf-autotable\";",
          "",
          "[Removed Lines]",
          "133: import * as _ from \"lodash\";",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "216:     },",
          "217:     prepareExcelExporter() {",
          "218:       for (const iterator of this.dataType.fields) {",
          "220:         if (field.includes(\"_\")) {",
          "221:           field = field.split(\"_\");",
          "222:           field = field[0].charAt(0).toUpperCase() + field[0].slice(1) + \" \" + field[1].charAt(0).toUpperCase() + field[1].slice(1);",
          "",
          "[Removed Lines]",
          "219:         const field = iterator;",
          "",
          "[Added Lines]",
          "218:         let field = iterator;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "226:         this.fieldsForExcel[field] = this.$caseConvert.stringSnakeToCamel(iterator);",
          "227:       }",
          "230:         if (iterator.includes(\"_\")) {",
          "231:           iterator = iterator.split(\"_\");",
          "232:           iterator = iterator[0] + \" \" + iterator[1].charAt(0).toUpperCase() + iterator[1].slice(1);",
          "",
          "[Removed Lines]",
          "229:       for (const iterator of this.dataType.fields) {",
          "",
          "[Added Lines]",
          "228:       for (let iterator of this.dataType.fields) {",
          "",
          "---------------"
        ],
        "src/resources/js/pages/crud-management/browse.vue||src/resources/js/pages/crud-management/browse.vue": [
          "File: src/resources/js/pages/crud-management/browse.vue -> src/resources/js/pages/crud-management/browse.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "139: </template>",
          "141: <script>",
          "143: import downloadExcel from \"vue-json-excel\";",
          "144: import jsPDF from \"jspdf\";",
          "145: import \"jspdf-autotable\";",
          "",
          "[Removed Lines]",
          "142: import * as _ from \"lodash\";",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "216:     },",
          "217:     prepareExcelExporter() {",
          "218:       for (const iterator of this.dataType.fields) {",
          "220:         if (field.includes(\"_\")) {",
          "221:           field = field.split(\"_\");",
          "",
          "[Removed Lines]",
          "219:         const field = iterator;",
          "",
          "[Added Lines]",
          "218:         let field = iterator;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "227:         this.fieldsForExcel[field] = this.$caseConvert.stringSnakeToCamel(iterator);",
          "228:       }",
          "231:         if (iterator.includes(\"_\")) {",
          "232:           iterator = iterator.split(\"_\");",
          "",
          "[Removed Lines]",
          "230:       for (const iterator of this.dataType.fields) {",
          "",
          "[Added Lines]",
          "229:       for (let iterator of this.dataType.fields) {",
          "",
          "---------------"
        ],
        "src/resources/js/pages/database-management/browse.vue||src/resources/js/pages/database-management/browse.vue": [
          "File: src/resources/js/pages/database-management/browse.vue -> src/resources/js/pages/database-management/browse.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "289: <script>",
          "290: import { required } from \"vuelidate/lib/validators\";",
          "292: import downloadExcel from \"vue-json-excel\";",
          "293: import jsPDF from \"jspdf\";",
          "294: import \"jspdf-autotable\";",
          "",
          "[Removed Lines]",
          "291: import * as _ from \"lodash\";",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "609:     },",
          "610:     prepareExcelExporter() {",
          "611:       for (const iterator of this.dataType.fields) {",
          "613:         if (field.includes(\"_\")) {",
          "614:           field = field.split(\"_\");",
          "",
          "[Removed Lines]",
          "612:         const field = iterator;",
          "",
          "[Added Lines]",
          "611:         let field = iterator;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "620:         this.fieldsForExcel[field] = this.$caseConvert.stringSnakeToCamel(iterator);",
          "621:       }",
          "624:         if (iterator.includes(\"_\")) {",
          "625:           iterator = iterator.split(\"_\");",
          "",
          "[Removed Lines]",
          "623:       for (const iterator of this.dataType.fields) {",
          "",
          "[Added Lines]",
          "622:       for (let iterator of this.dataType.fields) {",
          "",
          "---------------"
        ],
        "src/resources/js/pages/role-management/browse.vue||src/resources/js/pages/role-management/browse.vue": [
          "File: src/resources/js/pages/role-management/browse.vue -> src/resources/js/pages/role-management/browse.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "148: </template>",
          "150: <script>",
          "152: import downloadExcel from \"vue-json-excel\";",
          "153: import jsPDF from \"jspdf\";",
          "154: import \"jspdf-autotable\";",
          "",
          "[Removed Lines]",
          "151: import * as _ from \"lodash\";",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "257:     },",
          "258:     prepareExcelExporter() {",
          "259:       for (const iterator of this.dataType.fields) {",
          "261:         if (field.includes(\"_\")) {",
          "262:           field = field.split(\"_\");",
          "263:           field = field[0].charAt(0).toUpperCase() + field[0].slice(1) + \" \" + field[1].charAt(0).toUpperCase() + field[1].slice(1);",
          "",
          "[Removed Lines]",
          "260:         const field = iterator;",
          "",
          "[Added Lines]",
          "259:         let field = iterator;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "267:         field = field.charAt(0).toUpperCase() + field.slice(1);",
          "270:         this.fieldsForExcel[field] = this.$caseConvert.stringSnakeToCamel(iterator);",
          "271:       }",
          "274:         if (iterator.includes(\"_\")) {",
          "275:           iterator = iterator.split(\"_\");",
          "276:           iterator = iterator[0] + \" \" + iterator[1].charAt(0).toUpperCase() + iterator[1].slice(1);",
          "",
          "[Removed Lines]",
          "268:         const string = this.$caseConvert.stringSnakeToCamel(iterator);",
          "273:       for (const iterator of this.dataType.fields) {",
          "",
          "[Added Lines]",
          "271:       for (let iterator of this.dataType.fields) {",
          "",
          "---------------"
        ],
        "src/resources/js/pages/user-management/browse.vue||src/resources/js/pages/user-management/browse.vue": [
          "File: src/resources/js/pages/user-management/browse.vue -> src/resources/js/pages/user-management/browse.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "131: </template>",
          "133: <script>",
          "135: import downloadExcel from \"vue-json-excel\";",
          "136: import jsPDF from \"jspdf\";",
          "137: import \"jspdf-autotable\";",
          "",
          "[Removed Lines]",
          "134: import * as _ from \"lodash\";",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "143:     descriptionItems: [10, 50, 100],",
          "144:     users: [],",
          "145:     willDeleteId: null,",
          "147:     fieldsForExcel: {},",
          "148:     fieldsForPdf: [],",
          "149:     dataType: {",
          "",
          "[Removed Lines]",
          "146:     willDeleteId: null,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "241:     },",
          "242:     prepareExcelExporter() {",
          "243:       for (const iterator of this.dataType.fields) {",
          "245:         if (field.includes(\"_\")) {",
          "246:           field = field.split(\"_\");",
          "247:           field = field[0].charAt(0).toUpperCase() + field[0].slice(1) + \" \" + field[1].charAt(0).toUpperCase() + field[1].slice(1);",
          "",
          "[Removed Lines]",
          "244:         const field = iterator;",
          "",
          "[Added Lines]",
          "242:         let field = iterator;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "251:         this.fieldsForExcel[field] = this.$caseConvert.stringSnakeToCamel(iterator);",
          "252:       }",
          "255:         if (iterator.includes(\"_\")) {",
          "256:           iterator = iterator.split(\"_\");",
          "257:           iterator = iterator[0] + \" \" + iterator[1].charAt(0).toUpperCase() + iterator[1].slice(1);",
          "",
          "[Removed Lines]",
          "254:       for (const iterator of this.dataType.fields) {",
          "",
          "[Added Lines]",
          "252:       for (let iterator of this.dataType.fields) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3b69c99a80e135b4603e2ef6495572eb2a30bfc7",
      "candidate_info": {
        "commit_hash": "3b69c99a80e135b4603e2ef6495572eb2a30bfc7",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/3b69c99a80e135b4603e2ef6495572eb2a30bfc7",
        "files": [
          "tests/Feature/BadasoApiCrudManagementTest.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php": [
          "File: tests/Feature/BadasoApiCrudManagementTest.php -> tests/Feature/BadasoApiCrudManagementTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "943:         $data_types = DataType::whereIn('name', $tables)->get();",
          "944:         $this->assertEmpty($data_types);",
          "945:     }",
          "947:     public function testRollbackMigration()",
          "948:     {",
          "993:         $table_2 = [",
          "1065:         $list_table = [$table_1, $table_2];",
          "1068:         foreach ($list_table as $key => $value) {",
          "1070:             ->json('POST', CallHelperTest::getUrlApiV1Prefix('/database/add'), $value);",
          "1072:         }",
          "",
          "[Removed Lines]",
          "950:          $table_1 = [",
          "951:             \"table\" => \"tests_table_12\",",
          "952:             \"rows\" => [",
          "953:                     [",
          "954:                         \"id\" => \"id\",",
          "955:                         \"fieldName\" => \"id\",",
          "956:                         \"fieldType\" => \"bigint\",",
          "957:                         \"fieldLength\" => null,",
          "958:                         \"fieldNull\" => false,",
          "959:                         \"fieldAttribute\" => true,",
          "960:                         \"fieldIncrement\" => true,",
          "961:                         \"fieldIndex\" => \"primary\",",
          "962:                         \"fieldDefault\" => null,",
          "963:                         \"undeletable\" => true",
          "964:                     ],",
          "965:                     [",
          "966:                         \"fieldName\" => \"created_at\",",
          "967:                         \"fieldType\" => \"timestamp\",",
          "968:                         \"fieldLength\" => null,",
          "969:                         \"fieldNull\" => true,",
          "970:                         \"fieldAttribute\" => false,",
          "971:                         \"fieldIncrement\" => false,",
          "972:                         \"fieldIndex\" => null,",
          "973:                         \"fieldDefault\" => null,",
          "974:                         \"undeletable\" => true,",
          "975:                         \"indexes\" => true",
          "976:                     ],",
          "977:                     [",
          "978:                         \"fieldName\" => \"updated_at\",",
          "979:                         \"fieldType\" => \"timestamp\",",
          "980:                         \"fieldLength\" => null,",
          "981:                         \"fieldNull\" => true,",
          "982:                         \"fieldAttribute\" => false,",
          "983:                         \"fieldIncrement\" => false,",
          "984:                         \"fieldIndex\" => null,",
          "985:                         \"fieldDefault\" => null,",
          "986:                         \"undeletable\" => true",
          "987:                         ]",
          "988:                 ],",
          "989:             \"relations\" => []",
          "990:             ];",
          "994:             \"table\" => \"tests_table_13\",",
          "995:             \"rows\" => [",
          "996:                     [",
          "997:                         \"id\" => \"id\",",
          "998:                         \"fieldName\" => \"id\",",
          "999:                         \"fieldType\" => \"bigint\",",
          "1000:                         \"fieldLength\" => null,",
          "1001:                         \"fieldNull\" => false,",
          "1002:                         \"fieldAttribute\" => true,",
          "1003:                         \"fieldIncrement\" => true,",
          "1004:                         \"fieldIndex\" => \"primary\",",
          "1005:                         \"fieldDefault\" => null,",
          "1006:                         \"undeletable\" => true",
          "1007:                     ],",
          "1008:                     [",
          "1009:                         \"id\" => \"f8fe0661-d861-41e7-83df-65c09b5d2e7a\",",
          "1010:                         \"fieldName\" => \"table_12_id\",",
          "1011:                         \"fieldType\" => \"bigint\",",
          "1012:                         \"fieldLength\" => null,",
          "1013:                         \"fieldNull\" => false,",
          "1014:                         \"fieldAttribute\" => true,",
          "1015:                         \"fieldIncrement\" => false,",
          "1016:                         \"fieldIndex\" => \"foreign\",",
          "1017:                         \"fieldDefault\" => \"\"",
          "1018:                         ],",
          "1019:                     [",
          "1020:                         \"id\" => \"f769fad7-d192-44d2-9845-86ce55596551\",",
          "1021:                         \"fieldName\" => \"f2\",",
          "1022:                         \"fieldType\" => \"varchar\",",
          "1023:                         \"fieldLength\" => \"255\",",
          "1024:                         \"fieldNull\" => false,",
          "1025:                         \"fieldAttribute\" => false,",
          "1026:                         \"fieldIncrement\" => false,",
          "1027:                         \"fieldIndex\" => null,",
          "1028:                         \"fieldDefault\" => \"\"",
          "1029:                         ],",
          "1030:                         [",
          "1031:                         \"fieldName\" => \"created_at\",",
          "1032:                         \"fieldType\" => \"timestamp\",",
          "1033:                         \"fieldLength\" => null,",
          "1034:                         \"fieldNull\" => true,",
          "1035:                         \"fieldAttribute\" => false,",
          "1036:                         \"fieldIncrement\" => false,",
          "1037:                         \"fieldIndex\" => null,",
          "1038:                         \"fieldDefault\" => null,",
          "1039:                         \"undeletable\" => true,",
          "1040:                         \"indexes\" => true",
          "1041:                         ],",
          "1042:                         [",
          "1043:                         \"fieldName\" => \"updated_at\",",
          "1044:                         \"fieldType\" => \"timestamp\",",
          "1045:                         \"fieldLength\" => null,",
          "1046:                         \"fieldNull\" => true,",
          "1047:                         \"fieldAttribute\" => false,",
          "1048:                         \"fieldIncrement\" => false,",
          "1049:                         \"fieldIndex\" => null,",
          "1050:                         \"fieldDefault\" => null,",
          "1051:                         \"undeletable\" => true",
          "1052:                         ]",
          "1053:                     ],",
          "1054:             \"relations\" => [",
          "1055:                            \"f8fe0661-d861-41e7-83df-65c09b5d2e7a\" => [",
          "1056:                               \"sourceField\" => \"table_12_id\",",
          "1057:                               \"targetTable\" => \"tests_table_12\",",
          "1058:                               \"targetField\" => \"id\",",
          "1059:                               \"onDelete\" => \"cascade\",",
          "1060:                               \"onUpdate\" => \"restrict\"",
          "1061:                            ]",
          "1062:                         ]",
          "1063:             ];",
          "1069:         $response = CallHelperTest::withAuthorizeBearer($this)",
          "1071:         $response->assertSuccessful();",
          "",
          "[Added Lines]",
          "947:         $table_1 = [",
          "948:             'table' => 'tests_table_12',",
          "949:             'rows' => [",
          "950:                 [",
          "951:                     'id' => 'id',",
          "952:                     'fieldName' => 'id',",
          "953:                     'fieldType' => 'bigint',",
          "954:                     'fieldLength' => null,",
          "955:                     'fieldNull' => false,",
          "956:                     'fieldAttribute' => true,",
          "957:                     'fieldIncrement' => true,",
          "958:                     'fieldIndex' => 'primary',",
          "959:                     'fieldDefault' => null,",
          "960:                     'undeletable' => true,",
          "961:                 ],",
          "962:                 [",
          "963:                     'fieldName' => 'created_at',",
          "964:                     'fieldType' => 'timestamp',",
          "965:                     'fieldLength' => null,",
          "966:                     'fieldNull' => true,",
          "967:                     'fieldAttribute' => false,",
          "968:                     'fieldIncrement' => false,",
          "969:                     'fieldIndex' => null,",
          "970:                     'fieldDefault' => null,",
          "971:                     'undeletable' => true,",
          "972:                     'indexes' => true,",
          "973:                 ],",
          "974:                 [",
          "975:                     'fieldName' => 'updated_at',",
          "976:                     'fieldType' => 'timestamp',",
          "977:                     'fieldLength' => null,",
          "978:                     'fieldNull' => true,",
          "979:                     'fieldAttribute' => false,",
          "980:                     'fieldIncrement' => false,",
          "981:                     'fieldIndex' => null,",
          "982:                     'fieldDefault' => null,",
          "983:                     'undeletable' => true,",
          "984:                 ],",
          "985:             ],",
          "986:             'relations' => [],",
          "987:         ];",
          "991:             'table' => 'tests_table_13',",
          "992:             'rows' => [",
          "993:                 [",
          "994:                     'id' => 'id',",
          "995:                     'fieldName' => 'id',",
          "996:                     'fieldType' => 'bigint',",
          "997:                     'fieldLength' => null,",
          "998:                     'fieldNull' => false,",
          "999:                     'fieldAttribute' => true,",
          "1000:                     'fieldIncrement' => true,",
          "1001:                     'fieldIndex' => 'primary',",
          "1002:                     'fieldDefault' => null,",
          "1003:                     'undeletable' => true,",
          "1004:                 ],",
          "1005:                 [",
          "1006:                     'id' => 'f8fe0661-d861-41e7-83df-65c09b5d2e7a',",
          "1007:                     'fieldName' => 'table_12_id',",
          "1008:                     'fieldType' => 'bigint',",
          "1009:                     'fieldLength' => null,",
          "1010:                     'fieldNull' => false,",
          "1011:                     'fieldAttribute' => true,",
          "1012:                     'fieldIncrement' => false,",
          "1013:                     'fieldIndex' => 'foreign',",
          "1014:                     'fieldDefault' => '',",
          "1015:                 ],",
          "1016:                 [",
          "1017:                     'id' => 'f769fad7-d192-44d2-9845-86ce55596551',",
          "1018:                     'fieldName' => 'f2',",
          "1019:                     'fieldType' => 'varchar',",
          "1020:                     'fieldLength' => '255',",
          "1021:                     'fieldNull' => false,",
          "1022:                     'fieldAttribute' => false,",
          "1023:                     'fieldIncrement' => false,",
          "1024:                     'fieldIndex' => null,",
          "1025:                     'fieldDefault' => '',",
          "1026:                 ],",
          "1027:                 [",
          "1028:                     'fieldName' => 'created_at',",
          "1029:                     'fieldType' => 'timestamp',",
          "1030:                     'fieldLength' => null,",
          "1031:                     'fieldNull' => true,",
          "1032:                     'fieldAttribute' => false,",
          "1033:                     'fieldIncrement' => false,",
          "1034:                     'fieldIndex' => null,",
          "1035:                     'fieldDefault' => null,",
          "1036:                     'undeletable' => true,",
          "1037:                     'indexes' => true,",
          "1038:                 ],",
          "1039:                 [",
          "1040:                     'fieldName' => 'updated_at',",
          "1041:                     'fieldType' => 'timestamp',",
          "1042:                     'fieldLength' => null,",
          "1043:                     'fieldNull' => true,",
          "1044:                     'fieldAttribute' => false,",
          "1045:                     'fieldIncrement' => false,",
          "1046:                     'fieldIndex' => null,",
          "1047:                     'fieldDefault' => null,",
          "1048:                     'undeletable' => true,",
          "1049:                 ],",
          "1050:             ],",
          "1051:             'relations' => [",
          "1052:                 'f8fe0661-d861-41e7-83df-65c09b5d2e7a' => [",
          "1053:                     'sourceField' => 'table_12_id',",
          "1054:                     'targetTable' => 'tests_table_12',",
          "1055:                     'targetField' => 'id',",
          "1056:                     'onDelete' => 'cascade',",
          "1057:                     'onUpdate' => 'restrict',",
          "1058:                 ],",
          "1059:             ],",
          "1060:         ];",
          "1066:             $response = CallHelperTest::withAuthorizeBearer($this)",
          "1068:             $response->assertSuccessful();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1076:             ->json('GET', CallHelperTest::getUrlApiV1Prefix('/database/migration/browse'));",
          "1077:         $response = $response->json('data');",
          "1078:         $migration_name = [];",
          "1080:             $migration_name[] = $response[$i]['migration'];",
          "1081:         }",
          "1085:             ->json('POST', CallHelperTest::getUrlApiV1Prefix('/database/rollback'), [",
          "1086:                 'step' => 2,",
          "1087:             ]);",
          "",
          "[Removed Lines]",
          "1079:         for ($i=count($response)-2; $i < count($response); $i++) {",
          "1084:          $response = CallHelperTest::withAuthorizeBearer($this)",
          "",
          "[Added Lines]",
          "1076:         for ($i = count($response) - 2; $i < count($response); $i++) {",
          "1081:         $response = CallHelperTest::withAuthorizeBearer($this)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1091:         $response = CallHelperTest::withAuthorizeBearer($this)",
          "1092:             ->json('POST', CallHelperTest::getUrlApiV1Prefix('/database/migration/delete'), [",
          "1094:             ]);",
          "1096:     }",
          "1098:     public function testFinish()",
          "1099:     {",
          "",
          "[Removed Lines]",
          "1093:                 'file_name' => $migration_name",
          "1095:         $response->assertSuccessful();",
          "",
          "[Added Lines]",
          "1090:                 'file_name' => $migration_name,",
          "1092:         $response->assertSuccessful();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "34b05b912d9825f81ebd949db2c1af44941c2b67",
      "candidate_info": {
        "commit_hash": "34b05b912d9825f81ebd949db2c1af44941c2b67",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/34b05b912d9825f81ebd949db2c1af44941c2b67",
        "files": [
          "src/Controllers/BadasoConfigurationsController.php"
        ],
        "message": "remove redis get in code edit multiple",
        "before_after_code_files": [
          "src/Controllers/BadasoConfigurationsController.php||src/Controllers/BadasoConfigurationsController.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Controllers/BadasoConfigurationsController.php||src/Controllers/BadasoConfigurationsController.php": [
          "File: src/Controllers/BadasoConfigurationsController.php -> src/Controllers/BadasoConfigurationsController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "179:             ConfigurationRedis::save();",
          "183:             DB::commit();",
          "185:             return ApiResponse::success();",
          "",
          "[Removed Lines]",
          "181:             ConfigurationRedis::get();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "88238ecf6ab71cfc05c65999bd1996080c9585e6",
      "candidate_info": {
        "commit_hash": "88238ecf6ab71cfc05c65999bd1996080c9585e6",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/88238ecf6ab71cfc05c65999bd1996080c9585e6",
        "files": [
          "src/Controllers/BadasoBaseController.php",
          "src/Helpers/GetData.php"
        ],
        "message": "update unit test and crud management",
        "before_after_code_files": [
          "src/Controllers/BadasoBaseController.php||src/Controllers/BadasoBaseController.php",
          "src/Helpers/GetData.php||src/Helpers/GetData.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Controllers/BadasoBaseController.php||src/Controllers/BadasoBaseController.php": [
          "File: src/Controllers/BadasoBaseController.php -> src/Controllers/BadasoBaseController.php"
        ],
        "src/Helpers/GetData.php||src/Helpers/GetData.php": [
          "File: src/Helpers/GetData.php -> src/Helpers/GetData.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "222:         $records = $records->get()->map(function ($record) use ($data_rows) {",
          "223:             foreach ($data_rows as $index => $data_row) {",
          "224:                     if($data_row->type == 'upload_image_multiple'){",
          "225:                         $upload_image_multiples = json_decode($record->{$data_row->field}, true) ;",
          "226:                         if(isset($upload_image_multiples)){",
          "227:                             $upload_image_multiples = collect($upload_image_multiples)->map(function($upload_image_multiple){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "225:                         if(isset($record->{$data_row->field})){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "239:                             $upload_image_multiples = implode(\",\",json_decode($upload_image_multiples));",
          "240:                         }",
          "241:                         $record->{$data_row->field} = $upload_image_multiples ;",
          "243:                     }elseif($data_row->type == 'upload_image'){",
          "244:                         $upload_image = $record->{$data_row->field};",
          "245:                         if(isset($upload_image)){",
          "246:                                 $put_thumbs = \"thumbs\" ;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "243:                         }",
          "245:                         if(isset($record->{$data_row->field})){",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "254:                                 $record->{$data_row->field} = $upload_image;",
          "255:                         }",
          "256:                     }",
          "257:                 }",
          "258:                 return $record ;",
          "259:             });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "259:                     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}