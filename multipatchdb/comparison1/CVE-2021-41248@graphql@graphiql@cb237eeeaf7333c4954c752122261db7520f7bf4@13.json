{
  "cve_id": "CVE-2021-41248",
  "cve_desc": "GraphiQL is the reference implementation of this monorepo, GraphQL IDE, an official project under the GraphQL Foundation. All versions of graphiql older than graphiql@1.4.7 are vulnerable to compromised HTTP schema introspection responses or schema prop values with malicious GraphQL type names, exposing a dynamic XSS attack surface that can allow code injection on operation autocomplete. In order for the attack to take place, the user must load a vulnerable schema in graphiql. There are a number of ways that can occur. By default, the schema URL is not attacker-controllable in graphiql or in its suggested implementations or examples, leaving only very complex attack vectors. If a custom implementation of graphiql's fetcher allows the schema URL to be set dynamically, such as a URL query parameter like ?endpoint= in graphql-playground, or a database provided value, then this custom graphiql implementation is vulnerable to phishing attacks, and thus much more readily available, low or no privelege level xss attacks. The URLs could look like any generic looking graphql schema URL. It should be noted that desktop clients such as Altair, Insomnia, Postwoman, do not appear to be impacted by this. This vulnerability does not impact codemirror-graphql, monaco-graphql or other dependents, as it exists in onHasCompletion.ts in graphiql. It does impact all forks of graphiql, and every released version of graphiql.",
  "repo": "graphql/graphiql",
  "patch_hash": "cb237eeeaf7333c4954c752122261db7520f7bf4",
  "patch_info": {
    "commit_hash": "cb237eeeaf7333c4954c752122261db7520f7bf4",
    "repo": "graphql/graphiql",
    "commit_url": "https://github.com/graphql/graphiql/commit/cb237eeeaf7333c4954c752122261db7520f7bf4",
    "files": [
      "README.md",
      "SECURITY.md",
      "docs/security/2021-introspection-schema-xss.md",
      "packages/graphiql/README.md",
      "packages/graphiql/cypress/integration/init.spec.ts",
      "packages/graphiql/cypress/support/commands.ts",
      "packages/graphiql/package.json",
      "packages/graphiql/resources/renderExample.js",
      "packages/graphiql/src/components/DocExplorer.tsx",
      "packages/graphiql/src/components/GraphiQL.tsx",
      "packages/graphiql/src/utility/onHasCompletion.ts",
      "packages/graphiql/test/bad-schema.js",
      "packages/graphiql/test/beforeDevServer.js",
      "packages/graphiql/test/e2e-server.js",
      "yarn.lock"
    ],
    "message": "Merge pull request from GHSA-x4r7-m2q9-69c8\n\nThis change fixes an XSS vulnerability that has been present since the first\ncommit of GraphiQL when used with an untrusted GraphQL server. It applies three\nstrategies to fix via defense-in-depth: HTML escaping a string in a contexts\nthat uses innerHTML; validating incoming schemas with graphql-js validateSchema;\nand updating markdown-it to the latest version.\n\nSee docs/security/2021-introspection-schema-xss.md for more details.\n\nCo-authored-by: Rikki <rikki.schulte@gmail.com>",
    "before_after_code_files": [
      "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts",
      "packages/graphiql/cypress/support/commands.ts||packages/graphiql/cypress/support/commands.ts",
      "packages/graphiql/resources/renderExample.js||packages/graphiql/resources/renderExample.js",
      "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx",
      "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
      "packages/graphiql/src/utility/onHasCompletion.ts||packages/graphiql/src/utility/onHasCompletion.ts",
      "packages/graphiql/test/bad-schema.js||packages/graphiql/test/bad-schema.js",
      "packages/graphiql/test/beforeDevServer.js||packages/graphiql/test/beforeDevServer.js",
      "packages/graphiql/test/e2e-server.js||packages/graphiql/test/e2e-server.js",
      "yarn.lock||yarn.lock"
    ]
  },
  "patch_diff": {
    "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts": [
      "File: packages/graphiql/cypress/integration/init.spec.ts -> packages/graphiql/cypress/integration/init.spec.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "44:   it('Executes a GraphQL query over HTTP that has the expected result', () => {",
      "45:     cy.assertQueryResult({ query: testQuery }, mockSuccess);",
      "46:   });",
      "47: });",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "47:   it('Shows the expected error when the schema is invalid', () => {",
      "48:     cy.visit(`/?bad=true`);",
      "49:     cy.assertResult({",
      "50:       errors: [",
      "51:         {",
      "52:           message:",
      "53:             'Names must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \"<img src=x onerror=alert(document.domain)>\" does not.',",
      "54:         },",
      "55:       ],",
      "56:     });",
      "57:   });",
      "",
      "---------------"
    ],
    "packages/graphiql/cypress/support/commands.ts||packages/graphiql/cypress/support/commands.ts": [
      "File: packages/graphiql/cypress/support/commands.ts -> packages/graphiql/cypress/support/commands.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "19:   type MockResult =",
      "20:     | { data: any }",
      "21:     | { data: any; hasNext?: boolean }",
      "23:   interface Chainable<Subject = any> {",
      "",
      "[Removed Lines]",
      "22:     | { error: any[] };",
      "",
      "[Added Lines]",
      "22:     | { error: any[] }",
      "23:     | { errors: any[] };",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "31:     visitWithOp(op: Op): Chainable<Element>;",
      "32:     clickPrettify(): Chainable<Element>;",
      "33:     assertHasValues(op: Op): Chainable<Element>;",
      "34:     assertQueryResult(",
      "35:       op: Op,",
      "36:       expectedResult: MockResult,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "35:     assertResult(result: MockResult): Chainable<Element>;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "91:     expect(value).to.deep.equal(JSON.stringify(mockSuccess, null, 2));",
      "92:   });",
      "93: });",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "97: Cypress.Commands.add('assertResult', (expectedResult, timeout = 200) => {",
      "98:   cy.wait(timeout);",
      "99:   cy.window().then(w => {",
      "101:     const value = w.g.resultComponent.viewer.getValue();",
      "102:     expect(value).to.deep.equal(JSON.stringify(expectedResult, null, 2));",
      "103:   });",
      "104: });",
      "",
      "---------------"
    ],
    "packages/graphiql/resources/renderExample.js||packages/graphiql/resources/renderExample.js": [
      "File: packages/graphiql/resources/renderExample.js -> packages/graphiql/resources/renderExample.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "91:   history.replaceState(null, null, newSearch);",
      "92: }",
      "",
      "[Removed Lines]",
      "94: const isDev = window.location.hostname.match(/localhost$/);",
      "95: const api = isDev ? '/graphql' : '/.netlify/functions/schema-demo';",
      "",
      "[Added Lines]",
      "94: function getSchemaUrl() {",
      "95:   const isDev = window.location.hostname.match(/localhost$/);",
      "97:   if (isDev) {",
      "99:     if (parameters.bad && parameters.bad === 'true') {",
      "100:       return '/bad/graphql';",
      "101:     } else {",
      "102:       return '/graphql';",
      "103:     }",
      "104:   }",
      "105:   return '/.netlify/functions/schema-demo';",
      "106: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "101: ReactDOM.render(",
      "102:   React.createElement(GraphiQL, {",
      "104:     query: parameters.query,",
      "105:     variables: parameters.variables,",
      "106:     headers: parameters.headers,",
      "",
      "[Removed Lines]",
      "103:     fetcher: GraphiQL.createFetcher({ url: api }),",
      "",
      "[Added Lines]",
      "114:     fetcher: GraphiQL.createFetcher({ url: getSchemaUrl() }),",
      "",
      "---------------"
    ],
    "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx": [
      "File: packages/graphiql/src/components/DocExplorer.tsx -> packages/graphiql/src/components/DocExplorer.tsx",
      "--- Hunk 1 ---",
      "[Context before]",
      "8: import React from 'react';",
      "10: import { FieldType } from './DocExplorer/types';",
      "12: import FieldDoc from './DocExplorer/FieldDoc';",
      "",
      "[Removed Lines]",
      "9: import { GraphQLSchema, isType, GraphQLNamedType } from 'graphql';",
      "",
      "[Added Lines]",
      "9: import { GraphQLSchema, isType, GraphQLNamedType, GraphQLError } from 'graphql';",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "30: type DocExplorerProps = {",
      "31:   schema?: GraphQLSchema | null;",
      "32: };",
      "34: type DocExplorerState = {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "32:   schemaErrors?: readonly GraphQLError[];",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "68:   ) {",
      "69:     return (",
      "70:       this.props.schema !== nextProps.schema ||",
      "72:     );",
      "73:   }",
      "75:   render() {",
      "77:     const navStack = this.state.navStack;",
      "78:     const navItem = navStack[navStack.length - 1];",
      "80:     let content;",
      "83:       content = (",
      "84:         <div className=\"spinner-container\">",
      "",
      "[Removed Lines]",
      "71:       this.state.navStack !== nextState.navStack",
      "76:     const { schema } = this.props;",
      "81:     if (schema === undefined) {",
      "",
      "[Added Lines]",
      "72:       this.state.navStack !== nextState.navStack ||",
      "73:       this.props.schemaErrors !== nextProps.schemaErrors",
      "78:     const { schema, schemaErrors } = this.props;",
      "83:     if (schemaErrors) {",
      "84:       content = (",
      "85:         <div className=\"error-container\">{'Error fetching schema'}</div>",
      "86:       );",
      "87:     } else if (schema === undefined) {",
      "",
      "---------------"
    ],
    "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx": [
      "File: packages/graphiql/src/components/GraphiQL.tsx -> packages/graphiql/src/components/GraphiQL.tsx",
      "--- Hunk 1 ---",
      "[Context before]",
      "23:   ValidationRule,",
      "24:   FragmentDefinitionNode,",
      "25:   DocumentNode,",
      "26: } from 'graphql';",
      "27: import copyToClipboard from 'copy-to-clipboard';",
      "28: import { getFragmentDependenciesForAST } from 'graphql-language-service-utils';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "26:   GraphQLError,",
      "27:   formatError as formatGraphQLError,",
      "28:   GraphQLFormattedError,",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "66: } from '@graphiql/toolkit';",
      "67: import HistoryStore from '../utility/HistoryStore';",
      "69: const DEFAULT_DOC_EXPLORER_WIDTH = 350;",
      "71: const majorVersion = parseInt(React.version.slice(0, 2), 10);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "72: import { validateSchema } from 'graphql';",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "95:   additionalContent?: React.ReactNode;",
      "96: };",
      "98: export type GraphiQLProps = {",
      "99:   fetcher: Fetcher;",
      "100:   schema?: GraphQLSchema;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "103: export type GenericError =",
      "104:   | Error",
      "105:   | string",
      "106:   | readonly Error[]",
      "107:   | readonly string[]",
      "108:   | GraphQLError",
      "109:   | readonly GraphQLError[];",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "121:   editorTheme?: string;",
      "122:   onToggleHistory?: (historyPaneOpen: boolean) => void;",
      "123:   ResultsTooltip?: typeof Component | FunctionComponent;",
      "124:   readOnly?: boolean;",
      "125:   docExplorerOpen?: boolean;",
      "126:   toolbar?: GraphiQLToolbarConfig;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "140:   dangerouslyAssumeSchemaIsValid?: boolean;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "143:   headerEditorEnabled: boolean;",
      "144:   shouldPersistHeaders: boolean;",
      "145:   historyPaneOpen: boolean;",
      "146:   docExplorerWidth: number;",
      "147:   isWaitingForResponse: boolean;",
      "148:   subscription?: Unsubscribable | null;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "163:   schemaErrors?: readonly GraphQLError[];",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "152:   maxHistoryLength: number;",
      "153: };",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "173: const stringify = (obj: unknown): string => JSON.stringify(obj, null, 2);",
      "175: const formatSingleError = (error: Error): Error => ({",
      "176:   ...error,",
      "178:   message: error.message,",
      "179:   stack: error.stack,",
      "180: });",
      "182: type InputError = Error | GraphQLError | string;",
      "184: const handleSingleError = (",
      "185:   error: InputError,",
      "186: ): GraphQLFormattedError | Error | string => {",
      "187:   if (error instanceof GraphQLError) {",
      "188:     return formatGraphQLError(error);",
      "189:   }",
      "190:   if (error instanceof Error) {",
      "191:     return formatSingleError(error);",
      "192:   }",
      "193:   return error;",
      "194: };",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "166:     return JSON.stringify(result, null, 2);",
      "167:   }",
      "177:   _editorQueryID = 0;",
      "",
      "[Removed Lines]",
      "169:   static formatError(rawError: Error) {",
      "170:     const result = Array.isArray(rawError)",
      "171:       ? rawError.map(formatSingleError)",
      "172:       : formatSingleError(rawError);",
      "173:     return JSON.stringify(result, null, 2);",
      "174:   }",
      "",
      "[Added Lines]",
      "210:   static formatError = (error: GenericError): string => {",
      "211:     if (Array.isArray(error)) {",
      "212:       return stringify({",
      "213:         errors: error.map((e: InputError) => handleSingleError(e)),",
      "214:       });",
      "215:     }",
      "217:     return stringify({ errors: handleSingleError(error) });",
      "218:   };",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "266:     const headerEditorEnabled = props.headerEditorEnabled ?? false;",
      "267:     const shouldPersistHeaders = props.shouldPersistHeaders ?? false;",
      "270:     this.state = {",
      "272:       query,",
      "273:       variables: variables as string,",
      "274:       headers: headers as string,",
      "275:       operationName,",
      "276:       docExplorerOpen,",
      "278:       editorFlex: Number(this._storage.get('editorFlex')) || 1,",
      "279:       secondaryEditorOpen,",
      "280:       secondaryEditorHeight:",
      "",
      "[Removed Lines]",
      "271:       schema: props.schema,",
      "277:       response: props.response,",
      "",
      "[Added Lines]",
      "313:     let schema = props.schema;",
      "314:     let response = props.response;",
      "315:     let schemaErrors: readonly GraphQLError[] | undefined = undefined;",
      "316:     if (schema && !this.props.dangerouslyAssumeSchemaIsValid) {",
      "317:       const validationErrors = validateSchema(schema);",
      "318:       if (validationErrors && validationErrors.length > 0) {",
      "321:         response = GraphiQL.formatError(validationErrors);",
      "322:         schema = undefined;",
      "323:         schemaErrors = validationErrors;",
      "324:       }",
      "325:     }",
      "329:       schema,",
      "335:       schemaErrors,",
      "336:       response,",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "357:         nextQuery !== this.state.query ||",
      "358:         nextOperationName !== this.state.operationName)",
      "359:     ) {",
      "360:       const updatedQueryAttributes = this._updateQueryFacts(",
      "361:         nextQuery,",
      "362:         nextOperationName,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "419:       if (!this.props.dangerouslyAssumeSchemaIsValid) {",
      "420:         const validationErrors = validateSchema(nextSchema);",
      "421:         if (validationErrors && validationErrors.length > 0) {",
      "422:           this.handleSchemaErrors(validationErrors);",
      "423:           nextSchema = undefined;",
      "424:         }",
      "425:       }",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "665:               ref={c => {",
      "666:                 this.docExplorerComponent = c;",
      "667:               }}",
      "668:               schema={this.state.schema}>",
      "669:               <button",
      "670:                 className=\"docExplorerHide\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "735:               schemaErrors={this.state.schemaErrors}",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "871:         }",
      "873:         if (typeof result !== 'string' && 'data' in result) {",
      "877:         } else {",
      "878:           const responseString =",
      "879:             typeof result === 'string' ? result : GraphiQL.formatResult(result);",
      "885:         }",
      "886:       })",
      "887:       .catch(error => {",
      "892:       });",
      "893:   }",
      "895:   private async _fetchQuery(",
      "896:     query: string,",
      "897:     variables: string,",
      "",
      "[Removed Lines]",
      "874:           const schema = buildClientSchema(result.data);",
      "875:           const queryFacts = getOperationFacts(schema, this.state.query);",
      "876:           this.safeSetState({ schema, ...queryFacts });",
      "880:           this.safeSetState({",
      "882:             schema: undefined,",
      "883:             response: responseString,",
      "884:           });",
      "888:         this.safeSetState({",
      "889:           schema: undefined,",
      "890:           response: error ? GraphiQL.formatError(error) : undefined,",
      "891:         });",
      "",
      "[Added Lines]",
      "942:           let schema: GraphQLSchema | undefined = buildClientSchema(",
      "943:             result.data,",
      "944:           );",
      "945:           if (!this.props.dangerouslyAssumeSchemaIsValid) {",
      "946:             const errors = validateSchema(schema);",
      "948:             if (errors && errors.length > 0) {",
      "949:               schema = undefined;",
      "950:               this.handleSchemaErrors(errors);",
      "951:             }",
      "952:           }",
      "953:           if (schema) {",
      "954:             const queryFacts = getOperationFacts(schema, this.state.query);",
      "955:             this.safeSetState({",
      "956:               schema,",
      "957:               ...queryFacts,",
      "958:               schemaErrors: undefined,",
      "959:             });",
      "960:           }",
      "965:           this.handleSchemaErrors([responseString]);",
      "969:         this.handleSchemaErrors([error]);",
      "973:   private handleSchemaErrors(",
      "974:     schemaErrors: readonly GraphQLError[] | readonly string[],",
      "975:   ) {",
      "976:     this.safeSetState({",
      "977:       response: schemaErrors ? GraphiQL.formatError(schemaErrors) : undefined,",
      "978:       schema: undefined,",
      "979:       schemaErrors,",
      "980:     });",
      "981:   }",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "908:       jsonVariables =",
      "909:         variables && variables.trim() !== '' ? JSON.parse(variables) : null;",
      "910:     } catch (error) {",
      "912:     }",
      "914:     if (typeof jsonVariables !== 'object') {",
      "",
      "[Removed Lines]",
      "911:       throw new Error(`Variables are invalid JSON: ${error.message}.`);",
      "",
      "[Added Lines]",
      "999:       throw new Error(",
      "1000:         `Variables are invalid JSON: ${(error as Error).message}.`,",
      "1001:       );",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "919:       jsonHeaders =",
      "920:         headers && headers.trim() !== '' ? JSON.parse(headers) : null;",
      "921:     } catch (error) {",
      "923:     }",
      "925:     if (typeof jsonHeaders !== 'object') {",
      "",
      "[Removed Lines]",
      "922:       throw new Error(`Headers are invalid JSON: ${error.message}.`);",
      "",
      "[Added Lines]",
      "1012:       throw new Error(`Headers are invalid JSON: ${(error as Error).message}.`);",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "1008:             } catch (error) {",
      "1009:               this.safeSetState({",
      "1010:                 isWaitingForResponse: false,",
      "1012:                 subscription: null,",
      "1013:               });",
      "1014:             }",
      "",
      "[Removed Lines]",
      "1011:                 response: error ? GraphiQL.formatError(error) : undefined,",
      "",
      "[Added Lines]",
      "1101:                 response: error",
      "1102:                   ? GraphiQL.formatError(error as Error)",
      "1103:                   : undefined,",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "1167:     } catch (error) {",
      "1168:       this.setState({",
      "1169:         isWaitingForResponse: false,",
      "1171:       });",
      "1172:     }",
      "1173:   };",
      "",
      "[Removed Lines]",
      "1170:         response: error.message,",
      "",
      "[Added Lines]",
      "1262:         response: (error as Error).message,",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "1699: }",
      "1700: GraphiQLFooter.displayName = 'GraphiQLFooter';",
      "1709: const defaultQuery = `# Welcome to GraphiQL",
      "1710: #",
      "1711: # GraphiQL is an in-browser tool for writing, validating, and",
      "",
      "[Removed Lines]",
      "1702: const formatSingleError = (error: Error) => ({",
      "1703:   ...error,",
      "1705:   message: error.message,",
      "1706:   stack: error.stack,",
      "1707: });",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "packages/graphiql/src/utility/onHasCompletion.ts||packages/graphiql/src/utility/onHasCompletion.ts": [
      "File: packages/graphiql/src/utility/onHasCompletion.ts -> packages/graphiql/src/utility/onHasCompletion.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "12:   GraphQLType,",
      "13:   GraphQLField,",
      "14: } from 'graphql';",
      "15: import MD from 'markdown-it';",
      "17: const md = new MD();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "15: import escapeHTML from 'escape-html';",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "108:   if (type instanceof GraphQLList) {",
      "109:     return `[${renderType(type.ofType)}]`;",
      "110:   }",
      "112: }",
      "",
      "[Removed Lines]",
      "111:   return `<a class=\"typeName\">${type.name}</a>`;",
      "",
      "[Added Lines]",
      "112:   return `<a class=\"typeName\">${escapeHTML(type.name)}</a>`;",
      "",
      "---------------"
    ],
    "packages/graphiql/test/bad-schema.js||packages/graphiql/test/bad-schema.js": [
      "File: packages/graphiql/test/bad-schema.js -> packages/graphiql/test/bad-schema.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: const { buildClientSchema } = require('graphql');",
      "3: module.exports.schema = {",
      "4:   __schema: {",
      "5:     queryType: {",
      "6:       name: 'Query',",
      "7:     },",
      "8:     mutationType: null,",
      "9:     subscriptionType: null,",
      "10:     types: [",
      "11:       {",
      "12:         kind: 'OBJECT',",
      "13:         name: 'Query',",
      "14:         description: null,",
      "15:         fields: [",
      "16:           {",
      "17:             name: 'user',",
      "18:             description: null,",
      "19:             args: [",
      "20:               {",
      "21:                 name: 'id',",
      "22:                 description: null,",
      "23:                 type: {",
      "24:                   kind: 'NON_NULL',",
      "25:                   name: null,",
      "26:                   ofType: {",
      "27:                     kind: 'SCALAR',",
      "28:                     name: 'ID',",
      "29:                     ofType: null,",
      "30:                   },",
      "31:                 },",
      "32:                 defaultValue: null,",
      "33:               },",
      "34:             ],",
      "35:             type: {",
      "36:               kind: 'OBJECT',",
      "37:               name: '<img src=x onerror=alert(document.domain)>',",
      "38:               ofType: null,",
      "39:             },",
      "40:             isDeprecated: false,",
      "41:             deprecationReason: null,",
      "42:           },",
      "43:         ],",
      "44:         inputFields: null,",
      "45:         interfaces: [],",
      "46:         enumValues: null,",
      "47:         possibleTypes: null,",
      "48:       },",
      "49:       {",
      "50:         kind: 'SCALAR',",
      "51:         name: 'ID',",
      "52:         description: '',",
      "53:         fields: null,",
      "54:         inputFields: null,",
      "55:         interfaces: null,",
      "56:         enumValues: null,",
      "57:         possibleTypes: null,",
      "58:       },",
      "59:       {",
      "60:         kind: 'OBJECT',",
      "61:         name: '<img src=x onerror=alert(document.domain)>',",
      "62:         description: null,",
      "63:         fields: [",
      "64:           {",
      "65:             name: 'name',",
      "66:             description: null,",
      "67:             args: [],",
      "68:             type: {",
      "69:               kind: 'NON_NULL',",
      "70:               name: null,",
      "71:               ofType: {",
      "72:                 kind: 'SCALAR',",
      "73:                 name: 'String',",
      "74:                 ofType: null,",
      "75:               },",
      "76:             },",
      "77:             isDeprecated: false,",
      "78:             deprecationReason: null,",
      "79:           },",
      "80:         ],",
      "81:         inputFields: null,",
      "82:         interfaces: [],",
      "83:         enumValues: null,",
      "84:         possibleTypes: null,",
      "85:       },",
      "86:       {",
      "87:         kind: 'SCALAR',",
      "88:         name: 'String',",
      "89:         description: '',",
      "90:         fields: null,",
      "91:         inputFields: null,",
      "92:         interfaces: null,",
      "93:         enumValues: null,",
      "94:         possibleTypes: null,",
      "95:       },",
      "96:     ],",
      "97:     directives: [],",
      "98:   },",
      "99: };",
      "",
      "---------------"
    ],
    "packages/graphiql/test/beforeDevServer.js||packages/graphiql/test/beforeDevServer.js": [
      "File: packages/graphiql/test/beforeDevServer.js -> packages/graphiql/test/beforeDevServer.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "9: const path = require('path');",
      "10: const { graphqlHTTP } = require('express-graphql');",
      "11: const schema = require('./schema');",
      "13: module.exports = function beforeDevServer(app, _server, _compiler) {",
      "15:   app.post('/graphql', graphqlHTTP({ schema }));",
      "17:   app.get(",
      "18:     '/graphql',",
      "19:     graphqlHTTP({",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "12: const { schema: badSchema } = require('./bad-schema');",
      "18:   app.post('/bad/graphql', (_req, res, next) => {",
      "19:     res.json({ data: badSchema });",
      "20:     next();",
      "21:   });",
      "",
      "---------------"
    ],
    "packages/graphiql/test/e2e-server.js||packages/graphiql/test/e2e-server.js": [
      "File: packages/graphiql/test/e2e-server.js -> packages/graphiql/test/e2e-server.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: const path = require('path');",
      "11: const { graphqlHTTP } = require('express-graphql');",
      "12: const schema = require('./schema');",
      "14: const app = express();",
      "17: app.post('/graphql', graphqlHTTP({ schema }));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "14: const { schema: badSchema } = require('./bad-schema');",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "23:   }),",
      "24: );",
      "26: app.use(express.static(path.resolve(__dirname, '../')));",
      "28: app.listen(process.env.PORT || 0, function () {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "26: app.post('/bad/graphql', (_req, res, next) => {",
      "27:   res.json({ data: badSchema });",
      "28:   next();",
      "29: });",
      "",
      "---------------"
    ],
    "yarn.lock||yarn.lock": [
      "File: yarn.lock -> yarn.lock",
      "--- Hunk 1 ---",
      "[Context before]",
      "3288:   integrity sha512-6U71C2Wp7r5XtFtQzYrW5iKFT67OixrSxjI4MptCHzdSVlgabczzqLe0ZSgnub/5Kp4hSbpDB1tMytZY9pwxxA==",
      "3290: \"@graphiql/toolkit@file:packages/graphiql-toolkit\":",
      "3292:   dependencies:",
      "3293:     \"@n1ru4l/push-pull-async-iterable-iterator\" \"^3.0.0\"",
      "3294:     graphql-ws \"^4.9.0\"",
      "",
      "[Removed Lines]",
      "3291:   version \"0.3.0\"",
      "",
      "[Added Lines]",
      "3291:   version \"0.3.2\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "4881:   dependencies:",
      "4882:     \"@types/node\" \"*\"",
      "4884: \"@types/eslint-visitor-keys@^1.0.0\":",
      "4885:   version \"1.0.0\"",
      "4886:   resolved \"https://registry.yarnpkg.com/@types/eslint-visitor-keys/-/eslint-visitor-keys-1.0.0.tgz#1ee30d79544ca84d68d4b3cdb0af4f205663dd2d\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4884: \"@types/escape-html@^1.0.1\":",
      "4885:   version \"1.0.1\"",
      "4886:   resolved \"https://registry.yarnpkg.com/@types/escape-html/-/escape-html-1.0.1.tgz#b19b4646915f0ae2c306bf984dc0a59c5cfc97ba\"",
      "4887:   integrity sha512-4mI1FuUUZiuT95fSVqvZxp/ssQK9zsa86S43h9x3zPOSU9BBJ+BfDkXwuaU7BfsD+e7U0/cUUfJFk3iW2M4okA==",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "5021:   dependencies:",
      "5022:     \"@types/linkify-it\" \"*\"",
      "5024: \"@types/mime@^1\":",
      "5025:   version \"1.3.2\"",
      "5026:   resolved \"https://registry.yarnpkg.com/@types/mime/-/mime-1.3.2.tgz#93e25bf9ee75fe0fd80b594bc4feb0e862111b5a\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5029: \"@types/markdown-it@^12.2.3\":",
      "5030:   version \"12.2.3\"",
      "5031:   resolved \"https://registry.yarnpkg.com/@types/markdown-it/-/markdown-it-12.2.3.tgz#0d6f6e5e413f8daaa26522904597be3d6cd93b51\"",
      "5032:   integrity sha512-GKMHFfv3458yYy+v/N8gjufHO6MSZKCOXpZc5GXIWWy8uldwfmPn98vp81gZ5f9SVw8YYBctgfJ22a2d7AOMeQ==",
      "5033:   dependencies:",
      "5034:     \"@types/linkify-it\" \"*\"",
      "5035:     \"@types/mdurl\" \"*\"",
      "5037: \"@types/mdurl@*\":",
      "5038:   version \"1.0.2\"",
      "5039:   resolved \"https://registry.yarnpkg.com/@types/mdurl/-/mdurl-1.0.2.tgz#e2ce9d83a613bacf284c7be7d491945e39e1f8e9\"",
      "5040:   integrity sha512-eC4U9MlIcu2q0KQmXszyn5Akca/0jrQmwDRgpAMJai7qBWq4amIQhZyNau4VYGtCeALvW1/NtjzJJ567aZxfKA==",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "6121:   dependencies:",
      "6122:     sprintf-js \"~1.0.2\"",
      "6124: aria-query@^3.0.0:",
      "6125:   version \"3.0.0\"",
      "6126:   resolved \"https://registry.yarnpkg.com/aria-query/-/aria-query-3.0.0.tgz#65b3fcc1ca1155a8c9ae64d6eee297f15d5133cc\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6142: argparse@^2.0.1:",
      "6143:   version \"2.0.1\"",
      "6144:   resolved \"https://registry.yarnpkg.com/argparse/-/argparse-2.0.1.tgz#246f50f3ca78a3240f6c997e8a9bd1eac49e4b38\"",
      "6145:   integrity sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "9586:   resolved \"https://registry.yarnpkg.com/entities/-/entities-2.0.3.tgz#5c487e5742ab93c15abb5da22759b8590ec03b7f\"",
      "9587:   integrity sha512-MyoZ0jgnLvB2X3Lg5HqpFmn1kybDiIfEQmKzTb5apr51Rb+T3KdmMiqa70T+bhGnyv7bQ6WMj2QMHpGMmlrUYQ==",
      "9589: envinfo@^7.3.1:",
      "9590:   version \"7.8.1\"",
      "9591:   resolved \"https://registry.yarnpkg.com/envinfo/-/envinfo-7.8.1.tgz#06377e3e5f4d379fea7ac592d5ad8927e0c4d475\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "9612: entities@~2.1.0:",
      "9613:   version \"2.1.0\"",
      "9614:   resolved \"https://registry.yarnpkg.com/entities/-/entities-2.1.0.tgz#992d3129cf7df6870b96c57858c249a120f8b8b5\"",
      "9615:   integrity sha512-hCx1oky9PFrJ611mf0ifBLBRW8lUUVRlFolb5gWRfIELabBlbp9xZvrqZLZAs+NxFnbfQoeGd8wDkygjg7U85w==",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "9751:   resolved \"https://registry.yarnpkg.com/escalade/-/escalade-3.1.1.tgz#d8cfdc7000965c5a0174b4a82eaa5c0552742e40\"",
      "9752:   integrity sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==",
      "9755:   version \"1.0.3\"",
      "9756:   resolved \"https://registry.yarnpkg.com/escape-html/-/escape-html-1.0.3.tgz#0258eae4d3d0c0974de1c169188ef0051d1d1988\"",
      "9757:   integrity sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg=",
      "",
      "[Removed Lines]",
      "9754: escape-html@~1.0.3:",
      "",
      "[Added Lines]",
      "9782: escape-html@^1.0.3, escape-html@~1.0.3:",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "11512:   integrity sha512-bzh50DW9kTPM00T8y4o8vQg89Di9oLJVLW/KaOGIXJWP/iqCN6WKYkbNOF04vFLJhwcpYUh9ydh/+5vpOqV4YQ==",
      "11514: \"graphiql@file:packages/graphiql\":",
      "11516:   dependencies:",
      "11518:     codemirror \"^5.58.2\"",
      "11520:     copy-to-clipboard \"^3.2.0\"",
      "11521:     dset \"^3.1.0\"",
      "11522:     entities \"^2.0.0\"",
      "11526: graphql-config@^3.0.2:",
      "11527:   version \"3.0.3\"",
      "",
      "[Removed Lines]",
      "11515:   version \"1.4.3\"",
      "11517:     \"@graphiql/toolkit\" \"^0.3.0\"",
      "11519:     codemirror-graphql \"^1.0.0\"",
      "11523:     graphql-language-service \"^3.1.5\"",
      "11524:     markdown-it \"^10.0.0\"",
      "",
      "[Added Lines]",
      "11543:   version \"1.4.6\"",
      "11545:     \"@graphiql/toolkit\" \"^0.3.2\"",
      "11547:     codemirror-graphql \"^1.0.3\"",
      "11551:     escape-html \"^1.0.3\"",
      "11552:     graphql-language-service \"^3.1.6\"",
      "11553:     markdown-it \"^12.2.0\"",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "14280:   dependencies:",
      "14281:     uc.micro \"^1.0.1\"",
      "14283: lint-staged@^10.1.2:",
      "14284:   version \"10.1.3\"",
      "14285:   resolved \"https://registry.yarnpkg.com/lint-staged/-/lint-staged-10.1.3.tgz#da27713d3ac519da305381b4de87d5f866b1d2f1\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "14312: linkify-it@^3.0.1:",
      "14313:   version \"3.0.3\"",
      "14314:   resolved \"https://registry.yarnpkg.com/linkify-it/-/linkify-it-3.0.3.tgz#a98baf44ce45a550efb4d49c769d07524cc2fa2e\"",
      "14315:   integrity sha512-ynTsyrFSdE5oZ/O9GEf00kPngmOfVwazR5GKDq6EYfhlpFug3J2zybX56a2PRRpc9P+FuSoGNAwjlbDs9jJBPQ==",
      "14316:   dependencies:",
      "14317:     uc.micro \"^1.0.1\"",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "14711:     mdurl \"^1.0.1\"",
      "14712:     uc.micro \"^1.0.5\"",
      "14714: markdown-to-jsx@^6.11.4:",
      "14715:   version \"6.11.4\"",
      "14716:   resolved \"https://registry.yarnpkg.com/markdown-to-jsx/-/markdown-to-jsx-6.11.4.tgz#b4528b1ab668aef7fe61c1535c27e837819392c5\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "14750: markdown-it@^12.2.0:",
      "14751:   version \"12.2.0\"",
      "14752:   resolved \"https://registry.yarnpkg.com/markdown-it/-/markdown-it-12.2.0.tgz#091f720fd5db206f80de7a8d1f1a7035fd0d38db\"",
      "14753:   integrity sha512-Wjws+uCrVQRqOoJvze4HCqkKl1AsSh95iFAeQDwnyfxM09divCBSXlDR1uTvyUP3Grzpn4Ru8GeCxYPM8vkCQg==",
      "14754:   dependencies:",
      "14755:     argparse \"^2.0.1\"",
      "14756:     entities \"~2.1.0\"",
      "14757:     linkify-it \"^3.0.1\"",
      "14758:     mdurl \"^1.0.1\"",
      "14759:     uc.micro \"^1.0.5\"",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9813eb8fc89e9ff4942da304dea98dad0ceb604b",
      "candidate_info": {
        "commit_hash": "9813eb8fc89e9ff4942da304dea98dad0ceb604b",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/9813eb8fc89e9ff4942da304dea98dad0ceb604b",
        "files": [
          ".changeset/long-gorillas-act.md",
          ".changeset/nice-garlics-help.md",
          "packages/graphiql-react/package.json",
          "packages/graphiql-react/src/editor/components/header-editor.tsx",
          "packages/graphiql-react/src/editor/components/query-editor.tsx",
          "packages/graphiql-react/src/editor/components/variable-editor.tsx",
          "packages/graphiql-react/src/editor/style/codemirror.css",
          "packages/graphiql-react/src/icons/chevron-down.svg",
          "packages/graphiql-react/src/icons/chevron-up.svg",
          "packages/graphiql-react/src/icons/index.tsx",
          "packages/graphiql-react/src/index.ts",
          "packages/graphiql-react/src/style/root.css",
          "packages/graphiql-react/src/ui/button.css",
          "packages/graphiql-react/src/ui/button.tsx",
          "packages/graphiql-react/src/ui/index.ts",
          "packages/graphiql-react/src/vite-env.d.ts",
          "packages/graphiql-react/vite.config.ts",
          "packages/graphiql/__mocks__/@graphiql/react.tsx",
          "packages/graphiql/cypress/integration/init.spec.ts",
          "packages/graphiql/cypress/integration/tabs.spec.ts",
          "packages/graphiql/cypress/support/commands.ts",
          "packages/graphiql/src/cdn.ts",
          "packages/graphiql/src/components/DocExplorer.tsx",
          "packages/graphiql/src/components/GraphiQL.tsx",
          "packages/graphiql/src/components/__tests__/DocExplorer.spec.tsx",
          "packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx",
          "packages/graphiql/src/css/app.css",
          "packages/graphiql/src/css/loading.css",
          "packages/graphiql/src/style.css",
          "yarn.lock"
        ],
        "message": "[redesign] layout for editor components (#2515)\n\n* add icons to `@graphiql/react`\n\n* add `UnstyledButton` ui component\n\n* implement new design for editors layout\n\n* rename `Unstyled` to `UnStyled` for spell checking\n\n* remove unused class and whitespace in `className`\n\n* make tiny change for deploy preview \ud83e\udd1e\n\n* this will do it, i think?\n\nCo-authored-by: Rikki Schulte <rikki.schulte@gmail.com>",
        "before_after_code_files": [
          "packages/graphiql-react/src/editor/components/header-editor.tsx||packages/graphiql-react/src/editor/components/header-editor.tsx",
          "packages/graphiql-react/src/editor/components/query-editor.tsx||packages/graphiql-react/src/editor/components/query-editor.tsx",
          "packages/graphiql-react/src/editor/components/variable-editor.tsx||packages/graphiql-react/src/editor/components/variable-editor.tsx",
          "packages/graphiql-react/src/editor/style/codemirror.css||packages/graphiql-react/src/editor/style/codemirror.css",
          "packages/graphiql-react/src/icons/index.tsx||packages/graphiql-react/src/icons/index.tsx",
          "packages/graphiql-react/src/index.ts||packages/graphiql-react/src/index.ts",
          "packages/graphiql-react/src/style/root.css||packages/graphiql-react/src/style/root.css",
          "packages/graphiql-react/src/ui/button.css||packages/graphiql-react/src/ui/button.css",
          "packages/graphiql-react/src/ui/button.tsx||packages/graphiql-react/src/ui/button.tsx",
          "packages/graphiql-react/src/ui/index.ts||packages/graphiql-react/src/ui/index.ts",
          "packages/graphiql-react/src/vite-env.d.ts||packages/graphiql-react/src/vite-env.d.ts",
          "packages/graphiql-react/vite.config.ts||packages/graphiql-react/vite.config.ts",
          "packages/graphiql/__mocks__/@graphiql/react.tsx||packages/graphiql/__mocks__/@graphiql/react.tsx",
          "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts",
          "packages/graphiql/cypress/integration/tabs.spec.ts||packages/graphiql/cypress/integration/tabs.spec.ts",
          "packages/graphiql/cypress/support/commands.ts||packages/graphiql/cypress/support/commands.ts",
          "packages/graphiql/src/cdn.ts||packages/graphiql/src/cdn.ts",
          "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx",
          "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
          "packages/graphiql/src/components/__tests__/DocExplorer.spec.tsx||packages/graphiql/src/components/__tests__/DocExplorer.spec.tsx",
          "packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx||packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx",
          "packages/graphiql/src/css/app.css||packages/graphiql/src/css/app.css",
          "packages/graphiql/src/css/loading.css||packages/graphiql/src/css/loading.css",
          "packages/graphiql/src/style.css||packages/graphiql/src/style.css",
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts",
            "packages/graphiql/cypress/support/commands.ts||packages/graphiql/cypress/support/commands.ts",
            "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx",
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
            "yarn.lock||yarn.lock"
          ],
          "candidate": [
            "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts",
            "packages/graphiql/cypress/support/commands.ts||packages/graphiql/cypress/support/commands.ts",
            "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx",
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
            "yarn.lock||yarn.lock"
          ]
        }
      },
      "candidate_diff": {
        "packages/graphiql-react/src/editor/components/header-editor.tsx||packages/graphiql-react/src/editor/components/header-editor.tsx": [
          "File: packages/graphiql-react/src/editor/components/header-editor.tsx -> packages/graphiql-react/src/editor/components/header-editor.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import '../style/codemirror.css';",
          "4: import '../style/fold.css';",
          "9:   const ref = useHeaderEditor(hookArgs);",
          "10:   return (",
          "21:   );",
          "22: }",
          "",
          "[Removed Lines]",
          "6: type HeaderEditorProps = UseHeaderEditorArgs & { active?: boolean };",
          "8: export function HeaderEditor({ active, ...hookArgs }: HeaderEditorProps) {",
          "11:     <div",
          "12:       className=\"codemirrorWrap\"",
          "15:       style={{",
          "16:         position: active ? 'relative' : 'absolute',",
          "17:         visibility: active ? 'visible' : 'hidden',",
          "18:       }}",
          "19:       ref={ref}",
          "20:     />",
          "",
          "[Added Lines]",
          "6: type HeaderEditorProps = UseHeaderEditorArgs & { isHidden?: boolean };",
          "8: export function HeaderEditor({ isHidden, ...hookArgs }: HeaderEditorProps) {",
          "11:     <div className={`graphiql-editor${isHidden ? ' hidden' : ''}`} ref={ref} />",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/editor/components/query-editor.tsx||packages/graphiql-react/src/editor/components/query-editor.tsx": [
          "File: packages/graphiql-react/src/editor/components/query-editor.tsx -> packages/graphiql-react/src/editor/components/query-editor.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: export function QueryEditor(props: UseQueryEditorArgs) {",
          "12:   const ref = useQueryEditor(props);",
          "16: }",
          "",
          "[Removed Lines]",
          "13:   return (",
          "14:     <section className=\"query-editor\" aria-label=\"Query Editor\" ref={ref} />",
          "15:   );",
          "",
          "[Added Lines]",
          "13:   return <div className=\"graphiql-editor\" ref={ref} />;",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/editor/components/variable-editor.tsx||packages/graphiql-react/src/editor/components/variable-editor.tsx": [
          "File: packages/graphiql-react/src/editor/components/variable-editor.tsx -> packages/graphiql-react/src/editor/components/variable-editor.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: import '../style/hint.css';",
          "8: type VariableEditorProps = UseVariableEditorArgs & {",
          "10: };",
          "13:   const ref = useVariableEditor(hookArgs);",
          "14:   return (",
          "25:   );",
          "26: }",
          "",
          "[Removed Lines]",
          "9:   active?: boolean;",
          "12: export function VariableEditor({ active, ...hookArgs }: VariableEditorProps) {",
          "15:     <div",
          "16:       className=\"codemirrorWrap\"",
          "19:       style={{",
          "20:         position: active ? 'relative' : 'absolute',",
          "21:         visibility: active ? 'visible' : 'hidden',",
          "22:       }}",
          "23:       ref={ref}",
          "24:     />",
          "",
          "[Added Lines]",
          "9:   isHidden?: boolean;",
          "12: export function VariableEditor({ isHidden, ...hookArgs }: VariableEditorProps) {",
          "15:     <div className={`graphiql-editor${isHidden ? ' hidden' : ''}`} ref={ref} />",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/editor/style/codemirror.css||packages/graphiql-react/src/editor/style/codemirror.css": [
          "File: packages/graphiql-react/src/editor/style/codemirror.css -> packages/graphiql-react/src/editor/style/codemirror.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: .cm-s-graphiql {",
          "38:   & .cm-keyword {",
          "39:     color: var(--color-pink);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38:   color: var(--color-neutral-60);",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/icons/index.tsx||packages/graphiql-react/src/icons/index.tsx": [
          "File: packages/graphiql-react/src/icons/index.tsx -> packages/graphiql-react/src/icons/index.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import _ChevronDownIcon from './chevron-down.svg';",
          "2: import _ChevronUpIcon from './chevron-up.svg';",
          "4: export const ChevronDownIcon = generateIcon(",
          "5:   _ChevronDownIcon,",
          "6:   'chevron down icon',",
          "7: );",
          "8: export const ChevronUpIcon = generateIcon(_ChevronUpIcon, 'chevron up icon');",
          "10: function generateIcon(RawComponent: any, title: string) {",
          "11:   const WithTitle = function IconComponent(",
          "12:     props: JSX.IntrinsicElements['svg'],",
          "13:   ) {",
          "14:     return <RawComponent {...props} title={title} />;",
          "15:   };",
          "16:   Object.defineProperty(WithTitle, 'name', { value: RawComponent.name });",
          "17:   return WithTitle;",
          "18: }",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/index.ts||packages/graphiql-react/src/index.ts": [
          "File: packages/graphiql-react/src/index.ts -> packages/graphiql-react/src/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:   useHistoryContext,",
          "34:   useSelectHistoryItem,",
          "35: } from './history';",
          "36: export {",
          "37:   SchemaContext,",
          "38:   SchemaContextProvider,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: export * from './icons';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:   StorageContextProvider,",
          "44:   useStorageContext,",
          "45: } from './storage';",
          "46: export { useDragResize } from './utility/resize';",
          "48: export type {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47: export * from './ui';",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/style/root.css||packages/graphiql-react/src/style/root.css": [
          "File: packages/graphiql-react/src/style/root.css -> packages/graphiql-react/src/style/root.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "41:   --px-16: 16px;",
          "44:   --border-radius-4: 4px;",
          "45:   --border-radius-8: 8px;",
          "48:   --box-shadow: 0px 6px 20px rgba(59, 76, 106, 0.13),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:   --border-radius-2: 2px;",
          "47:   --border-radius-12: 12px;",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/ui/button.css||packages/graphiql-react/src/ui/button.css": [
          "File: packages/graphiql-react/src/ui/button.css -> packages/graphiql-react/src/ui/button.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: button.graphiql-un-styled {",
          "2:   all: unset;",
          "3:   border-radius: var(--border-radius-4);",
          "4:   cursor: pointer;",
          "6:   &:active {",
          "7:     background-color: var(--color-neutral-7);",
          "8:   }",
          "10:   &:focus {",
          "11:     outline: var(--color-neutral-15) auto 1px;",
          "12:   }",
          "13: }",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/ui/button.tsx||packages/graphiql-react/src/ui/button.tsx": [
          "File: packages/graphiql-react/src/ui/button.tsx -> packages/graphiql-react/src/ui/button.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import './button.css';",
          "3: export function UnStyledButton(props: JSX.IntrinsicElements['button']) {",
          "4:   return (",
          "5:     <button",
          "6:       {...props}",
          "7:       className={`graphiql-un-styled ${props.className || ''}`.trim()}",
          "8:     />",
          "9:   );",
          "10: }",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/ui/index.ts||packages/graphiql-react/src/ui/index.ts": [
          "File: packages/graphiql-react/src/ui/index.ts -> packages/graphiql-react/src/ui/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: export * from './button';",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/vite-env.d.ts||packages/graphiql-react/src/vite-env.d.ts": [
          "File: packages/graphiql-react/src/vite-env.d.ts -> packages/graphiql-react/src/vite-env.d.ts"
        ],
        "packages/graphiql-react/vite.config.ts||packages/graphiql-react/vite.config.ts": [
          "File: packages/graphiql-react/vite.config.ts -> packages/graphiql-react/vite.config.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import { defineConfig } from 'vite';",
          "2: import react from '@vitejs/plugin-react';",
          "4: export default defineConfig({",
          "6:   esbuild: {",
          "",
          "[Removed Lines]",
          "5:   plugins: [react()],",
          "",
          "[Added Lines]",
          "3: import reactSvgPlugin from 'vite-plugin-react-svg';",
          "6:   plugins: [",
          "7:     react(),",
          "8:     reactSvgPlugin({",
          "9:       defaultExport: 'component',",
          "10:       expandProps: 'end',",
          "11:       titleProp: true,",
          "12:     }),",
          "13:   ],",
          "",
          "---------------"
        ],
        "packages/graphiql/__mocks__/@graphiql/react.tsx||packages/graphiql/__mocks__/@graphiql/react.tsx": [
          "File: packages/graphiql/__mocks__/@graphiql/react.tsx -> packages/graphiql/__mocks__/@graphiql/react.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import {",
          "2:   EditorContext,",
          "3:   EditorContextProvider,",
          "4:   ExecutionContext,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2:   ChevronDownIcon,",
          "3:   ChevronUpIcon,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "13:   SchemaContextProvider,",
          "14:   StorageContext,",
          "15:   StorageContextProvider,",
          "16:   useAutoCompleteLeafs,",
          "17:   useCopyQuery,",
          "18:   useDragResize,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18:   UnStyledButton,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "54: import React, { useEffect, useRef, useState } from 'react';",
          "56: export {",
          "57:   EditorContext,",
          "58:   EditorContextProvider,",
          "59:   ExecutionContext,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "60:   ChevronDownIcon,",
          "61:   ChevronUpIcon,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "68:   SchemaContextProvider,",
          "69:   StorageContext,",
          "70:   StorageContextProvider,",
          "71:   useAutoCompleteLeafs,",
          "72:   useCopyQuery,",
          "73:   useDragResize,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:   UnStyledButton,",
          "",
          "---------------"
        ],
        "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts": [
          "File: packages/graphiql/cypress/integration/init.spec.ts -> packages/graphiql/cypress/integration/init.spec.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:       '.graphiql-container',",
          "34:       '.topBarWrap',",
          "35:       '.editorWrap',",
          "39:     ];",
          "40:     cy.visit(`/`);",
          "42:     containers.forEach(cSelector => cy.get(cSelector).should('be.visible'));",
          "43:   });",
          "",
          "[Removed Lines]",
          "36:       '.queryWrap',",
          "37:       '.resultWrap',",
          "38:       '.variable-editor',",
          "41:     cy.get('.query-editor').contains('# Welcome to GraphiQL');",
          "",
          "[Added Lines]",
          "36:       '.graphiql-editors',",
          "37:       '.graphiql-response',",
          "38:       '.graphiql-editor-tool',",
          "41:     cy.get('.graphiql-query-editor').contains('# Welcome to GraphiQL');",
          "",
          "---------------"
        ],
        "packages/graphiql/cypress/integration/tabs.spec.ts||packages/graphiql/cypress/integration/tabs.spec.ts": [
          "File: packages/graphiql/cypress/integration/tabs.spec.ts -> packages/graphiql/cypress/integration/tabs.spec.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:     cy.get('#session-tab-0').should('have.text', '<untitled>');",
          "8:     cy.get('#session-tab-0').should('have.text', '<untitled>');",
          "",
          "[Removed Lines]",
          "7:     cy.get('.query-editor textarea').type('{id', { force: true }).wait(500);",
          "",
          "[Added Lines]",
          "7:     cy.get('.graphiql-query-editor textarea')",
          "8:       .type('{id', { force: true })",
          "9:       .wait(500);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "14:     cy.get('.tab-add').click();",
          "18:       .type('query Foo {image', { force: true })",
          "19:       .wait(500);",
          "20:     cy.get('#session-tab-1').should('have.text', 'Foo');",
          "24:       .eq(0)",
          "25:       .type('{\"someVar\":42', { force: true });",
          "30:       .eq(1)",
          "31:       .type('{\"someHeader\":\"someValue\"', { force: true });",
          "",
          "[Removed Lines]",
          "17:     cy.get('.query-editor textarea')",
          "23:     cy.get('.variable-editor textarea')",
          "28:     cy.contains('Request Headers').click();",
          "29:     cy.get('.variable-editor textarea')",
          "",
          "[Added Lines]",
          "19:     cy.get('.graphiql-query-editor textarea')",
          "25:     cy.get('.graphiql-editor-tool textarea')",
          "30:     cy.contains('Headers').click();",
          "31:     cy.get('.graphiql-editor-tool textarea')",
          "",
          "---------------"
        ],
        "packages/graphiql/cypress/support/commands.ts||packages/graphiql/cypress/support/commands.ts": [
          "File: packages/graphiql/cypress/support/commands.ts -> packages/graphiql/cypress/support/commands.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "72: Cypress.Commands.add(",
          "73:   'assertHasValues',",
          "74:   ({ query, variables, variablesString, headersString, response }: Op) => {",
          "76:       expect(normalize(element.get(0).innerText)).to.equal(",
          "77:         codeWithLineNumbers(query),",
          "78:       );",
          "79:     });",
          "80:     if (typeof variables !== 'undefined') {",
          "83:         .eq(0)",
          "84:         .should(element => {",
          "85:           expect(normalize(element.get(0).innerText)).to.equal(",
          "",
          "[Removed Lines]",
          "75:     cy.get('.query-editor').should(element => {",
          "81:       cy.contains('Query Variables').click();",
          "82:       cy.get('.variable-editor .codemirrorWrap')",
          "",
          "[Added Lines]",
          "75:     cy.get('.graphiql-query-editor').should(element => {",
          "81:       cy.contains('Variables').click();",
          "82:       cy.get('.graphiql-editor-tool .graphiql-editor')",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "88:         });",
          "89:     }",
          "90:     if (typeof variablesString !== 'undefined') {",
          "93:         .eq(0)",
          "94:         .should(element => {",
          "95:           expect(normalize(element.get(0).innerText)).to.equal(",
          "",
          "[Removed Lines]",
          "91:       cy.contains('Query Variables').click();",
          "92:       cy.get('.variable-editor .codemirrorWrap')",
          "",
          "[Added Lines]",
          "91:       cy.contains('Variables').click();",
          "92:       cy.get('.graphiql-editor-tool .graphiql-editor')",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "98:         });",
          "99:     }",
          "100:     if (typeof headersString !== 'undefined') {",
          "103:         .eq(1)",
          "104:         .should(element => {",
          "105:           expect(normalize(element.get(0).innerText)).to.equal(",
          "",
          "[Removed Lines]",
          "101:       cy.contains('Request Headers').click();",
          "102:       cy.get('.variable-editor .codemirrorWrap')",
          "",
          "[Added Lines]",
          "101:       cy.contains('Headers').click();",
          "102:       cy.get('.graphiql-editor-tool .graphiql-editor')",
          "",
          "---------------"
        ],
        "packages/graphiql/src/cdn.ts||packages/graphiql/src/cdn.ts": [
          "File: packages/graphiql/src/cdn.ts -> packages/graphiql/src/cdn.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: import '@graphiql/react/font/roboto.css';",
          "12: import '@graphiql/react/font/fira-code.css';",
          "13: import '@graphiql/react/dist/style.css';",
          "14: import './css/app.css';",
          "16: import './css/doc-explorer.css';",
          "17: import './css/history.css';",
          "",
          "[Removed Lines]",
          "15: import './css/loading.css';",
          "",
          "[Added Lines]",
          "14: import './style.css';",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx": [
          "File: packages/graphiql/src/components/DocExplorer.tsx -> packages/graphiql/src/components/DocExplorer.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "60:     );",
          "61:   } else if (isFetching) {",
          "68:   } else if (!schema) {",
          "",
          "[Removed Lines]",
          "63:     content = (",
          "64:       <div className=\"spinner-container\">",
          "65:         <div className=\"spinner\" />",
          "66:       </div>",
          "67:     );",
          "",
          "[Added Lines]",
          "63:     content = <div className=\"graphiql-spinner\" />;",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx": [
          "File: packages/graphiql/src/components/GraphiQL.tsx -> packages/graphiql/src/components/GraphiQL.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: } from 'graphql';",
          "24: import {",
          "25:   EditorContextProvider,",
          "26:   ExecutionContextProvider,",
          "27:   ExecutionContextType,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25:   ChevronDownIcon,",
          "26:   ChevronUpIcon,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32:   ResponseEditor,",
          "33:   SchemaContextProvider,",
          "34:   StorageContextProvider,",
          "35:   useAutoCompleteLeafs,",
          "36:   useCopyQuery,",
          "37:   useDragResize,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37:   UnStyledButton,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "553:     direction: 'horizontal',",
          "554:     storageKey: 'editorFlex',",
          "555:   });",
          "557:     defaultSizeRelation: 3,",
          "558:     direction: 'vertical',",
          "559:     initiallyHidden: (() => {",
          "",
          "[Removed Lines]",
          "556:   const secondaryEditorResize = useDragResize({",
          "",
          "[Added Lines]",
          "559:   const editorToolsResize = useDragResize({",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "589:       prettify={prettify}",
          "590:       docResize={docResize}",
          "591:       editorResize={editorResize}",
          "593:       ref={ref}",
          "594:     />",
          "595:   );",
          "",
          "[Removed Lines]",
          "592:       secondaryEditorResize={secondaryEditorResize}",
          "",
          "[Added Lines]",
          "595:       editorToolsResize={editorToolsResize}",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "614:   docResize: ReturnType<typeof useDragResize>;",
          "615:   editorResize: ReturnType<typeof useDragResize>;",
          "617: };",
          "619: export type GraphiQLState = {",
          "",
          "[Removed Lines]",
          "616:   secondaryEditorResize: ReturnType<typeof useDragResize>;",
          "",
          "[Added Lines]",
          "619:   editorToolsResize: ReturnType<typeof useDragResize>;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "737:                       this.props.editorContext.closeTab(index);",
          "738:                     }}",
          "739:                     tabProps={{",
          "741:                       id: `session-tab-${index}`,",
          "742:                     }}",
          "743:                   />",
          "",
          "[Removed Lines]",
          "740:                       'aria-controls': 'sessionWrap',",
          "",
          "[Added Lines]",
          "743:                       'aria-controls': 'graphiql-session',",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "751:             ) : null}",
          "752:             <div",
          "753:               role=\"tabpanel\"",
          "756:               aria-labelledby={`session-tab-${this.props.editorContext.activeTabIndex}`}>",
          "757:               <div ref={this.props.editorResize.firstRef}>",
          "794:                           }",
          "814:                               : ''",
          "816:                           onClick={() => {",
          "817:                             if (",
          "819:                               'second'",
          "820:                             ) {",
          "822:                                 null,",
          "823:                               );",
          "824:                             }",
          "825:                             this.setState(",
          "826:                               {",
          "828:                               },",
          "829:                               () => {",
          "831:                               },",
          "832:                             );",
          "833:                           }}>",
          "837:                     </div>",
          "838:                   </div>",
          "840:                     <section",
          "842:                       aria-label={",
          "843:                         this.state.activeSecondaryEditor === 'variable'",
          "846:                       }>",
          "847:                       <VariableEditor",
          "848:                         onEdit={this.props.onEditVariables}",
          "849:                         editorTheme={this.props.editorTheme}",
          "850:                         readOnly={this.props.readOnly}",
          "852:                         keyMap={this.props.keyMap}",
          "853:                       />",
          "854:                       {headerEditorEnabled && (",
          "855:                         <HeaderEditor",
          "857:                           editorTheme={this.props.editorTheme}",
          "858:                           onEdit={this.props.onEditHeaders}",
          "859:                           readOnly={this.props.readOnly}",
          "",
          "[Removed Lines]",
          "754:               id=\"sessionWrap\"",
          "755:               className=\"editorBar\"",
          "758:                 <div className=\"queryWrap\">",
          "759:                   <div ref={this.props.secondaryEditorResize.firstRef}>",
          "760:                     <QueryEditor",
          "761:                       editorTheme={this.props.editorTheme}",
          "762:                       externalFragments={this.props.externalFragments}",
          "763:                       onClickReference={() => {",
          "764:                         if (this.props.docResize.hiddenElement === 'second') {",
          "765:                           this.props.docResize.setHiddenElement(null);",
          "766:                         }",
          "767:                       }}",
          "768:                       keyMap={this.props.keyMap}",
          "769:                       onCopyQuery={this.props.onCopyQuery}",
          "770:                       onEdit={this.props.onEditQuery}",
          "771:                       onEditOperationName={this.props.onEditOperationName}",
          "772:                       readOnly={this.props.readOnly}",
          "773:                       validationRules={this.props.validationRules}",
          "774:                     />",
          "775:                   </div>",
          "776:                   <div ref={this.props.secondaryEditorResize.dragBarRef}>",
          "777:                     <div",
          "778:                       className=\"secondary-editor-title variable-editor-title\"",
          "779:                       id=\"secondary-editor-title\">",
          "780:                       <div",
          "781:                         className={`variable-editor-title-text${",
          "782:                           this.state.activeSecondaryEditor === 'variable'",
          "783:                             ? ' active'",
          "784:                             : ''",
          "785:                         }`}",
          "786:                         onClick={() => {",
          "787:                           if (",
          "788:                             this.props.secondaryEditorResize.hiddenElement ===",
          "789:                             'second'",
          "790:                           ) {",
          "791:                             this.props.secondaryEditorResize.setHiddenElement(",
          "792:                               null,",
          "793:                             );",
          "795:                           this.setState(",
          "796:                             {",
          "797:                               activeSecondaryEditor: 'variable',",
          "798:                             },",
          "799:                             () => {",
          "800:                               this.props.editorContext.variableEditor?.refresh();",
          "801:                             },",
          "802:                           );",
          "803:                         }}>",
          "804:                         Query Variables",
          "805:                       </div>",
          "806:                       {headerEditorEnabled && (",
          "807:                         <div",
          "808:                           style={{",
          "809:                             marginLeft: '20px',",
          "810:                           }}",
          "811:                           className={`variable-editor-title-text${",
          "812:                             this.state.activeSecondaryEditor === 'header'",
          "813:                               ? ' active'",
          "815:                           }`}",
          "818:                               this.props.secondaryEditorResize.hiddenElement ===",
          "821:                               this.props.secondaryEditorResize.setHiddenElement(",
          "827:                                 activeSecondaryEditor: 'header',",
          "830:                                 this.props.editorContext.headerEditor?.refresh();",
          "834:                           Request Headers",
          "835:                         </div>",
          "836:                       )}",
          "839:                   <div ref={this.props.secondaryEditorResize.secondRef}>",
          "841:                       className=\"variable-editor secondary-editor\"",
          "844:                           ? 'Query Variables'",
          "845:                           : 'Request Headers'",
          "851:                         active={this.state.activeSecondaryEditor === 'variable'}",
          "856:                           active={this.state.activeSecondaryEditor === 'header'}",
          "",
          "[Added Lines]",
          "757:               id=\"graphiql-session\"",
          "758:               className=\"graphiql-session\"",
          "761:                 <div className=\"graphiql-editors\">",
          "762:                   <div ref={this.props.editorToolsResize.firstRef}>",
          "763:                     <section",
          "764:                       className=\"graphiql-query-editor\"",
          "765:                       aria-label=\"Query Editor\">",
          "766:                       <QueryEditor",
          "767:                         editorTheme={this.props.editorTheme}",
          "768:                         externalFragments={this.props.externalFragments}",
          "769:                         keyMap={this.props.keyMap}",
          "770:                         onClickReference={() => {",
          "771:                           if (this.props.docResize.hiddenElement === 'second') {",
          "772:                             this.props.docResize.setHiddenElement(null);",
          "774:                         }}",
          "775:                         onCopyQuery={this.props.onCopyQuery}",
          "776:                         onEdit={this.props.onEditQuery}",
          "777:                         onEditOperationName={this.props.onEditOperationName}",
          "778:                         readOnly={this.props.readOnly}",
          "779:                         validationRules={this.props.validationRules}",
          "780:                       />",
          "781:                     </section>",
          "782:                   </div>",
          "783:                   <div ref={this.props.editorToolsResize.dragBarRef}>",
          "784:                     <div className=\"graphiql-editor-tools\">",
          "785:                       <div className=\"graphiql-editor-tools-tabs\">",
          "786:                         <UnStyledButton",
          "787:                           className={",
          "788:                             this.state.activeSecondaryEditor === 'variable'",
          "789:                               ? 'active'",
          "791:                           }",
          "794:                               this.props.editorToolsResize.hiddenElement ===",
          "797:                               this.props.editorToolsResize.setHiddenElement(",
          "803:                                 activeSecondaryEditor: 'variable',",
          "806:                                 this.props.editorContext.variableEditor?.refresh();",
          "810:                           Variables",
          "811:                         </UnStyledButton>",
          "812:                         {this.props.headerEditorEnabled ? (",
          "813:                           <UnStyledButton",
          "814:                             className={",
          "815:                               this.state.activeSecondaryEditor === 'header'",
          "816:                                 ? 'active'",
          "817:                                 : ''",
          "818:                             }",
          "819:                             onClick={() => {",
          "820:                               if (",
          "821:                                 this.props.editorToolsResize.hiddenElement ===",
          "822:                                 'second'",
          "823:                               ) {",
          "824:                                 this.props.editorToolsResize.setHiddenElement(",
          "825:                                   null,",
          "826:                                 );",
          "827:                               }",
          "828:                               this.setState(",
          "829:                                 {",
          "830:                                   activeSecondaryEditor: 'header',",
          "831:                                 },",
          "832:                                 () => {",
          "833:                                   this.props.editorContext.headerEditor?.refresh();",
          "834:                                 },",
          "835:                               );",
          "836:                             }}>",
          "837:                             Headers",
          "838:                           </UnStyledButton>",
          "839:                         ) : null}",
          "840:                       </div>",
          "841:                       <UnStyledButton",
          "842:                         onClick={() => {",
          "843:                           if (",
          "844:                             this.props.editorToolsResize.hiddenElement ===",
          "845:                             'second'",
          "846:                           ) {",
          "847:                             this.props.editorToolsResize.setHiddenElement(null);",
          "848:                           } else {",
          "849:                             this.props.editorToolsResize.setHiddenElement(",
          "850:                               'second',",
          "851:                             );",
          "852:                           }",
          "853:                         }}>",
          "854:                         {this.props.editorToolsResize.hiddenElement ===",
          "855:                         'second' ? (",
          "856:                           <ChevronUpIcon className=\"graphiql-chevron-icon\" />",
          "857:                         ) : (",
          "858:                           <ChevronDownIcon className=\"graphiql-chevron-icon\" />",
          "859:                         )}",
          "860:                       </UnStyledButton>",
          "863:                   <div ref={this.props.editorToolsResize.secondRef}>",
          "865:                       className=\"graphiql-editor-tool\"",
          "868:                           ? 'Variables'",
          "869:                           : 'Headers'",
          "875:                         isHidden={",
          "876:                           this.state.activeSecondaryEditor !== 'variable'",
          "877:                         }",
          "882:                           isHidden={",
          "883:                             this.state.activeSecondaryEditor !== 'header'",
          "884:                           }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "866:                 </div>",
          "867:               </div>",
          "868:               <div ref={this.props.editorResize.dragBarRef}>",
          "870:               </div>",
          "871:               <div ref={this.props.editorResize.secondRef}>",
          "878:                   <ResponseEditor",
          "879:                     value={this.props.response}",
          "880:                     editorTheme={this.props.editorTheme}",
          "",
          "[Removed Lines]",
          "869:                 <div className=\"editor-drag-bar\" />",
          "872:                 <div className=\"resultWrap\">",
          "873:                   {this.props.executionContext.isFetching && (",
          "874:                     <div className=\"spinner-container\">",
          "875:                       <div className=\"spinner\" />",
          "876:                     </div>",
          "877:                   )}",
          "",
          "[Added Lines]",
          "897:                 <div className=\"graphiql-horizontal-drag-bar\" />",
          "900:                 <div className=\"graphiql-response\">",
          "901:                   {this.props.executionContext.isFetching ? (",
          "902:                     <div className=\"graphiql-spinner\" />",
          "903:                   ) : null}",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/__tests__/DocExplorer.spec.tsx||packages/graphiql/src/components/__tests__/DocExplorer.spec.tsx": [
          "File: packages/graphiql/src/components/__tests__/DocExplorer.spec.tsx -> packages/graphiql/src/components/__tests__/DocExplorer.spec.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:         <DocExplorerWithContext />",
          "47:       </SchemaContext.Provider>,",
          "48:     );",
          "50:     expect(spinner).toHaveLength(1);",
          "51:   });",
          "52:   it('renders with null schema', () => {",
          "",
          "[Removed Lines]",
          "49:     const spinner = container.querySelectorAll('.spinner-container');",
          "",
          "[Added Lines]",
          "49:     const spinner = container.querySelectorAll('.graphiql-spinner');",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx||packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx": [
          "File: packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx -> packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "137:     const { container: container1 } = render(",
          "138:       <GraphiQL fetcher={noOpFetcher} />,",
          "139:     );",
          "142:     expect(queryVariables).not.toBeVisible();",
          "144:     const secondaryEditorTitle = container1.querySelector(",
          "146:     );",
          "147:     fireEvent.mouseDown(secondaryEditorTitle);",
          "148:     fireEvent.mouseMove(secondaryEditorTitle, { buttons: 1, clientY: 50 });",
          "",
          "[Removed Lines]",
          "140:     const queryVariables = container1.querySelector('.variable-editor');",
          "145:       '#secondary-editor-title',",
          "",
          "[Added Lines]",
          "140:     const queryVariables = container1.querySelector('.graphiql-editor-tool');",
          "145:       '.graphiql-editor-tools',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "151:     const { container: container2 } = render(",
          "152:       <GraphiQL fetcher={noOpFetcher} defaultVariableEditorOpen />,",
          "153:     );",
          "158:     const { container: container3 } = render(",
          "159:       <GraphiQL",
          "",
          "[Removed Lines]",
          "154:     expect(",
          "155:       container2.querySelector('[aria-label=\"Query Variables\"]'),",
          "156:     ).toBeVisible();",
          "",
          "[Added Lines]",
          "154:     expect(container2.querySelector('[aria-label=\"Variables\"]')).toBeVisible();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "162:         defaultVariableEditorOpen={false}",
          "163:       />,",
          "164:     );",
          "166:     expect(queryVariables3).not.toBeVisible();",
          "167:   });",
          "",
          "[Removed Lines]",
          "165:     const queryVariables3 = container3.querySelector('.variable-editor');",
          "",
          "[Added Lines]",
          "163:     const queryVariables3 = container3.querySelector('.graphiql-editor-tool');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "290:     await wait();",
          "292:     fireEvent.change(",
          "294:       {",
          "295:         target: { value: mockVariables2 },",
          "296:       },",
          "",
          "[Removed Lines]",
          "293:       container.querySelector('[aria-label=\"Query Variables\"] .mockCodeMirror'),",
          "",
          "[Added Lines]",
          "291:       container.querySelector('[aria-label=\"Variables\"] .mockCodeMirror'),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "319:     expect(container.querySelectorAll('.history-label')).toHaveLength(1);",
          "320:     await wait();",
          "324:     fireEvent.change(",
          "326:       {",
          "327:         target: { value: mockHeaders2 },",
          "328:       },",
          "",
          "[Removed Lines]",
          "322:     fireEvent.click(getByText('Request Headers'));",
          "325:       container.querySelector('[aria-label=\"Request Headers\"] .mockCodeMirror'),",
          "",
          "[Added Lines]",
          "320:     fireEvent.click(getByText('Headers'));",
          "323:       container.querySelector('[aria-label=\"Headers\"] .mockCodeMirror'),",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "504:     await wait();",
          "509:     fireEvent.mouseDown(dragBar, {",
          "510:       button: 0,",
          "",
          "[Removed Lines]",
          "506:     const dragBar = container.querySelector('.editor-drag-bar');",
          "507:     const queryWrap = container.querySelector('.queryWrap');",
          "",
          "[Added Lines]",
          "504:     const dragBar = container.querySelector('.graphiql-horizontal-drag-bar');",
          "505:     const editors = container.querySelector('.graphiql-editors');",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "519:     fireEvent.mouseUp(dragBar);",
          "524:     clientWidthSpy.mockRestore();",
          "525:     boundingClientRectSpy.mockRestore();",
          "",
          "[Removed Lines]",
          "522:     expect(queryWrap.parentElement.style.flex).toEqual('3.5');",
          "",
          "[Added Lines]",
          "520:     expect(editors.parentElement.style.flex).toEqual('3.5');",
          "",
          "---------------"
        ],
        "packages/graphiql/src/css/app.css||packages/graphiql/src/css/app.css": [
          "File: packages/graphiql/src/css/app.css -> packages/graphiql/src/css/app.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:   width: 9px;",
          "89: }",
          "112: .graphiql-container .docExplorerWrap,",
          "113: .graphiql-container .historyPaneWrap {",
          "114:   background: white;",
          "",
          "[Removed Lines]",
          "91: .graphiql-container .editorBar {",
          "92:   display: flex;",
          "93:   flex-direction: row;",
          "94:   flex: 1;",
          "95:   max-height: 100%;",
          "96: }",
          "98: .graphiql-container .queryWrap {",
          "99:   display: flex;",
          "100:   flex-direction: column;",
          "101:   flex: 1;",
          "102: }",
          "104: .graphiql-container .resultWrap {",
          "105:   display: flex;",
          "106:   flex-direction: column;",
          "107:   flex: 1;",
          "108:   flex-basis: 1em;",
          "109:   position: relative;",
          "110: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "141:   line-height: 14px;",
          "142: }",
          "177: .graphiql-container .result-window {",
          "178:   flex: 1;",
          "179:   height: 100%;",
          "",
          "[Removed Lines]",
          "144: .graphiql-container div .query-editor {",
          "145:   flex: 1;",
          "146:   position: relative;",
          "147: }",
          "149: .graphiql-container .secondary-editor {",
          "150:   display: flex;",
          "151:   flex-direction: column;",
          "152:   height: 100%;",
          "153:   position: relative;",
          "154: }",
          "156: .graphiql-container .secondary-editor-title {",
          "157:   background: #eeeeee;",
          "158:   border-bottom: 1px solid #d6d6d6;",
          "159:   border-top: 1px solid #e0e0e0;",
          "160:   color: #777;",
          "161:   cursor: row-resize;",
          "162:   font-variant: small-caps;",
          "163:   font-weight: bold;",
          "164:   letter-spacing: 1px;",
          "165:   line-height: 14px;",
          "166:   padding: 6px 0 8px 43px;",
          "167:   text-transform: lowercase;",
          "168:   user-select: none;",
          "169: }",
          "171: .graphiql-container .codemirrorWrap {",
          "172:   flex: 1;",
          "173:   height: 100%;",
          "174:   position: relative;",
          "175: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "198:   width: 12px;",
          "199: }",
          "209: .graphiql-container .toolbar-button {",
          "210:   background: #fdfdfd;",
          "211:   background: linear-gradient(#f9f9f9, #ececec);",
          "",
          "[Removed Lines]",
          "201: .editor-drag-bar {",
          "202:   width: 12px;",
          "203:   background-color: #eeeeee;",
          "204:   border-left: 1px solid #e0e0e0;",
          "205:   border-right: 1px solid #e0e0e0;",
          "206:   cursor: col-resize;",
          "207: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "370:   fill: #fff;",
          "371: }",
          "383: .graphiql-container .tabs {",
          "384:   height: 42px;",
          "385:   background-image: linear-gradient(#f7f7f7, #e2e2e2);",
          "",
          "[Removed Lines]",
          "373: .graphiql-container .variable-editor-title-text {",
          "374:   cursor: pointer;",
          "375:   display: inline-block;",
          "376:   color: gray;",
          "377: }",
          "379: .graphiql-container .variable-editor-title-text.active {",
          "380:   color: #000;",
          "381: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/graphiql/src/css/loading.css||packages/graphiql/src/css/loading.css": [
          "File: packages/graphiql/src/css/loading.css -> packages/graphiql/src/css/loading.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/graphiql/src/style.css||packages/graphiql/src/style.css": [
          "File: packages/graphiql/src/style.css -> packages/graphiql/src/style.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: .graphiql-container .graphiql-session {",
          "3:   background-color: var(--color-neutral-7);",
          "5:   border-radius: calc(var(--border-radius-12) + var(--px-8));",
          "6:   display: flex;",
          "7:   flex: 1;",
          "8:   max-height: 100%;",
          "9:   padding: var(--px-8);",
          "10: }",
          "13: .graphiql-container .graphiql-editors {",
          "14:   background-color: var(--color-neutral-0);",
          "15:   border-radius: calc(var(--border-radius-12));",
          "16:   display: flex;",
          "17:   flex: 1;",
          "18:   flex-direction: column;",
          "19: }",
          "20: .graphiql-container .graphiql-editors .CodeMirror-gutters {",
          "21:   background-color: var(--color-neutral-0);",
          "22: }",
          "25: .graphiql-container .graphiql-response {",
          "26:   flex: 1;",
          "27:   position: relative;",
          "28: }",
          "31: .graphiql-container .graphiql-query-editor {",
          "32:   border-bottom: 1px solid var(--color-neutral-15);",
          "33:   flex: 1;",
          "34:   padding: var(--px-16);",
          "35: }",
          "38: .graphiql-container .graphiql-editor {",
          "39:   height: 100%;",
          "40:   position: relative;",
          "41: }",
          "42: .graphiql-container .graphiql-editor.hidden {",
          "44:   position: absolute;",
          "45:   visibility: hidden;",
          "46: }",
          "49: .graphiql-container .graphiql-editor-tools {",
          "50:   align-items: center;",
          "51:   color: var(--color-neutral-60);",
          "52:   cursor: row-resize;",
          "53:   display: flex;",
          "54:   justify-content: space-between;",
          "55:   padding: var(--px-8);",
          "56: }",
          "57: .graphiql-container .graphiql-editor-tools .active {",
          "58:   color: var(--color-neutral-100);",
          "59: }",
          "62: .graphiql-container .graphiql-editor-tools-tabs {",
          "63:   cursor: auto;",
          "64:   display: flex;",
          "65: }",
          "66: .graphiql-container .graphiql-editor-tools-tabs > button {",
          "67:   padding: var(--px-8) var(--px-12);",
          "68: }",
          "69: .graphiql-container .graphiql-editor-tools-tabs > button + button {",
          "70:   margin-left: var(--px-8);",
          "71: }",
          "74: .graphiql-container .graphiql-editor-tool {",
          "75:   flex: 1;",
          "76:   padding: var(--px-16);",
          "77: }",
          "80: .graphiql-container .graphiql-spinner {",
          "81:   height: 56px;",
          "82:   left: 50%;",
          "83:   position: relative;",
          "84:   top: 50%;",
          "85:   transform: translate(-50%, -50%);",
          "86:   width: 56px;",
          "87: }",
          "88: .graphiql-container .graphiql-spinner::after {",
          "89:   animation: rotation 0.6s infinite linear;",
          "90:   border: 4px solid transparent;",
          "91:   border-radius: 100%;",
          "92:   border-top: 4px solid var(--color-neutral-40);",
          "93:   content: '';",
          "94:   display: inline-block;",
          "95:   height: 46px;",
          "96:   vertical-align: middle;",
          "97:   width: 46px;",
          "98: }",
          "99: @keyframes rotation {",
          "100:   from {",
          "101:     transform: rotate(0deg);",
          "102:   }",
          "103:   to {",
          "104:     transform: rotate(359deg);",
          "105:   }",
          "106: }",
          "109: .graphiql-container .graphiql-horizontal-drag-bar {",
          "110:   width: var(--px-12);",
          "111:   cursor: col-resize;",
          "112: }",
          "113: .graphiql-container .graphiql-horizontal-drag-bar:hover::after {",
          "114:   border: var(--px-2) solid var(--color-neutral-15);",
          "115:   border-radius: var(--border-radius-2);",
          "116:   content: '';",
          "117:   display: block;",
          "118:   height: 25%;",
          "119:   margin: 0 auto;",
          "120:   position: relative;",
          "122:   top: 37.5%;",
          "123:   width: 0;",
          "124: }",
          "127: .graphiql-container .graphiql-chevron-icon {",
          "128:   color: var(--color-neutral-40);",
          "129:   display: block;",
          "130:   height: var(--px-12);",
          "131:   padding: var(--px-12);",
          "132:   width: var(--px-12);",
          "133: }",
          "",
          "---------------"
        ],
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "806:   resolved \"https://registry.yarnpkg.com/@babel/helper-plugin-utils/-/helper-plugin-utils-7.16.7.tgz#aa3a8ab4c3cceff8e65eb9e73d87dc4ff320b2f5\"",
          "807:   integrity sha512-Qg3Nk7ZxpgMrsox6HreY1ZNKdBq7K72tDSliA6dCl5f007jR4ne8iD5UzuNnCJH2xBf2BEEVGr+/OL6Gdp7RxA==",
          "809: \"@babel/helper-plugin-utils@^7.18.6\":",
          "810:   version \"7.18.9\"",
          "811:   resolved \"https://registry.yarnpkg.com/@babel/helper-plugin-utils/-/helper-plugin-utils-7.18.9.tgz#4b8aea3b069d8cb8a72cdfe28ddf5ceca695ef2f\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "809: \"@babel/helper-plugin-utils@^7.17.12\":",
          "810:   version \"7.17.12\"",
          "811:   resolved \"https://registry.yarnpkg.com/@babel/helper-plugin-utils/-/helper-plugin-utils-7.17.12.tgz#86c2347da5acbf5583ba0a10aed4c9bf9da9cf96\"",
          "812:   integrity sha512-JDkf04mqtN3y4iAbO1hv9U2ARpPyPL1zqyWs/2WG1pgSq9llHFjStX5jdxb84himgJm+8Ng+x0oiWF/nw/XQKA==",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1672:   dependencies:",
          "1673:     \"@babel/helper-plugin-utils\" \"^7.16.7\"",
          "1675: \"@babel/plugin-syntax-logical-assignment-operators@^7.10.4\", \"@babel/plugin-syntax-logical-assignment-operators@^7.8.3\":",
          "1676:   version \"7.10.4\"",
          "1677:   resolved \"https://registry.yarnpkg.com/@babel/plugin-syntax-logical-assignment-operators/-/plugin-syntax-logical-assignment-operators-7.10.4.tgz#ca91ef46303530448b906652bac2e9fe9941f699\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1680: \"@babel/plugin-syntax-jsx@^7.17.12\":",
          "1681:   version \"7.17.12\"",
          "1682:   resolved \"https://registry.yarnpkg.com/@babel/plugin-syntax-jsx/-/plugin-syntax-jsx-7.17.12.tgz#834035b45061983a491f60096f61a2e7c5674a47\"",
          "1683:   integrity sha512-spyY3E3AURfxh/RHtjx5j6hs8am5NbUBGfcZ2vB3uShSpZdQyXSf5rR5Mk76vbtlAZOelyVQ71Fg0x9SG4fsog==",
          "1684:   dependencies:",
          "1685:     \"@babel/helper-plugin-utils\" \"^7.17.12\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2384:   dependencies:",
          "2385:     \"@babel/helper-plugin-utils\" \"^7.16.7\"",
          "2387: \"@babel/plugin-transform-react-jsx@^7.12.17\", \"@babel/plugin-transform-react-jsx@^7.13.12\":",
          "2388:   version \"7.13.12\"",
          "2389:   resolved \"https://registry.yarnpkg.com/@babel/plugin-transform-react-jsx/-/plugin-transform-react-jsx-7.13.12.tgz#1df5dfaf0f4b784b43e96da6f28d630e775f68b3\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2399: \"@babel/plugin-transform-react-jsx@^7.12.12\":",
          "2400:   version \"7.17.12\"",
          "2401:   resolved \"https://registry.yarnpkg.com/@babel/plugin-transform-react-jsx/-/plugin-transform-react-jsx-7.17.12.tgz#2aa20022709cd6a3f40b45d60603d5f269586dba\"",
          "2402:   integrity sha512-Lcaw8bxd1DKht3thfD4A12dqo1X16he1Lm8rIv8sTwjAYNInRS1qHa9aJoqvzpscItXvftKDCfaEQzwoVyXpEQ==",
          "2403:   dependencies:",
          "2404:     \"@babel/helper-annotate-as-pure\" \"^7.16.7\"",
          "2405:     \"@babel/helper-module-imports\" \"^7.16.7\"",
          "2406:     \"@babel/helper-plugin-utils\" \"^7.17.12\"",
          "2407:     \"@babel/plugin-syntax-jsx\" \"^7.17.12\"",
          "2408:     \"@babel/types\" \"^7.17.12\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3180:     lodash \"^4.17.19\"",
          "3181:     to-fast-properties \"^2.0.0\"",
          "3183: \"@babel/types@^7.14.9\", \"@babel/types@^7.15.4\", \"@babel/types@^7.15.6\":",
          "3184:   version \"7.15.6\"",
          "3185:   resolved \"https://registry.yarnpkg.com/@babel/types/-/types-7.15.6.tgz#99abdc48218b2881c058dd0a7ab05b99c9be758f\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3206: \"@babel/types@^7.12.6\", \"@babel/types@^7.17.12\":",
          "3207:   version \"7.18.4\"",
          "3208:   resolved \"https://registry.yarnpkg.com/@babel/types/-/types-7.18.4.tgz#27eae9b9fd18e9dccc3f9d6ad051336f307be354\"",
          "3209:   integrity sha512-ThN1mBcMq5pG/Vm2IcBmPPfyPXbd8S02rS+OBIDENdufvqC7Z/jHPCv9IcP01277aKtDI8g/2XysBN4hA8niiw==",
          "3210:   dependencies:",
          "3211:     \"@babel/helper-validator-identifier\" \"^7.16.7\"",
          "3212:     to-fast-properties \"^2.0.0\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4405:   dependencies:",
          "4406:     highlight.js \"^9.15.6\"",
          "4408: \"@szmarczak/http-timer@^1.1.2\":",
          "4409:   version \"1.1.2\"",
          "4410:   resolved \"https://registry.yarnpkg.com/@szmarczak/http-timer/-/http-timer-1.1.2.tgz#b1665e2c461a2cd92f4c1bbf50d5454de0d4b421\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4439: \"@svgr/babel-plugin-add-jsx-attribute@^5.4.0\":",
          "4440:   version \"5.4.0\"",
          "4441:   resolved \"https://registry.yarnpkg.com/@svgr/babel-plugin-add-jsx-attribute/-/babel-plugin-add-jsx-attribute-5.4.0.tgz#81ef61947bb268eb9d50523446f9c638fb355906\"",
          "4442:   integrity sha512-ZFf2gs/8/6B8PnSofI0inYXr2SDNTDScPXhN7k5EqD4aZ3gi6u+rbmZHVB8IM3wDyx8ntKACZbtXSm7oZGRqVg==",
          "4444: \"@svgr/babel-plugin-remove-jsx-attribute@^5.4.0\":",
          "4445:   version \"5.4.0\"",
          "4446:   resolved \"https://registry.yarnpkg.com/@svgr/babel-plugin-remove-jsx-attribute/-/babel-plugin-remove-jsx-attribute-5.4.0.tgz#6b2c770c95c874654fd5e1d5ef475b78a0a962ef\"",
          "4447:   integrity sha512-yaS4o2PgUtwLFGTKbsiAy6D0o3ugcUhWK0Z45umJ66EPWunAz9fuFw2gJuje6wqQvQWOTJvIahUwndOXb7QCPg==",
          "4449: \"@svgr/babel-plugin-remove-jsx-empty-expression@^5.0.1\":",
          "4450:   version \"5.0.1\"",
          "4451:   resolved \"https://registry.yarnpkg.com/@svgr/babel-plugin-remove-jsx-empty-expression/-/babel-plugin-remove-jsx-empty-expression-5.0.1.tgz#25621a8915ed7ad70da6cea3d0a6dbc2ea933efd\"",
          "4452:   integrity sha512-LA72+88A11ND/yFIMzyuLRSMJ+tRKeYKeQ+mR3DcAZ5I4h5CPWN9AHyUzJbWSYp/u2u0xhmgOe0+E41+GjEueA==",
          "4454: \"@svgr/babel-plugin-replace-jsx-attribute-value@^5.0.1\":",
          "4455:   version \"5.0.1\"",
          "4456:   resolved \"https://registry.yarnpkg.com/@svgr/babel-plugin-replace-jsx-attribute-value/-/babel-plugin-replace-jsx-attribute-value-5.0.1.tgz#0b221fc57f9fcd10e91fe219e2cd0dd03145a897\"",
          "4457:   integrity sha512-PoiE6ZD2Eiy5mK+fjHqwGOS+IXX0wq/YDtNyIgOrc6ejFnxN4b13pRpiIPbtPwHEc+NT2KCjteAcq33/F1Y9KQ==",
          "4459: \"@svgr/babel-plugin-svg-dynamic-title@^5.4.0\":",
          "4460:   version \"5.4.0\"",
          "4461:   resolved \"https://registry.yarnpkg.com/@svgr/babel-plugin-svg-dynamic-title/-/babel-plugin-svg-dynamic-title-5.4.0.tgz#139b546dd0c3186b6e5db4fefc26cb0baea729d7\"",
          "4462:   integrity sha512-zSOZH8PdZOpuG1ZVx/cLVePB2ibo3WPpqo7gFIjLV9a0QsuQAzJiwwqmuEdTaW2pegyBE17Uu15mOgOcgabQZg==",
          "4464: \"@svgr/babel-plugin-svg-em-dimensions@^5.4.0\":",
          "4465:   version \"5.4.0\"",
          "4466:   resolved \"https://registry.yarnpkg.com/@svgr/babel-plugin-svg-em-dimensions/-/babel-plugin-svg-em-dimensions-5.4.0.tgz#6543f69526632a133ce5cabab965deeaea2234a0\"",
          "4467:   integrity sha512-cPzDbDA5oT/sPXDCUYoVXEmm3VIoAWAPT6mSPTJNbQaBNUuEKVKyGH93oDY4e42PYHRW67N5alJx/eEol20abw==",
          "4469: \"@svgr/babel-plugin-transform-react-native-svg@^5.4.0\":",
          "4470:   version \"5.4.0\"",
          "4471:   resolved \"https://registry.yarnpkg.com/@svgr/babel-plugin-transform-react-native-svg/-/babel-plugin-transform-react-native-svg-5.4.0.tgz#00bf9a7a73f1cad3948cdab1f8dfb774750f8c80\"",
          "4472:   integrity sha512-3eYP/SaopZ41GHwXma7Rmxcv9uRslRDTY1estspeB1w1ueZWd/tPlMfEOoccYpEMZU3jD4OU7YitnXcF5hLW2Q==",
          "4474: \"@svgr/babel-plugin-transform-svg-component@^5.5.0\":",
          "4475:   version \"5.5.0\"",
          "4476:   resolved \"https://registry.yarnpkg.com/@svgr/babel-plugin-transform-svg-component/-/babel-plugin-transform-svg-component-5.5.0.tgz#583a5e2a193e214da2f3afeb0b9e8d3250126b4a\"",
          "4477:   integrity sha512-q4jSH1UUvbrsOtlo/tKcgSeiCHRSBdXoIoqX1pgcKK/aU3JD27wmMKwGtpB8qRYUYoyXvfGxUVKchLuR5pB3rQ==",
          "4479: \"@svgr/babel-preset@^5.5.0\":",
          "4480:   version \"5.5.0\"",
          "4481:   resolved \"https://registry.yarnpkg.com/@svgr/babel-preset/-/babel-preset-5.5.0.tgz#8af54f3e0a8add7b1e2b0fcd5a882c55393df327\"",
          "4482:   integrity sha512-4FiXBjvQ+z2j7yASeGPEi8VD/5rrGQk4Xrq3EdJmoZgz/tpqChpo5hgXDvmEauwtvOc52q8ghhZK4Oy7qph4ig==",
          "4483:   dependencies:",
          "4484:     \"@svgr/babel-plugin-add-jsx-attribute\" \"^5.4.0\"",
          "4485:     \"@svgr/babel-plugin-remove-jsx-attribute\" \"^5.4.0\"",
          "4486:     \"@svgr/babel-plugin-remove-jsx-empty-expression\" \"^5.0.1\"",
          "4487:     \"@svgr/babel-plugin-replace-jsx-attribute-value\" \"^5.0.1\"",
          "4488:     \"@svgr/babel-plugin-svg-dynamic-title\" \"^5.4.0\"",
          "4489:     \"@svgr/babel-plugin-svg-em-dimensions\" \"^5.4.0\"",
          "4490:     \"@svgr/babel-plugin-transform-react-native-svg\" \"^5.4.0\"",
          "4491:     \"@svgr/babel-plugin-transform-svg-component\" \"^5.5.0\"",
          "4493: \"@svgr/core@^5.5.0\":",
          "4494:   version \"5.5.0\"",
          "4495:   resolved \"https://registry.yarnpkg.com/@svgr/core/-/core-5.5.0.tgz#82e826b8715d71083120fe8f2492ec7d7874a579\"",
          "4496:   integrity sha512-q52VOcsJPvV3jO1wkPtzTuKlvX7Y3xIcWRpCMtBF3MrteZJtBfQw/+u0B1BHy5ColpQc1/YVTrPEtSYIMNZlrQ==",
          "4497:   dependencies:",
          "4498:     \"@svgr/plugin-jsx\" \"^5.5.0\"",
          "4499:     camelcase \"^6.2.0\"",
          "4500:     cosmiconfig \"^7.0.0\"",
          "4502: \"@svgr/hast-util-to-babel-ast@^5.5.0\":",
          "4503:   version \"5.5.0\"",
          "4504:   resolved \"https://registry.yarnpkg.com/@svgr/hast-util-to-babel-ast/-/hast-util-to-babel-ast-5.5.0.tgz#5ee52a9c2533f73e63f8f22b779f93cd432a5461\"",
          "4505:   integrity sha512-cAaR/CAiZRB8GP32N+1jocovUtvlj0+e65TB50/6Lcime+EA49m/8l+P2ko+XPJ4dw3xaPS3jOL4F2X4KWxoeQ==",
          "4506:   dependencies:",
          "4507:     \"@babel/types\" \"^7.12.6\"",
          "4509: \"@svgr/plugin-jsx@^5.5.0\":",
          "4510:   version \"5.5.0\"",
          "4511:   resolved \"https://registry.yarnpkg.com/@svgr/plugin-jsx/-/plugin-jsx-5.5.0.tgz#1aa8cd798a1db7173ac043466d7b52236b369000\"",
          "4512:   integrity sha512-V/wVh33j12hGh05IDg8GpIUXbjAPnTdPTKuP4VNLggnwaHMPNQNae2pRnyTAILWCQdz5GyMqtO488g7CKM8CBA==",
          "4513:   dependencies:",
          "4514:     \"@babel/core\" \"^7.12.3\"",
          "4515:     \"@svgr/babel-preset\" \"^5.5.0\"",
          "4516:     \"@svgr/hast-util-to-babel-ast\" \"^5.5.0\"",
          "4517:     svg-parser \"^2.0.2\"",
          "4519: \"@svgr/plugin-svgo@^5.5.0\":",
          "4520:   version \"5.5.0\"",
          "4521:   resolved \"https://registry.yarnpkg.com/@svgr/plugin-svgo/-/plugin-svgo-5.5.0.tgz#02da55d85320549324e201c7b2e53bf431fcc246\"",
          "4522:   integrity sha512-r5swKk46GuQl4RrVejVwpeeJaydoxkdwkM1mBKOgJLBUJPGaLci6ylg/IjhrRsREKDkr4kbMWdgOtbXEh0fyLQ==",
          "4523:   dependencies:",
          "4524:     cosmiconfig \"^7.0.0\"",
          "4525:     deepmerge \"^4.2.2\"",
          "4526:     svgo \"^1.2.2\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "16890:   resolved \"https://registry.yarnpkg.com/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz#6eda4bd344a3c94aea376d4cc31bc77311039e09\"",
          "16891:   integrity sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
          "16894:   version \"1.3.2\"",
          "16895:   resolved \"https://registry.yarnpkg.com/svgo/-/svgo-1.3.2.tgz#b6dc511c063346c9e415b81e43401145b96d4167\"",
          "16896:   integrity sha512-yhy/sQYxR5BkC98CY7o31VGsg014AKLEPxdfhora76l36hD9Rdy5NZA/Ocn6yayNPgSamYdtX2rFJdcv07AYVw==",
          "",
          "[Removed Lines]",
          "16893: svgo@^1.0.0:",
          "",
          "[Added Lines]",
          "17013: svg-parser@^2.0.2:",
          "17014:   version \"2.0.4\"",
          "17015:   resolved \"https://registry.yarnpkg.com/svg-parser/-/svg-parser-2.0.4.tgz#fdc2e29e13951736140b76cb122c8ee6630eb6b5\"",
          "17016:   integrity sha512-e4hG1hRwoOdRb37cIMSgzNsxyzKfayW6VOflrwvR+/bzrkyxY/31WkbgnQpgtrNp1SdpJvpUAGTa/ZoiPNDuRQ==",
          "17018: svgo@^1.0.0, svgo@^1.2.2:",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "17667:   resolved \"https://registry.yarnpkg.com/use/-/use-3.1.1.tgz#d50c8cac79a19fbc20f2911f56eb973f4e10070f\"",
          "17668:   integrity sha512-cwESVXlO3url9YWlFW/TA9cshCEhtu7IKJ/p5soJ/gGpj7vbvFrAY/eIioQ6Dw23KjZhYgiIo8HOs1nQ2vr/oQ==",
          "17671:   version \"1.0.2\"",
          "17672:   resolved \"https://registry.yarnpkg.com/util-deprecate/-/util-deprecate-1.0.2.tgz#450d4dc9fa70de732762fbd2d4a28981419a0ccf\"",
          "17673:   integrity sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8=",
          "",
          "[Removed Lines]",
          "17670: util-deprecate@^1.0.1, util-deprecate@~1.0.1:",
          "",
          "[Added Lines]",
          "17795: util-deprecate@^1.0.1, util-deprecate@^1.0.2, util-deprecate@~1.0.1:",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "17798:   resolved \"https://registry.yarnpkg.com/vite-plugin-monaco-editor/-/vite-plugin-monaco-editor-1.0.10.tgz#cd370f68d4121bced6f902c6284649cc8eca4170\"",
          "17799:   integrity sha512-7yTAFIE0SefjCmfnjrvXOl53wkxeSASc/ZIcB5tZeEK3vAmHhveV8y3f90Vp8b+PYdbUipjqf91mbFbSENkpcw==",
          "17801: vite@^2.7.0:",
          "17802:   version \"2.7.0\"",
          "17803:   resolved \"https://registry.yarnpkg.com/vite/-/vite-2.7.0.tgz#d3d753220d10afb055731cd7feaa8e87b2b779b6\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17926: vite-plugin-react-svg@^0.2.0:",
          "17927:   version \"0.2.0\"",
          "17928:   resolved \"https://registry.yarnpkg.com/vite-plugin-react-svg/-/vite-plugin-react-svg-0.2.0.tgz#e8464187919688e4405a6f52971375fa894d7532\"",
          "17929:   integrity sha512-Qza30GSMb9SBp9Ma5Bq1O/GmZzkB97Tn6JJGPonuJ2h8NRZWESK69ux9lZHcdqekLnVxvDxabcJVOrygAeSyxQ==",
          "17930:   dependencies:",
          "17931:     \"@babel/plugin-transform-react-jsx\" \"^7.12.12\"",
          "17932:     \"@svgr/core\" \"^5.5.0\"",
          "17933:     \"@svgr/plugin-jsx\" \"^5.5.0\"",
          "17934:     \"@svgr/plugin-svgo\" \"^5.5.0\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c83d1d4c518ad1b0862aae5f46359dfaee00dda1",
      "candidate_info": {
        "commit_hash": "c83d1d4c518ad1b0862aae5f46359dfaee00dda1",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/c83d1d4c518ad1b0862aae5f46359dfaee00dda1",
        "files": [
          ".changeset/bright-knives-cough.md",
          "packages/graphiql/src/components/GraphiQL.tsx",
          "packages/graphiql/src/components/QueryEditor.tsx",
          "packages/graphiql/src/utility/fillLeafs.ts",
          "packages/graphiql/src/utility/getQueryFacts.ts",
          "packages/graphiql/src/utility/mergeAst.ts"
        ],
        "message": "fix: schema prop type fix (#2029)",
        "before_after_code_files": [
          "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
          "packages/graphiql/src/components/QueryEditor.tsx||packages/graphiql/src/components/QueryEditor.tsx",
          "packages/graphiql/src/utility/fillLeafs.ts||packages/graphiql/src/utility/fillLeafs.ts",
          "packages/graphiql/src/utility/getQueryFacts.ts||packages/graphiql/src/utility/getQueryFacts.ts",
          "packages/graphiql/src/utility/mergeAst.ts||packages/graphiql/src/utility/mergeAst.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
          ],
          "candidate": [
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
          ]
        }
      },
      "candidate_diff": {
        "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx": [
          "File: packages/graphiql/src/components/GraphiQL.tsx -> packages/graphiql/src/components/GraphiQL.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "111: export type GraphiQLProps = {",
          "112:   fetcher: Fetcher;",
          "114:   validationRules?: ValidationRule[];",
          "115:   query?: string;",
          "116:   variables?: string;",
          "",
          "[Removed Lines]",
          "113:   schema?: GraphQLSchema;",
          "",
          "[Added Lines]",
          "113:   schema?: GraphQLSchema | null;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "145: };",
          "147: export type GraphiQLState = {",
          "149:   query?: string;",
          "150:   variables?: string;",
          "151:   headers?: string;",
          "",
          "[Removed Lines]",
          "148:   schema?: GraphQLSchema;",
          "",
          "[Added Lines]",
          "148:   schema?: GraphQLSchema | null;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1399:     query: string,",
          "1400:     operationName?: string,",
          "1401:     prevOperations?: OperationDefinitionNode[],",
          "1403:   ) => {",
          "1404:     const queryFacts = getOperationFacts(schema, query);",
          "1405:     if (queryFacts) {",
          "",
          "[Removed Lines]",
          "1402:     schema?: GraphQLSchema,",
          "",
          "[Added Lines]",
          "1402:     schema?: GraphQLSchema | null,",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/QueryEditor.tsx||packages/graphiql/src/components/QueryEditor.tsx": [
          "File: packages/graphiql/src/components/QueryEditor.tsx -> packages/graphiql/src/components/QueryEditor.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: const AUTO_COMPLETE_AFTER_KEY = /^[a-zA-Z0-9_@(]$/;",
          "25: type QueryEditorProps = {",
          "27:   validationRules?: ValidationRule[];",
          "28:   value?: string;",
          "29:   onEdit?: (value: string) => void;",
          "",
          "[Removed Lines]",
          "26:   schema?: GraphQLSchema;",
          "",
          "[Added Lines]",
          "26:   schema?: GraphQLSchema | null;",
          "",
          "---------------"
        ],
        "packages/graphiql/src/utility/fillLeafs.ts||packages/graphiql/src/utility/fillLeafs.ts": [
          "File: packages/graphiql/src/utility/fillLeafs.ts -> packages/graphiql/src/utility/fillLeafs.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "42: export function fillLeafs(",
          "44:   docString?: string,",
          "45:   getDefaultFieldNames?: GetDefaultFieldNamesFn,",
          "46: ) {",
          "",
          "[Removed Lines]",
          "43:   schema?: GraphQLSchema,",
          "",
          "[Added Lines]",
          "43:   schema?: GraphQLSchema | null,",
          "",
          "---------------"
        ],
        "packages/graphiql/src/utility/getQueryFacts.ts||packages/graphiql/src/utility/getQueryFacts.ts": [
          "File: packages/graphiql/src/utility/getQueryFacts.ts -> packages/graphiql/src/utility/getQueryFacts.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: export default function getOperationFacts(",
          "37:   documentStr?: string | null,",
          "38: ): QueryFacts | undefined {",
          "39:   if (!documentStr) {",
          "",
          "[Removed Lines]",
          "36:   schema?: GraphQLSchema,",
          "",
          "[Added Lines]",
          "36:   schema?: GraphQLSchema | null,",
          "",
          "---------------"
        ],
        "packages/graphiql/src/utility/mergeAst.ts||packages/graphiql/src/utility/mergeAst.ts": [
          "File: packages/graphiql/src/utility/mergeAst.ts -> packages/graphiql/src/utility/mergeAst.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "118: export default function mergeAST(",
          "119:   documentAST: DocumentNode,",
          "121: ): DocumentNode {",
          "",
          "[Removed Lines]",
          "120:   schema?: GraphQLSchema,",
          "",
          "[Added Lines]",
          "120:   schema?: GraphQLSchema | null,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "77450323570bdae6ad5278cdbd059534141e8fc9",
      "candidate_info": {
        "commit_hash": "77450323570bdae6ad5278cdbd059534141e8fc9",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/77450323570bdae6ad5278cdbd059534141e8fc9",
        "files": [
          ".changeset/five-pillows-fail.md",
          ".changeset/spotty-fans-lie.md",
          "packages/graphiql-react/src/icons/index.tsx",
          "packages/graphiql-react/src/icons/plus.svg",
          "packages/graphiql-react/src/style/root.css",
          "packages/graphiql-react/src/ui/tabs.css",
          "packages/graphiql-react/src/ui/tabs.tsx",
          "packages/graphiql-react/src/utility/compose.ts",
          "packages/graphiql/__mocks__/@graphiql/react.tsx",
          "packages/graphiql/cypress/integration/init.spec.ts",
          "packages/graphiql/cypress/integration/tabs.spec.ts",
          "packages/graphiql/resources/renderExample.js",
          "packages/graphiql/src/cdn.ts",
          "packages/graphiql/src/components/GraphiQL.tsx",
          "packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx",
          "packages/graphiql/src/css/app.css",
          "packages/graphiql/src/style.css"
        ],
        "message": "[redesign] implement new design for tabs (#2592)\n\n* implement new design for tabs\n\n* add back `tab` role",
        "before_after_code_files": [
          "packages/graphiql-react/src/icons/index.tsx||packages/graphiql-react/src/icons/index.tsx",
          "packages/graphiql-react/src/style/root.css||packages/graphiql-react/src/style/root.css",
          "packages/graphiql-react/src/ui/tabs.css||packages/graphiql-react/src/ui/tabs.css",
          "packages/graphiql-react/src/ui/tabs.tsx||packages/graphiql-react/src/ui/tabs.tsx",
          "packages/graphiql-react/src/utility/compose.ts||packages/graphiql-react/src/utility/compose.ts",
          "packages/graphiql/__mocks__/@graphiql/react.tsx||packages/graphiql/__mocks__/@graphiql/react.tsx",
          "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts",
          "packages/graphiql/cypress/integration/tabs.spec.ts||packages/graphiql/cypress/integration/tabs.spec.ts",
          "packages/graphiql/resources/renderExample.js||packages/graphiql/resources/renderExample.js",
          "packages/graphiql/src/cdn.ts||packages/graphiql/src/cdn.ts",
          "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
          "packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx||packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx",
          "packages/graphiql/src/css/app.css||packages/graphiql/src/css/app.css",
          "packages/graphiql/src/style.css||packages/graphiql/src/style.css"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts",
            "packages/graphiql/resources/renderExample.js||packages/graphiql/resources/renderExample.js",
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
          ],
          "candidate": [
            "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts",
            "packages/graphiql/resources/renderExample.js||packages/graphiql/resources/renderExample.js",
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
          ]
        }
      },
      "candidate_diff": {
        "packages/graphiql-react/src/icons/index.tsx||packages/graphiql-react/src/icons/index.tsx": [
          "File: packages/graphiql-react/src/icons/index.tsx -> packages/graphiql-react/src/icons/index.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: import _MergeIcon from './merge.svg';",
          "19: import _PenIcon from './pen.svg';",
          "20: import _PlayIcon from './play.svg';",
          "21: import _PrettifyIcon from './prettify.svg';",
          "22: import _ReloadIcon from './reload.svg';",
          "23: import _RootTypeIcon from './root-type.svg';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: import _PlusIcon from './plus.svg';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68: export const MergeIcon = generateIcon(_MergeIcon, 'merge icon');",
          "69: export const PenIcon = generateIcon(_PenIcon, 'pen icon');",
          "70: export const PlayIcon = generateIcon(_PlayIcon, 'play icon');",
          "71: export const PrettifyIcon = generateIcon(_PrettifyIcon, 'prettify icon');",
          "72: export const ReloadIcon = generateIcon(_ReloadIcon, 'reload icon');",
          "73: export const RootTypeIcon = generateIcon(_RootTypeIcon, 'root type icon');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72: export const PlusIcon = generateIcon(_PlusIcon, 'plus icon');",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/style/root.css||packages/graphiql-react/src/style/root.css": [
          "File: packages/graphiql-react/src/style/root.css -> packages/graphiql-react/src/style/root.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:   --sidebar-width: 44px;",
          "63:   --toolbar-width: 40px;",
          "64: }",
          "66: .graphiql-container,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64:   --session-header-height: 51px;",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/ui/tabs.css||packages/graphiql-react/src/ui/tabs.css": [
          "File: packages/graphiql-react/src/ui/tabs.css -> packages/graphiql-react/src/ui/tabs.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: .graphiql-tabs {",
          "2:   display: flex;",
          "3:   overflow-y: auto;",
          "4:   padding: var(--px-12);",
          "6:   & > :not(:first-child) {",
          "7:     margin-left: var(--px-12);",
          "8:   }",
          "9: }",
          "11: .graphiql-tab {",
          "12:   align-items: stretch;",
          "13:   border-radius: var(--border-radius-8);",
          "14:   color: var(--color-neutral-60);",
          "15:   display: flex;",
          "17:   & > button.graphiql-tab-close {",
          "18:     visibility: hidden;",
          "19:   }",
          "20:   &.graphiql-tab-active > button.graphiql-tab-close,",
          "21:   &:hover > button.graphiql-tab-close,",
          "22:   &:focus-within > button.graphiql-tab-close {",
          "23:     visibility: unset;",
          "24:   }",
          "26:   &.graphiql-tab-active {",
          "27:     background-color: var(--color-neutral-15);",
          "28:     color: var(--color-neutral-100);",
          "29:   }",
          "30: }",
          "32: button.graphiql-tab-button {",
          "33:   padding: var(--px-4) 0 var(--px-4) var(--px-8);",
          "34: }",
          "36: button.graphiql-tab-close {",
          "37:   align-items: center;",
          "38:   display: flex;",
          "39:   padding: var(--px-4) var(--px-8);",
          "41:   & > svg {",
          "42:     height: var(--px-8);",
          "43:     width: var(--px-8);",
          "44:   }",
          "45: }",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/ui/tabs.tsx||packages/graphiql-react/src/ui/tabs.tsx": [
          "File: packages/graphiql-react/src/ui/tabs.tsx -> packages/graphiql-react/src/ui/tabs.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: type TabProps = {",
          "24: };",
          "30:   return (",
          "33:       role=\"tab\"",
          "34:       type=\"button\"",
          "39:     >",
          "45:   );",
          "46: }",
          "49:   return (",
          "51:       type=\"button\"",
          "55:     >",
          "58:   );",
          "59: }",
          "69:   return (",
          "71:       {props.children}",
          "72:     </div>",
          "73:   );",
          "",
          "[Removed Lines]",
          "1: function TabCloseButton(props: { onClick: () => void }) {",
          "2:   return (",
          "3:     <div",
          "4:       role=\"button\"",
          "5:       aria-pressed={false}",
          "6:       className=\"close\"",
          "7:       aria-label=\"Close Tab\"",
          "8:       title=\"Close Tab\"",
          "9:       onClick={ev => {",
          "10:         ev.stopPropagation();",
          "11:         props.onClick();",
          "12:       }}",
          "13:     />",
          "14:   );",
          "15: }",
          "18:   isActive: boolean;",
          "19:   title: string;",
          "20:   isCloseable: boolean;",
          "21:   onSelect: () => void;",
          "22:   onClose: () => void;",
          "23:   tabProps?: React.ButtonHTMLAttributes<{}>;",
          "29: export function Tab(props: TabProps): React.ReactElement {",
          "31:     <button",
          "32:       {...props.tabProps}",
          "35:       aria-selected={props.isActive}",
          "36:       title={props.title}",
          "37:       className={`tab${props.isActive ? ' active' : ''}`}",
          "38:       onClick={props.onSelect}",
          "40:       {props.title}",
          "41:       {props.isCloseable ? (",
          "42:         <TabCloseButton onClick={() => props.onClose()} />",
          "43:       ) : null}",
          "44:     </button>",
          "48: export function TabAddButton(props: { onClick: () => void }) {",
          "50:     <button",
          "52:       onClick={props.onClick}",
          "53:       className=\"tab-add\"",
          "54:       title=\"Create new tab\"",
          "56:       <span>+</span>",
          "57:     </button>",
          "61: type TabsProps = {",
          "62:   children: Array<React.ReactNode>;",
          "63:   tabsProps?: React.HTMLAttributes<{}>;",
          "64: };",
          "68: export function Tabs(props: TabsProps) {",
          "70:     <div role=\"tablist\" className=\"tabs\" {...props.tabsProps}>",
          "",
          "[Added Lines]",
          "1: import { CloseIcon } from '../icons';",
          "2: import { compose } from '../utility/compose';",
          "3: import { UnStyledButton } from './button';",
          "5: import './tabs.css';",
          "8:   isActive?: boolean;",
          "11: export function Tab({",
          "12:   isActive,",
          "13:   ...props",
          "14: }: TabProps & JSX.IntrinsicElements['div']) {",
          "16:     <div",
          "17:       {...props}",
          "19:       aria-selected={isActive}",
          "20:       className={compose(",
          "21:         'graphiql-tab',",
          "22:         isActive ? 'graphiql-tab-active' : '',",
          "23:         props.className,",
          "24:       )}",
          "25:     >",
          "26:       {props.children}",
          "27:     </div>",
          "28:   );",
          "29: }",
          "31: function TabButton(props: JSX.IntrinsicElements['button']) {",
          "32:   return (",
          "33:     <UnStyledButton",
          "34:       {...props}",
          "36:       className={compose('graphiql-tab-button', props.className)}",
          "38:       {props.children}",
          "39:     </UnStyledButton>",
          "43: Tab.Button = TabButton;",
          "45: function TabClose(props: JSX.IntrinsicElements['button']) {",
          "47:     <UnStyledButton",
          "48:       aria-label=\"Close Tab\"",
          "49:       title=\"Close Tab\"",
          "50:       {...props}",
          "52:       className={compose('graphiql-tab-close', props.className)}",
          "54:       <CloseIcon />",
          "55:     </UnStyledButton>",
          "59: Tab.Close = TabClose;",
          "61: export function Tabs(props: JSX.IntrinsicElements['div']) {",
          "63:     <div",
          "64:       {...props}",
          "65:       role=\"tablist\"",
          "66:       className={compose('graphiql-tabs', props.className)}",
          "67:     >",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/utility/compose.ts||packages/graphiql-react/src/utility/compose.ts": [
          "File: packages/graphiql-react/src/utility/compose.ts -> packages/graphiql-react/src/utility/compose.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: export function compose(...classes: (string | null | undefined)[]) {",
          "2:   let result = '';",
          "3:   for (const c of classes) {",
          "4:     if (c) {",
          "5:       result += (result ? ' ' : '') + c;",
          "6:     }",
          "7:   }",
          "8:   return result;",
          "9: }",
          "",
          "---------------"
        ],
        "packages/graphiql/__mocks__/@graphiql/react.tsx||packages/graphiql/__mocks__/@graphiql/react.tsx": [
          "File: packages/graphiql/__mocks__/@graphiql/react.tsx -> packages/graphiql/__mocks__/@graphiql/react.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:   onHasCompletion,",
          "56:   PenIcon,",
          "57:   PlayIcon,",
          "58:   PrettifyIcon,",
          "59:   ReloadIcon,",
          "60:   RootTypeIcon,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58:   PlusIcon,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70:   StorageContext,",
          "71:   StorageContextProvider,",
          "72:   Tab,",
          "74:   Tabs,",
          "75:   ToolbarButton,",
          "76:   TypeDocumentation,",
          "",
          "[Removed Lines]",
          "73:   TabAddButton,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts": [
          "File: packages/graphiql/cypress/integration/init.spec.ts -> packages/graphiql/cypress/integration/init.spec.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:     const containers = [",
          "32:       '#graphiql',",
          "33:       '.graphiql-container',",
          "36:       '.graphiql-editors',",
          "37:       '.graphiql-response',",
          "38:       '.graphiql-editor-tool',",
          "",
          "[Removed Lines]",
          "34:       '.topBarWrap',",
          "35:       '.editorWrap',",
          "",
          "[Added Lines]",
          "34:       '.graphiql-sessions',",
          "",
          "---------------"
        ],
        "packages/graphiql/cypress/integration/tabs.spec.ts||packages/graphiql/cypress/integration/tabs.spec.ts": [
          "File: packages/graphiql/cypress/integration/tabs.spec.ts -> packages/graphiql/cypress/integration/tabs.spec.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: describe('Tabs', () => {",
          "2:   it('Should store editor contents when switching between tabs', () => {",
          "3:     cy.visit('/?query=');",
          "7:     cy.get('.graphiql-query-editor textarea')",
          "8:       .type('{id', { force: true })",
          "9:       .wait(500);",
          "13:     cy.clickExecuteQuery().wait(500);",
          "19:     cy.get('.graphiql-query-editor textarea')",
          "20:       .type('query Foo {image', { force: true })",
          "21:       .wait(500);",
          "25:     cy.get('.graphiql-editor-tool textarea')",
          "",
          "[Removed Lines]",
          "4:     cy.get('#session-tab-0').should('have.text', '<untitled>');",
          "10:     cy.get('#session-tab-0').should('have.text', '<untitled>');",
          "16:     cy.get('.tab-add').click();",
          "22:     cy.get('#session-tab-1').should('have.text', 'Foo');",
          "",
          "[Added Lines]",
          "6:     cy.get('#graphiql-session-tab-0').should('not.exist');",
          "17:     cy.get('.graphiql-tab-add').click();",
          "23:     cy.get('#graphiql-session-tab-1').should('have.text', 'Foo');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36:     cy.clickExecuteQuery().wait(500);",
          "46:     cy.assertHasValues({",
          "",
          "[Removed Lines]",
          "39:     cy.get('#session-tab-0').click();",
          "42:     cy.get('#session-tab-0').should('have.text', '<untitled>');",
          "43:     cy.get('#session-tab-1').should('have.text', 'Foo');",
          "",
          "[Added Lines]",
          "40:     cy.get('#graphiql-session-tab-0').click();",
          "43:     cy.get('#graphiql-session-tab-0').should('have.text', '<untitled>');",
          "44:     cy.get('#graphiql-session-tab-1').should('have.text', 'Foo');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "51:     });",
          "61:     cy.assertHasValues({",
          "",
          "[Removed Lines]",
          "54:     cy.get('#session-tab-1').click();",
          "57:     cy.get('#session-tab-0').should('have.text', '<untitled>');",
          "58:     cy.get('#session-tab-1').should('have.text', 'Foo');",
          "",
          "[Added Lines]",
          "55:     cy.get('#graphiql-session-tab-1').click();",
          "58:     cy.get('#graphiql-session-tab-0').should('have.text', '<untitled>');",
          "59:     cy.get('#graphiql-session-tab-1').should('have.text', 'Foo');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "66:     });",
          "75:     cy.assertHasValues({",
          "",
          "[Removed Lines]",
          "69:     cy.get('#session-tab-1 .close').click();",
          "72:     cy.get('#session-tab-0').should('have.text', '<untitled>');",
          "",
          "[Added Lines]",
          "70:     cy.get('#graphiql-session-tab-1 + .graphiql-tab-close').click();",
          "73:     cy.get('#graphiql-session-tab-0').should('not.exist');",
          "",
          "---------------"
        ],
        "packages/graphiql/resources/renderExample.js||packages/graphiql/resources/renderExample.js": [
          "File: packages/graphiql/resources/renderExample.js -> packages/graphiql/resources/renderExample.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "104:     headerEditorEnabled: true,",
          "105:     shouldPersistHeaders: true,",
          "106:     inputValueDeprecation: GraphQLVersion.includes('15.5') ? undefined : true,",
          "110:   }),",
          "111:   document.getElementById('graphiql'),",
          "112: );",
          "",
          "[Removed Lines]",
          "107:     tabs: {",
          "108:       onTabChange: onTabChange,",
          "109:     },",
          "",
          "[Added Lines]",
          "107:     onTabChange,",
          "",
          "---------------"
        ],
        "packages/graphiql/src/cdn.ts||packages/graphiql/src/cdn.ts": [
          "File: packages/graphiql/src/cdn.ts -> packages/graphiql/src/cdn.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: import '@graphiql/react/dist/style.css';",
          "14: import './style.css';",
          "19: import { GraphiQL } from './components/GraphiQL';",
          "",
          "[Removed Lines]",
          "17: import './css/app.css';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx": [
          "File: packages/graphiql/src/components/GraphiQL.tsx -> packages/graphiql/src/components/GraphiQL.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:   HistoryIcon,",
          "39:   KeyboardShortcutIcon,",
          "40:   MergeIcon,",
          "41:   PrettifyIcon,",
          "42:   QueryEditor,",
          "43:   ReloadIcon,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41:   PlusIcon,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47:   Spinner,",
          "48:   StorageContextProvider,",
          "49:   Tab,",
          "51:   Tabs,",
          "52:   ToolbarButton,",
          "53:   UnStyledButton,",
          "",
          "[Removed Lines]",
          "50:   TabAddButton,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "295:   onSchemaChange?: (schema: GraphQLSchema) => void;",
          "314:   children?: ReactNode;",
          "315: };",
          "",
          "[Removed Lines]",
          "299:   beforeTopBarContent?: React.ReactElement | null;",
          "305:   tabs?:",
          "306:     | boolean",
          "307:     | {",
          "311:         onTabChange?: (tab: TabsState) => void;",
          "312:       };",
          "",
          "[Added Lines]",
          "300:   onTabChange?: (tab: TabsState) => void;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "449:     maxHistoryLength,",
          "450:     onEditOperationName,",
          "451:     onSchemaChange,",
          "452:     onToggleHistory,",
          "453:     onToggleDocs,",
          "454:     operationName,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "440:     onTabChange,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "480:           externalFragments={externalFragments}",
          "481:           headers={headers}",
          "482:           onEditOperationName={onEditOperationName}",
          "486:           query={query}",
          "487:           response={response}",
          "488:           shouldPersistHeaders={shouldPersistHeaders}",
          "",
          "[Removed Lines]",
          "483:           onTabChange={",
          "484:             typeof props.tabs === 'object' ? props.tabs.onTabChange : undefined",
          "485:           }",
          "",
          "[Added Lines]",
          "472:           onTabChange={onTabChange}",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "533:   | 'maxHistoryLength'",
          "534:   | 'onEditOperationName'",
          "535:   | 'onSchemaChange'",
          "536:   | 'onToggleDocs'",
          "537:   | 'onToggleHistory'",
          "538:   | 'operationName'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "523:   | 'onTabChange'",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "814:             ) : null}",
          "815:           </div>",
          "816:           <div ref={this.props.pluginResize.secondRef}>",
          "857:                 </Tabs>",
          "859:               <div",
          "860:                 role=\"tabpanel\"",
          "861:                 id=\"graphiql-session\"",
          "862:                 className=\"graphiql-session\"",
          "864:               >",
          "865:                 <div ref={this.props.editorResize.firstRef}>",
          "867:                     <div ref={this.props.editorToolsResize.firstRef}>",
          "868:                       <section",
          "869:                         className=\"graphiql-query-editor\"",
          "",
          "[Removed Lines]",
          "817:             <div className=\"editorWrap\">",
          "818:               <div className=\"topBarWrap\">",
          "819:                 {this.props.beforeTopBarContent}",
          "820:                 <div className=\"topBar\">{logo}</div>",
          "821:               </div>",
          "822:               {this.props.tabs ? (",
          "823:                 <Tabs",
          "824:                   tabsProps={{",
          "825:                     'aria-label': 'Select active operation',",
          "826:                   }}",
          "827:                 >",
          "828:                   {this.props.editorContext.tabs.map((tab, index) => (",
          "829:                     <Tab",
          "830:                       key={tab.id}",
          "831:                       isActive={",
          "832:                         index === this.props.editorContext.activeTabIndex",
          "833:                       }",
          "834:                       title={tab.title}",
          "835:                       isCloseable={this.props.editorContext.tabs.length > 1}",
          "836:                       onSelect={() => {",
          "837:                         this.props.executionContext.stop();",
          "838:                         this.props.editorContext.changeTab(index);",
          "839:                       }}",
          "840:                       onClose={() => {",
          "841:                         if (this.props.editorContext.activeTabIndex === index) {",
          "842:                           this.props.executionContext.stop();",
          "843:                         }",
          "844:                         this.props.editorContext.closeTab(index);",
          "845:                       }}",
          "846:                       tabProps={{",
          "847:                         'aria-controls': 'graphiql-session',",
          "848:                         id: `session-tab-${index}`,",
          "849:                       }}",
          "850:                     />",
          "851:                   ))}",
          "852:                   <TabAddButton",
          "853:                     onClick={() => {",
          "854:                       this.props.editorContext.addTab();",
          "855:                     }}",
          "856:                   />",
          "858:               ) : null}",
          "863:                 aria-labelledby={`session-tab-${this.props.editorContext.activeTabIndex}`}",
          "866:                   <div className=\"graphiql-editors\">",
          "",
          "[Added Lines]",
          "805:             <div className=\"graphiql-sessions\">",
          "806:               <div className=\"graphiql-session-header\">",
          "807:                 <Tabs aria-label=\"Select active operation\">",
          "808:                   {this.props.editorContext.tabs.length > 1 ? (",
          "809:                     <>",
          "810:                       {this.props.editorContext.tabs.map((tab, index) => (",
          "811:                         <Tab",
          "812:                           key={tab.id}",
          "813:                           isActive={",
          "814:                             index === this.props.editorContext.activeTabIndex",
          "815:                           }",
          "816:                           title={tab.title}",
          "817:                         >",
          "818:                           <Tab.Button",
          "819:                             aria-controls=\"graphiql-session\"",
          "820:                             id={`graphiql-session-tab-${index}`}",
          "821:                             onClick={() => {",
          "822:                               this.props.executionContext.stop();",
          "823:                               this.props.editorContext.changeTab(index);",
          "824:                             }}",
          "825:                           >",
          "826:                             {tab.title}",
          "827:                           </Tab.Button>",
          "828:                           <Tab.Close",
          "829:                             onClick={() => {",
          "830:                               if (",
          "831:                                 this.props.editorContext.activeTabIndex ===",
          "832:                                 index",
          "833:                               ) {",
          "834:                                 this.props.executionContext.stop();",
          "835:                               }",
          "836:                               this.props.editorContext.closeTab(index);",
          "837:                             }}",
          "838:                           />",
          "839:                         </Tab>",
          "840:                       ))}",
          "841:                       <UnStyledButton",
          "842:                         type=\"button\"",
          "843:                         className=\"graphiql-tab-add\"",
          "844:                         onClick={() => {",
          "845:                           this.props.editorContext.addTab();",
          "846:                         }}",
          "847:                       >",
          "848:                         <PlusIcon />",
          "849:                       </UnStyledButton>",
          "850:                     </>",
          "851:                   ) : null}",
          "853:                 <div className=\"graphiql-session-header-right\">",
          "854:                   {this.props.editorContext.tabs.length === 1 ? (",
          "855:                     <UnStyledButton",
          "856:                       type=\"button\"",
          "857:                       className=\"graphiql-tab-add\"",
          "858:                       onClick={() => {",
          "859:                         this.props.editorContext.addTab();",
          "860:                       }}",
          "861:                     >",
          "862:                       <PlusIcon />",
          "863:                     </UnStyledButton>",
          "864:                   ) : null}",
          "865:                   <div className=\"graphiql-logo\">{logo}</div>",
          "866:                 </div>",
          "867:               </div>",
          "872:                 aria-labelledby={`graphiql-session-tab-${this.props.editorContext.activeTabIndex}`}",
          "875:                   <div",
          "876:                     className={`graphiql-editors${",
          "877:                       this.props.editorContext.tabs.length === 1",
          "878:                         ? ' full-height'",
          "879:                         : ''",
          "880:                     }`}",
          "881:                   >",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx||packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx": [
          "File: packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx -> packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "597:   });",
          "599:   describe('Tabs', () => {",
          "601:       const { container } = render(<GraphiQL fetcher={noOpFetcher} />);",
          "629:     });",
          "630:     it('each tab has a close button when multiple tabs are open', () => {",
          "637:     });",
          "638:     it('close button removes a tab', () => {",
          "645:     });",
          "646:   });",
          "647: });",
          "",
          "[Removed Lines]",
          "600:     it('not enabled by default', () => {",
          "602:       expect(container.querySelector('.tabs')).not.toBeInTheDocument();",
          "603:     });",
          "604:     it('enable tabs via \"tabs\" property boolean', () => {",
          "605:       const { container } = render(<GraphiQL fetcher={noOpFetcher} tabs />);",
          "606:       expect(container.querySelector('.tabs')).toBeInTheDocument();",
          "607:     });",
          "608:     it('enable tabs via \"tabs\" property object', () => {",
          "609:       const { container } = render(",
          "610:         <GraphiQL fetcher={noOpFetcher} tabs={{}} />,",
          "611:       );",
          "612:       expect(container.querySelector('.tabs')).toBeInTheDocument();",
          "613:     });",
          "614:     it('only one tab is open by default', () => {",
          "615:       const { container } = render(<GraphiQL fetcher={noOpFetcher} tabs />);",
          "616:       expect(container.querySelectorAll('.tabs .tab')).toHaveLength(1);",
          "617:     });",
          "618:     it('single tab has no close button', () => {",
          "619:       const { container } = render(<GraphiQL fetcher={noOpFetcher} tabs />);",
          "620:       expect(container.querySelector('.tab .close')).not.toBeInTheDocument();",
          "621:     });",
          "622:     it('open multiple tabs', () => {",
          "623:       const { container } = render(<GraphiQL fetcher={noOpFetcher} tabs />);",
          "624:       expect(container.querySelectorAll('.tabs .tab')).toHaveLength(1);",
          "625:       fireEvent.click(container.querySelector('.tab-add'));",
          "626:       expect(container.querySelectorAll('.tabs .tab')).toHaveLength(2);",
          "627:       fireEvent.click(container.querySelector('.tab-add'));",
          "628:       expect(container.querySelectorAll('.tabs .tab')).toHaveLength(3);",
          "631:       const { container } = render(<GraphiQL fetcher={noOpFetcher} tabs />);",
          "632:       expect(container.querySelectorAll('.tab .close')).toHaveLength(0);",
          "633:       fireEvent.click(container.querySelector('.tab-add'));",
          "634:       expect(container.querySelectorAll('.tab .close')).toHaveLength(2);",
          "635:       fireEvent.click(container.querySelector('.tab-add'));",
          "636:       expect(container.querySelectorAll('.tab .close')).toHaveLength(3);",
          "639:       const { container } = render(<GraphiQL fetcher={noOpFetcher} tabs />);",
          "640:       fireEvent.click(container.querySelector('.tab-add'));",
          "641:       expect(container.querySelectorAll('.tab .close')).toHaveLength(2);",
          "642:       fireEvent.click(container.querySelector('.tab .close'));",
          "643:       expect(container.querySelectorAll('.tabs .tab')).toHaveLength(1);",
          "644:       expect(container.querySelectorAll('.tab .close')).toHaveLength(0);",
          "",
          "[Added Lines]",
          "600:     it('show tabs if there are more than one', () => {",
          "603:       expect(",
          "604:         container.querySelectorAll('.graphiql-tabs .graphiql-tab'),",
          "605:       ).toHaveLength(0);",
          "607:       fireEvent.click(container.querySelector('.graphiql-tab-add'));",
          "608:       expect(",
          "609:         container.querySelectorAll('.graphiql-tabs .graphiql-tab'),",
          "610:       ).toHaveLength(2);",
          "612:       fireEvent.click(container.querySelector('.graphiql-tab-add'));",
          "613:       expect(",
          "614:         container.querySelectorAll('.graphiql-tabs .graphiql-tab'),",
          "615:       ).toHaveLength(3);",
          "618:       const { container } = render(<GraphiQL fetcher={noOpFetcher} />);",
          "620:       expect(",
          "621:         container.querySelectorAll('.graphiql-tab .graphiql-tab-close'),",
          "622:       ).toHaveLength(0);",
          "624:       fireEvent.click(container.querySelector('.graphiql-tab-add'));",
          "625:       expect(",
          "626:         container.querySelectorAll('.graphiql-tab .graphiql-tab-close'),",
          "627:       ).toHaveLength(2);",
          "629:       fireEvent.click(container.querySelector('.graphiql-tab-add'));",
          "630:       expect(",
          "631:         container.querySelectorAll('.graphiql-tab .graphiql-tab-close'),",
          "632:       ).toHaveLength(3);",
          "635:       const { container } = render(<GraphiQL fetcher={noOpFetcher} />);",
          "637:       fireEvent.click(container.querySelector('.graphiql-tab-add'));",
          "639:       expect(",
          "640:         container.querySelectorAll('.graphiql-tab .graphiql-tab-close'),",
          "641:       ).toHaveLength(2);",
          "643:       fireEvent.click(",
          "644:         container.querySelector('.graphiql-tab .graphiql-tab-close'),",
          "645:       );",
          "646:       expect(",
          "647:         container.querySelectorAll('.graphiql-tabs .graphiql-tab'),",
          "648:       ).toHaveLength(0);",
          "649:       expect(",
          "650:         container.querySelectorAll('.graphiql-tab .graphiql-tab-close'),",
          "651:       ).toHaveLength(0);",
          "",
          "---------------"
        ],
        "packages/graphiql/src/css/app.css||packages/graphiql/src/css/app.css": [
          "File: packages/graphiql/src/css/app.css -> packages/graphiql/src/css/app.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/graphiql/src/style.css||packages/graphiql/src/style.css": [
          "File: packages/graphiql/src/style.css -> packages/graphiql/src/style.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:   flex: 1;",
          "40: }",
          "44:   background-color: var(--color-neutral-7);",
          "46:   border-radius: calc(var(--border-radius-12) + var(--px-8));",
          "47:   display: flex;",
          "48:   flex: 1;",
          "49:   max-height: 100%;",
          "51: }",
          "",
          "[Removed Lines]",
          "43: .graphiql-container .graphiql-session {",
          "50:   padding: var(--px-8);",
          "",
          "[Added Lines]",
          "43: .graphiql-container .graphiql-sessions {",
          "48:   flex-direction: column;",
          "51:   margin: var(--px-16);",
          "52:   margin-left: 0;",
          "53: }",
          "56: .graphiql-container .graphiql-session-header {",
          "57:   align-items: center;",
          "58:   display: flex;",
          "59:   justify-content: space-between;",
          "60:   height: var(--session-header-height);",
          "61: }",
          "64: button.graphiql-tab-add {",
          "65:   margin-left: var(--px-12);",
          "66: }",
          "67: button.graphiql-tab-add > svg {",
          "68:   color: var(--color-neutral-60);",
          "69:   display: block;",
          "70:   height: var(--px-16);",
          "71:   width: var(--px-16);",
          "72: }",
          "75: .graphiql-container .graphiql-session-header-right {",
          "76:   align-items: center;",
          "77:   display: flex;",
          "78: }",
          "81: .graphiql-container .graphiql-logo {",
          "82:   color: var(--color-neutral-60);",
          "83:   font-size: var(--font-size-h4);",
          "84:   font-weight: var(--font-weight-medium);",
          "85:   padding: var(--px-12) var(--px-16);",
          "86: }",
          "89: .graphiql-container .graphiql-session {",
          "90:   display: flex;",
          "91:   flex: 1;",
          "92:   padding: 0 var(--px-8) var(--px-8);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58:   flex: 1;",
          "59:   flex-direction: column;",
          "60: }",
          "63: .graphiql-container .graphiql-query-editor {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103: .graphiql-container .graphiql-editors.full-height {",
          "104:   margin-top: calc(var(--px-8) - var(--session-header-height));",
          "105: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "128: .graphiql-container .graphiql-response {",
          "129:   display: flex;",
          "130:   flex: 1;",
          "131:   flex-direction: column;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "174:   --editor-background: var(--color-neutral-7);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a44772d6af97254c4f159ea7237e842a3e3719e8",
      "candidate_info": {
        "commit_hash": "a44772d6af97254c4f159ea7237e842a3e3719e8",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/a44772d6af97254c4f159ea7237e842a3e3719e8",
        "files": [
          ".changeset/cuddly-moons-shave.md",
          "examples/monaco-graphql-webpack/src/schema.ts",
          "packages/graphql-language-service/package.json",
          "packages/graphql-language-service/src/index.ts",
          "packages/graphql-language-service/src/schemaLoader.ts",
          "packages/monaco-graphql/package.json",
          "packages/monaco-graphql/src/GraphQLWorker.ts",
          "packages/monaco-graphql/src/LanguageService.ts",
          "packages/monaco-graphql/src/api.ts",
          "packages/monaco-graphql/src/schemaLoader.ts",
          "packages/monaco-graphql/src/typings/index.ts",
          "packages/monaco-graphql/src/typings/picomatch-browser.ts",
          "packages/monaco-graphql/src/utils.ts",
          "yarn.lock"
        ],
        "message": "fix: import LS only for monaco-graphql (#2103)",
        "before_after_code_files": [
          "examples/monaco-graphql-webpack/src/schema.ts||examples/monaco-graphql-webpack/src/schema.ts",
          "packages/graphql-language-service/src/index.ts||packages/graphql-language-service/src/index.ts",
          "packages/graphql-language-service/src/schemaLoader.ts||packages/graphql-language-service/src/schemaLoader.ts",
          "packages/monaco-graphql/src/GraphQLWorker.ts||packages/monaco-graphql/src/GraphQLWorker.ts",
          "packages/graphql-language-service/src/LanguageService.ts||packages/monaco-graphql/src/LanguageService.ts",
          "packages/monaco-graphql/src/api.ts||packages/monaco-graphql/src/api.ts",
          "packages/monaco-graphql/src/schemaLoader.ts||packages/monaco-graphql/src/schemaLoader.ts",
          "packages/monaco-graphql/src/typings/index.ts||packages/monaco-graphql/src/typings/index.ts",
          "packages/monaco-graphql/src/typings/picomatch-browser.ts||packages/monaco-graphql/src/typings/picomatch-browser.ts",
          "packages/monaco-graphql/src/utils.ts||packages/monaco-graphql/src/utils.ts",
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "yarn.lock||yarn.lock"
          ],
          "candidate": [
            "yarn.lock||yarn.lock"
          ]
        }
      },
      "candidate_diff": {
        "examples/monaco-graphql-webpack/src/schema.ts||examples/monaco-graphql-webpack/src/schema.ts": [
          "File: examples/monaco-graphql-webpack/src/schema.ts -> examples/monaco-graphql-webpack/src/schema.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import { getIntrospectionQuery } from 'graphql';",
          "3: import { Uri } from 'monaco-editor';",
          "5: const SCHEMA_URL = 'https://api.github.com/graphql';",
          "",
          "[Removed Lines]",
          "2: import type { SchemaConfig } from 'graphql-language-service';",
          "",
          "[Added Lines]",
          "2: import type { SchemaConfig } from 'monaco-graphql/src/typings';",
          "",
          "---------------"
        ],
        "packages/graphql-language-service/src/index.ts||packages/graphql-language-service/src/index.ts": [
          "File: packages/graphql-language-service/src/index.ts -> packages/graphql-language-service/src/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "15: export type {",
          "16:   SchemaConfig,",
          "17:   BaseSchemaConfig,",
          "18:   SchemaLoader,",
          "19: } from './schemaLoader';",
          "20: export { defaultSchemaLoader } from './schemaLoader';",
          "22: export type { GraphQLLanguageConfig } from './LanguageService';",
          "23: export { LanguageService } from './LanguageService';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:   GraphQLLanguageService,",
          "44:   SEVERITY,",
          "45:   Severity,",
          "46:   SeverityEnum,",
          "47:   DIAGNOSTIC_SEVERITY,",
          "48:   DefinitionQueryResult,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36:   HoverConfig,",
          "",
          "---------------"
        ],
        "packages/graphql-language-service/src/schemaLoader.ts||packages/graphql-language-service/src/schemaLoader.ts": [
          "File: packages/graphql-language-service/src/schemaLoader.ts -> packages/graphql-language-service/src/schemaLoader.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/monaco-graphql/src/GraphQLWorker.ts||packages/monaco-graphql/src/GraphQLWorker.ts": [
          "File: packages/monaco-graphql/src/GraphQLWorker.ts -> packages/monaco-graphql/src/GraphQLWorker.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: import type { worker, Position } from 'monaco-editor';",
          "18: import {",
          "19:   toGraphQLPosition,",
          "",
          "[Removed Lines]",
          "8: import { FormattingOptions, ICreateData } from './typings';",
          "12: import {",
          "13:   getRange,",
          "14:   LanguageService,",
          "15:   SchemaConfig,",
          "16: } from 'graphql-language-service';",
          "",
          "[Added Lines]",
          "8: import { FormattingOptions, ICreateData, SchemaConfig } from './typings';",
          "12: import { getRange } from 'graphql-language-service';",
          "14: import { LanguageService } from './LanguageService';",
          "",
          "---------------"
        ],
        "packages/graphql-language-service/src/LanguageService.ts||packages/monaco-graphql/src/LanguageService.ts": [
          "File: packages/graphql-language-service/src/LanguageService.ts -> packages/monaco-graphql/src/LanguageService.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:   FragmentDefinitionNode,",
          "13:   visit,",
          "14:   DocumentNode,",
          "15: } from 'graphql';",
          "20: import {",
          "21:   getAutocompleteSuggestions,",
          "22:   getDiagnostics,",
          "23:   getHoverInformation,",
          "24:   HoverConfig,",
          "27: import {",
          "28:   getVariablesJSONSchema,",
          "",
          "[Removed Lines]",
          "17: import { default as picomatch } from 'picomatch';",
          "19: import type { IPosition } from 'graphql-language-service-types';",
          "25: } from 'graphql-language-service-interface';",
          "",
          "[Added Lines]",
          "15:   Source,",
          "18: import picomatch from 'picomatch-browser';",
          "20: import type { IPosition } from 'graphql-language-service';",
          "26: } from 'graphql-language-service';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30:   JSONSchemaOptions,",
          "31: } from 'graphql-language-service-utils';",
          "73: type SchemaCacheItem = Omit<SchemaConfig, 'schema'> & { schema: GraphQLSchema };",
          "75: type SchemaCache = Map<string, SchemaCacheItem>;",
          "76: const schemaCache: SchemaCache = new Map();",
          "78: export class LanguageService {",
          "79:   private _parser: typeof parse = parse;",
          "80:   private _schemas: SchemaConfig[] = [];",
          "",
          "[Removed Lines]",
          "33: import {",
          "34:   defaultSchemaLoader,",
          "35:   SchemaConfig,",
          "36:   SchemaLoader,",
          "37: } from './schemaLoader';",
          "43: export type GraphQLLanguageConfig = {",
          "49:   parser?: typeof parse;",
          "53:   parseOptions?: ParseOptions;",
          "58:   schemaLoader?: SchemaLoader;",
          "62:   schemas?: SchemaConfig[];",
          "66:   exteralFragmentDefinitions?: FragmentDefinitionNode[] | string;",
          "70:   customValidationRules?: ValidationRule[];",
          "71: };",
          "",
          "[Added Lines]",
          "34: import { defaultSchemaLoader } from './schemaLoader';",
          "36: import { SchemaConfig, SchemaLoader, GraphQLLanguageConfig } from './typings';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "128:       schema,",
          "129:     });",
          "130:   }",
          "136:   public getSchemaForFile(uri: string): SchemaCacheItem | undefined {",
          "144:       });",
          "150:       }",
          "153:     }",
          "154:   }",
          "",
          "[Removed Lines]",
          "137:     const schema = this._schemas.find(schemaConfig => {",
          "138:       if (!schemaConfig.fileMatch) {",
          "139:         return false;",
          "140:       }",
          "141:       return schemaConfig.fileMatch.some(glob => {",
          "142:         const isMatch = picomatch(glob);",
          "143:         return isMatch(uri);",
          "145:     });",
          "146:     if (schema) {",
          "147:       const cacheEntry = this._schemaCache.get(schema.uri);",
          "148:       if (cacheEntry) {",
          "149:         return cacheEntry;",
          "151:       const cache = this._cacheSchema(schema);",
          "152:       return cache.get(schema.uri);",
          "",
          "[Added Lines]",
          "106:     if (!this._schemas || !this._schemas.length) {",
          "107:       return;",
          "108:     }",
          "109:     if (this._schemas.length === 1) {",
          "110:       return this._schemaCache.get(this._schemas[0].uri);",
          "111:     } else {",
          "112:       const schema = this._schemas.find(schemaConfig => {",
          "113:         if (!schemaConfig.fileMatch) {",
          "114:           return false;",
          "115:         }",
          "116:         return schemaConfig.fileMatch.some(glob => {",
          "117:           const isMatch = picomatch(glob);",
          "118:           return isMatch(uri);",
          "119:         });",
          "121:       if (schema) {",
          "122:         const cacheEntry = this._schemaCache.get(schema.uri);",
          "123:         if (cacheEntry) {",
          "124:           return cacheEntry;",
          "125:         }",
          "126:         const cache = this._cacheSchema(schema);",
          "127:         return cache.get(schema.uri);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "212:   }",
          "220:     return this._parser(text, options || this._parseOptions);",
          "221:   }",
          "",
          "[Removed Lines]",
          "219:   public parse(text: string, options?: ParseOptions): DocumentNode {",
          "",
          "[Added Lines]",
          "195:   public parse(text: string | Source, options?: ParseOptions): DocumentNode {",
          "",
          "---------------"
        ],
        "packages/monaco-graphql/src/api.ts||packages/monaco-graphql/src/api.ts": [
          "File: packages/monaco-graphql/src/api.ts -> packages/monaco-graphql/src/api.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: import { Emitter } from 'monaco-editor';",
          "11: import type { IEvent } from 'monaco-editor';",
          "",
          "[Removed Lines]",
          "8: import { SchemaConfig } from 'graphql-language-service';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15:   FormattingOptions,",
          "16:   ModeConfiguration,",
          "17:   MonacoGraphQLInitializeConfig,",
          "18: } from './typings';",
          "20: export type MonacoGraphQLAPIOptions = {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17:   SchemaConfig,",
          "",
          "---------------"
        ],
        "packages/monaco-graphql/src/schemaLoader.ts||packages/monaco-graphql/src/schemaLoader.ts": [
          "File: packages/monaco-graphql/src/schemaLoader.ts -> packages/monaco-graphql/src/schemaLoader.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import { buildClientSchema, buildASTSchema } from 'graphql';",
          "3: import type { SchemaLoader } from './typings';",
          "5: export const defaultSchemaLoader: SchemaLoader = (schemaConfig, parser) => {",
          "6:   const {",
          "7:     schema,",
          "8:     documentAST,",
          "9:     introspectionJSON,",
          "10:     introspectionJSONString,",
          "11:     buildSchemaOptions,",
          "12:     documentString,",
          "13:   } = schemaConfig;",
          "14:   if (schema) {",
          "15:     return schema;",
          "16:   }",
          "17:   if (introspectionJSONString) {",
          "18:     const introspectionJSONResult = JSON.parse(introspectionJSONString);",
          "19:     return buildClientSchema(introspectionJSONResult, buildSchemaOptions);",
          "20:   }",
          "21:   if (documentString && parser) {",
          "22:     const docAST = parser(documentString);",
          "23:     return buildASTSchema(docAST, buildSchemaOptions);",
          "24:   }",
          "25:   if (introspectionJSON) {",
          "26:     return buildClientSchema(introspectionJSON, buildSchemaOptions);",
          "27:   }",
          "28:   if (documentAST) {",
          "29:     return buildASTSchema(documentAST, buildSchemaOptions);",
          "30:   }",
          "31:   throw Error('no schema supplied');",
          "32: };",
          "",
          "---------------"
        ],
        "packages/monaco-graphql/src/typings/index.ts||packages/monaco-graphql/src/typings/index.ts": [
          "File: packages/monaco-graphql/src/typings/index.ts -> packages/monaco-graphql/src/typings/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: import type { languages } from 'monaco-editor';",
          "7: import type { Options as PrettierConfig } from 'prettier';",
          "9: export interface IDisposable {",
          "10:   dispose(): void;",
          "11: }",
          "15: export type JSONDiagnosticOptions = languages.json.DiagnosticsOptions;",
          "16: export interface IEvent<T> {",
          "17:   (listener: (e: T) => any, thisArg?: any): IDisposable;",
          "",
          "[Removed Lines]",
          "1: import type {",
          "2:   SchemaConfig as SchemaConfiguration,",
          "3:   GraphQLLanguageConfig,",
          "4: } from 'graphql-language-service';",
          "13: export type SchemaConfig = SchemaConfiguration;",
          "",
          "[Added Lines]",
          "3: import {",
          "4:   IntrospectionQuery,",
          "5:   DocumentNode,",
          "6:   BuildSchemaOptions,",
          "7:   parse,",
          "8:   ParseOptions,",
          "9:   GraphQLSchema,",
          "10:   ValidationRule,",
          "11:   FragmentDefinitionNode,",
          "12: } from 'graphql';",
          "16: export type BaseSchemaConfig = {",
          "17:   buildSchemaOptions?: BuildSchemaOptions;",
          "18:   schema?: GraphQLSchema;",
          "19:   documentString?: string;",
          "20:   documentAST?: DocumentNode;",
          "21:   introspectionJSON?: IntrospectionQuery;",
          "22:   introspectionJSONString?: string;",
          "23: };",
          "33: export type SchemaConfig = {",
          "38:   uri: string;",
          "44:   fileMatch?: string[];",
          "48:   buildSchemaOptions?: BuildSchemaOptions;",
          "52:   schema?: GraphQLSchema;",
          "56:   documentString?: string;",
          "60:   documentAST?: DocumentNode;",
          "64:   introspectionJSON?: IntrospectionQuery;",
          "68:   introspectionJSONString?: string;",
          "69: };",
          "80: export type SchemaLoader = (",
          "81:   schemaConfig: SchemaConfig,",
          "82:   parser: GraphQLLanguageConfig['parser'],",
          "83: ) => GraphQLSchema;",
          "89: export type GraphQLLanguageConfig = {",
          "95:   parser?: typeof parse;",
          "99:   parseOptions?: ParseOptions;",
          "104:   schemaLoader?: SchemaLoader;",
          "109:   schemas?: SchemaConfig[];",
          "113:   exteralFragmentDefinitions?: FragmentDefinitionNode[] | string;",
          "117:   customValidationRules?: ValidationRule[];",
          "118: };",
          "",
          "---------------"
        ],
        "packages/monaco-graphql/src/typings/picomatch-browser.ts||packages/monaco-graphql/src/typings/picomatch-browser.ts": [
          "File: packages/monaco-graphql/src/typings/picomatch-browser.ts -> packages/monaco-graphql/src/typings/picomatch-browser.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: declare module 'picomatch-browser';",
          "",
          "---------------"
        ],
        "packages/monaco-graphql/src/utils.ts||packages/monaco-graphql/src/utils.ts": [
          "File: packages/monaco-graphql/src/utils.ts -> packages/monaco-graphql/src/utils.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: import type {",
          "9:   IRange as GraphQLRange,",
          "10:   IPosition as GraphQLPosition,",
          "11:   Diagnostic,",
          "12:   CompletionItem as GraphQLCompletionItem,",
          "14: } from 'graphql-language-service';",
          "16: import { buildASTSchema, printSchema } from 'graphql';",
          "",
          "[Removed Lines]",
          "13:   SchemaConfig,",
          "",
          "[Added Lines]",
          "8: import { SchemaConfig } from './typings';",
          "",
          "---------------"
        ],
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "11047:   integrity sha512-bzh50DW9kTPM00T8y4o8vQg89Di9oLJVLW/KaOGIXJWP/iqCN6WKYkbNOF04vFLJhwcpYUh9ydh/+5vpOqV4YQ==",
          "11049: \"graphiql@file:packages/graphiql\":",
          "11051:   dependencies:",
          "11052:     \"@graphiql/toolkit\" \"^0.4.2\"",
          "11053:     codemirror \"^5.58.2\"",
          "11055:     copy-to-clipboard \"^3.2.0\"",
          "11056:     dset \"^3.1.0\"",
          "11057:     entities \"^2.0.0\"",
          "11058:     escape-html \"^1.0.3\"",
          "11060:     markdown-it \"^12.2.0\"",
          "11062: graphql-config@^4.1.0:",
          "",
          "[Removed Lines]",
          "11050:   version \"1.5.13\"",
          "11054:     codemirror-graphql \"^1.2.8\"",
          "11059:     graphql-language-service \"^4.1.1\"",
          "",
          "[Added Lines]",
          "11050:   version \"1.5.14\"",
          "11054:     codemirror-graphql \"^1.2.9\"",
          "11059:     graphql-language-service \"^4.1.2\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "581df6d83f4bc145de94e5d730b00e5b025907da",
      "candidate_info": {
        "commit_hash": "581df6d83f4bc145de94e5d730b00e5b025907da",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/581df6d83f4bc145de94e5d730b00e5b025907da",
        "files": [
          ".changeset/early-clouds-speak.md",
          "packages/codemirror-graphql/src/__tests__/hint-test.ts",
          "packages/graphql-language-service-interface/src/__tests__/getAutocompleteSuggestions-test.ts",
          "packages/graphql-language-service-interface/src/getAutocompleteSuggestions.ts",
          "yarn.lock"
        ],
        "message": "fix: append insertText instead of variable labels (#2076)\n\n fix a potential issue where `field(arg: $|` in codemirror-graphql might have autocompletion insert of `$$variable` because of recent changes to completion for `monaco-graphql`/`vscode-graphql`",
        "before_after_code_files": [
          "packages/codemirror-graphql/src/__tests__/hint-test.ts||packages/codemirror-graphql/src/__tests__/hint-test.ts",
          "packages/graphql-language-service-interface/src/__tests__/getAutocompleteSuggestions-test.ts||packages/graphql-language-service-interface/src/__tests__/getAutocompleteSuggestions-test.ts",
          "packages/graphql-language-service-interface/src/getAutocompleteSuggestions.ts||packages/graphql-language-service-interface/src/getAutocompleteSuggestions.ts",
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "yarn.lock||yarn.lock"
          ],
          "candidate": [
            "yarn.lock||yarn.lock"
          ]
        }
      },
      "candidate_diff": {
        "packages/codemirror-graphql/src/__tests__/hint-test.ts||packages/codemirror-graphql/src/__tests__/hint-test.ts": [
          "File: packages/codemirror-graphql/src/__tests__/hint-test.ts -> packages/codemirror-graphql/src/__tests__/hint-test.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1087:       ch: 18,",
          "1088:     });",
          "1089:     expect(suggestions6?.list).toEqual(expectedSuggestions);",
          "1090:     const suggestions7 = await getHintSuggestions(",
          "1091:       '{ hasArgs(object: { string ',",
          "1092:       { line: 0, ch: 27 },",
          "1093:     );",
          "1094:     expect(suggestions7?.list).toEqual(expectedSuggestions);",
          "1095:   });",
          "1096:   it('provides correct field name suggestions for an interface type', async () => {",
          "1097:     const suggestions = await getHintSuggestions(",
          "1098:       '{ first { ... on TestInterface { ',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1097:   it('provides variable completion for argments', async () => {",
          "1098:     const expectedSuggestions = getExpectedSuggestions([",
          "1099:       { text: 'string', type: GraphQLString },",
          "1100:       { text: 'listString', type: new GraphQLList(GraphQLString) },",
          "1101:     ]);",
          "1103:     const suggestions9 = await getHintSuggestions(",
          "1104:       'query myQuery($arg: String){ hasArgs(string: ',",
          "1105:       {",
          "1106:         line: 0,",
          "1107:         ch: 42,",
          "1108:       },",
          "1109:     );",
          "1110:     expect(suggestions9?.list).toEqual(expectedSuggestions);",
          "1111:   });",
          "1112:   it('provides variable completion for argments with $', async () => {",
          "1113:     const expectedSuggestions = getExpectedSuggestions([",
          "1114:       { text: 'string', type: GraphQLString },",
          "1115:       { text: 'listString', type: new GraphQLList(GraphQLString) },",
          "1116:     ]);",
          "1118:     const suggestions9 = await getHintSuggestions(",
          "1119:       'query myQuery($arg: String){ hasArgs(string: $',",
          "1120:       {",
          "1121:         line: 0,",
          "1122:         ch: 42,",
          "1123:       },",
          "1124:     );",
          "1125:     expect(suggestions9?.list).toEqual(expectedSuggestions);",
          "1126:   });",
          "",
          "---------------"
        ],
        "packages/graphql-language-service-interface/src/__tests__/getAutocompleteSuggestions-test.ts||packages/graphql-language-service-interface/src/__tests__/getAutocompleteSuggestions-test.ts": [
          "File: packages/graphql-language-service-interface/src/__tests__/getAutocompleteSuggestions-test.ts -> packages/graphql-language-service-interface/src/__tests__/getAutocompleteSuggestions-test.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import { getAutocompleteSuggestions } from '../getAutocompleteSuggestions';",
          "24: describe('getAutocompleteSuggestions', () => {",
          "25:   let schema: GraphQLSchema;",
          "26:   beforeEach(async () => {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: const suggestionCommand = {",
          "25:   command: 'editor.action.triggerSuggest',",
          "26:   title: 'Suggestions',",
          "27: };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50:       )",
          "51:       .sort((a, b) => a.label.localeCompare(b.label))",
          "52:       .map(suggestion => {",
          "53:         const response = { label: suggestion.label } as CompletionItem;",
          "54:         if (suggestion.detail) {",
          "55:           response.detail = String(suggestion.detail);",
          "56:         }",
          "60:         return response;",
          "61:       });",
          "62:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64:         if (suggestion.insertText) {",
          "65:           response.insertText = suggestion.insertText;",
          "66:         }",
          "67:         if (suggestion.insertTextFormat) {",
          "68:           response.insertTextFormat = suggestion.insertTextFormat;",
          "69:         }",
          "70:         if (suggestion.command) {",
          "71:           response.command = suggestion.command;",
          "72:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "195:   it('provides correct argument suggestions', () => {",
          "196:     const result = testSuggestions('{ human (', new Position(0, 9));",
          "198:   });",
          "200:   it('provides correct argument suggestions when using aliases', () => {",
          "201:     const result = testSuggestions('{ aliasTest: human( ', new Position(0, 20));",
          "203:   });",
          "205:   it('provides correct input type suggestions', () => {",
          "",
          "[Removed Lines]",
          "197:     expect(result).toEqual([{ label: 'id', detail: 'String!' }]);",
          "202:     expect(result).toEqual([{ label: 'id', detail: 'String!' }]);",
          "",
          "[Added Lines]",
          "210:     expect(result).toEqual([",
          "211:       {",
          "212:         label: 'id',",
          "213:         detail: 'String!',",
          "214:         insertText: 'id: ',",
          "215:         command: suggestionCommand,",
          "216:       },",
          "217:     ]);",
          "222:     expect(result).toEqual([",
          "223:       {",
          "224:         label: 'id',",
          "225:         detail: 'String!',",
          "226:         command: suggestionCommand,",
          "227:         insertText: 'id: ',",
          "228:       },",
          "229:     ]);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "284:       'query($id: String, $ep: Episode!){ hero(episode: $ }',",
          "285:       new Position(0, 51),",
          "286:     );",
          "288:   });",
          "290:   it('provides correct suggestions for variables based on argument context', () => {",
          "",
          "[Removed Lines]",
          "287:     expect(result).toEqual([{ label: '$ep', detail: 'Episode' }]);",
          "",
          "[Added Lines]",
          "314:     expect(result).toEqual([",
          "315:       { label: 'ep', insertText: '$ep', detail: 'Episode' },",
          "316:     ]);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "293:       new Position(0, 55),",
          "294:     );",
          "295:     expect(result).toEqual([",
          "297:       { label: 'EMPIRE', detail: 'Episode' },",
          "298:       { label: 'JEDI', detail: 'Episode' },",
          "299:       { label: 'NEWHOPE', detail: 'Episode' },",
          "",
          "[Removed Lines]",
          "296:       { label: '$episode', detail: 'Episode' },",
          "",
          "[Added Lines]",
          "326:       { label: 'episode', detail: 'Episode', insertText: '$episode' },",
          "",
          "---------------"
        ],
        "packages/graphql-language-service-interface/src/getAutocompleteSuggestions.ts||packages/graphql-language-service-interface/src/getAutocompleteSuggestions.ts": [
          "File: packages/graphql-language-service-interface/src/getAutocompleteSuggestions.ts -> packages/graphql-language-service-interface/src/getAutocompleteSuggestions.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "612:     if (variableName && variableType) {",
          "613:       if (!definitions[variableName]) {",
          "616:         definitions[variableName] = {",
          "617:           detail: variableType.toString(),",
          "619:           type: variableType,",
          "620:           kind: CompletionItemKind.Variable,",
          "621:         } as CompletionItem;",
          "",
          "[Removed Lines]",
          "615:         const label = token.string === '$' ? variableName : '$' + variableName;",
          "618:           label,",
          "",
          "[Added Lines]",
          "618:           insertText: token.string === '$' ? variableName : '$' + variableName,",
          "619:           label: variableName, // keep label the same for `codemirror-graphql`",
          "",
          "---------------"
        ],
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "5102:   resolved \"https://registry.yarnpkg.com/@types/minimist/-/minimist-1.2.1.tgz#283f669ff76d7b8260df8ab7a4262cc83d988256\"",
          "5103:   integrity sha512-fZQQafSREFyuZcdWFAExYjBiCL7AUCdgsk80iO0q4yihYYdcIiH28CcuPTGFgLOCC8RlW49GSQxdHwZP+I7CNg==",
          "5106:   version \"1.0.2\"",
          "5107:   resolved \"https://registry.yarnpkg.com/@types/mkdirp/-/mkdirp-1.0.2.tgz#8d0bad7aa793abe551860be1f7ae7f3198c16666\"",
          "5108:   integrity sha512-o0K1tSO0Dx5X6xlU5F1D6625FawhC3dU3iqr25lluNv/+/QIVH8RLNEiVokgIZo+mz+87w/3Mkg/VvQS+J51fQ==",
          "",
          "[Removed Lines]",
          "5105: \"@types/mkdirp@^1.0.`1\":",
          "",
          "[Added Lines]",
          "5105: \"@types/mkdirp@^1.0.1\":",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11015:   integrity sha512-bzh50DW9kTPM00T8y4o8vQg89Di9oLJVLW/KaOGIXJWP/iqCN6WKYkbNOF04vFLJhwcpYUh9ydh/+5vpOqV4YQ==",
          "11017: \"graphiql@file:packages/graphiql\":",
          "11019:   dependencies:",
          "11020:     \"@graphiql/toolkit\" \"^0.4.2\"",
          "11021:     codemirror \"^5.58.2\"",
          "11023:     copy-to-clipboard \"^3.2.0\"",
          "11024:     dset \"^3.1.0\"",
          "11025:     entities \"^2.0.0\"",
          "11026:     escape-html \"^1.0.3\"",
          "11028:     markdown-it \"^12.2.0\"",
          "11030: graphql-config@^4.1.0:",
          "",
          "[Removed Lines]",
          "11018:   version \"1.5.7\"",
          "11022:     codemirror-graphql \"^1.2.4\"",
          "11027:     graphql-language-service \"^3.2.4\"",
          "",
          "[Added Lines]",
          "11018:   version \"1.5.8\"",
          "11022:     codemirror-graphql \"^1.2.5\"",
          "11027:     graphql-language-service \"^3.2.5\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}