{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1f38633278ae6c188b4ac134df42e4a969ed67cf",
      "candidate_info": {
        "commit_hash": "1f38633278ae6c188b4ac134df42e4a969ed67cf",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/1f38633278ae6c188b4ac134df42e4a969ed67cf",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java"
        ],
        "message": "PDFBOX-4892: set individual initial ArrayList size, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887857 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "135:         else if( next instanceof COSArray )",
          "136:         {",
          "137:             COSArray array = (COSArray)next;",
          "139:             for( int i=0; i<array.size(); i++ )",
          "140:             {",
          "141:                 actions.add( PDActionFactory.createAction( (COSDictionary) array.getObject( i )));",
          "",
          "[Removed Lines]",
          "138:             List<PDAction> actions = new ArrayList<PDAction>();",
          "",
          "[Added Lines]",
          "138:             List<PDAction> actions = new ArrayList<PDAction>(array.size());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "510bb2caf752568c31a9eac00beba8a177cd6416",
      "candidate_info": {
        "commit_hash": "510bb2caf752568c31a9eac00beba8a177cd6416",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/510bb2caf752568c31a9eac00beba8a177cd6416",
        "files": [
          "tools/src/main/java/org/apache/pdfbox/tools/PDFSplit.java"
        ],
        "message": "PDFBOX-4892: simplify code, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1888161 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "tools/src/main/java/org/apache/pdfbox/tools/PDFSplit.java||tools/src/main/java/org/apache/pdfbox/tools/PDFSplit.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/src/main/java/org/apache/pdfbox/tools/PDFSplit.java||tools/src/main/java/org/apache/pdfbox/tools/PDFSplit.java": [
          "File: tools/src/main/java/org/apache/pdfbox/tools/PDFSplit.java -> tools/src/main/java/org/apache/pdfbox/tools/PDFSplit.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import java.io.FileOutputStream;",
          "23: import java.util.List;",
          "25: import org.apache.pdfbox.pdmodel.PDDocument;",
          "26: import org.apache.pdfbox.pdfwriter.COSWriter;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: import org.apache.pdfbox.io.IOUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "182:             }",
          "183:             finally",
          "184:             {",
          "186:                 {",
          "187:                     document.close();",
          "193:                 }",
          "194:             }",
          "195:         }",
          "",
          "[Removed Lines]",
          "185:                 if( document != null )",
          "188:                 }",
          "189:                 for( int i=0; documents != null && i<documents.size(); i++ )",
          "190:                 {",
          "191:                     PDDocument doc = documents.get(i);",
          "192:                     doc.close();",
          "",
          "[Added Lines]",
          "186:                 if (document != null)",
          "189:                     for (int i = 0; i < documents.size(); i++)",
          "190:                     {",
          "191:                         PDDocument doc = documents.get(i);",
          "192:                         IOUtils.closeQuietly(doc);",
          "193:                     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2e42fcae89f4f94eac25e2b38a4f478e4658e7f5",
      "candidate_info": {
        "commit_hash": "2e42fcae89f4f94eac25e2b38a4f478e4658e7f5",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/2e42fcae89f4f94eac25e2b38a4f478e4658e7f5",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java"
        ],
        "message": "PDFBOX-4847: ensure that an embedded sRGB color profile is also compressed, by Emmeran Seehuber\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1881219 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "400:         if (state.iCCP != null || state.sRGB != null)",
          "401:         {",
          "405:             cosStream.setInt(COSName.N, colorSpace.getNumberOfComponents());",
          "406:             cosStream.setItem(COSName.ALTERNATE, colorSpace.getNumberOfComponents()",
          "407:                     == 1 ? COSName.DEVICEGRAY : COSName.DEVICERGB);",
          "408:             if (state.iCCP != null)",
          "409:             {",
          "412:                 int iccProfileDataStart = 0;",
          "413:                 while (iccProfileDataStart < 80 && iccProfileDataStart < state.iCCP.length)",
          "",
          "[Removed Lines]",
          "403:             PDICCBased profile = new PDICCBased(document);",
          "404:             COSStream cosStream = profile.getPDStream().getCOSObject();",
          "410:                 cosStream.setItem(COSName.FILTER, COSName.FLATE_DECODE);",
          "",
          "[Added Lines]",
          "403:             COSArray array = new COSArray();",
          "404:             array.add(COSName.ICCBASED);",
          "405:             PDStream pdStream = new PDStream(document);",
          "406:             array.add(pdStream);",
          "407:             COSStream cosStream = pdStream.getCOSObject();",
          "411:             cosStream.setItem(COSName.FILTER, COSName.FLATE_DECODE);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "447:             {",
          "449:                 ICC_Profile rgbProfile = ICC_Profile.getInstance(ColorSpace.CS_sRGB);",
          "451:                 try",
          "452:                 {",
          "453:                     outputStream.write(rgbProfile.getData());",
          "",
          "[Removed Lines]",
          "450:                 OutputStream outputStream = cosStream.createRawOutputStream();",
          "",
          "[Added Lines]",
          "453:                 OutputStream outputStream = cosStream.createOutputStream();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "458:                 }",
          "459:             }",
          "461:             imageXObject.setColorSpace(profile);",
          "462:         }",
          "463:         return imageXObject;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "464:             PDICCBased profile = PDICCBased.create(array, null);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6775fbbc74c7b03013e3da780c901371b1c9b67c",
      "candidate_info": {
        "commit_hash": "6775fbbc74c7b03013e3da780c901371b1c9b67c",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/6775fbbc74c7b03013e3da780c901371b1c9b67c",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/TrueTypeFont.java",
          "fontbox/src/main/java/org/apache/fontbox/type1/Type1Lexer.java"
        ],
        "message": "PDFBOX-4892: remove unneeded conversion, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887266 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/TrueTypeFont.java||fontbox/src/main/java/org/apache/fontbox/ttf/TrueTypeFont.java",
          "fontbox/src/main/java/org/apache/fontbox/type1/Type1Lexer.java||fontbox/src/main/java/org/apache/fontbox/type1/Type1Lexer.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/ttf/TrueTypeFont.java||fontbox/src/main/java/org/apache/fontbox/ttf/TrueTypeFont.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/ttf/TrueTypeFont.java -> fontbox/src/main/java/org/apache/fontbox/ttf/TrueTypeFont.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "688:     @Override",
          "689:     public float getWidth(String name) throws IOException",
          "690:     {",
          "692:         return getAdvanceWidth(gid);",
          "693:     }",
          "",
          "[Removed Lines]",
          "691:         Integer gid = nameToGID(name);",
          "",
          "[Added Lines]",
          "691:         int gid = nameToGID(name);",
          "",
          "---------------"
        ],
        "fontbox/src/main/java/org/apache/fontbox/type1/Type1Lexer.java||fontbox/src/main/java/org/apache/fontbox/type1/Type1Lexer.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/type1/Type1Lexer.java -> fontbox/src/main/java/org/apache/fontbox/type1/Type1Lexer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "443:                         String num = String.valueOf(new char[] { c1, getChar(), getChar() });",
          "444:                         try",
          "445:                         {",
          "448:                         }",
          "449:                         catch (NumberFormatException ex)",
          "450:                         {",
          "",
          "[Removed Lines]",
          "446:                             Integer code = Integer.parseInt(num, 8);",
          "447:                             sb.append((char) (int) code);",
          "",
          "[Added Lines]",
          "446:                             int code = Integer.parseInt(num, 8);",
          "447:                             sb.append((char) code);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0a4b0d80af0a35b25fbe7d0ec5585d219f70d998",
      "candidate_info": {
        "commit_hash": "0a4b0d80af0a35b25fbe7d0ec5585d219f70d998",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/0a4b0d80af0a35b25fbe7d0ec5585d219f70d998",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageTree.java"
        ],
        "message": "PDFBOX-5009, PDFBOX-3953: prevent stack overflow with malformed PDFs\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1883149 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageTree.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageTree.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageTree.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageTree.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageTree.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageTree.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: import org.apache.pdfbox.pdmodel.common.COSObjectable;",
          "30: import java.util.ArrayList;",
          "31: import java.util.List;",
          "32: import java.util.NoSuchElementException;",
          "33: import org.apache.commons.logging.Log;",
          "34: import org.apache.commons.logging.LogFactory;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31: import java.util.HashSet;",
          "34: import java.util.Set;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "170:     private final class PageIterator implements Iterator<PDPage>",
          "171:     {",
          "172:         private final Queue<COSDictionary> queue = new ArrayDeque<COSDictionary>();",
          "174:         private PageIterator(COSDictionary node)",
          "175:         {",
          "176:             enqueueKids(node);",
          "177:         }",
          "179:         private void enqueueKids(COSDictionary node)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "175:         private Set<COSDictionary> set = new HashSet<COSDictionary>();",
          "180:             set = null; // release memory, we don't use this anymore",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "183:                 List<COSDictionary> kids = getKids(node);",
          "184:                 for (COSDictionary kid : kids)",
          "185:                 {",
          "186:                     enqueueKids(kid);",
          "187:                 }",
          "188:             }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "190:                     if (set.contains(kid))",
          "191:                     {",
          "193:                         LOG.error(\"This page tree node has already been visited\");",
          "194:                         continue;",
          "195:                     }",
          "196:                     else if (kid.containsKey(COSName.KIDS))",
          "197:                     {",
          "198:                         set.add(kid);",
          "199:                     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}