{
  "cve_id": "CVE-2019-15782",
  "cve_desc": "WebTorrent before 0.107.6 allows XSS in the HTTP server via a title or file name.",
  "repo": "webtorrent/webtorrent",
  "patch_hash": "7e829b5d52c32d2e6d8f5fbcf0f8f418fffde083",
  "patch_info": {
    "commit_hash": "7e829b5d52c32d2e6d8f5fbcf0f8f418fffde083",
    "repo": "webtorrent/webtorrent",
    "commit_url": "https://github.com/webtorrent/webtorrent/commit/7e829b5d52c32d2e6d8f5fbcf0f8f418fffde083",
    "files": [
      "lib/server.js",
      "package.json"
    ],
    "message": "Merge pull request #1714 from webtorrent/fix-server-xss\n\nFix http server XSS",
    "before_after_code_files": [
      "lib/server.js||lib/server.js"
    ]
  },
  "patch_diff": {
    "lib/server.js||lib/server.js": [
      "File: lib/server.js -> lib/server.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: const arrayRemove = require('unordered-array-remove')",
      "2: const http = require('http')",
      "3: const mime = require('mime')",
      "4: const pump = require('pump')",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2: const escapeHtml = require('escape-html')",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "79:     const pathname = new URL(req.url, 'http://example.com').pathname",
      "86:     if (isOriginAllowed(req)) {",
      "87:       res.setHeader('Access-Control-Allow-Origin', req.headers.origin)",
      "",
      "[Removed Lines]",
      "81:     if (pathname === '/favicon.ico') {",
      "82:       return serve404Page()",
      "83:     }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "91:     res.setHeader('X-Content-Type-Options', 'nosniff')",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "91:     res.setHeader('Content-Security-Policy', \"base-uri 'none'; default-src 'none'; frame-ancestors 'none'; form-action 'none';\")",
      "93:     if (pathname === '/favicon.ico') {",
      "94:       return serve404Page()",
      "95:     }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "147:       res.statusCode = 200",
      "148:       res.setHeader('Content-Type', 'text/html')",
      "152:       const html = getPageHTML(",
      "155:       )",
      "156:       res.end(html)",
      "157:     }",
      "",
      "[Removed Lines]",
      "150:       const listHtml = torrent.files.map((file, i) => `<li><a download=\"${file.name}\" href=\"/${i}/${file.name}\">${file.path}</a> (${file.length} bytes)</li>`).join('<br>')",
      "153:         `${torrent.name} - WebTorrent`,",
      "154:         `<h1>${torrent.name}</h1><ol>${listHtml}</ol>`",
      "",
      "[Added Lines]",
      "154:       const listHtml = torrent.files",
      "155:         .map((file, i) => (",
      "156:           `<li>",
      "157:             <a",
      "158:               download=\"${escapeHtml(file.name)}\"",
      "159:               href=\"/${escapeHtml(i)}/${escapeHtml(file.name)}\"",
      "160:             >",
      "161:               ${escapeHtml(file.path)}",
      "162:             </a>",
      "163:             (${escapeHtml(file.length)} bytes)",
      "164:           </li>`",
      "165:         ))",
      "166:         .join('<br>')",
      "169:         `${escapeHtml(torrent.name)} - WebTorrent`,",
      "170:         `",
      "171:           <h1>${escapeHtml(torrent.name)}</h1>",
      "172:           <ol>${listHtml}</ol>",
      "173:         `",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "160:       res.statusCode = 404",
      "161:       res.setHeader('Content-Type', 'text/html')",
      "164:       res.end(html)",
      "165:     }",
      "",
      "[Removed Lines]",
      "163:       const html = getPageHTML('404 - Not Found', '<h1>404 - Not Found</h1>')",
      "",
      "[Added Lines]",
      "182:       const html = getPageHTML(",
      "183:         '404 - Not Found',",
      "184:         '<h1>404 - Not Found</h1>'",
      "185:       )",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "214:     function serveMethodNotAllowed () {",
      "215:       res.statusCode = 405",
      "216:       res.setHeader('Content-Type', 'text/html')",
      "218:       res.end(html)",
      "219:     }",
      "220:   }",
      "",
      "[Removed Lines]",
      "217:       const html = getPageHTML('405 - Method Not Allowed', '<h1>405 - Method Not Allowed</h1>')",
      "",
      "[Added Lines]",
      "239:       const html = getPageHTML(",
      "240:         '405 - Method Not Allowed',",
      "241:         '<h1>405 - Method Not Allowed</h1>'",
      "242:       )",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "222:   return server",
      "223: }",
      "225: function getPageHTML (title, pageHtml) {",
      "227: }",
      "",
      "[Removed Lines]",
      "226:   return `<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"utf-8\"><title>${title}</title></head><body>${pageHtml}</body></html>`",
      "",
      "[Added Lines]",
      "252:   return `",
      "253:     <!DOCTYPE html>",
      "254:     <html lang=\"en\">",
      "255:       <head>",
      "256:         <meta charset=\"utf-8\">",
      "257:         <title>${title}</title>",
      "258:       </head>",
      "259:       <body>",
      "260:         ${pageHtml}",
      "261:       </body>",
      "262:     </html>",
      "263:   `",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9029557ca3d22faef67315f8ed33df295ce6d59e",
      "candidate_info": {
        "commit_hash": "9029557ca3d22faef67315f8ed33df295ce6d59e",
        "repo": "webtorrent/webtorrent",
        "commit_url": "https://github.com/webtorrent/webtorrent/commit/9029557ca3d22faef67315f8ed33df295ce6d59e",
        "files": [
          "lib/server.js"
        ],
        "message": "Address @diracdeltas feedback on #1714",
        "before_after_code_files": [
          "lib/server.js||lib/server.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/webtorrent/webtorrent/pull/1714"
        ],
        "olp_code_files": {
          "patch": [
            "lib/server.js||lib/server.js"
          ],
          "candidate": [
            "lib/server.js||lib/server.js"
          ]
        }
      },
      "candidate_diff": {
        "lib/server.js||lib/server.js": [
          "File: lib/server.js -> lib/server.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:     res.setHeader('X-Content-Type-Options', 'nosniff')",
          "93:     if (pathname === '/favicon.ico') {",
          "94:       return serve404Page()",
          "",
          "[Removed Lines]",
          "91:     res.setHeader('Content-Security-Policy', \"base-uri 'none'; default-src 'none'; frame-ancestors 'none'; object-src 'none';\")",
          "",
          "[Added Lines]",
          "91:     res.setHeader('Content-Security-Policy', \"base-uri 'none'; default-src 'none'; frame-ancestors 'none'; form-action 'none';\")",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "22546df6d9ba9ca4523142d98b5e70f6db213f3e",
      "candidate_info": {
        "commit_hash": "22546df6d9ba9ca4523142d98b5e70f6db213f3e",
        "repo": "webtorrent/webtorrent",
        "commit_url": "https://github.com/webtorrent/webtorrent/commit/22546df6d9ba9ca4523142d98b5e70f6db213f3e",
        "files": [
          "lib/server.js",
          "package.json"
        ],
        "message": "Fix http server XSS\n\nLow risk xss. If the torrent contains a specially crafted title or file name, and the user starts the WebTorrent HTTP server via createServer(), and then the user visits the HTTP server index page (which lists the contents of the torrent), then the attacker can run JavaScript in this browser context.\n\nThe reason this seems relatively low risk is that the WebTorrent HTTP server only allows fetching data pieces from the torrent. It doesn't support any other control of the torrent client. So, attacker code could e.g. figure out what content the user is downloading and exfiltrate that to an external domain.\n\nThis commit mitigates the issue in two ways (either of which could have prevented this XSS on its own):\n\n1. HTML-escape untrusted torrent metadata (name, path, file names, etc.)\n\n2. Add the strictest possible CSP to prevent all connections, scripts, styles, plugins, frames. Every capability is denied.",
        "before_after_code_files": [
          "lib/server.js||lib/server.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/webtorrent/webtorrent/pull/1714"
        ],
        "olp_code_files": {
          "patch": [
            "lib/server.js||lib/server.js"
          ],
          "candidate": [
            "lib/server.js||lib/server.js"
          ]
        }
      },
      "candidate_diff": {
        "lib/server.js||lib/server.js": [
          "File: lib/server.js -> lib/server.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: const arrayRemove = require('unordered-array-remove')",
          "2: const http = require('http')",
          "3: const mime = require('mime')",
          "4: const pump = require('pump')",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: const escapeHtml = require('escape-html')",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "91:     res.setHeader('X-Content-Type-Options', 'nosniff')",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "95:     res.setHeader('Content-Security-Policy', \"base-uri 'none'; default-src 'none'; frame-ancestors 'none'; object-src 'none';\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "147:       res.statusCode = 200",
          "148:       res.setHeader('Content-Type', 'text/html')",
          "152:       const html = getPageHTML(",
          "155:       )",
          "156:       res.end(html)",
          "157:     }",
          "",
          "[Removed Lines]",
          "150:       const listHtml = torrent.files.map((file, i) => `<li><a download=\"${file.name}\" href=\"/${i}/${file.name}\">${file.path}</a> (${file.length} bytes)</li>`).join('<br>')",
          "153:         `${torrent.name} - WebTorrent`,",
          "154:         `<h1>${torrent.name}</h1><ol>${listHtml}</ol>`",
          "",
          "[Added Lines]",
          "154:       const listHtml = torrent.files",
          "155:         .map((file, i) => (",
          "156:           `<li>",
          "157:             <a",
          "158:               download=\"${escapeHtml(file.name)}\"",
          "159:               href=\"/${escapeHtml(i)}/${escapeHtml(file.name)}\"",
          "160:             >",
          "161:               ${escapeHtml(file.path)}",
          "162:             </a>",
          "163:             (${escapeHtml(file.length)} bytes)",
          "164:           </li>`",
          "165:         ))",
          "166:         .join('<br>')",
          "169:         `${escapeHtml(torrent.name)} - WebTorrent`,",
          "170:         `",
          "171:           <h1>${escapeHtml(torrent.name)}</h1>",
          "172:           <ol>${listHtml}</ol>",
          "173:         `",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "160:       res.statusCode = 404",
          "161:       res.setHeader('Content-Type', 'text/html')",
          "164:       res.end(html)",
          "165:     }",
          "",
          "[Removed Lines]",
          "163:       const html = getPageHTML('404 - Not Found', '<h1>404 - Not Found</h1>')",
          "",
          "[Added Lines]",
          "182:       const html = getPageHTML(",
          "183:         '404 - Not Found',",
          "184:         '<h1>404 - Not Found</h1>'",
          "185:       )",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "214:     function serveMethodNotAllowed () {",
          "215:       res.statusCode = 405",
          "216:       res.setHeader('Content-Type', 'text/html')",
          "218:       res.end(html)",
          "219:     }",
          "220:   }",
          "",
          "[Removed Lines]",
          "217:       const html = getPageHTML('405 - Method Not Allowed', '<h1>405 - Method Not Allowed</h1>')",
          "",
          "[Added Lines]",
          "239:       const html = getPageHTML(",
          "240:         '405 - Method Not Allowed',",
          "241:         '<h1>405 - Method Not Allowed</h1>'",
          "242:       )",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "222:   return server",
          "223: }",
          "225: function getPageHTML (title, pageHtml) {",
          "227: }",
          "",
          "[Removed Lines]",
          "226:   return `<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"utf-8\"><title>${title}</title></head><body>${pageHtml}</body></html>`",
          "",
          "[Added Lines]",
          "252:   return `",
          "253:     <!DOCTYPE html>",
          "254:     <html lang=\"en\">",
          "255:       <head>",
          "256:         <meta charset=\"utf-8\">",
          "257:         <title>${title}</title>",
          "258:       </head>",
          "259:       <body>",
          "260:         ${pageHtml}",
          "261:       </body>",
          "262:     </html>",
          "263:   `",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cdf1159cc0227b1f85c4a52263cbd33bc4ed5242",
      "candidate_info": {
        "commit_hash": "cdf1159cc0227b1f85c4a52263cbd33bc4ed5242",
        "repo": "webtorrent/webtorrent",
        "commit_url": "https://github.com/webtorrent/webtorrent/commit/cdf1159cc0227b1f85c4a52263cbd33bc4ed5242",
        "files": [
          "lib/server.js"
        ],
        "message": "Set security headers on /favicon.ico responses",
        "before_after_code_files": [
          "lib/server.js||lib/server.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/webtorrent/webtorrent/pull/1714"
        ],
        "olp_code_files": {
          "patch": [
            "lib/server.js||lib/server.js"
          ],
          "candidate": [
            "lib/server.js||lib/server.js"
          ]
        }
      },
      "candidate_diff": {
        "lib/server.js||lib/server.js": [
          "File: lib/server.js -> lib/server.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:     const pathname = new URL(req.url, 'http://example.com').pathname",
          "87:     if (isOriginAllowed(req)) {",
          "88:       res.setHeader('Access-Control-Allow-Origin', req.headers.origin)",
          "",
          "[Removed Lines]",
          "82:     if (pathname === '/favicon.ico') {",
          "83:       return serve404Page()",
          "84:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95:     res.setHeader('Content-Security-Policy', \"base-uri 'none'; default-src 'none'; frame-ancestors 'none'; object-src 'none';\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "93:     if (pathname === '/favicon.ico') {",
          "94:       return serve404Page()",
          "95:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}