{
  "cve_id": "CVE-2014-2058",
  "cve_desc": "BuildTrigger in Jenkins before 1.551 and LTS before 1.532.2 allows remote authenticated users to bypass access restrictions and execute arbitrary jobs by configuring a job to trigger another job. NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-7330.",
  "repo": "jenkinsci/jenkins",
  "patch_hash": "b6b2a367a7976be80a799c6a49fa6c58d778b50e",
  "patch_info": {
    "commit_hash": "b6b2a367a7976be80a799c6a49fa6c58d778b50e",
    "repo": "jenkinsci/jenkins",
    "commit_url": "https://github.com/jenkinsci/jenkins/commit/b6b2a367a7976be80a799c6a49fa6c58d778b50e",
    "files": [
      "core/src/main/java/hudson/model/AbstractProject.java",
      "test/src/test/java/hudson/tasks/BuildTriggerTest.java"
    ],
    "message": "[FIXED SECURITY-109] SECURITY-55 fix to BuildTrigger configuration failed if downstream project was not visible.",
    "before_after_code_files": [
      "core/src/main/java/hudson/model/AbstractProject.java||core/src/main/java/hudson/model/AbstractProject.java",
      "test/src/test/java/hudson/tasks/BuildTriggerTest.java||test/src/test/java/hudson/tasks/BuildTriggerTest.java"
    ]
  },
  "patch_diff": {
    "core/src/main/java/hudson/model/AbstractProject.java||core/src/main/java/hudson/model/AbstractProject.java": [
      "File: core/src/main/java/hudson/model/AbstractProject.java -> core/src/main/java/hudson/model/AbstractProject.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "1940:         for (Publisher _t : Descriptor.newInstancesFromHeteroList(req, json, \"publisher\", Jenkins.getInstance().getExtensionList(BuildTrigger.DescriptorImpl.class))) {",
      "1941:             BuildTrigger t = (BuildTrigger) _t;",
      "1943:                 downstream.checkPermission(BUILD);",
      "1944:             }",
      "1945:         }",
      "",
      "[Removed Lines]",
      "1942:             for (AbstractProject downstream : t.getChildProjects(this)) {",
      "",
      "[Added Lines]",
      "1942:             List<AbstractProject> childProjects;",
      "1943:             SecurityContext orig = ACL.impersonate(ACL.SYSTEM);",
      "1944:             try {",
      "1945:                 childProjects = t.getChildProjects(this);",
      "1946:             } finally {",
      "1947:                 SecurityContextHolder.setContext(orig);",
      "1948:             }",
      "1949:             for (AbstractProject downstream : childProjects) {",
      "",
      "---------------"
    ],
    "test/src/test/java/hudson/tasks/BuildTriggerTest.java||test/src/test/java/hudson/tasks/BuildTriggerTest.java": [
      "File: test/src/test/java/hudson/tasks/BuildTriggerTest.java -> test/src/test/java/hudson/tasks/BuildTriggerTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "24: package hudson.tasks;",
      "26: import com.gargoylesoftware.htmlunit.html.HtmlForm;",
      "27: import com.gargoylesoftware.htmlunit.html.HtmlPage;",
      "28: import hudson.maven.MavenModuleSet;",
      "29: import hudson.maven.MavenModuleSetBuild;",
      "30: import hudson.model.FreeStyleBuild;",
      "31: import hudson.model.FreeStyleProject;",
      "32: import hudson.model.Result;",
      "33: import hudson.model.Run;",
      "34: import org.jvnet.hudson.test.ExtractResourceSCM;",
      "35: import org.jvnet.hudson.test.HudsonTestCase;",
      "36: import org.jvnet.hudson.test.MockBuilder;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "26: import com.gargoylesoftware.htmlunit.FailingHttpStatusCodeException;",
      "29: import com.gargoylesoftware.htmlunit.html.HtmlTextInput;",
      "34: import hudson.model.Item;",
      "37: import hudson.security.AuthorizationMatrixProperty;",
      "38: import hudson.security.LegacySecurityRealm;",
      "39: import hudson.security.Permission;",
      "40: import hudson.security.ProjectMatrixAuthorizationStrategy;",
      "41: import java.util.Collections;",
      "42: import java.util.HashMap;",
      "43: import java.util.Map;",
      "44: import java.util.Set;",
      "45: import jenkins.model.Jenkins;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "131:     public void testMavenTriggerEvenWhenUnstable() throws Exception {",
      "132:         doMavenTriggerTest(true);",
      "133:     }",
      "134: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "147:     public void testConfigureDownstreamProjectSecurity() throws Exception {",
      "148:         jenkins.setSecurityRealm(new LegacySecurityRealm());",
      "149:         ProjectMatrixAuthorizationStrategy auth = new ProjectMatrixAuthorizationStrategy();",
      "150:         auth.add(Jenkins.READ, \"alice\");",
      "151:         jenkins.setAuthorizationStrategy(auth);",
      "152:         FreeStyleProject upstream = createFreeStyleProject(\"upstream\");",
      "153:         Map<Permission,Set<String>> perms = new HashMap<Permission,Set<String>>();",
      "154:         perms.put(Item.READ, Collections.singleton(\"alice\"));",
      "155:         perms.put(Item.CONFIGURE, Collections.singleton(\"alice\"));",
      "156:         upstream.addProperty(new AuthorizationMatrixProperty(perms));",
      "157:         FreeStyleProject downstream = createFreeStyleProject(\"downstream\");",
      "159:         downstream.addProperty(new AuthorizationMatrixProperty(Collections.singletonMap(Item.READ, Collections.singleton(\"alice\"))));",
      "161:         WebClient wc = createWebClient();",
      "162:         wc.login(\"alice\");",
      "163:         HtmlPage page = wc.getPage(upstream, \"configure\");",
      "164:         HtmlForm config = page.getFormByName(\"config\");",
      "165:         config.getButtonByCaption(\"Add post-build action\").click(); // lib/hudson/project/config-publishers2.jelly",
      "166:         page.getAnchorByText(\"Build other projects\").click();",
      "167:         HtmlTextInput childProjects = config.getInputByName(\"buildTrigger.childProjects\");",
      "168:         childProjects.setValueAttribute(\"downstream\");",
      "169:         try {",
      "170:             submit(config);",
      "171:             fail();",
      "172:         } catch (FailingHttpStatusCodeException x) {",
      "173:             assertEquals(403, x.getStatusCode());",
      "174:         }",
      "175:         assertEquals(Collections.emptyList(), upstream.getDownstreamProjects());",
      "176:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "772e36662ec860d1f613e619f8ae3e62650ea1d4",
      "candidate_info": {
        "commit_hash": "772e36662ec860d1f613e619f8ae3e62650ea1d4",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/772e36662ec860d1f613e619f8ae3e62650ea1d4",
        "files": [
          "test/src/main/java/org/jvnet/hudson/test/MockQueueItemAuthenticator.java",
          "test/src/test/java/hudson/model/NodeTest.java",
          "test/src/test/java/hudson/model/QueueTest.java",
          "test/src/test/java/hudson/tasks/BuildTriggerTest.java"
        ],
        "message": "Introduced MockQueueItemAuthenticator as a convenience.",
        "before_after_code_files": [
          "test/src/main/java/org/jvnet/hudson/test/MockQueueItemAuthenticator.java||test/src/main/java/org/jvnet/hudson/test/MockQueueItemAuthenticator.java",
          "test/src/test/java/hudson/model/NodeTest.java||test/src/test/java/hudson/model/NodeTest.java",
          "test/src/test/java/hudson/model/QueueTest.java||test/src/test/java/hudson/model/QueueTest.java",
          "test/src/test/java/hudson/tasks/BuildTriggerTest.java||test/src/test/java/hudson/tasks/BuildTriggerTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "test/src/test/java/hudson/tasks/BuildTriggerTest.java||test/src/test/java/hudson/tasks/BuildTriggerTest.java"
          ],
          "candidate": [
            "test/src/test/java/hudson/tasks/BuildTriggerTest.java||test/src/test/java/hudson/tasks/BuildTriggerTest.java"
          ]
        }
      },
      "candidate_diff": {
        "test/src/main/java/org/jvnet/hudson/test/MockQueueItemAuthenticator.java||test/src/main/java/org/jvnet/hudson/test/MockQueueItemAuthenticator.java": [
          "File: test/src/main/java/org/jvnet/hudson/test/MockQueueItemAuthenticator.java -> test/src/main/java/org/jvnet/hudson/test/MockQueueItemAuthenticator.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: package org.jvnet.hudson.test;",
          "27: import hudson.Extension;",
          "28: import hudson.model.Item;",
          "29: import hudson.model.Queue;",
          "30: import hudson.model.User;",
          "31: import java.util.Map;",
          "32: import javax.inject.Inject;",
          "33: import jenkins.security.QueueItemAuthenticator;",
          "34: import jenkins.security.QueueItemAuthenticatorConfiguration;",
          "35: import jenkins.security.QueueItemAuthenticatorDescriptor;",
          "36: import org.acegisecurity.Authentication;",
          "44: public final class MockQueueItemAuthenticator extends QueueItemAuthenticator {",
          "46:     private final Map<String,Authentication> jobsToUsers;",
          "52:     public MockQueueItemAuthenticator(Map<String,Authentication> jobsToUsers) {",
          "53:         this.jobsToUsers = jobsToUsers;",
          "54:     }",
          "56:     @Override public Authentication authenticate(Queue.Item item) {",
          "57:         if (item.task instanceof Item) {",
          "58:             return jobsToUsers.get(((Item) item.task).getFullName());",
          "59:         } else {",
          "60:             return null;",
          "61:         }",
          "62:     }",
          "64:     @Extension public static final class DescriptorImpl extends QueueItemAuthenticatorDescriptor {",
          "66:         @Override public String getDisplayName() {",
          "67:             return \"MockQueueItemAuthenticator\";",
          "68:         }",
          "70:     }",
          "72: }",
          "",
          "---------------"
        ],
        "test/src/test/java/hudson/model/NodeTest.java||test/src/test/java/hudson/model/NodeTest.java": [
          "File: test/src/test/java/hudson/model/NodeTest.java -> test/src/test/java/hudson/model/NodeTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: package hudson.model;",
          "26: import hudson.model.Queue.WaitingItem;",
          "32: import hudson.model.labels.LabelAtom;",
          "33: import hudson.model.queue.CauseOfBlockage;",
          "34: import hudson.security.ACL;",
          "35: import hudson.security.GlobalMatrixAuthorizationStrategy;",
          "36: import hudson.security.HudsonPrivateSecurityRealm;",
          "37: import hudson.slaves.ComputerListener;",
          "38: import hudson.slaves.NodeProperty;",
          "39: import hudson.slaves.OfflineCause;",
          "40: import hudson.slaves.OfflineCause.ByCLI;",
          "41: import hudson.slaves.OfflineCause.UserCause;",
          "43: import java.util.Collection;",
          "44: import java.util.GregorianCalendar;",
          "49: import jenkins.model.Jenkins;",
          "52: import jenkins.security.QueueItemAuthenticatorConfiguration;",
          "60: import org.junit.Before;",
          "",
          "[Removed Lines]",
          "27: import org.jvnet.hudson.test.TestExtension;",
          "28: import java.util.List;",
          "29: import java.util.ArrayList;",
          "30: import hudson.util.TagCloud.Entry;",
          "31: import hudson.util.TagCloud;",
          "45: import org.junit.Rule;",
          "46: import org.junit.Test;",
          "47: import org.jvnet.hudson.test.JenkinsRule;",
          "48: import static org.junit.Assert.*;",
          "50: import org.acegisecurity.context.SecurityContextHolder;",
          "51: import jenkins.security.QueueItemAuthenticator;",
          "53: import org.acegisecurity.Authentication;",
          "54: import org.acegisecurity.GrantedAuthority;",
          "55: import org.acegisecurity.providers.UsernamePasswordAuthenticationToken;",
          "56: import hudson.FilePath;",
          "57: import hudson.model.Node.Mode;",
          "58: import hudson.security.Permission;",
          "59: import hudson.slaves.DumbSlave;",
          "",
          "[Added Lines]",
          "26: import hudson.FilePath;",
          "27: import hudson.model.Node.Mode;",
          "34: import hudson.security.Permission;",
          "36: import hudson.slaves.DumbSlave;",
          "41: import hudson.util.TagCloud;",
          "42: import hudson.util.TagCloud.Entry;",
          "43: import java.util.ArrayList;",
          "45: import java.util.Collections;",
          "47: import java.util.List;",
          "50: import org.acegisecurity.context.SecurityContextHolder;",
          "51: import static org.junit.Assert.*;",
          "53: import org.junit.Rule;",
          "54: import org.junit.Test;",
          "55: import org.jvnet.hudson.test.JenkinsRule;",
          "56: import org.jvnet.hudson.test.MockQueueItemAuthenticator;",
          "57: import org.jvnet.hudson.test.TestExtension;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "181:         j.jenkins.setCrumbIssuer(null);",
          "182:         HudsonPrivateSecurityRealm realm = new HudsonPrivateSecurityRealm(false);",
          "183:         j.jenkins.setSecurityRealm(realm);",
          "184:         notTake = false;",
          "186:         assertNotNull(\"Node should not take project because user does not have build permission.\", node.canTake(item));",
          "187:         message = Messages._Node_LackingBuildPermission(item.authenticate().getName(),node.getNodeName()).toString();",
          "188:         assertEquals(\"Cause of blockage should be bussy label.\", message, node.canTake(item).getShortDescription());",
          "",
          "[Removed Lines]",
          "185:         QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new QueueItemAuthenticatorImpl());",
          "",
          "[Added Lines]",
          "181:         realm.createAccount(\"John\", \"\");",
          "183:         QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(Collections.singletonMap(project.getFullName(), user.impersonate())));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "266:         }",
          "267:     }",
          "275: }",
          "",
          "[Removed Lines]",
          "269:     private static class QueueItemAuthenticatorImpl extends QueueItemAuthenticator {",
          "270:         @Override",
          "271:         public Authentication authenticate(Queue.Item item) {",
          "272:             return new UsernamePasswordAuthenticationToken(\"John \",\"John\",new GrantedAuthority[0]);",
          "273:         }",
          "274:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/src/test/java/hudson/model/QueueTest.java||test/src/test/java/hudson/model/QueueTest.java": [
          "File: test/src/test/java/hudson/model/QueueTest.java -> test/src/test/java/hudson/model/QueueTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: import hudson.matrix.TextAxis;",
          "36: import hudson.model.Cause.RemoteCause;",
          "37: import hudson.model.Cause.UserIdCause;",
          "39: import hudson.model.Queue.BlockedItem;",
          "40: import hudson.model.queue.AbstractQueueTask;",
          "41: import hudson.model.queue.QueueTaskFuture;",
          "42: import hudson.model.queue.ScheduleResult;",
          "",
          "[Removed Lines]",
          "38: import hudson.model.Queue.*;",
          "",
          "[Added Lines]",
          "39: import hudson.model.Queue.Executable;",
          "40: import hudson.model.Queue.WaitingItem;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "69: import javax.servlet.http.HttpServletRequest;",
          "70: import javax.servlet.http.HttpServletResponse;",
          "71: import jenkins.model.Jenkins;",
          "73: import jenkins.security.QueueItemAuthenticatorConfiguration;",
          "74: import org.acegisecurity.Authentication;",
          "75: import org.acegisecurity.GrantedAuthority;",
          "",
          "[Removed Lines]",
          "72: import jenkins.security.QueueItemAuthenticator;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "81: import org.apache.commons.io.FileUtils;",
          "82: import org.jvnet.hudson.test.Bug;",
          "83: import org.jvnet.hudson.test.HudsonTestCase;",
          "84: import org.jvnet.hudson.test.SequenceLock;",
          "85: import org.jvnet.hudson.test.TestBuilder;",
          "86: import org.mortbay.jetty.Server;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84: import org.jvnet.hudson.test.MockQueueItemAuthenticator;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "427:     public void testAccessControl() throws Exception {",
          "428:         configureUserRealm();",
          "430:         FreeStyleProject p = createFreeStyleProject();",
          "431:         p.getBuildersList().add(new TestBuilder() {",
          "432:             @Override",
          "433:             public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {",
          "",
          "[Removed Lines]",
          "429:         qac.getAuthenticators().add(new QueueItemAuthenticatorImpl());",
          "",
          "[Added Lines]",
          "431:         qac.getAuthenticators().add(new MockQueueItemAuthenticator(Collections.singletonMap(p.getFullName(), alice)));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "438:         assertBuildStatusSuccess(p.scheduleBuild2(0));",
          "439:     }",
          "448:     private static Authentication alice = new UsernamePasswordAuthenticationToken(\"alice\",\"alice\",new GrantedAuthority[0]);",
          "",
          "[Removed Lines]",
          "441:     private static class QueueItemAuthenticatorImpl extends QueueItemAuthenticator {",
          "442:         @Override",
          "443:         public Authentication authenticate(Queue.Item item) {",
          "444:             return alice;",
          "445:         }",
          "446:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "460:         DumbSlave s2 = createSlave();",
          "462:         configureUserRealm();",
          "464:         FreeStyleProject p = createFreeStyleProject();",
          "465:         p.getBuildersList().add(new TestBuilder() {",
          "466:             @Override",
          "467:             public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {",
          "",
          "[Removed Lines]",
          "463:         qac.getAuthenticators().add(new QueueItemAuthenticatorImpl());",
          "",
          "[Added Lines]",
          "458:         qac.getAuthenticators().add(new MockQueueItemAuthenticator(Collections.singletonMap(p.getFullName(), alice)));",
          "",
          "---------------"
        ],
        "test/src/test/java/hudson/tasks/BuildTriggerTest.java||test/src/test/java/hudson/tasks/BuildTriggerTest.java": [
          "File: test/src/test/java/hudson/tasks/BuildTriggerTest.java -> test/src/test/java/hudson/tasks/BuildTriggerTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: package hudson.tasks;",
          "26: import com.gargoylesoftware.htmlunit.html.HtmlForm;",
          "27: import com.gargoylesoftware.htmlunit.html.HtmlPage;",
          "28: import hudson.maven.MavenModuleSet;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: import org.jvnet.hudson.test.MockQueueItemAuthenticator;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33: import hudson.model.FreeStyleBuild;",
          "34: import hudson.model.FreeStyleProject;",
          "35: import hudson.model.Item;",
          "37: import hudson.model.Result;",
          "38: import hudson.model.Run;",
          "39: import hudson.model.User;",
          "",
          "[Removed Lines]",
          "36: import hudson.model.Queue;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "49: import java.util.Set;",
          "50: import javax.annotation.CheckForNull;",
          "51: import jenkins.model.Jenkins;",
          "53: import jenkins.security.QueueItemAuthenticatorConfiguration;",
          "55: import org.acegisecurity.Authentication;",
          "56: import org.acegisecurity.context.SecurityContext;",
          "57: import org.acegisecurity.context.SecurityContextHolder;",
          "58: import org.jvnet.hudson.test.ExtractResourceSCM;",
          "59: import org.jvnet.hudson.test.HudsonTestCase;",
          "60: import org.jvnet.hudson.test.MockBuilder;",
          "",
          "[Removed Lines]",
          "52: import jenkins.security.QueueItemAuthenticator;",
          "54: import jenkins.security.QueueItemAuthenticatorDescriptor;",
          "61: import org.jvnet.hudson.test.TestExtension;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "166:         auth.add(Computer.BUILD, \"anonymous\");",
          "167:         jenkins.setAuthorizationStrategy(auth);",
          "168:         final FreeStyleProject upstream = createFreeStyleProject(\"upstream\");",
          "170:         Map<Permission,Set<String>> perms = new HashMap<Permission,Set<String>>();",
          "171:         perms.put(Item.READ, Collections.singleton(\"alice\"));",
          "172:         perms.put(Item.CONFIGURE, Collections.singleton(\"alice\"));",
          "",
          "[Removed Lines]",
          "169:         QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new QIA(Collections.singletonMap(\"upstream\", \"alice\")));",
          "",
          "[Added Lines]",
          "166:         Authentication alice = User.get(\"alice\").impersonate();",
          "167:         QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(Collections.singletonMap(\"upstream\", alice)));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "190:         assertEquals(Collections.singletonList(downstream), upstream.getDownstreamProjects());",
          "193:         assertDoCheck(alice, Messages.BuildTrigger_NoSuchProject(downstreamName, \"upstream\"), upstream, downstreamName);",
          "194:         FreeStyleBuild b = buildAndAssertSuccess(upstream);",
          "195:         assertLogNotContains(downstreamName, b);",
          "",
          "[Removed Lines]",
          "192:         Authentication alice = User.get(\"alice\").impersonate();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "220:         assertNotNull(cause);",
          "221:         assertEquals(b, cause.getUpstreamRun());",
          "224:         assertDoCheck(alice, Messages.BuildTrigger_you_have_no_permission_to_build_(downstreamName), upstream, downstreamName);",
          "225:         b = buildAndAssertSuccess(upstream);",
          "226:         assertLogNotContains(downstreamName, b);",
          "",
          "[Removed Lines]",
          "223:         QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new QIA(Collections.<String,String>emptyMap()));",
          "",
          "[Added Lines]",
          "220:         QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(Collections.<String,Authentication>emptyMap()));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "257:         b3 = buildAndAssertSuccess(simple);",
          "258:         assertLogNotContains(Messages.BuildTrigger_warning_access_control_for_builds_in_glo(), b3);",
          "259:     }",
          "278:     private void assertDoCheck(Authentication auth, @CheckForNull String expectedError, AbstractProject project, String value) {",
          "279:         FormValidation result;",
          "280:         SecurityContext orig = ACL.impersonate(auth);",
          "",
          "[Removed Lines]",
          "260:     public static final class QIA extends QueueItemAuthenticator {",
          "261:         private final Map<String,String> jobsToUsers;",
          "262:         public QIA(Map<String,String> jobsToUsers) {",
          "263:             this.jobsToUsers = jobsToUsers;",
          "264:         }",
          "265:         @Override public Authentication authenticate(Queue.Item item) {",
          "266:             String user = null;",
          "267:             if (item.task instanceof Item) {",
          "268:                 user = jobsToUsers.get(((Item) item.task).getFullName());",
          "269:             }",
          "270:             return user != null ? User.get(user).impersonate() : null;",
          "271:         }",
          "272:         @TestExtension(\"testDownstreamProjectSecurity\") public static final class DescriptorImpl extends QueueItemAuthenticatorDescriptor {",
          "273:             @Override public String getDisplayName() {",
          "274:                 return \"Test QIA\";",
          "275:             }",
          "276:         }",
          "277:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d31ff2fed352cc15d808cb8aa91eba6576ed13ae",
      "candidate_info": {
        "commit_hash": "d31ff2fed352cc15d808cb8aa91eba6576ed13ae",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d31ff2fed352cc15d808cb8aa91eba6576ed13ae",
        "files": [
          "core/src/main/java/hudson/tasks/BuildTrigger.java",
          "core/src/main/resources/hudson/tasks/Messages.properties",
          "test/src/test/java/hudson/tasks/BuildTriggerTest.java"
        ],
        "message": "[JENKINS-16956] More compatible behavior: if no QIA\u2019s are configured yet, fall back to running as SYSTEM. Also make a best effort to issue a warning in the log if downstream builds might skipped due to lack of authentication; or if downstream build permissions might not be checked due to legacy behavior.",
        "before_after_code_files": [
          "core/src/main/java/hudson/tasks/BuildTrigger.java||core/src/main/java/hudson/tasks/BuildTrigger.java",
          "core/src/main/resources/hudson/tasks/Messages.properties||core/src/main/resources/hudson/tasks/Messages.properties",
          "test/src/test/java/hudson/tasks/BuildTriggerTest.java||test/src/test/java/hudson/tasks/BuildTriggerTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "test/src/test/java/hudson/tasks/BuildTriggerTest.java||test/src/test/java/hudson/tasks/BuildTriggerTest.java"
          ],
          "candidate": [
            "test/src/test/java/hudson/tasks/BuildTriggerTest.java||test/src/test/java/hudson/tasks/BuildTriggerTest.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/hudson/tasks/BuildTrigger.java||core/src/main/java/hudson/tasks/BuildTrigger.java": [
          "File: core/src/main/java/hudson/tasks/BuildTrigger.java -> core/src/main/java/hudson/tasks/BuildTrigger.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "59: import javax.annotation.CheckForNull;",
          "60: import jenkins.model.DependencyDeclarer;",
          "61: import jenkins.model.Jenkins;",
          "62: import net.sf.json.JSONObject;",
          "63: import org.acegisecurity.Authentication;",
          "64: import org.apache.commons.lang.StringUtils;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62: import jenkins.security.QueueItemAuthenticatorConfiguration;",
          "63: import jenkins.security.QueueItemAuthenticatorDescriptor;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "207:         Authentication auth = Jenkins.getAuthentication(); // from build",
          "208:         if (auth.equals(ACL.SYSTEM)) { // i.e., unspecified",
          "210:         }",
          "212:         for (Dependency dep : downstreamProjects) {",
          "",
          "[Removed Lines]",
          "209:             auth = Jenkins.ANONYMOUS;",
          "",
          "[Added Lines]",
          "211:             if (QueueItemAuthenticatorDescriptor.all().isEmpty()) {",
          "212:                 if (downstreamProjects.isEmpty()) {",
          "213:                     return true;",
          "214:                 }",
          "215:                 logger.println(Messages.BuildTrigger_warning_you_have_no_plugins_providing_ac());",
          "216:             } else if (QueueItemAuthenticatorConfiguration.get().getAuthenticators().isEmpty()) {",
          "217:                 if (downstreamProjects.isEmpty()) {",
          "218:                     return true;",
          "219:                 }",
          "220:                 logger.println(Messages.BuildTrigger_warning_access_control_for_builds_in_glo());",
          "221:             } else {",
          "228:                 logger.println(Messages.BuildTrigger_warning_this_build_has_no_associated_aut());",
          "229:                 auth = Jenkins.ANONYMOUS;",
          "230:             }",
          "",
          "---------------"
        ],
        "core/src/main/resources/hudson/tasks/Messages.properties||core/src/main/resources/hudson/tasks/Messages.properties": [
          "File: core/src/main/resources/hudson/tasks/Messages.properties -> core/src/main/resources/hudson/tasks/Messages.properties",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: BuildTrigger.NoProjectSpecified=No project specified",
          "48: BuildTrigger.NotBuildable={0} is not buildable",
          "49: BuildTrigger.Triggering=Triggering a new build of {0}",
          "50: BuildTrigger.you_have_no_permission_to_build_=You have no permission to build {0}",
          "52: CommandInterpreter.CommandFailed=command execution failed",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50: BuildTrigger.warning_access_control_for_builds_in_glo=Warning: \\u2018Access Control for Builds\\u2019 in global security configuration is empty, so falling back to legacy behavior of permitting any downstream builds to be triggered",
          "51: BuildTrigger.warning_this_build_has_no_associated_aut=Warning: this build has no associated authentication, so build permissions may be lacking, and downstream projects which cannot even be seen by an anonymous user will be silently skipped",
          "52: BuildTrigger.warning_you_have_no_plugins_providing_ac=Warning: you have no plugins providing access control for builds, so falling back to legacy behavior of permitting any downstream builds to be triggered",
          "",
          "---------------"
        ],
        "test/src/test/java/hudson/tasks/BuildTriggerTest.java||test/src/test/java/hudson/tasks/BuildTriggerTest.java": [
          "File: test/src/test/java/hudson/tasks/BuildTriggerTest.java -> test/src/test/java/hudson/tasks/BuildTriggerTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "48: import jenkins.model.Jenkins;",
          "49: import jenkins.security.QueueItemAuthenticator;",
          "50: import jenkins.security.QueueItemAuthenticatorConfiguration;",
          "51: import org.acegisecurity.Authentication;",
          "52: import org.jvnet.hudson.test.ExtractResourceSCM;",
          "53: import org.jvnet.hudson.test.HudsonTestCase;",
          "54: import org.jvnet.hudson.test.MockBuilder;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51: import jenkins.security.QueueItemAuthenticatorDescriptor;",
          "56: import org.jvnet.hudson.test.TestExtension;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "158:         auth.add(Computer.BUILD, \"anonymous\");",
          "159:         jenkins.setAuthorizationStrategy(auth);",
          "160:         final FreeStyleProject upstream = createFreeStyleProject(\"upstream\");",
          "167:         Map<Permission,Set<String>> perms = new HashMap<Permission,Set<String>>();",
          "168:         perms.put(Item.READ, Collections.singleton(\"alice\"));",
          "169:         perms.put(Item.CONFIGURE, Collections.singleton(\"alice\"));",
          "170:         upstream.addProperty(new AuthorizationMatrixProperty(perms));",
          "172:         WebClient wc = createWebClient();",
          "173:         wc.login(\"alice\");",
          "174:         HtmlPage page = wc.getPage(upstream, \"configure\");",
          "",
          "[Removed Lines]",
          "161:         QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new QueueItemAuthenticator() {",
          "162:             @Override public Authentication authenticate(Queue.Item item) {",
          "163:                 return item.task == upstream ? User.get(\"alice\").impersonate() : null;",
          "164:             }",
          "165:             private Object writeReplace() {return \"\";}",
          "166:         });",
          "171:         FreeStyleProject downstream = createFreeStyleProject(\"downstream\");",
          "",
          "[Added Lines]",
          "163:         QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new QIA(Collections.singletonMap(\"upstream\", \"alice\")));",
          "168:         String downstreamName = \"d0wnstr3am\"; // do not clash with English messages!",
          "169:         FreeStyleProject downstream = createFreeStyleProject(downstreamName);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "176:         config.getButtonByCaption(\"Add post-build action\").click(); // lib/hudson/project/config-publishers2.jelly",
          "177:         page.getAnchorByText(\"Build other projects\").click();",
          "178:         HtmlTextInput childProjects = config.getInputByName(\"buildTrigger.childProjects\");",
          "180:         submit(config);",
          "182:         assertEquals(Collections.singletonList(downstream), upstream.getDownstreamProjects());",
          "184:         FreeStyleBuild b = buildAndAssertSuccess(upstream);",
          "186:         waitUntilNoActivity();",
          "187:         assertNull(downstream.getLastBuild());",
          "188:         Map<Permission,Set<String>> grantedPermissions = new HashMap<Permission,Set<String>>();",
          "",
          "[Removed Lines]",
          "179:         childProjects.setValueAttribute(\"downstream\");",
          "185:         assertLogNotContains(\"downstream\", b);",
          "",
          "[Added Lines]",
          "177:         childProjects.setValueAttribute(downstreamName);",
          "183:         assertLogNotContains(downstreamName, b);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "192:         downstream.addProperty(amp);",
          "193:         b = buildAndAssertSuccess(upstream);",
          "195:         waitUntilNoActivity();",
          "196:         assertNull(downstream.getLastBuild());",
          "",
          "[Removed Lines]",
          "194:         assertLogContains(\"downstream\", b);",
          "",
          "[Added Lines]",
          "192:         assertLogContains(downstreamName, b);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "200:         amp = new AuthorizationMatrixProperty(grantedPermissions);",
          "201:         downstream.addProperty(amp);",
          "202:         b = buildAndAssertSuccess(upstream);",
          "204:         waitUntilNoActivity();",
          "205:         FreeStyleBuild b2 = downstream.getLastBuild();",
          "206:         assertNotNull(b2);",
          "207:         Cause.UpstreamCause cause = b2.getCause(Cause.UpstreamCause.class);",
          "208:         assertNotNull(cause);",
          "209:         assertEquals(b, cause.getUpstreamRun());",
          "212:         b = buildAndAssertSuccess(upstream);",
          "214:         waitUntilNoActivity();",
          "215:         assertEquals(1, downstream.getLastBuild().number);",
          "",
          "[Removed Lines]",
          "203:         assertLogContains(\"downstream\", b);",
          "211:         QueueItemAuthenticatorConfiguration.get().getAuthenticators().clear();",
          "213:         assertLogNotContains(\"downstream\", b);",
          "",
          "[Added Lines]",
          "201:         assertLogContains(downstreamName, b);",
          "209:         QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new QIA(Collections.<String,String>emptyMap()));",
          "211:         assertLogNotContains(downstreamName, b);",
          "212:         assertLogContains(Messages.BuildTrigger_warning_this_build_has_no_associated_aut(), b);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "220:         amp = new AuthorizationMatrixProperty(grantedPermissions);",
          "221:         downstream.addProperty(amp);",
          "222:         b = buildAndAssertSuccess(upstream);",
          "224:         waitUntilNoActivity();",
          "225:         assertEquals(2, downstream.getLastBuild().number);",
          "226:     }",
          "228: }",
          "",
          "[Removed Lines]",
          "223:         assertLogContains(\"downstream\", b);",
          "",
          "[Added Lines]",
          "222:         assertLogContains(downstreamName, b);",
          "225:         FreeStyleProject simple = createFreeStyleProject(\"simple\");",
          "226:         FreeStyleBuild b3 = buildAndAssertSuccess(simple);",
          "228:         assertLogContains(Messages.BuildTrigger_warning_this_build_has_no_associated_aut(), b3);",
          "230:         grantedPermissions.clear(); // similar behavior but different message if DescriptorImpl removed",
          "231:         downstream.removeProperty(amp);",
          "232:         amp = new AuthorizationMatrixProperty(grantedPermissions);",
          "233:         downstream.addProperty(amp);",
          "234:         QueueItemAuthenticatorConfiguration.get().getAuthenticators().clear();",
          "235:         b = buildAndAssertSuccess(upstream);",
          "236:         assertLogContains(downstreamName, b);",
          "237:         assertLogContains(Messages.BuildTrigger_warning_access_control_for_builds_in_glo(), b);",
          "238:         waitUntilNoActivity();",
          "239:         assertEquals(3, downstream.getLastBuild().number);",
          "240:         b3 = buildAndAssertSuccess(simple);",
          "241:         assertLogNotContains(Messages.BuildTrigger_warning_access_control_for_builds_in_glo(), b3);",
          "242:     }",
          "243:     public static final class QIA extends QueueItemAuthenticator {",
          "244:         private final Map<String,String> jobsToUsers;",
          "245:         public QIA(Map<String,String> jobsToUsers) {",
          "246:             this.jobsToUsers = jobsToUsers;",
          "247:         }",
          "248:         @Override public Authentication authenticate(Queue.Item item) {",
          "249:             String user = null;",
          "250:             if (item.task instanceof Item) {",
          "251:                 user = jobsToUsers.get(((Item) item.task).getFullName());",
          "252:             }",
          "253:             return user != null ? User.get(user).impersonate() : null;",
          "254:         }",
          "255:         @TestExtension(\"testDownstreamProjectSecurity\") public static final class DescriptorImpl extends QueueItemAuthenticatorDescriptor {",
          "256:             @Override public String getDisplayName() {",
          "257:                 return \"Test QIA\";",
          "258:             }",
          "259:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "36342d71e29e0620f803a7470ce96c61761648d8",
      "candidate_info": {
        "commit_hash": "36342d71e29e0620f803a7470ce96c61761648d8",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/36342d71e29e0620f803a7470ce96c61761648d8",
        "files": [
          "core/src/main/java/hudson/model/AbstractProject.java",
          "core/src/main/java/hudson/model/Descriptor.java",
          "core/src/main/java/hudson/tasks/BuildTrigger.java",
          "core/src/main/resources/hudson/tasks/Messages.properties",
          "core/src/main/resources/lib/hudson/project/config-upstream-pseudo-trigger.jelly"
        ],
        "message": "[SECURITY-55]\n\nThis patch makes standard post-build action refuse to let you configure a downstream project you cannot currently build.\nThe one from parameterized-trigger will show an error in the configure screen but still lets you save the configuration; needs an analogous patch to that plugin.\nDoes not yet protect against POSTing config.xml with the trigger.\n(cherry picked from commit 757bc8a53956e6fbab267214e6e0896f03c3c262)\n\nConflicts:\n\n\tcore/src/main/java/hudson/model/Descriptor.java",
        "before_after_code_files": [
          "core/src/main/java/hudson/model/AbstractProject.java||core/src/main/java/hudson/model/AbstractProject.java",
          "core/src/main/java/hudson/model/Descriptor.java||core/src/main/java/hudson/model/Descriptor.java",
          "core/src/main/java/hudson/tasks/BuildTrigger.java||core/src/main/java/hudson/tasks/BuildTrigger.java",
          "core/src/main/resources/hudson/tasks/Messages.properties||core/src/main/resources/hudson/tasks/Messages.properties",
          "core/src/main/resources/lib/hudson/project/config-upstream-pseudo-trigger.jelly||core/src/main/resources/lib/hudson/project/config-upstream-pseudo-trigger.jelly"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/hudson/model/AbstractProject.java||core/src/main/java/hudson/model/AbstractProject.java"
          ],
          "candidate": [
            "core/src/main/java/hudson/model/AbstractProject.java||core/src/main/java/hudson/model/AbstractProject.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/hudson/model/AbstractProject.java||core/src/main/java/hudson/model/AbstractProject.java": [
          "File: core/src/main/java/hudson/model/AbstractProject.java -> core/src/main/java/hudson/model/AbstractProject.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1914:         triggers = buildDescribable(req, Trigger.for_(this));",
          "1915:         for (Trigger t : triggers)",
          "1916:             t.start(this,true);",
          "1917:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1918:         for (Publisher _t : Descriptor.newInstancesFromHeteroList(req, json, \"publisher\", Jenkins.getInstance().getExtensionList(BuildTrigger.DescriptorImpl.class))) {",
          "1919:             BuildTrigger t = (BuildTrigger) _t;",
          "1920:             for (AbstractProject downstream : t.getChildProjects(this)) {",
          "1921:                 downstream.checkPermission(BUILD);",
          "1922:             }",
          "1923:         }",
          "",
          "---------------"
        ],
        "core/src/main/java/hudson/model/Descriptor.java||core/src/main/java/hudson/model/Descriptor.java": [
          "File: core/src/main/java/hudson/model/Descriptor.java -> core/src/main/java/hudson/model/Descriptor.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "936:             for (Object o : JSONArray.fromObject(formData)) {",
          "937:                 JSONObject jo = (JSONObject)o;",
          "938:                 String kind = jo.getString(\"kind\");",
          "940:             }",
          "941:         }",
          "",
          "[Removed Lines]",
          "939:                 items.add(find(descriptors,kind).newInstance(req,jo));",
          "",
          "[Added Lines]",
          "939:                 Descriptor<T> d = find(descriptors, kind);",
          "940:                 if (d != null) {",
          "941:                     items.add(d.newInstance(req, jo));",
          "942:                 }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "950:         for (T d : list) {",
          "951:             if(d.getClass().getName().equals(className))",
          "952:                 return d;",
          "",
          "[Removed Lines]",
          "949:     public static <T extends Descriptor> T find(Collection<? extends T> list, String className) {",
          "",
          "[Added Lines]",
          "952:     public static @CheckForNull <T extends Descriptor> T find(Collection<? extends T> list, String className) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "960:         return null;",
          "961:     }",
          "964:         return find(Jenkins.getInstance().getExtensionList(Descriptor.class),className);",
          "965:     }",
          "",
          "[Removed Lines]",
          "963:     public static Descriptor find(String className) {",
          "",
          "[Added Lines]",
          "966:     public static @CheckForNull Descriptor find(String className) {",
          "",
          "---------------"
        ],
        "core/src/main/java/hudson/tasks/BuildTrigger.java||core/src/main/java/hudson/tasks/BuildTrigger.java": [
          "File: core/src/main/java/hudson/tasks/BuildTrigger.java -> core/src/main/java/hudson/tasks/BuildTrigger.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "324:             if(!project.hasPermission(Item.CONFIGURE))      return FormValidation.ok();",
          "",
          "[Removed Lines]",
          "322:         public FormValidation doCheck(@AncestorInPath Item project, @QueryParameter String value ) {",
          "",
          "[Added Lines]",
          "322:         public FormValidation doCheck(@AncestorInPath Item project, @QueryParameter String value, @QueryParameter boolean upstream) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "334:                                 AbstractProject.findNearest(projectName,project.getParent()).getRelativeNameFrom(project)));",
          "335:                     if(!(item instanceof AbstractProject))",
          "336:                         return FormValidation.error(Messages.BuildTrigger_NotBuildable(projectName));",
          "337:                     hasProjects = true;",
          "338:                 }",
          "339:             }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "337:                     if (!upstream && !item.hasPermission(Item.BUILD)) {",
          "338:                         return FormValidation.error(Messages.BuildTrigger_you_have_no_permission_to_build_(projectName));",
          "339:                     }",
          "",
          "---------------"
        ],
        "core/src/main/resources/hudson/tasks/Messages.properties||core/src/main/resources/hudson/tasks/Messages.properties": [
          "File: core/src/main/resources/hudson/tasks/Messages.properties -> core/src/main/resources/hudson/tasks/Messages.properties",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: BuildTrigger.NoProjectSpecified=No project specified",
          "48: BuildTrigger.NotBuildable={0} is not buildable",
          "49: BuildTrigger.Triggering=Triggering a new build of {0}",
          "51: CommandInterpreter.CommandFailed=command execution failed",
          "52: CommandInterpreter.UnableToDelete=Unable to delete script file {0}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50: BuildTrigger.you_have_no_permission_to_build_=You have no permission to build {0}",
          "",
          "---------------"
        ],
        "core/src/main/resources/lib/hudson/project/config-upstream-pseudo-trigger.jelly||core/src/main/resources/lib/hudson/project/config-upstream-pseudo-trigger.jelly": [
          "File: core/src/main/resources/lib/hudson/project/config-upstream-pseudo-trigger.jelly -> core/src/main/resources/lib/hudson/project/config-upstream-pseudo-trigger.jelly",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:     <f:entry title=\"${%Project names}\"",
          "39:              description=\"${%Multiple projects can be specified like 'abc, def'}\">",
          "40:       <f:textbox name=\"upstreamProjects\" value=\"${h.getProjectListString(up)}\"",
          "42:         autoCompleteField=\"upstreamProjects\"/>",
          "43:     </f:entry>",
          "44:   </f:optionalBlock>",
          "",
          "[Removed Lines]",
          "41:         checkUrl=\"'descriptorByName/hudson.tasks.BuildTrigger/check?value='+encodeURIComponent(this.value)\"",
          "",
          "[Added Lines]",
          "41:         checkUrl=\"'descriptorByName/hudson.tasks.BuildTrigger/check?upstream=true&amp;value='+encodeURIComponent(this.value)\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "48e92efaed7d48d6bd515a7844f9c055a8e27f6b",
      "candidate_info": {
        "commit_hash": "48e92efaed7d48d6bd515a7844f9c055a8e27f6b",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/48e92efaed7d48d6bd515a7844f9c055a8e27f6b",
        "files": [
          "core/src/main/java/hudson/model/AbstractProject.java",
          "core/src/main/java/hudson/tasks/BuildTrigger.java",
          "test/src/test/java/hudson/tasks/BuildTriggerTest.java"
        ],
        "message": "[JENKINS-16956] Make BuildTrigger.execute pay attention to build permissions, rather than checking the configuring user.",
        "before_after_code_files": [
          "core/src/main/java/hudson/model/AbstractProject.java||core/src/main/java/hudson/model/AbstractProject.java",
          "core/src/main/java/hudson/tasks/BuildTrigger.java||core/src/main/java/hudson/tasks/BuildTrigger.java",
          "test/src/test/java/hudson/tasks/BuildTriggerTest.java||test/src/test/java/hudson/tasks/BuildTriggerTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/hudson/model/AbstractProject.java||core/src/main/java/hudson/model/AbstractProject.java",
            "test/src/test/java/hudson/tasks/BuildTriggerTest.java||test/src/test/java/hudson/tasks/BuildTriggerTest.java"
          ],
          "candidate": [
            "core/src/main/java/hudson/model/AbstractProject.java||core/src/main/java/hudson/model/AbstractProject.java",
            "test/src/test/java/hudson/tasks/BuildTriggerTest.java||test/src/test/java/hudson/tasks/BuildTriggerTest.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/hudson/model/AbstractProject.java||core/src/main/java/hudson/model/AbstractProject.java": [
          "File: core/src/main/java/hudson/model/AbstractProject.java -> core/src/main/java/hudson/model/AbstractProject.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1853:         triggers.replaceBy(buildDescribable(req, Trigger.for_(this)));",
          "1854:         for (Trigger t : triggers())",
          "1855:             t.start(this,true);",
          "1870:     }",
          "",
          "[Removed Lines]",
          "1857:         for (Publisher _t : Descriptor.newInstancesFromHeteroList(req, json, \"publisher\", Jenkins.getInstance().getExtensionList(BuildTrigger.DescriptorImpl.class))) {",
          "1858:             BuildTrigger t = (BuildTrigger) _t;",
          "1859:             List<AbstractProject> childProjects;",
          "1860:             SecurityContext orig = ACL.impersonate(ACL.SYSTEM);",
          "1861:             try {",
          "1862:                 childProjects = t.getChildProjects(this);",
          "1863:             } finally {",
          "1864:                 SecurityContextHolder.setContext(orig);",
          "1865:             }",
          "1866:             for (AbstractProject downstream : childProjects) {",
          "1867:                 downstream.checkPermission(BUILD);",
          "1868:             }",
          "1869:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "core/src/main/java/hudson/tasks/BuildTrigger.java||core/src/main/java/hudson/tasks/BuildTrigger.java": [
          "File: core/src/main/java/hudson/tasks/BuildTrigger.java -> core/src/main/java/hudson/tasks/BuildTrigger.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: import hudson.model.AutoCompletionCandidates;",
          "34: import hudson.model.BuildListener;",
          "35: import hudson.model.Cause.UpstreamCause;",
          "37: import hudson.model.DependencyGraph;",
          "38: import hudson.model.DependencyGraph.Dependency;",
          "40: import hudson.model.Item;",
          "41: import hudson.model.ItemGroup;",
          "42: import hudson.model.Items;",
          "",
          "[Removed Lines]",
          "36: import jenkins.model.DependencyDeclarer;",
          "39: import jenkins.model.Jenkins;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46: import hudson.model.Run;",
          "47: import hudson.model.TaskListener;",
          "48: import hudson.model.listeners.ItemListener;",
          "49: import hudson.util.FormValidation;",
          "57: import java.io.IOException;",
          "58: import java.io.PrintStream;",
          "59: import java.util.ArrayList;",
          "",
          "[Removed Lines]",
          "50: import net.sf.json.JSONObject;",
          "51: import org.apache.commons.lang.StringUtils;",
          "52: import org.kohsuke.stapler.AncestorInPath;",
          "53: import org.kohsuke.stapler.DataBoundConstructor;",
          "54: import org.kohsuke.stapler.QueryParameter;",
          "55: import org.kohsuke.stapler.StaplerRequest;",
          "",
          "[Added Lines]",
          "47: import hudson.security.ACL;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "65: import java.util.logging.Level;",
          "66: import java.util.logging.Logger;",
          "67: import javax.annotation.CheckForNull;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "60: import jenkins.model.DependencyDeclarer;",
          "61: import jenkins.model.Jenkins;",
          "62: import net.sf.json.JSONObject;",
          "63: import org.acegisecurity.Authentication;",
          "64: import org.apache.commons.lang.StringUtils;",
          "65: import org.kohsuke.stapler.AncestorInPath;",
          "66: import org.kohsuke.stapler.DataBoundConstructor;",
          "67: import org.kohsuke.stapler.QueryParameter;",
          "68: import org.kohsuke.stapler.StaplerRequest;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "203:             }",
          "204:         });",
          "206:         for (Dependency dep : downstreamProjects) {",
          "207:             AbstractProject p = dep.getDownstreamProject();",
          "208:             if (p.isDisabled()) {",
          "209:                 logger.println(Messages.BuildTrigger_Disabled(ModelHyperlinkNote.encodeTo(p)));",
          "210:                 continue;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "207:         Authentication auth = Jenkins.getAuthentication(); // from build",
          "208:         if (auth.equals(ACL.SYSTEM)) { // i.e., unspecified",
          "209:             auth = Jenkins.ANONYMOUS;",
          "210:         }",
          "216:             if (!p.getACL().hasPermission(auth, Item.READ)) {",
          "217:                 continue; // do not even issue a warning (could do so if have DISCOVER)",
          "218:             }",
          "219:             if (!p.getACL().hasPermission(auth, Item.BUILD)) {",
          "220:                 logger.println(Messages.BuildTrigger_you_have_no_permission_to_build_(ModelHyperlinkNote.encodeTo(p)));",
          "221:                 continue;",
          "222:             }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "331:                                 AbstractProject.findNearest(projectName,project.getParent()).getRelativeNameFrom(project)));",
          "332:                     if(!(item instanceof AbstractProject))",
          "333:                         return FormValidation.error(Messages.BuildTrigger_NotBuildable(projectName));",
          "337:                     hasProjects = true;",
          "338:                 }",
          "339:             }",
          "",
          "[Removed Lines]",
          "334:                     if (!upstream && !item.hasPermission(Item.BUILD)) {",
          "335:                         return FormValidation.error(Messages.BuildTrigger_you_have_no_permission_to_build_(projectName));",
          "336:                     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/src/test/java/hudson/tasks/BuildTriggerTest.java||test/src/test/java/hudson/tasks/BuildTriggerTest.java": [
          "File: test/src/test/java/hudson/tasks/BuildTriggerTest.java -> test/src/test/java/hudson/tasks/BuildTriggerTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: package hudson.tasks;",
          "27: import com.gargoylesoftware.htmlunit.html.HtmlForm;",
          "28: import com.gargoylesoftware.htmlunit.html.HtmlPage;",
          "29: import com.gargoylesoftware.htmlunit.html.HtmlTextInput;",
          "30: import hudson.maven.MavenModuleSet;",
          "31: import hudson.maven.MavenModuleSetBuild;",
          "32: import hudson.model.FreeStyleBuild;",
          "33: import hudson.model.FreeStyleProject;",
          "34: import hudson.model.Item;",
          "35: import hudson.model.Result;",
          "36: import hudson.model.Run;",
          "37: import hudson.security.AuthorizationMatrixProperty;",
          "38: import hudson.security.LegacySecurityRealm;",
          "39: import hudson.security.Permission;",
          "",
          "[Removed Lines]",
          "26: import com.gargoylesoftware.htmlunit.FailingHttpStatusCodeException;",
          "",
          "[Added Lines]",
          "31: import hudson.model.Cause;",
          "32: import hudson.model.Computer;",
          "36: import hudson.model.Queue;",
          "39: import hudson.model.User;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43: import java.util.Map;",
          "44: import java.util.Set;",
          "45: import jenkins.model.Jenkins;",
          "46: import org.jvnet.hudson.test.ExtractResourceSCM;",
          "47: import org.jvnet.hudson.test.HudsonTestCase;",
          "48: import org.jvnet.hudson.test.MockBuilder;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49: import jenkins.security.QueueItemAuthenticator;",
          "50: import jenkins.security.QueueItemAuthenticatorConfiguration;",
          "51: import org.acegisecurity.Authentication;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "144:         doMavenTriggerTest(true);",
          "145:     }",
          "148:         jenkins.setSecurityRealm(new LegacySecurityRealm());",
          "149:         ProjectMatrixAuthorizationStrategy auth = new ProjectMatrixAuthorizationStrategy();",
          "150:         auth.add(Jenkins.READ, \"alice\");",
          "151:         jenkins.setAuthorizationStrategy(auth);",
          "153:         Map<Permission,Set<String>> perms = new HashMap<Permission,Set<String>>();",
          "154:         perms.put(Item.READ, Collections.singleton(\"alice\"));",
          "155:         perms.put(Item.CONFIGURE, Collections.singleton(\"alice\"));",
          "156:         upstream.addProperty(new AuthorizationMatrixProperty(perms));",
          "157:         FreeStyleProject downstream = createFreeStyleProject(\"downstream\");",
          "161:         WebClient wc = createWebClient();",
          "162:         wc.login(\"alice\");",
          "163:         HtmlPage page = wc.getPage(upstream, \"configure\");",
          "",
          "[Removed Lines]",
          "147:     public void testConfigureDownstreamProjectSecurity() throws Exception {",
          "152:         FreeStyleProject upstream = createFreeStyleProject(\"upstream\");",
          "159:         downstream.addProperty(new AuthorizationMatrixProperty(Collections.singletonMap(Item.READ, Collections.singleton(\"alice\"))));",
          "",
          "[Added Lines]",
          "153:     public void testDownstreamProjectSecurity() throws Exception {",
          "157:         auth.add(Computer.BUILD, \"alice\");",
          "158:         auth.add(Computer.BUILD, \"anonymous\");",
          "160:         final FreeStyleProject upstream = createFreeStyleProject(\"upstream\");",
          "161:         QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new QueueItemAuthenticator() {",
          "162:             @Override public Authentication authenticate(Queue.Item item) {",
          "163:                 return item.task == upstream ? User.get(\"alice\").impersonate() : null;",
          "164:             }",
          "165:             private Object writeReplace() {return \"\";}",
          "166:         });",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "166:         page.getAnchorByText(\"Build other projects\").click();",
          "167:         HtmlTextInput childProjects = config.getInputByName(\"buildTrigger.childProjects\");",
          "168:         childProjects.setValueAttribute(\"downstream\");",
          "176:     }",
          "178: }",
          "",
          "[Removed Lines]",
          "169:         try {",
          "170:             submit(config);",
          "171:             fail();",
          "172:         } catch (FailingHttpStatusCodeException x) {",
          "173:             assertEquals(403, x.getStatusCode());",
          "174:         }",
          "175:         assertEquals(Collections.emptyList(), upstream.getDownstreamProjects());",
          "",
          "[Added Lines]",
          "180:         submit(config);",
          "182:         assertEquals(Collections.singletonList(downstream), upstream.getDownstreamProjects());",
          "184:         FreeStyleBuild b = buildAndAssertSuccess(upstream);",
          "185:         assertLogNotContains(\"downstream\", b);",
          "186:         waitUntilNoActivity();",
          "187:         assertNull(downstream.getLastBuild());",
          "188:         Map<Permission,Set<String>> grantedPermissions = new HashMap<Permission,Set<String>>();",
          "189:         grantedPermissions.put(Item.READ, Collections.singleton(\"alice\"));",
          "190:         AuthorizationMatrixProperty amp = new AuthorizationMatrixProperty(grantedPermissions);",
          "192:         downstream.addProperty(amp);",
          "193:         b = buildAndAssertSuccess(upstream);",
          "194:         assertLogContains(\"downstream\", b);",
          "195:         waitUntilNoActivity();",
          "196:         assertNull(downstream.getLastBuild());",
          "198:         grantedPermissions.put(Item.BUILD, Collections.singleton(\"alice\"));",
          "199:         downstream.removeProperty(amp);",
          "200:         amp = new AuthorizationMatrixProperty(grantedPermissions);",
          "201:         downstream.addProperty(amp);",
          "202:         b = buildAndAssertSuccess(upstream);",
          "203:         assertLogContains(\"downstream\", b);",
          "204:         waitUntilNoActivity();",
          "205:         FreeStyleBuild b2 = downstream.getLastBuild();",
          "206:         assertNotNull(b2);",
          "207:         Cause.UpstreamCause cause = b2.getCause(Cause.UpstreamCause.class);",
          "208:         assertNotNull(cause);",
          "209:         assertEquals(b, cause.getUpstreamRun());",
          "211:         QueueItemAuthenticatorConfiguration.get().getAuthenticators().clear();",
          "212:         b = buildAndAssertSuccess(upstream);",
          "213:         assertLogNotContains(\"downstream\", b);",
          "214:         waitUntilNoActivity();",
          "215:         assertEquals(1, downstream.getLastBuild().number);",
          "217:         grantedPermissions.put(Item.READ, Collections.singleton(\"anonymous\"));",
          "218:         grantedPermissions.put(Item.BUILD, Collections.singleton(\"anonymous\"));",
          "219:         downstream.removeProperty(amp);",
          "220:         amp = new AuthorizationMatrixProperty(grantedPermissions);",
          "221:         downstream.addProperty(amp);",
          "222:         b = buildAndAssertSuccess(upstream);",
          "223:         assertLogContains(\"downstream\", b);",
          "224:         waitUntilNoActivity();",
          "225:         assertEquals(2, downstream.getLastBuild().number);",
          "",
          "---------------"
        ]
      }
    }
  ]
}