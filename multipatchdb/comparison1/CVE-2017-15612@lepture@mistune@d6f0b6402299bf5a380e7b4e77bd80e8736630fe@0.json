{
  "cve_id": "CVE-2017-15612",
  "cve_desc": "mistune.py in Mistune 0.7.4 allows XSS via an unexpected newline (such as in java\\nscript:) or a crafted email address, related to the escape and autolink functions.",
  "repo": "lepture/mistune",
  "patch_hash": "d6f0b6402299bf5a380e7b4e77bd80e8736630fe",
  "patch_info": {
    "commit_hash": "d6f0b6402299bf5a380e7b4e77bd80e8736630fe",
    "repo": "lepture/mistune",
    "commit_url": "https://github.com/lepture/mistune/commit/d6f0b6402299bf5a380e7b4e77bd80e8736630fe",
    "files": [
      "mistune.py",
      "tests/__init__.py",
      "tests/test_extra.py"
    ],
    "message": "Fix bypassing XSS vulnerability.\n\nBypasing with newline.\n\nOld:\n>>> markdown('''[aa](java\n... script:alert`1`;)''')\n'<p><a href=\"java\\nscript:alert`1`;\">aa</a></p>\\n'\n\nNew:\n>>> markdown('''[aa](java\n... script:alert`1`;)''')\n'<p><a href=\"\">aa</a></p>\\n'\n\nBypassing with malicious mail address.\n\nOld:\n>>> markdown('<junorouse@gmail.com\"\\nonclick=\"alert(1);>')\n'<p><a href=\"mailto:junorouse@gmail.com\"\\nonclick=\"alert(1);\">junorouse@gmail.com\"\\nonclick=\"alert(1);</a></p>\\n'\n\nNew:\n>>> markdown('<junorouse@gmail.com\"\\nonclick=\"alert(1);>')\n'<p><a href=\"mailto:junorouse@gmail.com&quot;\\nonclick=&quot;alert(1);\">junorouse@gmail.com&quot;\\nonclick=&quot;alert(1);</a></p>\\n'",
    "before_after_code_files": [
      "mistune.py||mistune.py",
      "tests/test_extra.py||tests/test_extra.py"
    ]
  },
  "patch_diff": {
    "mistune.py||mistune.py": [
      "File: mistune.py -> mistune.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "75: def escape_link(url):",
      "76:     \"\"\"Remove dangerous URL schemes like javascript: and escape afterwards.\"\"\"",
      "77:     lower_url = url.lower().strip('\\x00\\x1a \\n\\r\\t')",
      "78:     for scheme in _scheme_blacklist:",
      "80:             return ''",
      "81:     return escape(url, quote=True, smart_amp=False)",
      "",
      "[Removed Lines]",
      "79:         if lower_url.startswith(scheme):",
      "",
      "[Added Lines]",
      "80:         if re.sub(r'[^A-Za-z0-9\\/:]+', '', lower_url).startswith(scheme):",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "844:         :param link: link content or email address.",
      "845:         :param is_email: whether this is an email or not.",
      "846:         \"\"\"",
      "848:         if is_email:",
      "849:             link = 'mailto:%s' % link",
      "850:         return '<a href=\"%s\">%s</a>' % (link, text)",
      "",
      "[Removed Lines]",
      "847:         text = link = escape(link)",
      "",
      "[Added Lines]",
      "848:         text = link = escape_link(link)",
      "",
      "---------------"
    ],
    "tests/test_extra.py||tests/test_extra.py": [
      "File: tests/test_extra.py -> tests/test_extra.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "23:         ('javascript:alert`1`', ''),",
      "24:         # bypass attempt",
      "25:         ('jAvAsCrIpT:alert`1`', ''),",
      "26:         # javascript pseudo protocol with entities",
      "27:         ('javascript&colon;alert`1`', 'javascript&amp;colon;alert`1`'),",
      "28:         # javascript pseudo protocol with prefix (dangerous in Chrome)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "26:         # bypass with newline",
      "27:         ('javasc\\nript:alert`1`', ''),",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4ac88f5e1c6658e16eb17165f75e9fea9d37fdaa",
      "candidate_info": {
        "commit_hash": "4ac88f5e1c6658e16eb17165f75e9fea9d37fdaa",
        "repo": "lepture/mistune",
        "commit_url": "https://github.com/lepture/mistune/commit/4ac88f5e1c6658e16eb17165f75e9fea9d37fdaa",
        "files": [
          "tests/test_extra.py",
          "tests/test_subclassing.py"
        ],
        "message": "Fix minors in tests (#175)\n\n* Remove a trailing whitespace\n\n* Fix - DeprecationWarning: invalid escape sequence",
        "before_after_code_files": [
          "tests/test_extra.py||tests/test_extra.py",
          "tests/test_subclassing.py||tests/test_subclassing.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tests/test_extra.py||tests/test_extra.py"
          ],
          "candidate": [
            "tests/test_extra.py||tests/test_extra.py"
          ]
        }
      },
      "candidate_diff": {
        "tests/test_extra.py||tests/test_extra.py": [
          "File: tests/test_extra.py -> tests/test_extra.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:         ('javascript:alert`1`', ''),",
          "24:         # bypass attempt",
          "25:         ('jAvAsCrIpT:alert`1`', ''),",
          "27:         ('javasc\\nript:alert`1`', ''),",
          "28:         # javascript pseudo protocol with entities",
          "29:         ('javascript&colon;alert`1`', 'javascript&amp;colon;alert`1`'),",
          "",
          "[Removed Lines]",
          "26:         # bypass with newline",
          "",
          "[Added Lines]",
          "26:         # bypass with newline",
          "",
          "---------------"
        ],
        "tests/test_subclassing.py||tests/test_subclassing.py": [
          "File: tests/test_subclassing.py -> tests/test_subclassing.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: class MathBlockGrammar(mistune.BlockGrammar):",
          "13:     latex_environment = re.compile(",
          "14:         r\"^\\\\begin\\{([a-z]*\\*?)\\}(.*?)\\\\end\\{\\1\\}\",",
          "15:         re.DOTALL",
          "",
          "[Removed Lines]",
          "12:     block_math = re.compile(\"^\\$\\$(.*?)\\$\\$\", re.DOTALL)",
          "",
          "[Added Lines]",
          "12:     block_math = re.compile(r'^\\$\\$(.*?)\\$\\$', re.DOTALL)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43: class MathInlineGrammar(mistune.InlineGrammar):",
          "45:     text = re.compile(r'^[\\s\\S]+?(?=[\\\\<!\\[_*`~$]|https?://| {2,}\\n|$)')",
          "",
          "[Removed Lines]",
          "44:     math = re.compile(\"^\\$(.+?)\\$\")",
          "",
          "[Added Lines]",
          "44:     math = re.compile(r'^\\$(.+?)\\$')",
          "",
          "---------------"
        ]
      }
    }
  ]
}