{
  "cve_id": "CVE-2022-41711",
  "cve_desc": "Badaso version 2.6.0 allows an unauthenticated remote attacker to execute arbitrary code remotely on the server. This is possible because the application does not properly validate the data uploaded by users.",
  "repo": "uasoft-indonesia/badaso",
  "patch_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
  "patch_info": {
    "commit_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
    "repo": "uasoft-indonesia/badaso",
    "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/22250eca7c364d991ce9e0a723941eae4889d6f9",
    "files": [
      "src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue"
    ],
    "message": "Merge pull request #807 from uasoft-indonesia/bugfix/v2/filter-mimeType\n\nBugfix[v2] add filter mimeType",
    "before_after_code_files": [
      "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue"
    ]
  },
  "patch_diff": {
    "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue": [
      "File: src/resources/js/components/BadasoUploadFile.vue -> src/resources/js/components/BadasoUploadFile.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "336:           });",
      "337:           return;",
      "338:         }",
      "340:         this.uploadFile(files[0]);",
      "341:       }",
      "342:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "339:         if (!this.availableMimetypes.file.validMime.includes(files[0].type)) {",
      "340:           this.$vs.notify({",
      "341:             title: this.$t(\"alert.danger\"),",
      "342:             text: \"File type not allowed\",",
      "343:             color: \"danger\",",
      "344:           });",
      "345:           return;",
      "346:         }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadFileMultiple.vue -> src/resources/js/components/BadasoUploadFileMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "367:             });",
      "368:             return;",
      "369:           }",
      "371:           this.uploadFile(file);",
      "372:         }",
      "373:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "370:           if (!this.availableMimetypes.file.validMime.includes(file.type)) {",
      "371:             this.$vs.notify({",
      "372:               title: this.$t(\"alert.danger\"),",
      "373:               text: \"File type not allowed\",",
      "374:               color: \"danger\",",
      "375:             });",
      "376:             return;",
      "377:           }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue": [
      "File: src/resources/js/components/BadasoUploadImage.vue -> src/resources/js/components/BadasoUploadImage.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "380:           });",
      "381:           return;",
      "382:         }",
      "384:         this.uploadImage(files[0]);",
      "385:       }",
      "386:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "383:         if (!this.availableMimetypes.image.validMime.includes(files[0].type)){",
      "384:           this.$vs.notify({",
      "385:             title: this.$t(\"alert.danger\"),",
      "386:             text: \"File type not allowed\",",
      "387:             color: \"danger\",",
      "388:           });",
      "389:           return;",
      "390:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "421:     uploadImage(file) {",
      "422:       const files = new FormData();",
      "423:       files.append(\"upload\", file);",
      "425:       files.append(\"working_dir\", this.getActiveFolder);",
      "426:       this.$api.badasoFile",
      "427:         .uploadUsingLfm(files)",
      "",
      "[Removed Lines]",
      "424:       files.append(\"type\", \"image\");",
      "",
      "[Added Lines]",
      "431:       files.append(\"type\", file.type);",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadImageMultiple.vue -> src/resources/js/components/BadasoUploadImageMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:             });",
      "396:             return;",
      "397:           }",
      "399:           this.uploadImage(file);",
      "400:         }",
      "401:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "398:           if (!this.availableMimetypes.image.validMime.includes(file.type)) {",
      "399:             this.$vs.notify({",
      "400:               title: this.$t(\"alert.danger\"),",
      "401:               text: \"File type not allowed\",",
      "402:               color: \"danger\",",
      "403:             });",
      "404:             return;",
      "405:           }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "000a701ed7bc7115a97c0d9eb27ec49958ae7e4e",
      "candidate_info": {
        "commit_hash": "000a701ed7bc7115a97c0d9eb27ec49958ae7e4e",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/000a701ed7bc7115a97c0d9eb27ec49958ae7e4e",
        "files": [
          "src/Controllers/Controller.php",
          "src/Helpers/GetData.php",
          "src/resources/js/pages/crud-generated/add.vue",
          "src/resources/js/pages/crud-generated/browse.vue"
        ],
        "message": "update upload image and thumbnail image",
        "before_after_code_files": [
          "src/Controllers/Controller.php||src/Controllers/Controller.php",
          "src/Helpers/GetData.php||src/Helpers/GetData.php",
          "src/resources/js/pages/crud-generated/add.vue||src/resources/js/pages/crud-generated/add.vue",
          "src/resources/js/pages/crud-generated/browse.vue||src/resources/js/pages/crud-generated/browse.vue"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Controllers/Controller.php||src/Controllers/Controller.php": [
          "File: src/Controllers/Controller.php -> src/Controllers/Controller.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "170:                 $return_value = implode(',', $uploaded_path);",
          "171:                 break;",
          "172:             case 'upload_image_multiple':",
          "175:                 break;",
          "176:             case 'upload_file':",
          "177:                 $uploaded_path = $this->handleUploadFiles([$value], $data_type);",
          "",
          "[Removed Lines]",
          "173:                 $uploaded_path = $this->handleUploadFiles($value, $data_type);",
          "174:                 $return_value = implode(',', $uploaded_path);",
          "",
          "[Added Lines]",
          "173:                 $return_value = $value;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "283:             foreach ($data as $key => $value) {",
          "284:                 $data_row = collect($data_rows)->where('field', $key)->first();",
          "285:                 if (! is_null($data_row)) {",
          "286:                     $new_data[$key] = $this->getContentByType($data_type, $data_row, $value);",
          "287:                 } else {",
          "288:                     if (in_array($key, ['created_at', 'updated_at'])) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "285:                     if($data_row['type'] == \"upload_image_multiple\"){",
          "287:                         $new_data[$key] = $this->getContentByType($data_type, $data_row, $value);",
          "288:                     }",
          "",
          "---------------"
        ],
        "src/Helpers/GetData.php||src/Helpers/GetData.php": [
          "File: src/Helpers/GetData.php -> src/Helpers/GetData.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "196:     public static function clientSideWithQueryBuilder($data_type, $builder_params, $only_data_soft_delete = false)",
          "197:     {",
          "200:         $fields = array_merge($fields, $ids);",
          "201:         $order_field = $builder_params['order_field'];",
          "202:         $order_direction = $builder_params['order_direction'];",
          "",
          "[Removed Lines]",
          "198:         $fields = collect($data_type->dataRows)->where('browse', 1)->pluck('field')->all();",
          "199:         $ids = collect($data_type->dataRows)->where('field', 'id')->pluck('field')->all();",
          "",
          "[Added Lines]",
          "198:         $data_rows = collect($data_type->dataRows) ;",
          "199:         $fields = $data_rows->where('browse', 1)->pluck('field')->all();",
          "200:         $ids = $data_rows->where('field', 'id')->pluck('field')->all();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "218:         }",
          "223:         $data = [];",
          "225:         foreach ($records as $row) {",
          "",
          "[Removed Lines]",
          "221:         $records = $records->get();",
          "",
          "[Added Lines]",
          "222:         $records = $records->get()->map(function($record) use ($data_rows){",
          "223:             foreach ($data_rows as $index => $data_row) {",
          "224:                     if($data_row->type == 'upload_image_multiple'){",
          "225:                         $upload_image_multiples = json_decode($record->{$data_row->field}, true) ;",
          "226:                         if(isset($upload_image_multiples)){",
          "227:                             $upload_image_multiples = collect($upload_image_multiples)->map(function($upload_image_multiple){",
          "228:                                 $put_thumbs = \"thumbs\" ;",
          "229:                                 $upload_image_multiple = explode(\"/\", $upload_image_multiple);",
          "230:                                 $file_name = $upload_image_multiple[count($upload_image_multiple) -1];",
          "231:                                 $upload_image_multiple[count($upload_image_multiple) -1] = $put_thumbs ;",
          "232:                                 $upload_image_multiple[] = $file_name ;",
          "233:                                 $upload_image_multiple = join(\"/\", $upload_image_multiple);",
          "235:                                 $asset = asset(\"storage/\".$upload_image_multiple);",
          "237:                                 return $asset;",
          "238:                             });",
          "239:                             $upload_image_multiples = implode(\",\",json_decode($upload_image_multiples));",
          "240:                         }",
          "241:                         $record->{$data_row->field} = $upload_image_multiples ;",
          "243:                     }elseif($data_row->type == 'upload_image'){",
          "244:                         $upload_image = $record->{$data_row->field};",
          "245:                         if(isset($upload_image)){",
          "246:                                 $put_thumbs = \"thumbs\" ;",
          "247:                                 $upload_image = explode(\"/\", $upload_image);",
          "248:                                 $file_name = $upload_image[count($upload_image) -1];",
          "249:                                 $upload_image[count($upload_image) -1] = $put_thumbs ;",
          "250:                                 $upload_image[] = $file_name ;",
          "251:                                 $upload_image = join(\"/\", $upload_image);",
          "253:                                 $upload_image = asset(\"storage/\".$upload_image);",
          "254:                                 $record->{$data_row->field} = $upload_image;",
          "255:                         }",
          "256:                     }",
          "257:                 }",
          "258:                 return $record ;",
          "259:             });",
          "",
          "---------------"
        ],
        "src/resources/js/pages/crud-generated/add.vue||src/resources/js/pages/crud-generated/add.vue": [
          "File: src/resources/js/pages/crud-generated/add.vue -> src/resources/js/pages/crud-generated/add.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "475:               data.type == \"select_multiple\" ||",
          "476:               data.type == \"checkbox\")",
          "477:           ) {",
          "479:           } else if (data.value == undefined && data.type == \"slider\") {",
          "480:             data.value = 0;",
          "481:           } else if (data.value == undefined && data.type == \"switch\") {",
          "",
          "[Removed Lines]",
          "478:             data.value = [];",
          "",
          "[Added Lines]",
          "478:             data.value = Array;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "493:           } catch (error) {}",
          "494:           return data;",
          "495:         });",
          "496:         this.dataType.dataRows = JSON.parse(JSON.stringify(dataRows));",
          "497:       } catch (error) {",
          "498:         if (error.status == 503) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "496:         console.log(response.data.crudData.dataRows);",
          "",
          "---------------"
        ],
        "src/resources/js/pages/crud-generated/browse.vue||src/resources/js/pages/crud-generated/browse.vue": [
          "File: src/resources/js/pages/crud-generated/browse.vue -> src/resources/js/pages/crud-generated/browse.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "164:                         :src=\"`${",
          "165:                           record[$caseConvert.stringSnakeToCamel(dataRow.field)]",
          "166:                         }`\"",
          "168:                         alt=\"\"",
          "169:                       />",
          "170:                       <div",
          "",
          "[Removed Lines]",
          "167:                         width=\"100%\"",
          "",
          "[Added Lines]",
          "167:                         width=\"50%\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "179:                           )\"",
          "180:                           :key=\"indexImage\"",
          "181:                           :src=\"`${image}`\"",
          "183:                           alt=\"\"",
          "184:                           class=\"crud-generated__item--image\"",
          "185:                         />",
          "",
          "[Removed Lines]",
          "182:                           width=\"100%\"",
          "",
          "[Added Lines]",
          "182:                           width=\"50%\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "423:                               $caseConvert.stringSnakeToCamel(dataRow.field)",
          "424:                             ]",
          "425:                           \"",
          "427:                           alt=\"\"",
          "428:                         />",
          "429:                         <div",
          "",
          "[Removed Lines]",
          "426:                           width=\"100%\"",
          "",
          "[Added Lines]",
          "426:                           width=\"50%\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "438:                             )\"",
          "439:                             :key=\"indexImage\"",
          "440:                             :src=\"`${image}`\"",
          "442:                             alt=\"\"",
          "443:                             class=\"crud-generated__item--image\"",
          "444:                           />",
          "",
          "[Removed Lines]",
          "441:                             width=\"100%\"",
          "",
          "[Added Lines]",
          "441:                             width=\"50%\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a9194b79981a40047b19a85d81aa1afa85819f71",
      "candidate_info": {
        "commit_hash": "a9194b79981a40047b19a85d81aa1afa85819f71",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/a9194b79981a40047b19a85d81aa1afa85819f71",
        "files": [
          "src/Config/lfm.php"
        ],
        "message": "#426 | Adjust lfm config",
        "before_after_code_files": [
          "src/Config/lfm.php||src/Config/lfm.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Config/lfm.php||src/Config/lfm.php": [
          "File: src/Config/lfm.php -> src/Config/lfm.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "95:     'disk' => env('FILESYSTEM_DRIVER', 'public'),",
          "97:     'rename_file' => false,",
          "101:     'alphanumeric_filename' => false,",
          "",
          "[Removed Lines]",
          "99:     'rename_duplicates' => false,",
          "",
          "[Added Lines]",
          "105:     'rename_duplicates' => true,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "92273378f86fd30ae23919a03308b47a70f9b909",
      "candidate_info": {
        "commit_hash": "92273378f86fd30ae23919a03308b47a70f9b909",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/92273378f86fd30ae23919a03308b47a70f9b909",
        "files": [
          "src/Controllers/BadasoBaseController.php",
          "src/Helpers/GetData.php",
          "tests/Feature/BadasoApiCrudManagementTest.php"
        ],
        "message": "update unit test and crud management",
        "before_after_code_files": [
          "src/Controllers/BadasoBaseController.php||src/Controllers/BadasoBaseController.php",
          "src/Helpers/GetData.php||src/Helpers/GetData.php",
          "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Controllers/BadasoBaseController.php||src/Controllers/BadasoBaseController.php": [
          "File: src/Controllers/BadasoBaseController.php -> src/Controllers/BadasoBaseController.php"
        ],
        "src/Helpers/GetData.php||src/Helpers/GetData.php": [
          "File: src/Helpers/GetData.php -> src/Helpers/GetData.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "222:         $records = $records->get()->map(function($record) use ($data_rows){",
          "223:             foreach ($data_rows as $index => $data_row) {",
          "224:                     if($data_row->type == 'upload_image_multiple'){",
          "225:                         $upload_image_multiples = json_decode($record->{$data_row->field}, true) ;",
          "226:                         if(isset($upload_image_multiples)){",
          "227:                             $upload_image_multiples = collect($upload_image_multiples)->map(function($upload_image_multiple){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "225:                         if(isset($record->{$data_row->field})){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "239:                             $upload_image_multiples = implode(\",\",json_decode($upload_image_multiples));",
          "240:                         }",
          "241:                         $record->{$data_row->field} = $upload_image_multiples ;",
          "243:                     }elseif($data_row->type == 'upload_image'){",
          "244:                         $upload_image = $record->{$data_row->field};",
          "245:                         if(isset($upload_image)){",
          "246:                                 $put_thumbs = \"thumbs\" ;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "243:                     }",
          "245:                         if($record->{$data_row->field}){",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "254:                                 $record->{$data_row->field} = $upload_image;",
          "255:                         }",
          "256:                     }",
          "257:                 }",
          "258:                 return $record ;",
          "259:             });",
          "261:         $data = [];",
          "263:         foreach ($records as $row) {",
          "264:             $data[] = self::getRelationData($data_type, $row);",
          "265:         }",
          "267:         $entities['data'] = $data;",
          "268:         $entities['total'] = count($data);",
          "270:         return $entities;",
          "271:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "259:                     }",
          "",
          "---------------"
        ],
        "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php": [
          "File: tests/Feature/BadasoApiCrudManagementTest.php -> tests/Feature/BadasoApiCrudManagementTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "222:                     'badaso_type' => 'upload_image_multiple',",
          "223:                     'schema_type' => 'string',",
          "224:                     'details' => json_encode((object) []),",
          "229:                     'example_update' => [",
          "230:                         'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619581504968_uasoft.png',",
          "231:                         'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619581504968_uasoft.png',",
          "",
          "[Removed Lines]",
          "225:                     'example' => [",
          "226:                         'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619582634819_badaso.png',",
          "227:                         'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619582634819_badaso.png',",
          "228:                     ],",
          "",
          "[Added Lines]",
          "225:                     'example' => \"['https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619582634819_badaso.png','https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619582634819_badaso.png']\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "534:             $request_body = $data_table_crud_management_log['request_body'];",
          "535:             $table = $request_body['name'];",
          "538:                 'table' => $table,",
          "539:             ]);",
          "540:             $response->assertSuccessful();",
          "",
          "[Removed Lines]",
          "537:             $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/crud/read'), [",
          "",
          "[Added Lines]",
          "534:              $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/crud/read'), [",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "677:     {",
          "678:         $data_add_entities = CallHelperTest::getCache($this->KEY_DATA_ADD_ENTITY);",
          "679:         foreach ($data_add_entities as $table => $data_add_entity) {",
          "681:             $response->assertSuccessful();",
          "682:         }",
          "683:     }",
          "",
          "[Removed Lines]",
          "680:             $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix(\"/entities/{$table}/all\"));",
          "",
          "[Added Lines]",
          "677:             $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix(\"/entities/{$table}/all\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cb3420bdc0b128165abc638f41c89a169368aebe",
      "candidate_info": {
        "commit_hash": "cb3420bdc0b128165abc638f41c89a169368aebe",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/cb3420bdc0b128165abc638f41c89a169368aebe",
        "files": [
          "src/Config/badaso.php"
        ],
        "message": "remove config unit test path",
        "before_after_code_files": [
          "src/Config/badaso.php||src/Config/badaso.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Config/badaso.php||src/Config/badaso.php": [
          "File: src/Config/badaso.php -> src/Config/badaso.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:             '/v1/file/*',",
          "34:         ],",
          "35:     ],",
          "39:     'manifest' => [",
          "40:         'name' => 'Badaso',",
          "41:         'short_name' => 'Badaso',",
          "",
          "[Removed Lines]",
          "36:     'unit-test' => [",
          "37:         'prefix' => '/vendor',",
          "38:     ],",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "701d2cca83424b02d87c3e1b8a7cb9b29895cddf",
      "candidate_info": {
        "commit_hash": "701d2cca83424b02d87c3e1b8a7cb9b29895cddf",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/701d2cca83424b02d87c3e1b8a7cb9b29895cddf",
        "files": [
          "src/Commands/BadasoSetup.php"
        ],
        "message": "Update BadasoSetup.php",
        "before_after_code_files": [
          "src/Commands/BadasoSetup.php||src/Commands/BadasoSetup.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Commands/BadasoSetup.php||src/Commands/BadasoSetup.php": [
          "File: src/Commands/BadasoSetup.php -> src/Commands/BadasoSetup.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:     private $force = false;",
          "",
          "[Removed Lines]",
          "33:     protected $description = 'Setup Badaso Modules';",
          "",
          "[Added Lines]",
          "33:     protected $description = 'Setup Badaso';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "288:             'MIX_API_DOCUMENTATION_ANNOTATION_ROUTE' => 'api-annotation',",
          "289:             'MIX_API_DOCUMENTATION_ROUTE' => 'api-docs',",
          "290:             'BADASO_TABLE_PREFIX' => 'badaso_',",
          "292:             'REDIS_CLIENT' => 'predis',",
          "293:         ];",
          "294:     }",
          "",
          "[Removed Lines]",
          "291:             'OCTANE_SERVER' => 'roadrunner',",
          "",
          "[Added Lines]",
          "291:             'OCTANE_SERVER' => 'swoole',",
          "",
          "---------------"
        ]
      }
    }
  ]
}