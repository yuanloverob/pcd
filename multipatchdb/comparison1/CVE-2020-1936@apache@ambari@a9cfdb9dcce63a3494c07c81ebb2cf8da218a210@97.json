{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "17407c75163063a96a5061d5d90ff7ad57a4e727",
      "candidate_info": {
        "commit_hash": "17407c75163063a96a5061d5d90ff7ad57a4e727",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/17407c75163063a96a5061d5d90ff7ad57a4e727",
        "files": [
          "contrib/views/files/src/main/resources/ui/app/components/delete-modal.js",
          "contrib/views/files/src/main/resources/ui/app/routes/files.js",
          "contrib/views/files/src/main/resources/ui/app/services/file-operation.js"
        ],
        "message": "AMBARI-25412. Remove all tags from logger service methods in ambari-contrib (#3121)",
        "before_after_code_files": [
          "contrib/views/files/src/main/resources/ui/app/components/delete-modal.js||contrib/views/files/src/main/resources/ui/app/components/delete-modal.js",
          "contrib/views/files/src/main/resources/ui/app/routes/files.js||contrib/views/files/src/main/resources/ui/app/routes/files.js",
          "contrib/views/files/src/main/resources/ui/app/services/file-operation.js||contrib/views/files/src/main/resources/ui/app/services/file-operation.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "contrib/views/files/src/main/resources/ui/app/components/delete-modal.js||contrib/views/files/src/main/resources/ui/app/components/delete-modal.js": [
          "File: contrib/views/files/src/main/resources/ui/app/components/delete-modal.js -> contrib/views/files/src/main/resources/ui/app/components/delete-modal.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:           this.set('hasError', true);",
          "81:           this.set('currentFailedPath', error.failed);",
          "82:           this.set('currentServerFailureMessage', error.message);",
          "84:           this.set('shouldRetry', error.retry);",
          "85:           this.set('currentUnprocessedPaths', error.unprocessed);",
          "86:         } else {",
          "",
          "[Removed Lines]",
          "83:           this.set('currentFailureMessage', `Failed to delete <strong>${Ember.Handlebars.Utils.escapeExpression(error.failed)}</strong>.`);",
          "",
          "[Added Lines]",
          "83:           this.set('currentFailureMessage', `Failed to delete ${Ember.Handlebars.Utils.escapeExpression(error.failed)}.`);",
          "",
          "---------------"
        ],
        "contrib/views/files/src/main/resources/ui/app/routes/files.js||contrib/views/files/src/main/resources/ui/app/routes/files.js": [
          "File: contrib/views/files/src/main/resources/ui/app/routes/files.js -> contrib/views/files/src/main/resources/ui/app/routes/files.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:       this.get('fileSelectionService').reset();",
          "62:       let path = transition.queryParams.path;",
          "63:       var formattedError = this.extractError(error);",
          "66:       this.transitionTo({",
          "67:         queryParams: {",
          "",
          "[Removed Lines]",
          "64:       this.get('logger').danger(`Failed to transition to <strong>${path}</strong>`, formattedError);",
          "",
          "[Added Lines]",
          "64:       this.get('logger').danger(`Failed to transition to ${path}`, formattedError);",
          "",
          "---------------"
        ],
        "contrib/views/files/src/main/resources/ui/app/services/file-operation.js||contrib/views/files/src/main/resources/ui/app/services/file-operation.js": [
          "File: contrib/views/files/src/main/resources/ui/app/services/file-operation.js -> contrib/views/files/src/main/resources/ui/app/services/file-operation.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "48:     return new Ember.RSVP.Promise((resolve, reject) => {",
          "49:       adapter.ajax(this._getFileOperationUrl('mkdir'), \"PUT\", {data: data}).then(",
          "50:         (response) => {",
          "52:           return resolve(response);",
          "53:         }, (responseError) => {",
          "54:           var error = this.extractError(responseError);",
          "",
          "[Removed Lines]",
          "51:           this.get('logger').success(`Successfully created <strong>${path}/${folderName}`, {flashOnly: true});",
          "",
          "[Added Lines]",
          "51:           this.get('logger').success(`Successfully created ${path}/${folderName}`, {flashOnly: true});",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "04fed34467cfcb1b970f8cca0ff1d691106e69a0",
      "candidate_info": {
        "commit_hash": "04fed34467cfcb1b970f8cca0ff1d691106e69a0",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/04fed34467cfcb1b970f8cca0ff1d691106e69a0",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricsDataTransferMethodFactory.java"
        ],
        "message": "[AMBARI-23478] YARN Cluster CPU Usage Graph Always Shows High CPU Usage (#3009)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricsDataTransferMethodFactory.java||ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricsDataTransferMethodFactory.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricsDataTransferMethodFactory.java||ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricsDataTransferMethodFactory.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricsDataTransferMethodFactory.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricsDataTransferMethodFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:     Set<String> metricsWithAggregateFunctionIds = new HashSet<>();",
          "41:     for (String metric : percentMetrics) {",
          "42:       for (String aggregateFunctionId : AGGREGATE_FUNCTION_IDENTIFIERS) {",
          "44:       }",
          "45:     }",
          "",
          "[Removed Lines]",
          "43:         metricsWithAggregateFunctionIds.add(metric + aggregateFunctionId);",
          "",
          "[Added Lines]",
          "43:         if (!\"._sum\".equals(aggregateFunctionId)) {",
          "44:           metricsWithAggregateFunctionIds.add(metric + aggregateFunctionId);",
          "45:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ed80f7add8a4cc02192671647d7cda2c8f938797",
      "candidate_info": {
        "commit_hash": "ed80f7add8a4cc02192671647d7cda2c8f938797",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/ed80f7add8a4cc02192671647d7cda2c8f938797",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/orm/DBAccessorImpl.java"
        ],
        "message": "AMBARI-25198. MYSQL connector exception while upgrading ambari to ambari-2.7.3. (mpapirkovskyy) (#2877)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/orm/DBAccessorImpl.java||ambari-server/src/main/java/org/apache/ambari/server/orm/DBAccessorImpl.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/orm/DBAccessorImpl.java||ambari-server/src/main/java/org/apache/ambari/server/orm/DBAccessorImpl.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/orm/DBAccessorImpl.java -> ambari-server/src/main/java/org/apache/ambari/server/orm/DBAccessorImpl.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "39: import java.util.HashSet;",
          "40: import java.util.List;",
          "41: import java.util.Map;",
          "42: import java.util.Set;",
          "44: import org.apache.ambari.server.configuration.Configuration;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42: import java.util.Properties;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76: @Singleton",
          "77: public class DBAccessorImpl implements DBAccessor {",
          "78:   private static final Logger LOG = LoggerFactory.getLogger(DBAccessorImpl.class);",
          "79:   private final DatabasePlatform databasePlatform;",
          "80:   private final Connection connection;",
          "81:   private final DbmsHelper dbmsHelper;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "80:   public static final String USER = \"user\";",
          "81:   public static final String PASSWORD = \"password\";",
          "82:   public static final String NULL_CATALOG_MEANS_CURRENT = \"nullCatalogMeansCurrent\";",
          "83:   public static final String TRUE = \"true\";",
          "84:   public static final int SUPPORT_CONNECTOR_VERSION = 5;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "92:     try {",
          "93:       Class.forName(configuration.getDatabaseDriver());",
          "99:       connection.setAutoCommit(true); //enable autocommit",
          "",
          "[Removed Lines]",
          "95:       connection = DriverManager.getConnection(configuration.getDatabaseUrl(),",
          "96:               configuration.getDatabaseUser(),",
          "97:               configuration.getDatabasePassword());",
          "",
          "[Added Lines]",
          "101:       connection = getNewConnection();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "153:   @Override",
          "154:   public Connection getNewConnection() {",
          "155:     try {",
          "159:     } catch (SQLException e) {",
          "160:       throw new RuntimeException(\"Unable to connect to database\", e);",
          "161:     }",
          "",
          "[Removed Lines]",
          "156:       return DriverManager.getConnection(configuration.getDatabaseUrl(),",
          "157:               configuration.getDatabaseUser(),",
          "158:               configuration.getDatabasePassword());",
          "",
          "[Added Lines]",
          "160:       Properties properties = new Properties();",
          "161:       properties.setProperty(USER, configuration.getDatabaseUser());",
          "162:       properties.setProperty(PASSWORD, configuration.getDatabasePassword());",
          "163:       if (configuration.getDatabaseUrl().contains(\"mysql\")",
          "164:           && DriverManager.getDriver(configuration.getDatabaseUrl()).getMajorVersion() > SUPPORT_CONNECTOR_VERSION) {",
          "165:         properties.setProperty(NULL_CATALOG_MEANS_CURRENT, TRUE);// jdbc mysql connector 8.x turn on legacy behaviour",
          "166:       }",
          "167:       return DriverManager.getConnection(configuration.getDatabaseUrl(),properties);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "88bfec4fb4043f75b41a16b50eeb61ac181de216",
      "candidate_info": {
        "commit_hash": "88bfec4fb4043f75b41a16b50eeb61ac181de216",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/88bfec4fb4043f75b41a16b50eeb61ac181de216",
        "files": [
          "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/pre_upgrade.py"
        ],
        "message": "AMBARI-24850 Use the proper stack root for Hive pre upgrade",
        "before_after_code_files": [
          "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/pre_upgrade.py||ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/pre_upgrade.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/pre_upgrade.py||ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/pre_upgrade.py": [
          "File: ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/pre_upgrade.py -> ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/pre_upgrade.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "93:     source_version = upgrade_summary.get_source_version(service_name = \"HIVE\")",
          "94:     target_version = upgrade_summary.get_target_version(service_name = \"HIVE\")",
          "99:     if params.security_enabled:",
          "100:       hive_kinit_cmd = format(\"{kinit_path_local} -kt {hive_server2_keytab} {hive_principal}; \")",
          "",
          "[Removed Lines]",
          "96:     source_dir = format(\"/usr/hdp/{source_version}\");",
          "97:     target_dir = format(\"/usr/hdp/{target_version}\")",
          "",
          "[Added Lines]",
          "96:     source_dir = format(\"{stack_root}/{source_version}\")",
          "97:     target_dir = format(\"{stack_root}/{target_version}\")",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bd5a7fe632ecbba2cdebce990c542127ac01dc93",
      "candidate_info": {
        "commit_hash": "bd5a7fe632ecbba2cdebce990c542127ac01dc93",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/bd5a7fe632ecbba2cdebce990c542127ac01dc93",
        "files": [
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js"
        ],
        "message": "AMBARI-25379 Minor code cleanup\n\nChange-Id: I759d9e359a03297f97c7b30a6e8eea2c7615816c",
        "before_after_code_files": [
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js||ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js||ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js": [
          "File: ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js -> ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js"
        ]
      }
    }
  ]
}