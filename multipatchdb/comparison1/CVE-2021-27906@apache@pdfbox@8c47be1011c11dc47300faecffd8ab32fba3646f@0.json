{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "21de89ba9f6b4737abb248934daf980a2d5421fe",
      "candidate_info": {
        "commit_hash": "21de89ba9f6b4737abb248934daf980a2d5421fe",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/21de89ba9f6b4737abb248934daf980a2d5421fe",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java"
        ],
        "message": "PDFBOX-4892: improve performance, as suggested by valerybokov; remove useless shift\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887270 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "61:     private static final int FLAG_INVISIBLE = 1 << 0;",
          "",
          "[Added Lines]",
          "61:     private static final int FLAG_INVISIBLE = 1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "333:         FDFAnnotation retval = null;",
          "334:         if (fdfDic != null)",
          "335:         {",
          "337:             {",
          "338:                 retval = new FDFAnnotationText(fdfDic);",
          "339:             }",
          "341:             {",
          "342:                 retval = new FDFAnnotationCaret(fdfDic);",
          "343:             }",
          "345:             {",
          "346:                 retval = new FDFAnnotationFreeText(fdfDic);",
          "347:             }",
          "350:             {",
          "351:                 retval = new FDFAnnotationFileAttachment(fdfDic);",
          "352:             }",
          "354:             {",
          "355:                 retval = new FDFAnnotationHighlight(fdfDic);",
          "356:             }",
          "358:             {",
          "359:                 retval = new FDFAnnotationInk(fdfDic);",
          "360:             }",
          "362:             {",
          "363:                 retval = new FDFAnnotationLine(fdfDic);",
          "364:             }",
          "366:             {",
          "367:                 retval = new FDFAnnotationLink(fdfDic);",
          "368:             }",
          "370:             {",
          "371:                 retval = new FDFAnnotationCircle(fdfDic);",
          "372:             }",
          "374:             {",
          "375:                 retval = new FDFAnnotationSquare(fdfDic);",
          "376:             }",
          "378:             {",
          "379:                 retval = new FDFAnnotationPolygon(fdfDic);",
          "380:             }",
          "382:             {",
          "383:                 retval = new FDFAnnotationPolyline(fdfDic);",
          "384:             }",
          "386:             {",
          "387:                 retval = new FDFAnnotationSound(fdfDic);",
          "388:             }",
          "390:             {",
          "391:                 retval = new FDFAnnotationSquiggly(fdfDic);",
          "392:             }",
          "394:             {",
          "395:                 retval = new FDFAnnotationStamp(fdfDic);",
          "396:             }",
          "398:             {",
          "399:                 retval = new FDFAnnotationStrikeOut(fdfDic);",
          "400:             }",
          "402:             {",
          "403:                 retval = new FDFAnnotationUnderline(fdfDic);",
          "404:             }",
          "405:             else",
          "406:             {",
          "407:                 LOG.warn(\"Unknown or unsupported annotation type '\"",
          "409:             }",
          "410:         }",
          "411:         return retval;",
          "",
          "[Removed Lines]",
          "336:             if (FDFAnnotationText.SUBTYPE.equals(fdfDic.getNameAsString(COSName.SUBTYPE)))",
          "340:             else if (FDFAnnotationCaret.SUBTYPE.equals(fdfDic.getNameAsString(COSName.SUBTYPE)))",
          "344:             else if (FDFAnnotationFreeText.SUBTYPE.equals(fdfDic.getNameAsString(COSName.SUBTYPE)))",
          "348:             else if (FDFAnnotationFileAttachment.SUBTYPE.equals(fdfDic",
          "349:                     .getNameAsString(COSName.SUBTYPE)))",
          "353:             else if (FDFAnnotationHighlight.SUBTYPE.equals(fdfDic.getNameAsString(COSName.SUBTYPE)))",
          "357:             else if (FDFAnnotationInk.SUBTYPE.equals(fdfDic.getNameAsString(COSName.SUBTYPE)))",
          "361:             else if (FDFAnnotationLine.SUBTYPE.equals(fdfDic.getNameAsString(COSName.SUBTYPE)))",
          "365:             else if (FDFAnnotationLink.SUBTYPE.equals(fdfDic.getNameAsString(COSName.SUBTYPE)))",
          "369:             else if (FDFAnnotationCircle.SUBTYPE.equals(fdfDic.getNameAsString(COSName.SUBTYPE)))",
          "373:             else if (FDFAnnotationSquare.SUBTYPE.equals(fdfDic.getNameAsString(COSName.SUBTYPE)))",
          "377:             else if (FDFAnnotationPolygon.SUBTYPE.equals(fdfDic.getNameAsString(COSName.SUBTYPE)))",
          "381:             else if (FDFAnnotationPolyline.SUBTYPE.equals(fdfDic.getNameAsString(COSName.SUBTYPE)))",
          "385:             else if (FDFAnnotationSound.SUBTYPE.equals(fdfDic.getNameAsString(COSName.SUBTYPE)))",
          "389:             else if (FDFAnnotationSquiggly.SUBTYPE.equals(fdfDic.getNameAsString(COSName.SUBTYPE)))",
          "393:             else if (FDFAnnotationStamp.SUBTYPE.equals(fdfDic.getNameAsString(COSName.SUBTYPE)))",
          "397:             else if (FDFAnnotationStrikeOut.SUBTYPE.equals(fdfDic.getNameAsString(COSName.SUBTYPE)))",
          "401:             else if (FDFAnnotationUnderline.SUBTYPE.equals(fdfDic.getNameAsString(COSName.SUBTYPE)))",
          "408:                         + fdfDic.getNameAsString(COSName.SUBTYPE) + \"'\");",
          "",
          "[Added Lines]",
          "336:             String fdfDicName = fdfDic.getNameAsString(COSName.SUBTYPE);",
          "337:             if (FDFAnnotationText.SUBTYPE.equals(fdfDicName))",
          "341:             else if (FDFAnnotationCaret.SUBTYPE.equals(fdfDicName))",
          "345:             else if (FDFAnnotationFreeText.SUBTYPE.equals(fdfDicName))",
          "349:             else if (FDFAnnotationFileAttachment.SUBTYPE.equals(fdfDicName))",
          "353:             else if (FDFAnnotationHighlight.SUBTYPE.equals(fdfDicName))",
          "357:             else if (FDFAnnotationInk.SUBTYPE.equals(fdfDicName))",
          "361:             else if (FDFAnnotationLine.SUBTYPE.equals(fdfDicName))",
          "365:             else if (FDFAnnotationLink.SUBTYPE.equals(fdfDicName))",
          "369:             else if (FDFAnnotationCircle.SUBTYPE.equals(fdfDicName))",
          "373:             else if (FDFAnnotationSquare.SUBTYPE.equals(fdfDicName))",
          "377:             else if (FDFAnnotationPolygon.SUBTYPE.equals(fdfDicName))",
          "381:             else if (FDFAnnotationPolyline.SUBTYPE.equals(fdfDicName))",
          "385:             else if (FDFAnnotationSound.SUBTYPE.equals(fdfDicName))",
          "389:             else if (FDFAnnotationSquiggly.SUBTYPE.equals(fdfDicName))",
          "393:             else if (FDFAnnotationStamp.SUBTYPE.equals(fdfDicName))",
          "397:             else if (FDFAnnotationStrikeOut.SUBTYPE.equals(fdfDicName))",
          "401:             else if (FDFAnnotationUnderline.SUBTYPE.equals(fdfDicName))",
          "408:                         + fdfDicName + \"'\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "faf92de87eaeeb18602b7f759e33ed577d34d042",
      "candidate_info": {
        "commit_hash": "faf92de87eaeeb18602b7f759e33ed577d34d042",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/faf92de87eaeeb18602b7f759e33ed577d34d042",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java"
        ],
        "message": "PDFBOX-5256: support quadding for fields with comb flag\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1892313 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "626:     private void insertGeneratedCombAppearance(PDPageContentStream contents, PDAppearanceStream appearanceStream,",
          "627:             PDFont font, float fontSize) throws IOException {",
          "632:         int maxLen = ((PDTextField) field).getMaxLen();",
          "633:         int numChars = Math.min(value.length(), maxLen);",
          "635:         PDRectangle paddingEdge = applyPadding(appearanceStream.getBBox(), 1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "629:         int quadding = ((PDTextField) field).getQ();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "644:         float xOffset = combWidth / 2;",
          "647:             String combString = value.substring(i, i + 1);",
          "648:             float currCharWidth = font.getStringWidth(combString) / FONTSCALE * fontSize / 2;",
          "",
          "[Removed Lines]",
          "646:         for (int i = 0; i < numChars; i++) {",
          "",
          "[Added Lines]",
          "644:         if (quadding == 2)",
          "645:         {",
          "646:             xOffset = xOffset + (maxLen - numChars) * combWidth;",
          "647:         }",
          "648:         else if (quadding == 1)",
          "649:         {",
          "650:             xOffset = xOffset + Math.floorDiv(maxLen - numChars, 2) * combWidth;",
          "651:         }",
          "653:         for (int i = 0; i < numChars; i++)",
          "654:         {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f18e563be64683b163a4ed563d4b3f9a53223b9b",
      "candidate_info": {
        "commit_hash": "f18e563be64683b163a4ed563d4b3f9a53223b9b",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/f18e563be64683b163a4ed563d4b3f9a53223b9b",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java"
        ],
        "message": "PDFBOX-4892: fix comment, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889849 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java -> pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java"
        ]
      }
    },
    {
      "candidate_hash": "dedc1d818b78f6158e89a9fe22f239135d2d96db",
      "candidate_info": {
        "commit_hash": "dedc1d818b78f6158e89a9fe22f239135d2d96db",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/dedc1d818b78f6158e89a9fe22f239135d2d96db",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PDFRenderer.java",
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java",
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawerParameters.java"
        ],
        "message": "PDFBOX-4928: add fine tuning for quality-optimized downscaling, as suggested by Christian Appl\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1884239 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PDFRenderer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PDFRenderer.java",
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java",
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawerParameters.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawerParameters.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/rendering/PDFRenderer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PDFRenderer.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/rendering/PDFRenderer.java -> pdfbox/src/main/java/org/apache/pdfbox/rendering/PDFRenderer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:     private static boolean kcmsLogged = false;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "79:     private float imageDownscalingOptimizationThreshhold = 0.5f;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "179:         this.renderingHints = renderingHints;",
          "180:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "189:     public float getImageDownscalingOptimizationThreshhold()",
          "190:     {",
          "191:         return imageDownscalingOptimizationThreshhold;",
          "192:     }",
          "202:     public void setImageDownscalingOptimizationThreshhold(float imageDownscalingOptimizationThreshhold)",
          "203:     {",
          "204:         this.imageDownscalingOptimizationThreshhold = imageDownscalingOptimizationThreshhold;",
          "205:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "261:         PDRectangle cropbBox = page.getCropBox();",
          "262:         float widthPt = cropbBox.getWidth();",
          "263:         float heightPt = cropbBox.getHeight();",
          "270:         if ((long) widthPx * (long) heightPx > Integer.MAX_VALUE)",
          "271:         {",
          "",
          "[Removed Lines]",
          "266:         int widthPx = (int) Math.max(Math.floor(widthPt * scale), 1);",
          "267:         int heightPx = (int) Math.max(Math.floor(heightPt * scale), 1);",
          "",
          "[Added Lines]",
          "289:         int widthPx = Math.round(widthPt * scale);",
          "290:         int heightPx = Math.round(heightPt * scale);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "316:         RenderingHints actualRenderingHints =",
          "317:                 renderingHints == null ? createDefaultRenderingHints(g) : renderingHints;",
          "320:         PageDrawer drawer = createPageDrawer(parameters);",
          "321:         drawer.drawPage(g, page.getCropBox());",
          "",
          "[Removed Lines]",
          "318:         PageDrawerParameters parameters = new PageDrawerParameters(this, page, subsamplingAllowed,",
          "319:                                                                    destination, actualRenderingHints);",
          "",
          "[Added Lines]",
          "340:         PageDrawerParameters parameters =",
          "341:                 new PageDrawerParameters(this, page, subsamplingAllowed, destination,",
          "342:                         actualRenderingHints, imageDownscalingOptimizationThreshhold);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "426:         RenderingHints actualRenderingHints =",
          "427:                 renderingHints == null ? createDefaultRenderingHints(graphics) : renderingHints;",
          "430:         PageDrawer drawer = createPageDrawer(parameters);",
          "431:         drawer.drawPage(graphics, cropBox);",
          "432:     }",
          "",
          "[Removed Lines]",
          "428:         PageDrawerParameters parameters = new PageDrawerParameters(this, page, subsamplingAllowed,",
          "429:                                                                    destination, actualRenderingHints);",
          "",
          "[Added Lines]",
          "451:         PageDrawerParameters parameters =",
          "452:                 new PageDrawerParameters(this, page, subsamplingAllowed, destination,",
          "453:                         actualRenderingHints, imageDownscalingOptimizationThreshhold);",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java -> pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "164:     private final RenderDestination destination;",
          "165:     private final RenderingHints renderingHints;",
          "167:     static final int JAVA_VERSION = PageDrawer.getJavaVersion();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "166:     private final float imageDownscalingOptimizationThreshhold;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "191:         this.subsamplingAllowed = parameters.isSubsamplingAllowed();",
          "192:         this.destination = parameters.getDestination();",
          "193:         this.renderingHints = parameters.getRenderingHints();",
          "194:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "195:         this.imageDownscalingOptimizationThreshhold =",
          "196:                 parameters.getImageDownscalingOptimizationThreshhold();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1253:             float scaleX = Math.abs(imageTransformMatrix.getScalingFactorX() * graphicsTransformMatrix.getScalingFactorX());",
          "1254:             float scaleY = Math.abs(imageTransformMatrix.getScalingFactorY() * graphicsTransformMatrix.getScalingFactorY());",
          "1257:                 RenderingHints.VALUE_RENDER_QUALITY.equals(graphics.getRenderingHint(RenderingHints.KEY_RENDERING)) &&",
          "1258:                 RenderingHints.VALUE_INTERPOLATION_BICUBIC.equals(graphics.getRenderingHint(RenderingHints.KEY_INTERPOLATION)))",
          "1259:             {",
          "",
          "[Removed Lines]",
          "1256:             if ((scaleX < 0.5 || scaleY < 0.5) &&",
          "",
          "[Added Lines]",
          "1259:             if ((scaleX < imageDownscalingOptimizationThreshhold || scaleY < imageDownscalingOptimizationThreshhold) &&",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawerParameters.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawerParameters.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawerParameters.java -> pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawerParameters.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:     private final boolean subsamplingAllowed;",
          "36:     private final RenderDestination destination;",
          "37:     private final RenderingHints renderingHints;",
          "42:     PageDrawerParameters(PDFRenderer renderer, PDPage page, boolean subsamplingAllowed,",
          "44:     {",
          "45:         this.renderer = renderer;",
          "46:         this.page = page;",
          "47:         this.subsamplingAllowed = subsamplingAllowed;",
          "48:         this.destination = destination;",
          "49:         this.renderingHints = renderingHints;",
          "50:     }",
          "",
          "[Removed Lines]",
          "43:                          RenderDestination destination, RenderingHints renderingHints)",
          "",
          "[Added Lines]",
          "38:     private final float imageDownscalingOptimizationThreshhold;",
          "44:                          RenderDestination destination, RenderingHints renderingHints,",
          "45:                          float imageDownscalingOptimizationThreshhold)",
          "52:         this.imageDownscalingOptimizationThreshhold = imageDownscalingOptimizationThreshhold;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "88:     {",
          "89:         return renderingHints;",
          "90:     }",
          "91: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "100:     public float getImageDownscalingOptimizationThreshhold()",
          "101:     {",
          "102:         return imageDownscalingOptimizationThreshhold;",
          "103:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "be9fd30734e0e48539670c4f9d75a9acaf05838c",
      "candidate_info": {
        "commit_hash": "be9fd30734e0e48539670c4f9d75a9acaf05838c",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/be9fd30734e0e48539670c4f9d75a9acaf05838c",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/CreateVisibleSignature2.java"
        ],
        "message": "PDFBOX-4892: fix comment\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1885936 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/CreateVisibleSignature2.java||examples/src/main/java/org/apache/pdfbox/examples/signature/CreateVisibleSignature2.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/signature/CreateVisibleSignature2.java||examples/src/main/java/org/apache/pdfbox/examples/signature/CreateVisibleSignature2.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/signature/CreateVisibleSignature2.java -> examples/src/main/java/org/apache/pdfbox/examples/signature/CreateVisibleSignature2.java"
        ]
      }
    }
  ]
}