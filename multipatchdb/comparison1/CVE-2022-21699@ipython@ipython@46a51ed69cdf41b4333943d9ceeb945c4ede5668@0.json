{
  "cve_id": "CVE-2022-21699",
  "cve_desc": "IPython (Interactive Python) is a command shell for interactive computing in multiple programming languages, originally developed for the Python programming language. Affected versions are subject to an arbitrary code execution vulnerability achieved by not properly managing cross user temporary files. This vulnerability allows one user to run code as another on the same machine. All users are advised to upgrade.",
  "repo": "ipython/ipython",
  "patch_hash": "46a51ed69cdf41b4333943d9ceeb945c4ede5668",
  "patch_info": {
    "commit_hash": "46a51ed69cdf41b4333943d9ceeb945c4ede5668",
    "repo": "ipython/ipython",
    "commit_url": "https://github.com/ipython/ipython/commit/46a51ed69cdf41b4333943d9ceeb945c4ede5668",
    "files": [
      "IPython/__init__.py",
      "IPython/core/application.py",
      "IPython/core/profileapp.py",
      "IPython/core/profiledir.py",
      "IPython/tests/cve.py",
      "docs/source/whatsnew/version8.rst"
    ],
    "message": "Merge pull request from GHSA-pq7m-3gw7-gq5x\n\nFIX CVE-2022-21699",
    "before_after_code_files": [
      "IPython/__init__.py||IPython/__init__.py",
      "IPython/core/application.py||IPython/core/application.py",
      "IPython/core/profileapp.py||IPython/core/profileapp.py",
      "IPython/core/profiledir.py||IPython/core/profiledir.py",
      "IPython/tests/cve.py||IPython/tests/cve.py"
    ]
  },
  "patch_diff": {
    "IPython/__init__.py||IPython/__init__.py": [
      "File: IPython/__init__.py -> IPython/__init__.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "60: __license__  = release.license",
      "61: __version__  = release.version",
      "62: version_info = release.version_info",
      "64: def embed_kernel(module=None, local_ns=None, **kwargs):",
      "65:     \"\"\"Embed and start an IPython kernel in a given scope.",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "63: # list of CVEs that should have been patched in this release.",
      "64: # this is informational and should not be relied upon.",
      "65: __patched_cves__ = {\"CVE-2022-21699\"}",
      "",
      "---------------"
    ],
    "IPython/core/application.py||IPython/core/application.py": [
      "File: IPython/core/application.py -> IPython/core/application.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "157:     config_file_paths = List(Unicode())",
      "158:     @default('config_file_paths')",
      "159:     def _config_file_paths_default(self):",
      "162:     extra_config_file = Unicode(",
      "163:     help=\"\"\"Path to an extra config file to load.",
      "",
      "[Removed Lines]",
      "160:         return [os.getcwd()]",
      "",
      "[Added Lines]",
      "160:         return []",
      "",
      "---------------"
    ],
    "IPython/core/profileapp.py||IPython/core/profileapp.py": [
      "File: IPython/core/profileapp.py -> IPython/core/profileapp.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "181:         profiles = list_profiles_in(os.getcwd())",
      "182:         if profiles:",
      "183:             print()",
      "187:         print()",
      "188:         print(\"To use any of the above profiles, start IPython with:\")",
      "189:         print(\"    ipython --profile=<name>\")",
      "",
      "[Removed Lines]",
      "184:             print(\"Available profiles in current directory (%s):\" % os.getcwd())",
      "185:             self._print_profiles(profiles)",
      "",
      "[Added Lines]",
      "184:             print(",
      "185:                 \"Profiles from CWD have been removed for security reason, see CVE-2022-21699:\"",
      "186:             )",
      "",
      "---------------"
    ],
    "IPython/core/profiledir.py||IPython/core/profiledir.py": [
      "File: IPython/core/profiledir.py -> IPython/core/profiledir.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "188:         is not found, a :class:`ProfileDirError` exception will be raised.",
      "190:         The search path algorithm is:",
      "192:         2. ``ipython_dir``",
      "194:         Parameters",
      "",
      "[Removed Lines]",
      "191:         1. ``os.getcwd()``",
      "",
      "[Added Lines]",
      "191:         1. ``os.getcwd()`` # removed for security reason.",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "200:             will be \"profile_<profile>\".",
      "201:         \"\"\"",
      "202:         dirname = u'profile_' + name",
      "204:         for p in paths:",
      "205:             profile_dir = os.path.join(p, dirname)",
      "206:             if os.path.isdir(profile_dir):",
      "",
      "[Removed Lines]",
      "203:         paths = [os.getcwd(), ipython_dir]",
      "",
      "[Added Lines]",
      "203:         paths = [ipython_dir]",
      "",
      "---------------"
    ],
    "IPython/tests/cve.py||IPython/tests/cve.py": [
      "File: IPython/tests/cve.py -> IPython/tests/cve.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: \"\"\"",
      "2: Test that CVEs stay fixed.",
      "3: \"\"\"",
      "5: from IPython.utils.tempdir import TemporaryDirectory, TemporaryWorkingDirectory",
      "6: from pathlib import Path",
      "7: import random",
      "8: import sys",
      "9: import os",
      "10: import string",
      "11: import subprocess",
      "12: import time",
      "14: def test_cve_2022_21699():",
      "15:     \"\"\"",
      "16:     Here we test CVE-2022-21699.",
      "18:     We create a temporary directory, cd into it.",
      "19:     Make a profile file that should not be executed and start IPython in a subprocess,",
      "20:     checking for the value.",
      "24:     \"\"\"",
      "26:     dangerous_profile_dir = Path('profile_default')",
      "28:     dangerous_startup_dir = dangerous_profile_dir / 'startup'",
      "29:     dangerous_expected = 'CVE-2022-21699-'+''.join([random.choice(string.ascii_letters) for i in range(10)])",
      "31:     with TemporaryWorkingDirectory() as t:",
      "32:         dangerous_startup_dir.mkdir(parents=True)",
      "33:         (dangerous_startup_dir/ 'foo.py').write_text(f'print(\"{dangerous_expected}\")')",
      "34:         # 1 sec to make sure FS is flushed.",
      "35:         #time.sleep(1)",
      "36:         cmd = [sys.executable,'-m', 'IPython']",
      "37:         env = os.environ.copy()",
      "38:         env['IPY_TEST_SIMPLE_PROMPT'] = '1'",
      "41:         # First we fake old behavior, making sure the profile is/was actually dangerous",
      "42:         p_dangerous = subprocess.Popen(cmd + [f'--profile-dir={dangerous_profile_dir}'], env=env, stdin=subprocess.PIPE,",
      "43:                 stdout=subprocess.PIPE, stderr=subprocess.PIPE)",
      "44:         out_dangerous, err_dangerouns = p_dangerous.communicate(b\"exit\\r\")",
      "45:         assert dangerous_expected in out_dangerous.decode()",
      "47:         # Now that we know it _would_ have been dangerous, we test it's not loaded",
      "48:         p = subprocess.Popen(cmd, env=env, stdin=subprocess.PIPE,",
      "49:                 stdout=subprocess.PIPE, stderr=subprocess.PIPE)",
      "50:         out, err = p.communicate(b\"exit\\r\")",
      "51:         assert b'IPython' in out",
      "52:         assert dangerous_expected not in out.decode()",
      "53:         assert err == b''",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a06ca837273271b4acb82c29be97c0b6d12a30ea",
      "candidate_info": {
        "commit_hash": "a06ca837273271b4acb82c29be97c0b6d12a30ea",
        "repo": "ipython/ipython",
        "commit_url": "https://github.com/ipython/ipython/commit/a06ca837273271b4acb82c29be97c0b6d12a30ea",
        "files": [
          "IPython/__init__.py",
          "IPython/core/application.py",
          "IPython/core/profileapp.py",
          "IPython/core/profiledir.py",
          "IPython/tests/cve.py",
          "docs/source/whatsnew/version8.rst"
        ],
        "message": "Merge pull request from GHSA-pq7m-3gw7-gq5x\n\nFIX CVE-2022-21699",
        "before_after_code_files": [
          "IPython/__init__.py||IPython/__init__.py",
          "IPython/core/application.py||IPython/core/application.py",
          "IPython/core/profileapp.py||IPython/core/profileapp.py",
          "IPython/core/profiledir.py||IPython/core/profiledir.py",
          "IPython/tests/cve.py||IPython/tests/cve.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "IPython/__init__.py||IPython/__init__.py",
            "IPython/core/application.py||IPython/core/application.py",
            "IPython/core/profileapp.py||IPython/core/profileapp.py",
            "IPython/core/profiledir.py||IPython/core/profiledir.py",
            "IPython/tests/cve.py||IPython/tests/cve.py"
          ],
          "candidate": [
            "IPython/__init__.py||IPython/__init__.py",
            "IPython/core/application.py||IPython/core/application.py",
            "IPython/core/profileapp.py||IPython/core/profileapp.py",
            "IPython/core/profiledir.py||IPython/core/profiledir.py",
            "IPython/tests/cve.py||IPython/tests/cve.py"
          ]
        }
      },
      "candidate_diff": {
        "IPython/__init__.py||IPython/__init__.py": [
          "File: IPython/__init__.py -> IPython/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "60: __license__  = release.license",
          "61: __version__  = release.version",
          "62: version_info = release.version_info",
          "64: def embed_kernel(module=None, local_ns=None, **kwargs):",
          "65:     \"\"\"Embed and start an IPython kernel in a given scope.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63: # list of CVEs that should have been patched in this release.",
          "64: # this is informational and should not be relied upon.",
          "65: __patched_cves__ = {\"CVE-2022-21699\"}",
          "",
          "---------------"
        ],
        "IPython/core/application.py||IPython/core/application.py": [
          "File: IPython/core/application.py -> IPython/core/application.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "157:     config_file_paths = List(Unicode())",
          "158:     @default('config_file_paths')",
          "159:     def _config_file_paths_default(self):",
          "162:     extra_config_file = Unicode(",
          "163:     help=\"\"\"Path to an extra config file to load.",
          "",
          "[Removed Lines]",
          "160:         return [os.getcwd()]",
          "",
          "[Added Lines]",
          "160:         return []",
          "",
          "---------------"
        ],
        "IPython/core/profileapp.py||IPython/core/profileapp.py": [
          "File: IPython/core/profileapp.py -> IPython/core/profileapp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "181:         profiles = list_profiles_in(os.getcwd())",
          "182:         if profiles:",
          "183:             print()",
          "187:         print()",
          "188:         print(\"To use any of the above profiles, start IPython with:\")",
          "189:         print(\"    ipython --profile=<name>\")",
          "",
          "[Removed Lines]",
          "184:             print(\"Available profiles in current directory (%s):\" % os.getcwd())",
          "185:             self._print_profiles(profiles)",
          "",
          "[Added Lines]",
          "184:             print(",
          "185:                 \"Profiles from CWD have been removed for security reason, see CVE-2022-21699:\"",
          "186:             )",
          "",
          "---------------"
        ],
        "IPython/core/profiledir.py||IPython/core/profiledir.py": [
          "File: IPython/core/profiledir.py -> IPython/core/profiledir.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "188:         is not found, a :class:`ProfileDirError` exception will be raised.",
          "190:         The search path algorithm is:",
          "192:         2. ``ipython_dir``",
          "194:         Parameters",
          "",
          "[Removed Lines]",
          "191:         1. ``os.getcwd()``",
          "",
          "[Added Lines]",
          "191:         1. ``os.getcwd()`` # removed for security reason.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "200:             will be \"profile_<profile>\".",
          "201:         \"\"\"",
          "202:         dirname = u'profile_' + name",
          "204:         for p in paths:",
          "205:             profile_dir = os.path.join(p, dirname)",
          "206:             if os.path.isdir(profile_dir):",
          "",
          "[Removed Lines]",
          "203:         paths = [os.getcwd(), ipython_dir]",
          "",
          "[Added Lines]",
          "203:         paths = [ipython_dir]",
          "",
          "---------------"
        ],
        "IPython/tests/cve.py||IPython/tests/cve.py": [
          "File: IPython/tests/cve.py -> IPython/tests/cve.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: \"\"\"",
          "2: Test that CVEs stay fixed.",
          "3: \"\"\"",
          "5: from IPython.utils.tempdir import TemporaryDirectory, TemporaryWorkingDirectory",
          "6: from pathlib import Path",
          "7: import random",
          "8: import sys",
          "9: import os",
          "10: import string",
          "11: import subprocess",
          "12: import time",
          "14: def test_cve_2022_21699():",
          "15:     \"\"\"",
          "16:     Here we test CVE-2022-21699.",
          "18:     We create a temporary directory, cd into it.",
          "19:     Make a profile file that should not be executed and start IPython in a subprocess,",
          "20:     checking for the value.",
          "24:     \"\"\"",
          "26:     dangerous_profile_dir = Path('profile_default')",
          "28:     dangerous_startup_dir = dangerous_profile_dir / 'startup'",
          "29:     dangerous_expected = 'CVE-2022-21699-'+''.join([random.choice(string.ascii_letters) for i in range(10)])",
          "31:     with TemporaryWorkingDirectory() as t:",
          "32:         dangerous_startup_dir.mkdir(parents=True)",
          "33:         (dangerous_startup_dir/ 'foo.py').write_text(f'print(\"{dangerous_expected}\")')",
          "34:         # 1 sec to make sure FS is flushed.",
          "35:         #time.sleep(1)",
          "36:         cmd = [sys.executable,'-m', 'IPython']",
          "37:         env = os.environ.copy()",
          "38:         env['IPY_TEST_SIMPLE_PROMPT'] = '1'",
          "41:         # First we fake old behavior, making sure the profile is/was actually dangerous",
          "42:         p_dangerous = subprocess.Popen(cmd + [f'--profile-dir={dangerous_profile_dir}'], env=env, stdin=subprocess.PIPE,",
          "43:                 stdout=subprocess.PIPE, stderr=subprocess.PIPE)",
          "44:         out_dangerous, err_dangerouns = p_dangerous.communicate(b\"exit\\r\")",
          "45:         assert dangerous_expected in out_dangerous.decode()",
          "47:         # Now that we know it _would_ have been dangerous, we test it's not loaded",
          "48:         p = subprocess.Popen(cmd, env=env, stdin=subprocess.PIPE,",
          "49:                 stdout=subprocess.PIPE, stderr=subprocess.PIPE)",
          "50:         out, err = p.communicate(b\"exit\\r\")",
          "51:         assert b'IPython' in out",
          "52:         assert dangerous_expected not in out.decode()",
          "53:         assert err == b''",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5fa1e409d2dc126c456510c16ece18e08b524e5b",
      "candidate_info": {
        "commit_hash": "5fa1e409d2dc126c456510c16ece18e08b524e5b",
        "repo": "ipython/ipython",
        "commit_url": "https://github.com/ipython/ipython/commit/5fa1e409d2dc126c456510c16ece18e08b524e5b",
        "files": [
          "IPython/__init__.py",
          "IPython/core/application.py",
          "IPython/core/profileapp.py",
          "IPython/core/profiledir.py",
          "IPython/tests/cve.py",
          "docs/source/whatsnew/version7.rst"
        ],
        "message": "Merge pull request from GHSA-pq7m-3gw7-gq5x\n\nFIX CVE-2022-21699",
        "before_after_code_files": [
          "IPython/__init__.py||IPython/__init__.py",
          "IPython/core/application.py||IPython/core/application.py",
          "IPython/core/profileapp.py||IPython/core/profileapp.py",
          "IPython/core/profiledir.py||IPython/core/profiledir.py",
          "IPython/tests/cve.py||IPython/tests/cve.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "IPython/__init__.py||IPython/__init__.py",
            "IPython/core/application.py||IPython/core/application.py",
            "IPython/core/profileapp.py||IPython/core/profileapp.py",
            "IPython/core/profiledir.py||IPython/core/profiledir.py",
            "IPython/tests/cve.py||IPython/tests/cve.py"
          ],
          "candidate": [
            "IPython/__init__.py||IPython/__init__.py",
            "IPython/core/application.py||IPython/core/application.py",
            "IPython/core/profileapp.py||IPython/core/profileapp.py",
            "IPython/core/profiledir.py||IPython/core/profiledir.py",
            "IPython/tests/cve.py||IPython/tests/cve.py"
          ]
        }
      },
      "candidate_diff": {
        "IPython/__init__.py||IPython/__init__.py": [
          "File: IPython/__init__.py -> IPython/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "65: __license__  = release.license",
          "66: __version__  = release.version",
          "67: version_info = release.version_info",
          "69: def embed_kernel(module=None, local_ns=None, **kwargs):",
          "70:     \"\"\"Embed and start an IPython kernel in a given scope.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68: # list of CVEs that should have been patched in this release.",
          "69: # this is informational and should not be relied upon.",
          "70: __patched_cves__ = {\"CVE-2022-21699\"}",
          "",
          "---------------"
        ],
        "IPython/core/application.py||IPython/core/application.py": [
          "File: IPython/core/application.py -> IPython/core/application.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "133:     config_file_paths = List(Unicode())",
          "134:     @default('config_file_paths')",
          "135:     def _config_file_paths_default(self):",
          "138:     extra_config_file = Unicode(",
          "139:     help=\"\"\"Path to an extra config file to load.",
          "",
          "[Removed Lines]",
          "136:         return [os.getcwd()]",
          "",
          "[Added Lines]",
          "136:         return []",
          "",
          "---------------"
        ],
        "IPython/core/profileapp.py||IPython/core/profileapp.py": [
          "File: IPython/core/profileapp.py -> IPython/core/profileapp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "181:         profiles = list_profiles_in(os.getcwd())",
          "182:         if profiles:",
          "183:             print()",
          "187:         print()",
          "188:         print(\"To use any of the above profiles, start IPython with:\")",
          "189:         print(\"    ipython --profile=<name>\")",
          "",
          "[Removed Lines]",
          "184:             print(\"Available profiles in current directory (%s):\" % os.getcwd())",
          "185:             self._print_profiles(profiles)",
          "",
          "[Added Lines]",
          "184:             print(",
          "185:                 \"Profiles from CWD have been removed for security reason, see CVE-2022-21699:\"",
          "186:             )",
          "",
          "---------------"
        ],
        "IPython/core/profiledir.py||IPython/core/profiledir.py": [
          "File: IPython/core/profiledir.py -> IPython/core/profiledir.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "186:         is not found, a :class:`ProfileDirError` exception will be raised.",
          "188:         The search path algorithm is:",
          "190:         2. ``ipython_dir``",
          "192:         Parameters",
          "",
          "[Removed Lines]",
          "189:         1. ``os.getcwd()``",
          "",
          "[Added Lines]",
          "189:         1. ``os.getcwd()`` # removed for security reason.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "198:             will be \"profile_<profile>\".",
          "199:         \"\"\"",
          "200:         dirname = u'profile_' + name",
          "202:         for p in paths:",
          "203:             profile_dir = os.path.join(p, dirname)",
          "204:             if os.path.isdir(profile_dir):",
          "",
          "[Removed Lines]",
          "201:         paths = [os.getcwd(), ipython_dir]",
          "",
          "[Added Lines]",
          "201:         paths = [ipython_dir]",
          "",
          "---------------"
        ],
        "IPython/tests/cve.py||IPython/tests/cve.py": [
          "File: IPython/tests/cve.py -> IPython/tests/cve.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: \"\"\"",
          "2: Test that CVEs stay fixed.",
          "3: \"\"\"",
          "5: from IPython.utils.tempdir import TemporaryDirectory, TemporaryWorkingDirectory",
          "6: from pathlib import Path",
          "7: import random",
          "8: import sys",
          "9: import os",
          "10: import string",
          "11: import subprocess",
          "12: import time",
          "14: def test_cve_2022_21699():",
          "15:     \"\"\"",
          "16:     Here we test CVE-2022-21699.",
          "18:     We create a temporary directory, cd into it.",
          "19:     Make a profile file that should not be executed and start IPython in a subprocess,",
          "20:     checking for the value.",
          "24:     \"\"\"",
          "26:     dangerous_profile_dir = Path('profile_default')",
          "28:     dangerous_startup_dir = dangerous_profile_dir / 'startup'",
          "29:     dangerous_expected = 'CVE-2022-21699-'+''.join([random.choice(string.ascii_letters) for i in range(10)])",
          "31:     with TemporaryWorkingDirectory() as t:",
          "32:         dangerous_startup_dir.mkdir(parents=True)",
          "33:         (dangerous_startup_dir/ 'foo.py').write_text(f'print(\"{dangerous_expected}\")')",
          "34:         # 1 sec to make sure FS is flushed.",
          "35:         #time.sleep(1)",
          "36:         cmd = [sys.executable,'-m', 'IPython']",
          "37:         env = os.environ.copy()",
          "38:         env['IPY_TEST_SIMPLE_PROMPT'] = '1'",
          "41:         # First we fake old behavior, making sure the profile is/was actually dangerous",
          "42:         p_dangerous = subprocess.Popen(cmd + [f'--profile-dir={dangerous_profile_dir}'], env=env, stdin=subprocess.PIPE,",
          "43:                 stdout=subprocess.PIPE, stderr=subprocess.PIPE)",
          "44:         out_dangerous, err_dangerouns = p_dangerous.communicate(b\"exit\\r\")",
          "45:         assert dangerous_expected in out_dangerous.decode()",
          "47:         # Now that we know it _would_ have been dangerous, we test it's not loaded",
          "48:         p = subprocess.Popen(cmd, env=env, stdin=subprocess.PIPE,",
          "49:                 stdout=subprocess.PIPE, stderr=subprocess.PIPE)",
          "50:         out, err = p.communicate(b\"exit\\r\")",
          "51:         assert b'IPython' in out",
          "52:         assert dangerous_expected not in out.decode()",
          "53:         assert err == b''",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "67ca2b3aa9039438e6f80e3fccca556f26100b4d",
      "candidate_info": {
        "commit_hash": "67ca2b3aa9039438e6f80e3fccca556f26100b4d",
        "repo": "ipython/ipython",
        "commit_url": "https://github.com/ipython/ipython/commit/67ca2b3aa9039438e6f80e3fccca556f26100b4d",
        "files": [
          "IPython/__init__.py",
          "IPython/core/application.py",
          "IPython/core/profileapp.py",
          "IPython/core/profiledir.py",
          "IPython/tests/cve.py",
          "docs/source/whatsnew/version7.rst"
        ],
        "message": "Merge pull request from GHSA-pq7m-3gw7-gq5x\n\nFIX CVE-2022-21699",
        "before_after_code_files": [
          "IPython/__init__.py||IPython/__init__.py",
          "IPython/core/application.py||IPython/core/application.py",
          "IPython/core/profileapp.py||IPython/core/profileapp.py",
          "IPython/core/profiledir.py||IPython/core/profiledir.py",
          "IPython/tests/cve.py||IPython/tests/cve.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "IPython/__init__.py||IPython/__init__.py",
            "IPython/core/application.py||IPython/core/application.py",
            "IPython/core/profileapp.py||IPython/core/profileapp.py",
            "IPython/core/profiledir.py||IPython/core/profiledir.py",
            "IPython/tests/cve.py||IPython/tests/cve.py"
          ],
          "candidate": [
            "IPython/__init__.py||IPython/__init__.py",
            "IPython/core/application.py||IPython/core/application.py",
            "IPython/core/profileapp.py||IPython/core/profileapp.py",
            "IPython/core/profiledir.py||IPython/core/profiledir.py",
            "IPython/tests/cve.py||IPython/tests/cve.py"
          ]
        }
      },
      "candidate_diff": {
        "IPython/__init__.py||IPython/__init__.py": [
          "File: IPython/__init__.py -> IPython/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "65: __license__  = release.license",
          "66: __version__  = release.version",
          "67: version_info = release.version_info",
          "69: def embed_kernel(module=None, local_ns=None, **kwargs):",
          "70:     \"\"\"Embed and start an IPython kernel in a given scope.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68: # list of CVEs that should have been patched in this release.",
          "69: # this is informational and should not be relied upon.",
          "70: __patched_cves__ = {\"CVE-2022-21699\"}",
          "",
          "---------------"
        ],
        "IPython/core/application.py||IPython/core/application.py": [
          "File: IPython/core/application.py -> IPython/core/application.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "133:     config_file_paths = List(Unicode())",
          "134:     @default('config_file_paths')",
          "135:     def _config_file_paths_default(self):",
          "138:     extra_config_file = Unicode(",
          "139:     help=\"\"\"Path to an extra config file to load.",
          "",
          "[Removed Lines]",
          "136:         return [os.getcwd()]",
          "",
          "[Added Lines]",
          "136:         return []",
          "",
          "---------------"
        ],
        "IPython/core/profileapp.py||IPython/core/profileapp.py": [
          "File: IPython/core/profileapp.py -> IPython/core/profileapp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "181:         profiles = list_profiles_in(os.getcwd())",
          "182:         if profiles:",
          "183:             print()",
          "187:         print()",
          "188:         print(\"To use any of the above profiles, start IPython with:\")",
          "189:         print(\"    ipython --profile=<name>\")",
          "",
          "[Removed Lines]",
          "184:             print(\"Available profiles in current directory (%s):\" % os.getcwd())",
          "185:             self._print_profiles(profiles)",
          "",
          "[Added Lines]",
          "184:             print(",
          "185:                 \"Profiles from CWD have been removed for security reason, see CVE-2022-21699:\"",
          "186:             )",
          "",
          "---------------"
        ],
        "IPython/core/profiledir.py||IPython/core/profiledir.py": [
          "File: IPython/core/profiledir.py -> IPython/core/profiledir.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "186:         is not found, a :class:`ProfileDirError` exception will be raised.",
          "188:         The search path algorithm is:",
          "190:         2. ``ipython_dir``",
          "192:         Parameters",
          "",
          "[Removed Lines]",
          "189:         1. ``os.getcwd()``",
          "",
          "[Added Lines]",
          "189:         1. ``os.getcwd()`` # removed for security reason.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "198:             will be \"profile_<profile>\".",
          "199:         \"\"\"",
          "200:         dirname = u'profile_' + name",
          "202:         for p in paths:",
          "203:             profile_dir = os.path.join(p, dirname)",
          "204:             if os.path.isdir(profile_dir):",
          "",
          "[Removed Lines]",
          "201:         paths = [os.getcwd(), ipython_dir]",
          "",
          "[Added Lines]",
          "201:         paths = [ipython_dir]",
          "",
          "---------------"
        ],
        "IPython/tests/cve.py||IPython/tests/cve.py": [
          "File: IPython/tests/cve.py -> IPython/tests/cve.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: \"\"\"",
          "2: Test that CVEs stay fixed.",
          "3: \"\"\"",
          "5: from IPython.utils.tempdir import TemporaryDirectory, TemporaryWorkingDirectory",
          "6: from pathlib import Path",
          "7: import random",
          "8: import sys",
          "9: import os",
          "10: import string",
          "11: import subprocess",
          "12: import time",
          "14: def test_cve_2022_21699():",
          "15:     \"\"\"",
          "16:     Here we test CVE-2022-21699.",
          "18:     We create a temporary directory, cd into it.",
          "19:     Make a profile file that should not be executed and start IPython in a subprocess,",
          "20:     checking for the value.",
          "24:     \"\"\"",
          "26:     dangerous_profile_dir = Path('profile_default')",
          "28:     dangerous_startup_dir = dangerous_profile_dir / 'startup'",
          "29:     dangerous_expected = 'CVE-2022-21699-'+''.join([random.choice(string.ascii_letters) for i in range(10)])",
          "31:     with TemporaryWorkingDirectory() as t:",
          "32:         dangerous_startup_dir.mkdir(parents=True)",
          "33:         (dangerous_startup_dir/ 'foo.py').write_text(f'print(\"{dangerous_expected}\")')",
          "34:         # 1 sec to make sure FS is flushed.",
          "35:         #time.sleep(1)",
          "36:         cmd = [sys.executable,'-m', 'IPython']",
          "37:         env = os.environ.copy()",
          "38:         env['IPY_TEST_SIMPLE_PROMPT'] = '1'",
          "41:         # First we fake old behavior, making sure the profile is/was actually dangerous",
          "42:         p_dangerous = subprocess.Popen(cmd + [f'--profile-dir={dangerous_profile_dir}'], env=env, stdin=subprocess.PIPE,",
          "43:                 stdout=subprocess.PIPE, stderr=subprocess.PIPE)",
          "44:         out_dangerous, err_dangerouns = p_dangerous.communicate(b\"exit\\r\")",
          "45:         assert dangerous_expected in out_dangerous.decode()",
          "47:         # Now that we know it _would_ have been dangerous, we test it's not loaded",
          "48:         p = subprocess.Popen(cmd, env=env, stdin=subprocess.PIPE,",
          "49:                 stdout=subprocess.PIPE, stderr=subprocess.PIPE)",
          "50:         out, err = p.communicate(b\"exit\\r\")",
          "51:         assert b'IPython' in out",
          "52:         assert dangerous_expected not in out.decode()",
          "53:         assert err == b''",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c306d208946604b1cfc7bcfdc5fb51daf7b8ceae",
      "candidate_info": {
        "commit_hash": "c306d208946604b1cfc7bcfdc5fb51daf7b8ceae",
        "repo": "ipython/ipython",
        "commit_url": "https://github.com/ipython/ipython/commit/c306d208946604b1cfc7bcfdc5fb51daf7b8ceae",
        "files": [
          "IPython/__init__.py",
          "IPython/core/application.py",
          "IPython/core/profileapp.py",
          "IPython/core/profiledir.py",
          "docs/source/whatsnew/version5.rst"
        ],
        "message": "FIX CVE-2022-21699\n\nSee https://github.com/ipython/ipython/security/advisories/GHSA-pq7m-3gw7-gq5x",
        "before_after_code_files": [
          "IPython/__init__.py||IPython/__init__.py",
          "IPython/core/application.py||IPython/core/application.py",
          "IPython/core/profileapp.py||IPython/core/profileapp.py",
          "IPython/core/profiledir.py||IPython/core/profiledir.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "IPython/__init__.py||IPython/__init__.py",
            "IPython/core/application.py||IPython/core/application.py",
            "IPython/core/profileapp.py||IPython/core/profileapp.py",
            "IPython/core/profiledir.py||IPython/core/profiledir.py"
          ],
          "candidate": [
            "IPython/__init__.py||IPython/__init__.py",
            "IPython/core/application.py||IPython/core/application.py",
            "IPython/core/profileapp.py||IPython/core/profileapp.py",
            "IPython/core/profiledir.py||IPython/core/profiledir.py"
          ]
        }
      },
      "candidate_diff": {
        "IPython/__init__.py||IPython/__init__.py": [
          "File: IPython/__init__.py -> IPython/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "58: __license__  = release.license",
          "59: __version__  = release.version",
          "60: version_info = release.version_info",
          "62: def embed_kernel(module=None, local_ns=None, **kwargs):",
          "63:     \"\"\"Embed and start an IPython kernel in a given scope.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "61: # list of CVEs that should have been patched in this release.",
          "62: # this is informational and should not be relied upon.",
          "63: __patched_cves__ = {\"CVE-2022-21699\"}",
          "",
          "---------------"
        ],
        "IPython/core/application.py||IPython/core/application.py": [
          "File: IPython/core/application.py -> IPython/core/application.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "134:     config_file_paths = List(Unicode())",
          "135:     @default('config_file_paths')",
          "136:     def _config_file_paths_default(self):",
          "139:     extra_config_file = Unicode(",
          "140:     help=\"\"\"Path to an extra config file to load.",
          "",
          "[Removed Lines]",
          "137:         return [py3compat.getcwd()]",
          "",
          "[Added Lines]",
          "137:         return []",
          "",
          "---------------"
        ],
        "IPython/core/profileapp.py||IPython/core/profileapp.py": [
          "File: IPython/core/profileapp.py -> IPython/core/profileapp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "184:         profiles = list_profiles_in(py3compat.getcwd())",
          "185:         if profiles:",
          "186:             print()",
          "190:         print()",
          "191:         print(\"To use any of the above profiles, start IPython with:\")",
          "192:         print(\"    ipython --profile=<name>\")",
          "",
          "[Removed Lines]",
          "187:             print(\"Available profiles in current directory (%s):\" % py3compat.getcwd())",
          "188:             self._print_profiles(profiles)",
          "",
          "[Added Lines]",
          "187:             print(",
          "188:                 \"Profiles from CWD have been removed for security reason, see CVE-2022-21699:\"",
          "189:             )",
          "",
          "---------------"
        ],
        "IPython/core/profiledir.py||IPython/core/profiledir.py": [
          "File: IPython/core/profiledir.py -> IPython/core/profiledir.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "187:         is not found, a :class:`ProfileDirError` exception will be raised.",
          "189:         The search path algorithm is:",
          "191:         2. ``ipython_dir``",
          "193:         Parameters",
          "",
          "[Removed Lines]",
          "190:         1. ``py3compat.getcwd()``",
          "",
          "[Added Lines]",
          "190:         1. ``os.getcwd()`` # removed for security reason.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "199:             will be \"profile_<profile>\".",
          "200:         \"\"\"",
          "201:         dirname = u'profile_' + name",
          "203:         for p in paths:",
          "204:             profile_dir = os.path.join(p, dirname)",
          "205:             if os.path.isdir(profile_dir):",
          "",
          "[Removed Lines]",
          "202:         paths = [py3compat.getcwd(), ipython_dir]",
          "",
          "[Added Lines]",
          "202:         paths = [ipython_dir]",
          "",
          "---------------"
        ]
      }
    }
  ]
}