{
  "cve_id": "CVE-2022-41711",
  "cve_desc": "Badaso version 2.6.0 allows an unauthenticated remote attacker to execute arbitrary code remotely on the server. This is possible because the application does not properly validate the data uploaded by users.",
  "repo": "uasoft-indonesia/badaso",
  "patch_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
  "patch_info": {
    "commit_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
    "repo": "uasoft-indonesia/badaso",
    "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/22250eca7c364d991ce9e0a723941eae4889d6f9",
    "files": [
      "src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue"
    ],
    "message": "Merge pull request #807 from uasoft-indonesia/bugfix/v2/filter-mimeType\n\nBugfix[v2] add filter mimeType",
    "before_after_code_files": [
      "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue"
    ]
  },
  "patch_diff": {
    "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue": [
      "File: src/resources/js/components/BadasoUploadFile.vue -> src/resources/js/components/BadasoUploadFile.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "336:           });",
      "337:           return;",
      "338:         }",
      "340:         this.uploadFile(files[0]);",
      "341:       }",
      "342:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "339:         if (!this.availableMimetypes.file.validMime.includes(files[0].type)) {",
      "340:           this.$vs.notify({",
      "341:             title: this.$t(\"alert.danger\"),",
      "342:             text: \"File type not allowed\",",
      "343:             color: \"danger\",",
      "344:           });",
      "345:           return;",
      "346:         }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadFileMultiple.vue -> src/resources/js/components/BadasoUploadFileMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "367:             });",
      "368:             return;",
      "369:           }",
      "371:           this.uploadFile(file);",
      "372:         }",
      "373:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "370:           if (!this.availableMimetypes.file.validMime.includes(file.type)) {",
      "371:             this.$vs.notify({",
      "372:               title: this.$t(\"alert.danger\"),",
      "373:               text: \"File type not allowed\",",
      "374:               color: \"danger\",",
      "375:             });",
      "376:             return;",
      "377:           }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue": [
      "File: src/resources/js/components/BadasoUploadImage.vue -> src/resources/js/components/BadasoUploadImage.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "380:           });",
      "381:           return;",
      "382:         }",
      "384:         this.uploadImage(files[0]);",
      "385:       }",
      "386:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "383:         if (!this.availableMimetypes.image.validMime.includes(files[0].type)){",
      "384:           this.$vs.notify({",
      "385:             title: this.$t(\"alert.danger\"),",
      "386:             text: \"File type not allowed\",",
      "387:             color: \"danger\",",
      "388:           });",
      "389:           return;",
      "390:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "421:     uploadImage(file) {",
      "422:       const files = new FormData();",
      "423:       files.append(\"upload\", file);",
      "425:       files.append(\"working_dir\", this.getActiveFolder);",
      "426:       this.$api.badasoFile",
      "427:         .uploadUsingLfm(files)",
      "",
      "[Removed Lines]",
      "424:       files.append(\"type\", \"image\");",
      "",
      "[Added Lines]",
      "431:       files.append(\"type\", file.type);",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadImageMultiple.vue -> src/resources/js/components/BadasoUploadImageMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:             });",
      "396:             return;",
      "397:           }",
      "399:           this.uploadImage(file);",
      "400:         }",
      "401:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "398:           if (!this.availableMimetypes.image.validMime.includes(file.type)) {",
      "399:             this.$vs.notify({",
      "400:               title: this.$t(\"alert.danger\"),",
      "401:               text: \"File type not allowed\",",
      "402:               color: \"danger\",",
      "403:             });",
      "404:             return;",
      "405:           }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "885090b5040076a21d6fa8702893054edd9726e5",
      "candidate_info": {
        "commit_hash": "885090b5040076a21d6fa8702893054edd9726e5",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/885090b5040076a21d6fa8702893054edd9726e5",
        "files": [
          "src/Migrations/2022_03_08_090850_change_order_integer_data_type_in_menus_table.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "src/Migrations/2022_03_08_090850_change_order_integer_data_type_in_menus_table.php||src/Migrations/2022_03_08_090850_change_order_integer_data_type_in_menus_table.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Migrations/2022_03_08_090850_change_order_integer_data_type_in_menus_table.php||src/Migrations/2022_03_08_090850_change_order_integer_data_type_in_menus_table.php": [
          "File: src/Migrations/2022_03_08_090850_change_order_integer_data_type_in_menus_table.php -> src/Migrations/2022_03_08_090850_change_order_integer_data_type_in_menus_table.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:     public function up()",
          "15:     {",
          "16:         Schema::table('menus', function (Blueprint $table) {",
          "18:                 $table->integer('order')->change();",
          "19:             }",
          "20:         });",
          "",
          "[Removed Lines]",
          "17:             if ( Schema::hasColumn(config('badaso.database.prefix').'menus', 'order')) {",
          "",
          "[Added Lines]",
          "17:             if (Schema::hasColumn(config('badaso.database.prefix').'menus', 'order')) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "28:     public function down()",
          "29:     {",
          "30:         Schema::table('menus', function (Blueprint $table) {",
          "32:                 $table->integer('order')->change();",
          "33:             }",
          "34:         });",
          "",
          "[Removed Lines]",
          "31:             if ( Schema::hasColumn(config('badaso.database.prefix').'menus', 'order')) {",
          "",
          "[Added Lines]",
          "31:             if (Schema::hasColumn(config('badaso.database.prefix').'menus', 'order')) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b0dc92f6b650c38329a9b9fc84904e30bef7424a",
      "candidate_info": {
        "commit_hash": "b0dc92f6b650c38329a9b9fc84904e30bef7424a",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/b0dc92f6b650c38329a9b9fc84904e30bef7424a",
        "files": [
          "src/Controllers/Controller.php",
          "src/Helpers/GetData.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "src/Controllers/Controller.php||src/Controllers/Controller.php",
          "src/Helpers/GetData.php||src/Helpers/GetData.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Controllers/Controller.php||src/Controllers/Controller.php": [
          "File: src/Controllers/Controller.php -> src/Controllers/Controller.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "282:             foreach ($data as $key => $value) {",
          "283:                 $data_row = collect($data_rows)->where('field', $key)->first();",
          "284:                 if (! is_null($data_row)) {",
          "287:                         $new_data[$key] = $this->getContentByType($data_type, $data_row, $value);",
          "288:                     }",
          "289:                     $new_data[$key] = $this->getContentByType($data_type, $data_row, $value);",
          "",
          "[Removed Lines]",
          "285:                     if($data_row['type'] == \"upload_image_multiple\"){",
          "",
          "[Added Lines]",
          "285:                     if ($data_row['type'] == 'upload_image_multiple') {",
          "",
          "---------------"
        ],
        "src/Helpers/GetData.php||src/Helpers/GetData.php": [
          "File: src/Helpers/GetData.php -> src/Helpers/GetData.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "196:     public static function clientSideWithQueryBuilder($data_type, $builder_params, $only_data_soft_delete = false)",
          "197:     {",
          "199:         $fields = $data_rows->where('browse', 1)->pluck('field')->all();",
          "200:         $ids = $data_rows->where('field', 'id')->pluck('field')->all();",
          "201:         $fields = array_merge($fields, $ids);",
          "",
          "[Removed Lines]",
          "198:         $data_rows = collect($data_type->dataRows) ;",
          "",
          "[Added Lines]",
          "198:         $data_rows = collect($data_type->dataRows);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "219:         }",
          "223:             foreach ($data_rows as $index => $data_row) {",
          "256:                     }",
          "257:                 }",
          "261:         $data = [];",
          "263:         foreach ($records as $row) {",
          "",
          "[Removed Lines]",
          "222:         $records = $records->get()->map(function($record) use ($data_rows){",
          "224:                     if($data_row->type == 'upload_image_multiple'){",
          "225:                         $upload_image_multiples = json_decode($record->{$data_row->field}, true) ;",
          "226:                         if(isset($upload_image_multiples)){",
          "227:                             $upload_image_multiples = collect($upload_image_multiples)->map(function($upload_image_multiple){",
          "228:                                 $put_thumbs = \"thumbs\" ;",
          "229:                                 $upload_image_multiple = explode(\"/\", $upload_image_multiple);",
          "230:                                 $file_name = $upload_image_multiple[count($upload_image_multiple) -1];",
          "231:                                 $upload_image_multiple[count($upload_image_multiple) -1] = $put_thumbs ;",
          "232:                                 $upload_image_multiple[] = $file_name ;",
          "233:                                 $upload_image_multiple = join(\"/\", $upload_image_multiple);",
          "235:                                 $asset = asset(\"storage/\".$upload_image_multiple);",
          "237:                                 return $asset;",
          "238:                             });",
          "239:                             $upload_image_multiples = implode(\",\",json_decode($upload_image_multiples));",
          "240:                         }",
          "241:                         $record->{$data_row->field} = $upload_image_multiples ;",
          "243:                     }elseif($data_row->type == 'upload_image'){",
          "244:                         $upload_image = $record->{$data_row->field};",
          "245:                         if(isset($upload_image)){",
          "246:                                 $put_thumbs = \"thumbs\" ;",
          "247:                                 $upload_image = explode(\"/\", $upload_image);",
          "248:                                 $file_name = $upload_image[count($upload_image) -1];",
          "249:                                 $upload_image[count($upload_image) -1] = $put_thumbs ;",
          "250:                                 $upload_image[] = $file_name ;",
          "251:                                 $upload_image = join(\"/\", $upload_image);",
          "253:                                 $upload_image = asset(\"storage/\".$upload_image);",
          "254:                                 $record->{$data_row->field} = $upload_image;",
          "255:                         }",
          "258:                 return $record ;",
          "259:             });",
          "",
          "[Added Lines]",
          "222:         $records = $records->get()->map(function ($record) use ($data_rows) {",
          "224:                 if ($data_row->type == 'upload_image_multiple') {",
          "225:                     $upload_image_multiples = json_decode($record->{$data_row->field}, true);",
          "226:                     if (isset($upload_image_multiples)) {",
          "227:                         $upload_image_multiples = collect($upload_image_multiples)->map(function ($upload_image_multiple) {",
          "228:                             $put_thumbs = 'thumbs';",
          "229:                             $upload_image_multiple = explode('/', $upload_image_multiple);",
          "230:                             $file_name = $upload_image_multiple[count($upload_image_multiple) - 1];",
          "231:                             $upload_image_multiple[count($upload_image_multiple) - 1] = $put_thumbs;",
          "232:                             $upload_image_multiple[] = $file_name;",
          "233:                             $upload_image_multiple = join('/', $upload_image_multiple);",
          "235:                             $asset = asset('storage/'.$upload_image_multiple);",
          "237:                             return $asset;",
          "238:                         });",
          "239:                         $upload_image_multiples = implode(',', json_decode($upload_image_multiples));",
          "240:                     }",
          "241:                     $record->{$data_row->field} = $upload_image_multiples;",
          "242:                 } elseif ($data_row->type == 'upload_image') {",
          "243:                     $upload_image = $record->{$data_row->field};",
          "244:                     if (isset($upload_image)) {",
          "245:                         $put_thumbs = 'thumbs';",
          "246:                         $upload_image = explode('/', $upload_image);",
          "247:                         $file_name = $upload_image[count($upload_image) - 1];",
          "248:                         $upload_image[count($upload_image) - 1] = $put_thumbs;",
          "249:                         $upload_image[] = $file_name;",
          "250:                         $upload_image = join('/', $upload_image);",
          "252:                         $upload_image = asset('storage/'.$upload_image);",
          "253:                         $record->{$data_row->field} = $upload_image;",
          "256:             }",
          "258:             return $record;",
          "259:         });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6448088b24fc33aaa14e6399b803c269db3a6495",
      "candidate_info": {
        "commit_hash": "6448088b24fc33aaa14e6399b803c269db3a6495",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/6448088b24fc33aaa14e6399b803c269db3a6495",
        "files": [
          "src/resources/js/pages/crud-generated/add.vue",
          "src/resources/js/pages/crud-generated/edit.vue"
        ],
        "message": "fix bug empty data",
        "before_after_code_files": [
          "src/resources/js/pages/crud-generated/add.vue||src/resources/js/pages/crud-generated/add.vue",
          "src/resources/js/pages/crud-generated/edit.vue||src/resources/js/pages/crud-generated/edit.vue"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/resources/js/pages/crud-generated/add.vue||src/resources/js/pages/crud-generated/add.vue": [
          "File: src/resources/js/pages/crud-generated/add.vue -> src/resources/js/pages/crud-generated/add.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "430:       const dataRows = {};",
          "432:       for (const row of this.dataType.dataRows) {",
          "440:         if (row.type == \"data_identifier\") {",
          "441:           dataRows[row.field] = this.userId;",
          "442:         }",
          "443:       }",
          "",
          "[Removed Lines]",
          "433:         if (",
          "434:           (row && row.value) ||",
          "435:           row.type == \"switch\" ||",
          "436:           row.type == \"slider\"",
          "437:         ) {",
          "438:           dataRows[row.field] = row.value;",
          "439:         }",
          "",
          "[Added Lines]",
          "433:          dataRows[row.field] = row.value;",
          "",
          "---------------"
        ],
        "src/resources/js/pages/crud-generated/edit.vue||src/resources/js/pages/crud-generated/edit.vue": [
          "File: src/resources/js/pages/crud-generated/edit.vue -> src/resources/js/pages/crud-generated/edit.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "494:                 data.value = val.split(\",\");",
          "495:               }",
          "496:             } else if (data.type == \"switch\") {",
          "502:             } else if (data.type == \"slider\") {",
          "503:               data.value = parseInt(",
          "504:                 this.record[this.$caseConvert.stringSnakeToCamel(data.field)]",
          "",
          "[Removed Lines]",
          "497:               data.value = this.record[",
          "498:                 this.$caseConvert.stringSnakeToCamel(data.field)",
          "499:               ]",
          "500:                 ? this.record[this.$caseConvert.stringSnakeToCamel(data.field)]",
          "501:                 : false;",
          "",
          "[Added Lines]",
          "498:               const val = this.record[",
          "499:                 this.$caseConvert.stringSnakeToCamel(data.field)];",
          "501:               data.value = val > 0 ? true : false;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9504f4a23fc24cf0d89b925deae3a01e357f0eea",
      "candidate_info": {
        "commit_hash": "9504f4a23fc24cf0d89b925deae3a01e357f0eea",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/9504f4a23fc24cf0d89b925deae3a01e357f0eea",
        "files": [
          "src/Controllers/Controller.php"
        ],
        "message": "fix bug number component",
        "before_after_code_files": [
          "src/Controllers/Controller.php||src/Controllers/Controller.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Controllers/Controller.php||src/Controllers/Controller.php": [
          "File: src/Controllers/Controller.php -> src/Controllers/Controller.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "565:                             }",
          "566:                         }",
          "567:                     }",
          "569:                 }",
          "570:             }",
          "571:             DB::table($data_type->name)->where('id', $id)->update($new_data);",
          "",
          "[Removed Lines]",
          "568:                     $new_data[$key] = $this->getContentByType($data_type, $data_row, $value) !== null ? $this->getContentByType($data_type, $data_row, $value) : '';",
          "",
          "[Added Lines]",
          "569:                     if (in_array($data_row->type, [",
          "570:                         'number',",
          "571:                     ])) {",
          "572:                         $new_data[$key] = $this->getContentByType($data_type, $data_row, $value) !== null ? $this->getContentByType($data_type, $data_row, $value) : null;",
          "573:                     } else {",
          "574:                         $new_data[$key] = $this->getContentByType($data_type, $data_row, $value) !== null ? $this->getContentByType($data_type, $data_row, $value) : '';",
          "575:                     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "37a8c762add6d2acbcdd88ed61113e4876077e20",
      "candidate_info": {
        "commit_hash": "37a8c762add6d2acbcdd88ed61113e4876077e20",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/37a8c762add6d2acbcdd88ed61113e4876077e20",
        "files": [
          "src/Commands/BadasoSetup.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "src/Commands/BadasoSetup.php||src/Commands/BadasoSetup.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Commands/BadasoSetup.php||src/Commands/BadasoSetup.php": [
          "File: src/Commands/BadasoSetup.php -> src/Commands/BadasoSetup.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "135:     protected function checkExist($file, $search)",
          "136:     {",
          "138:     }",
          "140:     protected function updateWebpackMix()",
          "",
          "[Removed Lines]",
          "137:         return $this->file->exists($file) && !Str::contains($this->file->get($file), $search);",
          "",
          "[Added Lines]",
          "137:         return $this->file->exists($file) && ! Str::contains($this->file->get($file), $search);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "328:             $this->info('Adding badaso env');",
          "329:         } catch (\\Exception $e) {",
          "331:         }",
          "332:     }",
          "",
          "[Removed Lines]",
          "330:             $this->error('Failed adding badaso env ' . $e->getMessage());",
          "",
          "[Added Lines]",
          "330:             $this->error('Failed adding badaso env '.$e->getMessage());",
          "",
          "---------------"
        ]
      }
    }
  ]
}