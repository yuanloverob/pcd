{
  "cve_id": "CVE-2017-1002201",
  "cve_desc": "In haml versions prior to version 5.0.0.beta.2, when using user input to perform tasks on the server, characters like < > \" ' must be escaped properly. In this case, the ' character was missed. An attacker can manipulate the input to introduce additional attributes, potentially executing code.",
  "repo": "haml/haml",
  "patch_hash": "18576ae6e9bdcb4303fdbe6b3199869d289d67c2",
  "patch_info": {
    "commit_hash": "18576ae6e9bdcb4303fdbe6b3199869d289d67c2",
    "repo": "haml/haml",
    "commit_url": "https://github.com/haml/haml/commit/18576ae6e9bdcb4303fdbe6b3199869d289d67c2",
    "files": [
      "lib/haml/helpers.rb",
      "test/engine_test.rb",
      "test/pretty_engine_test.rb",
      "test/pretty_results/just_stuff.xhtml",
      "test/results/just_stuff.xhtml"
    ],
    "message": "Always escape `'` in Haml::Helpers.#html_escape.\n\nIn some tests, `attr_wrapper` is changed to be ignored.\n\nI'll split its fix to other commis because not Haml::Helpers but\nHaml::AttributeBuilder is responsible for that.",
    "before_after_code_files": [
      "lib/haml/helpers.rb||lib/haml/helpers.rb",
      "test/engine_test.rb||test/engine_test.rb",
      "test/pretty_engine_test.rb||test/pretty_engine_test.rb",
      "test/pretty_results/just_stuff.xhtml||test/pretty_results/just_stuff.xhtml",
      "test/results/just_stuff.xhtml||test/results/just_stuff.xhtml"
    ]
  },
  "patch_diff": {
    "lib/haml/helpers.rb||lib/haml/helpers.rb": [
      "File: lib/haml/helpers.rb -> lib/haml/helpers.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "596:     # Characters that need to be escaped to HTML entities from user input",
      "597:     HTML_ESCAPE = { '&' => '&amp;', '<' => '&lt;', '>' => '&gt;', '\"' => '&quot;', \"'\" => '&#039;' }",
      "601:     # Returns a copy of `text` with ampersands, angle brackets and quotes",
      "602:     # escaped into HTML entities.",
      "",
      "[Removed Lines]",
      "599:     HTML_ESCAPE_REGEX = /[\\\"><&]/",
      "",
      "[Added Lines]",
      "599:     HTML_ESCAPE_REGEX = /['\"><&]/",
      "",
      "---------------"
    ],
    "test/engine_test.rb||test/engine_test.rb": [
      "File: test/engine_test.rb -> test/engine_test.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "1127:   def test_attr_wrapper",
      "1128:     assert_equal(\"<p strange=*attrs*></p>\\n\", render(\"%p{ :strange => 'attrs'}\", :attr_wrapper => '*'))",
      "1129:     assert_equal(\"<p escaped='quo\\\"te'></p>\\n\", render(\"%p{ :escaped => 'quo\\\"te'}\", :attr_wrapper => '\"'))",
      "1132:     assert_equal(\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" ?>\\n\", render(\"!!! XML\", :attr_wrapper => '\"', :format => :xhtml))",
      "1133:   end",
      "",
      "[Removed Lines]",
      "1130:     assert_equal(\"<p escaped=\\\"quo'te\\\"></p>\\n\", render(\"%p{ :escaped => 'quo\\\\'te'}\", :attr_wrapper => '\"'))",
      "1131:     assert_equal(\"<p escaped=\\\"q'uo&#x0022;te\\\"></p>\\n\", render(\"%p{ :escaped => 'q\\\\'uo\\\"te'}\", :attr_wrapper => '\"'))",
      "",
      "[Added Lines]",
      "1130:     assert_equal(\"<p escaped=\\\"quo&#039;te\\\"></p>\\n\", render(\"%p{ :escaped => 'quo\\\\'te'}\", :attr_wrapper => '\"'))",
      "1131:     assert_equal(\"<p escaped='q&#039;uo\\\"te'></p>\\n\", render(\"%p{ :escaped => 'q\\\\'uo\\\"te'}\", :attr_wrapper => '\"'))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1534:       render(\"%div{:data => {:one_plus_one => 1+1}}\",",
      "1535:         :hyphenate_data_attrs => false))",
      "1538:       render(%{%div{:data => {:foo => %{Here's a \"quoteful\" string.}}}},",
      "1539:         :hyphenate_data_attrs => false)) #'",
      "1540:   end",
      "",
      "[Removed Lines]",
      "1537:     assert_equal(\"<div data-foo='Here&#x0027;s a \\\"quoteful\\\" string.'></div>\\n\",",
      "",
      "[Added Lines]",
      "1537:     assert_equal(\"<div data-foo='Here&#039;s a \\\"quoteful\\\" string.'></div>\\n\",",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1698:   def test_new_attribute_parsing",
      "1699:     assert_equal(\"<a a2='b2'>bar</a>\\n\", render(\"%a(a2=b2) bar\", :locals => {:b2 => 'b2'}))",
      "1700:     assert_equal(%Q{<a a='foo\"bar'>bar</a>\\n}, render(%q{%a(a=\"#{'foo\"bar'}\") bar})) #'",
      "1702:     assert_equal(%Q{<a a='foo\"bar'>bar</a>\\n}, render(%q{%a(a='foo\"bar') bar}))",
      "1704:     assert_equal(\"<a a:b='foo'>bar</a>\\n\", render(\"%a(a:b='foo') bar\"))",
      "1705:     assert_equal(\"<a a='foo' b='bar'>bar</a>\\n\", render(\"%a(a = 'foo' b = 'bar') bar\"))",
      "1706:     assert_equal(\"<a a='foo' b='bar'>bar</a>\\n\", render(\"%a(a = foo b = bar) bar\", :locals => {:foo => 'foo', :bar => 'bar'}))",
      "",
      "[Removed Lines]",
      "1701:     assert_equal(%Q{<a a=\"foo'bar\">bar</a>\\n}, render(%q{%a(a=\"#{\"foo'bar\"}\") bar})) #'",
      "1703:     assert_equal(%Q{<a a=\"foo'bar\">bar</a>\\n}, render(%q{%a(a=\"foo'bar\") bar}))",
      "",
      "[Added Lines]",
      "1701:     assert_equal(%Q{<a a='foo&#039;bar'>bar</a>\\n}, render(%q{%a(a=\"#{\"foo'bar\"}\") bar})) #'",
      "1703:     assert_equal(%Q{<a a='foo&#039;bar'>bar</a>\\n}, render(%q{%a(a=\"foo'bar\") bar}))",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1713:     assert_equal(%Q{<a a='foo \" bar'>bar</a>\\n}, render(%q{%a(a=\"foo \\\" bar\") bar}))",
      "1714:     assert_equal(%Q{<a a='foo \\\\\" bar'>bar</a>\\n}, render(%q{%a(a=\"foo \\\\\\\\\\\" bar\") bar}))",
      "1719:     assert_equal(%Q{<a a='foo \\\\ bar'>bar</a>\\n}, render(%q{%a(a=\"foo \\\\\\\\ bar\") bar}))",
      "1720:     assert_equal(%Q{<a a='foo \\#{1 + 1} bar'>bar</a>\\n}, render(%q{%a(a=\"foo \\#{1 + 1} bar\") bar}))",
      "",
      "[Removed Lines]",
      "1716:     assert_equal(%Q{<a a=\"foo ' bar\">bar</a>\\n}, render(%q{%a(a='foo \\' bar') bar}))",
      "1717:     assert_equal(%Q{<a a=\"foo \\\\' bar\">bar</a>\\n}, render(%q{%a(a='foo \\\\\\\\\\' bar') bar}))",
      "",
      "[Added Lines]",
      "1716:     assert_equal(%Q{<a a='foo &#039; bar'>bar</a>\\n}, render(%q{%a(a='foo \\' bar') bar}))",
      "1717:     assert_equal(%Q{<a a='foo \\\\&#039; bar'>bar</a>\\n}, render(%q{%a(a='foo \\\\\\\\\\' bar') bar}))",
      "",
      "---------------"
    ],
    "test/pretty_engine_test.rb||test/pretty_engine_test.rb": [
      "File: test/pretty_engine_test.rb -> test/pretty_engine_test.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "1129:   def test_attr_wrapper",
      "1130:     assert_equal(\"<p strange=*attrs*></p>\\n\", render(\"%p{ :strange => 'attrs'}\", :attr_wrapper => '*'))",
      "1131:     assert_equal(\"<p escaped='quo\\\"te'></p>\\n\", render(\"%p{ :escaped => 'quo\\\"te'}\", :attr_wrapper => '\"'))",
      "1134:     assert_equal(\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" ?>\\n\", render(\"!!! XML\", :attr_wrapper => '\"', :format => :xhtml))",
      "1135:   end",
      "",
      "[Removed Lines]",
      "1132:     assert_equal(\"<p escaped=\\\"quo'te\\\"></p>\\n\", render(\"%p{ :escaped => 'quo\\\\'te'}\", :attr_wrapper => '\"'))",
      "1133:     assert_equal(\"<p escaped=\\\"q'uo&#x0022;te\\\"></p>\\n\", render(\"%p{ :escaped => 'q\\\\'uo\\\"te'}\", :attr_wrapper => '\"'))",
      "",
      "[Added Lines]",
      "1132:     assert_equal(\"<p escaped=\\\"quo&#039;te\\\"></p>\\n\", render(\"%p{ :escaped => 'quo\\\\'te'}\", :attr_wrapper => '\"'))",
      "1133:     assert_equal(\"<p escaped='q&#039;uo\\\"te'></p>\\n\", render(\"%p{ :escaped => 'q\\\\'uo\\\"te'}\", :attr_wrapper => '\"'))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1527:       render(\"%div{:data => {:one_plus_one => 1+1}}\",",
      "1528:         :hyphenate_data_attrs => false))",
      "1531:       render(%{%div{:data => {:foo => %{Here's a \"quoteful\" string.}}}},",
      "1532:         :hyphenate_data_attrs => false)) #'",
      "1533:   end",
      "",
      "[Removed Lines]",
      "1530:     assert_equal(\"<div data-foo='Here&#x0027;s a \\\"quoteful\\\" string.'></div>\\n\",",
      "",
      "[Added Lines]",
      "1530:     assert_equal(\"<div data-foo='Here&#039;s a \\\"quoteful\\\" string.'></div>\\n\",",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1691:   def test_new_attribute_parsing",
      "1692:     assert_equal(\"<a a2='b2'>bar</a>\\n\", render(\"%a(a2=b2) bar\", :locals => {:b2 => 'b2'}))",
      "1693:     assert_equal(%Q{<a a='foo\"bar'>bar</a>\\n}, render(%q{%a(a=\"#{'foo\"bar'}\") bar})) #'",
      "1695:     assert_equal(%Q{<a a='foo\"bar'>bar</a>\\n}, render(%q{%a(a='foo\"bar') bar}))",
      "1697:     assert_equal(\"<a a:b='foo'>bar</a>\\n\", render(\"%a(a:b='foo') bar\"))",
      "1698:     assert_equal(\"<a a='foo' b='bar'>bar</a>\\n\", render(\"%a(a = 'foo' b = 'bar') bar\"))",
      "1699:     assert_equal(\"<a a='foo' b='bar'>bar</a>\\n\", render(\"%a(a = foo b = bar) bar\", :locals => {:foo => 'foo', :bar => 'bar'}))",
      "",
      "[Removed Lines]",
      "1694:     assert_equal(%Q{<a a=\"foo'bar\">bar</a>\\n}, render(%q{%a(a=\"#{\"foo'bar\"}\") bar})) #'",
      "1696:     assert_equal(%Q{<a a=\"foo'bar\">bar</a>\\n}, render(%q{%a(a=\"foo'bar\") bar}))",
      "",
      "[Added Lines]",
      "1694:     assert_equal(%Q{<a a='foo&#039;bar'>bar</a>\\n}, render(%q{%a(a=\"#{\"foo'bar\"}\") bar})) #'",
      "1696:     assert_equal(%Q{<a a='foo&#039;bar'>bar</a>\\n}, render(%q{%a(a=\"foo'bar\") bar}))",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1706:     assert_equal(%Q{<a a='foo \" bar'>bar</a>\\n}, render(%q{%a(a=\"foo \\\" bar\") bar}))",
      "1707:     assert_equal(%Q{<a a='foo \\\\\" bar'>bar</a>\\n}, render(%q{%a(a=\"foo \\\\\\\\\\\" bar\") bar}))",
      "1712:     assert_equal(%Q{<a a='foo \\\\ bar'>bar</a>\\n}, render(%q{%a(a=\"foo \\\\\\\\ bar\") bar}))",
      "1713:     assert_equal(%Q{<a a='foo \\#{1 + 1} bar'>bar</a>\\n}, render(%q{%a(a=\"foo \\#{1 + 1} bar\") bar}))",
      "",
      "[Removed Lines]",
      "1709:     assert_equal(%Q{<a a=\"foo ' bar\">bar</a>\\n}, render(%q{%a(a='foo \\' bar') bar}))",
      "1710:     assert_equal(%Q{<a a=\"foo \\\\' bar\">bar</a>\\n}, render(%q{%a(a='foo \\\\\\\\\\' bar') bar}))",
      "",
      "[Added Lines]",
      "1709:     assert_equal(%Q{<a a='foo &#039; bar'>bar</a>\\n}, render(%q{%a(a='foo \\' bar') bar}))",
      "1710:     assert_equal(%Q{<a a='foo \\\\&#039; bar'>bar</a>\\n}, render(%q{%a(a='foo \\\\\\\\\\' bar') bar}))",
      "",
      "---------------"
    ],
    "test/pretty_results/just_stuff.xhtml||test/pretty_results/just_stuff.xhtml": [
      "File: test/pretty_results/just_stuff.xhtml -> test/pretty_results/just_stuff.xhtml",
      "--- Hunk 1 ---",
      "[Context before]",
      "6: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">",
      "7: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">",
      "8: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Frameset//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd\">",
      "10: Embedded? false!",
      "11: Embedded? true!",
      "12: Embedded? true!",
      "",
      "[Removed Lines]",
      "9: <strong apos=\"Foo's bar!\">Boo!</strong>",
      "",
      "[Added Lines]",
      "9: <strong apos='Foo&#039;s bar!'>Boo!</strong>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "61: <p class='article quux qux' id='article_1'>Blump</p>",
      "62: <p class='article' id='foo_bar_baz_article_1'>Whee</p>",
      "63: Woah inner quotes",
      "65: <p class='dynamic_self_closing' dyn='3' />",
      "66: <body>",
      "67:   hello",
      "",
      "[Removed Lines]",
      "64: <p class='dynamic_quote' dyn='3' quotes=\"single '\"></p>",
      "",
      "[Added Lines]",
      "64: <p class='dynamic_quote' dyn='3' quotes='single &#039;'></p>",
      "",
      "---------------"
    ],
    "test/results/just_stuff.xhtml||test/results/just_stuff.xhtml": [
      "File: test/results/just_stuff.xhtml -> test/results/just_stuff.xhtml",
      "--- Hunk 1 ---",
      "[Context before]",
      "6: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">",
      "7: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">",
      "8: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Frameset//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd\">",
      "10: Embedded? false!",
      "11: Embedded? true!",
      "12: Embedded? true!",
      "",
      "[Removed Lines]",
      "9: <strong apos=\"Foo's bar!\">Boo!</strong>",
      "",
      "[Added Lines]",
      "9: <strong apos='Foo&#039;s bar!'>Boo!</strong>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "61: <p class='article quux qux' id='article_1'>Blump</p>",
      "62: <p class='article' id='foo_bar_baz_article_1'>Whee</p>",
      "63: Woah inner quotes",
      "65: <p class='dynamic_self_closing' dyn='3' />",
      "66: <body>",
      "67: hello",
      "",
      "[Removed Lines]",
      "64: <p class='dynamic_quote' dyn='3' quotes=\"single '\"></p>",
      "",
      "[Added Lines]",
      "64: <p class='dynamic_quote' dyn='3' quotes='single &#039;'></p>",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "45d6c1e3c01c7a183d9cb3195877785a46f44bd1",
      "candidate_info": {
        "commit_hash": "45d6c1e3c01c7a183d9cb3195877785a46f44bd1",
        "repo": "haml/haml",
        "commit_url": "https://github.com/haml/haml/commit/45d6c1e3c01c7a183d9cb3195877785a46f44bd1",
        "files": [
          "test/pretty_results/content_for_layout.xhtml",
          "test/pretty_results/eval_suppressed.xhtml",
          "test/pretty_results/helpers.xhtml",
          "test/pretty_results/helpful.xhtml",
          "test/pretty_results/just_stuff.xhtml",
          "test/pretty_results/list.xhtml",
          "test/pretty_results/nuke_inner_whitespace.xhtml",
          "test/pretty_results/nuke_outer_whitespace.xhtml",
          "test/pretty_results/original_engine.xhtml",
          "test/pretty_results/partial_layout.xhtml",
          "test/pretty_results/partial_layout_erb.xhtml",
          "test/pretty_results/partials.xhtml",
          "test/pretty_results/render_layout.xhtml",
          "test/pretty_results/silent_script.xhtml",
          "test/pretty_results/standard.xhtml",
          "test/pretty_results/tag_parsing.xhtml",
          "test/pretty_results/very_basic.xhtml",
          "test/pretty_results/whitespace_handling.xhtml"
        ],
        "message": "cp -r test/results test/pretty_results",
        "before_after_code_files": [
          "test/pretty_results/content_for_layout.xhtml||test/pretty_results/content_for_layout.xhtml",
          "test/pretty_results/eval_suppressed.xhtml||test/pretty_results/eval_suppressed.xhtml",
          "test/pretty_results/helpers.xhtml||test/pretty_results/helpers.xhtml",
          "test/pretty_results/helpful.xhtml||test/pretty_results/helpful.xhtml",
          "test/pretty_results/just_stuff.xhtml||test/pretty_results/just_stuff.xhtml",
          "test/pretty_results/list.xhtml||test/pretty_results/list.xhtml",
          "test/pretty_results/nuke_inner_whitespace.xhtml||test/pretty_results/nuke_inner_whitespace.xhtml",
          "test/pretty_results/nuke_outer_whitespace.xhtml||test/pretty_results/nuke_outer_whitespace.xhtml",
          "test/pretty_results/original_engine.xhtml||test/pretty_results/original_engine.xhtml",
          "test/pretty_results/partial_layout.xhtml||test/pretty_results/partial_layout.xhtml",
          "test/pretty_results/partial_layout_erb.xhtml||test/pretty_results/partial_layout_erb.xhtml",
          "test/pretty_results/partials.xhtml||test/pretty_results/partials.xhtml",
          "test/pretty_results/render_layout.xhtml||test/pretty_results/render_layout.xhtml",
          "test/pretty_results/silent_script.xhtml||test/pretty_results/silent_script.xhtml",
          "test/pretty_results/standard.xhtml||test/pretty_results/standard.xhtml",
          "test/pretty_results/tag_parsing.xhtml||test/pretty_results/tag_parsing.xhtml",
          "test/pretty_results/very_basic.xhtml||test/pretty_results/very_basic.xhtml",
          "test/pretty_results/whitespace_handling.xhtml||test/pretty_results/whitespace_handling.xhtml"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "test/pretty_results/just_stuff.xhtml||test/pretty_results/just_stuff.xhtml"
          ],
          "candidate": [
            "test/pretty_results/just_stuff.xhtml||test/pretty_results/just_stuff.xhtml"
          ]
        }
      },
      "candidate_diff": {
        "test/pretty_results/content_for_layout.xhtml||test/pretty_results/content_for_layout.xhtml": [
          "File: test/pretty_results/content_for_layout.xhtml -> test/pretty_results/content_for_layout.xhtml",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">",
          "2: <html>",
          "3:   <head></head>",
          "4:   <body>",
          "5:     <div id='yieldy'>",
          "6:       Lorem ipsum dolor sit amet",
          "7:     </div>",
          "8:     <div id='nosym'>",
          "9:       Lorem ipsum dolor sit amet",
          "10:     </div>",
          "11:   </body>",
          "12: </html>",
          "",
          "---------------"
        ],
        "test/pretty_results/eval_suppressed.xhtml||test/pretty_results/eval_suppressed.xhtml": [
          "File: test/pretty_results/eval_suppressed.xhtml -> test/pretty_results/eval_suppressed.xhtml",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <p></p>",
          "2: <p></p>",
          "3: <h1>Me!</h1>",
          "4: <div id='foo'>",
          "5:   <p id='bar'>All</p>",
          "6:   <br />",
          "7:   <p class='baz'>This</p>",
          "8:   Should render",
          "9: </div>",
          "",
          "---------------"
        ],
        "test/pretty_results/helpers.xhtml||test/pretty_results/helpers.xhtml": [
          "File: test/pretty_results/helpers.xhtml -> test/pretty_results/helpers.xhtml",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;",
          "2: <div>",
          "3:   <p class='title'>Title</p>",
          "4:   <p class='text'>",
          "5:     Woah this is really crazy",
          "6:     I mean wow,",
          "7:     man.",
          "8:   </p>",
          "9: </div>",
          "10: <div>",
          "11:   <p class='title'>Title</p>",
          "12:   <p class='text'>",
          "13:     Woah this is really crazy",
          "14:     I mean wow,",
          "15:     man.",
          "16:   </p>",
          "17: </div>",
          "18: <div>",
          "19:   <p class='title'>Title</p>",
          "20:   <p class='text'>",
          "21:     Woah this is really crazy",
          "22:     I mean wow,",
          "23:     man.",
          "24:   </p>",
          "25: </div>",
          "26: <p>foo</p>",
          "27:   <p>reeeeeeeeeeeeeeeeeeeeeeeeeeeeeeally loooooooooooooooooong</p>",
          "28: <div class='woah'>",
          "29:   <div id='funky'>",
          "30:     <div>",
          "31:       <h1>Big!</h1>",
          "32:       <p>Small</p>",
          "33:       <!-- Invisible -->",
          "34:     </div>",
          "35:     <div class='dilly'>",
          "36:       <p>foo</p>",
          "37:       <h1>bar</h1>",
          "38:     </div>",
          "39:   </div>",
          "40:   (<strong>parentheses!</strong>)",
          "41: </div>",
          "43: click",
          "44: <a href='thing'>here</a>.",
          "45: <p>baz</p>",
          "46:                     <p>boom</p>",
          "47: foo",
          "48: <li><a href='http://www.google.com'>google</a></li>",
          "49: <p>",
          "50:   foo",
          "51:   <div>",
          "52:     bar",
          "53:   </div>",
          "54:   boom",
          "55:   baz",
          "56:   boom, again",
          "57: </p>",
          "58: <table>",
          "59:   <tr>",
          "60:     <td class='cell'>",
          "61:       <strong>strong!</strong>",
          "62:       data",
          "63:     </td>",
          "64:     <td>",
          "65:       more_data",
          "66:     </td>",
          "67:   </tr>",
          "68: </table>",
          "69: <hr />",
          "70: <div></div>",
          "",
          "---------------"
        ],
        "test/pretty_results/helpful.xhtml||test/pretty_results/helpful.xhtml": [
          "File: test/pretty_results/helpful.xhtml -> test/pretty_results/helpful.xhtml",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <div class='article' id='article_1'>",
          "2:   <h1>Hello</h1>",
          "3:   <div>World</div>",
          "4: </div>",
          "5: <div class='article' id='id_article_1'>id</div>",
          "6: <div class='article class' id='article_1'>class</div>",
          "7: <div class='article class' id='id_article_1'>id class</div>",
          "8: <div class='article full' id='article_1'>boo</div>",
          "9: <div class='article full' id='article_1'>moo</div>",
          "10: <div class='article articleFull' id='article_1'>foo</div>",
          "",
          "---------------"
        ],
        "test/pretty_results/just_stuff.xhtml||test/pretty_results/just_stuff.xhtml": [
          "File: test/pretty_results/just_stuff.xhtml -> test/pretty_results/just_stuff.xhtml",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?xml version='1.0' encoding='utf-8' ?>",
          "2: <?xml version='1.0' encoding='iso-8859-1' ?>",
          "3: <?xml version='1.0' encoding='utf-8' ?>",
          "4: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">",
          "5: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">",
          "6: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">",
          "7: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">",
          "8: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Frameset//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd\">",
          "9: <strong apos=\"Foo's bar!\">Boo!</strong>",
          "10: Embedded? false!",
          "11: Embedded? true!",
          "12: Embedded? true!",
          "13: Embedded? twice! true!",
          "14: Embedded? one af\"t\"er another!",
          "15: <p>Embedded? false!</p>",
          "16: <p>Embedded? true!</p>",
          "17: <p>Embedded? true!</p>",
          "18: <p>Embedded? twice! true!</p>",
          "19: <p>Embedded? one af\"t\"er another!</p>",
          "20: stuff followed by whitespace",
          "21: <strong>block with whitespace</strong>",
          "22: <p>",
          "23:   Escape",
          "24:   - character",
          "25:   %p foo",
          "26:   yee\\ha",
          "27:      don't lstrip me",
          "28: </p>",
          "29: <!-- Short comment -->",
          "30: <!--",
          "31:   This is a block comment",
          "32:   cool, huh?",
          "33:   <strong>there can even be sub-tags!</strong>",
          "34:   Or script!",
          "35: -->",
          "36: <p class=''>class attribute should appear!</p>",
          "37: <p>this attribute shouldn't appear</p>",
          "38: <!--[if lte IE6]> conditional comment! <![endif]-->",
          "39: <!--[if gte IE7]>",
          "40:   <p>Block conditional comment</p>",
          "41:   <div>",
          "42:     <h1>Cool, eh?</h1>",
          "43:   </div>",
          "44: <![endif]-->",
          "45: <!--[if gte IE5.2]>",
          "46:   Woah a period.",
          "47: <![endif]-->",
          "48: testtest",
          "49: <br />",
          "50: <meta foo='bar' />",
          "51: <img />",
          "52: <hr />",
          "53: <link />",
          "54: <script>Inline content</script>",
          "55: <br>",
          "56:   Nested content",
          "57: </br>",
          "58: <p class='article bar foo' id='article_1'>Blah</p>",
          "59: <p class='article foo' id='article_1'>Blah</p>",
          "60: <p class='article bar baz foo' id='article_1'>Blah</p>",
          "61: <p class='article quux qux' id='article_1'>Blump</p>",
          "62: <p class='article' id='foo_bar_baz_article_1'>Whee</p>",
          "63: Woah inner quotes",
          "64: <p class='dynamic_quote' dyn='3' quotes=\"single '\"></p>",
          "65: <p class='dynamic_self_closing' dyn='3' />",
          "66: <body>",
          "67:   hello",
          "68:   <div>",
          "69:     <img />",
          "70:   </div>",
          "71: </body>",
          "",
          "---------------"
        ],
        "test/pretty_results/list.xhtml||test/pretty_results/list.xhtml": [
          "File: test/pretty_results/list.xhtml -> test/pretty_results/list.xhtml",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: !Not a Doctype!",
          "2: <ul>",
          "3:   <li>a</li>",
          "4:   <li>b</li>",
          "5:   <li>c</li>",
          "6:   <li>d</li>",
          "7:   <li>e</li>",
          "8:   <li>f</li>",
          "9:   <li>g</li>",
          "10:   <li>h</li>",
          "11:   <li>i</li>",
          "12: </ul>",
          "",
          "---------------"
        ],
        "test/pretty_results/nuke_inner_whitespace.xhtml||test/pretty_results/nuke_inner_whitespace.xhtml": [
          "File: test/pretty_results/nuke_inner_whitespace.xhtml -> test/pretty_results/nuke_inner_whitespace.xhtml",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <p>",
          "2:   <q>Foo</q>",
          "3: </p>",
          "4: <p>",
          "5:   <q a='2'>Foo</q>",
          "6: </p>",
          "7: <p>",
          "8:   <q>Foo",
          "9:   Bar</q>",
          "10: </p>",
          "11: <p>",
          "12:   <q a='2'>Foo",
          "13:   Bar</q>",
          "14: </p>",
          "15: <p>",
          "16:   <q>Foo",
          "17:   Bar</q>",
          "18: </p>",
          "19: <p>",
          "20:   <q a='2'>Foo",
          "21:   Bar</q>",
          "22: </p>",
          "23: <p>",
          "24:   <q><div>",
          "25:     Foo",
          "26:     Bar",
          "27:   </div></q>",
          "28: </p>",
          "29: <p>",
          "30:   <q a='2'><div>",
          "31:     Foo",
          "32:     Bar",
          "33:   </div></q>",
          "34: </p>",
          "35: <p>",
          "36:   <q>foo</q>",
          "37:   <q a='2'>",
          "38:     bar",
          "39:   </q>",
          "40: </p>",
          "",
          "---------------"
        ],
        "test/pretty_results/nuke_outer_whitespace.xhtml||test/pretty_results/nuke_outer_whitespace.xhtml": [
          "File: test/pretty_results/nuke_outer_whitespace.xhtml -> test/pretty_results/nuke_outer_whitespace.xhtml",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <p>",
          "2:   <p><q>",
          "3:       Foo",
          "4:     </q></p>",
          "5: </p>",
          "6: <p>",
          "7:   <p><q a='2'>",
          "8:       Foo",
          "9:     </q></p>",
          "10: </p>",
          "11: <p>",
          "12:   <p><q>Foo</q></p>",
          "13: </p>",
          "14: <p>",
          "15:   <p><q a='2'>Foo</q></p>",
          "16: </p>",
          "17: <p>",
          "18:   <p><q>",
          "19:       Foo",
          "20:     </q></p>",
          "21: </p>",
          "22: <p>",
          "23:   <p><q a='2'>",
          "24:       Foo",
          "25:     </q></p>",
          "26: </p>",
          "27: <p>",
          "28:   <p><q>Foo</q></p>",
          "29: </p>",
          "30: <p>",
          "31:   <p><q a='2'>Foo</q></p>",
          "32: </p>",
          "33: <p>",
          "34:   <p><q>",
          "35:       Foo",
          "36:       Bar",
          "37:     </q></p>",
          "38: </p>",
          "39: <p>",
          "40:   <p><q a='2'>",
          "41:       Foo",
          "42:       Bar",
          "43:     </q></p>",
          "44: </p>",
          "45: <p>",
          "46:   <p><q>",
          "47:       Foo",
          "48:       Bar",
          "49:     </q></p>",
          "50: </p>",
          "51: <p>",
          "52:   <p><q a='2'>",
          "53:       Foo",
          "54:       Bar",
          "55:     </q></p>",
          "56: </p>",
          "57: <p>",
          "58:   <p>",
          "59:       foo<q>",
          "60:         Foo",
          "61:       </q>bar",
          "62:   </p>",
          "63: </p>",
          "64: <p>",
          "65:   <p>",
          "66:       foo<q a='2'>",
          "67:         Foo",
          "68:       </q>bar",
          "69:   </p>",
          "70: </p>",
          "71: <p>",
          "72:   <p>",
          "73:       foo<q>Foo</q>bar",
          "74:   </p>",
          "75: </p>",
          "76: <p>",
          "77:   <p>",
          "78:       foo<q a='2'>Foo</q>bar",
          "79:   </p>",
          "80: </p>",
          "81: <p>",
          "82:   <p>",
          "83:       foo<q>",
          "84:         Foo",
          "85:       </q>bar",
          "86:   </p>",
          "87: </p>",
          "88: <p>",
          "89:   <p>",
          "90:       foo<q a='2'>",
          "91:         Foo",
          "92:       </q>bar",
          "93:   </p>",
          "94: </p>",
          "95: <p>",
          "96:   <p>",
          "97:       foo<q>Foo</q>bar",
          "98:   </p>",
          "99: </p>",
          "100: <p>",
          "101:   <p>",
          "102:       foo<q a='2'>Foo</q>bar",
          "103:   </p>",
          "104: </p>",
          "105: <p>",
          "106:   <p>",
          "107:       foo<q>",
          "108:         Foo",
          "109:         Bar",
          "110:       </q>bar",
          "111:   </p>",
          "112: </p>",
          "113: <p>",
          "114:   <p>",
          "115:       foo<q a='2'>",
          "116:         Foo",
          "117:         Bar",
          "118:       </q>bar",
          "119:   </p>",
          "120: </p>",
          "121: <p>",
          "122:   <p>",
          "123:       foo<q>",
          "124:         Foo",
          "125:         Bar",
          "126:       </q>bar",
          "127:   </p>",
          "128: </p>",
          "129: <p>",
          "130:   <p>",
          "131:       foo<q a='2'>",
          "132:         Foo",
          "133:         Bar",
          "134:       </q>bar",
          "135:   </p>",
          "136: </p>",
          "137: <p>",
          "138:   <p><q></q></p>",
          "139: </p>",
          "140: <p>",
          "141:   <p><q /></p>",
          "142: </p>",
          "143: <p>",
          "144:   <p><q a='2'></q></p>",
          "145: </p>",
          "146: <p>",
          "147:   <p><q a='2' /></p>",
          "148: </p>",
          "",
          "---------------"
        ],
        "test/pretty_results/original_engine.xhtml||test/pretty_results/original_engine.xhtml": [
          "File: test/pretty_results/original_engine.xhtml -> test/pretty_results/original_engine.xhtml",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">",
          "2: <html>",
          "3:   <head>",
          "4:     <title>Stop. haml time</title>",
          "5:     <div id='content'>",
          "6:       <h1>This is a title!</h1>",
          "7:       <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit</p>",
          "8:       <p class='foo'>Cigarettes!</p>",
          "9:       <h2>Man alive!</h2>",
          "10:       <ul class='things'>",
          "11:         <li>Slippers</li>",
          "12:         <li>Shoes</li>",
          "13:         <li>Bathrobe</li>",
          "14:         <li>Coffee</li>",
          "15:       </ul>",
          "16:       <pre>This is some text that's in a pre block!",
          "17:       Let's see what happens when it's rendered! What about now, since we're on a new line?</pre>",
          "18:     </div>",
          "19:   </head>",
          "20: </html>",
          "",
          "---------------"
        ],
        "test/pretty_results/partial_layout.xhtml||test/pretty_results/partial_layout.xhtml": [
          "File: test/pretty_results/partial_layout.xhtml -> test/pretty_results/partial_layout.xhtml",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <h1>Partial layout used with for block:</h1>",
          "2: <div class='partial-layout'>",
          "3:   <h2>This is inside a partial layout</h2>",
          "4:   <p>Some content within a layout</p>",
          "5: </div>",
          "",
          "---------------"
        ],
        "test/pretty_results/partial_layout_erb.xhtml||test/pretty_results/partial_layout_erb.xhtml": [
          "File: test/pretty_results/partial_layout_erb.xhtml -> test/pretty_results/partial_layout_erb.xhtml",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <h1>Partial layout used with for block:</h1>",
          "2: <div class='partial-layout'>",
          "3:   <h2>This is inside a partial layout</h2>",
          "4:   Some content within a layout",
          "5: </div>",
          "",
          "---------------"
        ],
        "test/pretty_results/partials.xhtml||test/pretty_results/partials.xhtml": [
          "File: test/pretty_results/partials.xhtml -> test/pretty_results/partials.xhtml",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <p>",
          "2:   @foo =",
          "3:   value one",
          "4: </p>",
          "5: <p>",
          "6:   @foo =",
          "7:   value two",
          "8: </p>",
          "9: <p>",
          "10:   @foo =",
          "11:   value two",
          "12: </p>",
          "13: Toplevel? false",
          "14: <p>",
          "15:   @foo =",
          "16:   value three",
          "17: </p>",
          "18: <p>",
          "19:   @foo =",
          "20:   value three",
          "21: </p>",
          "",
          "---------------"
        ],
        "test/pretty_results/render_layout.xhtml||test/pretty_results/render_layout.xhtml": [
          "File: test/pretty_results/render_layout.xhtml -> test/pretty_results/render_layout.xhtml",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: Before",
          "2: During",
          "3: After",
          "",
          "---------------"
        ],
        "test/pretty_results/silent_script.xhtml||test/pretty_results/silent_script.xhtml": [
          "File: test/pretty_results/silent_script.xhtml -> test/pretty_results/silent_script.xhtml",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <div>",
          "2:   <h1>I can count!</h1>",
          "3:   1",
          "4:   2",
          "5:   3",
          "6:   4",
          "7:   5",
          "8:   6",
          "9:   7",
          "10:   8",
          "11:   9",
          "12:   10",
          "13:   11",
          "14:   12",
          "15:   13",
          "16:   14",
          "17:   15",
          "18:   16",
          "19:   17",
          "20:   18",
          "21:   19",
          "22:   20",
          "23:   <h1>I know my ABCs!</h1>",
          "24:   <ul>",
          "25:     <li>a</li>",
          "26:     <li>b</li>",
          "27:     <li>c</li>",
          "28:     <li>d</li>",
          "29:     <li>e</li>",
          "30:     <li>f</li>",
          "31:     <li>g</li>",
          "32:     <li>h</li>",
          "33:     <li>i</li>",
          "34:     <li>j</li>",
          "35:     <li>k</li>",
          "36:     <li>l</li>",
          "37:     <li>m</li>",
          "38:     <li>n</li>",
          "39:     <li>o</li>",
          "40:     <li>p</li>",
          "41:     <li>q</li>",
          "42:     <li>r</li>",
          "43:     <li>s</li>",
          "44:     <li>t</li>",
          "45:     <li>u</li>",
          "46:     <li>v</li>",
          "47:     <li>w</li>",
          "48:     <li>x</li>",
          "49:     <li>y</li>",
          "50:     <li>z</li>",
          "51:   </ul>",
          "52:   <h1>I can catch errors!</h1>",
          "53:   Oh no! \"foo\" happened!",
          "54:   <p>",
          "55:     \"false\" is:",
          "56:     false",
          "57:   </p>",
          "58:   Even!",
          "59:   Odd!",
          "60:   Even!",
          "61:   Odd!",
          "62:   Even!",
          "63: </div>",
          "64: <div class='foo'>",
          "65:   <strong>foobar</strong>",
          "66: </div>",
          "67: <strong>0</strong>",
          "68: <strong>1</strong>",
          "69: <strong>2</strong>",
          "70: <strong>3</strong>",
          "71: <strong>4</strong>",
          "72: <div class='test'>",
          "73:   <p>boom</p>",
          "74: </div>",
          "",
          "---------------"
        ],
        "test/pretty_results/standard.xhtml||test/pretty_results/standard.xhtml": [
          "File: test/pretty_results/standard.xhtml -> test/pretty_results/standard.xhtml",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">",
          "2: <html lang='en-US' xml:lang='en-US' xmlns='http://www.w3.org/1999/xhtml'>",
          "3:   <head>",
          "4:     <title>Hampton Catlin Is Totally Awesome</title>",
          "5:     <meta content='text/html; charset=utf-8' http-equiv='Content-Type' />",
          "6:   </head>",
          "7:   <body>",
          "8:     <!-- You're In my house now! -->",
          "9:     <div class='header'>",
          "10:       Yes, ladies and gentileman. He is just that egotistical.",
          "11:       Fantastic! This should be multi-line output",
          "12:       The question is if this would translate! Ahah!",
          "13:       20",
          "14:     </div>",
          "15:     <div id='body'> Quotes should be loved! Just like people!</div>",
          "16:     0",
          "17:     1",
          "18:     2",
          "19:     3",
          "20:     4",
          "21:     5",
          "22:     6",
          "23:     7",
          "24:     8",
          "25:     9",
          "26:     10",
          "27:     11",
          "28:     12",
          "29:     13",
          "30:     14",
          "31:     15",
          "32:     16",
          "33:     17",
          "34:     18",
          "35:     19",
          "36:     20",
          "37:     21",
          "38:     22",
          "39:     23",
          "40:     24",
          "41:     25",
          "42:     26",
          "43:     27",
          "44:     28",
          "45:     29",
          "46:     30",
          "47:     31",
          "48:     32",
          "49:     33",
          "50:     34",
          "51:     35",
          "52:     36",
          "53:     37",
          "54:     38",
          "55:     39",
          "56:     40",
          "57:     41",
          "58:     42",
          "59:     43",
          "60:     44",
          "61:     45",
          "62:     46",
          "63:     47",
          "64:     48",
          "65:     49",
          "66:     50",
          "67:     51",
          "68:     52",
          "69:     53",
          "70:     54",
          "71:     55",
          "72:     56",
          "73:     57",
          "74:     58",
          "75:     59",
          "76:     60",
          "77:     61",
          "78:     62",
          "79:     63",
          "80:     64",
          "81:     65",
          "82:     66",
          "83:     67",
          "84:     68",
          "85:     69",
          "86:     70",
          "87:     71",
          "88:     72",
          "89:     73",
          "90:     74",
          "91:     75",
          "92:     76",
          "93:     77",
          "94:     78",
          "95:     79",
          "96:     80",
          "97:     81",
          "98:     82",
          "99:     83",
          "100:     84",
          "101:     85",
          "102:     86",
          "103:     87",
          "104:     88",
          "105:     89",
          "106:     90",
          "107:     91",
          "108:     92",
          "109:     93",
          "110:     94",
          "111:     95",
          "112:     96",
          "113:     97",
          "114:     98",
          "115:     99",
          "116:     100",
          "117:     101",
          "118:     102",
          "119:     103",
          "120:     104",
          "121:     105",
          "122:     106",
          "123:     107",
          "124:     108",
          "125:     109",
          "126:     110",
          "127:     111",
          "128:     112",
          "129:     113",
          "130:     114",
          "131:     115",
          "132:     116",
          "133:     117",
          "134:     118",
          "135:     119",
          "136:     Wow.|",
          "137:     <p code='3'>",
          "138:       Holy cow        multiline       tags!           A pipe (|) even!",
          "139:       PipesIgnored|PipesIgnored|PipesIgnored|",
          "140:       1|2|3",
          "141:     </p>",
          "142:     <div class='silent' foo='17'>",
          "143:       this shouldn't evaluate but now it should!",
          "144:     </div>",
          "145:     <ul class='really cool'>",
          "146:       <li>a</li>",
          "147:       <li>b</li>",
          "148:       <li>c</li>",
          "149:       <li>d</li>",
          "150:       <li>e</li>",
          "151:       <li>f</li>",
          "152:     </ul>",
          "153:     <div class='of_divs_with_underscore' id='combo'>with this text</div>",
          "154:     foo",
          "155:     <div class='footer'>",
          "156:       <strong class='shout'>",
          "157:         This is a really long ruby quote. It should be loved and wrapped because its more than 50 characters. This value may change in the future and this test may look stupid.",
          "158:         So, I'm just making it *really* long. God, I hope this works",
          "159:       </strong>",
          "160:     </div>",
          "161:   </body>",
          "162: </html>",
          "",
          "---------------"
        ],
        "test/pretty_results/tag_parsing.xhtml||test/pretty_results/tag_parsing.xhtml": [
          "File: test/pretty_results/tag_parsing.xhtml -> test/pretty_results/tag_parsing.xhtml",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <div class='tags'>",
          "2:   <foo>1</foo>",
          "3:   <FOO>2</FOO>",
          "4:   <fooBAR>3</fooBAR>",
          "5:   <fooBar>4</fooBar>",
          "6:   <foo_bar>5</foo_bar>",
          "7:   <foo-bar>6</foo-bar>",
          "8:   <foo:bar>7</foo:bar>",
          "9:   <foo class='bar'>8</foo>",
          "10:   <fooBAr_baz:boom_bar>9</fooBAr_baz:boom_bar>",
          "11:   <foo13>10</foo13>",
          "12:   <foo2u>11</foo2u>",
          "13: </div>",
          "14: <div class='classes'>",
          "15:   <p class='foo bar' id='boom'></p>",
          "16:   <div class='fooBar'>a</div>",
          "17:   <div class='foo-bar'>b</div>",
          "18:   <div class='foo_bar'>c</div>",
          "19:   <div class='FOOBAR'>d</div>",
          "20:   <div class='foo16'>e</div>",
          "21:   <div class='123'>f</div>",
          "22:   <div class='foo2u'>g</div>",
          "23: </div>",
          "",
          "---------------"
        ],
        "test/pretty_results/very_basic.xhtml||test/pretty_results/very_basic.xhtml": [
          "File: test/pretty_results/very_basic.xhtml -> test/pretty_results/very_basic.xhtml",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">",
          "2: <html>",
          "3:   <head></head>",
          "4:   <body></body>",
          "5: </html>",
          "",
          "---------------"
        ],
        "test/pretty_results/whitespace_handling.xhtml||test/pretty_results/whitespace_handling.xhtml": [
          "File: test/pretty_results/whitespace_handling.xhtml -> test/pretty_results/whitespace_handling.xhtml",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <div id='whitespace_test'>",
          "2:   <div class='text_area_test_area'>",
          "3:     <textarea>Oneline</textarea>",
          "4:   </div>",
          "5:   <textarea>BLAH",
          "6:   </textarea>",
          "7:   <div class='text_area_test_area'>",
          "8:     <textarea>Two&#x000A;lines</textarea>",
          "9:   </div>",
          "10:   <textarea>BLAH",
          "11:   </textarea>",
          "12:   <div class='text_area_test_area'>",
          "13:     <textarea>Oneline</textarea>",
          "14:   </div>",
          "15:   <textarea>BLAH</textarea>",
          "16:   <div class='text_area_test_area'>",
          "17:     <textarea>Two&#x000A;lines</textarea>",
          "18:   </div>",
          "19:   <textarea>BLAH</textarea>",
          "20:   <div id='flattened'>",
          "21:     <div class='text_area_test_area'>",
          "22:       <textarea>Two&#x000A;lines</textarea>",
          "23:     </div>",
          "24:     <textarea>BLAH</textarea>",
          "25:   </div>",
          "26: </div>",
          "27: <div class='hithere'>",
          "28:   Foo bar",
          "29:   <pre>foo bar</pre>",
          "30:   <pre>foo&#x000A;bar</pre>",
          "31:   <p><pre>foo&#x000A;bar</pre></p>",
          "32:   <p>",
          "33:     foo",
          "34:     bar",
          "35:   </p>",
          "36: </div>",
          "37: <div class='foo'>",
          "38:   13",
          "39:     <textarea>",
          "40:   a",
          "41:   </textarea>",
          "42: <textarea>",
          "43: a</textarea>",
          "44: </div>",
          "45: <div id='whitespace_test'>",
          "46:   <div class='text_area_test_area'>",
          "47:     <textarea>Oneline</textarea>",
          "48:   </div>",
          "49:   <textarea>BLAH",
          "50:   </textarea>",
          "51:   <div class='text_area_test_area'>",
          "52:     <textarea>Two&#x000A;lines</textarea>",
          "53:   </div>",
          "54:   <textarea>BLAH",
          "55:   </textarea>",
          "56:   <div class='text_area_test_area'>",
          "57:     <textarea>Oneline</textarea>",
          "58:   </div>",
          "59:   <textarea>BLAH</textarea>",
          "60:   <div class='text_area_test_area'>",
          "61:     <textarea>Two&#x000A;lines</textarea>",
          "62:   </div>",
          "63:   <textarea>BLAH</textarea>",
          "64:   <div id='flattened'>",
          "65:     <div class='text_area_test_area'>",
          "66:       <textarea>Two&#x000A;lines</textarea>",
          "67:     </div>",
          "68:     <textarea>BLAH</textarea>",
          "69:   </div>",
          "70: </div>",
          "71: <div class='hithere'>",
          "72:   Foo bar",
          "73:   <pre>foo bar</pre>",
          "74:   <pre>foo&#x000A;bar</pre>",
          "75:   <p><pre>foo&#x000A;bar</pre></p>",
          "76:   <p>",
          "77:     foo",
          "78:     bar",
          "79:   </p>",
          "80:   <pre>                                                 ___&#x000A;                                              ,o88888&#x000A;                                           ,o8888888'&#x000A;                     ,:o:o:oooo.        ,8O88Pd8888\"&#x000A;                 ,.::.::o:ooooOoOoO. ,oO8O8Pd888'\"&#x000A;               ,.:.::o:ooOoOoOO8O8OOo.8OOPd8O8O\"&#x000A;              , ..:.::o:ooOoOOOO8OOOOo.FdO8O8\"&#x000A;             , ..:.::o:ooOoOO8O888O8O,COCOO\"&#x000A;            , . ..:.::o:ooOoOOOO8OOOOCOCO\"&#x000A;             . ..:.::o:ooOoOoOO8O8OCCCC\"o&#x000A;                . ..:.::o:ooooOoCoCCC\"o:o&#x000A;                . ..:.::o:o:,cooooCo\"oo:o:&#x000A;             `   . . ..:.:cocoooo\"'o:o:::'&#x000A;             .`   . ..::ccccoc\"'o:o:o:::'&#x000A;            :.:.    ,c:cccc\"':.:.:.:.:.'&#x000A;          ..:.:\"'`::::c:\"'..:.:.:.:.:.'  http://www.chris.com/ASCII/&#x000A;        ...:.'.:.::::\"'    . . . . .'&#x000A;       .. . ....:.\"' `   .  . . ''&#x000A;     . . . ....\"'&#x000A;     .. . .\"'     -hrr-&#x000A;    .&#x000A;&#x000A;&#x000A;                                              It's a planet!&#x000A;%strong This shouldn't be bold!</pre>",
          "81:   <strong>This should!</strong>",
          "82:   <textarea>      ___           ___           ___           ___ &#x000A;     /\\__\\         /\\  \\         /\\__\\         /\\__\\&#x000A;    /:/  /        /::\\  \\       /::|  |       /:/  /&#x000A;   /:/__/        /:/\\:\\  \\     /:|:|  |      /:/  / &#x000A;  /::\\  \\ ___   /::\\~\\:\\  \\   /:/|:|__|__   /:/  /  &#x000A; /:/\\:\\  /\\__\\ /:/\\:\\ \\:\\__\\ /:/ |::::\\__\\ /:/__/   &#x000A; \\/__\\:\\/:/  / \\/__\\:\\/:/  / \\/__/~~/:/  / \\:\\  \\   &#x000A;      \\::/  /       \\::/  /        /:/  /   \\:\\  \\  &#x000A;      /:/  /        /:/  /        /:/  /     \\:\\  \\ &#x000A;     /:/  /        /:/  /        /:/  /       \\:\\__\\&#x000A;     \\/__/         \\/__/         \\/__/         \\/__/&#x000A;     &#x000A;     Many&#x000A;                   thanks&#x000A;           to&#x000A;                                http://www.network-science.de/ascii/",
          "83:   <strong>indeed!</strong></textarea>",
          "84: </div>",
          "85: <div class='foo'>",
          "86:   13",
          "87: </div>",
          "88: <pre>       __     ______        __               ______&#x000A;.----.|  |--.|__    |.----.|  |--..--------.|  __  |&#x000A;|  __||     ||__    ||  __||    < |        ||  __  |&#x000A;|____||__|__||______||____||__|__||__|__|__||______|</pre>",
          "89: <pre>foo",
          "90: bar</pre>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "af8257c7dbfa3108413d59331ea8be130a2a98be",
      "candidate_info": {
        "commit_hash": "af8257c7dbfa3108413d59331ea8be130a2a98be",
        "repo": "haml/haml",
        "commit_url": "https://github.com/haml/haml/commit/af8257c7dbfa3108413d59331ea8be130a2a98be",
        "files": [
          "lib/haml/attribute_builder.rb",
          "test/engine_test.rb",
          "test/pretty_engine_test.rb"
        ],
        "message": "Always use the same quotes for attributes",
        "before_after_code_files": [
          "lib/haml/attribute_builder.rb||lib/haml/attribute_builder.rb",
          "test/engine_test.rb||test/engine_test.rb",
          "test/pretty_engine_test.rb||test/pretty_engine_test.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "test/engine_test.rb||test/engine_test.rb",
            "test/pretty_engine_test.rb||test/pretty_engine_test.rb"
          ],
          "candidate": [
            "test/engine_test.rb||test/engine_test.rb",
            "test/pretty_engine_test.rb||test/pretty_engine_test.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/haml/attribute_builder.rb||lib/haml/attribute_builder.rb": [
          "File: lib/haml/attribute_builder.rb -> lib/haml/attribute_builder.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "5:       def build_attributes(is_html, attr_wrapper, escape_attrs, hyphenate_data_attrs, attributes = {})",
          "6:           # @TODO this is an absolutely ridiculous amount of arguments. At least",
          "7:         # some of this needs to be moved into an instance method.",
          "10:         join_char        = hyphenate_data_attrs ? '-' : '_'",
          "12:         attributes.each do |key, value|",
          "",
          "[Removed Lines]",
          "8:         quote_escape     = attr_wrapper == '\"' ? \"&#x0022;\" : \"&#x0027;\"",
          "9:         other_quote_char = attr_wrapper == '\"' ? \"'\" : '\"'",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:               value.to_s",
          "41:             end",
          "42:           value = Haml::Helpers.preserve(escaped)",
          "58:         end",
          "59:         result.compact!",
          "60:         result.sort!",
          "",
          "[Removed Lines]",
          "43:           if escape_attrs",
          "44:             # We want to decide whether or not to escape quotes",
          "45:             value.gsub!(/&quot;|&#x0022;/, '\"')",
          "46:             this_attr_wrapper = attr_wrapper",
          "47:             if value.include? attr_wrapper",
          "48:               if value.include? other_quote_char",
          "49:                 value.gsub!(attr_wrapper, quote_escape)",
          "50:               else",
          "51:                 this_attr_wrapper = other_quote_char",
          "52:               end",
          "53:             end",
          "54:           else",
          "55:             this_attr_wrapper = attr_wrapper",
          "56:           end",
          "57:           \" #{attr}=#{this_attr_wrapper}#{value}#{this_attr_wrapper}\"",
          "",
          "[Added Lines]",
          "41:           \" #{attr}=#{attr_wrapper}#{value}#{attr_wrapper}\"",
          "",
          "---------------"
        ],
        "test/engine_test.rb||test/engine_test.rb": [
          "File: test/engine_test.rb -> test/engine_test.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "695:   def test_escape_attrs_always",
          "696:     assert_equal(<<HTML, render(<<HAML, :escape_attrs => :always))",
          "698: bar",
          "699: </div>",
          "700: HTML",
          "",
          "[Removed Lines]",
          "697: <div class='\"&amp;lt;&amp;gt;&amp;amp;\"' id='foo'>",
          "",
          "[Added Lines]",
          "697: <div class='&quot;&amp;lt;&amp;gt;&amp;amp;&quot;' id='foo'>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "815:     assert_equal(\"<a href='#'>Foo</a>\\n\",",
          "816:       render('%a(href=\"#\") #{\"Foo\"}'))",
          "819:   end",
          "821:   def test_case_assigned_to_var",
          "",
          "[Removed Lines]",
          "818:     assert_equal(\"<a href='#\\\"'></a>\\n\", render('%a(href=\"#\\\\\"\")'))",
          "",
          "[Added Lines]",
          "818:     assert_equal(\"<a href='#&quot;'></a>\\n\", render('%a(href=\"#\\\\\"\")'))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1127:   def test_attr_wrapper",
          "1128:     assert_equal(\"<p strange=*attrs*></p>\\n\", render(\"%p{ :strange => 'attrs'}\", :attr_wrapper => '*'))",
          "1130:     assert_equal(\"<p escaped=\\\"quo&#039;te\\\"></p>\\n\", render(\"%p{ :escaped => 'quo\\\\'te'}\", :attr_wrapper => '\"'))",
          "1132:     assert_equal(\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" ?>\\n\", render(\"!!! XML\", :attr_wrapper => '\"', :format => :xhtml))",
          "1133:   end",
          "",
          "[Removed Lines]",
          "1129:     assert_equal(\"<p escaped='quo\\\"te'></p>\\n\", render(\"%p{ :escaped => 'quo\\\"te'}\", :attr_wrapper => '\"'))",
          "1131:     assert_equal(\"<p escaped='q&#039;uo\\\"te'></p>\\n\", render(\"%p{ :escaped => 'q\\\\'uo\\\"te'}\", :attr_wrapper => '\"'))",
          "",
          "[Added Lines]",
          "1129:     assert_equal(\"<p escaped=\\\"quo&quot;te\\\"></p>\\n\", render(\"%p{ :escaped => 'quo\\\"te'}\", :attr_wrapper => '\"'))",
          "1131:     assert_equal(\"<p escaped=\\\"q&#039;uo&quot;te\\\"></p>\\n\", render(\"%p{ :escaped => 'q\\\\'uo\\\"te'}\", :attr_wrapper => '\"'))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1534:       render(\"%div{:data => {:one_plus_one => 1+1}}\",",
          "1535:         :hyphenate_data_attrs => false))",
          "1538:       render(%{%div{:data => {:foo => %{Here's a \"quoteful\" string.}}}},",
          "1539:         :hyphenate_data_attrs => false)) #'",
          "1540:   end",
          "",
          "[Removed Lines]",
          "1537:     assert_equal(\"<div data-foo='Here&#039;s a \\\"quoteful\\\" string.'></div>\\n\",",
          "",
          "[Added Lines]",
          "1537:     assert_equal(\"<div data-foo='Here&#039;s a &quot;quoteful&quot; string.'></div>\\n\",",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1698:   def test_new_attribute_parsing",
          "1699:     assert_equal(\"<a a2='b2'>bar</a>\\n\", render(\"%a(a2=b2) bar\", :locals => {:b2 => 'b2'}))",
          "1701:     assert_equal(%Q{<a a='foo&#039;bar'>bar</a>\\n}, render(%q{%a(a=\"#{\"foo'bar\"}\") bar})) #'",
          "1703:     assert_equal(%Q{<a a='foo&#039;bar'>bar</a>\\n}, render(%q{%a(a=\"foo'bar\") bar}))",
          "1704:     assert_equal(\"<a a:b='foo'>bar</a>\\n\", render(\"%a(a:b='foo') bar\"))",
          "1705:     assert_equal(\"<a a='foo' b='bar'>bar</a>\\n\", render(\"%a(a = 'foo' b = 'bar') bar\"))",
          "",
          "[Removed Lines]",
          "1700:     assert_equal(%Q{<a a='foo\"bar'>bar</a>\\n}, render(%q{%a(a=\"#{'foo\"bar'}\") bar})) #'",
          "1702:     assert_equal(%Q{<a a='foo\"bar'>bar</a>\\n}, render(%q{%a(a='foo\"bar') bar}))",
          "",
          "[Added Lines]",
          "1700:     assert_equal(%Q{<a a='foo&quot;bar'>bar</a>\\n}, render(%q{%a(a=\"#{'foo\"bar'}\") bar})) #'",
          "1702:     assert_equal(%Q{<a a='foo&quot;bar'>bar</a>\\n}, render(%q{%a(a='foo\"bar') bar}))",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1710:   end",
          "1712:   def test_new_attribute_escaping",
          "1716:     assert_equal(%Q{<a a='foo &#039; bar'>bar</a>\\n}, render(%q{%a(a='foo \\' bar') bar}))",
          "1717:     assert_equal(%Q{<a a='foo \\\\&#039; bar'>bar</a>\\n}, render(%q{%a(a='foo \\\\\\\\\\' bar') bar}))",
          "",
          "[Removed Lines]",
          "1713:     assert_equal(%Q{<a a='foo \" bar'>bar</a>\\n}, render(%q{%a(a=\"foo \\\" bar\") bar}))",
          "1714:     assert_equal(%Q{<a a='foo \\\\\" bar'>bar</a>\\n}, render(%q{%a(a=\"foo \\\\\\\\\\\" bar\") bar}))",
          "",
          "[Added Lines]",
          "1713:     assert_equal(%Q{<a a='foo &quot; bar'>bar</a>\\n}, render(%q{%a(a=\"foo \\\" bar\") bar}))",
          "1714:     assert_equal(%Q{<a a='foo \\\\&quot; bar'>bar</a>\\n}, render(%q{%a(a=\"foo \\\\\\\\\\\" bar\") bar}))",
          "",
          "---------------"
        ],
        "test/pretty_engine_test.rb||test/pretty_engine_test.rb": [
          "File: test/pretty_engine_test.rb -> test/pretty_engine_test.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "697:   def test_escape_attrs_always",
          "698:     assert_equal(<<HTML, render(<<HAML, :escape_attrs => :always))",
          "700:   bar",
          "701: </div>",
          "702: HTML",
          "",
          "[Removed Lines]",
          "699: <div class='\"&amp;lt;&amp;gt;&amp;amp;\"' id='foo'>",
          "",
          "[Added Lines]",
          "699: <div class='&quot;&amp;lt;&amp;gt;&amp;amp;&quot;' id='foo'>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "817:     assert_equal(\"<a href='#'>Foo</a>\\n\",",
          "818:       render('%a(href=\"#\") #{\"Foo\"}'))",
          "821:   end",
          "823:   def test_case_assigned_to_var",
          "",
          "[Removed Lines]",
          "820:     assert_equal(\"<a href='#\\\"'></a>\\n\", render('%a(href=\"#\\\\\"\")'))",
          "",
          "[Added Lines]",
          "820:     assert_equal(\"<a href='#&quot;'></a>\\n\", render('%a(href=\"#\\\\\"\")'))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1129:   def test_attr_wrapper",
          "1130:     assert_equal(\"<p strange=*attrs*></p>\\n\", render(\"%p{ :strange => 'attrs'}\", :attr_wrapper => '*'))",
          "1132:     assert_equal(\"<p escaped=\\\"quo&#039;te\\\"></p>\\n\", render(\"%p{ :escaped => 'quo\\\\'te'}\", :attr_wrapper => '\"'))",
          "1134:     assert_equal(\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" ?>\\n\", render(\"!!! XML\", :attr_wrapper => '\"', :format => :xhtml))",
          "1135:   end",
          "",
          "[Removed Lines]",
          "1131:     assert_equal(\"<p escaped='quo\\\"te'></p>\\n\", render(\"%p{ :escaped => 'quo\\\"te'}\", :attr_wrapper => '\"'))",
          "1133:     assert_equal(\"<p escaped='q&#039;uo\\\"te'></p>\\n\", render(\"%p{ :escaped => 'q\\\\'uo\\\"te'}\", :attr_wrapper => '\"'))",
          "",
          "[Added Lines]",
          "1131:     assert_equal(\"<p escaped=\\\"quo&quot;te\\\"></p>\\n\", render(\"%p{ :escaped => 'quo\\\"te'}\", :attr_wrapper => '\"'))",
          "1133:     assert_equal(\"<p escaped=\\\"q&#039;uo&quot;te\\\"></p>\\n\", render(\"%p{ :escaped => 'q\\\\'uo\\\"te'}\", :attr_wrapper => '\"'))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1527:       render(\"%div{:data => {:one_plus_one => 1+1}}\",",
          "1528:         :hyphenate_data_attrs => false))",
          "1531:       render(%{%div{:data => {:foo => %{Here's a \"quoteful\" string.}}}},",
          "1532:         :hyphenate_data_attrs => false)) #'",
          "1533:   end",
          "",
          "[Removed Lines]",
          "1530:     assert_equal(\"<div data-foo='Here&#039;s a \\\"quoteful\\\" string.'></div>\\n\",",
          "",
          "[Added Lines]",
          "1530:     assert_equal(\"<div data-foo='Here&#039;s a &quot;quoteful&quot; string.'></div>\\n\",",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1691:   def test_new_attribute_parsing",
          "1692:     assert_equal(\"<a a2='b2'>bar</a>\\n\", render(\"%a(a2=b2) bar\", :locals => {:b2 => 'b2'}))",
          "1694:     assert_equal(%Q{<a a='foo&#039;bar'>bar</a>\\n}, render(%q{%a(a=\"#{\"foo'bar\"}\") bar})) #'",
          "1696:     assert_equal(%Q{<a a='foo&#039;bar'>bar</a>\\n}, render(%q{%a(a=\"foo'bar\") bar}))",
          "1697:     assert_equal(\"<a a:b='foo'>bar</a>\\n\", render(\"%a(a:b='foo') bar\"))",
          "1698:     assert_equal(\"<a a='foo' b='bar'>bar</a>\\n\", render(\"%a(a = 'foo' b = 'bar') bar\"))",
          "",
          "[Removed Lines]",
          "1693:     assert_equal(%Q{<a a='foo\"bar'>bar</a>\\n}, render(%q{%a(a=\"#{'foo\"bar'}\") bar})) #'",
          "1695:     assert_equal(%Q{<a a='foo\"bar'>bar</a>\\n}, render(%q{%a(a='foo\"bar') bar}))",
          "",
          "[Added Lines]",
          "1693:     assert_equal(%Q{<a a='foo&quot;bar'>bar</a>\\n}, render(%q{%a(a=\"#{'foo\"bar'}\") bar})) #'",
          "1695:     assert_equal(%Q{<a a='foo&quot;bar'>bar</a>\\n}, render(%q{%a(a='foo\"bar') bar}))",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1703:   end",
          "1705:   def test_new_attribute_escaping",
          "1709:     assert_equal(%Q{<a a='foo &#039; bar'>bar</a>\\n}, render(%q{%a(a='foo \\' bar') bar}))",
          "1710:     assert_equal(%Q{<a a='foo \\\\&#039; bar'>bar</a>\\n}, render(%q{%a(a='foo \\\\\\\\\\' bar') bar}))",
          "",
          "[Removed Lines]",
          "1706:     assert_equal(%Q{<a a='foo \" bar'>bar</a>\\n}, render(%q{%a(a=\"foo \\\" bar\") bar}))",
          "1707:     assert_equal(%Q{<a a='foo \\\\\" bar'>bar</a>\\n}, render(%q{%a(a=\"foo \\\\\\\\\\\" bar\") bar}))",
          "",
          "[Added Lines]",
          "1706:     assert_equal(%Q{<a a='foo &quot; bar'>bar</a>\\n}, render(%q{%a(a=\"foo \\\" bar\") bar}))",
          "1707:     assert_equal(%Q{<a a='foo \\\\&quot; bar'>bar</a>\\n}, render(%q{%a(a=\"foo \\\\\\\\\\\" bar\") bar}))",
          "",
          "---------------"
        ]
      }
    }
  ]
}