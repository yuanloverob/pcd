{
  "cve_id": "CVE-2023-28438",
  "cve_desc": "Pimcore is an open source data and experience management platform. Prior to version 10.5.19, since a user with 'report' permission can already write arbitrary SQL queries and given the fact that this endpoint is using the GET method (no CSRF protection), an attacker can inject an arbitrary query by manipulating a user to click on a link. Users should upgrade to version 10.5.19 to receive a patch or, as a workaround, may apply the patch manually.",
  "repo": "pimcore/pimcore",
  "patch_hash": "d1abadb181c88ebaa4bce1916f9077469d4ea2bc",
  "patch_info": {
    "commit_hash": "d1abadb181c88ebaa4bce1916f9077469d4ea2bc",
    "repo": "pimcore/pimcore",
    "commit_url": "https://github.com/pimcore/pimcore/commit/d1abadb181c88ebaa4bce1916f9077469d4ea2bc",
    "files": [
      "models/Tool/CustomReport/Adapter/Sql.php"
    ],
    "message": "[Task] Optimized custom reports filter (#14526)\n\n* optimized custom reports filter\n\n* Update models/Tool/CustomReport/Adapter/Sql.php\n\nCo-authored-by: Jacob Dreesen <jacob@hdreesen.de>\n\n---------\n\nCo-authored-by: Jacob Dreesen <jacob@hdreesen.de>",
    "before_after_code_files": [
      "models/Tool/CustomReport/Adapter/Sql.php||models/Tool/CustomReport/Adapter/Sql.php"
    ]
  },
  "patch_diff": {
    "models/Tool/CustomReport/Adapter/Sql.php||models/Tool/CustomReport/Adapter/Sql.php": [
      "File: models/Tool/CustomReport/Adapter/Sql.php -> models/Tool/CustomReport/Adapter/Sql.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "39:             $order = '';",
      "40:             if ($sort && $dir) {",
      "42:             }",
      "44:             $sql = $baseQuery['data'] . $order;",
      "",
      "[Removed Lines]",
      "41:                 $order = ' ORDER BY ' . $db->quoteIdentifier($sort) . ' ' . $dir;",
      "",
      "[Added Lines]",
      "41:                 $dir = ((strtoupper($dir) === 'ASC') ? 'ASC' : 'DESC');",
      "42:                 $order = ' ORDER BY ' . $db->quoteIdentifier($sort) . ' ' .$dir;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "125:             $db = Db::get();",
      "126:             foreach ($drillDownFilters as $field => $value) {",
      "127:                 if ($value !== '' && $value !== null) {",
      "129:                 }",
      "130:             }",
      "",
      "[Removed Lines]",
      "128:                     $havingParts[] = \"$field = \" . $db->quote($value);",
      "",
      "[Added Lines]",
      "129:                     $havingParts[] = ($db->quoteIdentifier($field) .\" = \" . $db->quote($value));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a52490b2550a83713c49230823cc612df7dafd27",
      "candidate_info": {
        "commit_hash": "a52490b2550a83713c49230823cc612df7dafd27",
        "repo": "pimcore/pimcore",
        "commit_url": "https://github.com/pimcore/pimcore/commit/a52490b2550a83713c49230823cc612df7dafd27",
        "files": [
          "models/Tool/CustomReport/Adapter/Sql.php"
        ],
        "message": "Apply php-cs-fixer changes",
        "before_after_code_files": [
          "models/Tool/CustomReport/Adapter/Sql.php||models/Tool/CustomReport/Adapter/Sql.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "models/Tool/CustomReport/Adapter/Sql.php||models/Tool/CustomReport/Adapter/Sql.php"
          ],
          "candidate": [
            "models/Tool/CustomReport/Adapter/Sql.php||models/Tool/CustomReport/Adapter/Sql.php"
          ]
        }
      },
      "candidate_diff": {
        "models/Tool/CustomReport/Adapter/Sql.php||models/Tool/CustomReport/Adapter/Sql.php": [
          "File: models/Tool/CustomReport/Adapter/Sql.php -> models/Tool/CustomReport/Adapter/Sql.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "126:             $db = Db::get();",
          "127:             foreach ($drillDownFilters as $field => $value) {",
          "128:                 if ($value !== '' && $value !== null) {",
          "130:                 }",
          "131:             }",
          "",
          "[Removed Lines]",
          "129:                     $havingParts[] = ($db->quoteIdentifier($field) .\" = \" . $db->quote($value));",
          "",
          "[Added Lines]",
          "129:                     $havingParts[] = ($db->quoteIdentifier($field) .' = ' . $db->quote($value));",
          "",
          "---------------"
        ]
      }
    }
  ]
}