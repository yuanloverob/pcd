{
  "cve_id": "CVE-2023-1001",
  "cve_desc": "A vulnerability, which was classified as problematic, has been found in xuliangzhan vxe-table up to 3.7.9. This issue affects the function export of the file packages/textarea/src/textarea.js of the component vxe-textarea. The manipulation of the argument inputValue leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 3.7.10 is able to address this issue. The patch is named d70b0e089740b65a22c89c106ebc4627ac48a22d. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-266123.",
  "repo": "x-extends/vxe-table",
  "patch_hash": "d70b0e089740b65a22c89c106ebc4627ac48a22d",
  "patch_info": {
    "commit_hash": "d70b0e089740b65a22c89c106ebc4627ac48a22d",
    "repo": "x-extends/vxe-table",
    "commit_url": "https://github.com/x-extends/vxe-table/commit/d70b0e089740b65a22c89c106ebc4627ac48a22d",
    "files": [
      "packages/table/src/body.js",
      "packages/textarea/src/textarea.js"
    ],
    "message": "textarea \u4fee\u590d\u6ce8\u5165xss\u95ee\u9898 #I8O21R",
    "before_after_code_files": [
      "packages/table/src/body.js||packages/table/src/body.js",
      "packages/textarea/src/textarea.js||packages/textarea/src/textarea.js"
    ]
  },
  "patch_diff": {
    "packages/table/src/body.js||packages/table/src/body.js": [
      "File: packages/table/src/body.js -> packages/table/src/body.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "499:     elemStore[`${prefix}xSpace`] = $refs.xSpace",
      "500:     elemStore[`${prefix}ySpace`] = $refs.ySpace",
      "501:     elemStore[`${prefix}emptyBlock`] = $refs.emptyBlock",
      "504:   },",
      "505:   beforeDestroy () {",
      "506:     clearTimeout(this.wheelTime)",
      "",
      "[Removed Lines]",
      "502:     this.$el.onscroll = this.scrollEvent",
      "503:     this.$el._onscroll = this.scrollEvent",
      "",
      "[Added Lines]",
      "502:     if (this.$el) {",
      "503:       this.$el.onscroll = this.scrollEvent",
      "504:       this.$el._onscroll = this.scrollEvent",
      "505:     }",
      "",
      "---------------"
    ],
    "packages/textarea/src/textarea.js||packages/textarea/src/textarea.js": [
      "File: packages/textarea/src/textarea.js -> packages/textarea/src/textarea.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "188:         autoTxtElem.className = ['vxe-textarea--autosize', size ? `size--${size}` : ''].join(' ')",
      "189:         autoTxtElem.style.width = `${textElem.clientWidth}px`",
      "190:         autoTxtElem.style.padding = textStyle.padding",
      "192:       }",
      "193:     },",
      "194:     handleResize () {",
      "",
      "[Removed Lines]",
      "191:         autoTxtElem.innerHTML = ('' + (inputValue || '\u3000')).replace(/\\n$/, '\\n\u3000')",
      "",
      "[Added Lines]",
      "191:         autoTxtElem.innerText = ('' + (inputValue || '\u3000')).replace(/\\n$/, '\\n\u3000')",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1c4516aa7078fa912935f3723614209c060429d3",
      "candidate_info": {
        "commit_hash": "1c4516aa7078fa912935f3723614209c060429d3",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/1c4516aa7078fa912935f3723614209c060429d3",
        "files": [
          "examples/views/table/edit/Insert.vue",
          "package.json",
          "packages/edit/src/mixin.js",
          "packages/filter/src/panel.js"
        ],
        "message": "fix filter",
        "before_after_code_files": [
          "examples/views/table/edit/Insert.vue||examples/views/table/edit/Insert.vue",
          "packages/edit/src/mixin.js||packages/edit/src/mixin.js",
          "packages/filter/src/panel.js||packages/filter/src/panel.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/views/table/edit/Insert.vue||examples/views/table/edit/Insert.vue": [
          "File: examples/views/table/edit/Insert.vue -> examples/views/table/edit/Insert.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "141:         date12: '2021-01-01'",
          "142:       }",
          "143:       const { row: newRow } = await $table.insertAt(record, row)",
          "144:       await $table.setActiveCell(newRow, 'sex')",
          "145:     },",
          "146:     getInsertEvent () {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "144:       debugger",
          "",
          "---------------"
        ],
        "packages/edit/src/mixin.js||packages/edit/src/mixin.js": [
          "File: packages/edit/src/mixin.js -> packages/edit/src/mixin.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "663:       }",
          "664:       return this.setEditCell(row, column)",
          "665:     },",
          "667:       if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "668:         warnLog('vxe.error.delFunc', ['setActiveCell', 'setEditCell'])",
          "669:       }",
          "672:     },",
          "",
          "[Removed Lines]",
          "666:     _setActiveCell (row) {",
          "671:       return this.setEditCell(row)",
          "",
          "[Added Lines]",
          "666:     _setActiveCell (row, fieldOrColumn) {",
          "671:       return this.setEditCell(row, fieldOrColumn)",
          "",
          "---------------"
        ],
        "packages/filter/src/panel.js||packages/filter/src/panel.js": [
          "File: packages/filter/src/panel.js -> packages/filter/src/panel.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "122:       const filterRender = column.filterRender",
          "123:       const compConf = filterRender ? VXETable.renderer.get(filterRender.name) : null",
          "124:       const isDisabled = !hasCheckOption && !filterStore.isAllSelected && !filterStore.isIndeterminate",
          "126:         h('div', {",
          "127:           class: 'vxe-table--filter-footer'",
          "128:         }, [",
          "",
          "[Removed Lines]",
          "125:       return multiple(compConf ? !(compConf.showTableFilterFooter === false || compConf.showFilterFooter === false || compConf.isFooter === false) : true) ? [",
          "",
          "[Added Lines]",
          "125:       return multiple && (compConf ? !(compConf.showTableFilterFooter === false || compConf.showFilterFooter === false) : true) ? [",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bc927d5bf6debd140c5426284d108370ee6f37d1",
      "candidate_info": {
        "commit_hash": "bc927d5bf6debd140c5426284d108370ee6f37d1",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/bc927d5bf6debd140c5426284d108370ee6f37d1",
        "files": [
          "README.md",
          "package.json",
          "packages/footer/src/footer.js",
          "packages/form/src/form-config-item.js",
          "packages/form/src/form-item.js",
          "packages/form/src/form.js",
          "packages/form/src/render.js",
          "packages/form/src/util.js",
          "packages/header/src/header.js",
          "packages/locale/lang/en-US.js",
          "packages/locale/lang/ja-JP.js",
          "packages/locale/lang/zh-CN.js",
          "packages/locale/lang/zh-TC.js",
          "packages/pager/src/pager.js",
          "packages/table/src/body.js",
          "packages/table/src/table.js",
          "packages/toolbar/src/toolbar.js",
          "packages/tools/utils.js",
          "types/component.d.ts",
          "types/table.d.ts",
          "types/tooltip.d.ts",
          "types/validator.d.ts"
        ],
        "message": "\u4f18\u5316\u6e32\u67d3\u51fd\u6570\u76f8\u5173\u53c2\u6570\u3001\u4fee\u590d readFile \u6587\u4ef6\u683c\u5f0f\u5927\u5c0f\u5199\u6821\u9a8c\u9519\u8bef\u95ee\u9898",
        "before_after_code_files": [
          "packages/footer/src/footer.js||packages/footer/src/footer.js",
          "packages/form/src/form-config-item.js||packages/form/src/form-config-item.js",
          "packages/form/src/form-item.js||packages/form/src/form-item.js",
          "packages/form/src/form.js||packages/form/src/form.js",
          "packages/form/src/render.js||packages/form/src/render.js",
          "packages/form/src/util.js||packages/form/src/util.js",
          "packages/header/src/header.js||packages/header/src/header.js",
          "packages/locale/lang/en-US.js||packages/locale/lang/en-US.js",
          "packages/locale/lang/ja-JP.js||packages/locale/lang/ja-JP.js",
          "packages/locale/lang/zh-CN.js||packages/locale/lang/zh-CN.js",
          "packages/locale/lang/zh-TC.js||packages/locale/lang/zh-TC.js",
          "packages/pager/src/pager.js||packages/pager/src/pager.js",
          "packages/table/src/body.js||packages/table/src/body.js",
          "packages/table/src/table.js||packages/table/src/table.js",
          "packages/toolbar/src/toolbar.js||packages/toolbar/src/toolbar.js",
          "packages/tools/utils.js||packages/tools/utils.js",
          "types/component.d.ts||types/component.d.ts",
          "types/table.d.ts||types/table.d.ts",
          "types/tooltip.d.ts||types/tooltip.d.ts",
          "types/validator.d.ts||types/validator.d.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [
            "packages/table/src/body.js||packages/table/src/body.js"
          ],
          "candidate": [
            "packages/table/src/body.js||packages/table/src/body.js"
          ]
        }
      },
      "candidate_diff": {
        "packages/footer/src/footer.js||packages/footer/src/footer.js": [
          "File: packages/footer/src/footer.js -> packages/footer/src/footer.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "150:             const columnIndex = $xetable.getColumnIndex(column)",
          "151:             const _columnIndex = $xetable.getVTColumnIndex(column)",
          "152:             const itemIndex = _columnIndex",
          "155:             if (scrollXLoad && !hasEllipsis) {",
          "156:               showEllipsis = hasEllipsis = true",
          "",
          "[Removed Lines]",
          "153:             const params = { $table: $xetable, _rowIndex, $rowIndex, column, columnIndex, $columnIndex, _columnIndex, itemIndex, items: list, fixed: fixedType, type: cellType, data: footerTableData }",
          "",
          "[Added Lines]",
          "153:             const params = { $table: $xetable, $grid: $xetable.xegrid, _rowIndex, $rowIndex, column, columnIndex, $columnIndex, _columnIndex, itemIndex, items: list, fixed: fixedType, type: cellType, data: footerTableData }",
          "",
          "---------------"
        ],
        "packages/form/src/form-config-item.js||packages/form/src/form-config-item.js": [
          "File: packages/form/src/form-config-item.js -> packages/form/src/form-config-item.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:     const showTitle = itemOverflow === 'title'",
          "43:     const showTooltip = itemOverflow === true || itemOverflow === 'tooltip'",
          "44:     const hasEllipsis = showTitle || showTooltip || showEllipsis",
          "46:     let isRequired",
          "47:     if (visible === false) {",
          "48:       return _e()",
          "",
          "[Removed Lines]",
          "45:     const params = { data, field, property: field, item, $form: $xeform }",
          "",
          "[Added Lines]",
          "45:     const params = { data, field, property: field, item, $form: $xeform, $grid: $xeform.xegrid }",
          "",
          "---------------"
        ],
        "packages/form/src/form-item.js||packages/form/src/form-item.js": [
          "File: packages/form/src/form-item.js -> packages/form/src/form-item.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:   const showTitle = itemOverflow === 'title'",
          "67:   const showTooltip = itemOverflow === true || itemOverflow === 'tooltip'",
          "68:   const hasEllipsis = showTitle || showTooltip || showEllipsis",
          "70:   let isRequired",
          "71:   if (visible === false) {",
          "72:     return _e()",
          "",
          "[Removed Lines]",
          "69:   const params = { data, field, property: field, item, $form: _vm }",
          "",
          "[Added Lines]",
          "69:   const params = { data, field, property: field, item, $form: _vm, $grid: _vm.xegrid }",
          "",
          "---------------"
        ],
        "packages/form/src/form.js||packages/form/src/form.js": [
          "File: packages/form/src/form.js -> packages/form/src/form.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:     tooltipConfig: Object,",
          "89:     customLayout: { type: Boolean, default: () => GlobalConfig.form.customLayout }",
          "90:   },",
          "91:   data () {",
          "92:     return {",
          "93:       collapseAll: this.collapseStatus,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91:   inject: {",
          "92:     $xegrid: {",
          "93:       default: null",
          "94:     }",
          "95:   },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "110:     }",
          "111:   },",
          "112:   computed: {",
          "113:     validOpts () {",
          "114:       return Object.assign({}, GlobalConfig.form.validConfig, this.validConfig)",
          "115:     },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "118:     xegrid () {",
          "119:       return this.$xegrid",
          "120:     },",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "188:     ])",
          "189:   },",
          "190:   methods: {",
          "191:     callSlot (slotFunc, params, h) {",
          "192:       if (slotFunc) {",
          "193:         const { $scopedSlots } = this",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "199:     dispatchEvent (type, params, evnt) {",
          "200:       this.$emit(type, Object.assign({ $form: this, $grid: this.xegrid, $event: evnt }, params))",
          "201:     },",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "238:     toggleCollapseEvent (evnt) {",
          "239:       this.toggleCollapse()",
          "240:       const status = this.collapseAll",
          "243:     },",
          "244:     submitEvent (evnt) {",
          "245:       evnt.preventDefault()",
          "",
          "[Removed Lines]",
          "241:       this.$emit('toggle-collapse', { status, collapse: status, data: this.data, $form: this, $event: evnt }, evnt)",
          "242:       this.$emit('collapse', { status, collapse: status, data: this.data, $form: this, $event: evnt }, evnt)",
          "",
          "[Added Lines]",
          "252:       this.dispatchEvent('toggle-collapse', { status, collapse: status, data: this.data }, evnt)",
          "253:       this.dispatchEvent('collapse', { status, collapse: status, data: this.data }, evnt)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "247:         this.clearValidate()",
          "248:         this.beginValidate(this.getItems()).then((errMap) => {",
          "249:           if (errMap) {",
          "251:           } else {",
          "253:           }",
          "254:         })",
          "255:       }",
          "",
          "[Removed Lines]",
          "250:             this.$emit('submit-invalid', { data: this.data, errMap, $form: this, $event: evnt })",
          "252:             this.$emit('submit', { data: this.data, $event: evnt })",
          "",
          "[Added Lines]",
          "261:             this.dispatchEvent('submit-invalid', { data: this.data, errMap }, evnt)",
          "263:             this.dispatchEvent('submit', { data: this.data }, evnt)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "263:           if (isEnableConf(itemRender)) {",
          "264:             const compConf = VXETable.renderer.get(itemRender.name)",
          "265:             if (compConf && compConf.itemResetMethod) {",
          "267:             } else if (field) {",
          "268:               XEUtils.set(data, field, resetValue === null ? getResetValue(XEUtils.get(data, field), undefined) : XEUtils.clone(resetValue, true))",
          "269:             }",
          "",
          "[Removed Lines]",
          "266:               compConf.itemResetMethod({ data, field, property: field, item, $form: this })",
          "",
          "[Added Lines]",
          "277:               compConf.itemResetMethod({ data, field, property: field, item, $form: this, $grid: this.xegrid })",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "275:     resetEvent (evnt) {",
          "276:       evnt.preventDefault()",
          "277:       this.reset()",
          "279:     },",
          "280:     closeTooltip () {",
          "281:       const { tooltipStore } = this",
          "",
          "[Removed Lines]",
          "278:       this.$emit('reset', { data: this.data, $form: this, $event: evnt })",
          "",
          "[Added Lines]",
          "289:       this.dispatchEvent('reset', { data: this.data }, evnt)",
          "",
          "---------------"
        ],
        "packages/form/src/render.js||packages/form/src/render.js": [
          "File: packages/form/src/render.js -> packages/form/src/render.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:   const { data, tooltipOpts } = _vm",
          "28:   const { slots, field, itemRender, titlePrefix, titleSuffix } = item",
          "29:   const compConf = isEnableConf(itemRender) ? VXETable.renderer.get(itemRender.name) : null",
          "31:   const contVNs = []",
          "32:   const titVNs = []",
          "33:   if (titlePrefix) {",
          "",
          "[Removed Lines]",
          "30:   const params = { data, field, property: field, item, $form: _vm }",
          "",
          "[Added Lines]",
          "30:   const params = { data, field, property: field, item, $form: _vm, $grid: _vm.xegrid }",
          "",
          "---------------"
        ],
        "packages/form/src/util.js||packages/form/src/util.js": [
          "File: packages/form/src/util.js -> packages/form/src/util.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:     return true",
          "79:   }",
          "80:   const { data } = $xeform",
          "82: }",
          "84: export function createItem ($xeform, _vm) {",
          "",
          "[Removed Lines]",
          "81:   return visibleMethod({ data, field, property: field, item: formItem, $form: $xeform })",
          "",
          "[Added Lines]",
          "81:   return visibleMethod({ data, field, property: field, item: formItem, $form: $xeform, $grid: $xeform.xegrid })",
          "",
          "---------------"
        ],
        "packages/header/src/header.js||packages/header/src/header.js": [
          "File: packages/header/src/header.js -> packages/header/src/header.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "130:             const hasFilter = column.filters && column.filters.some(item => item.checked)",
          "131:             const columnIndex = $xetable.getColumnIndex(column)",
          "132:             const _columnIndex = $xetable.getVTColumnIndex(column)",
          "135:             if (scrollXLoad && !hasEllipsis) {",
          "136:               showEllipsis = hasEllipsis = true",
          "",
          "[Removed Lines]",
          "133:             const params = { $table: $xetable, $rowIndex, column, columnIndex, $columnIndex, _columnIndex, fixed: fixedType, type: cellType, isHidden: fixedHiddenColumn, hasFilter }",
          "",
          "[Added Lines]",
          "133:             const params = { $table: $xetable, $grid: $xetable.xegrid, $rowIndex, column, columnIndex, $columnIndex, _columnIndex, fixed: fixedType, type: cellType, isHidden: fixedHiddenColumn, hasFilter }",
          "",
          "---------------"
        ],
        "packages/locale/lang/en-US.js||packages/locale/lang/en-US.js": [
          "File: packages/locale/lang/en-US.js -> packages/locale/lang/en-US.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "22:       notSlot: 'slot \"{0}\" does not exist',",
          "23:       noTree: 'The tree structure does not support \"{0}\".',",
          "24:       notProp: 'Unsupported parameters \"{0}\"',",
          "25:       coverProp: 'The parameter \"{1}\" to \"{0}\" is overwritten. This may cause an error',",
          "26:       delFunc: 'The function \"{0}\" is deprecated, please use \"{1}\".',",
          "27:       delProp: 'The property \"{0}\" is deprecated, please use \"{1}\".',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25:       checkProp: 'The checkbox may stall when the amount of data is too large, it is recommended to set the parameter \"{0}\" to increase the rendering speed ',",
          "",
          "---------------"
        ],
        "packages/locale/lang/ja-JP.js||packages/locale/lang/ja-JP.js": [
          "File: packages/locale/lang/ja-JP.js -> packages/locale/lang/ja-JP.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "22:       notSlot: 'slot \"{0}\" \u306f\u3042\u308a\u307e\u305b\u3093',",
          "23:       noTree: 'Tree structure\u306f \"{0}\" \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093',",
          "24:       notProp: '\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u30d1\u30e9\u30e1\u30fc\u30bf \"{0}\"',",
          "25:       coverProp: '\"{0}\" \u7684\u53c2\u6570 \"{1}\" \u88ab\u8986\u76d6\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "26:       delFunc: '\"{0}\" function\u306f\u975e\u63a8\u5968\u3067\u3059\u3001\"{1}\"\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044',",
          "27:       delProp: '\"{0}\" property\u306f\u975e\u63a8\u5968\u3067\u3059\u3001\"{1}\"\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25:       checkProp: '\u5f53\u6570\u636e\u91cf\u8fc7\u5927\u65f6\u53ef\u80fd\u4f1a\u5bfc\u81f4\u590d\u9009\u6846\u5361\u987f\uff0c\u5efa\u8bae\u8bbe\u7f6e\u53c2\u6570 \"{0}\" \u63d0\u5347\u6e32\u67d3\u901f\u5ea6',",
          "",
          "---------------"
        ],
        "packages/locale/lang/zh-CN.js||packages/locale/lang/zh-CN.js": [
          "File: packages/locale/lang/zh-CN.js -> packages/locale/lang/zh-CN.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "22:       notSlot: '\u63d2\u69fd \"{0}\" \u4e0d\u5b58\u5728',",
          "23:       noTree: '\u6811\u7ed3\u6784\u4e0d\u652f\u6301 \"{0}\"',",
          "24:       notProp: '\u4e0d\u652f\u6301\u7684\u53c2\u6570 \"{0}\"',",
          "25:       coverProp: '\"{0}\" \u7684\u53c2\u6570 \"{1}\" \u88ab\u8986\u76d6\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "26:       delFunc: '\u65b9\u6cd5 \"{0}\" \u5df2\u5e9f\u5f03\uff0c\u8bf7\u4f7f\u7528 \"{1}\"',",
          "27:       delProp: '\u53c2\u6570 \"{0}\" \u5df2\u5e9f\u5f03\uff0c\u8bf7\u4f7f\u7528 \"{1}\"',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25:       checkProp: '\u5f53\u6570\u636e\u91cf\u8fc7\u5927\u65f6\u53ef\u80fd\u4f1a\u5bfc\u81f4\u590d\u9009\u6846\u5361\u987f\uff0c\u5efa\u8bae\u8bbe\u7f6e\u53c2\u6570 \"{0}\" \u63d0\u5347\u6e32\u67d3\u901f\u5ea6',",
          "",
          "---------------"
        ],
        "packages/locale/lang/zh-TC.js||packages/locale/lang/zh-TC.js": [
          "File: packages/locale/lang/zh-TC.js -> packages/locale/lang/zh-TC.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "22:       notSlot: '\u63d2\u69fd \"{0}\" \u4e0d\u5b58\u5728',",
          "23:       noTree: '\u6a39\u72c0\u7d50\u69cb\u4e0d\u652f\u63f4 {0}',",
          "24:       notProp: '\u4e0d\u652f\u6301\u7684\u53c3\u6578 \"{0}\"',",
          "25:       coverProp: '\"{0}\" \u7684\u53c3\u6578 \"{1}\" \u88ab\u8986\u84cb\uff0c\u9019\u53ef\u80fd\u6703\u51fa\u73fe\u932f\u8aa4',",
          "26:       delFunc: '\u65b9\u6cd5 \"{0}\" \u5df2\u505c\u7528\uff0c\u8acb\u4f7f\u7528 \"{1}\"',",
          "27:       delProp: '\u53c3\u6578 \"{0}\" \u5df2\u505c\u7528\uff0c\u8acb\u4f7f\u7528 \"{1}\"',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25:       checkProp: '\u7576\u6578\u64da\u91cf\u904e\u5927\u6642\u53ef\u80fd\u6703\u5c0e\u81f4\u8907\u9078\u6846\u5361\u9813\uff0c\u5efa\u8b70\u8a2d\u7f6e\u53c3\u6578 \"{0}\" \u63d0\u5347\u6e32\u67d3\u901f\u5ea6',",
          "",
          "---------------"
        ],
        "packages/pager/src/pager.js||packages/pager/src/pager.js": [
          "File: packages/pager/src/pager.js -> packages/pager/src/pager.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "402:     triggerJumpEvent (evnt) {",
          "403:       const value = XEUtils.toInteger(evnt.target.value)",
          "404:       const current = value <= 0 ? 1 : value >= this.pageCount ? this.pageCount : value",
          "406:       this.jumpPage(current)",
          "407:     }",
          "408:   }",
          "",
          "[Removed Lines]",
          "405:       evnt.target.value = current",
          "",
          "[Added Lines]",
          "405:       const currPage = XEUtils.toValueString(current)",
          "406:       evnt.target.value = currPage",
          "407:       this.inpCurrPage = currPage",
          "",
          "---------------"
        ],
        "packages/table/src/body.js||packages/table/src/body.js": [
          "File: packages/table/src/body.js -> packages/table/src/body.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "113:   const bindMouseenter = tableListeners['cell-mouseenter']",
          "114:   const bindMouseleave = tableListeners['cell-mouseleave']",
          "115:   const triggerDblclick = (editRender && editConfig && editOpts.trigger === 'dblclick')",
          "118:   if ((scrollXLoad || scrollYLoad) && !hasEllipsis) {",
          "119:     showEllipsis = hasEllipsis = true",
          "",
          "[Removed Lines]",
          "116:   const params = { $table: $xetable, seq, rowid, row, rowIndex, $rowIndex, _rowIndex, column, columnIndex, $columnIndex, _columnIndex, fixed: fixedType, type: renderType, isHidden: fixedHiddenColumn, level: rowLevel, visibleData: afterFullData, data: tableData, items }",
          "",
          "[Added Lines]",
          "116:   const params = { $table: $xetable, $grid: $xetable.$xegrid, seq, rowid, row, rowIndex, $rowIndex, _rowIndex, column, columnIndex, $columnIndex, _columnIndex, fixed: fixedType, type: renderType, isHidden: fixedHiddenColumn, level: rowLevel, visibleData: afterFullData, data: tableData, items }",
          "",
          "---------------"
        ],
        "packages/table/src/table.js||packages/table/src/table.js": [
          "File: packages/table/src/table.js -> packages/table/src/table.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "625:         if (!inited) {",
          "626:           this.handleInitDefaults()",
          "627:         }",
          "628:         if ((this.scrollXLoad || this.scrollYLoad) && this.expandColumn) {",
          "629:           warnLog('vxe.error.scrollErrProp', ['column.type=expand'])",
          "630:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "628:         const checkboxColumn = this.tableFullColumn.find(column => column.type === 'checkbox')",
          "629:         if (checkboxColumn && this.tableFullData.length > 300 && !this.checkboxOpts.checkField) {",
          "630:           warnLog('vxe.error.checkProp', ['checkbox-config.checkField'])",
          "631:         }",
          "",
          "---------------"
        ],
        "packages/toolbar/src/toolbar.js||packages/toolbar/src/toolbar.js": [
          "File: packages/toolbar/src/toolbar.js -> packages/toolbar/src/toolbar.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "86: function renderRightTools (h, _vm) {",
          "88:   const toolsSlot = $scopedSlots.tools",
          "89:   if (toolsSlot) {",
          "91:   }",
          "92:   return tools.map(item => {",
          "93:     const { dropdowns, toolRender } = item",
          "",
          "[Removed Lines]",
          "87:   const { _e, $scopedSlots, $xegrid, $xetable, tools = [] } = _vm",
          "90:     return toolsSlot.call(_vm, { $grid: $xegrid, $table: $xetable }, h)",
          "",
          "[Added Lines]",
          "87:   const { _e, $scopedSlots, $xetable, tools = [] } = _vm",
          "90:     return toolsSlot.call(_vm, { $table: $xetable, $grid: $xetable.xegrid }, h)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "100:       if (renderToolbarTool) {",
          "101:         return h('span', {",
          "102:           class: 'vxe-tool--item'",
          "104:       }",
          "105:     }",
          "106:     return h('vxe-button', {",
          "",
          "[Removed Lines]",
          "103:         }, getSlotVNs(renderToolbarTool.call(_vm, h, toolRender, { $grid: $xegrid, $table: $xetable, tool: item })))",
          "",
          "[Added Lines]",
          "103:         }, getSlotVNs(renderToolbarTool.call(_vm, h, toolRender, { $table: $xetable, $grid: $xetable.xegrid, tool: item })))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "601:           $xegrid.triggerToolbarBtnEvent(item, evnt)",
          "602:         } else {",
          "603:           const commandMethod = VXETable.commands.get(code)",
          "605:           if (commandMethod) {",
          "606:             commandMethod.call(this, params, evnt)",
          "607:           }",
          "",
          "[Removed Lines]",
          "604:           const params = { code, button: item, $xegrid, $table: $xetable, $event: evnt }",
          "",
          "[Added Lines]",
          "604:           const params = { code, button: item, $table: $xetable, $grid: $xetable.xegrid, $event: evnt }",
          "",
          "---------------"
        ],
        "packages/tools/utils.js||packages/tools/utils.js": [
          "File: packages/tools/utils.js -> packages/tools/utils.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:   parseFile (file) {",
          "86:     const name = file.name",
          "87:     const tIndex = XEUtils.lastIndexOf(name, '.')",
          "89:     const filename = name.substring(0, tIndex)",
          "90:     return { filename, type }",
          "91:   },",
          "",
          "[Removed Lines]",
          "88:     const type = name.substring(tIndex + 1, name.length)",
          "",
          "[Added Lines]",
          "88:     const type = name.substring(tIndex + 1, name.length).toLowerCase()",
          "",
          "---------------"
        ],
        "types/component.d.ts||types/component.d.ts": [
          "File: types/component.d.ts -> types/component.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:   [key: string]: any;",
          "24: }",
          "",
          "[Removed Lines]",
          "26: export type SlotVNodeType = VNode | string | number",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "types/table.d.ts||types/table.d.ts": [
          "File: types/table.d.ts -> types/table.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1066:   [key: string]: any;",
          "1067: }",
          "1073: export interface TableFooterMethodParams {",
          "1074:   $table: Table;",
          "",
          "[Removed Lines]",
          "1069: export type TableBorder = boolean | 'default' | 'full' | 'outer' | 'inner' | 'none';",
          "1070: export type TableAlign = 'left' | 'center' | 'right' | null;",
          "1071: export type TableOverflow = boolean | 'ellipsis' | 'title' | 'tooltip' | null;",
          "",
          "[Added Lines]",
          "1069: export type TableBorder = boolean | 'default' | 'full' | 'outer' | 'inner' | 'none' | '';",
          "1070: export type TableAlign = 'left' | 'center' | 'right' | '' | null;",
          "1071: export type TableOverflow = boolean | 'ellipsis' | 'title' | 'tooltip' | '' | null;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1206:   order?: TableSortOrder;",
          "1207: }",
          "",
          "[Removed Lines]",
          "1209: export type TableSortOrder = 'asc' | 'desc' | null;",
          "",
          "[Added Lines]",
          "1209: export type TableSortOrder = 'asc' | 'desc' | '' | null;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1245:   labelField?: string;",
          "1246:   checkRowKey?: string | number;",
          "1247:   checkMethod?(params: { row: RowInfo }): boolean;",
          "1249:   highlight?: boolean;",
          "1250: }",
          "1251: export type RadioConfig = TableRadioConfig",
          "",
          "[Removed Lines]",
          "1248:   trigger?: 'default' | 'cell' | 'row';",
          "",
          "[Added Lines]",
          "1248:   trigger?: 'default' | 'cell' | 'row' | '';",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1264:   checkStrictly?: boolean;",
          "1265:   strict?: boolean;",
          "1266:   checkMethod?(params: { row: RowInfo }): boolean;",
          "1268:   highlight?: boolean;",
          "1269:   range?: boolean;",
          "1270: }",
          "",
          "[Removed Lines]",
          "1267:   trigger?: 'default' | 'cell' | 'row';",
          "",
          "[Added Lines]",
          "1267:   trigger?: 'default' | 'cell' | 'row' | '';",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1276: export interface TableTooltipConfig {",
          "1277:   enabled?: boolean;",
          "1279:   enterable?: boolean;",
          "1280:   leaveDelay?: number;",
          "1281:   contentMethod?(params: { items: any[], row: RowInfo, rowIndex: number, $rowIndex: number, column: ColumnInfo, columnIndex: number, $columnIndex: number, type: 'header' | 'body' | 'footer', cell: HTMLElement, $event: any }): string | null | void;",
          "",
          "[Removed Lines]",
          "1278:   theme?: 'dark' | 'light';",
          "",
          "[Added Lines]",
          "1278:   theme?: 'dark' | 'light' | '';",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1290:   expandAll?: boolean;",
          "1291:   expandRowKeys?: string[] | number[];",
          "1292:   accordion?: boolean;",
          "1294:   lazy?: boolean;",
          "1295:   height?: number",
          "1296:   loadMethod?(params: { row: RowInfo, rowIndex: number, $rowIndex: number }): Promise<any>;",
          "",
          "[Removed Lines]",
          "1293:   trigger?: 'default' | 'cell' | 'row';",
          "",
          "[Added Lines]",
          "1293:   trigger?: 'default' | 'cell' | 'row' | '';",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1313:   expandAll?: boolean;",
          "1314:   expandRowKeys?: string[] | number[];",
          "1315:   accordion?: boolean;",
          "1317:   lazy?: boolean;",
          "1318:   hasChild?: string;",
          "1319:   loadMethod?(params: { row: RowInfo }): Promise<any[]>;",
          "",
          "[Removed Lines]",
          "1316:   trigger?: 'default' | 'cell' | 'row';",
          "",
          "[Added Lines]",
          "1316:   trigger?: 'default' | 'cell' | 'row' | '';",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1332:   expandAll?: boolean;",
          "1333:   expandRowKeys?: string[] | number[];",
          "1334:   accordion?: boolean;",
          "1336:   lazy?: boolean;",
          "1337:   hasChild: string;",
          "1338:   loadMethod?(params: { row: RowInfo }): Promise<any[]>;",
          "",
          "[Removed Lines]",
          "1335:   trigger?: 'default' | 'cell' | 'row';",
          "",
          "[Added Lines]",
          "1335:   trigger?: 'default' | 'cell' | 'row' | '';",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1350:   header?: MenuOptions;",
          "1351:   body?: MenuOptions;",
          "1352:   footer?: MenuOptions;",
          "1354:   visibleMethod?(params: { type: string, options: MenuFirstOption[], columns: ColumnInfo[], row?: RowInfo, rowIndex?: number, column?: ColumnInfo, columnIndex?: number }): boolean;",
          "1355:   className?: string;",
          "1356: }",
          "",
          "[Removed Lines]",
          "1353:   trigger?: 'default' | 'cell';",
          "",
          "[Added Lines]",
          "1353:   trigger?: 'default' | 'cell' | '';",
          "",
          "---------------"
        ],
        "types/tooltip.d.ts||types/tooltip.d.ts": [
          "File: types/tooltip.d.ts -> types/tooltip.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "14:   trigger?: 'manual' | 'hover' | 'click';",
          "18:   theme?: 'dark' | 'light';",
          "",
          "[Added Lines]",
          "14:   trigger?: 'manual' | 'hover' | 'click' | '' | null;",
          "18:   theme?: 'dark' | 'light' | '' | null;",
          "",
          "---------------"
        ],
        "types/validator.d.ts||types/validator.d.ts": [
          "File: types/validator.d.ts -> types/validator.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "26:   type?: 'number' | 'string';",
          "",
          "[Added Lines]",
          "26:   type?: 'number' | 'string' | '' | null;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39:   message?: string;",
          "41:   maxWidth?: number;",
          "42: }",
          "",
          "[Removed Lines]",
          "40:   trigger?: 'blur' | 'change' | 'manual';",
          "",
          "[Added Lines]",
          "40:   trigger?: 'blur' | 'change' | 'manual' | '' | null;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4efc7a0665a0bab3542ad6b49494d30a47f33bbe",
      "candidate_info": {
        "commit_hash": "4efc7a0665a0bab3542ad6b49494d30a47f33bbe",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/4efc7a0665a0bab3542ad6b49494d30a47f33bbe",
        "files": [
          "package.json",
          "packages/table/src/methods.js"
        ],
        "message": "fix",
        "before_after_code_files": [
          "packages/table/src/methods.js||packages/table/src/methods.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/table/src/methods.js||packages/table/src/methods.js": [
          "File: packages/table/src/methods.js -> packages/table/src/methods.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "2832:         } else {",
          "2834:           XEUtils.eachTree([row], (item) => {",
          "2836:               if (value) {",
          "2837:                 selection.push(item)",
          "2838:               } else {",
          "",
          "[Removed Lines]",
          "2835:             if (this.eqRow(item, row) || (isForce && (!checkMethod || checkMethod({ row: item })))) {",
          "",
          "[Added Lines]",
          "2835:             if (this.eqRow(item, row) || (isForce || (!checkMethod || checkMethod({ row: item })))) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "99add3c0d2d606ccb0ab14684113fc23f424ee4e",
      "candidate_info": {
        "commit_hash": "99add3c0d2d606ccb0ab14684113fc23f424ee4e",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/99add3c0d2d606ccb0ab14684113fc23f424ee4e",
        "files": [
          "examples/main.ts",
          "examples/views/table/TableTest1.vue",
          "package.json",
          "packages/table/src/header.ts",
          "packages/table/src/table.ts",
          "packages/table/src/util.ts",
          "packages/ui/index.ts",
          "styles/components/table.scss"
        ],
        "message": "releases 3.11.16",
        "before_after_code_files": [
          "examples/main.ts||examples/main.ts",
          "examples/views/table/TableTest1.vue||examples/views/table/TableTest1.vue",
          "packages/table/src/header.ts||packages/table/src/header.ts",
          "packages/table/src/table.ts||packages/table/src/table.ts",
          "packages/table/src/util.ts||packages/table/src/util.ts",
          "packages/ui/index.ts||packages/ui/index.ts",
          "styles/components/table.scss||styles/components/table.scss"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/main.ts||examples/main.ts": [
          "File: examples/main.ts -> examples/main.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import router from './router'",
          "4: import i18n from './i18n'",
          "11: import VxeTable from '../packages'",
          "12: import '../styles/all.scss'",
          "14: import './style/index.scss'",
          "20: Vue.use(VxeTable)",
          "22: new Vue({",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: import VxeUI from 'vxe-pc-ui'",
          "7: import 'vxe-pc-ui/lib/style.css'",
          "9: import enUS from 'vxe-pc-ui/packages/language/en-US'",
          "16: VxeUI.setI18n('en-US', enUS)",
          "18: Vue.use(VxeUI)",
          "",
          "---------------"
        ],
        "examples/views/table/TableTest1.vue||examples/views/table/TableTest1.vue": [
          "File: examples/views/table/TableTest1.vue -> examples/views/table/TableTest1.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <template>",
          "29:   </div>",
          "30: </template>",
          "32: <script lang=\"ts\">",
          "33: import Vue from 'vue'",
          "36: export default Vue.extend({",
          "37:   data () {",
          "",
          "[Removed Lines]",
          "2:   <div style=\"height: 400px;overflow: hidden;\">",
          "3:     <vxe-table",
          "4:       border",
          "5:       stripe",
          "6:       resizable",
          "7:       highlight-hover-row",
          "8:       height=\"100%\"",
          "9:       :padding=\"false\"",
          "10:       :loading=\"demo1.loading\"",
          "11:       :checkbox-config=\"{labelField: 'id', highlight: true, range: true}\"",
          "12:       :data=\"demo1.tableData\">",
          "13:       <vxe-column type=\"seq\" width=\"60\"></vxe-column>",
          "14:       <vxe-column type=\"checkbox\" title=\"ID\" width=\"140\"></vxe-column>",
          "15:       <vxe-column field=\"role\" title=\"Role\"></vxe-column>",
          "16:       <vxe-column field=\"name\" title=\"Name\" sortable></vxe-column>",
          "17:       <vxe-column field=\"age\" title=\"Age\" :filters=\"ageOptions\" :filter-method=\"filterAgeMethod\">",
          "18:         <template #filter=\"{ $panel, column }\">",
          "19:           <vxe-input class=\"my-input\" v-for=\"(option, index) in column.filters\" :key=\"index\" v-model=\"option.data\" @input=\"$panel.changeOption($event, !!option.data, option)\" placeholder=\"\u6309\u56de\u8f66\u786e\u8ba4\u7b5b\u9009\" />",
          "20:         </template>",
          "21:       </vxe-column>",
          "22:       <vxe-column field=\"sex\" title=\"Sex\" :filters=\"demo1.sexList\" :filter-multiple=\"false\" :formatter=\"formatterSex\"></vxe-column>",
          "23:       <vxe-column field=\"address\" title=\"Address\" show-overflow></vxe-column>",
          "25:       <template #loading>",
          "26:         <div>\u52a0\u8f7d\u4e2d\u3002\u3002\u3002\u3002\u3002\u3002</div>",
          "27:       </template>",
          "28:     </vxe-table>",
          "34: import { VxeColumnPropTypes } from '../../../types'",
          "",
          "[Added Lines]",
          "2:   <div>",
          "3:     <vxe-switch v-model=\"resizableConfig.dragMode\" open-value=\"fixed\" close-value=\"auto\"></vxe-switch>",
          "4:     <div style=\"height: 400px;overflow: hidden;\">",
          "5:       <vxe-table",
          "6:         border",
          "7:         stripe",
          "8:         resizable",
          "9:         highlight-hover-row",
          "10:         height=\"100%\"",
          "11:         :padding=\"false\"",
          "12:         :loading=\"demo1.loading\"",
          "13:         :resizable-config=\"resizableConfig\"",
          "14:         :checkbox-config=\"{labelField: 'id', highlight: true, range: true}\"",
          "15:         :data=\"demo1.tableData\">",
          "16:         <vxe-column type=\"seq\" width=\"60\"></vxe-column>",
          "17:         <vxe-column type=\"checkbox\" title=\"ID\" width=\"140\"></vxe-column>",
          "18:         <vxe-column field=\"role\" title=\"Role\"></vxe-column>",
          "19:         <vxe-column field=\"name\" title=\"Name\" sortable></vxe-column>",
          "20:         <vxe-column field=\"age\" title=\"Age\" :filters=\"ageOptions\" :filter-method=\"filterAgeMethod\">",
          "21:           <template #filter=\"{ $panel, column }\">",
          "22:             <vxe-input class=\"my-input\" v-for=\"(option, index) in column.filters\" :key=\"index\" v-model=\"option.data\" @input=\"$panel.changeOption($event, !!option.data, option)\" placeholder=\"\u6309\u56de\u8f66\u786e\u8ba4\u7b5b\u9009\" />",
          "23:           </template>",
          "24:         </vxe-column>",
          "25:         <vxe-column field=\"sex\" title=\"Sex\" :filters=\"demo1.sexList\" :filter-multiple=\"false\" :formatter=\"formatterSex\"></vxe-column>",
          "26:         <vxe-column field=\"address\" title=\"Address\" show-overflow></vxe-column>",
          "28:         <template #loading>",
          "29:           <div>\u52a0\u8f7d\u4e2d\u3002\u3002\u3002\u3002\u3002\u3002</div>",
          "30:         </template>",
          "31:       </vxe-table>",
          "32:     </div>",
          "38: import { VxeColumnPropTypes, VxeTablePropTypes } from '../../../types'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "64:       ]",
          "65:     }",
          "67:     const ageOptions: VxeColumnPropTypes.Filters = [",
          "68:       { data: '' }",
          "69:     ]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71:     const resizableConfig: VxeTablePropTypes.ResizableConfig = {",
          "72:       dragMode: 'fixed'",
          "73:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "80:     return {",
          "81:       demo1,",
          "82:       ageOptions,",
          "83:       formatterSex,",
          "84:       filterAgeMethod",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "90:       resizableConfig,",
          "",
          "---------------"
        ],
        "packages/table/src/header.ts||packages/table/src/header.ts": [
          "File: packages/table/src/header.ts -> packages/table/src/header.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "269:       this.headerColumn = $xetable.isGroup ? convertHeaderColumnToRows(this.tableGroupColumn) : []",
          "270:     },",
          "271:     resizeMousedown (evnt: any, params: any) {",
          "272:       const { column } = params",
          "275:       const { target: dragBtnElem, clientX: dragClientX } = evnt",
          "276:       const cell = params.cell = dragBtnElem.parentNode",
          "277:       let dragLeft = 0",
          "278:       const tableBodyElem = tableBody.$el",
          "280:       const dragBtnWidth = dragBtnElem.clientWidth",
          "281:       const dragBtnOffsetWidth = Math.floor(dragBtnWidth / 2)",
          "282:       const minInterval = getColReMinWidth(params) - dragBtnOffsetWidth // \u5217\u4e4b\u95f4\u7684\u6700\u5c0f\u95f4\u8ddd",
          "",
          "[Removed Lines]",
          "273:       const { $parent: $xetable, $el, fixedType } = this",
          "274:       const { tableBody, leftContainer, rightContainer, resizeBar: resizeBarElem } = $xetable.$refs",
          "279:       const pos = getOffsetPos(dragBtnElem, $el)",
          "",
          "[Added Lines]",
          "272:       const $xeTable = this.$parent",
          "273:       const tableInternalData = $xeTable",
          "276:       const { $parent: $xetable, fixedType } = this",
          "277:       const { visibleColumn } = tableInternalData",
          "278:       const { tableBody, leftContainer, rightContainer } = $xetable.$refs",
          "279:       const tableEl = $xeTable.$el as HTMLDivElement",
          "280:       const resizeBarElem = $xetable.$refs.resizeBar as HTMLDivElement",
          "281:       const resizeTipElem = $xetable.$refs.refCellResizeTip as HTMLDivElement",
          "282:       const wrapperElem = this.$el as HTMLDivElement",
          "285:       const resizableOpts = $xeTable.computeResizableOpts",
          "288:       const pos = getOffsetPos(dragBtnElem, tableEl)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "325:         }",
          "326:         dragLeft = Math.max(left, dragMinLeft)",
          "328:       }",
          "330:       $xetable._isResize = true",
          "",
          "[Removed Lines]",
          "327:         resizeBarElem.style.left = `${dragLeft - scrollLeft}px`",
          "",
          "[Added Lines]",
          "336:         const resizeBarLeft = dragLeft - scrollLeft",
          "337:         resizeBarElem.style.left = `${resizeBarLeft}px`",
          "338:         if (resizableOpts.showDragTip && resizeTipElem) {",
          "339:           const tableWidth = tableEl.clientWidth",
          "340:           const wrapperRect = wrapperElem.getBoundingClientRect()",
          "341:           const resizeBarWidth = resizeBarElem.clientWidth",
          "342:           const resizeTipWidth = resizeTipElem.clientWidth",
          "343:           const resizeTipHeight = resizeTipElem.clientHeight",
          "344:           let resizeTipLeft = -resizeTipWidth",
          "345:           if (resizeBarLeft < resizeTipWidth + resizeBarWidth) {",
          "346:             resizeTipLeft = resizeTipWidth + resizeBarWidth - resizeBarLeft",
          "347:           } else if (resizeBarLeft > tableWidth) {",
          "348:             resizeTipLeft += tableWidth - resizeBarLeft",
          "349:           }",
          "350:           resizeTipElem.style.left = `${resizeTipLeft}px`",
          "351:           resizeTipElem.style.top = `${Math.min(tableEl.clientHeight - resizeTipHeight, Math.max(0, evnt.clientY - wrapperRect.y - resizeTipHeight / 2))}px`",
          "352:           resizeTipElem.textContent = `${column.renderWidth + (isRightFixed ? dragPosLeft - dragLeft : dragLeft - dragPosLeft)}px`",
          "353:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "336:         document.onmouseup = domMouseup",
          "337:         const resizeWidth = column.renderWidth + (isRightFixed ? dragPosLeft - dragLeft : dragLeft - dragPosLeft)",
          "338:         column.resizeWidth = resizeWidth",
          "339:         resizeBarElem.style.display = 'none'",
          "340:         $xetable._isResize = false",
          "341:         $xetable._lastResizeTime = Date.now()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "365:         if (resizableOpts.dragMode === 'fixed') {",
          "366:           visibleColumn.forEach((item: any) => {",
          "367:             if (item.id !== column.id) {",
          "368:               if (!item.resizeWidth) {",
          "369:                 item.resizeWidth = item.renderWidth",
          "370:               }",
          "371:             }",
          "372:           })",
          "373:         }",
          "",
          "---------------"
        ],
        "packages/table/src/table.ts||packages/table/src/table.ts": [
          "File: packages/table/src/table.ts -> packages/table/src/table.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1170:       rowOpts,",
          "1171:       checkboxOpts,",
          "1172:       loadingOpts,",
          "1173:       editRules",
          "1174:     } = $xeTable",
          "1175:     const { leftList, rightList } = columnStore",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1173:       resizableOpts,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1348:             }",
          "1349:           : {},",
          "1350:         ref: 'resizeBar'",
          "",
          "[Removed Lines]",
          "1351:       }),",
          "",
          "[Added Lines]",
          "1352:       }, resizableOpts.showDragTip",
          "1353:         ? [",
          "1354:             h('div', {",
          "1355:               ref: 'refCellResizeTip',",
          "1356:               class: 'vxe-table--resizable-number-tip'",
          "1357:             }, '23432px')",
          "1358:           ]",
          "1359:         : []),",
          "",
          "---------------"
        ],
        "packages/table/src/util.ts||packages/table/src/util.ts": [
          "File: packages/table/src/util.ts -> packages/table/src/util.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "116:   return 0",
          "117: }",
          "120:   if (elem) {",
          "121:     const computedStyle = getComputedStyle(elem)",
          "122:     const marginLeft = XEUtils.toNumber(computedStyle.marginLeft)",
          "",
          "[Removed Lines]",
          "119: function getElemenMarginWidth (elem: any) {",
          "",
          "[Added Lines]",
          "119: function getElementMarginWidth (elem: any) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "215:   let mWidth = minTitleWidth + paddingLeftRight",
          "217:   if (hasEllipsis) {",
          "226:   }",
          "228:   if (colMinWidth) {",
          "",
          "[Removed Lines]",
          "218:     const checkboxIconWidth = getPaddingLeftRightSize(queryCellElement(cell, '--title>.vxe-cell--checkbox'))",
          "219:     const requiredIconWidth = getElemenMarginWidth(queryCellElement(cell, '>.vxe-cell--required-icon'))",
          "220:     const editIconWidth = getElemenMarginWidth(queryCellElement(cell, '>.vxe-cell--edit-icon'))",
          "221:     const prefixIconWidth = getElemenMarginWidth(queryCellElement(cell, '>.vxe-cell-title-prefix-icon'))",
          "222:     const suffixIconWidth = getElemenMarginWidth(queryCellElement(cell, '>.vxe-cell-title-suffix-icon'))",
          "223:     const sortIconWidth = getElemenMarginWidth(queryCellElement(cell, '>.vxe-cell--sort'))",
          "224:     const filterIconWidth = getElemenMarginWidth(queryCellElement(cell, '>.vxe-cell--filter'))",
          "225:     mWidth += checkboxIconWidth + requiredIconWidth + editIconWidth + prefixIconWidth + suffixIconWidth + filterIconWidth + sortIconWidth",
          "",
          "[Added Lines]",
          "218:     const dragIconWidth = getPaddingLeftRightSize(queryCellElement(cell, '>.vxe-cell--drag-handle'))",
          "219:     const checkboxIconWidth = getPaddingLeftRightSize(queryCellElement(cell, '>.vxe-cell--checkbox'))",
          "220:     const requiredIconWidth = getElementMarginWidth(queryCellElement(cell, '>.vxe-cell--required-icon'))",
          "221:     const editIconWidth = getElementMarginWidth(queryCellElement(cell, '>.vxe-cell--edit-icon'))",
          "222:     const prefixIconWidth = getElementMarginWidth(queryCellElement(cell, '>.vxe-cell-title-prefix-icon'))",
          "223:     const suffixIconWidth = getElementMarginWidth(queryCellElement(cell, '>.vxe-cell-title-suffix-icon'))",
          "224:     const sortIconWidth = getElementMarginWidth(queryCellElement(cell, '>.vxe-cell--sort'))",
          "225:     const filterIconWidth = getElementMarginWidth(queryCellElement(cell, '>.vxe-cell--filter'))",
          "226:     mWidth += dragIconWidth + checkboxIconWidth + requiredIconWidth + editIconWidth + prefixIconWidth + suffixIconWidth + filterIconWidth + sortIconWidth",
          "",
          "---------------"
        ],
        "packages/ui/index.ts||packages/ui/index.ts": [
          "File: packages/ui/index.ts -> packages/ui/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:     resizeConfig: {",
          "41:     },",
          "42:     radioConfig: {",
          "44:       strict: true",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42:     resizableConfig: {",
          "43:       dragMode: 'auto',",
          "44:       showDragTip: true",
          "45:     },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "62:       autoPos: true,",
          "63:       message: 'inline',",
          "64:       msgMode: 'single',",
          "66:     },",
          "67:     columnConfig: {",
          "68:       maxFixedSize: 4",
          "",
          "[Removed Lines]",
          "65:       theme: 'normal'",
          "",
          "[Added Lines]",
          "69:       theme: 'beautify'",
          "",
          "---------------"
        ],
        "styles/components/table.scss||styles/components/table.scss": [
          "File: styles/components/table.scss -> styles/components/table.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "1112:       height: 100%;",
          "1113:       background-color: var(--vxe-ui-table-resizable-drag-line-color);",
          "1114:     }",
          "1115:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1115:     .vxe-table--resizable-number-tip {",
          "1116:       position: absolute;",
          "1117:       left: 0;",
          "1118:       top: 1em;",
          "1119:       padding: 0.25em 0.25em;",
          "1120:       font-size: 12px;",
          "1121:       border-radius: var(--vxe-ui-border-radius);",
          "1122:       color: #ffffff;",
          "1123:       background-color: var(--vxe-ui-table-resizable-drag-line-color);",
          "1124:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a1006b6a3d8de30aa805b7ad1d5f06d728106755",
      "candidate_info": {
        "commit_hash": "a1006b6a3d8de30aa805b7ad1d5f06d728106755",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/a1006b6a3d8de30aa805b7ad1d5f06d728106755",
        "files": [
          "index.ts",
          "package.json"
        ],
        "message": "fix",
        "before_after_code_files": [
          "index.ts||index.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "index.ts||index.ts": [
          "File: index.ts -> index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import * as VxeTableExport from './packages/components'",
          "2: import './styles/all.scss'",
          "4: export * from './packages/components'",
          "5: export default VxeTableExport",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: if (typeof window !== 'undefined' && window.Vue) {",
          "5:   window.Vue.use(VxeTableExport)",
          "6: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}