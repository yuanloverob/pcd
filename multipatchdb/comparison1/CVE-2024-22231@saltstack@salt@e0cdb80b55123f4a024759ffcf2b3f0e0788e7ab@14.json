{
  "cve_id": "CVE-2024-22231",
  "cve_desc": "Syndic cache directory creation is vulnerable to a directory traversal attack in salt project which can lead\u00a0a malicious attacker to create an arbitrary directory on a Salt master.",
  "repo": "saltstack/salt",
  "patch_hash": "e0cdb80b55123f4a024759ffcf2b3f0e0788e7ab",
  "patch_info": {
    "commit_hash": "e0cdb80b55123f4a024759ffcf2b3f0e0788e7ab",
    "repo": "saltstack/salt",
    "commit_url": "https://github.com/saltstack/salt/commit/e0cdb80b55123f4a024759ffcf2b3f0e0788e7ab",
    "files": [
      "salt/fileserver/__init__.py",
      "salt/fileserver/roots.py",
      "salt/master.py",
      "tests/pytests/unit/fileserver/test_roots.py",
      "tests/pytests/unit/test_fileserver.py",
      "tests/pytests/unit/test_master.py",
      "tests/unit/test_fileserver.py"
    ],
    "message": "CVE fix",
    "before_after_code_files": [
      "salt/fileserver/__init__.py||salt/fileserver/__init__.py",
      "salt/fileserver/roots.py||salt/fileserver/roots.py",
      "salt/master.py||salt/master.py",
      "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py",
      "tests/pytests/unit/test_fileserver.py||tests/pytests/unit/test_fileserver.py",
      "tests/pytests/unit/test_master.py||tests/pytests/unit/test_master.py",
      "tests/unit/test_fileserver.py||tests/unit/test_fileserver.py"
    ]
  },
  "patch_diff": {
    "salt/fileserver/__init__.py||salt/fileserver/__init__.py": [
      "File: salt/fileserver/__init__.py -> salt/fileserver/__init__.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "568:         saltenv = salt.utils.stringutils.to_unicode(saltenv)",
      "569:         back = self.backends(back)",
      "570:         kwargs = {}",
      "576:         if salt.utils.url.is_escaped(path):",
      "577:             # don't attempt to find URL query arguments in the path",
      "578:             path = salt.utils.url.unescape(path)",
      "",
      "[Removed Lines]",
      "571:         fnd = {\"path\": \"\", \"rel\": \"\"}",
      "572:         if os.path.isabs(path):",
      "573:             return fnd",
      "574:         if \"../\" in path:",
      "575:             return fnd",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "588:                     args = comp.split(\"=\", 1)",
      "589:                     kwargs[args[0]] = args[1]",
      "591:         if \"env\" in kwargs:",
      "592:             # \"env\" is not supported; Use \"saltenv\".",
      "593:             kwargs.pop(\"env\")",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "586:         fnd = {\"path\": \"\", \"rel\": \"\"}",
      "587:         if os.path.isabs(path) or \"../\" in path:",
      "588:             return fnd",
      "",
      "---------------"
    ],
    "salt/fileserver/roots.py||salt/fileserver/roots.py": [
      "File: salt/fileserver/roots.py -> salt/fileserver/roots.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: import salt.utils.path",
      "28: import salt.utils.platform",
      "29: import salt.utils.stringutils",
      "30: import salt.utils.versions",
      "32: log = logging.getLogger(__name__)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "30: import salt.utils.verify",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "98:         if saltenv == \"__env__\":",
      "99:             root = root.replace(\"__env__\", actual_saltenv)",
      "100:         full = os.path.join(root, path)",
      "101:         if os.path.isfile(full) and not salt.fileserver.is_file_ignored(__opts__, full):",
      "102:             fnd[\"path\"] = full",
      "103:             fnd[\"rel\"] = path",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "103:         # Refuse to serve file that is not under the root.",
      "104:         if not salt.utils.verify.clean_path(root, full, subdir=True):",
      "105:             continue",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "128:     ret[\"dest\"] = fnd[\"rel\"]",
      "129:     gzip = load.get(\"gzip\", None)",
      "130:     fpath = os.path.normpath(fnd[\"path\"])",
      "131:     with salt.utils.files.fopen(fpath, \"rb\") as fp_:",
      "132:         fp_.seek(load[\"loc\"])",
      "133:         data = fp_.read(__opts__[\"file_buffer_size\"])",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "138:     actual_saltenv = saltenv = load[\"saltenv\"]",
      "139:     if saltenv not in __opts__[\"file_roots\"]:",
      "140:         if \"__env__\" in __opts__[\"file_roots\"]:",
      "141:             log.debug(",
      "142:                 \"salt environment '%s' maps to __env__ file_roots directory\", saltenv",
      "143:             )",
      "144:             saltenv = \"__env__\"",
      "145:         else:",
      "146:             return fnd",
      "147:     file_in_root = False",
      "148:     for root in __opts__[\"file_roots\"][saltenv]:",
      "149:         if saltenv == \"__env__\":",
      "150:             root = root.replace(\"__env__\", actual_saltenv)",
      "151:         # Refuse to serve file that is not under the root.",
      "152:         if salt.utils.verify.clean_path(root, fpath, subdir=True):",
      "153:             file_in_root = True",
      "154:     if not file_in_root:",
      "155:         return ret",
      "",
      "---------------"
    ],
    "salt/master.py||salt/master.py": [
      "File: salt/master.py -> salt/master.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "1036:         \"\"\"",
      "1037:         key = payload[\"enc\"]",
      "1038:         load = payload[\"load\"]",
      "1040:         raise salt.ext.tornado.gen.Return(ret)",
      "1042:     def _post_stats(self, start, cmd):",
      "",
      "[Removed Lines]",
      "1039:         ret = {\"aes\": self._handle_aes, \"clear\": self._handle_clear}[key](load)",
      "",
      "[Added Lines]",
      "1039:         if key == \"aes\":",
      "1040:             ret = self.handle_aes(load)",
      "1041:         else:",
      "1042:             ret = self.handle_clear(load)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1738:                 self.mminion.returners[fstr](load[\"jid\"], load[\"load\"])",
      "1740:             # Register the syndic",
      "1741:             syndic_cache_path = os.path.join(",
      "1742:                 self.opts[\"cachedir\"], \"syndics\", load[\"id\"]",
      "1743:             )",
      "1745:                 path_name = os.path.split(syndic_cache_path)[0]",
      "1746:                 if not os.path.exists(path_name):",
      "1747:                     os.makedirs(path_name)",
      "",
      "[Removed Lines]",
      "1744:             if not os.path.exists(syndic_cache_path):",
      "",
      "[Added Lines]",
      "1745:             # We are creating a path using user suplied input. Use the",
      "1746:             # clean_path to prevent a directory traversal.",
      "1747:             root = os.path.join(self.opts[\"cachedir\"], \"syndics\")",
      "1751:             if salt.utils.verify.clean_path(",
      "1752:                 root, syndic_cache_path",
      "1753:             ) and not os.path.exists(syndic_cache_path):",
      "",
      "---------------"
    ],
    "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py": [
      "File: tests/pytests/unit/fileserver/test_roots.py -> tests/pytests/unit/fileserver/test_roots.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "53:     return dirname",
      "56: @pytest.fixture",
      "57: def configure_loader_modules(tmp_state_tree, temp_salt_master):",
      "58:     opts = temp_salt_master.config.copy()",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "56: @pytest.fixture(autouse=True)",
      "57: def testfilepath(tmp_state_tree, testfile):",
      "58:     return tmp_state_tree / testfile.name",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "75:     assert full_path_to_file == ret[\"path\"]",
      "79:     with patch.dict(roots.__opts__, {\"file_buffer_size\": 262144}):",
      "80:         load = {",
      "81:             \"saltenv\": \"base\",",
      "83:             \"loc\": 0,",
      "84:         }",
      "86:         ret = roots.serve_file(load, fnd)",
      "89:             data = fp_.read()",
      "91:         assert ret == {\"data\": data, \"dest\": \"testfile\"}",
      "",
      "[Removed Lines]",
      "78: def test_serve_file(testfile):",
      "82:             \"path\": str(testfile),",
      "85:         fnd = {\"path\": str(testfile), \"rel\": \"testfile\"}",
      "88:         with salt.utils.files.fopen(str(testfile), \"rb\") as fp_:",
      "",
      "[Added Lines]",
      "83: def test_serve_file(testfilepath):",
      "87:             \"path\": str(testfilepath),",
      "90:         fnd = {\"path\": str(testfilepath), \"rel\": \"testfile\"}",
      "93:         with salt.utils.files.fopen(str(testfilepath), \"rb\") as fp_:",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "236:     # between Python releases.",
      "237:     lines_written = sorted(mtime_map_mock.write_calls())",
      "238:     expected = sorted(",
      "240:         for key, val in new_mtime_map.items()",
      "241:     )",
      "242:     assert lines_written == expected, lines_written",
      "",
      "[Removed Lines]",
      "239:         salt.utils.stringutils.to_bytes(\"{key}:{val}\\n\".format(key=key, val=val))",
      "",
      "[Added Lines]",
      "244:         salt.utils.stringutils.to_bytes(f\"{key}:{val}\\n\")",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "277:         },",
      "278:         \"backend\": \"roots\",",
      "279:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "287: def test_find_file_not_in_root(tmp_state_tree):",
      "288:     \"\"\"",
      "289:     Fileroots should never 'find' a file that is outside of it's root.",
      "290:     \"\"\"",
      "291:     badfile = pathlib.Path(tmp_state_tree).parent / \"bar\"",
      "292:     badfile.write_text(\"Bad file\")",
      "293:     badpath = f\"../bar\"",
      "294:     ret = roots.find_file(badpath)",
      "295:     assert ret == {\"path\": \"\", \"rel\": \"\"}",
      "296:     badpath = f\"{tmp_state_tree / '..' / 'bar'}\"",
      "297:     ret = roots.find_file(badpath)",
      "298:     assert ret == {\"path\": \"\", \"rel\": \"\"}",
      "301: def test_serve_file_not_in_root(tmp_state_tree):",
      "302:     \"\"\"",
      "303:     Fileroots should never 'serve' a file that is outside of it's root.",
      "304:     \"\"\"",
      "305:     badfile = pathlib.Path(tmp_state_tree).parent / \"bar\"",
      "306:     badfile.write_text(\"Bad file\")",
      "307:     badpath = f\"../bar\"",
      "308:     load = {\"path\": \"salt://|..\\\\bar\", \"saltenv\": \"base\", \"loc\": 0}",
      "309:     fnd = {",
      "310:         \"path\": f\"{tmp_state_tree / '..' / 'bar'}\",",
      "311:         \"rel\": f\"{pathlib.Path('..') / 'bar'}\",",
      "312:     }",
      "313:     ret = roots.serve_file(load, fnd)",
      "314:     assert ret == {\"data\": \"\", \"dest\": \"../bar\"}",
      "",
      "---------------"
    ],
    "tests/pytests/unit/test_fileserver.py||tests/pytests/unit/test_fileserver.py": [
      "File: tests/pytests/unit/test_fileserver.py -> tests/pytests/unit/test_fileserver.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: \"\"\"",
      "2: \"\"\"",
      "5: import datetime",
      "6: import os",
      "7: import time",
      "9: import salt.fileserver",
      "10: import salt.utils.files",
      "13: def test_diff_with_diffent_keys():",
      "14:     \"\"\"",
      "15:     Test that different maps are indeed reported different",
      "16:     \"\"\"",
      "17:     map1 = {\"file1\": 1234}",
      "18:     map2 = {\"file2\": 1234}",
      "19:     assert salt.fileserver.diff_mtime_map(map1, map2) is True",
      "22: def test_diff_with_diffent_values():",
      "23:     \"\"\"",
      "24:     Test that different maps are indeed reported different",
      "25:     \"\"\"",
      "26:     map1 = {\"file1\": 12345}",
      "27:     map2 = {\"file1\": 1234}",
      "28:     assert salt.fileserver.diff_mtime_map(map1, map2) is True",
      "31: def test_whitelist():",
      "32:     opts = {",
      "33:         \"fileserver_backend\": [\"roots\", \"git\", \"s3fs\", \"hgfs\", \"svn\"],",
      "34:         \"extension_modules\": \"\",",
      "35:     }",
      "36:     fs = salt.fileserver.Fileserver(opts)",
      "37:     assert sorted(fs.servers.whitelist) == sorted(",
      "38:         [\"git\", \"gitfs\", \"hg\", \"hgfs\", \"svn\", \"svnfs\", \"roots\", \"s3fs\"]",
      "39:     ), fs.servers.whitelist",
      "42: def test_future_file_list_cache_file_ignored(tmp_path):",
      "43:     opts = {",
      "44:         \"fileserver_backend\": [\"roots\"],",
      "45:         \"cachedir\": tmp_path,",
      "46:         \"extension_modules\": \"\",",
      "47:     }",
      "49:     back_cachedir = os.path.join(tmp_path, \"file_lists/roots\")",
      "50:     os.makedirs(os.path.join(back_cachedir))",
      "52:     # Touch a couple files",
      "53:     for filename in (\"base.p\", \"foo.txt\"):",
      "54:         with salt.utils.files.fopen(os.path.join(back_cachedir, filename), \"wb\") as _f:",
      "55:             if filename == \"base.p\":",
      "56:                 _f.write(b\"\\x80\")",
      "58:     # Set modification time to file list cache file to 1 year in the future",
      "59:     now = datetime.datetime.utcnow()",
      "60:     future = now + datetime.timedelta(days=365)",
      "61:     mod_time = time.mktime(future.timetuple())",
      "62:     os.utime(os.path.join(back_cachedir, \"base.p\"), (mod_time, mod_time))",
      "64:     list_cache = os.path.join(back_cachedir, \"base.p\")",
      "65:     w_lock = os.path.join(back_cachedir, \".base.w\")",
      "66:     ret = salt.fileserver.check_file_list_cache(opts, \"files\", list_cache, w_lock)",
      "67:     assert (",
      "68:         ret[1] is True",
      "69:     ), \"Cache file list cache file is not refreshed when future modification time\"",
      "72: def test_file_server_url_escape(tmp_path):",
      "73:     (tmp_path / \"srv\").mkdir()",
      "74:     (tmp_path / \"srv\" / \"salt\").mkdir()",
      "75:     (tmp_path / \"foo\").mkdir()",
      "76:     (tmp_path / \"foo\" / \"bar\").write_text(\"Bad file\")",
      "77:     fileroot = str(tmp_path / \"srv\" / \"salt\")",
      "78:     badfile = str(tmp_path / \"foo\" / \"bar\")",
      "79:     opts = {",
      "80:         \"fileserver_backend\": [\"roots\"],",
      "81:         \"extension_modules\": \"\",",
      "82:         \"optimization_order\": [",
      "83:             0,",
      "84:         ],",
      "85:         \"file_roots\": {",
      "86:             \"base\": [fileroot],",
      "87:         },",
      "88:         \"file_ignore_regex\": \"\",",
      "89:         \"file_ignore_glob\": \"\",",
      "90:     }",
      "91:     fs = salt.fileserver.Fileserver(opts)",
      "92:     ret = fs.find_file(",
      "93:         \"salt://|..\\\\..\\\\..\\\\foo/bar\",",
      "94:         \"base\",",
      "95:     )",
      "96:     assert ret == {\"path\": \"\", \"rel\": \"\"}",
      "99: def test_file_server_serve_url_escape(tmp_path):",
      "100:     (tmp_path / \"srv\").mkdir()",
      "101:     (tmp_path / \"srv\" / \"salt\").mkdir()",
      "102:     (tmp_path / \"foo\").mkdir()",
      "103:     (tmp_path / \"foo\" / \"bar\").write_text(\"Bad file\")",
      "104:     fileroot = str(tmp_path / \"srv\" / \"salt\")",
      "105:     badfile = str(tmp_path / \"foo\" / \"bar\")",
      "106:     opts = {",
      "107:         \"fileserver_backend\": [\"roots\"],",
      "108:         \"extension_modules\": \"\",",
      "109:         \"optimization_order\": [",
      "110:             0,",
      "111:         ],",
      "112:         \"file_roots\": {",
      "113:             \"base\": [fileroot],",
      "114:         },",
      "115:         \"file_ignore_regex\": \"\",",
      "116:         \"file_ignore_glob\": \"\",",
      "117:         \"file_buffer_size\": 2048,",
      "118:     }",
      "119:     fs = salt.fileserver.Fileserver(opts)",
      "120:     ret = fs.serve_file(",
      "121:         {",
      "122:             \"path\": \"salt://|..\\\\..\\\\..\\\\foo/bar\",",
      "123:             \"saltenv\": \"base\",",
      "124:             \"loc\": 0,",
      "125:         }",
      "126:     )",
      "127:     assert ret == {\"data\": \"\", \"dest\": \"\"}",
      "",
      "---------------"
    ],
    "tests/pytests/unit/test_master.py||tests/pytests/unit/test_master.py": [
      "File: tests/pytests/unit/test_master.py -> tests/pytests/unit/test_master.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: import time",
      "3: import pytest",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: import pathlib",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "160:     with patch.object(encrypted_requests, \"_return\", autospec=True) as fake_return:",
      "161:         encrypted_requests._syndic_return(payload)",
      "162:         fake_return.assert_called_with(expected_return)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "166: def test_syndic_return_cache_dir_creation(encrypted_requests):",
      "167:     \"\"\"master's cachedir for a syndic will be created by AESFuncs._syndic_return method\"\"\"",
      "168:     cachedir = pathlib.Path(encrypted_requests.opts[\"cachedir\"])",
      "169:     assert not (cachedir / \"syndics\").exists()",
      "170:     encrypted_requests._syndic_return(",
      "171:         {",
      "172:             \"id\": \"mamajama\",",
      "173:             \"jid\": \"\",",
      "174:             \"return\": {},",
      "175:         }",
      "176:     )",
      "177:     assert (cachedir / \"syndics\").exists()",
      "178:     assert (cachedir / \"syndics\" / \"mamajama\").exists()",
      "181: def test_syndic_return_cache_dir_creation_traversal(encrypted_requests):",
      "182:     \"\"\"",
      "183:     master's  AESFuncs._syndic_return method cachdir creation is not vulnerable to a directory traversal",
      "184:     \"\"\"",
      "185:     cachedir = pathlib.Path(encrypted_requests.opts[\"cachedir\"])",
      "186:     assert not (cachedir / \"syndics\").exists()",
      "187:     encrypted_requests._syndic_return(",
      "188:         {",
      "189:             \"id\": \"../mamajama\",",
      "190:             \"jid\": \"\",",
      "191:             \"return\": {},",
      "192:         }",
      "193:     )",
      "194:     assert not (cachedir / \"syndics\").exists()",
      "195:     assert not (cachedir / \"mamajama\").exists()",
      "",
      "---------------"
    ],
    "tests/unit/test_fileserver.py||tests/unit/test_fileserver.py": [
      "File: tests/unit/test_fileserver.py -> tests/unit/test_fileserver.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "31d7bafc5b2c80348082425c4fdc62f282433686",
      "candidate_info": {
        "commit_hash": "31d7bafc5b2c80348082425c4fdc62f282433686",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/31d7bafc5b2c80348082425c4fdc62f282433686",
        "files": [
          "tools/pkg/repo/create.py"
        ],
        "message": "Append the `.0` for Photon OS, after checking supported versions\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tools/pkg/repo/create.py||tools/pkg/repo/create.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/pkg/repo/create.py||tools/pkg/repo/create.py": [
          "File: tools/pkg/repo/create.py -> tools/pkg/repo/create.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "381:         assert repo_path is not None",
          "382:         assert key_id is not None",
          "386:     display_name = f\"{distro.capitalize()} {distro_version}\"",
          "387:     if distro_version not in _rpm_distro_info[distro]:",
          "388:         ctx.error(f\"Support for {display_name} is missing.\")",
          "389:         ctx.exit(1)",
          "391:     ctx.info(\"Creating repository directory structure ...\")",
          "392:     create_repo_path = create_top_level_repo_path(",
          "393:         ctx,",
          "",
          "[Removed Lines]",
          "384:     if distro == \"photon\":",
          "385:         distro_version = f\"{distro_version}.0\"",
          "",
          "[Added Lines]",
          "389:     if distro == \"photon\":",
          "390:         distro_version = f\"{distro_version}.0\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c149541b250f2e90158a3408d07774613948872b",
      "candidate_info": {
        "commit_hash": "c149541b250f2e90158a3408d07774613948872b",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/c149541b250f2e90158a3408d07774613948872b",
        "files": [
          "noxfile.py"
        ],
        "message": "There are some common pytest CLI args that should always be passed\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "noxfile.py||noxfile.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "noxfile.py||noxfile.py": [
          "File: noxfile.py -> noxfile.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1841:             )",
          "1842:         )",
          "1844:     chunks = {",
          "1845:         \"install\": [",
          "1846:             \"tests/pytests/pkg/\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1844:     common_pytest_args = [",
          "1845:         \"--color=yes\",",
          "1846:         \"--sys-stats\",",
          "1847:         \"--run-destructive\",",
          "1848:         f\"--output-columns={os.environ.get('OUTPUT_COLUMNS') or 120}\",",
          "1849:         \"--pkg-system-service\",",
          "1850:     ]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1894:     if chunk in (\"upgrade-classic\", \"downgrade-classic\"):",
          "1895:         cmd_args.append(\"--classic\")",
          "1899:     pytest_args = (",
          "1901:         + [",
          "1902:             f\"--junitxml=artifacts/xml-unittests-output/test-results-{chunk}.xml\",",
          "1903:             f\"--log-file=artifacts/logs/runtests-{chunk}.log\",",
          "",
          "[Removed Lines]",
          "1897:     cmd_args.append(\"--pkg-system-service\")",
          "1900:         cmd_args[:]",
          "",
          "[Added Lines]",
          "1906:         common_pytest_args[:]",
          "1907:         + cmd_args[:]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1918:         PRINT_SYSTEM_INFO = False",
          "1920:         pytest_args = (",
          "1922:             + [",
          "1923:                 f\"--junitxml=artifacts/xml-unittests-output/test-results-{chunk}-rerun.xml\",",
          "1924:                 f\"--log-file=artifacts/logs/runtests-{chunk}-rerun.log\",",
          "",
          "[Removed Lines]",
          "1921:             cmd_args[:]",
          "",
          "[Added Lines]",
          "1928:             common_pytest_args[:]",
          "1929:             + cmd_args[:]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1937:     if chunk not in (\"install\", \"download-pkgs\"):",
          "1938:         cmd_args = chunks[\"install\"]",
          "1939:         pytest_args = (",
          "1941:             + [",
          "1942:                 \"--no-install\",",
          "1943:                 f\"--junitxml=artifacts/xml-unittests-output/test-results-install.xml\",",
          "",
          "[Removed Lines]",
          "1940:             cmd_args[:]",
          "",
          "[Added Lines]",
          "1948:             common_pytest_args[:]",
          "1949:             + cmd_args[:]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1954:         except CommandFailed:",
          "1955:             cmd_args = chunks[\"install\"]",
          "1956:             pytest_args = (",
          "1958:                 + [",
          "1959:                     \"--no-install\",",
          "1960:                     f\"--junitxml=artifacts/xml-unittests-output/test-results-install-rerun.xml\",",
          "",
          "[Removed Lines]",
          "1957:                 cmd_args[:]",
          "",
          "[Added Lines]",
          "1966:                 common_pytest_args[:]",
          "1967:                 + cmd_args[:]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a50f99a159bac9e57efb025c0d254a2df73d4c14",
      "candidate_info": {
        "commit_hash": "a50f99a159bac9e57efb025c0d254a2df73d4c14",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/a50f99a159bac9e57efb025c0d254a2df73d4c14",
        "files": [
          ".github/workflows/ci.yml",
          ".github/workflows/lint-action.yml",
          ".github/workflows/nightly.yml",
          ".github/workflows/pre-commit-action.yml",
          ".github/workflows/release-tag.yml",
          ".github/workflows/release-update-winrepo.yml",
          ".github/workflows/release.yml",
          ".github/workflows/scheduled.yml",
          ".github/workflows/staging.yml",
          ".github/workflows/templates/ci.yml.jinja",
          ".github/workflows/templates/layout.yml.jinja",
          ".github/workflows/templates/nightly.yml.jinja",
          ".github/workflows/templates/release.yml.jinja",
          ".github/workflows/templates/staging.yml.jinja",
          ".github/workflows/templates/trigger-branch-workflows.yml.jinja",
          ".github/workflows/templates/workflow-requirements-check.yml.jinja",
          ".github/workflows/test-action-macos.yml",
          ".github/workflows/test-packages-action-macos.yml",
          ".github/workflows/triage.yml"
        ],
        "message": "Prefer GitHub hosted actions runners\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          ".github/workflows/templates/ci.yml.jinja||.githuworkflows/templates/ci.yml.jinja",
          ".github/workflows/templates/layout.yml.jinja||.githuworkflows/templates/layout.yml.jinja",
          ".github/workflows/templates/nightly.yml.jinja||.githuworkflows/templates/nightly.yml.jinja",
          ".github/workflows/templates/release.yml.jinja||.githuworkflows/templates/release.yml.jinja",
          ".github/workflows/templates/staging.yml.jinja||.githuworkflows/templates/staging.yml.jinja",
          ".github/workflows/templates/trigger-branch-workflows.yml.jinja||.githuworkflows/templates/trigger-branch-workflows.yml.jinja",
          ".github/workflows/templates/workflow-requirements-check.yml.jinja||.githuworkflows/templates/workflow-requirements-check.yml.jinja"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".github/workflows/templates/ci.yml.jinja||.githuworkflows/templates/ci.yml.jinja": [
          "File: .github/workflows/templates/ci.yml.jinja -> .githuworkflows/templates/ci.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:       - x86_64",
          "53:     <%- else %>",
          "54:     if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['<{ job_name }>'] && fromJSON(needs.prepare-workflow.outputs.runners)['github-hosted'] }}",
          "56:     <%- endif %>",
          "57:     needs:",
          "58:       - prepare-workflow",
          "",
          "[Removed Lines]",
          "55:     runs-on: ${{ github.event.repository.private && fromJSON('[\"self-hosted\", \"linux\", \"medium\", \"x86_64\"]') || 'ubuntu-latest' }}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "205:     needs:",
          "206:       - prepare-workflow",
          "207:       - prepare-release",
          "209:     steps:",
          "210:       - uses: actions/checkout@v4",
          "",
          "[Removed Lines]",
          "208:     runs-on: ${{ github.event.repository.private && fromJSON('[\"self-hosted\", \"linux\", \"medium\", \"x86_64\"]') || 'ubuntu-latest' }}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "309:     <%- do conclusion_needs.append(\"combine-all-code-coverage\") %>",
          "310:     name: Combine Code Coverage",
          "311:     if: ${{ fromJSON(needs.prepare-workflow.outputs.testrun)['skip_code_coverage'] == false }}",
          "313:     needs:",
          "314:       - prepare-workflow",
          "315:       <%- for need in test_salt_needs.iter(consume=False) %>",
          "",
          "[Removed Lines]",
          "312:     runs-on: ${{ github.event.repository.private && fromJSON('[\"self-hosted\", \"linux\", \"x86_64\"]') || 'ubuntu-latest' }}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "319:       - uses: actions/checkout@v4",
          "321:       - name: Set up Python 3.10",
          "323:         uses: actions/setup-python@v4",
          "324:         with:",
          "325:           python-version: \"3.10\"",
          "",
          "[Removed Lines]",
          "322:         if: ${{ github.event.repository.private == false }}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/layout.yml.jinja||.githuworkflows/templates/layout.yml.jinja": [
          "File: .github/workflows/templates/layout.yml.jinja -> .githuworkflows/templates/layout.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:   prepare-workflow:",
          "77:     name: Prepare Workflow Run",
          "79:     <%- if prepare_workflow_if_check %>",
          "80:     if: <{ prepare_workflow_if_check }>",
          "81:     <%- endif %>",
          "",
          "[Removed Lines]",
          "78:     runs-on: ${{ github.event.repository.private && fromJSON('[\"self-hosted\", \"linux\", \"x86_64\"]') || 'ubuntu-latest' }}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "337:     # on a pull request instead of requiring all",
          "338:     name: Set the ${{ github.workflow }} Pipeline Exit Status",
          "339:     if: always()",
          "341:     <%- if workflow_slug == \"nightly\" %>",
          "342:     environment: <{ workflow_slug }>",
          "343:     <%- endif %>",
          "",
          "[Removed Lines]",
          "340:     runs-on: ${{ github.event.repository.private && fromJSON('[\"self-hosted\", \"linux\", \"x86_64\"]') || 'ubuntu-latest' }}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/nightly.yml.jinja||.githuworkflows/templates/nightly.yml.jinja": [
          "File: .github/workflows/templates/nightly.yml.jinja -> .githuworkflows/templates/nightly.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:   <%- do conclusion_needs.append('notify-slack') %>",
          "59:   notify-slack:",
          "60:     name: Notify Slack",
          "62:     environment: <{ gh_environment }>",
          "63:     needs:",
          "64:       <%- for need in prepare_workflow_needs.iter(consume=False) %>",
          "",
          "[Removed Lines]",
          "61:     runs-on: ${{ github.event.repository.private && fromJSON('[\"self-hosted\", \"linux\", \"x86_64\"]') || 'ubuntu-latest' }}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/release.yml.jinja||.githuworkflows/templates/release.yml.jinja": [
          "File: .github/workflows/templates/release.yml.jinja -> .githuworkflows/templates/release.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:   <{ job_name }>:",
          "53:   <%- do prepare_workflow_needs.append(job_name) %>",
          "54:     name: Check Requirements",
          "56:     environment: <{ gh_environment }>-check",
          "57:     steps:",
          "58:       - name: Check For Admin Permission",
          "",
          "[Removed Lines]",
          "55:     runs-on: ${{ github.event.repository.private && fromJSON('[\"self-hosted\", \"linux\", \"x86_64\"]') || 'ubuntu-latest' }}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/staging.yml.jinja||.githuworkflows/templates/staging.yml.jinja": [
          "File: .github/workflows/templates/staging.yml.jinja -> .githuworkflows/templates/staging.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:   <{ job_name }>:",
          "67:   <%- do prepare_workflow_needs.append(job_name) %>",
          "68:     name: Check Requirements",
          "70:     environment: <{ gh_environment }>-check",
          "71:     steps:",
          "72:       - name: Check For Admin Permission",
          "",
          "[Removed Lines]",
          "69:     runs-on: ${{ github.event.repository.private && fromJSON('[\"self-hosted\", \"linux\", \"x86_64\"]') || 'ubuntu-latest' }}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/trigger-branch-workflows.yml.jinja||.githuworkflows/templates/trigger-branch-workflows.yml.jinja": [
          "File: .github/workflows/templates/trigger-branch-workflows.yml.jinja -> .githuworkflows/templates/trigger-branch-workflows.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:   <%- do conclusion_needs.append(job_name) %>",
          "8:     name: Trigger Branch Workflows",
          "9:     if: ${{ github.event_name == 'schedule' && fromJSON(needs.workflow-requirements.outputs.requirements-met) }}",
          "11:     needs:",
          "12:       - workflow-requirements",
          "13:     steps:",
          "",
          "[Removed Lines]",
          "10:     runs-on: ${{ github.event.repository.private && fromJSON('[\"self-hosted\", \"linux\", \"x86_64\"]') || 'ubuntu-latest' }}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/workflow-requirements-check.yml.jinja||.githuworkflows/templates/workflow-requirements-check.yml.jinja": [
          "File: .github/workflows/templates/workflow-requirements-check.yml.jinja -> .githuworkflows/templates/workflow-requirements-check.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:   <{ job_name }>:",
          "5:   <%- do prepare_workflow_needs.append(job_name) %>",
          "6:     name: Check Workflow Requirements",
          "8:     outputs:",
          "9:       requirements-met: ${{ steps.check-requirements.outputs.requirements-met }}",
          "10:     steps:",
          "",
          "[Removed Lines]",
          "7:     runs-on: ${{ github.event.repository.private && fromJSON('[\"self-hosted\", \"linux\", \"x86_64\"]') || 'ubuntu-latest' }}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f5b326cf33f706ac838b4faa09fe0a6b889892e6",
      "candidate_info": {
        "commit_hash": "f5b326cf33f706ac838b4faa09fe0a6b889892e6",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/f5b326cf33f706ac838b4faa09fe0a6b889892e6",
        "files": [
          "tools/pkg/build.py",
          "tools/pkg/repo/create.py",
          "tools/release.py",
          "tools/testsuite/download.py"
        ],
        "message": "Missed change in 5ea3bf3a9dbd7e128cf8a899b6c06958cdfcbf36\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tools/pkg/build.py||tools/pkg/build.py",
          "tools/pkg/repo/create.py||tools/pkg/repo/create.py",
          "tools/release.py||tools/release.py",
          "tools/testsuite/download.py||tools/testsuite/download.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/pkg/build.py||tools/pkg/build.py": [
          "File: tools/pkg/build.py -> tools/pkg/build.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "486:         assert package_name is not None",
          "487:         assert platform is not None",
          "490:         arch = \"aarch64\"",
          "492:     shared_constants = _get_shared_constants()",
          "",
          "[Removed Lines]",
          "489:     if platform not in (\"macos\", \"darwin\") and arch == \"arm64\":",
          "",
          "[Added Lines]",
          "489:     if platform == \"darwin\":",
          "490:         platform = \"macos\"",
          "492:     if platform != \"macos\" and arch == \"arm64\":",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "625:         assert platform is not None",
          "626:         assert package_name is not None",
          "628:     shared_constants = _get_shared_constants()",
          "629:     if not relenv_version:",
          "630:         relenv_version = shared_constants[\"relenv_version\"]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "631:     if platform == \"darwin\":",
          "632:         platform = \"macos\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "706:             str(salt_archive),",
          "707:             env=env,",
          "708:         )",
          "711:             def errfn(fn, path, err):",
          "712:                 ctx.info(f\"Removing {path} failed: {err}\")",
          "",
          "[Removed Lines]",
          "709:         if platform == \"darwin\":",
          "",
          "[Added Lines]",
          "715:         if platform == \"macos\":",
          "",
          "---------------"
        ],
        "tools/pkg/repo/create.py||tools/pkg/repo/create.py": [
          "File: tools/pkg/repo/create.py -> tools/pkg/repo/create.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "904:         if distro == \"onedir\":",
          "905:             if \"-onedir-linux-\" in dpath.name.lower():",
          "906:                 release_os = \"linux\"",
          "908:                 release_os = \"macos\"",
          "909:             elif \"-onedir-windows-\" in dpath.name.lower():",
          "910:                 release_os = \"windows\"",
          "",
          "[Removed Lines]",
          "907:             elif \"-onedir-darwin-\" in dpath.name.lower():",
          "",
          "[Added Lines]",
          "907:             elif \"-onedir-macos-\" in dpath.name.lower():",
          "",
          "---------------"
        ],
        "tools/release.py||tools/release.py": [
          "File: tools/release.py -> tools/release.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "131:     Download onedir artifact from staging bucket.",
          "132:     \"\"\"",
          "133:     s3 = boto3.client(\"s3\")",
          "136:     if arch == \"arm64\":",
          "137:         arch = \"aarch64\"",
          "138:     arch = arch.lower()",
          "139:     platform = platform.lower()",
          "141:         ctx.error(",
          "142:             f\"The 'arch' value for {platform} must be one of: 'x86_64', 'aarch64', 'arm64'\"",
          "143:         )",
          "",
          "[Removed Lines]",
          "134:     if platform == \"macos\":",
          "135:         platform = \"darwin\"",
          "140:     if platform in (\"linux\", \"darwin\") and arch not in (\"x86_64\", \"aarch64\"):",
          "",
          "[Added Lines]",
          "134:     if platform == \"darwin\":",
          "135:         platform = \"macos\"",
          "140:     if platform in (\"linux\", \"macos\") and arch not in (\"x86_64\", \"aarch64\"):",
          "",
          "---------------"
        ],
        "tools/testsuite/download.py||tools/testsuite/download.py": [
          "File: tools/testsuite/download.py -> tools/testsuite/download.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:         },",
          "39:         \"platform\": {",
          "40:             \"help\": \"The onedir platform artifact to download\",",
          "42:             \"required\": True,",
          "43:         },",
          "44:         \"arch\": {",
          "",
          "[Removed Lines]",
          "41:             \"choices\": (\"linux\", \"darwin\", \"windows\"),",
          "",
          "[Added Lines]",
          "41:             \"choices\": (\"linux\", \"macos\", \"windows\"),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ce128732b98a1ed1b08679fdbbbf1f56c93d4f90",
      "candidate_info": {
        "commit_hash": "ce128732b98a1ed1b08679fdbbbf1f56c93d4f90",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/ce128732b98a1ed1b08679fdbbbf1f56c93d4f90",
        "files": [
          ".github/workflows/build-deps-ci-action.yml",
          ".github/workflows/build-deps-onedir.yml",
          ".github/workflows/build-packages.yml",
          ".github/workflows/build-salt-onedir.yml",
          ".github/workflows/ci.yml",
          ".github/workflows/nightly.yml",
          ".github/workflows/release-tag.yml",
          ".github/workflows/release-update-winrepo.yml",
          ".github/workflows/release-upload-virustotal.yml",
          ".github/workflows/release.yml",
          ".github/workflows/scheduled.yml",
          ".github/workflows/staging.yml",
          ".github/workflows/templates/build-deps-ci-action.yml.jinja",
          ".github/workflows/templates/ci.yml.jinja",
          ".github/workflows/templates/layout.yml.jinja",
          ".github/workflows/templates/release.yml.jinja",
          ".github/workflows/templates/test-package-downloads-action.yml.jinja",
          ".github/workflows/test-action-macos.yml",
          ".github/workflows/test-package-downloads-action.yml",
          ".github/workflows/test-packages-action-macos.yml",
          ".github/workflows/triage.yml"
        ],
        "message": "Bump to `actions/setup-python@v5`\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          ".github/workflows/templates/build-deps-ci-action.yml.jinja||.github/workflows/templates/build-deps-ci-action.yml.jinja",
          ".github/workflows/templates/ci.yml.jinja||.github/workflows/templates/ci.yml.jinja",
          ".github/workflows/templates/layout.yml.jinja||.github/workflows/templates/layout.yml.jinja",
          ".github/workflows/templates/release.yml.jinja||.github/workflows/templates/release.yml.jinja",
          ".github/workflows/templates/test-package-downloads-action.yml.jinja||.github/workflows/templates/test-package-downloads-action.yml.jinja"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".github/workflows/templates/build-deps-ci-action.yml.jinja||.github/workflows/templates/build-deps-ci-action.yml.jinja": [
          "File: .github/workflows/templates/build-deps-ci-action.yml.jinja -> .github/workflows/templates/build-deps-ci-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "204:       - name: Set up Python ${{ inputs.python-version }}",
          "205:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "207:         with:",
          "208:           python-version: \"${{ inputs.python-version }}\"",
          "",
          "[Removed Lines]",
          "206:         uses: actions/setup-python@v4",
          "",
          "[Added Lines]",
          "206:         uses: actions/setup-python@v5",
          "",
          "---------------"
        ],
        ".github/workflows/templates/ci.yml.jinja||.github/workflows/templates/ci.yml.jinja": [
          "File: .github/workflows/templates/ci.yml.jinja -> .github/workflows/templates/ci.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:     <%- if not prepare_actual_release %>",
          "64:       - name: Set up Python 3.10",
          "66:         with:",
          "67:           python-version: \"3.10\"",
          "",
          "[Removed Lines]",
          "65:         uses: actions/setup-python@v4",
          "",
          "[Added Lines]",
          "65:         uses: actions/setup-python@v5",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "210:       - uses: actions/checkout@v4",
          "212:       - name: Set up Python 3.10",
          "214:         with:",
          "215:           python-version: \"3.10\"",
          "",
          "[Removed Lines]",
          "213:         uses: actions/setup-python@v4",
          "",
          "[Added Lines]",
          "213:         uses: actions/setup-python@v5",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "313:       - uses: actions/checkout@v4",
          "315:       - name: Set up Python 3.10",
          "317:         with:",
          "318:           python-version: \"3.10\"",
          "",
          "[Removed Lines]",
          "316:         uses: actions/setup-python@v4",
          "",
          "[Added Lines]",
          "316:         uses: actions/setup-python@v5",
          "",
          "---------------"
        ],
        ".github/workflows/templates/layout.yml.jinja||.github/workflows/templates/layout.yml.jinja": [
          "File: .github/workflows/templates/layout.yml.jinja -> .github/workflows/templates/layout.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "180:                 - *pkg_tests_added_modified",
          "182:       - name: Set up Python 3.10",
          "184:         with:",
          "185:           python-version: \"3.10\"",
          "",
          "[Removed Lines]",
          "183:         uses: actions/setup-python@v4",
          "",
          "[Added Lines]",
          "183:         uses: actions/setup-python@v5",
          "",
          "---------------"
        ],
        ".github/workflows/templates/release.yml.jinja||.github/workflows/templates/release.yml.jinja": [
          "File: .github/workflows/templates/release.yml.jinja -> .github/workflows/templates/release.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "93:           fetch-depth: 0  # Full clone to also get the tags to get the right salt version",
          "95:       - name: Set up Python 3.10",
          "97:         with:",
          "98:           python-version: \"3.10\"",
          "",
          "[Removed Lines]",
          "96:         uses: actions/setup-python@v4",
          "",
          "[Added Lines]",
          "96:         uses: actions/setup-python@v5",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-package-downloads-action.yml.jinja||.github/workflows/templates/test-package-downloads-action.yml.jinja": [
          "File: .github/workflows/templates/test-package-downloads-action.yml.jinja -> .github/workflows/templates/test-package-downloads-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "335:           tar xvf ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-macos-${{ matrix.arch }}.tar.xz",
          "337:       - name: Set up Python ${{ inputs.python-version }}",
          "339:         with:",
          "340:           python-version: \"${{ inputs.python-version }}\"",
          "341:           update-environment: true",
          "",
          "[Removed Lines]",
          "338:         uses: actions/setup-python@v4",
          "",
          "[Added Lines]",
          "338:         uses: actions/setup-python@v5",
          "",
          "---------------"
        ]
      }
    }
  ]
}