{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "67359b5d0a3b4911b955d8fc984e7d72abf60959",
      "candidate_info": {
        "commit_hash": "67359b5d0a3b4911b955d8fc984e7d72abf60959",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/67359b5d0a3b4911b955d8fc984e7d72abf60959",
        "files": [
          "preflight/src/main/java/org/apache/pdfbox/preflight/utils/FilterHelper.java"
        ],
        "message": "PDFBOX-4892: improve javadoc, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887114 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "preflight/src/main/java/org/apache/pdfbox/preflight/utils/FilterHelper.java||preflight/src/main/java/org/apache/pdfbox/preflight/utils/FilterHelper.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "preflight/src/main/java/org/apache/pdfbox/preflight/utils/FilterHelper.java||preflight/src/main/java/org/apache/pdfbox/preflight/utils/FilterHelper.java": [
          "File: preflight/src/main/java/org/apache/pdfbox/preflight/utils/FilterHelper.java -> preflight/src/main/java/org/apache/pdfbox/preflight/utils/FilterHelper.java"
        ]
      }
    },
    {
      "candidate_hash": "679fd5ed53b87e8ff3af3cb1ddc0720b689d9664",
      "candidate_info": {
        "commit_hash": "679fd5ed53b87e8ff3af3cb1ddc0720b689d9664",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/679fd5ed53b87e8ff3af3cb1ddc0720b689d9664",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageTree.java"
        ],
        "message": "PDFBOX-5009, PDFBOX-3953: improve javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1883202 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageTree.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageTree.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageTree.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageTree.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageTree.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageTree.java"
        ]
      }
    },
    {
      "candidate_hash": "ef53b45f111c4e391faf1c331c4e81a21e24c0b8",
      "candidate_info": {
        "commit_hash": "ef53b45f111c4e391faf1c331c4e81a21e24c0b8",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/ef53b45f111c4e391faf1c331c4e81a21e24c0b8",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java",
          "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/font/PDFontTest.java"
        ],
        "message": "PDFBOX-5115: more support of soft hyphen\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887293 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java",
          "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/font/PDFontTest.java||pdfbox/src/test/java/org/apache/pdfbox/pdmodel/font/PDFontTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "326:             if (\"nbspace\".equals(nameInAFM))",
          "327:             {",
          "330:                 nameInAFM = \"space\";",
          "331:             }",
          "335:             {",
          "337:             }",
          "339:             return getStandard14AFM().getCharacterWidth(nameInAFM);",
          "",
          "[Removed Lines]",
          "334:             if (\".notdef\".equals(nameInAFM))",
          "336:                 return 250f;",
          "",
          "[Added Lines]",
          "332:             else if (\"sfthyphen\".equals(nameInAFM))",
          "336:                 nameInAFM = \"hyphen\";",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "163:         {",
          "164:             return new GeneralPath();",
          "165:         }",
          "167:     }",
          "169:     @Override",
          "",
          "[Removed Lines]",
          "166:         return \"nbspace\".equals(name) ? genericFont.getPath(\"space\") : genericFont.getPath(name);",
          "",
          "[Added Lines]",
          "166:         if (\"sfthyphen\".equals(name))",
          "167:         {",
          "168:             return genericFont.getPath(\"hyphen\");",
          "169:         }",
          "170:         if (\"nbspace\".equals(name))",
          "171:         {",
          "172:             return genericFont.getPath(\"space\");",
          "173:         }",
          "174:         return genericFont.getPath(name);",
          "",
          "---------------"
        ],
        "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/font/PDFontTest.java||pdfbox/src/test/java/org/apache/pdfbox/pdmodel/font/PDFontTest.java": [
          "File: pdfbox/src/test/java/org/apache/pdfbox/pdmodel/font/PDFontTest.java -> pdfbox/src/test/java/org/apache/pdfbox/pdmodel/font/PDFontTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "425:         PDFont font2 = PDType0Font.load(doc, PDFontTest.class.getResourceAsStream(",
          "426:                 \"/org/apache/pdfbox/resources/ttf/LiberationSans-Regular.ttf\"));",
          "428:         PDPageContentStream cs = new PDPageContentStream(doc, page);",
          "429:         cs.beginText();",
          "430:         cs.newLineAtOffset(100, 500);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "428:         Assert.assertEquals(font1.getStringWidth(\"-\"), font1.getStringWidth(\"\\u00AD\"), 0);",
          "429:         Assert.assertEquals(font2.getStringWidth(\"-\"), font2.getStringWidth(\"\\u00AD\"), 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "217a6ffb0c5d08b672ecb782bb250df14705a869",
      "candidate_info": {
        "commit_hash": "217a6ffb0c5d08b672ecb782bb250df14705a869",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/217a6ffb0c5d08b672ecb782bb250df14705a869",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/util/SplitBooklet.java"
        ],
        "message": "PDFBOX-5078: add missing package declaration\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1885602 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/util/SplitBooklet.java||examples/src/main/java/org/apache/pdfbox/examples/util/SplitBooklet.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/util/SplitBooklet.java||examples/src/main/java/org/apache/pdfbox/examples/util/SplitBooklet.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/util/SplitBooklet.java -> examples/src/main/java/org/apache/pdfbox/examples/util/SplitBooklet.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: import java.io.File;",
          "19: import java.io.IOException;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.apache.pdfbox.examples.util;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0a2a5f3d6a86a30be76c8d2caeae84690c17c3e6",
      "candidate_info": {
        "commit_hash": "0a2a5f3d6a86a30be76c8d2caeae84690c17c3e6",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/0a2a5f3d6a86a30be76c8d2caeae84690c17c3e6",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java"
        ],
        "message": "PDFBOX-5150: improve exception message, as suggested by Emmeran Seehuber\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1888605 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "75:     {",
          "76:         if (defaultAppearance == null)",
          "77:         {",
          "79:         }",
          "81:         if (defaultResources == null)",
          "",
          "[Removed Lines]",
          "78:             throw new IllegalArgumentException(\"/DA is a required entry\");",
          "",
          "[Added Lines]",
          "78:             throw new IllegalArgumentException(\"/DA is a required entry. \"",
          "79:                     + \"Please set a default appearance first.\");",
          "",
          "---------------"
        ]
      }
    }
  ]
}