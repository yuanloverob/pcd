{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "57df9febbbf6bec44efd67b198d9d0e0f8a69d8a",
      "candidate_info": {
        "commit_hash": "57df9febbbf6bec44efd67b198d9d0e0f8a69d8a",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/57df9febbbf6bec44efd67b198d9d0e0f8a69d8a",
        "files": [
          "ambari-common/src/main/python/ambari_ws4py/websocket.py"
        ],
        "message": "AMBARI-24638. Ambari-agent process consuming more memory. (aonishuk)",
        "before_after_code_files": [
          "ambari-common/src/main/python/ambari_ws4py/websocket.py||ambari-common/src/main/python/ambari_ws4py/websocket.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-common/src/main/python/ambari_ws4py/websocket.py||ambari-common/src/main/python/ambari_ws4py/websocket.py": [
          "File: ambari-common/src/main/python/ambari_ws4py/websocket.py -> ambari-common/src/main/python/ambari_ws4py/websocket.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "480:         if not bytes and self.reading_buffer_size > 0:",
          "481:             return False",
          "485:         if s.closing is not None:",
          "486:             logger.info(\"Closing message received (%d) '%s'\" % (s.closing.code, s.closing.reason))",
          "",
          "[Removed Lines]",
          "483:         self.reading_buffer_size = s.parser.send(bytes) or DEFAULT_READING_SIZE",
          "",
          "[Added Lines]",
          "483:         with self.lock:",
          "484:           self.reading_buffer_size = s.parser.send(bytes) or DEFAULT_READING_SIZE",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0e8dcfd9be2d1ccd526126cf9bc0073e3e8a1c73",
      "candidate_info": {
        "commit_hash": "0e8dcfd9be2d1ccd526126cf9bc0073e3e8a1c73",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/0e8dcfd9be2d1ccd526126cf9bc0073e3e8a1c73",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/serveraction/upgrades/FixSparkYarnIdentity.java"
        ],
        "message": "[AMBARI-24718] STS fails after start, after stack upgrade from 3.0.1 \u2026 (#2405)\n\n* [AMBARI-24718] STS fails after start, after stack upgrade from 3.0.1 to 3.0.3.(vbrodetskyi)\n\n* [AMBARI-24718] STS fails after start, after stack upgrade from 3.0.1 to 3.0.3.(vbrodetskyi)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/serveraction/upgrades/FixSparkYarnIdentity.java||ambari-server/src/main/java/org/apache/ambari/server/serveraction/upgrades/FixSparkYarnIdentity.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/serveraction/upgrades/FixSparkYarnIdentity.java||ambari-server/src/main/java/org/apache/ambari/server/serveraction/upgrades/FixSparkYarnIdentity.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/serveraction/upgrades/FixSparkYarnIdentity.java -> ambari-server/src/main/java/org/apache/ambari/server/serveraction/upgrades/FixSparkYarnIdentity.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: package org.apache.ambari.server.serveraction.upgrades;",
          "21: import java.util.Map;",
          "22: import java.util.concurrent.ConcurrentMap;",
          "23: import java.util.stream.Collectors;",
          "25: import org.apache.ambari.server.AmbariException;",
          "26: import org.apache.ambari.server.actionmanager.HostRoleStatus;",
          "27: import org.apache.ambari.server.agent.CommandReport;",
          "28: import org.apache.ambari.server.state.Cluster;",
          "29: import org.apache.ambari.server.state.Config;",
          "30: import org.apache.ambari.server.state.Host;",
          "31: import org.apache.ambari.server.state.SecurityType;",
          "39: public class FixSparkYarnIdentity extends AbstractUpgradeServerAction {",
          "40:   private static final String SPARK2_THRIFT_SPARKCONF_CONFIG_TYPE = \"spark2-thrift-sparkconf\";",
          "41:   private static final String SPARK2_DEFAULTS_CONFIG_TYPE = \"spark2-defaults\";",
          "43:   private static final String SPARK_YARN_KEYTAB_PROPERTY_NAME = \"spark.yarn.keytab\";",
          "44:   private static final String SPARK_YARN_KEYTAB_PRINCIPAL_PROPERTY_NAME = \"spark.yarn.principal\";",
          "46:   private static final String SPARK_HISTORY_KERBEROS_KEYTAB_PROPERTY_NAME = \"spark.history.kerberos.keytab\";",
          "47:   private static final String SPARK_HISTORY_KERBEROS_PRINCIPAL_PROPERTY_NAME = \"spark.history.kerberos.principal\";",
          "50:   @Override",
          "51:   public CommandReport execute(ConcurrentMap<String, Object> requestSharedDataContext)",
          "52:           throws AmbariException, InterruptedException {",
          "54:     String clusterName = getExecutionCommand().getClusterName();",
          "56:     Cluster cluster = getClusters().getCluster(clusterName);",
          "58:     if (cluster.getSecurityType() == SecurityType.KERBEROS) {",
          "60:       Config spark2ThriftSparkConfConfig = cluster.getDesiredConfigByType(SPARK2_THRIFT_SPARKCONF_CONFIG_TYPE);",
          "62:       if (spark2ThriftSparkConfConfig != null) {",
          "63:         Map spark2ThriftSparkConfProperties = spark2ThriftSparkConfConfig.getProperties();",
          "64:         if (!spark2ThriftSparkConfProperties.containsKey(SPARK_YARN_KEYTAB_PROPERTY_NAME) &&",
          "65:                 !spark2ThriftSparkConfProperties.containsKey(SPARK_YARN_KEYTAB_PRINCIPAL_PROPERTY_NAME)) {",
          "67:           Config spark2DefaultsConfig = cluster.getDesiredConfigByType(SPARK2_DEFAULTS_CONFIG_TYPE);",
          "68:           if (spark2DefaultsConfig != null) {",
          "69:             Map spark2DefultsProperties = spark2DefaultsConfig.getProperties();",
          "71:             spark2ThriftSparkConfProperties.put(SPARK_YARN_KEYTAB_PROPERTY_NAME, spark2DefultsProperties.get(SPARK_HISTORY_KERBEROS_KEYTAB_PROPERTY_NAME));",
          "72:             spark2ThriftSparkConfProperties.put(SPARK_YARN_KEYTAB_PRINCIPAL_PROPERTY_NAME, spark2DefultsProperties.get(SPARK_HISTORY_KERBEROS_PRINCIPAL_PROPERTY_NAME));",
          "73:             spark2ThriftSparkConfConfig.setProperties(spark2ThriftSparkConfProperties);",
          "74:             spark2ThriftSparkConfConfig.save();",
          "75:             agentConfigsHolder.updateData(cluster.getClusterId(), cluster.getHosts().stream().map(Host::getHostId).collect(Collectors.toList()));",
          "77:             return createCommandReport(0, HostRoleStatus.COMPLETED, \"{}\",",
          "78:                     \"Properties spark.yarn.keytab/principal were successfully added and initialized.\", \"\");",
          "79:           }",
          "80:         }",
          "81:       }",
          "82:     }",
          "84:     return createCommandReport(0, HostRoleStatus.COMPLETED, \"{}\",",
          "85:             \"Nothing was done, because kerberos security is not enabled or spark.yarn.keytab/principal already added\", \"\");",
          "86:   }",
          "87: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ba58df239c1ee196661c67f309e294d43f93506b",
      "candidate_info": {
        "commit_hash": "ba58df239c1ee196661c67f309e294d43f93506b",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/ba58df239c1ee196661c67f309e294d43f93506b",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/audit/event/LoginAuditEvent.java",
          "ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/AddRepositoryVersionRequestAuditEvent.java",
          "ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ChangeRepositoryVersionRequestAuditEvent.java",
          "ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ClusterPrivilegeChangeRequestAuditEvent.java",
          "ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ViewPrivilegeChangeRequestAuditEvent.java"
        ],
        "message": "[AMBARI-25124] ambari-audit.log entries span multiple lines (apappu)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/audit/event/LoginAuditEvent.java||ambari-server/src/main/java/org/apache/ambari/server/audit/event/LoginAuditEvent.java",
          "ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/AddRepositoryVersionRequestAuditEvent.java||ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/AddRepositoryVersionRequestAuditEvent.java",
          "ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ChangeRepositoryVersionRequestAuditEvent.java||ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ChangeRepositoryVersionRequestAuditEvent.java",
          "ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ClusterPrivilegeChangeRequestAuditEvent.java||ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ClusterPrivilegeChangeRequestAuditEvent.java",
          "ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ViewPrivilegeChangeRequestAuditEvent.java||ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ViewPrivilegeChangeRequestAuditEvent.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/audit/event/LoginAuditEvent.java||ambari-server/src/main/java/org/apache/ambari/server/audit/event/LoginAuditEvent.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/audit/event/LoginAuditEvent.java -> ambari-server/src/main/java/org/apache/ambari/server/audit/event/LoginAuditEvent.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:     protected void buildAuditMessage(StringBuilder builder) {",
          "63:       super.buildAuditMessage(builder);",
          "67:       if (roles != null && !roles.isEmpty()) {",
          "68:         List<String> lines = new LinkedList<>();",
          "69:         for (Map.Entry<String, List<String>> entry : roles.entrySet()) {",
          "70:           lines.add(\"    \" + entry.getKey() + \": \" + StringUtils.join(entry.getValue(), \", \"));",
          "71:         }",
          "74:       }",
          "75:       builder.append(\"), Status(\")",
          "76:         .append(reasonOfFailure == null ? \"Success\" : \"Failed\");",
          "",
          "[Removed Lines]",
          "65:       builder.append(\", Operation(User login), Roles(\").append(System.lineSeparator());",
          "72:         builder.append(StringUtils.join(lines, System.lineSeparator()));",
          "73:         builder.append(System.lineSeparator());",
          "",
          "[Added Lines]",
          "65:       builder.append(\", Operation(User login), Roles(\");",
          "72:         builder.append(StringUtils.join(lines, \" , \"));",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/AddRepositoryVersionRequestAuditEvent.java||ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/AddRepositoryVersionRequestAuditEvent.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/AddRepositoryVersionRequestAuditEvent.java -> ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/AddRepositoryVersionRequestAuditEvent.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:         .append(repoVersion)",
          "89:         .append(\"), Repositories(\");",
          "95:       for (Map.Entry<String, List<Map<String, String>>> repo : repos.entrySet()) {",
          "96:         builder.append(\"Operating system: \").append(repo.getKey());",
          "98:         for (Map<String, String> properties : repo.getValue()) {",
          "99:           builder.append(\"    Repository ID(\").append(properties.get(\"repo_id\"));",
          "100:           builder.append(\"), Repository name(\").append(properties.get(\"repo_name\"));",
          "101:           builder.append(\"), Base url(\").append(properties.get(\"base_url\")).append(\")\");",
          "103:         }",
          "104:       }",
          "",
          "[Removed Lines]",
          "91:       if (!repos.isEmpty()) {",
          "92:         builder.append(System.lineSeparator());",
          "93:       }",
          "97:         builder.append(System.lineSeparator());",
          "102:           builder.append(System.lineSeparator());",
          "",
          "[Added Lines]",
          "94:         builder.append(\" ( \");",
          "99:           builder.append(\" ) \");",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ChangeRepositoryVersionRequestAuditEvent.java||ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ChangeRepositoryVersionRequestAuditEvent.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ChangeRepositoryVersionRequestAuditEvent.java -> ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ChangeRepositoryVersionRequestAuditEvent.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:         .append(repoVersion)",
          "90:         .append(\"), Repositories(\");",
          "96:       for (Map.Entry<String, List<Map<String, String>>> repo : repos.entrySet()) {",
          "97:         builder.append(\"Operating system: \").append(repo.getKey());",
          "99:         for (Map<String, String> properties : repo.getValue()) {",
          "100:           builder.append(\"    Repository ID(\").append(properties.get(\"repo_id\"));",
          "101:           builder.append(\"), Repository name(\").append(properties.get(\"repo_name\"));",
          "102:           builder.append(\"), Base url(\").append(properties.get(\"base_url\")).append(\")\");",
          "104:         }",
          "105:       }",
          "",
          "[Removed Lines]",
          "92:       if (!repos.isEmpty()) {",
          "93:         builder.append(System.lineSeparator());",
          "94:       }",
          "98:         builder.append(System.lineSeparator());",
          "103:           builder.append(System.lineSeparator());",
          "",
          "[Added Lines]",
          "96:         builder.append(\" ( \");",
          "101:           builder.append(\" ) \");",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ClusterPrivilegeChangeRequestAuditEvent.java||ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ClusterPrivilegeChangeRequestAuditEvent.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ClusterPrivilegeChangeRequestAuditEvent.java -> ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ClusterPrivilegeChangeRequestAuditEvent.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:       roleSet.addAll(roles.keySet());",
          "82:       builder.append(\", Roles(\");",
          "87:       List<String> lines = new LinkedList<>();",
          "",
          "[Removed Lines]",
          "83:       if (!users.isEmpty() || !groups.isEmpty()|| !roles.isEmpty()) {",
          "84:         builder.append(System.lineSeparator());",
          "85:       }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "99:         }",
          "100:       }",
          "104:       builder.append(\")\");",
          "105:     }",
          "",
          "[Removed Lines]",
          "102:       builder.append(StringUtils.join(lines, System.lineSeparator()));",
          "",
          "[Added Lines]",
          "100:       builder.append(StringUtils.join(lines, \" , \"));",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ViewPrivilegeChangeRequestAuditEvent.java||ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ViewPrivilegeChangeRequestAuditEvent.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ViewPrivilegeChangeRequestAuditEvent.java -> ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ViewPrivilegeChangeRequestAuditEvent.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "101:       roleSet.addAll(roles.keySet());",
          "103:       builder.append(\", Permissions(\");",
          "108:       List<String> lines = new LinkedList<>();",
          "",
          "[Removed Lines]",
          "104:       if (!users.isEmpty() || !groups.isEmpty() || !roles.isEmpty()) {",
          "105:         builder.append(System.lineSeparator());",
          "106:       }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "119:           lines.add(\"  Roles: \" + StringUtils.join(roles.get(role), \", \"));",
          "120:         }",
          "121:       }",
          "125:       builder.append(\")\");",
          "126:     }",
          "",
          "[Removed Lines]",
          "123:       builder.append(StringUtils.join(lines, System.lineSeparator()));",
          "",
          "[Added Lines]",
          "120:       builder.append(StringUtils.join(lines, \" , \"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2538eb07849b81ba93c15b3829e660b558baa7a5",
      "candidate_info": {
        "commit_hash": "2538eb07849b81ba93c15b3829e660b558baa7a5",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/2538eb07849b81ba93c15b3829e660b558baa7a5",
        "files": [
          "ambari-web/app/controllers/main/admin/stack_and_upgrade_controller.js",
          "ambari-web/app/messages.js",
          "ambari-web/app/models/stack_version/repository_version.js",
          "ambari-web/app/styles/stack_versions.less",
          "ambari-web/app/templates/main/admin/stack_upgrade/upgrade_version_box.hbs",
          "ambari-web/app/templates/main/admin/stack_upgrade/upgrade_version_column.hbs",
          "ambari-web/app/templates/main/admin/stack_upgrade/versions.hbs",
          "ambari-web/app/views/main/admin/stack_upgrade/upgrade_version_box_view.js",
          "ambari-web/app/views/main/admin/stack_upgrade/versions_view.js",
          "ambari-web/test/controllers/main/admin/stack_and_upgrade_controller_test.js",
          "ambari-web/test/views/main/admin/stack_upgrade/upgrade_version_box_view_test.js"
        ],
        "message": "AMBARI-24120 cluster version is in invalid state",
        "before_after_code_files": [
          "ambari-web/app/controllers/main/admin/stack_and_upgrade_controller.js||ambari-web/app/controllers/main/admin/stack_and_upgrade_controller.js",
          "ambari-web/app/messages.js||ambari-web/app/messages.js",
          "ambari-web/app/models/stack_version/repository_version.js||ambari-web/app/models/stack_version/repository_version.js",
          "ambari-web/app/styles/stack_versions.less||ambari-web/app/styles/stack_versions.less",
          "ambari-web/app/templates/main/admin/stack_upgrade/upgrade_version_box.hbs||ambari-web/app/templates/main/admin/stack_upgrade/upgrade_version_box.hbs",
          "ambari-web/app/templates/main/admin/stack_upgrade/upgrade_version_column.hbs||ambari-web/app/templates/main/admin/stack_upgrade/upgrade_version_column.hbs",
          "ambari-web/app/templates/main/admin/stack_upgrade/versions.hbs||ambari-web/app/templates/main/admin/stack_upgrade/versions.hbs",
          "ambari-web/app/views/main/admin/stack_upgrade/upgrade_version_box_view.js||ambari-web/app/views/main/admin/stack_upgrade/upgrade_version_box_view.js",
          "ambari-web/app/views/main/admin/stack_upgrade/versions_view.js||ambari-web/app/views/main/admin/stack_upgrade/versions_view.js",
          "ambari-web/test/controllers/main/admin/stack_and_upgrade_controller_test.js||ambari-web/test/controllers/main/admin/stack_and_upgrade_controller_test.js",
          "ambari-web/test/views/main/admin/stack_upgrade/upgrade_version_box_view_test.js||ambari-web/test/views/main/admin/stack_upgrade/upgrade_version_box_view_test.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/controllers/main/admin/stack_and_upgrade_controller.js||ambari-web/app/controllers/main/admin/stack_and_upgrade_controller.js": [
          "File: ambari-web/app/controllers/main/admin/stack_and_upgrade_controller.js -> ambari-web/app/controllers/main/admin/stack_and_upgrade_controller.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1599:       }",
          "1600:     });",
          "1601:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1610:   showReinstallRemoveConfirmation: function({hosts, title, operation, primary = () => {}}) {",
          "1611:     return App.ModalPopup.show({",
          "1612:       header: title,",
          "1613:       visibleHosts: hosts.join(\"\\n\"),",
          "1614:       expanded: true,",
          "1615:       onPrimary: function() {",
          "1616:         primary(hosts);",
          "1617:         this._super();",
          "1618:       },",
          "1620:       bodyClass: Em.View.extend({",
          "1621:         templateName: require('templates/main/host/bulk_operation_confirm_popup'),",
          "1622:         message: Em.I18n.t('hosts.bulkOperation.confirmation.hosts').format(operation, hosts.length),",
          "1623:         textareaVisible: false,",
          "1624:         textTrigger: function() {",
          "1625:           this.toggleProperty('textareaVisible');",
          "1626:         },",
          "1627:         putHostNamesToTextarea: function() {",
          "1628:           var hostNames = this.get('parentView.visibleHosts');",
          "1629:           if (this.get('textareaVisible')) {",
          "1630:             var wrapper = $(\".task-detail-log-maintext\");",
          "1631:             $('.task-detail-log-clipboard').html(hostNames).width(wrapper.width()).height(250);",
          "1632:             Em.run.next(function() {",
          "1633:               $('.task-detail-log-clipboard').select();",
          "1634:             });",
          "1635:           }",
          "1636:         }.observes('textareaVisible')",
          "1637:       })",
          "1638:     });",
          "1639:   },",
          "1641:   removeOutOfSyncComponents: function (event) {",
          "1642:     const hosts = App.RepositoryVersion.find(event.context.repoId).get('stackVersion.outOfSyncHosts');",
          "1643:     return this.showReinstallRemoveConfirmation({",
          "1644:       hosts,",
          "1645:       title: Em.I18n.t('admin.stackVersions.version.errors.outOfSync.remove.title'),",
          "1646:       operation: Em.I18n.t('hosts.host.maintainance.removeFailedComponents.context'),",
          "1647:       primary: () => {",
          "1648:         App.get('router.mainAdminKerberosController').getKDCSessionState(() => {",
          "1649:           App.ajax.send({",
          "1650:             name: 'host.host_component.delete_components',",
          "1651:             sender: this,",
          "1652:             data: {",
          "1653:               hosts,",
          "1654:               data: JSON.stringify({",
          "1655:                 RequestInfo: {",
          "1656:                   query: 'HostRoles/host_name.in(' + hosts.join(',') + ')&HostRoles/state=INSTALL_FAILED'",
          "1657:                 }",
          "1658:               })",
          "1659:             }",
          "1660:           });",
          "1661:         });",
          "1662:       }",
          "1663:     });",
          "1664:   },",
          "1666:   reinstallOutOfSyncComponents: function (event) {",
          "1667:     const hosts = App.RepositoryVersion.find(event.context.repoId).get('stackVersion.outOfSyncHosts');",
          "1668:     return this.showReinstallRemoveConfirmation({",
          "1669:       hosts,",
          "1670:       title: Em.I18n.t('admin.stackVersions.version.errors.outOfSync.reinstall.title'),",
          "1671:       operation: Em.I18n.t('hosts.host.maintainance.reinstallFailedComponents.context'),",
          "1672:       primary: () => {",
          "1673:         App.get('router.mainAdminKerberosController').getKDCSessionState(() => {",
          "1674:           App.ajax.send({",
          "1675:             name: 'common.host_components.update',",
          "1676:             sender: this,",
          "1677:             data: {",
          "1678:               HostRoles: {",
          "1679:                 state: 'INSTALLED'",
          "1680:               },",
          "1681:               query: 'HostRoles/host_name.in(' + hosts.join(',') + ')&HostRoles/state=INSTALL_FAILED',",
          "1682:               context: Em.I18n.t('hosts.host.maintainance.reinstallFailedComponents.context')",
          "1683:             },",
          "1684:             success: 'reinstallOutOfSyncComponentsSuccessCallback'",
          "1685:           });",
          "1686:         });",
          "1687:       }",
          "1688:     });",
          "1689:   },",
          "1691:   reinstallOutOfSyncComponentsSuccessCallback: function (data, opt, params, req) {",
          "1692:     if (!data && req.status == 200) {",
          "1693:       return App.ModalPopup.show({",
          "1694:         header: Em.I18n.t('rolling.nothingToDo.header'),",
          "1695:         body: Em.I18n.t('rolling.nothingToDo.body').format(params.noOpsMessage || Em.I18n.t('hosts.host.maintainance.allComponents.context')),",
          "1696:         secondary: false",
          "1697:       });",
          "1698:     }",
          "1699:     return App.router.get('userSettingsController').dataLoading('show_bg').done(function (initValue) {",
          "1700:       if (initValue) {",
          "1701:         App.router.get('backgroundOperationsController').showPopup();",
          "1702:       }",
          "1703:     });",
          "1704:   },",
          "",
          "---------------"
        ],
        "ambari-web/app/messages.js||ambari-web/app/messages.js": [
          "File: ambari-web/app/messages.js -> ambari-web/app/messages.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1830:     ' \u201cGo to Dashboard\u201d link in the Ambari Administration > Clusters section.',",
          "1831:   'admin.stackVersions.version.installNow': \"Install Packages\",",
          "1832:   'admin.stackVersions.version.reinstall': \"Reinstall Packages\",",
          "1833:   'admin.stackVersions.version.performUpgrade': \"Perform Upgrade\",",
          "1834:   'admin.stackVersions.version.preUpgradeCheck': 'Pre-Upgrade Check',",
          "1835:   'admin.stackVersions.version.upgrade.pause': \"Upgrade: Action Required\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1833:   'admin.stackVersions.version.installError': \"Installation Error!\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1847:   'admin.stackUpgrade.state.paused.fail.body': \"Upgrade could not be paused. Try again later.\",",
          "1848:   'admin.stackDowngrade.state.paused.fail.header': \"Pause Downgrade failed\",",
          "1849:   'admin.stackDowngrade.state.paused.fail.body': \"Downgrade could not be paused. Try again later.\",",
          "1851:   'admin.stackVersions.version.service.notUpgradable': \"The version of this service included in this repository is already installed in the cluster.\",",
          "1852:   'admin.stackVersions.version.service.notSupported': \"This service is unsupported in the current version of the stack.\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1851:   'admin.stackVersions.version.errors.outOfSync.title': 'Host component out of sync',",
          "1852:   'admin.stackVersions.version.errors.outOfSync.desc': 'One of more host components did not report the version that Ambari expected.' +",
          "1853:   ' Please re-install the failed host component, or remove it.',",
          "1854:   'admin.stackVersions.version.errors.outOfSync.reinstall.title': 'Confirm Re-Install',",
          "1855:   'admin.stackVersions.version.errors.outOfSync.remove.title': 'Confirm Remove',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2883:   'hosts.host.maintainance.stopAllComponents.context': 'Stop All Host Components',",
          "2884:   'hosts.host.maintainance.startAllComponents.context': 'Start All Host Components',",
          "2885:   'hosts.host.maintainance.reinstallFailedComponents.context': 'Reinstall Failed Components',",
          "2886:   'hosts.host.recover.initAllComponents.context': 'Init All Host Components',",
          "2887:   'hosts.host.recover.installAllComponents.context': 'Install All Host Components',",
          "2888:   'hosts.host.recover.regenerateKeytabs.context': 'Regenerate keytabs',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2892:   'hosts.host.maintainance.removeFailedComponents.context': 'Remove Failed Components',",
          "",
          "---------------"
        ],
        "ambari-web/app/models/stack_version/repository_version.js||ambari-web/app/models/stack_version/repository_version.js": [
          "File: ambari-web/app/models/stack_version/repository_version.js -> ambari-web/app/models/stack_version/repository_version.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:   displayNameSimple: function() {",
          "35:     return this.get('stackVersionType') + '-' + this.get('repositoryVersion').split('-')[0];",
          "36:   }.property('stackVersionType', 'repositoryVersion'),",
          "38:   isPatch: Em.computed.equal('type', 'PATCH'),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38:   displayNameFull: function() {",
          "39:     return this.get('stackVersionType') + '-' + this.get('repositoryVersion');",
          "40:   }.property('stackVersionType', 'repositoryVersion'),",
          "",
          "---------------"
        ],
        "ambari-web/app/styles/stack_versions.less||ambari-web/app/styles/stack_versions.less": [
          "File: ambari-web/app/styles/stack_versions.less -> ambari-web/app/styles/stack_versions.less",
          "--- Hunk 1 ---",
          "[Context before]",
          "220:       i[disabled='disabled'] {",
          "221:         color: inherit;",
          "222:       }",
          "223:       .label {",
          "224:         padding: 5px 20px;",
          "225:         font-size: 14px;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "223:       i.glyphicon-warning-sign {",
          "224:         color: @health-status-red;",
          "225:       }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "357:         }",
          "358:       }",
          "359:       .btn.btn-primary:not(.dropdown-toggle) {",
          "361:         min-width: 70px;",
          "362:       }",
          "363:       .open .dropdown-menu {",
          "",
          "[Removed Lines]",
          "360:         padding: 4px 5px;",
          "",
          "[Added Lines]",
          "363:         padding-left: 5px;",
          "364:         padding-right: 5px;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "410:   .nav.nav-tabs {",
          "411:     margin-bottom: 20px;",
          "412:   }",
          "413: }",
          "415: .install-repo-confirmation,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "417:   .stack-error-row {",
          "418:     .image-container {",
          "419:       display: inline-block;",
          "420:       vertical-align: top;",
          "421:       margin-top: 5px;",
          "422:       margin-right: 15px;",
          "423:       i {",
          "424:         vertical-align: middle;",
          "425:         font-size: 22px;",
          "426:       }",
          "427:     }",
          "428:     .message-container {",
          "429:       display: inline-block;",
          "430:       max-width: 70%;",
          "431:     }",
          "432:     .stack-name {",
          "433:       margin-left: 15px;",
          "434:     }",
          "435:     .btn-container {",
          "436:       line-height: 36px;",
          "437:       float: right;",
          "438:     }",
          "439:   }",
          "",
          "---------------"
        ],
        "ambari-web/app/templates/main/admin/stack_upgrade/upgrade_version_box.hbs||ambari-web/app/templates/main/admin/stack_upgrade/upgrade_version_box.hbs": [
          "File: ambari-web/app/templates/main/admin/stack_upgrade/upgrade_version_box.hbs -> ambari-web/app/templates/main/admin/stack_upgrade/upgrade_version_box.hbs",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:     </div>",
          "72:   {{/if}}",
          "73:   {{#if view.stateElement.isLabel}}",
          "74:     <span {{bindAttr class=\"view.stateElement.class\"}}>{{view.stateElement.text}}</span>",
          "75:   {{/if}}",
          "76:   {{#if view.stateElement.isLink}}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74:     {{#if view.stateElement.iconClass}}",
          "75:       <i {{bindAttr class=\"view.stateElement.iconClass\" disabled=\"view.stateElement.isDisabled\"}}></i>",
          "76:     {{/if}}",
          "",
          "---------------"
        ],
        "ambari-web/app/templates/main/admin/stack_upgrade/upgrade_version_column.hbs||ambari-web/app/templates/main/admin/stack_upgrade/upgrade_version_column.hbs": [
          "File: ambari-web/app/templates/main/admin/stack_upgrade/upgrade_version_column.hbs -> ambari-web/app/templates/main/admin/stack_upgrade/upgrade_version_column.hbs",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:     </div>",
          "78:   {{/if}}",
          "79:   {{#if view.stateElement.isLabel}}",
          "97:   {{/if}}",
          "98:   {{#if view.stateElement.isLink}}",
          "99:     {{#if view.stateElement.iconClass}}",
          "",
          "[Removed Lines]",
          "80:     <div {{bindAttr class=\"view.stateElement.canBeReverted:btn-group :label-wrapper\"}}>",
          "81:       <button {{bindAttr class=\"view.stateElement.class\"}}>",
          "82:         <span class=\"state-label-text\">{{view.stateElement.text}}</span>",
          "83:       </button>",
          "84:       {{#if view.stateElement.canBeReverted}}",
          "85:         <button {{bindAttr class=\"view.stateElement.class :dropdown-toggle\"}} data-toggle=\"dropdown\">",
          "86:           <span class=\"caret\"></span>",
          "87:         </button>",
          "88:         <ul class=\"dropdown-menu\">",
          "89:           <li>",
          "90:             <a {{action runAction view.stateElement.action target=\"view\"}}>",
          "91:               {{view.stateElement.actionText}}",
          "92:             </a>",
          "93:           </li>",
          "94:         </ul>",
          "95:       {{/if}}",
          "96:     </div>",
          "",
          "[Added Lines]",
          "80:     {{#if view.stateElement.iconClass}}",
          "81:       <i {{bindAttr class=\"view.stateElement.iconClass\" disabled=\"view.stateElement.isDisabled\"}}></i>",
          "82:     {{/if}}",
          "83:     <span {{bindAttr class=\"view.stateElement.class\"}}>{{view.stateElement.text}}</span>",
          "",
          "---------------"
        ],
        "ambari-web/app/templates/main/admin/stack_upgrade/versions.hbs||ambari-web/app/templates/main/admin/stack_upgrade/versions.hbs": [
          "File: ambari-web/app/templates/main/admin/stack_upgrade/versions.hbs -> ambari-web/app/templates/main/admin/stack_upgrade/versions.hbs",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: }}",
          "19: <div id=\"versions-filter-section\" class=\"btn-toolbar\">",
          "20:   {{#havePermissions \"AMBARI.MANAGE_STACK_VERSIONS\"}}",
          "21:     <button class=\"btn btn-primary\" {{action goToVersions target=\"view\"}}  {{bindAttr disabled=\"App.router.wizardWatcherController.isNonWizardUser\"}} id=\"manage-versions-link\">",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: {{#if view.stackVersionError}}",
          "20:   <div class=\"alert alert-warning\" role=\"alert\">",
          "21:     <div class=\"stack-error-row\">",
          "22:       <div class=\"image-container\">",
          "23:         <i class=\"glyphicon glyphicon-warning-sign\"></i>",
          "24:       </div>",
          "25:       <div class=\"message-container\">",
          "26:         <h4 class=\"display-inline\">{{view.stackVersionError.title}}</h4>",
          "27:         <span class=\"stack-name\">{{view.stackVersionError.stack}}</span>",
          "28:         <div>",
          "29:           {{view.stackVersionError.description}}",
          "30:         </div>",
          "31:       </div>",
          "32:       {{#havePermissions \"AMBARI.MANAGE_STACK_VERSIONS\"}}",
          "33:         <div class=\"btn-container\">",
          "34:           <button class=\"btn btn-warning\" {{action reinstallOutOfSyncComponents view.stackVersionError target=\"controller\"}}>",
          "35:             {{t common.reinstall}}",
          "36:           </button>",
          "37:           <button class=\"btn btn-warning\" {{action removeOutOfSyncComponents view.stackVersionError target=\"controller\"}}>",
          "38:             {{t common.remove}}",
          "39:           </button>",
          "40:         </div>",
          "41:       {{/havePermissions}}",
          "42:     </div>",
          "43:   </div>",
          "44: {{/if}}",
          "",
          "---------------"
        ],
        "ambari-web/app/views/main/admin/stack_upgrade/upgrade_version_box_view.js||ambari-web/app/views/main/admin/stack_upgrade/upgrade_version_box_view.js": [
          "File: ambari-web/app/views/main/admin/stack_upgrade/upgrade_version_box_view.js -> ambari-web/app/views/main/admin/stack_upgrade/upgrade_version_box_view.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "151:         isLabel: true,",
          "152:         text: Em.I18n.t('common.current'),",
          "153:         class: this.get('currentLabelClass')",
          "154:       }",
          "155:     };",
          "156:   }.property(),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "154:       },",
          "155:       'CURRENT_PATCH_REVERTABLE': {",
          "156:         isButtonGroup: true,",
          "157:         text: Em.I18n.t('common.current'),",
          "158:         action: null,",
          "159:         buttons: [",
          "160:           {",
          "161:             text: Em.I18n.t('common.revert'),",
          "162:             action: 'confirmRevertPatchUpgrade'",
          "163:           }",
          "164:         ]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "172:     var isSuspended = App.get('upgradeSuspended');",
          "174:     if (status === 'CURRENT' && this.get('content.isPatch') && !this.get('isUpgrading')) {",
          "179:     }",
          "180:     else if (['INSTALLING', 'CURRENT'].contains(status)) {",
          "181:       element.setProperties(statePropertiesMap[status]);",
          "",
          "[Removed Lines]",
          "175:       element.setProperties(statePropertiesMap['CURRENT_PATCH']);",
          "176:       element.set('canBeReverted', this.get('content.stackVersion').get('supportsRevert'));",
          "177:       element.set('action', 'confirmRevertPatchUpgrade');",
          "178:       element.set('actionText', Em.I18n.t('common.revert'));",
          "",
          "[Added Lines]",
          "186:       if (this.get('content.stackVersion.supportsRevert')) {",
          "187:         element.setProperties(statePropertiesMap['CURRENT_PATCH_REVERTABLE']);",
          "188:       } else {",
          "189:         element.setProperties(statePropertiesMap['CURRENT_PATCH']);",
          "190:       }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "271:     if (Em.get(currentVersion, 'stack_name') !== this.get('content.stackVersionType') || isVersionHigherThanCurrent) {",
          "272:       switch (status){",
          "273:         case 'OUT_OF_SYNC':",
          "277:           break;",
          "278:         case 'INSTALL_FAILED':",
          "282:           break;",
          "283:         default:",
          "284:           var isVersionColumnView = this.get('isVersionColumnView');",
          "",
          "[Removed Lines]",
          "274:           element.set('isButton', true);",
          "275:           element.set('text', this.get('isVersionColumnView') ? Em.I18n.t('common.reinstall') : Em.I18n.t('admin.stackVersions.version.reinstall'));",
          "276:           element.set('action', 'installRepoVersionPopup');",
          "279:           element.set('isButton', true);",
          "280:           element.set('text', this.get('isVersionColumnView') ? Em.I18n.t('common.reinstall') : Em.I18n.t('admin.stackVersions.version.reinstall'));",
          "281:           element.set('action', 'installRepoVersionPopup');",
          "",
          "[Added Lines]",
          "286:           if (Em.isNone(currentVersion)) {",
          "287:             element.set('text', Em.I18n.t('admin.stackVersions.version.installError'));",
          "288:             element.set('iconClass', 'glyphicon glyphicon-warning-sign');",
          "289:             element.set('isLabel', true);",
          "290:           } else {",
          "291:             element.set('isButton', true);",
          "292:             element.set('text', this.get('isVersionColumnView') ? Em.I18n.t('common.reinstall') : Em.I18n.t('admin.stackVersions.version.reinstall'));",
          "293:             element.set('action', 'installRepoVersionPopup');",
          "294:           }",
          "297:           if (Em.isNone(currentVersion)) {",
          "298:             element.set('text', Em.I18n.t('admin.stackVersions.version.installError'));",
          "299:             element.set('iconClass', 'glyphicon glyphicon-warning-sign');",
          "300:             element.set('isLabel', true);",
          "301:           } else {",
          "302:             element.set('isButton', true);",
          "303:             element.set('text', this.get('isVersionColumnView') ? Em.I18n.t('common.reinstall') : Em.I18n.t('admin.stackVersions.version.reinstall'));",
          "304:             element.set('action', 'installRepoVersionPopup');",
          "305:           }",
          "",
          "---------------"
        ],
        "ambari-web/app/views/main/admin/stack_upgrade/versions_view.js||ambari-web/app/views/main/admin/stack_upgrade/versions_view.js": [
          "File: ambari-web/app/views/main/admin/stack_upgrade/versions_view.js -> ambari-web/app/views/main/admin/stack_upgrade/versions_view.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "141:   stackVersions: App.StackVersion.find(),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "146:   stackVersionError: function() {",
          "147:     const errorStack = this.get('repoVersions').filterProperty('status', 'OUT_OF_SYNC').findProperty('isStandard');",
          "148:     if (errorStack) {",
          "149:       return Em.Object.create({",
          "150:         repoId: errorStack.get('id'),",
          "151:         title: Em.I18n.t('admin.stackVersions.version.errors.outOfSync.title'),",
          "152:         description: Em.I18n.t('admin.stackVersions.version.errors.outOfSync.desc'),",
          "153:         stack: errorStack.get('displayNameFull')",
          "154:       })",
          "155:     }",
          "156:     return null;",
          "157:   }.property('repoVersions.@each.status'),",
          "",
          "---------------"
        ],
        "ambari-web/test/controllers/main/admin/stack_and_upgrade_controller_test.js||ambari-web/test/controllers/main/admin/stack_and_upgrade_controller_test.js": [
          "File: ambari-web/test/controllers/main/admin/stack_and_upgrade_controller_test.js -> ambari-web/test/controllers/main/admin/stack_and_upgrade_controller_test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "3785:       expect( controller.get('runningCheckRequests')).to.have.length(1);",
          "3786:     })",
          "3787:   });",
          "3788: });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3789:   describe('#removeOutOfSyncComponents', function() {",
          "3790:     beforeEach(function() {",
          "3791:       sinon.stub(App.RepositoryVersion, 'find').returns(Em.Object.create({",
          "3792:         stackVersion: {",
          "3793:           outOfSyncHosts: ['host1']",
          "3794:         }",
          "3795:       }));",
          "3796:       sinon.stub(App, 'get').returns({",
          "3797:         getKDCSessionState: Em.clb",
          "3798:       });",
          "3799:     });",
          "3800:     afterEach(function() {",
          "3801:       App.RepositoryVersion.find.restore();",
          "3802:       App.get.restore();",
          "3803:     });",
          "3805:     it('App.ajax.send should be called', function() {",
          "3806:       var modal = controller.removeOutOfSyncComponents({context: {repoId: 1}});",
          "3807:       modal.onPrimary();",
          "3808:       var args = testHelpers.findAjaxRequest('name', 'host.host_component.delete_components');",
          "3809:       expect(args[0]).to.exists;",
          "3810:       expect(args[0].data).to.be.eql({",
          "3811:         hosts: ['host1'],",
          "3812:         data: JSON.stringify({",
          "3813:           RequestInfo: {",
          "3814:             query: 'HostRoles/host_name.in(host1)&HostRoles/state=INSTALL_FAILED'",
          "3815:           }",
          "3816:         })",
          "3817:       });",
          "3818:     });",
          "3819:   });",
          "3821:   describe('#reinstallOutOfSyncComponents', function() {",
          "3822:     beforeEach(function() {",
          "3823:       sinon.stub(App.RepositoryVersion, 'find').returns(Em.Object.create({",
          "3824:         stackVersion: {",
          "3825:           outOfSyncHosts: ['host1']",
          "3826:         }",
          "3827:       }));",
          "3828:       sinon.stub(App, 'get').returns({",
          "3829:         getKDCSessionState: Em.clb",
          "3830:       });",
          "3831:     });",
          "3832:     afterEach(function() {",
          "3833:       App.RepositoryVersion.find.restore();",
          "3834:       App.get.restore();",
          "3835:     });",
          "3837:     it('App.ajax.send should be called', function() {",
          "3838:       var modal = controller.reinstallOutOfSyncComponents({context: {repoId: 1}});",
          "3839:       modal.onPrimary();",
          "3840:       var args = testHelpers.findAjaxRequest('name', 'common.host_components.update');",
          "3841:       expect(args[0]).to.exists;",
          "3842:       expect(args[0].data).to.be.eql({",
          "3843:         HostRoles: {",
          "3844:           state: 'INSTALLED'",
          "3845:         },",
          "3846:         query: 'HostRoles/host_name.in(host1)&HostRoles/state=INSTALL_FAILED',",
          "3847:         context: Em.I18n.t('hosts.host.maintainance.reinstallFailedComponents.context')",
          "3848:       });",
          "3849:     });",
          "3850:   });",
          "",
          "---------------"
        ],
        "ambari-web/test/views/main/admin/stack_upgrade/upgrade_version_box_view_test.js||ambari-web/test/views/main/admin/stack_upgrade/upgrade_version_box_view_test.js": [
          "File: ambari-web/test/views/main/admin/stack_upgrade/upgrade_version_box_view_test.js -> ambari-web/test/views/main/admin/stack_upgrade/upgrade_version_box_view_test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "463:         expected: {",
          "464:           isLabel: true,",
          "465:           text: Em.I18n.t('common.current'),",
          "468:         },",
          "469:         title: 'current no-revertable patch version'",
          "470:       },",
          "",
          "[Removed Lines]",
          "466:           class: 'label label-success',",
          "467:           canBeReverted: false",
          "",
          "[Added Lines]",
          "466:           class: 'label label-success'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "478:           })",
          "479:         },",
          "480:         expected: {",
          "482:           text: Em.I18n.t('common.current'),",
          "484:         },",
          "485:         title: 'current revertable patch version'",
          "486:       },",
          "",
          "[Removed Lines]",
          "481:           status: 'CURRENT',",
          "483:           action: 'confirmRevertPatchUpgrade'",
          "",
          "[Added Lines]",
          "480:           isButtonGroup: true,",
          "482:           action: null,",
          "483:           buttons: [",
          "484:             {",
          "485:               text: Em.I18n.t('common.revert'),",
          "486:               action: 'confirmRevertPatchUpgrade'",
          "487:             }",
          "488:           ]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6e14430857028efe9418c169547633ecdd46b8de",
      "candidate_info": {
        "commit_hash": "6e14430857028efe9418c169547633ecdd46b8de",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/6e14430857028efe9418c169547633ecdd46b8de",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/HostComponentResourceProvider.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/RequestOperationLevel.java"
        ],
        "message": "AMBARI-25041. Scale hosts does not install component if service is in maintenance mode (#2787)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/HostComponentResourceProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/HostComponentResourceProvider.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/RequestOperationLevel.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/RequestOperationLevel.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/HostComponentResourceProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/HostComponentResourceProvider.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/internal/HostComponentResourceProvider.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/internal/HostComponentResourceProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "390:       (skipInstallForComponents, \";\"));",
          "391:     requestInfo.put(AmbariManagementControllerImpl.DONT_SKIP_INSTALL_FOR_COMPONENTS, StringUtils.join",
          "392:       (dontSkipInstallForComponents, \";\"));",
          "394:     Request installRequest = PropertyHelper.getUpdateRequest(installProperties, requestInfo);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "395:     requestInfo.putAll(RequestOperationLevel.propertiesFor(Resource.Type.HostComponent, cluster));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "437:     Map<String, String> requestInfo = new HashMap<>();",
          "438:     requestInfo.put(\"context\", String.format(\"Start components on host %s\", hostName));",
          "439:     requestInfo.put(\"phase\", \"INITIAL_START\");",
          "440:     requestInfo.put(Setting.SETTING_NAME_SKIP_FAILURE, Boolean.toString(skipFailure));",
          "442:     Predicate clusterPredicate = new EqualsPredicate<>(CLUSTER_NAME, cluster);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "444:     requestInfo.putAll(RequestOperationLevel.propertiesFor(Resource.Type.HostComponent, cluster));",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/RequestOperationLevel.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/RequestOperationLevel.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/internal/RequestOperationLevel.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/internal/RequestOperationLevel.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import org.apache.ambari.server.controller.spi.Resource;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: import com.google.common.collect.ImmutableMap;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "183:             \", hostName='\" + hostName + '\\'' +",
          "184:             '}';",
          "185:   }",
          "186: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "200:   public static Map<String, String> propertiesFor(Resource.Type type, String clusterName) {",
          "201:     return ImmutableMap.of(",
          "202:       OPERATION_LEVEL_ID, getExternalLevelName(type.name()),",
          "203:       OPERATION_CLUSTER_ID, clusterName",
          "204:     );",
          "205:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}