{
  "cve_id": "CVE-2024-12678",
  "cve_desc": "Nomad Community and Nomad Enterprise (\"Nomad\") allocations are vulnerable to privilege escalation within a namespace through unredacted workload identity tokens. This vulnerability, identified as CVE-2024-12678, is fixed in Nomad Community Edition 1.9.4 and Nomad Enterprise 1.9.4, 1.8.8, and 1.7.16.",
  "repo": "hashicorp/nomad",
  "patch_hash": "359a71861ef044cb5d749a36ff0e44b172c8f1a6",
  "patch_info": {
    "commit_hash": "359a71861ef044cb5d749a36ff0e44b172c8f1a6",
    "repo": "hashicorp/nomad",
    "commit_url": "https://github.com/hashicorp/nomad/commit/359a71861ef044cb5d749a36ff0e44b172c8f1a6",
    "files": [
      ".changelog/24683.txt",
      "command/agent/node_endpoint.go",
      "nomad/alloc_endpoint.go",
      "nomad/structs/structs.go"
    ],
    "message": "Backport of sec: fix alloc workload identity namespace permission into release/1.9.x (#24685)\n\nCo-authored-by: Deniz Onur Duzgun <59659739+dduzgun-security@users.noreply.github.com>",
    "before_after_code_files": [
      "command/agent/node_endpoint.go||command/agent/node_endpoint.go",
      "nomad/alloc_endpoint.go||nomad/alloc_endpoint.go",
      "nomad/structs/structs.go||nomad/structs/structs.go"
    ]
  },
  "patch_diff": {
    "command/agent/node_endpoint.go||command/agent/node_endpoint.go": [
      "File: command/agent/node_endpoint.go -> command/agent/node_endpoint.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "105:   out.Allocs = make([]*structs.Allocation, 0)",
      "106:  }",
      "107:  for _, alloc := range out.Allocs {",
      "108:   alloc.SetEventDisplayMessages()",
      "109:  }",
      "110:  return out.Allocs, nil",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "108:   alloc = alloc.Sanitize()",
      "",
      "---------------"
    ],
    "nomad/alloc_endpoint.go||nomad/alloc_endpoint.go": [
      "File: nomad/alloc_endpoint.go -> nomad/alloc_endpoint.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "172:    }",
      "176:    if out != nil {",
      "178:     if !aclObj.AllowClientOp() && !allowNsOp(aclObj, out.Namespace) {",
      "179:      return structs.NewErrUnknownAllocation(args.AllocID)",
      "",
      "[Removed Lines]",
      "175:    reply.Alloc = out",
      "",
      "[Added Lines]",
      "176:     out = out.Sanitize()",
      "177:     reply.Alloc = out",
      "",
      "---------------"
    ],
    "nomad/structs/structs.go||nomad/structs/structs.go": [
      "File: nomad/structs/structs.go -> nomad/structs/structs.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "11199:  return a.ID",
      "11200: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "11205: func (a *Allocation) Sanitize() *Allocation {",
      "11206:  if a == nil {",
      "11207:   return nil",
      "11208:  }",
      "11210:  if a.SignedIdentities == nil {",
      "11211:   return a",
      "11212:  }",
      "11214:  clean := a.Copy()",
      "11215:  clean.SignedIdentities = nil",
      "11216:  return clean",
      "11217: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "885172be2c914e8eb0dabc475a780483c43f13a8",
      "candidate_info": {
        "commit_hash": "885172be2c914e8eb0dabc475a780483c43f13a8",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/885172be2c914e8eb0dabc475a780483c43f13a8",
        "files": [
          "nomad/blocked_evals.go",
          "nomad/core_sched.go",
          "nomad/core_sched_test.go",
          "nomad/mock/csi.go",
          "nomad/mock/job.go",
          "scheduler/reconcile.go"
        ],
        "message": "backport of commit c5249c6ca4dae2cf1f157e88545428ccfd6cc4a7 (#24400)\n\nCo-authored-by: Piotr Kazmierczak <470696+pkazmierczak@users.noreply.github.com>",
        "before_after_code_files": [
          "nomad/blocked_evals.go||nomad/blocked_evals.go",
          "nomad/core_sched.go||nomad/core_sched.go",
          "nomad/core_sched_test.go||nomad/core_sched_test.go",
          "nomad/mock/csi.go||nomad/mock/csi.go",
          "nomad/mock/job.go||nomad/mock/job.go",
          "scheduler/reconcile.go||scheduler/reconcile.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "nomad/blocked_evals.go||nomad/blocked_evals.go": [
          "File: nomad/blocked_evals.go -> nomad/blocked_evals.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "417:  ch := b.capacityChangeCh",
          "",
          "[Removed Lines]",
          "414:  b.unblockIndexes[computedClass] = unblockEvent{index, time.Now()}",
          "",
          "[Added Lines]",
          "414:  b.unblockIndexes[computedClass] = unblockEvent{index, time.Now().UTC()}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "450:  ch := b.capacityChangeCh",
          "451:  done := b.stopCh",
          "452:  b.l.Unlock()",
          "",
          "[Removed Lines]",
          "449:  b.unblockIndexes[quota] = unblockEvent{index, time.Now()}",
          "",
          "[Added Lines]",
          "449:  b.unblockIndexes[quota] = unblockEvent{index, time.Now().UTC()}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "479:  if quota != \"\" {",
          "480:   b.unblockIndexes[quota] = unblockEvent{index, now}",
          "481:  }",
          "",
          "[Removed Lines]",
          "478:  now := time.Now()",
          "",
          "[Added Lines]",
          "478:  now := time.Now().UTC()",
          "",
          "---------------"
        ],
        "nomad/core_sched.go||nomad/core_sched.go": [
          "File: nomad/core_sched.go -> nomad/core_sched.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "375:  gcEval := true",
          "376:  var gcAllocIDs []string",
          "377:  for _, alloc := range allocs {",
          "381:    gcEval = false",
          "",
          "[Removed Lines]",
          "378:   if !allocGCEligible(alloc, job, time.Now(), cutoffTime) {",
          "",
          "[Added Lines]",
          "378:   if !allocGCEligible(alloc, job, time.Now().UTC(), cutoffTime) {",
          "",
          "---------------"
        ],
        "nomad/core_sched_test.go||nomad/core_sched_test.go": [
          "File: nomad/core_sched_test.go -> nomad/core_sched_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:  store := s1.fsm.State()",
          "36:  eval := mock.Eval()",
          "39:  eval.Status = structs.EvalStatusFailed",
          "40:  must.NoError(t, store.UpsertJobSummary(999, mock.JobSummary(eval.JobID)))",
          "41:  must.NoError(t, store.UpsertEvals(structs.MsgTypeTestSetup, 1000, []*structs.Evaluation{eval}))",
          "",
          "[Removed Lines]",
          "37:  eval.CreateTime = time.Now().Add(-6 * time.Hour).UnixNano() // make sure objects we insert are older than GC thresholds",
          "38:  eval.ModifyTime = time.Now().Add(-5 * time.Hour).UnixNano()",
          "",
          "[Added Lines]",
          "37:  eval.CreateTime = time.Now().UTC().Add(-6 * time.Hour).UnixNano() // make sure objects we insert are older than GC thresholds",
          "38:  eval.ModifyTime = time.Now().UTC().Add(-5 * time.Hour).UnixNano()",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "121:  store := s1.fsm.State()",
          "122:  eval := mock.Eval()",
          "125:  eval.Status = structs.EvalStatusFailed",
          "126:  must.NoError(t, store.UpsertJobSummary(999, mock.JobSummary(eval.JobID)))",
          "127:  must.NoError(t, store.UpsertEvals(structs.MsgTypeTestSetup, 1000, []*structs.Evaluation{eval}))",
          "",
          "[Removed Lines]",
          "123:  eval.CreateTime = time.Now().Add(-6 * time.Hour).UnixNano() // make sure objects we insert are older than GC thresholds",
          "124:  eval.ModifyTime = time.Now().Add(-5 * time.Hour).UnixNano()",
          "",
          "[Added Lines]",
          "123:  eval.CreateTime = time.Now().UTC().Add(-6 * time.Hour).UnixNano() // make sure objects we insert are older than GC thresholds",
          "124:  eval.ModifyTime = time.Now().UTC().Add(-5 * time.Hour).UnixNano()",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "130:  eval2 := mock.Eval()",
          "131:  eval2.JobID = eval.JobID",
          "134:  must.NoError(t, store.UpsertJobSummary(999, mock.JobSummary(eval2.JobID)))",
          "135:  must.NoError(t, store.UpsertEvals(structs.MsgTypeTestSetup, 1003, []*structs.Evaluation{eval2}))",
          "",
          "[Removed Lines]",
          "132:  eval2.CreateTime = time.Now().Add(-6 * time.Hour).UnixNano() // make sure objects we insert are older than GC thresholds",
          "133:  eval2.ModifyTime = time.Now().Add(-5 * time.Hour).UnixNano()",
          "",
          "[Added Lines]",
          "132:  eval2.CreateTime = time.Now().UTC().Add(-6 * time.Hour).UnixNano() // make sure objects we insert are older than GC thresholds",
          "133:  eval2.ModifyTime = time.Now().UTC().Add(-5 * time.Hour).UnixNano()",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "215:  store := s1.fsm.State()",
          "216:  eval := mock.Eval()",
          "217:  eval.Status = structs.EvalStatusFailed",
          "220:  must.NoError(t, store.UpsertJobSummary(999, mock.JobSummary(eval.JobID)))",
          "221:  must.NoError(t, store.UpsertEvals(structs.MsgTypeTestSetup, 1000, []*structs.Evaluation{eval}))",
          "",
          "[Removed Lines]",
          "218:  eval.CreateTime = time.Now().Add(-6 * time.Hour).UnixNano() // make sure objects we insert are older than GC thresholds",
          "219:  eval.ModifyTime = time.Now().Add(-5 * time.Hour).UnixNano()",
          "",
          "[Added Lines]",
          "218:  eval.CreateTime = time.Now().UTC().Add(-6 * time.Hour).UnixNano() // make sure objects we insert are older than GC thresholds",
          "219:  eval.ModifyTime = time.Now().UTC().Add(-5 * time.Hour).UnixNano()",
          "",
          "---------------"
        ],
        "nomad/mock/csi.go||nomad/mock/csi.go": [
          "File: nomad/mock/csi.go -> nomad/mock/csi.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "51:   ControllersExpected: len(plugin.Controllers),",
          "52:   NodesHealthy:        plugin.NodesHealthy,",
          "53:   NodesExpected:       len(plugin.Nodes),",
          "56:  }",
          "57: }",
          "",
          "[Removed Lines]",
          "54:   CreateTime:          time.Now().Add(-6 * time.Hour).UnixNano(),",
          "55:   ModifyTime:          time.Now().Add(-5 * time.Hour).UnixNano(),",
          "",
          "[Added Lines]",
          "54:   CreateTime:          time.Now().UTC().Add(-6 * time.Hour).UnixNano(),",
          "55:   ModifyTime:          time.Now().UTC().Add(-5 * time.Hour).UnixNano(),",
          "",
          "---------------"
        ],
        "nomad/mock/job.go||nomad/mock/job.go": [
          "File: nomad/mock/job.go -> nomad/mock/job.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "144:   CreateIndex:    42,",
          "145:   ModifyIndex:    99,",
          "146:   JobModifyIndex: 99,",
          "148:  }",
          "149:  job.Canonicalize()",
          "150:  return job",
          "",
          "[Removed Lines]",
          "147:   SubmitTime:     time.Now().Add(-6 * time.Hour).UnixNano(),",
          "",
          "[Added Lines]",
          "147:   SubmitTime:     time.Now().UTC().Add(-6 * time.Hour).UnixNano(),",
          "",
          "---------------"
        ],
        "scheduler/reconcile.go||scheduler/reconcile.go": [
          "File: scheduler/reconcile.go -> scheduler/reconcile.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "216:   evalID:                      evalID,",
          "217:   evalPriority:                evalPriority,",
          "218:   supportsDisconnectedClients: supportsDisconnectedClients,",
          "220:   result: &reconcileResults{",
          "221:    attributeUpdates:          make(map[string]*structs.Allocation),",
          "222:    disconnectUpdates:         make(map[string]*structs.Allocation),",
          "",
          "[Removed Lines]",
          "219:   now:                         time.Now(),",
          "",
          "[Added Lines]",
          "219:   now:                         time.Now().UTC(),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "30f771e47c55b7d06c492e36f1cab80ab99c47fd",
      "candidate_info": {
        "commit_hash": "30f771e47c55b7d06c492e36f1cab80ab99c47fd",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/30f771e47c55b7d06c492e36f1cab80ab99c47fd",
        "files": [
          "go.mod",
          "go.sum"
        ],
        "message": "deps: Consolidated update of dependabot PRs (#25311) (#25312)\n\nCo-authored-by: James Rasell <jrasell@hashicorp.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:  github.com/Microsoft/go-winio v0.6.1",
          "19:  github.com/armon/circbuf v0.0.0-20150827004946-bbbad097214e",
          "20:  github.com/armon/go-metrics v0.5.3",
          "24:  github.com/aws/aws-sdk-go-v2/service/ecs v1.53.0",
          "25:  github.com/aws/smithy-go v1.22.3",
          "26:  github.com/container-storage-interface/spec v1.10.0",
          "",
          "[Removed Lines]",
          "21:  github.com/aws/aws-sdk-go-v2 v1.36.2",
          "22:  github.com/aws/aws-sdk-go-v2/config v1.29.7",
          "23:  github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.29",
          "",
          "[Added Lines]",
          "21:  github.com/aws/aws-sdk-go-v2 v1.36.3",
          "22:  github.com/aws/aws-sdk-go-v2/config v1.29.8",
          "23:  github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.30",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:  github.com/gorilla/websocket v1.5.3",
          "46:  github.com/gosuri/uilive v0.0.4",
          "47:  github.com/grpc-ecosystem/go-grpc-middleware v1.4.0",
          "49:  github.com/hashicorp/cli v1.1.6",
          "50:  github.com/hashicorp/consul-template v0.40.0",
          "51:  github.com/hashicorp/consul/api v1.30.0",
          "",
          "[Removed Lines]",
          "48:  github.com/hashicorp/cap v0.7.0",
          "",
          "[Added Lines]",
          "48:  github.com/hashicorp/cap v0.9.0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "54:  github.com/hashicorp/go-bexpr v0.1.14",
          "55:  github.com/hashicorp/go-checkpoint v0.5.0",
          "56:  github.com/hashicorp/go-cleanhttp v0.5.2",
          "58:  github.com/hashicorp/go-cty-funcs v0.0.0-20200930094925-2721b1e36840",
          "59:  github.com/hashicorp/go-discover v0.0.0-20220621183603-a413e131e836",
          "60:  github.com/hashicorp/go-envparse v0.1.0",
          "61:  github.com/hashicorp/go-getter v1.7.8",
          "62:  github.com/hashicorp/go-hclog v1.6.3",
          "63:  github.com/hashicorp/go-immutable-radix/v2 v2.1.0",
          "65:  github.com/hashicorp/go-kms-wrapping/wrappers/awskms/v2 v2.0.10",
          "66:  github.com/hashicorp/go-kms-wrapping/wrappers/azurekeyvault/v2 v2.0.13",
          "67:  github.com/hashicorp/go-kms-wrapping/wrappers/gcpckms/v2 v2.0.12",
          "",
          "[Removed Lines]",
          "57:  github.com/hashicorp/go-connlimit v0.3.0",
          "64:  github.com/hashicorp/go-kms-wrapping/v2 v2.0.17",
          "",
          "[Added Lines]",
          "57:  github.com/hashicorp/go-connlimit v0.3.1",
          "64:  github.com/hashicorp/go-kms-wrapping/v2 v2.0.18",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "129:  github.com/zclconf/go-cty v1.16.2",
          "130:  github.com/zclconf/go-cty-yaml v1.1.0",
          "131:  go.etcd.io/bbolt v1.4.0",
          "133:  golang.org/x/crypto v0.35.0",
          "134:  golang.org/x/mod v0.23.0",
          "135:  golang.org/x/sync v0.11.0",
          "",
          "[Removed Lines]",
          "132:  go.uber.org/goleak v1.2.1",
          "",
          "[Added Lines]",
          "132:  go.uber.org/goleak v1.3.0",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "185:  github.com/apparentlymart/go-textseg/v15 v15.0.0 // indirect",
          "186:  github.com/armon/go-radix v1.0.0 // indirect",
          "187:  github.com/aws/aws-sdk-go v1.55.6 // indirect",
          "191:  github.com/aws/aws-sdk-go-v2/internal/ini v1.8.3 // indirect",
          "192:  github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.12.3 // indirect",
          "197:  github.com/beorn7/perks v1.0.1 // indirect",
          "198:  github.com/bgentry/go-netrc v0.0.0-20140422174119-9fd32a8b3d3d // indirect",
          "199:  github.com/bgentry/speakeasy v0.1.0 // indirect",
          "",
          "[Removed Lines]",
          "188:  github.com/aws/aws-sdk-go-v2/credentials v1.17.60 // indirect",
          "189:  github.com/aws/aws-sdk-go-v2/internal/configsources v1.3.33 // indirect",
          "190:  github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.33 // indirect",
          "193:  github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.14 // indirect",
          "194:  github.com/aws/aws-sdk-go-v2/service/sso v1.24.16 // indirect",
          "195:  github.com/aws/aws-sdk-go-v2/service/ssooidc v1.28.15 // indirect",
          "196:  github.com/aws/aws-sdk-go-v2/service/sts v1.33.15 // indirect",
          "",
          "[Added Lines]",
          "188:  github.com/aws/aws-sdk-go-v2/credentials v1.17.61 // indirect",
          "189:  github.com/aws/aws-sdk-go-v2/internal/configsources v1.3.34 // indirect",
          "190:  github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.34 // indirect",
          "193:  github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.15 // indirect",
          "194:  github.com/aws/aws-sdk-go-v2/service/sso v1.25.0 // indirect",
          "195:  github.com/aws/aws-sdk-go-v2/service/ssooidc v1.29.0 // indirect",
          "196:  github.com/aws/aws-sdk-go-v2/service/sts v1.33.16 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "746: github.com/aws/aws-sdk-go v1.44.122/go.mod h1:y4AeaBuwd2Lk+GepC1E9v0qOiTws0MIWAX4oIKwKHZo=",
          "747: github.com/aws/aws-sdk-go v1.55.6 h1:cSg4pvZ3m8dgYcgqB97MrcdjUmZ1BeMYKUxMMB89IPk=",
          "748: github.com/aws/aws-sdk-go v1.55.6/go.mod h1:eRwEWoyTWFMVYVQzKMNHWP5/RV4xIUGMQfXQHfHkpNU=",
          "761: github.com/aws/aws-sdk-go-v2/internal/ini v1.8.3 h1:bIqFDwgGXXN1Kpp99pDOdKMTTb5d2KyU5X/BZxjOkRo=",
          "762: github.com/aws/aws-sdk-go-v2/internal/ini v1.8.3/go.mod h1:H5O/EsxDWyU+LP/V8i5sm8cxoZgc2fdNR9bxlOFrQTo=",
          "763: github.com/aws/aws-sdk-go-v2/service/ecs v1.53.0 h1:TCQZX4ztlcWXAcZouKh9qJMcVaH/qTidFTfsvJwUI30=",
          "764: github.com/aws/aws-sdk-go-v2/service/ecs v1.53.0/go.mod h1:Ghi1OWUv4+VMEULWiHsKH2gNA3KAcMoLWsvU0eRXvIA=",
          "765: github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.12.3 h1:eAh2A4b5IzM/lum78bZ590jy36+d/aFLgKF/4Vd1xPE=",
          "766: github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.12.3/go.mod h1:0yKJC/kb8sAnmlYa6Zs3QVYqaC8ug2AbnNChv5Ox3uA=",
          "775: github.com/aws/smithy-go v1.22.3 h1:Z//5NuZCSW6R4PhQ93hShNbyBbn8BWCmCVCt+Q8Io5k=",
          "776: github.com/aws/smithy-go v1.22.3/go.mod h1:t1ufH5HMublsJYulve2RKmHDC15xu1f26kHCp/HgceI=",
          "777: github.com/benbjohnson/clock v1.1.0/go.mod h1:J11/hYXuz8f4ySSvYwY0FKfm+ezbsZBKZxNJlLklBHA=",
          "",
          "[Removed Lines]",
          "749: github.com/aws/aws-sdk-go-v2 v1.36.2 h1:Ub6I4lq/71+tPb/atswvToaLGVMxKZvjYDVOWEExOcU=",
          "750: github.com/aws/aws-sdk-go-v2 v1.36.2/go.mod h1:LLXuLpgzEbD766Z5ECcRmi8AzSwfZItDtmABVkRLGzg=",
          "751: github.com/aws/aws-sdk-go-v2/config v1.29.7 h1:71nqi6gUbAUiEQkypHQcNVSFJVUFANpSeUNShiwWX2M=",
          "752: github.com/aws/aws-sdk-go-v2/config v1.29.7/go.mod h1:yqJQ3nh2HWw/uxd56bicyvmDW4KSc+4wN6lL8pYjynU=",
          "753: github.com/aws/aws-sdk-go-v2/credentials v1.17.60 h1:1dq+ELaT5ogfmqtV1eocq8SpOK1NRsuUfmhQtD/XAh4=",
          "754: github.com/aws/aws-sdk-go-v2/credentials v1.17.60/go.mod h1:HDes+fn/xo9VeszXqjBVkxOo/aUy8Mc6QqKvZk32GlE=",
          "755: github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.29 h1:JO8pydejFKmGcUNiiwt75dzLHRWthkwApIvPoyUtXEg=",
          "756: github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.29/go.mod h1:adxZ9i9DRmB8zAT0pO0yGnsmu0geomp5a3uq5XpgOJ8=",
          "757: github.com/aws/aws-sdk-go-v2/internal/configsources v1.3.33 h1:knLyPMw3r3JsU8MFHWctE4/e2qWbPaxDYLlohPvnY8c=",
          "758: github.com/aws/aws-sdk-go-v2/internal/configsources v1.3.33/go.mod h1:EBp2HQ3f+XCB+5J+IoEbGhoV7CpJbnrsd4asNXmTL0A=",
          "759: github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.33 h1:K0+Ne08zqti8J9jwENxZ5NoUyBnaFDTu3apwQJWrwwA=",
          "760: github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.33/go.mod h1:K97stwwzaWzmqxO8yLGHhClbVW1tC6VT1pDLk1pGrq4=",
          "767: github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.14 h1:2scbY6//jy/s8+5vGrk7l1+UtHl0h9A4MjOO2k/TM2E=",
          "768: github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.14/go.mod h1:bRpZPHZpSe5YRHmPfK3h1M7UBFCn2szHzyx0rw04zro=",
          "769: github.com/aws/aws-sdk-go-v2/service/sso v1.24.16 h1:YV6xIKDJp6U7YB2bxfud9IENO1LRpGhe2Tv/OKtPrOQ=",
          "770: github.com/aws/aws-sdk-go-v2/service/sso v1.24.16/go.mod h1:DvbmMKgtpA6OihFJK13gHMZOZrCHttz8wPHGKXqU+3o=",
          "771: github.com/aws/aws-sdk-go-v2/service/ssooidc v1.28.15 h1:kMyK3aKotq1aTBsj1eS8ERJLjqYRRRcsmP33ozlCvlk=",
          "772: github.com/aws/aws-sdk-go-v2/service/ssooidc v1.28.15/go.mod h1:5uPZU7vSNzb8Y0dm75xTikinegPYK3uJmIHQZFq5Aqo=",
          "773: github.com/aws/aws-sdk-go-v2/service/sts v1.33.15 h1:ht1jVmeeo2anR7zDiYJLSnRYnO/9NILXXu42FP3rJg0=",
          "774: github.com/aws/aws-sdk-go-v2/service/sts v1.33.15/go.mod h1:xWZ5cOiFe3czngChE4LhCBqUxNwgfwndEF7XlYP/yD8=",
          "",
          "[Added Lines]",
          "749: github.com/aws/aws-sdk-go-v2 v1.36.3 h1:mJoei2CxPutQVxaATCzDUjcZEjVRdpsiiXi2o38yqWM=",
          "750: github.com/aws/aws-sdk-go-v2 v1.36.3/go.mod h1:LLXuLpgzEbD766Z5ECcRmi8AzSwfZItDtmABVkRLGzg=",
          "751: github.com/aws/aws-sdk-go-v2/config v1.29.8 h1:RpwAfYcV2lr/yRc4lWhUM9JRPQqKgKWmou3LV7UfWP4=",
          "752: github.com/aws/aws-sdk-go-v2/config v1.29.8/go.mod h1:t+G7Fq1OcO8cXTPPXzxQSnj/5Xzdc9jAAD3Xrn9/Mgo=",
          "753: github.com/aws/aws-sdk-go-v2/credentials v1.17.61 h1:Hd/uX6Wo2iUW1JWII+rmyCD7MMhOe7ALwQXN6sKDd1o=",
          "754: github.com/aws/aws-sdk-go-v2/credentials v1.17.61/go.mod h1:L7vaLkwHY1qgW0gG1zG0z/X0sQ5tpIY5iI13+j3qI80=",
          "755: github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.30 h1:x793wxmUWVDhshP8WW2mlnXuFrO4cOd3HLBroh1paFw=",
          "756: github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.30/go.mod h1:Jpne2tDnYiFascUEs2AWHJL9Yp7A5ZVy3TNyxaAjD6M=",
          "757: github.com/aws/aws-sdk-go-v2/internal/configsources v1.3.34 h1:ZK5jHhnrioRkUNOc+hOgQKlUL5JeC3S6JgLxtQ+Rm0Q=",
          "758: github.com/aws/aws-sdk-go-v2/internal/configsources v1.3.34/go.mod h1:p4VfIceZokChbA9FzMbRGz5OV+lekcVtHlPKEO0gSZY=",
          "759: github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.34 h1:SZwFm17ZUNNg5Np0ioo/gq8Mn6u9w19Mri8DnJ15Jf0=",
          "760: github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.34/go.mod h1:dFZsC0BLo346mvKQLWmoJxT+Sjp+qcVR1tRVHQGOH9Q=",
          "767: github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.15 h1:dM9/92u2F1JbDaGooxTq18wmmFzbJRfXfVfy96/1CXM=",
          "768: github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.15/go.mod h1:SwFBy2vjtA0vZbjjaFtfN045boopadnoVPhu4Fv66vY=",
          "769: github.com/aws/aws-sdk-go-v2/service/sso v1.25.0 h1:2U9sF8nKy7UgyEeLiZTRg6ShBS22z8UnYpV6aRFL0is=",
          "770: github.com/aws/aws-sdk-go-v2/service/sso v1.25.0/go.mod h1:qs4a9T5EMLl/Cajiw2TcbNt2UNo/Hqlyp+GiuG4CFDI=",
          "771: github.com/aws/aws-sdk-go-v2/service/ssooidc v1.29.0 h1:wjAdc85cXdQR5uLx5FwWvGIHm4OPJhTyzUHU8craXtE=",
          "772: github.com/aws/aws-sdk-go-v2/service/ssooidc v1.29.0/go.mod h1:MlYRNmYu/fGPoxBQVvBYr9nyr948aY/WLUvwBMBJubs=",
          "773: github.com/aws/aws-sdk-go-v2/service/sts v1.33.16 h1:BHEK2Q/7CMRMCb3nySi/w8UbIcPhKvYP5s1xf8/izn0=",
          "774: github.com/aws/aws-sdk-go-v2/service/sts v1.33.16/go.mod h1:cQnB8CUnxbMU82JvlqjKR2HBOm3fe9pWorWBza6MBJ4=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1154: github.com/grpc-ecosystem/grpc-gateway/v2 v2.7.0/go.mod h1:hgWBS7lorOAVIJEQMi4ZsPv9hVvWI6+ch50m39Pf2Ks=",
          "1155: github.com/grpc-ecosystem/grpc-gateway/v2 v2.11.3 h1:lLT7ZLSzGLI08vc9cpd+tYmNWjdKDqyr/2L+f6U12Fk=",
          "1156: github.com/grpc-ecosystem/grpc-gateway/v2 v2.11.3/go.mod h1:o//XUCC/F+yRGJoPO/VU0GSB0f8Nhgmxx0VIRUvaC0w=",
          "1159: github.com/hashicorp/cli v1.1.6 h1:CMOV+/LJfL1tXCOKrgAX0uRKnzjj/mpmqNXloRSy2K8=",
          "1160: github.com/hashicorp/cli v1.1.6/go.mod h1:MPon5QYlgjjo0BSoAiN0ESeT5fRzDjVRp+uioJ0piz4=",
          "1161: github.com/hashicorp/consul-template v0.40.0 h1:hEBUdCgC4+NgtLvG+Rjmotyi9trKzE0/81ZYXvdyLCU=",
          "",
          "[Removed Lines]",
          "1157: github.com/hashicorp/cap v0.7.0 h1:atLIEU5lJslYXo1qsv7RtUL1HrJVVxnfkErIT3uxLp0=",
          "1158: github.com/hashicorp/cap v0.7.0/go.mod h1:UynhCoGX3pxL0OfVrfMzPWAyjMYp96bk11BNTf2zt8o=",
          "",
          "[Added Lines]",
          "1157: github.com/hashicorp/cap v0.9.0 h1:B5IZT7VL1ruSCtVBXSIyWDpkAFiEZt4bQFk1e2WwCb0=",
          "1158: github.com/hashicorp/cap v0.9.0/go.mod h1:J00roe8PFFYXfedm3WcO6sGVaKeYElmNOuqfi8Uero4=",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1177: github.com/hashicorp/go-cleanhttp v0.5.1/go.mod h1:JpRdi6/HCYpAwUzNwuwqhbovhLtngrth3wmdIIUrZ80=",
          "1178: github.com/hashicorp/go-cleanhttp v0.5.2 h1:035FKYIWjmULyFRBKPs8TBQoi0x6d9G4xc9neXJWAZQ=",
          "1179: github.com/hashicorp/go-cleanhttp v0.5.2/go.mod h1:kO/YDlP8L1346E6Sodw+PrpBSV4/SoxCXGY6BqNFT48=",
          "1182: github.com/hashicorp/go-cty-funcs v0.0.0-20200930094925-2721b1e36840 h1:kgvybwEeu0SXktbB2y3uLHX9lklLo+nzUwh59A3jzQc=",
          "1183: github.com/hashicorp/go-cty-funcs v0.0.0-20200930094925-2721b1e36840/go.mod h1:Abjk0jbRkDaNCzsRhOv2iDCofYpX1eVsjozoiK63qLA=",
          "1184: github.com/hashicorp/go-discover v0.0.0-20220621183603-a413e131e836 h1:4wEh+GhB7WtM3ZBlqx7DJ32m4fVt4rK1XeEEez3aook=",
          "",
          "[Removed Lines]",
          "1180: github.com/hashicorp/go-connlimit v0.3.0 h1:oAojHGjFxUTTTA8c5XXnDqWJ2HLuWbDiBPTpWvNzvqM=",
          "1181: github.com/hashicorp/go-connlimit v0.3.0/go.mod h1:OUj9FGL1tPIhl/2RCfzYHrIiWj+VVPGNyVPnUX8AqS0=",
          "",
          "[Added Lines]",
          "1180: github.com/hashicorp/go-connlimit v0.3.1 h1:v5A31V0FfXNYAtWP6BFtRhs8Nhr650a1HJmwnQ2pM7U=",
          "1181: github.com/hashicorp/go-connlimit v0.3.1/go.mod h1:Duz6KJRveeIrTMrat9ZxH/FaWOxDUmqDumz4qxGdQVM=",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1201: github.com/hashicorp/go-immutable-radix v1.3.1/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=",
          "1202: github.com/hashicorp/go-immutable-radix/v2 v2.1.0 h1:CUW5RYIcysz+D3B+l1mDeXrQ7fUvGGCwJfdASSzbrfo=",
          "1203: github.com/hashicorp/go-immutable-radix/v2 v2.1.0/go.mod h1:hgdqLXA4f6NIjRVisM1TJ9aOJVNRqKZj+xDGF6m7PBw=",
          "1206: github.com/hashicorp/go-kms-wrapping/wrappers/awskms/v2 v2.0.10 h1:YOSmJpqZt2X3KL0JUlKdih3WjpDlS9jQPyr6Etdh1GE=",
          "1207: github.com/hashicorp/go-kms-wrapping/wrappers/awskms/v2 v2.0.10/go.mod h1:eX4b0InOUfJ3NjfNWlJruBDT3rHXxOVw+7qNFmtjNbo=",
          "1208: github.com/hashicorp/go-kms-wrapping/wrappers/azurekeyvault/v2 v2.0.13 h1:Vh/i9Q0/2dpbK5FUPnpZJSIE6iPLe471Yvmi+CPnpS0=",
          "",
          "[Removed Lines]",
          "1204: github.com/hashicorp/go-kms-wrapping/v2 v2.0.17 h1:UjjwDABbv2Usc+ESZTC4DXimCRIyWUDBJe/LOUFxe/M=",
          "1205: github.com/hashicorp/go-kms-wrapping/v2 v2.0.17/go.mod h1:M79wTAvbhiVLo1WmglCPBgI5CEETtZWh18B3eXipmFc=",
          "",
          "[Added Lines]",
          "1204: github.com/hashicorp/go-kms-wrapping/v2 v2.0.18 h1:DLfC677GfKEpSAFpEWvl1vXsGpEcSHmbhBaPLrdDQHc=",
          "1205: github.com/hashicorp/go-kms-wrapping/v2 v2.0.18/go.mod h1:t/eaR/mi2mw3klfl1WEAuiLKrlZ/Q8cosmsT+RIPLu0=",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1736: go.opentelemetry.io/proto/otlp v1.0.0/go.mod h1:Sy6pihPLfYHkr3NkUbEhGHFhINUSI/v80hjKIs5JXpM=",
          "1737: go.uber.org/atomic v1.7.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=",
          "1738: go.uber.org/goleak v1.1.10/go.mod h1:8a7PlsEVH3e/a/GLqe5IIrQx6GzcnRmZEufDUTk4A7A=",
          "1741: go.uber.org/multierr v1.6.0/go.mod h1:cdWPpRnG4AhwMwsgIHip0KRBQjJy5kYEpYjJxpXp9iU=",
          "1742: go.uber.org/zap v1.18.1/go.mod h1:xg/QME4nWcxGxrpdeYfq7UvYrLh66cuVKdrbD1XF/NI=",
          "1743: golang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=",
          "",
          "[Removed Lines]",
          "1739: go.uber.org/goleak v1.2.1 h1:NBol2c7O1ZokfZ0LEU9K6Whx/KnwvepVetCUhtKja4A=",
          "1740: go.uber.org/goleak v1.2.1/go.mod h1:qlT2yGI9QafXHhZZLxlSuNsMw3FFLxBr+tBRlmO1xH4=",
          "",
          "[Added Lines]",
          "1739: go.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=",
          "1740: go.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "178872874de0022fa2a2a4a24d8f251c1a255231",
      "candidate_info": {
        "commit_hash": "178872874de0022fa2a2a4a24d8f251c1a255231",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/178872874de0022fa2a2a4a24d8f251c1a255231",
        "files": [
          "website/content/tools/index.mdx"
        ],
        "message": "Backport of Add Nomad Tools into release/1.9.x (#24431)\n\nCo-authored-by: Shantanu Gadgil <shantanugadgil@users.noreply.github.com>",
        "before_after_code_files": [
          "website/content/tools/index.mdx||website/content/tools/index.mdx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "website/content/tools/index.mdx||website/content/tools/index.mdx": [
          "File: website/content/tools/index.mdx -> website/content/tools/index.mdx",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: - [Nomad Pipeline](https://github.com/HyperBadger/nomad-pipeline) - A tool to make running pipeline-style workloads on Nomad",
          "46: - [Nomad Port Forward](https://github.com/Mongey/nomad-port-forward) - A tool for forwarding ports from a Nomad job to your local machine",
          "47: - [Nomad Toast](https://github.com/jrasell/nomad-toast) - A tool for receiving notifications based on HashiCorp Nomad events",
          "48: - [Nomad Vector Logger](https://github.com/mr-karan/nomad-vector-logger) -  A daemon which continuously watches jobs running in a Nomad cluster and templates out a Vector configuration file which can be used to collect application logs enriched with Nomad metadata.",
          "49: - [Nomad Watcher](https://github.com/blalor/nomad-watcher) - A simple service that watches Nomad's nodes, jobs, deployments, evaluations, allocations, and task states, and writes the events to a file",
          "50: - [Nomadgen](https://github.com/smintz/nomadgen) - Craft your Hashicorp's Nomad job specs in python.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48: - [Nomad Tools](https://github.com/Kamilcuk/nomad-tools) - Set of tools and utilities to ease interacting with HashiCorp Nomad scheduling solution.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9a8b867f2b3cb90eadaa08f4885d92d97878a2ee",
      "candidate_info": {
        "commit_hash": "9a8b867f2b3cb90eadaa08f4885d92d97878a2ee",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/9a8b867f2b3cb90eadaa08f4885d92d97878a2ee",
        "files": [
          "go.mod",
          "go.sum"
        ],
        "message": "deps: Update consul-template to 0.40.0 (#25141)\n\nbackport of commit 37fb418a160a380ee20dc19ea3eaecf0bbd27e64\n\nCo-authored-by: James Rasell <jrasell@users.noreply.github.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:  github.com/grpc-ecosystem/go-grpc-middleware v1.4.0",
          "48:  github.com/hashicorp/cap v0.7.0",
          "49:  github.com/hashicorp/cli v1.1.6",
          "51:  github.com/hashicorp/consul/api v1.30.0",
          "52:  github.com/hashicorp/consul/sdk v0.16.1",
          "53:  github.com/hashicorp/cronexpr v1.1.2",
          "",
          "[Removed Lines]",
          "50:  github.com/hashicorp/consul-template v0.39.0",
          "",
          "[Added Lines]",
          "50:  github.com/hashicorp/consul-template v0.40.0",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "1158: github.com/hashicorp/cap v0.7.0/go.mod h1:UynhCoGX3pxL0OfVrfMzPWAyjMYp96bk11BNTf2zt8o=",
          "1159: github.com/hashicorp/cli v1.1.6 h1:CMOV+/LJfL1tXCOKrgAX0uRKnzjj/mpmqNXloRSy2K8=",
          "1160: github.com/hashicorp/cli v1.1.6/go.mod h1:MPon5QYlgjjo0BSoAiN0ESeT5fRzDjVRp+uioJ0piz4=",
          "1163: github.com/hashicorp/consul/api v1.30.0 h1:ArHVMMILb1nQv8vZSGIwwQd2gtc+oSQZ6CalyiyH2XQ=",
          "1164: github.com/hashicorp/consul/api v1.30.0/go.mod h1:B2uGchvaXVW2JhFoS8nqTxMD5PBykr4ebY4JWHTTeLM=",
          "1165: github.com/hashicorp/consul/sdk v0.16.1 h1:V8TxTnImoPD5cj0U9Spl0TUxcytjcbbJeADFF07KdHg=",
          "",
          "[Removed Lines]",
          "1161: github.com/hashicorp/consul-template v0.39.0 h1:Yp2iqdVw3pYW4RbNKPNF/dNpJWEasnAhUTC+wDPtDYM=",
          "1162: github.com/hashicorp/consul-template v0.39.0/go.mod h1:eZmtllcY+RK0y/DPXdCuiMWr3m9OPlzBwsmBv1jbCxI=",
          "",
          "[Added Lines]",
          "1161: github.com/hashicorp/consul-template v0.40.0 h1:hEBUdCgC4+NgtLvG+Rjmotyi9trKzE0/81ZYXvdyLCU=",
          "1162: github.com/hashicorp/consul-template v0.40.0/go.mod h1:KBUHKdBmpIgITW3vgRWptpVVPpsJRMGno3KY/NV3lAA=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "30ccde5c3c31a7a19809fdb7a715db3d5c483476",
      "candidate_info": {
        "commit_hash": "30ccde5c3c31a7a19809fdb7a715db3d5c483476",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/30ccde5c3c31a7a19809fdb7a715db3d5c483476",
        "files": [
          ".changelog/24312.txt",
          "command/agent/job_endpoint.go",
          "command/agent/job_endpoint_test.go",
          "website/content/api-docs/jobs.mdx"
        ],
        "message": "backport of commit a036b75aef1eb10afa08f31dbae8cbb55423bf9e (#24393)\n\nCo-authored-by: Daniel Bennett <dbennett@hashicorp.com>",
        "before_after_code_files": [
          "command/agent/job_endpoint.go||command/agent/job_endpoint.go",
          "command/agent/job_endpoint_test.go||command/agent/job_endpoint_test.go",
          "website/content/api-docs/jobs.mdx||website/content/api-docs/jobs.mdx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "command/agent/job_endpoint.go||command/agent/job_endpoint.go": [
          "File: command/agent/job_endpoint.go -> command/agent/job_endpoint.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: import (",
          "7:  \"fmt\"",
          "8:  \"maps\"",
          "9:  \"net/http\"",
          "10:  \"slices\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8:  \"io\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "88:  case strings.HasSuffix(path, \"/dispatch\"):",
          "89:   jobID := strings.TrimSuffix(path, \"/dispatch\")",
          "90:   return s.jobDispatchRequest(resp, req, jobID)",
          "91:  case strings.HasSuffix(path, \"/versions\"):",
          "92:   jobID := strings.TrimSuffix(path, \"/versions\")",
          "93:   return s.jobVersions(resp, req, jobID)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "92:  case strings.HasSuffix(path, \"/dispatch/payload\"):",
          "93:   jobID := strings.TrimSuffix(path, \"/dispatch/payload\")",
          "94:   return s.jobDispatchPayloadRequest(resp, req, jobID)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "896:  return out, nil",
          "897: }",
          "900: func (s *HTTPServer) JobsParseRequest(resp http.ResponseWriter, req *http.Request) (interface{}, error) {",
          "901:  if req.Method != http.MethodPut && req.Method != http.MethodPost {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "903: func (s *HTTPServer) jobDispatchPayloadRequest(resp http.ResponseWriter, req *http.Request, jobID string) (interface{}, error) {",
          "904:  if req.Method != http.MethodPut && req.Method != http.MethodPost {",
          "905:   return nil, CodedError(405, ErrInvalidMethod)",
          "906:  }",
          "908:  args := structs.JobDispatchRequest{}",
          "909:  var err error",
          "910:  args.JobID = jobID",
          "911:  args.Payload, err = io.ReadAll(req.Body)",
          "912:  if err != nil {",
          "913:   return nil, CodedError(400, err.Error())",
          "914:  }",
          "917:  s.parseWriteRequest(req, &args.WriteRequest)",
          "919:  var out structs.JobDispatchResponse",
          "920:  if err := s.agent.RPC(\"Job.Dispatch\", &args, &out); err != nil {",
          "921:   return nil, err",
          "922:  }",
          "923:  setIndex(resp, out.Index)",
          "924:  return out, nil",
          "925: }",
          "",
          "---------------"
        ],
        "command/agent/job_endpoint_test.go||command/agent/job_endpoint_test.go": [
          "File: command/agent/job_endpoint_test.go -> command/agent/job_endpoint_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: package agent",
          "6: import (",
          "7:  \"fmt\"",
          "8:  \"net/http\"",
          "9:  \"net/http/httptest\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7:  \"bytes\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2003:  })",
          "2004: }",
          "2006: func TestHTTP_JobRevert(t *testing.T) {",
          "2007:  ci.Parallel(t)",
          "2008:  httpTest(t, nil, func(s *TestAgent) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2007: func TestHTTP_JobDispatchPayload(t *testing.T) {",
          "2008:  ci.Parallel(t)",
          "2009:  httpTest(t, nil, func(s *TestAgent) {",
          "2011:   job := mock.BatchJob()",
          "2012:   job.ParameterizedJob = &structs.ParameterizedJobConfig{",
          "2013:    Payload: \"required\",",
          "2014:   }",
          "2017:   var resp structs.JobRegisterResponse",
          "2018:   must.NoError(t, s.Agent.RPC(\"Job.Register\",",
          "2019:    &structs.JobRegisterRequest{",
          "2020:     Job: job,",
          "2021:     WriteRequest: structs.WriteRequest{",
          "2022:      Region:    \"global\",",
          "2023:      Namespace: structs.DefaultNamespace,",
          "2024:     },",
          "2025:    }, &resp))",
          "2028:   url := \"/v1/job/\" + job.ID + \"/dispatch/payload\"",
          "2029:   body := bytes.NewReader([]byte(\"any body at all\"))",
          "2030:   req, err := http.NewRequest(http.MethodPut, url, body)",
          "2031:   must.NoError(t, err)",
          "2034:   respW := httptest.NewRecorder()",
          "2035:   obj, err := s.Server.JobSpecificRequest(respW, req)",
          "2036:   must.NoError(t, err)",
          "2037:   must.Eq(t, http.StatusOK, respW.Result().StatusCode)",
          "2040:   dispatch := obj.(structs.JobDispatchResponse)",
          "2041:   must.NotEq(t, \"\", dispatch.EvalID, must.Sprintf(\"expect EvalID in: %v\", dispatch))",
          "2042:   must.NotEq(t, \"\", dispatch.DispatchedJobID, must.Sprintf(\"expect DispatchedJobID in: %v\", dispatch))",
          "2043:  })",
          "2044: }",
          "",
          "---------------"
        ],
        "website/content/api-docs/jobs.mdx||website/content/api-docs/jobs.mdx": [
          "File: website/content/api-docs/jobs.mdx -> website/content/api-docs/jobs.mdx",
          "--- Hunk 1 ---",
          "[Context before]",
          "1813: }",
          "1814: ```",
          "1816: ## Revert to older Job Version",
          "1818: This endpoint reverts the job to an older version.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1816: ## Dispatch Job with raw Payload body",
          "1818: This endpoint dispatches a new instance of a parameterized job using the full",
          "1819: request body as the `Payload` as described in [Dispatch Job](#dispatch-job).",
          "1821: | Method | Path                               | Produces           |",
          "1822: | ------ | ---------------------------------- | ------------------ |",
          "1823: | `POST` | `/v1/job/:job_id/dispatch/payload` | `application/json` |",
          "1825: The table below shows this endpoint's support for",
          "1826: [blocking queries](/nomad/api-docs#blocking-queries) and",
          "1827: [required ACLs](/nomad/api-docs#acls).",
          "1829: | Blocking Queries | ACL Required             |",
          "1830: | ---------------- | ------------------------ |",
          "1831: | `NO`             | `namespace:dispatch-job` |",
          "1833: ### Parameters",
          "1835: - `:job_id` `(string: <required>)` - Specifies the ID of the job. This is",
          "1836: specified as part of the path.",
          "1838: ### Sample Payload",
          "1840: ```",
          "1841: any HTTP request body, JSON or otherwise, becomes the dispatch Payload",
          "1842: ```",
          "1844: ### Sample Request",
          "1846: ```shell-session",
          "1847: $ curl \\",
          "1848:     --request POST \\",
          "1849:     --data 'anything at all' \\",
          "1850:     https://localhost:4646/v1/job/my-job/dispatch",
          "1851: ```",
          "1853: ### Sample Response",
          "1855: ```json",
          "1856: {",
          "1857:   \"DispatchedJobID\": \"param/dispatch-1730920906-81821d1f\",",
          "1858:   \"EvalCreateIndex\": 179,",
          "1859:   \"EvalID\": \"5e973383-8d59-3f33-4496-72112a882605\",",
          "1860:   \"Index\": 179,",
          "1861:   \"JobCreateIndex\": 178",
          "1862: }",
          "1863: ```",
          "",
          "---------------"
        ]
      }
    }
  ]
}