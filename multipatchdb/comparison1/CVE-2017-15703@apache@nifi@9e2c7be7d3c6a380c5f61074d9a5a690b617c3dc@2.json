{
  "cve_id": "CVE-2017-15703",
  "cve_desc": "Any authenticated user (valid client certificate but without ACL permissions) could upload a template which contained malicious code and caused a denial of service via Java deserialization attack. The fix to properly handle Java deserialization was applied on the Apache NiFi 1.4.0 release. Users running a prior 1.x release should upgrade to the appropriate release.",
  "repo": "apache/nifi",
  "patch_hash": "9e2c7be7d3c6a380c5f61074d9a5a690b617c3dc",
  "patch_info": {
    "commit_hash": "9e2c7be7d3c6a380c5f61074d9a5a690b617c3dc",
    "repo": "apache/nifi",
    "commit_url": "https://github.com/apache/nifi/commit/9e2c7be7d3c6a380c5f61074d9a5a690b617c3dc",
    "files": [
      "nifi-commons/nifi-security-utils/pom.xml",
      "nifi-commons/nifi-security-utils/src/main/java/org/apache/nifi/security/xml/XmlUtils.java",
      "nifi-commons/nifi-security-utils/src/test/groovy/org/apache/nifi/security/xml/XmlUtilsTest.groovy",
      "nifi-commons/nifi-security-utils/src/test/resources/xxe_template.xml",
      "nifi-commons/nifi-site-to-site-client/src/main/java/org/apache/nifi/remote/cluster/ClusterNodeInformation.java",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-authorizer/pom.xml",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-authorizer/src/main/java/org/apache/nifi/authorization/AuthorizerFactoryBean.java",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-file-authorizer/src/main/java/org/apache/nifi/authorization/FileAccessPolicyProvider.java",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-file-authorizer/src/main/java/org/apache/nifi/authorization/FileUserGroupProvider.java",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster-protocol/src/main/java/org/apache/nifi/cluster/protocol/HeartbeatPayload.java",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster-protocol/src/main/java/org/apache/nifi/cluster/protocol/jaxb/JaxbProtocolContext.java",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster/src/main/java/org/apache/nifi/cluster/coordination/heartbeat/ClusterProtocolHeartbeatMonitor.java",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/cluster/BulletinsPayload.java",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/TemplateUtils.java",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/persistence/StandardSnippetDeserializer.java",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/persistence/TemplateDeserializer.java",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/test/java/org/apache/nifi/persistence/TemplateSerializerTest.java",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/api/ProcessGroupResource.java",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-security/pom.xml",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-security/src/main/java/org/apache/nifi/web/security/spring/LoginIdentityProviderFactoryBean.java",
      "nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-model/pom.xml",
      "nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-model/src/main/java/org/apache/nifi/update/attributes/serde/CriteriaSerDe.java"
    ],
    "message": "NIFI-4353 - Added XmlUtils class. - Added unit test. - Added XXE test resource. - Refactored JAXB unmarshalling globally to prevent XXE attacks. - Refactored duplicated/legacy code. - Cleaned up commented code. - Switched from FileInputStream back to StreamSource in AuthorizerFactoryBean. - This closes #2134",
    "before_after_code_files": [
      "nifi-commons/nifi-security-utils/src/main/java/org/apache/nifi/security/xml/XmlUtils.java||nifi-commons/nifi-security-utils/src/main/java/org/apache/nifi/security/xml/XmlUtils.java",
      "nifi-commons/nifi-security-utils/src/test/groovy/org/apache/nifi/security/xml/XmlUtilsTest.groovy||nifi-commons/nifi-security-utils/src/test/groovy/org/apache/nifi/security/xml/XmlUtilsTest.groovy",
      "nifi-commons/nifi-site-to-site-client/src/main/java/org/apache/nifi/remote/cluster/ClusterNodeInformation.java||nifi-commons/nifi-site-to-site-client/src/main/java/org/apache/nifi/remote/cluster/ClusterNodeInformation.java",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-authorizer/src/main/java/org/apache/nifi/authorization/AuthorizerFactoryBean.java||nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-authorizer/src/main/java/org/apache/nifi/authorization/AuthorizerFactoryBean.java",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-file-authorizer/src/main/java/org/apache/nifi/authorization/FileAccessPolicyProvider.java||nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-file-authorizer/src/main/java/org/apache/nifi/authorization/FileAccessPolicyProvider.java",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-file-authorizer/src/main/java/org/apache/nifi/authorization/FileUserGroupProvider.java||nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-file-authorizer/src/main/java/org/apache/nifi/authorization/FileUserGroupProvider.java",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster-protocol/src/main/java/org/apache/nifi/cluster/protocol/HeartbeatPayload.java||nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster-protocol/src/main/java/org/apache/nifi/cluster/protocol/HeartbeatPayload.java",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster-protocol/src/main/java/org/apache/nifi/cluster/protocol/jaxb/JaxbProtocolContext.java||nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster-protocol/src/main/java/org/apache/nifi/cluster/protocol/jaxb/JaxbProtocolContext.java",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster/src/main/java/org/apache/nifi/cluster/coordination/heartbeat/ClusterProtocolHeartbeatMonitor.java||nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster/src/main/java/org/apache/nifi/cluster/coordination/heartbeat/ClusterProtocolHeartbeatMonitor.java",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/cluster/BulletinsPayload.java||nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/cluster/BulletinsPayload.java",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/TemplateUtils.java||nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/TemplateUtils.java",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/persistence/StandardSnippetDeserializer.java||nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/persistence/StandardSnippetDeserializer.java",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/persistence/TemplateDeserializer.java||nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/persistence/TemplateDeserializer.java",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/test/java/org/apache/nifi/persistence/TemplateSerializerTest.java||nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/test/java/org/apache/nifi/persistence/TemplateSerializerTest.java",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/api/ProcessGroupResource.java||nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/api/ProcessGroupResource.java",
      "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-security/src/main/java/org/apache/nifi/web/security/spring/LoginIdentityProviderFactoryBean.java||nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-security/src/main/java/org/apache/nifi/web/security/spring/LoginIdentityProviderFactoryBean.java",
      "nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-model/src/main/java/org/apache/nifi/update/attributes/serde/CriteriaSerDe.java||nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-model/src/main/java/org/apache/nifi/update/attributes/serde/CriteriaSerDe.java"
    ]
  },
  "patch_diff": {
    "nifi-commons/nifi-security-utils/src/main/java/org/apache/nifi/security/xml/XmlUtils.java||nifi-commons/nifi-security-utils/src/main/java/org/apache/nifi/security/xml/XmlUtils.java": [
      "File: nifi-commons/nifi-security-utils/src/main/java/org/apache/nifi/security/xml/XmlUtils.java -> nifi-commons/nifi-security-utils/src/main/java/org/apache/nifi/security/xml/XmlUtils.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "17: package org.apache.nifi.security.xml;",
      "19: import javax.xml.stream.XMLInputFactory;",
      "20: import javax.xml.stream.XMLStreamException;",
      "21: import javax.xml.stream.XMLStreamReader;",
      "22: import javax.xml.transform.stream.StreamSource;",
      "23: import java.io.InputStream;",
      "25: public class XmlUtils {",
      "27:     public static XMLStreamReader createSafeReader(InputStream inputStream) throws XMLStreamException {",
      "28:         if (inputStream == null) {",
      "29:             throw new IllegalArgumentException(\"The provided input stream cannot be null\");",
      "30:         }",
      "31:         return createSafeReader(new StreamSource(inputStream));",
      "32:     }",
      "34:     public static XMLStreamReader createSafeReader(StreamSource source) throws XMLStreamException {",
      "35:         if (source == null) {",
      "36:             throw new IllegalArgumentException(\"The provided source cannot be null\");",
      "37:         }",
      "39:         XMLInputFactory xif = XMLInputFactory.newFactory();",
      "40:         xif.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);",
      "41:         xif.setProperty(XMLInputFactory.SUPPORT_DTD, false);",
      "42:         return xif.createXMLStreamReader(source);",
      "43:     }",
      "44: }",
      "",
      "---------------"
    ],
    "nifi-commons/nifi-security-utils/src/test/groovy/org/apache/nifi/security/xml/XmlUtilsTest.groovy||nifi-commons/nifi-security-utils/src/test/groovy/org/apache/nifi/security/xml/XmlUtilsTest.groovy": [
      "File: nifi-commons/nifi-security-utils/src/test/groovy/org/apache/nifi/security/xml/XmlUtilsTest.groovy -> nifi-commons/nifi-security-utils/src/test/groovy/org/apache/nifi/security/xml/XmlUtilsTest.groovy",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "17: package org.apache.nifi.security.xml",
      "19: import org.junit.After",
      "20: import org.junit.Before",
      "21: import org.junit.BeforeClass",
      "22: import org.junit.Test",
      "23: import org.junit.runner.RunWith",
      "24: import org.junit.runners.JUnit4",
      "25: import org.slf4j.Logger",
      "26: import org.slf4j.LoggerFactory",
      "28: import javax.xml.bind.JAXBContext",
      "29: import javax.xml.bind.UnmarshalException",
      "30: import javax.xml.bind.Unmarshaller",
      "31: import javax.xml.bind.annotation.XmlAccessType",
      "32: import javax.xml.bind.annotation.XmlAccessorType",
      "33: import javax.xml.bind.annotation.XmlAttribute",
      "34: import javax.xml.bind.annotation.XmlRootElement",
      "35: import javax.xml.stream.XMLStreamReader",
      "37: import static groovy.test.GroovyAssert.shouldFail",
      "39: @RunWith(JUnit4.class)",
      "40: class XmlUtilsTest {",
      "41:     private static final Logger logger = LoggerFactory.getLogger(XmlUtilsTest.class)",
      "43:     @BeforeClass",
      "44:     static void setUpOnce() throws Exception {",
      "45:         logger.metaClass.methodMissing = { String name, args ->",
      "46:             logger.info(\"[${name?.toUpperCase()}] ${(args as List).join(\" \")}\")",
      "47:         }",
      "48:     }",
      "50:     @Before",
      "51:     void setUp() throws Exception {",
      "53:     }",
      "55:     @After",
      "56:     void tearDown() throws Exception {",
      "58:     }",
      "60:     @Test",
      "61:     void testShouldHandleXXEInUnmarshal() {",
      "63:         final String XXE_TEMPLATE_FILEPATH = \"src/test/resources/xxe_template.xml\"",
      "64:         InputStream templateStream = new File(XXE_TEMPLATE_FILEPATH).newInputStream()",
      "66:         JAXBContext context = JAXBContext.newInstance(XmlObject.class)",
      "69:         def msg = shouldFail(UnmarshalException) {",
      "70:             Unmarshaller unmarshaller = context.createUnmarshaller()",
      "71:             XMLStreamReader xsr = XmlUtils.createSafeReader(templateStream)",
      "72:             def parsed = unmarshaller.unmarshal(xsr, XmlObject.class)",
      "73:             logger.info(\"Unmarshalled ${parsed.toString()}\")",
      "74:         }",
      "77:         logger.expected(msg)",
      "78:         assert msg =~ \"XMLStreamException: ParseError \"",
      "79:     }",
      "80: }",
      "82: @XmlAccessorType( XmlAccessType.NONE )",
      "83: @XmlRootElement(name = \"object\")",
      "84: class XmlObject {",
      "85:     @XmlAttribute",
      "86:     String name",
      "88:     @XmlAttribute",
      "89:     String description",
      "91:     @XmlAttribute",
      "92:     String groupId",
      "94:     @XmlAttribute",
      "95:     String timestamp",
      "96: }",
      "",
      "---------------"
    ],
    "nifi-commons/nifi-site-to-site-client/src/main/java/org/apache/nifi/remote/cluster/ClusterNodeInformation.java||nifi-commons/nifi-site-to-site-client/src/main/java/org/apache/nifi/remote/cluster/ClusterNodeInformation.java": [
      "File: nifi-commons/nifi-site-to-site-client/src/main/java/org/apache/nifi/remote/cluster/ClusterNodeInformation.java -> nifi-commons/nifi-site-to-site-client/src/main/java/org/apache/nifi/remote/cluster/ClusterNodeInformation.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.InputStream;",
      "20: import java.io.OutputStream;",
      "21: import java.util.Collection;",
      "23: import javax.xml.bind.JAXBContext;",
      "24: import javax.xml.bind.JAXBException;",
      "25: import javax.xml.bind.Marshaller;",
      "26: import javax.xml.bind.Unmarshaller;",
      "27: import javax.xml.bind.annotation.XmlRootElement;",
      "28: import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;",
      "30: @XmlRootElement",
      "31: public class ClusterNodeInformation {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28: import javax.xml.stream.XMLStreamException;",
      "29: import javax.xml.stream.XMLStreamReader;",
      "30: import org.apache.nifi.security.xml.XmlUtils;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "61:     }",
      "63:     public static ClusterNodeInformation unmarshal(final InputStream is) throws JAXBException {",
      "66:     }",
      "67: }",
      "",
      "[Removed Lines]",
      "64:         final Unmarshaller unmarshaller = JAXB_CONTEXT.createUnmarshaller();",
      "65:         return (ClusterNodeInformation) unmarshaller.unmarshal(is);",
      "",
      "[Added Lines]",
      "66:         try {",
      "67:             final Unmarshaller unmarshaller = JAXB_CONTEXT.createUnmarshaller();",
      "68:             final XMLStreamReader xsr = XmlUtils.createSafeReader(is);",
      "69:             return (ClusterNodeInformation) unmarshaller.unmarshal(xsr);",
      "70:         } catch (XMLStreamException e) {",
      "71:             throw new JAXBException(\"Error unmarshalling the cluster node information\", e);",
      "72:         }",
      "",
      "---------------"
    ],
    "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-authorizer/src/main/java/org/apache/nifi/authorization/AuthorizerFactoryBean.java||nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-authorizer/src/main/java/org/apache/nifi/authorization/AuthorizerFactoryBean.java": [
      "File: nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-authorizer/src/main/java/org/apache/nifi/authorization/AuthorizerFactoryBean.java -> nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-authorizer/src/main/java/org/apache/nifi/authorization/AuthorizerFactoryBean.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "17: package org.apache.nifi.authorization;",
      "19: import org.apache.commons.lang3.StringUtils;",
      "20: import org.apache.nifi.authorization.annotation.AuthorizerContext;",
      "21: import org.apache.nifi.authorization.exception.AuthorizationAccessException;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "19: import java.io.File;",
      "20: import java.lang.reflect.Constructor;",
      "21: import java.lang.reflect.Field;",
      "22: import java.lang.reflect.InvocationTargetException;",
      "23: import java.lang.reflect.Method;",
      "24: import java.net.URL;",
      "25: import java.net.URLClassLoader;",
      "26: import java.util.HashMap;",
      "27: import java.util.List;",
      "28: import java.util.Map;",
      "29: import javax.xml.XMLConstants;",
      "30: import javax.xml.bind.JAXBContext;",
      "31: import javax.xml.bind.JAXBElement;",
      "32: import javax.xml.bind.JAXBException;",
      "33: import javax.xml.bind.Unmarshaller;",
      "34: import javax.xml.stream.XMLStreamReader;",
      "35: import javax.xml.transform.stream.StreamSource;",
      "36: import javax.xml.validation.Schema;",
      "37: import javax.xml.validation.SchemaFactory;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "25: import org.apache.nifi.authorization.generated.Property;",
      "26: import org.apache.nifi.bundle.Bundle;",
      "27: import org.apache.nifi.nar.ExtensionManager;",
      "28: import org.apache.nifi.util.NiFiProperties;",
      "29: import org.apache.nifi.util.file.classloader.ClassLoaderUtils;",
      "30: import org.slf4j.Logger;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "47: import org.apache.nifi.security.xml.XmlUtils;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "33: import org.springframework.beans.factory.FactoryBean;",
      "34: import org.xml.sax.SAXException;",
      "",
      "[Removed Lines]",
      "36: import javax.xml.XMLConstants;",
      "37: import javax.xml.bind.JAXBContext;",
      "38: import javax.xml.bind.JAXBElement;",
      "39: import javax.xml.bind.JAXBException;",
      "40: import javax.xml.bind.Unmarshaller;",
      "41: import javax.xml.transform.stream.StreamSource;",
      "42: import javax.xml.validation.Schema;",
      "43: import javax.xml.validation.SchemaFactory;",
      "44: import java.io.File;",
      "45: import java.lang.reflect.Constructor;",
      "46: import java.lang.reflect.Field;",
      "47: import java.lang.reflect.InvocationTargetException;",
      "48: import java.lang.reflect.Method;",
      "49: import java.net.URL;",
      "50: import java.net.URLClassLoader;",
      "51: import java.util.HashMap;",
      "52: import java.util.List;",
      "53: import java.util.Map;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "168:                 final Schema schema = schemaFactory.newSchema(Authorizers.class.getResource(AUTHORIZERS_XSD));",
      "171:                 final Unmarshaller unmarshaller = JAXB_CONTEXT.createUnmarshaller();",
      "172:                 unmarshaller.setSchema(schema);",
      "174:                 return element.getValue();",
      "175:             } catch (SAXException | JAXBException e) {",
      "176:                 throw new Exception(\"Unable to load the authorizer configuration file at: \" + authorizersConfigurationFile.getAbsolutePath(), e);",
      "",
      "[Removed Lines]",
      "173:                 final JAXBElement<Authorizers> element = unmarshaller.unmarshal(new StreamSource(authorizersConfigurationFile), Authorizers.class);",
      "",
      "[Added Lines]",
      "172:                 final XMLStreamReader xsr = XmlUtils.createSafeReader(new StreamSource(authorizersConfigurationFile));",
      "175:                 final JAXBElement<Authorizers> element = unmarshaller.unmarshal(xsr, Authorizers.class);",
      "",
      "---------------"
    ],
    "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-file-authorizer/src/main/java/org/apache/nifi/authorization/FileAccessPolicyProvider.java||nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-file-authorizer/src/main/java/org/apache/nifi/authorization/FileAccessPolicyProvider.java": [
      "File: nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-file-authorizer/src/main/java/org/apache/nifi/authorization/FileAccessPolicyProvider.java -> nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-file-authorizer/src/main/java/org/apache/nifi/authorization/FileAccessPolicyProvider.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "17: package org.apache.nifi.authorization;",
      "19: import org.apache.commons.lang3.StringUtils;",
      "20: import org.apache.nifi.authorization.annotation.AuthorizerContext;",
      "21: import org.apache.nifi.authorization.exception.AuthorizationAccessException;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "19: import java.io.ByteArrayInputStream;",
      "20: import java.io.File;",
      "21: import java.io.IOException;",
      "22: import java.io.StringWriter;",
      "23: import java.nio.charset.StandardCharsets;",
      "24: import java.util.ArrayList;",
      "25: import java.util.Collections;",
      "26: import java.util.Comparator;",
      "27: import java.util.Date;",
      "28: import java.util.HashSet;",
      "29: import java.util.Iterator;",
      "30: import java.util.List;",
      "31: import java.util.Map;",
      "32: import java.util.Set;",
      "33: import java.util.concurrent.atomic.AtomicReference;",
      "34: import java.util.regex.Matcher;",
      "35: import java.util.regex.Pattern;",
      "36: import javax.xml.XMLConstants;",
      "37: import javax.xml.bind.JAXBContext;",
      "38: import javax.xml.bind.JAXBElement;",
      "39: import javax.xml.bind.JAXBException;",
      "40: import javax.xml.bind.Marshaller;",
      "41: import javax.xml.bind.Unmarshaller;",
      "42: import javax.xml.parsers.DocumentBuilder;",
      "43: import javax.xml.parsers.DocumentBuilderFactory;",
      "44: import javax.xml.parsers.ParserConfigurationException;",
      "45: import javax.xml.stream.XMLOutputFactory;",
      "46: import javax.xml.stream.XMLStreamException;",
      "47: import javax.xml.stream.XMLStreamReader;",
      "48: import javax.xml.stream.XMLStreamWriter;",
      "49: import javax.xml.transform.stream.StreamSource;",
      "50: import javax.xml.validation.Schema;",
      "51: import javax.xml.validation.SchemaFactory;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "30: import org.apache.nifi.authorization.util.IdentityMapping;",
      "31: import org.apache.nifi.authorization.util.IdentityMappingUtil;",
      "32: import org.apache.nifi.components.PropertyValue;",
      "33: import org.apache.nifi.user.generated.Users;",
      "34: import org.apache.nifi.util.NiFiProperties;",
      "35: import org.apache.nifi.util.file.FileUtils;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "66: import org.apache.nifi.security.xml.XmlUtils;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "42: import org.w3c.dom.NodeList;",
      "43: import org.xml.sax.SAXException;",
      "78: public class FileAccessPolicyProvider implements ConfigurableAccessPolicyProvider {",
      "80:     private static final Logger logger = LoggerFactory.getLogger(FileAccessPolicyProvider.class);",
      "",
      "[Removed Lines]",
      "45: import javax.xml.XMLConstants;",
      "46: import javax.xml.bind.JAXBContext;",
      "47: import javax.xml.bind.JAXBElement;",
      "48: import javax.xml.bind.JAXBException;",
      "49: import javax.xml.bind.Marshaller;",
      "50: import javax.xml.bind.Unmarshaller;",
      "51: import javax.xml.parsers.DocumentBuilder;",
      "52: import javax.xml.parsers.DocumentBuilderFactory;",
      "53: import javax.xml.parsers.ParserConfigurationException;",
      "54: import javax.xml.stream.XMLOutputFactory;",
      "55: import javax.xml.stream.XMLStreamException;",
      "56: import javax.xml.stream.XMLStreamWriter;",
      "57: import javax.xml.transform.stream.StreamSource;",
      "58: import javax.xml.validation.Schema;",
      "59: import javax.xml.validation.SchemaFactory;",
      "60: import java.io.ByteArrayInputStream;",
      "61: import java.io.File;",
      "62: import java.io.IOException;",
      "63: import java.io.StringWriter;",
      "64: import java.nio.charset.StandardCharsets;",
      "65: import java.util.ArrayList;",
      "66: import java.util.Collections;",
      "67: import java.util.Comparator;",
      "68: import java.util.Date;",
      "69: import java.util.HashSet;",
      "70: import java.util.Iterator;",
      "71: import java.util.List;",
      "72: import java.util.Map;",
      "73: import java.util.Set;",
      "74: import java.util.concurrent.atomic.AtomicReference;",
      "75: import java.util.regex.Matcher;",
      "76: import java.util.regex.Pattern;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "528:     }",
      "530:     private Authorizations unmarshallAuthorizations() throws JAXBException {",
      "536:     }",
      "",
      "[Removed Lines]",
      "531:         final Unmarshaller unmarshaller = JAXB_AUTHORIZATIONS_CONTEXT.createUnmarshaller();",
      "532:         unmarshaller.setSchema(authorizationsSchema);",
      "534:         final JAXBElement<Authorizations> element = unmarshaller.unmarshal(new StreamSource(authorizationsFile), Authorizations.class);",
      "535:         return element.getValue();",
      "",
      "[Added Lines]",
      "532:         try {",
      "533:             final XMLStreamReader xsr = XmlUtils.createSafeReader(new StreamSource(authorizationsFile));",
      "534:             final Unmarshaller unmarshaller = JAXB_AUTHORIZATIONS_CONTEXT.createUnmarshaller();",
      "535:             unmarshaller.setSchema(authorizationsSchema);",
      "537:             final JAXBElement<Authorizations> element = unmarshaller.unmarshal(xsr, Authorizations.class);",
      "538:             return element.getValue();",
      "539:         } catch (XMLStreamException e) {",
      "540:             logger.error(\"Encountered an error reading authorizations file: \", e);",
      "541:             throw new JAXBException(\"Error reading authorizations file\", e);",
      "542:         }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "626:         final Unmarshaller unmarshaller = JAXB_USERS_CONTEXT.createUnmarshaller();",
      "627:         unmarshaller.setSchema(usersSchema);",
      "629:         final JAXBElement<Users> element = unmarshaller.unmarshal(",
      "632:         final org.apache.nifi.user.generated.Users users = element.getValue();",
      "633:         if (users.getUser().isEmpty()) {",
      "",
      "[Removed Lines]",
      "630:                 new StreamSource(authorizedUsersFile), org.apache.nifi.user.generated.Users.class);",
      "",
      "[Added Lines]",
      "636:         final XMLStreamReader xsr;",
      "637:         try {",
      "638:             xsr = XmlUtils.createSafeReader(new StreamSource(authorizedUsersFile));",
      "639:         } catch (XMLStreamException e) {",
      "640:             logger.error(\"Encountered an error reading authorized users file: \", e);",
      "641:             throw new JAXBException(\"Error reading authorized users file\", e);",
      "642:         }",
      "644:                 xsr, org.apache.nifi.user.generated.Users.class);",
      "",
      "---------------"
    ],
    "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-file-authorizer/src/main/java/org/apache/nifi/authorization/FileUserGroupProvider.java||nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-file-authorizer/src/main/java/org/apache/nifi/authorization/FileUserGroupProvider.java": [
      "File: nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-file-authorizer/src/main/java/org/apache/nifi/authorization/FileUserGroupProvider.java -> nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-file-authorizer/src/main/java/org/apache/nifi/authorization/FileUserGroupProvider.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "17: package org.apache.nifi.authorization;",
      "19: import org.apache.commons.lang3.StringUtils;",
      "20: import org.apache.nifi.authorization.annotation.AuthorizerContext;",
      "21: import org.apache.nifi.authorization.exception.AuthorizationAccessException;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "19: import java.io.ByteArrayInputStream;",
      "20: import java.io.File;",
      "21: import java.io.IOException;",
      "22: import java.io.StringWriter;",
      "23: import java.nio.charset.StandardCharsets;",
      "24: import java.util.ArrayList;",
      "25: import java.util.Collections;",
      "26: import java.util.Comparator;",
      "27: import java.util.Date;",
      "28: import java.util.HashSet;",
      "29: import java.util.Iterator;",
      "30: import java.util.List;",
      "31: import java.util.Map;",
      "32: import java.util.Set;",
      "33: import java.util.concurrent.atomic.AtomicReference;",
      "34: import java.util.regex.Matcher;",
      "35: import java.util.regex.Pattern;",
      "36: import javax.xml.XMLConstants;",
      "37: import javax.xml.bind.JAXBContext;",
      "38: import javax.xml.bind.JAXBElement;",
      "39: import javax.xml.bind.JAXBException;",
      "40: import javax.xml.bind.Marshaller;",
      "41: import javax.xml.bind.Unmarshaller;",
      "42: import javax.xml.parsers.DocumentBuilder;",
      "43: import javax.xml.parsers.DocumentBuilderFactory;",
      "44: import javax.xml.parsers.ParserConfigurationException;",
      "45: import javax.xml.stream.XMLOutputFactory;",
      "46: import javax.xml.stream.XMLStreamException;",
      "47: import javax.xml.stream.XMLStreamReader;",
      "48: import javax.xml.stream.XMLStreamWriter;",
      "49: import javax.xml.transform.stream.StreamSource;",
      "50: import javax.xml.validation.Schema;",
      "51: import javax.xml.validation.SchemaFactory;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "28: import org.apache.nifi.authorization.util.IdentityMapping;",
      "29: import org.apache.nifi.authorization.util.IdentityMappingUtil;",
      "30: import org.apache.nifi.components.PropertyValue;",
      "31: import org.apache.nifi.util.NiFiProperties;",
      "32: import org.apache.nifi.util.file.FileUtils;",
      "33: import org.slf4j.Logger;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "64: import org.apache.nifi.security.xml.XmlUtils;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "38: import org.w3c.dom.NodeList;",
      "39: import org.xml.sax.SAXException;",
      "74: public class FileUserGroupProvider implements ConfigurableUserGroupProvider {",
      "76:     private static final Logger logger = LoggerFactory.getLogger(FileUserGroupProvider.class);",
      "",
      "[Removed Lines]",
      "41: import javax.xml.XMLConstants;",
      "42: import javax.xml.bind.JAXBContext;",
      "43: import javax.xml.bind.JAXBElement;",
      "44: import javax.xml.bind.JAXBException;",
      "45: import javax.xml.bind.Marshaller;",
      "46: import javax.xml.bind.Unmarshaller;",
      "47: import javax.xml.parsers.DocumentBuilder;",
      "48: import javax.xml.parsers.DocumentBuilderFactory;",
      "49: import javax.xml.parsers.ParserConfigurationException;",
      "50: import javax.xml.stream.XMLOutputFactory;",
      "51: import javax.xml.stream.XMLStreamException;",
      "52: import javax.xml.stream.XMLStreamWriter;",
      "53: import javax.xml.transform.stream.StreamSource;",
      "54: import javax.xml.validation.Schema;",
      "55: import javax.xml.validation.SchemaFactory;",
      "56: import java.io.ByteArrayInputStream;",
      "57: import java.io.File;",
      "58: import java.io.IOException;",
      "59: import java.io.StringWriter;",
      "60: import java.nio.charset.StandardCharsets;",
      "61: import java.util.ArrayList;",
      "62: import java.util.Collections;",
      "63: import java.util.Comparator;",
      "64: import java.util.Date;",
      "65: import java.util.HashSet;",
      "66: import java.util.Iterator;",
      "67: import java.util.List;",
      "68: import java.util.Map;",
      "69: import java.util.Set;",
      "70: import java.util.concurrent.atomic.AtomicReference;",
      "71: import java.util.regex.Matcher;",
      "72: import java.util.regex.Pattern;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "665:         final Unmarshaller unmarshaller = JAXB_TENANTS_CONTEXT.createUnmarshaller();",
      "666:         unmarshaller.setSchema(tenantsSchema);",
      "670:     }",
      "672:     private void populateInitialUsers(final Tenants tenants) {",
      "",
      "[Removed Lines]",
      "668:         final JAXBElement<Tenants> element = unmarshaller.unmarshal(new StreamSource(tenantsFile), Tenants.class);",
      "669:         return element.getValue();",
      "",
      "[Added Lines]",
      "669:         try {",
      "670:             final XMLStreamReader xsr = XmlUtils.createSafeReader(new StreamSource(tenantsFile));",
      "671:             final JAXBElement<Tenants> element = unmarshaller.unmarshal(xsr, Tenants.class);",
      "672:             return element.getValue();",
      "673:         } catch (XMLStreamException e) {",
      "674:             throw new JAXBException(\"Error unmarshalling tenants\", e);",
      "675:         }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "688:             throw new AuthorizerCreationException(\"Legacy Authorized Users File '\" + legacyAuthorizedUsersFile + \"' does not exists\");",
      "689:         }",
      "691:         final Unmarshaller unmarshaller = JAXB_USERS_CONTEXT.createUnmarshaller();",
      "692:         unmarshaller.setSchema(usersSchema);",
      "694:         final JAXBElement<org.apache.nifi.user.generated.Users> element = unmarshaller.unmarshal(",
      "697:         final org.apache.nifi.user.generated.Users users = element.getValue();",
      "698:         if (users.getUser().isEmpty()) {",
      "",
      "[Removed Lines]",
      "695:                 new StreamSource(authorizedUsersFile), org.apache.nifi.user.generated.Users.class);",
      "",
      "[Added Lines]",
      "697:         XMLStreamReader xsr;",
      "698:         try {",
      "699:             xsr = XmlUtils.createSafeReader(new StreamSource(authorizedUsersFile));",
      "700:         } catch (XMLStreamException e) {",
      "701:             throw new AuthorizerCreationException(\"Error converting the legacy authorizers file\", e);",
      "702:         }",
      "708:                 xsr, org.apache.nifi.user.generated.Users.class);",
      "",
      "---------------"
    ],
    "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster-protocol/src/main/java/org/apache/nifi/cluster/protocol/HeartbeatPayload.java||nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster-protocol/src/main/java/org/apache/nifi/cluster/protocol/HeartbeatPayload.java": [
      "File: nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster-protocol/src/main/java/org/apache/nifi/cluster/protocol/HeartbeatPayload.java -> nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster-protocol/src/main/java/org/apache/nifi/cluster/protocol/HeartbeatPayload.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "21: import java.io.InputStream;",
      "22: import java.io.OutputStream;",
      "23: import java.util.List;",
      "25: import javax.xml.bind.JAXBContext;",
      "26: import javax.xml.bind.JAXBException;",
      "27: import javax.xml.bind.Marshaller;",
      "28: import javax.xml.bind.Unmarshaller;",
      "29: import javax.xml.bind.annotation.XmlRootElement;",
      "31: import org.apache.nifi.cluster.coordination.node.NodeConnectionStatus;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "29: import javax.xml.stream.XMLStreamException;",
      "30: import javax.xml.stream.XMLStreamReader;",
      "32: import org.apache.nifi.security.xml.XmlUtils;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "111:     public static HeartbeatPayload unmarshal(final InputStream is) throws ProtocolException {",
      "112:         try {",
      "113:             final Unmarshaller unmarshaller = JAXB_CONTEXT.createUnmarshaller();",
      "117:         }",
      "118:     }",
      "120:     public static HeartbeatPayload unmarshal(final byte[] bytes) throws ProtocolException {",
      "127:     }",
      "128: }",
      "",
      "[Removed Lines]",
      "114:             return (HeartbeatPayload) unmarshaller.unmarshal(is);",
      "115:         } catch (final JAXBException je) {",
      "116:             throw new ProtocolException(je);",
      "121:         try {",
      "122:             final Unmarshaller unmarshaller = JAXB_CONTEXT.createUnmarshaller();",
      "123:             return (HeartbeatPayload) unmarshaller.unmarshal(new ByteArrayInputStream(bytes));",
      "124:         } catch (final JAXBException je) {",
      "125:             throw new ProtocolException(je);",
      "126:         }",
      "",
      "[Added Lines]",
      "115:             final XMLStreamReader xsr = XmlUtils.createSafeReader(is);",
      "116:             return (HeartbeatPayload) unmarshaller.unmarshal(xsr);",
      "117:         } catch (final JAXBException | XMLStreamException e) {",
      "118:             throw new ProtocolException(e);",
      "123:         return unmarshal(new ByteArrayInputStream(bytes));",
      "",
      "---------------"
    ],
    "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster-protocol/src/main/java/org/apache/nifi/cluster/protocol/jaxb/JaxbProtocolContext.java||nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster-protocol/src/main/java/org/apache/nifi/cluster/protocol/jaxb/JaxbProtocolContext.java": [
      "File: nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster-protocol/src/main/java/org/apache/nifi/cluster/protocol/jaxb/JaxbProtocolContext.java -> nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster-protocol/src/main/java/org/apache/nifi/cluster/protocol/jaxb/JaxbProtocolContext.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: import java.io.InputStream;",
      "26: import java.io.OutputStream;",
      "27: import java.nio.ByteBuffer;",
      "29: import javax.xml.bind.JAXBContext;",
      "30: import javax.xml.bind.JAXBException;",
      "31: import javax.xml.bind.Marshaller;",
      "32: import javax.xml.bind.Unmarshaller;",
      "34: import org.apache.nifi.cluster.protocol.ProtocolContext;",
      "35: import org.apache.nifi.cluster.protocol.ProtocolMessageMarshaller;",
      "36: import org.apache.nifi.cluster.protocol.ProtocolMessageUnmarshaller;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "32: import javax.xml.stream.XMLStreamException;",
      "33: import javax.xml.stream.XMLStreamReader;",
      "37: import org.apache.nifi.security.xml.XmlUtils;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "135:                     final Unmarshaller unmarshaller = jaxbCtx.createUnmarshaller();",
      "136:                     final byte[] msg = new byte[totalBytesRead];",
      "137:                     buffer.get(msg);",
      "142:                 }",
      "144:             }",
      "",
      "[Removed Lines]",
      "138:                     return (T) unmarshaller.unmarshal(new ByteArrayInputStream(msg));",
      "140:                 } catch (final JAXBException je) {",
      "141:                     throw new IOException(\"Failed unmarshalling protocol message due to: \" + je, je);",
      "",
      "[Added Lines]",
      "139:                     final XMLStreamReader xsr = XmlUtils.createSafeReader(new ByteArrayInputStream(msg));",
      "140:                     return (T) unmarshaller.unmarshal(xsr);",
      "142:                 } catch (final JAXBException | XMLStreamException e) {",
      "143:                     throw new IOException(\"Failed unmarshalling protocol message due to: \" + e, e);",
      "",
      "---------------"
    ],
    "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster/src/main/java/org/apache/nifi/cluster/coordination/heartbeat/ClusterProtocolHeartbeatMonitor.java||nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster/src/main/java/org/apache/nifi/cluster/coordination/heartbeat/ClusterProtocolHeartbeatMonitor.java": [
      "File: nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster/src/main/java/org/apache/nifi/cluster/coordination/heartbeat/ClusterProtocolHeartbeatMonitor.java -> nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster/src/main/java/org/apache/nifi/cluster/coordination/heartbeat/ClusterProtocolHeartbeatMonitor.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "17: package org.apache.nifi.cluster.coordination.heartbeat;",
      "19: import org.apache.nifi.cluster.coordination.ClusterCoordinator;",
      "20: import org.apache.nifi.cluster.coordination.node.NodeConnectionState;",
      "21: import org.apache.nifi.cluster.coordination.node.NodeConnectionStatus;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "19: import java.util.ArrayList;",
      "20: import java.util.Collections;",
      "21: import java.util.HashMap;",
      "22: import java.util.List;",
      "23: import java.util.Map;",
      "24: import java.util.Set;",
      "25: import java.util.concurrent.ConcurrentHashMap;",
      "26: import java.util.concurrent.ConcurrentMap;",
      "27: import java.util.function.Function;",
      "28: import java.util.stream.Collectors;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "36: import org.slf4j.Logger;",
      "37: import org.slf4j.LoggerFactory;",
      "",
      "[Removed Lines]",
      "39: import javax.xml.bind.JAXBContext;",
      "40: import javax.xml.bind.Unmarshaller;",
      "41: import java.util.ArrayList;",
      "42: import java.util.Collections;",
      "43: import java.util.HashMap;",
      "44: import java.util.List;",
      "45: import java.util.Map;",
      "46: import java.util.Set;",
      "47: import java.util.concurrent.ConcurrentHashMap;",
      "48: import java.util.concurrent.ConcurrentMap;",
      "49: import java.util.function.Function;",
      "50: import java.util.stream.Collectors;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "64:     private volatile long purgeTimestamp = System.currentTimeMillis();",
      "77:     public ClusterProtocolHeartbeatMonitor(final ClusterCoordinator clusterCoordinator, final ProtocolListener protocolListener, final NiFiProperties nifiProperties) {",
      "78:         super(clusterCoordinator, nifiProperties);",
      "",
      "[Removed Lines]",
      "66:     protected static final Unmarshaller nodeIdentifierUnmarshaller;",
      "68:     static {",
      "69:         try {",
      "70:             final JAXBContext jaxbContext = JAXBContext.newInstance(NodeIdentifier.class);",
      "71:             nodeIdentifierUnmarshaller = jaxbContext.createUnmarshaller();",
      "72:         } catch (final Exception e) {",
      "73:             throw new RuntimeException(\"Failed to create an Unmarshaller for unmarshalling Node Identifier\", e);",
      "74:         }",
      "75:     }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/cluster/BulletinsPayload.java||nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/cluster/BulletinsPayload.java": [
      "File: nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/cluster/BulletinsPayload.java -> nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/cluster/BulletinsPayload.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: import javax.xml.bind.Unmarshaller;",
      "28: import javax.xml.bind.annotation.XmlRootElement;",
      "29: import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;",
      "30: import org.apache.nifi.cluster.protocol.ProtocolException;",
      "31: import org.apache.nifi.jaxb.BulletinAdapter;",
      "32: import org.apache.nifi.reporting.Bulletin;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "30: import javax.xml.stream.XMLStreamException;",
      "31: import javax.xml.stream.XMLStreamReader;",
      "35: import org.apache.nifi.security.xml.XmlUtils;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "77:     public static BulletinsPayload unmarshal(final InputStream is) throws ProtocolException {",
      "78:         try {",
      "79:             final Unmarshaller unmarshaller = JAXB_CONTEXT.createUnmarshaller();",
      "83:         }",
      "84:     }",
      "86:     public static BulletinsPayload unmarshal(final byte[] bytes) throws ProtocolException {",
      "93:     }",
      "94: }",
      "",
      "[Removed Lines]",
      "80:             return (BulletinsPayload) unmarshaller.unmarshal(is);",
      "81:         } catch (final JAXBException je) {",
      "82:             throw new ProtocolException(je);",
      "87:         try {",
      "88:             final Unmarshaller unmarshaller = JAXB_CONTEXT.createUnmarshaller();",
      "89:             return (BulletinsPayload) unmarshaller.unmarshal(new ByteArrayInputStream(bytes));",
      "90:         } catch (final JAXBException je) {",
      "91:             throw new ProtocolException(je);",
      "92:         }",
      "",
      "[Added Lines]",
      "83:             final XMLStreamReader xsr = XmlUtils.createSafeReader(is);",
      "84:             return (BulletinsPayload) unmarshaller.unmarshal(xsr);",
      "85:         } catch (final JAXBException | XMLStreamException e) {",
      "86:             throw new ProtocolException(e);",
      "91:         return unmarshal(new ByteArrayInputStream(bytes));",
      "",
      "---------------"
    ],
    "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/TemplateUtils.java||nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/TemplateUtils.java": [
      "File: nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/TemplateUtils.java -> nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/TemplateUtils.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "18: package org.apache.nifi.controller;",
      "20: import org.apache.nifi.persistence.TemplateDeserializer;",
      "22: import org.apache.nifi.web.api.dto.ConnectableDTO;",
      "23: import org.apache.nifi.web.api.dto.ConnectionDTO;",
      "24: import org.apache.nifi.web.api.dto.ControllerServiceDTO;",
      "",
      "[Removed Lines]",
      "21: import org.apache.nifi.stream.io.StreamUtils;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "32: import org.apache.nifi.web.api.dto.TemplateDTO;",
      "33: import org.w3c.dom.Element;",
      "37: import javax.xml.transform.dom.DOMSource;",
      "38: import java.io.ByteArrayInputStream;",
      "40: import java.io.IOException;",
      "41: import java.io.InputStream;",
      "43: import java.util.Collection;",
      "45: import java.util.Map;",
      "46: import java.util.Set;",
      "",
      "[Removed Lines]",
      "35: import javax.xml.bind.JAXBContext;",
      "36: import javax.xml.bind.Unmarshaller;",
      "39: import java.io.DataInputStream;",
      "42: import java.util.ArrayList;",
      "44: import java.util.List;",
      "",
      "[Added Lines]",
      "34: import javax.xml.transform.Transformer;",
      "35: import javax.xml.transform.TransformerFactory;",
      "37: import javax.xml.transform.stream.StreamResult;",
      "39: import java.io.ByteArrayOutputStream;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "50:     public static TemplateDTO parseDto(final Element templateElement) {",
      "51:         try {",
      "55:         } catch (final Exception e) {",
      "56:             throw new RuntimeException(\"Could not parse XML as a valid template\", e);",
      "57:         }",
      "",
      "[Removed Lines]",
      "52:             JAXBContext context = JAXBContext.newInstance(TemplateDTO.class);",
      "53:             Unmarshaller unmarshaller = context.createUnmarshaller();",
      "54:             return unmarshaller.unmarshal(new DOMSource(templateElement), TemplateDTO.class).getValue();",
      "",
      "[Added Lines]",
      "50:             final DOMSource domSource = new DOMSource(templateElement);",
      "52:             final ByteArrayOutputStream baos = new ByteArrayOutputStream();",
      "53:             final StreamResult streamResult = new StreamResult(baos);",
      "57:             final TransformerFactory transformerFactory = TransformerFactory.newInstance();",
      "58:             final Transformer transformer = transformerFactory.newTransformer();",
      "59:             transformer.transform(domSource, streamResult);",
      "61:             return parseDto(baos.toByteArray());",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "61:         try (final InputStream in = new ByteArrayInputStream(bytes)) {",
      "62:             return TemplateDeserializer.deserialize(in);",
      "63:         } catch (final IOException ioe) {",
      "65:         }",
      "66:     }",
      "",
      "[Removed Lines]",
      "64:             throw new RuntimeException(\"Could not parse bytes as template\", ioe); // won't happen because of the types of streams being used",
      "68:     public static List<Template> parseTemplateStream(final byte[] bytes) {",
      "69:         final List<Template> templates = new ArrayList<>();",
      "71:         try (final InputStream rawIn = new ByteArrayInputStream(bytes);",
      "72:             final DataInputStream in = new DataInputStream(rawIn)) {",
      "74:             while (isMoreData(in)) {",
      "75:                 final int length = in.readInt();",
      "76:                 final byte[] buffer = new byte[length];",
      "77:                 StreamUtils.fillBuffer(in, buffer, true);",
      "78:                 final TemplateDTO dto = TemplateDeserializer.deserialize(new ByteArrayInputStream(buffer));",
      "79:                 templates.add(new Template(dto));",
      "80:             }",
      "81:         } catch (final IOException e) {",
      "82:             throw new RuntimeException(\"Could not parse bytes\", e);  // won't happen because of the types of streams being used",
      "83:         }",
      "85:         return templates;",
      "86:     }",
      "89:     private static boolean isMoreData(final InputStream in) throws IOException {",
      "90:         in.mark(1);",
      "91:         final int nextByte = in.read();",
      "92:         if (nextByte == -1) {",
      "93:             return false;",
      "94:         }",
      "96:         in.reset();",
      "97:         return true;",
      "98:     }",
      "",
      "[Added Lines]",
      "71:             throw new RuntimeException(\"Could not parse bytes as template\", ioe);",
      "",
      "---------------"
    ],
    "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/persistence/StandardSnippetDeserializer.java||nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/persistence/StandardSnippetDeserializer.java": [
      "File: nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/persistence/StandardSnippetDeserializer.java -> nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/persistence/StandardSnippetDeserializer.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "17: package org.apache.nifi.persistence;",
      "19: import java.io.InputStream;",
      "21: import javax.xml.bind.JAXBContext;",
      "22: import javax.xml.bind.JAXBElement;",
      "23: import javax.xml.bind.JAXBException;",
      "24: import javax.xml.bind.Unmarshaller;",
      "27: import org.apache.nifi.controller.StandardSnippet;",
      "28: import org.apache.nifi.controller.serialization.FlowSerializationException;",
      "30: public class StandardSnippetDeserializer {",
      "",
      "[Removed Lines]",
      "25: import javax.xml.transform.stream.StreamSource;",
      "",
      "[Added Lines]",
      "24: import javax.xml.stream.XMLStreamException;",
      "25: import javax.xml.stream.XMLStreamReader;",
      "28: import org.apache.nifi.security.xml.XmlUtils;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "33:         try {",
      "34:             JAXBContext context = JAXBContext.newInstance(StandardSnippet.class);",
      "35:             Unmarshaller unmarshaller = context.createUnmarshaller();",
      "37:             return snippetElement.getValue();",
      "39:             throw new FlowSerializationException(e);",
      "40:         }",
      "41:     }",
      "",
      "[Removed Lines]",
      "36:             JAXBElement<StandardSnippet> snippetElement = unmarshaller.unmarshal(new StreamSource(inStream), StandardSnippet.class);",
      "38:         } catch (final JAXBException e) {",
      "",
      "[Added Lines]",
      "36:             XMLStreamReader xsr = XmlUtils.createSafeReader(inStream);",
      "37:             JAXBElement<StandardSnippet> snippetElement = unmarshaller.unmarshal(xsr, StandardSnippet.class);",
      "39:         } catch (final JAXBException | XMLStreamException e) {",
      "",
      "---------------"
    ],
    "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/persistence/TemplateDeserializer.java||nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/persistence/TemplateDeserializer.java": [
      "File: nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/persistence/TemplateDeserializer.java -> nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/persistence/TemplateDeserializer.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "17: package org.apache.nifi.persistence;",
      "20: import javax.xml.bind.JAXBContext;",
      "21: import javax.xml.bind.JAXBElement;",
      "22: import javax.xml.bind.JAXBException;",
      "23: import javax.xml.bind.Unmarshaller;",
      "25: import javax.xml.stream.XMLStreamException;",
      "26: import javax.xml.stream.XMLStreamReader;",
      "27: import javax.xml.transform.stream.StreamSource;",
      "31: public class TemplateDeserializer {",
      "33:     public static TemplateDTO deserialize(final InputStream inStream) {",
      "34:         try {",
      "35:             JAXBContext context = JAXBContext.newInstance(TemplateDTO.class);",
      "43:             Unmarshaller unmarshaller = context.createUnmarshaller();",
      "44:             JAXBElement<TemplateDTO> templateElement = unmarshaller.unmarshal(xsr, TemplateDTO.class);",
      "45:             return templateElement.getValue();",
      "",
      "[Removed Lines]",
      "19: import java.io.InputStream;",
      "24: import javax.xml.stream.XMLInputFactory;",
      "28: import org.apache.nifi.controller.serialization.FlowSerializationException;",
      "29: import org.apache.nifi.web.api.dto.TemplateDTO;",
      "38:             XMLInputFactory xif = XMLInputFactory.newFactory();",
      "39:             xif.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);",
      "40:             xif.setProperty(XMLInputFactory.SUPPORT_DTD, false);",
      "41:             XMLStreamReader xsr = xif.createXMLStreamReader(new StreamSource(inStream));",
      "",
      "[Added Lines]",
      "19: import org.apache.nifi.controller.serialization.FlowSerializationException;",
      "20: import org.apache.nifi.security.xml.XmlUtils;",
      "21: import org.apache.nifi.web.api.dto.TemplateDTO;",
      "30: import java.io.InputStream;",
      "35:        return deserialize(new StreamSource(inStream));",
      "36:     }",
      "38:     public static TemplateDTO deserialize(final StreamSource source) {",
      "41:             XMLStreamReader xsr = XmlUtils.createSafeReader(source);",
      "",
      "---------------"
    ],
    "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/test/java/org/apache/nifi/persistence/TemplateSerializerTest.java||nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/test/java/org/apache/nifi/persistence/TemplateSerializerTest.java": [
      "File: nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/test/java/org/apache/nifi/persistence/TemplateSerializerTest.java -> nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/test/java/org/apache/nifi/persistence/TemplateSerializerTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: import java.util.List;",
      "28: import java.util.Set;",
      "29: import java.util.stream.Collectors;",
      "31: import javax.xml.bind.JAXBContext;",
      "32: import javax.xml.bind.JAXBElement;",
      "33: import javax.xml.bind.Unmarshaller;",
      "36: import org.apache.nifi.util.ComponentIdGenerator;",
      "37: import org.apache.nifi.web.api.dto.FlowSnippetDTO;",
      "38: import org.apache.nifi.web.api.dto.ProcessorDTO;",
      "",
      "[Removed Lines]",
      "34: import javax.xml.transform.stream.StreamSource;",
      "",
      "[Added Lines]",
      "33: import javax.xml.stream.XMLStreamReader;",
      "34: import org.apache.nifi.security.xml.XmlUtils;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "65:         origTemplate.setSnippet(snippet);",
      "66:         byte[] serTemplate = TemplateSerializer.serialize(origTemplate);",
      "69:         ByteArrayInputStream in = new ByteArrayInputStream(serTemplate);",
      "70:         JAXBContext context = JAXBContext.newInstance(TemplateDTO.class);",
      "71:         Unmarshaller unmarshaller = context.createUnmarshaller();",
      "73:         TemplateDTO deserTemplate = templateElement.getValue();",
      "",
      "[Removed Lines]",
      "72:         JAXBElement<TemplateDTO> templateElement = unmarshaller.unmarshal(new StreamSource(in), TemplateDTO.class);",
      "",
      "[Added Lines]",
      "71:         XMLStreamReader xsr = XmlUtils.createSafeReader(in);",
      "72:         JAXBElement<TemplateDTO> templateElement = unmarshaller.unmarshal(xsr, TemplateDTO.class);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "98:         diffList.addAll(new HistogramDiff().diff(RawTextComparator.DEFAULT, rt1, rt2));",
      "100:         ByteArrayOutputStream out = new ByteArrayOutputStream();",
      "102:             diff.format(diffList, rt1, rt2);",
      "104:             BufferedReader reader = new BufferedReader(new InputStreamReader(new ByteArrayInputStream(out.toByteArray()), StandardCharsets.UTF_8));",
      "",
      "[Removed Lines]",
      "101:         try (DiffFormatter diff = new DiffFormatter(out);) {",
      "",
      "[Added Lines]",
      "101:         try (DiffFormatter diff = new DiffFormatter(out)) {",
      "",
      "---------------"
    ],
    "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/api/ProcessGroupResource.java||nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/api/ProcessGroupResource.java": [
      "File: nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/api/ProcessGroupResource.java -> nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/api/ProcessGroupResource.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "48: import org.apache.nifi.registry.variable.VariableRegistryUpdateRequest;",
      "49: import org.apache.nifi.registry.variable.VariableRegistryUpdateStep;",
      "50: import org.apache.nifi.remote.util.SiteToSiteRestApiClient;",
      "51: import org.apache.nifi.util.BundleUtils;",
      "52: import org.apache.nifi.web.NiFiServiceFacade;",
      "53: import org.apache.nifi.web.ResourceNotFoundException;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "51: import org.apache.nifi.security.xml.XmlUtils;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "127: import javax.xml.bind.JAXBElement;",
      "128: import javax.xml.bind.JAXBException;",
      "129: import javax.xml.bind.Unmarshaller;",
      "131: import java.io.IOException;",
      "132: import java.io.InputStream;",
      "133: import java.net.URI;",
      "",
      "[Removed Lines]",
      "130: import javax.xml.transform.stream.StreamSource;",
      "",
      "[Added Lines]",
      "131: import javax.xml.stream.XMLStreamReader;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3238:         try {",
      "3239:             JAXBContext context = JAXBContext.newInstance(TemplateDTO.class);",
      "3240:             Unmarshaller unmarshaller = context.createUnmarshaller();",
      "3242:             template = templateElement.getValue();",
      "3243:         } catch (JAXBException jaxbe) {",
      "3244:             logger.warn(\"An error occurred while parsing a template.\", jaxbe);",
      "",
      "[Removed Lines]",
      "3241:             JAXBElement<TemplateDTO> templateElement = unmarshaller.unmarshal(new StreamSource(in), TemplateDTO.class);",
      "",
      "[Added Lines]",
      "3242:             XMLStreamReader xsr = XmlUtils.createSafeReader(in);",
      "3243:             JAXBElement<TemplateDTO> templateElement = unmarshaller.unmarshal(xsr, TemplateDTO.class);",
      "",
      "---------------"
    ],
    "nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-security/src/main/java/org/apache/nifi/web/security/spring/LoginIdentityProviderFactoryBean.java||nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-security/src/main/java/org/apache/nifi/web/security/spring/LoginIdentityProviderFactoryBean.java": [
      "File: nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-security/src/main/java/org/apache/nifi/web/security/spring/LoginIdentityProviderFactoryBean.java -> nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-security/src/main/java/org/apache/nifi/web/security/spring/LoginIdentityProviderFactoryBean.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "30: import javax.xml.bind.JAXBElement;",
      "31: import javax.xml.bind.JAXBException;",
      "32: import javax.xml.bind.Unmarshaller;",
      "33: import javax.xml.transform.stream.StreamSource;",
      "34: import javax.xml.validation.Schema;",
      "35: import javax.xml.validation.SchemaFactory;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "33: import javax.xml.stream.XMLStreamReader;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "54: import org.apache.nifi.properties.SensitivePropertyProtectionException;",
      "55: import org.apache.nifi.properties.SensitivePropertyProvider;",
      "56: import org.apache.nifi.properties.SensitivePropertyProviderFactory;",
      "57: import org.apache.nifi.util.NiFiProperties;",
      "58: import org.slf4j.Logger;",
      "59: import org.slf4j.LoggerFactory;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "58: import org.apache.nifi.security.xml.XmlUtils;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "139:                 final Schema schema = schemaFactory.newSchema(LoginIdentityProviders.class.getResource(LOGIN_IDENTITY_PROVIDERS_XSD));",
      "142:                 final Unmarshaller unmarshaller = JAXB_CONTEXT.createUnmarshaller();",
      "143:                 unmarshaller.setSchema(schema);",
      "145:                 return element.getValue();",
      "146:             } catch (SAXException | JAXBException e) {",
      "147:                 throw new Exception(\"Unable to load the login identity provider configuration file at: \" + loginIdentityProvidersConfigurationFile.getAbsolutePath());",
      "",
      "[Removed Lines]",
      "144:                 final JAXBElement<LoginIdentityProviders> element = unmarshaller.unmarshal(new StreamSource(loginIdentityProvidersConfigurationFile), LoginIdentityProviders.class);",
      "",
      "[Added Lines]",
      "144:                 XMLStreamReader xsr = XmlUtils.createSafeReader(new StreamSource(loginIdentityProvidersConfigurationFile));",
      "147:                 final JAXBElement<LoginIdentityProviders> element = unmarshaller.unmarshal(xsr, LoginIdentityProviders.class);",
      "",
      "---------------"
    ],
    "nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-model/src/main/java/org/apache/nifi/update/attributes/serde/CriteriaSerDe.java||nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-model/src/main/java/org/apache/nifi/update/attributes/serde/CriteriaSerDe.java": [
      "File: nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-model/src/main/java/org/apache/nifi/update/attributes/serde/CriteriaSerDe.java -> nifi-nar-bundles/nifi-update-attribute-bundle/nifi-update-attribute-model/src/main/java/org/apache/nifi/update/attributes/serde/CriteriaSerDe.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "17: package org.apache.nifi.update.attributes.serde;",
      "20: import java.io.StringWriter;",
      "21: import java.util.List;",
      "22: import javax.xml.bind.JAXBContext;",
      "23: import javax.xml.bind.JAXBElement;",
      "",
      "[Removed Lines]",
      "19: import java.io.StringReader;",
      "",
      "[Added Lines]",
      "19: import java.io.ByteArrayInputStream;",
      "21: import java.nio.charset.StandardCharsets;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "25: import javax.xml.bind.Marshaller;",
      "26: import javax.xml.bind.Unmarshaller;",
      "27: import javax.xml.bind.annotation.XmlRootElement;",
      "30: import org.apache.nifi.update.attributes.Criteria;",
      "31: import org.apache.nifi.update.attributes.FlowFilePolicy;",
      "32: import org.apache.nifi.update.attributes.Rule;",
      "",
      "[Removed Lines]",
      "28: import javax.xml.transform.Source;",
      "29: import javax.xml.transform.stream.StreamSource;",
      "",
      "[Added Lines]",
      "29: import javax.xml.stream.XMLStreamException;",
      "30: import javax.xml.stream.XMLStreamReader;",
      "31: import org.apache.nifi.security.xml.XmlUtils;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "119:             try {",
      "121:                 final Unmarshaller unmarshaller = JAXB_CONTEXT.createUnmarshaller();",
      "126:                 final CriteriaBinding binding = element.getValue();",
      "127:                 criteria = new Criteria(binding.getFlowFilePolicy(), binding.getRules());",
      "130:             }",
      "131:         }",
      "",
      "[Removed Lines]",
      "122:                 final Source source = new StreamSource(new StringReader(string));",
      "123:                 final JAXBElement<CriteriaBinding> element = unmarshaller.unmarshal(source, CriteriaBinding.class);",
      "128:             } catch (final JAXBException jaxbe) {",
      "129:                 throw new IllegalArgumentException(jaxbe);",
      "",
      "[Added Lines]",
      "124:                 XMLStreamReader xsr = XmlUtils.createSafeReader(new ByteArrayInputStream(string.getBytes(StandardCharsets.UTF_8)));",
      "125:                 final JAXBElement<CriteriaBinding> element = unmarshaller.unmarshal(xsr, CriteriaBinding.class);",
      "130:             } catch (final JAXBException | XMLStreamException e) {",
      "131:                 throw new IllegalArgumentException(e);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "28067a29fd13cdf8e21b440fc65c6dd67872522f",
      "candidate_info": {
        "commit_hash": "28067a29fd13cdf8e21b440fc65c6dd67872522f",
        "repo": "apache/nifi",
        "commit_url": "https://github.com/apache/nifi/commit/28067a29fd13cdf8e21b440fc65c6dd67872522f",
        "files": [
          "nifi-commons/nifi-security-utils/src/main/java/org/apache/nifi/security/xml/XmlUtils.java",
          "nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/pom.xml",
          "nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/SplitXml.java",
          "nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/groovy/org/apache/nifi/processors/standard/SplitXmlTest.groovy",
          "nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/resources/xxe_from_report.xml",
          "nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/resources/xxe_template.xml"
        ],
        "message": "NIFI-4869 Added SAX utility method for SplitXML processor. Added unit tests. Added test resources to RAT exclude list. This closes #2466",
        "before_after_code_files": [
          "nifi-commons/nifi-security-utils/src/main/java/org/apache/nifi/security/xml/XmlUtils.java||nifi-commons/nifi-security-utils/src/main/java/org/apache/nifi/security/xml/XmlUtils.java",
          "nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/SplitXml.java||nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/SplitXml.java",
          "nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/groovy/org/apache/nifi/processors/standard/SplitXmlTest.groovy||nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/groovy/org/apache/nifi/processors/standard/SplitXmlTest.groovy"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "nifi-commons/nifi-security-utils/src/main/java/org/apache/nifi/security/xml/XmlUtils.java||nifi-commons/nifi-security-utils/src/main/java/org/apache/nifi/security/xml/XmlUtils.java"
          ],
          "candidate": [
            "nifi-commons/nifi-security-utils/src/main/java/org/apache/nifi/security/xml/XmlUtils.java||nifi-commons/nifi-security-utils/src/main/java/org/apache/nifi/security/xml/XmlUtils.java"
          ]
        }
      },
      "candidate_diff": {
        "nifi-commons/nifi-security-utils/src/main/java/org/apache/nifi/security/xml/XmlUtils.java||nifi-commons/nifi-security-utils/src/main/java/org/apache/nifi/security/xml/XmlUtils.java": [
          "File: nifi-commons/nifi-security-utils/src/main/java/org/apache/nifi/security/xml/XmlUtils.java -> nifi-commons/nifi-security-utils/src/main/java/org/apache/nifi/security/xml/XmlUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: package org.apache.nifi.security.xml;",
          "19: import javax.xml.stream.XMLInputFactory;",
          "20: import javax.xml.stream.XMLStreamException;",
          "21: import javax.xml.stream.XMLStreamReader;",
          "22: import javax.xml.transform.stream.StreamSource;",
          "25: public class XmlUtils {",
          "",
          "[Removed Lines]",
          "23: import java.io.InputStream;",
          "",
          "[Added Lines]",
          "19: import java.io.InputStream;",
          "20: import javax.xml.parsers.ParserConfigurationException;",
          "21: import javax.xml.parsers.SAXParser;",
          "22: import javax.xml.parsers.SAXParserFactory;",
          "27: import org.xml.sax.ContentHandler;",
          "28: import org.xml.sax.SAXException;",
          "29: import org.xml.sax.XMLReader;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41:         xif.setProperty(XMLInputFactory.SUPPORT_DTD, false);",
          "42:         return xif.createXMLStreamReader(source);",
          "43:     }",
          "44: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51:     public static XMLReader createSafeSaxReader(SAXParserFactory saxParserFactory, ContentHandler contentHandler) throws SAXException, ParserConfigurationException {",
          "52:         if (saxParserFactory == null) {",
          "53:             throw new IllegalArgumentException(\"The provided SAX parser factory cannot be null\");",
          "54:         }",
          "56:         if (contentHandler == null) {",
          "57:             throw new IllegalArgumentException(\"The provided SAX content handler cannot be null\");",
          "58:         }",
          "60:         saxParserFactory.setFeature(\"http://xml.org/sax/features/external-general-entities\", false);",
          "61:         saxParserFactory.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true);",
          "63:         SAXParser saxParser = saxParserFactory.newSAXParser();",
          "64:         XMLReader xmlReader = saxParser.getXMLReader();",
          "65:         xmlReader.setContentHandler(contentHandler);",
          "67:         return xmlReader;",
          "68:     }",
          "",
          "---------------"
        ],
        "nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/SplitXml.java||nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/SplitXml.java": [
          "File: nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/SplitXml.java -> nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/SplitXml.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: package org.apache.nifi.processors.standard;",
          "19: import java.io.InputStream;",
          "20: import java.util.ArrayList;",
          "21: import java.util.Collections;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: import static org.apache.nifi.flowfile.attributes.FragmentAttributes.FRAGMENT_COUNT;",
          "20: import static org.apache.nifi.flowfile.attributes.FragmentAttributes.FRAGMENT_ID;",
          "21: import static org.apache.nifi.flowfile.attributes.FragmentAttributes.FRAGMENT_INDEX;",
          "22: import static org.apache.nifi.flowfile.attributes.FragmentAttributes.SEGMENT_ORIGINAL_FILENAME;",
          "23: import static org.apache.nifi.flowfile.attributes.FragmentAttributes.copyAttributesToOriginal;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "28: import java.util.UUID;",
          "29: import java.util.concurrent.atomic.AtomicBoolean;",
          "30: import java.util.concurrent.atomic.AtomicInteger;",
          "32: import javax.xml.parsers.ParserConfigurationException;",
          "34: import javax.xml.parsers.SAXParserFactory;",
          "36: import org.apache.commons.lang3.StringEscapeUtils;",
          "37: import org.apache.nifi.annotation.behavior.EventDriven;",
          "38: import org.apache.nifi.annotation.behavior.InputRequirement;",
          "",
          "[Removed Lines]",
          "33: import javax.xml.parsers.SAXParser;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "54: import org.apache.nifi.processor.Relationship;",
          "55: import org.apache.nifi.processor.util.StandardValidators;",
          "56: import org.apache.nifi.processors.standard.util.XmlElementNotifier;",
          "58: import org.slf4j.Logger;",
          "59: import org.slf4j.LoggerFactory;",
          "60: import org.xml.sax.Attributes;",
          "",
          "[Removed Lines]",
          "57: import org.apache.nifi.stream.io.BufferedInputStream;",
          "",
          "[Added Lines]",
          "60: import org.apache.nifi.security.xml.XmlUtils;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "64: import org.xml.sax.SAXException;",
          "65: import org.xml.sax.XMLReader;",
          "73: @EventDriven",
          "74: @SideEffectFree",
          "75: @SupportsBatching",
          "",
          "[Removed Lines]",
          "67: import static org.apache.nifi.flowfile.attributes.FragmentAttributes.FRAGMENT_COUNT;",
          "68: import static org.apache.nifi.flowfile.attributes.FragmentAttributes.FRAGMENT_ID;",
          "69: import static org.apache.nifi.flowfile.attributes.FragmentAttributes.FRAGMENT_INDEX;",
          "70: import static org.apache.nifi.flowfile.attributes.FragmentAttributes.SEGMENT_ORIGINAL_FILENAME;",
          "71: import static org.apache.nifi.flowfile.attributes.FragmentAttributes.copyAttributesToOriginal;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "176:         final AtomicBoolean failed = new AtomicBoolean(false);",
          "177:         session.read(original, rawIn -> {",
          "180:                 try {",
          "184:                     reader.parse(new InputSource(in));",
          "185:                 } catch (final ParserConfigurationException | SAXException e) {",
          "186:                     logger.error(\"Unable to parse {} due to {}\", new Object[]{original, e});",
          "",
          "[Removed Lines]",
          "178:             try (final InputStream in = new BufferedInputStream(rawIn)) {",
          "179:                 SAXParser saxParser = null;",
          "181:                     saxParser = saxParserFactory.newSAXParser();",
          "182:                     final XMLReader reader = saxParser.getXMLReader();",
          "183:                     reader.setContentHandler(parser);",
          "",
          "[Added Lines]",
          "175:             try (final InputStream in = new java.io.BufferedInputStream(rawIn)) {",
          "177:                     final XMLReader reader = XmlUtils.createSafeSaxReader(saxParserFactory, parser);",
          "",
          "---------------"
        ],
        "nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/groovy/org/apache/nifi/processors/standard/SplitXmlTest.groovy||nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/groovy/org/apache/nifi/processors/standard/SplitXmlTest.groovy": [
          "File: nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/groovy/org/apache/nifi/processors/standard/SplitXmlTest.groovy -> nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/groovy/org/apache/nifi/processors/standard/SplitXmlTest.groovy",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.apache.nifi.processors.standard",
          "19: import org.apache.nifi.util.TestRunner",
          "20: import org.apache.nifi.util.TestRunners",
          "21: import org.junit.After",
          "22: import org.junit.Before",
          "23: import org.junit.BeforeClass",
          "24: import org.junit.Test",
          "25: import org.junit.runner.RunWith",
          "26: import org.junit.runners.JUnit4",
          "27: import org.slf4j.Logger",
          "28: import org.slf4j.LoggerFactory",
          "30: import java.nio.file.Paths",
          "33: @RunWith(JUnit4.class)",
          "34: class SplitXmlTest extends GroovyTestCase {",
          "35:     private static final Logger logger = LoggerFactory.getLogger(SplitXmlTest.class)",
          "37:     @BeforeClass",
          "38:     static void setUpOnce() throws Exception {",
          "39:         logger.metaClass.methodMissing = { String name, args ->",
          "40:             logger.info(\"[${name?.toUpperCase()}] ${(args as List).join(\" \")}\")",
          "41:         }",
          "42:     }",
          "44:     @Before",
          "45:     void setUp() throws Exception {",
          "47:     }",
          "49:     @After",
          "50:     void tearDown() throws Exception {",
          "52:     }",
          "54:     @Test",
          "55:     void testShouldHandleXXEInTemplate() {",
          "57:         final String XXE_TEMPLATE_FILEPATH = \"src/test/resources/xxe_template.xml\"",
          "58:         final TestRunner runner = TestRunners.newTestRunner(new SplitXml())",
          "59:         runner.setProperty(SplitXml.SPLIT_DEPTH, \"3\")",
          "60:         runner.enqueue(Paths.get(XXE_TEMPLATE_FILEPATH))",
          "63:         runner.run()",
          "64:         logger.info(\"SplitXML processor ran\")",
          "67:         runner.assertAllFlowFilesTransferred(SplitXml.REL_FAILURE)",
          "68:     }",
          "70:     @Test",
          "71:     void testShouldHandleRemoteCallXXE() {",
          "73:         final String XXE_TEMPLATE_FILEPATH = \"src/test/resources/xxe_from_report.xml\"",
          "74:         final TestRunner runner = TestRunners.newTestRunner(new SplitXml())",
          "75:         runner.setProperty(SplitXml.SPLIT_DEPTH, \"3\")",
          "76:         runner.enqueue(Paths.get(XXE_TEMPLATE_FILEPATH))",
          "79:         runner.run()",
          "80:         logger.info(\"SplitXML processor ran\")",
          "83:         runner.assertAllFlowFilesTransferred(SplitXml.REL_FAILURE)",
          "84:     }",
          "85: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}