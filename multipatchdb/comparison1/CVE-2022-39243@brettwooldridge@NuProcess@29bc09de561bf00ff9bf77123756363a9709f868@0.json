{
  "cve_id": "CVE-2022-39243",
  "cve_desc": "NuProcess is an external process execution implementation for Java. In all the versions of NuProcess where it forks processes by using the JVM's Java_java_lang_UNIXProcess_forkAndExec method (1.2.0+), attackers can use NUL characters in their strings to perform command line injection. Java's ProcessBuilder isn't vulnerable because of a check in ProcessBuilder.start. NuProcess is missing that check. This vulnerability can only be exploited to inject command line arguments on Linux. Version 2.0.5 contains a patch. As a workaround, users of the library can sanitize command strings to remove NUL characters prior to passing them to NuProcess for execution.",
  "repo": "brettwooldridge/NuProcess",
  "patch_hash": "29bc09de561bf00ff9bf77123756363a9709f868",
  "patch_info": {
    "commit_hash": "29bc09de561bf00ff9bf77123756363a9709f868",
    "repo": "brettwooldridge/NuProcess",
    "commit_url": "https://github.com/brettwooldridge/NuProcess/commit/29bc09de561bf00ff9bf77123756363a9709f868",
    "files": [
      "src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java",
      "src/test/java/com/zaxxer/nuprocess/RunTest.java"
    ],
    "message": "Merge pull request #143 from benhumphreys/harden-null-injection\n\nAdd a check for NUL characters in NuProcessBuilder to ensure the arguments provided to the command in code are interpreted consistently when the native process is started.",
    "before_after_code_files": [
      "src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java||src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java",
      "src/test/java/com/zaxxer/nuprocess/RunTest.java||src/test/java/com/zaxxer/nuprocess/RunTest.java"
    ]
  },
  "patch_diff": {
    "src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java||src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java": [
      "File: src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java -> src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "254:    public NuProcess start()",
      "255:    {",
      "256:       ensureListener();",
      "257:       String[] env = prepareEnvironment();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "256:       ensureNoNullCharacters(command);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "268:    public void run()",
      "269:    {",
      "270:       ensureListener();",
      "271:       String[] env = prepareEnvironment();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "271:       ensureNoNullCharacters(command);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "280:       }",
      "281:    }",
      "283:    private String[] prepareEnvironment()",
      "284:    {",
      "285:       String[] env = new String[environment.size()];",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "285:    private void ensureNoNullCharacters(List<String> commands) {",
      "286:       for (String command : commands) {",
      "287:          if (command.indexOf('\\u0000') >= 0) {",
      "288:             throw new IllegalArgumentException(\"Commands may not contain null characters\");",
      "289:          }",
      "290:       }",
      "291:    }",
      "",
      "---------------"
    ],
    "src/test/java/com/zaxxer/nuprocess/RunTest.java||src/test/java/com/zaxxer/nuprocess/RunTest.java": [
      "File: src/test/java/com/zaxxer/nuprocess/RunTest.java -> src/test/java/com/zaxxer/nuprocess/RunTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "316:       System.err.println(\"Completed test softCloseStdinAfterWrite()\");",
      "317:    }",
      "319:    private static byte[] getLotsOfBytes()",
      "320:    {",
      "321:       StringBuilder sb = new StringBuilder();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "319:    @Test(expected = IllegalArgumentException.class)",
      "320:    public void nullCommandViaCommandMutationWithRun() {",
      "321:       NuProcessBuilder pb = new NuProcessBuilder(new NullProcessHandler(), command);",
      "322:       pb.command().add(\"--foo\\0--bar\");",
      "323:       pb.run();",
      "324:    }",
      "326:    @Test(expected = IllegalArgumentException.class)",
      "327:    public void nullCommandViaCommandMutationWithStart() {",
      "328:       NuProcessBuilder pb = new NuProcessBuilder(new NullProcessHandler(), command);",
      "329:       pb.command().add(\"--foo\\0--bar\");",
      "330:       pb.start();",
      "331:    }",
      "333:    @Test(expected = IllegalArgumentException.class)",
      "334:    public void nullCommandViaConstructorWithRun() {",
      "335:       NuProcessBuilder pb = new NuProcessBuilder(new NullProcessHandler(), command, \"--foo\\0--bar\");",
      "336:       pb.run();",
      "337:    }",
      "339:    @Test(expected = IllegalArgumentException.class)",
      "340:    public void nullCommandViaConstructorWithStart() {",
      "341:       NuProcessBuilder pb = new NuProcessBuilder(new NullProcessHandler(), command, \"--foo\\0--bar\");",
      "342:       pb.start();",
      "343:    }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "395:       }",
      "396:    }",
      "398:    private static class Utf8DecodingListener extends NuAbstractCharsetHandler",
      "399:    {",
      "400:       private final CharBuffer utf8Buffer;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "424:    private static class NullProcessHandler extends NuAbstractProcessHandler {",
      "425:    }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d4005b63d310a4fdf5aec3d4b7db65a4ec424d13",
      "candidate_info": {
        "commit_hash": "d4005b63d310a4fdf5aec3d4b7db65a4ec424d13",
        "repo": "brettwooldridge/NuProcess",
        "commit_url": "https://github.com/brettwooldridge/NuProcess/commit/d4005b63d310a4fdf5aec3d4b7db65a4ec424d13",
        "files": [
          "src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java"
        ],
        "message": "Null injection hardening\n\nIn NuProcessBuilder throw an IllegalArgumentException if commands that\ninclude a null character are passed. This hardens against command line\ninjection type attacks in applications that use NuProcess. Throwing a\nIllegalArgumentException is what Java's ProcessBuilder does when nulls\nare passed so this solution was chosen to maintain some consistency with\nthat.",
        "before_after_code_files": [
          "src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java||src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/brettwooldridge/NuProcess/pull/143"
        ],
        "olp_code_files": {
          "patch": [
            "src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java||src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java"
          ],
          "candidate": [
            "src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java||src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java"
          ]
        }
      },
      "candidate_diff": {
        "src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java||src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java": [
          "File: src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java -> src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "107:       if (commands == null || commands.isEmpty()) {",
          "108:          throw new IllegalArgumentException(\"List of commands may not be null or empty\");",
          "109:       }",
          "111:       this.environment = new TreeMap<String, String>(environment);",
          "112:       this.command = new ArrayList<String>(commands);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "110:       ensureNoNullCharacters(commands);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "126:       if (commands == null || commands.isEmpty()) {",
          "127:          throw new IllegalArgumentException(\"List of commands may not be null or empty\");",
          "128:       }",
          "130:       this.environment = new TreeMap<String, String>(System.getenv());",
          "131:       this.command = new ArrayList<String>(commands);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "130:       ensureNoNullCharacters(commands);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "144:       if (commands == null || commands.length == 0) {",
          "145:          throw new IllegalArgumentException(\"List of commands may not be null or empty\");",
          "146:       }",
          "148:       this.environment = new TreeMap<String, String>(System.getenv());",
          "150:    }",
          "",
          "[Removed Lines]",
          "149:       this.command = new ArrayList<String>(Arrays.asList(commands));",
          "",
          "[Added Lines]",
          "149:       List<String> commandsList = Arrays.asList(commands);",
          "150:       ensureNoNullCharacters(commandsList);",
          "153:       this.command = new ArrayList<String>(commandsList);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "280:       }",
          "281:    }",
          "283:    private String[] prepareEnvironment()",
          "284:    {",
          "285:       String[] env = new String[environment.size()];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "287:    private void ensureNoNullCharacters(List<String> commands) {",
          "288:       for (String command : commands) {",
          "289:          if (command.indexOf('\\u0000') >= 0) {",
          "290:             throw new IllegalArgumentException(\"Commands may not contain null characters\");",
          "291:          }",
          "292:       }",
          "293:    }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fabf505576129d42357a67184bd7f44d386928ea",
      "candidate_info": {
        "commit_hash": "fabf505576129d42357a67184bd7f44d386928ea",
        "repo": "brettwooldridge/NuProcess",
        "commit_url": "https://github.com/brettwooldridge/NuProcess/commit/fabf505576129d42357a67184bd7f44d386928ea",
        "files": [
          "src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java"
        ],
        "message": "Null injection hardening (Rework)\n\nMoves the ensureNoNullCharacters() out of the constructors and in to\nrun() and start(). Since it is possible to mutate the list returned by\nNuProcessBuilder.command() a constructor only based approach to\nvalidation is insufficient to catch all cases.",
        "before_after_code_files": [
          "src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java||src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/brettwooldridge/NuProcess/pull/143"
        ],
        "olp_code_files": {
          "patch": [
            "src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java||src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java"
          ],
          "candidate": [
            "src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java||src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java"
          ]
        }
      },
      "candidate_diff": {
        "src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java||src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java": [
          "File: src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java -> src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "107:       if (commands == null || commands.isEmpty()) {",
          "108:          throw new IllegalArgumentException(\"List of commands may not be null or empty\");",
          "109:       }",
          "112:       this.environment = new TreeMap<String, String>(environment);",
          "113:       this.command = new ArrayList<String>(commands);",
          "",
          "[Removed Lines]",
          "110:       ensureNoNullCharacters(commands);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "127:       if (commands == null || commands.isEmpty()) {",
          "128:          throw new IllegalArgumentException(\"List of commands may not be null or empty\");",
          "129:       }",
          "132:       this.environment = new TreeMap<String, String>(System.getenv());",
          "133:       this.command = new ArrayList<String>(commands);",
          "",
          "[Removed Lines]",
          "130:       ensureNoNullCharacters(commands);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "146:       if (commands == null || commands.length == 0) {",
          "147:          throw new IllegalArgumentException(\"List of commands may not be null or empty\");",
          "148:       }",
          "152:       this.environment = new TreeMap<String, String>(System.getenv());",
          "154:    }",
          "",
          "[Removed Lines]",
          "149:       List<String> commandsList = Arrays.asList(commands);",
          "150:       ensureNoNullCharacters(commandsList);",
          "153:       this.command = new ArrayList<String>(commandsList);",
          "",
          "[Added Lines]",
          "149:       this.command = new ArrayList<String>(Arrays.asList(commands));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "258:    public NuProcess start()",
          "259:    {",
          "260:       ensureListener();",
          "261:       String[] env = prepareEnvironment();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "256:       ensureNoNullCharacters(command);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "272:    public void run()",
          "273:    {",
          "274:       ensureListener();",
          "275:       String[] env = prepareEnvironment();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "271:       ensureNoNullCharacters(command);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "467b28a2d9a92a1e5b12b3bdcdc7e21e1fdbe433",
      "candidate_info": {
        "commit_hash": "467b28a2d9a92a1e5b12b3bdcdc7e21e1fdbe433",
        "repo": "brettwooldridge/NuProcess",
        "commit_url": "https://github.com/brettwooldridge/NuProcess/commit/467b28a2d9a92a1e5b12b3bdcdc7e21e1fdbe433",
        "files": [
          "src/test/java/com/zaxxer/nuprocess/RunTest.java"
        ],
        "message": "Null injection hardening (Adds tests)",
        "before_after_code_files": [
          "src/test/java/com/zaxxer/nuprocess/RunTest.java||src/test/java/com/zaxxer/nuprocess/RunTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/brettwooldridge/NuProcess/pull/143"
        ],
        "olp_code_files": {
          "patch": [
            "src/test/java/com/zaxxer/nuprocess/RunTest.java||src/test/java/com/zaxxer/nuprocess/RunTest.java"
          ],
          "candidate": [
            "src/test/java/com/zaxxer/nuprocess/RunTest.java||src/test/java/com/zaxxer/nuprocess/RunTest.java"
          ]
        }
      },
      "candidate_diff": {
        "src/test/java/com/zaxxer/nuprocess/RunTest.java||src/test/java/com/zaxxer/nuprocess/RunTest.java": [
          "File: src/test/java/com/zaxxer/nuprocess/RunTest.java -> src/test/java/com/zaxxer/nuprocess/RunTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "316:       System.err.println(\"Completed test softCloseStdinAfterWrite()\");",
          "317:    }",
          "319:    private static byte[] getLotsOfBytes()",
          "320:    {",
          "321:       StringBuilder sb = new StringBuilder();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "319:    @Test(expected = IllegalArgumentException.class)",
          "320:    public void nullCommandViaCommandMutationWithRun() {",
          "321:       NuProcessBuilder pb = new NuProcessBuilder(new NullProcessHandler(), command);",
          "322:       pb.command().add(\"--foo\\0--bar\");",
          "323:       pb.run();",
          "324:    }",
          "326:    @Test(expected = IllegalArgumentException.class)",
          "327:    public void nullCommandViaCommandMutationWithStart() {",
          "328:       NuProcessBuilder pb = new NuProcessBuilder(new NullProcessHandler(), command);",
          "329:       pb.command().add(\"--foo\\0--bar\");",
          "330:       pb.start();",
          "331:    }",
          "333:    @Test(expected = IllegalArgumentException.class)",
          "334:    public void nullCommandViaConstructorWithRun() {",
          "335:       NuProcessBuilder pb = new NuProcessBuilder(new NullProcessHandler(), command, \"--foo\\0--bar\");",
          "336:       pb.run();",
          "337:    }",
          "339:    @Test(expected = IllegalArgumentException.class)",
          "340:    public void nullCommandViaConstructorWithStart() {",
          "341:       NuProcessBuilder pb = new NuProcessBuilder(new NullProcessHandler(), command, \"--foo\\0--bar\");",
          "342:       pb.start();",
          "343:    }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "395:       }",
          "396:    }",
          "398:    private static class Utf8DecodingListener extends NuAbstractCharsetHandler",
          "399:    {",
          "400:       private final CharBuffer utf8Buffer;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "424:    private static class NullProcessHandler extends NuAbstractProcessHandler {",
          "425:    }",
          "",
          "---------------"
        ]
      }
    }
  ]
}