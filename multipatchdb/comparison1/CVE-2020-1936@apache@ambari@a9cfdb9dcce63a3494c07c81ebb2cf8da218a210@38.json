{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ee69659a4a621e40b4b147ccb8c6321cb8fc6ac2",
      "candidate_info": {
        "commit_hash": "ee69659a4a621e40b4b147ccb8c6321cb8fc6ac2",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/ee69659a4a621e40b4b147ccb8c6321cb8fc6ac2",
        "files": [
          "ambari-server/src/main/resources/scripts/Ambaripreupload.py"
        ],
        "message": "AMBARI-24268 fix preupload script references, clean imports (#1725)\n\n* AMBARI-24268 fix preupload script references, clean imports\n\nChange-Id: I56baf2baba9cc08f674bf9cb57cafd142db81560\n\n* add missing dfs_type parameters\n\nChange-Id: I827194273f53f366ee6ed3e4b749d4ee490a9d9d\n\n* simplify dfs_type usage\n\nChange-Id: Iad96985dfd42468a49ed8d611753ea0431fd1f31\n\n* fix preupload for zeppelin dependecies\n\nChange-Id: Ic85e6237563d10f53e311248fb458c13c2480790",
        "before_after_code_files": [
          "ambari-server/src/main/resources/scripts/Ambaripreupload.py||ambari-server/src/main/resources/scripts/Ambaripreupload.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/resources/scripts/Ambaripreupload.py||ambari-server/src/main/resources/scripts/Ambaripreupload.py": [
          "File: ambari-server/src/main/resources/scripts/Ambaripreupload.py -> ambari-server/src/main/resources/scripts/Ambaripreupload.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: sys.path.append(\"/usr/lib/ambari-server/lib\")",
          "28: import glob",
          "30: import re",
          "31: import tempfile",
          "32: import time",
          "33: import functools",
          "34: from xml.dom import minidom",
          "38: from resource_management.core import shell",
          "41: from resource_management.core.logger import Logger",
          "44: from resource_management.libraries.functions.format import format",
          "45: from resource_management.libraries.functions.oozie_prepare_war import prepare_war",
          "46: from resource_management.libraries.resources.hdfs_resource import HdfsResource",
          "50: SQL_DRIVER_PATH = \"/var/lib/ambari-server/resources/sqljdbc41.jar\"",
          "",
          "[Removed Lines]",
          "29: from logging import thread",
          "35: from xml.dom.minidom import parseString",
          "37: from resource_management import *",
          "39: from resource_management.core.base import Resource, ForcedListArgument, ResourceArgument, BooleanArgument",
          "40: from resource_management.core.exceptions import Fail",
          "42: from resource_management.core.resources.system import Execute, Directory",
          "43: from resource_management.libraries.functions.default import default",
          "47: from resource_management.libraries.resources.execute_hadoop import ExecuteHadoop",
          "48: from resource_management import Script",
          "",
          "[Added Lines]",
          "35: from resource_management.core import File",
          "37: from resource_management.core.environment import Environment",
          "39: from resource_management.core.resources.system import Execute",
          "40: from resource_management.core.source import StaticFile",
          "41: from resource_management.libraries import ConfigDictionary",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "145:     oozie_user = \"oozie\"",
          "146:     execute_path = \"/usr/hdp/\" + stack_version + \"/hadoop/bin\"",
          "147:     ambari_libs_dir = \"/var/lib/ambari-agent/lib\"",
          "150:     fs_default = get_fs_root()",
          "151:     yarn_home_dir = '/usr/hdp/' + stack_version + '/hadoop-yarn'",
          "152:     yarn_lib_dir = yarn_home_dir + '/lib'",
          "153:     yarn_service_tarball = yarn_lib_dir + '/service-dep.tar.gz'",
          "",
          "[Removed Lines]",
          "148:     hdfs_site = ConfigDictionary({'dfs.webhdfs.enabled':False,",
          "149:     })",
          "",
          "[Added Lines]",
          "145:     hdfs_site = ConfigDictionary({'dfs.webhdfs.enabled':False,})",
          "147:     dfs_type = \"WASB\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "187:       hdfs_site = hdfs_site,",
          "188:       default_fs = fs_default,",
          "189:       hdfs_resource_ignore_file = \"/var/lib/ambari-agent/data/.hdfs_resource_ignore\",",
          "190:     )",
          "192:   def _copy_files(source_and_dest_pairs, file_owner, group_owner, kinit_if_needed):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "187:       dfs_type = dfs_type",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "208:                     mode=0444,",
          "209:                     owner=file_owner,",
          "210:                     group=group_owner,",
          "212:       )",
          "216:     \"\"\"",
          "219:     :param component_user: User that will execute the Hadoop commands",
          "220:     :param file_owner: Owner of the files copied to HDFS (typically hdfs account)",
          "221:     :param group_owner: Group owner of the files copied to HDFS (typically hadoop group)",
          "222:     :return: Returns 0 on success, 1 if no files were copied, and in some cases may raise an exception.",
          "224:     In order to call this function, params.py must have all of the following,",
          "225:     stack_version_formatted, kinit_path_local, security_enabled, hdfs_user, hdfs_principal_name, hdfs_user_keytab,",
          "226:     hadoop_bin_dir, hadoop_conf_dir, and HdfsDirectory as a partial function.",
          "227:     \"\"\"",
          "229:     component_tar_source_file, component_tar_destination_folder = source, dest",
          "231:     if not os.path.exists(component_tar_source_file):",
          "232:       Logger.warning(\"Could not find file: %s\" % str(component_tar_source_file))",
          "233:       return 1",
          "237:     file_name = os.path.basename(component_tar_source_file)",
          "238:     destination_file = os.path.join(component_tar_destination_folder, file_name)",
          "239:     destination_file = destination_file.replace(\"{{ stack_version_formatted }}\", stack_version)",
          "242:     kinit_if_needed = \"\"",
          "243:     if params.security_enabled:",
          "244:       kinit_if_needed = format(\"{kinit_path_local} -kt {hdfs_user_keytab} {hdfs_principal_name};\")",
          "246:     if kinit_if_needed:",
          "247:       Execute(kinit_if_needed,",
          "248:               user=component_user,",
          "249:               path='/bin'",
          "250:       )",
          "252:     source_and_dest_pairs = [(component_tar_source_file, destination_file), ]",
          "253:     return _copy_files(source_and_dest_pairs, file_owner, group_owner, kinit_if_needed)",
          "255:   def createHdfsResources():",
          "256:     print \"Creating hdfs directories...\"",
          "257:     params.HdfsResource(format('{hdfs_path_prefix}/atshistory'), user='hdfs', change_permissions_for_parents=True, owner='yarn', group='hadoop', type='directory', action= ['create_on_execute'], mode=0755)",
          "",
          "[Removed Lines]",
          "211:                     source=source,",
          "215:   def copy_tarballs_to_hdfs(source, dest, stack_select_component_name, component_user, file_owner, group_owner):",
          "217:     :param tarball_prefix: Prefix of the tarball must be one of tez, hive, mr, pig",
          "218:     :param stack_select_component_name: Component name to get the status to determine the version",
          "",
          "[Added Lines]",
          "209:                     source=source",
          "213:   def copy_tarballs_to_hdfs(source, dest, component_user, file_owner, group_owner):",
          "215:     :param source: source on host FS",
          "216:     :param dest: destination on HDFS (or compatible)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "286:   def copy_zeppelin_dependencies_to_hdfs(file_pattern):",
          "287:     spark_deps_full_path = glob.glob(file_pattern)",
          "288:     if spark_deps_full_path and os.path.exists(spark_deps_full_path[0]):",
          "290:     else:",
          "291:       Logger.info('zeppelin-spark-dependencies not found at %s.' % file_pattern)",
          "",
          "[Removed Lines]",
          "289:       copy_tarballs_to_hdfs(spark_deps_full_path[0], hdfs_path_prefix+'/apps/zeppelin/', 'hadoop-mapreduce-historyserver', params.hdfs_user, 'zeppelin', 'zeppelin')",
          "",
          "[Added Lines]",
          "284:       copy_tarballs_to_hdfs(spark_deps_full_path[0], hdfs_path_prefix+'/apps/zeppelin/', params.hdfs_user, 'zeppelin', 'zeppelin')",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "314:     Create tarball to include YARN Service dependency jars",
          "315:     \"\"\"",
          "316:     Logger.info(format(\"Creating {yarn_service_tarball}\"))",
          "318:     with closing(tarfile.open(params.yarn_service_tarball, \"w:gz\")) as tar:",
          "319:       for folder in folders:",
          "320:         for filepath in glob.glob(format(\"{folder}/*.jar\")):",
          "321:           tar.add(os.path.realpath(filepath), arcname=os.path.basename(filepath))",
          "323:   env.set_params(params)",
          "324:   hadoop_conf_dir = params.hadoop_conf_dir",
          "326:   oozie_libext_dir = params.oozie_libext_dir",
          "327:   sql_driver_filename = os.path.basename(SQL_DRIVER_PATH)",
          "328:   oozie_home=params.oozie_home",
          "",
          "[Removed Lines]",
          "317:     folders = [yarn_home_dir, yarn_lib_dir, hdfs_home_dir, hdfs_lib_dir, hadoop_home_dir, hadoop_lib_dir]",
          "",
          "[Added Lines]",
          "312:     folders = [params.yarn_home_dir, params.yarn_lib_dir, params.hdfs_home_dir, params.hdfs_lib_dir,",
          "313:                params.hadoop_home_dir,",
          "314:                params.hadoop_lib_dir]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "342:   skip_recreate_sharelib = format(\"test -f {hashcode_file} && test -d {oozie_home}/share\")",
          "344:   Execute( configure_cmds,",
          "346:            sudo = True,",
          "347:            )",
          "349:   File(hashcode_file,",
          "350:        mode = 0644,",
          "351:   )",
          "353:   prepare_war(params)",
          "355:   oozie_shared_lib = format(\"/usr/hdp/{stack_version}/oozie/share\")",
          "",
          "[Removed Lines]",
          "345:            not_if  = format(\"{no_op_test} || {skip_recreate_sharelib}\"),",
          "",
          "[Added Lines]",
          "342:            not_if  = format(\"{no_op_test} || {skip_recreate_sharelib}\"),",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "421:       mode=0755,",
          "422:       recursive_chmod = True,",
          "423:       owner=oozie_user,",
          "425:     )",
          "427:   print \"Copying tarballs...\"",
          "428:   # TODO, these shouldn't hardcode the stack root or destination stack name.",
          "433:   # Needed by Hive Interactive",
          "441:   createHdfsResources()",
          "442:   copy_zeppelin_dependencies_to_hdfs(format(\"/usr/hdp/{stack_version}/zeppelin/interpreter/spark/dep/zeppelin-spark-dependencies*.jar\"))",
          "443:   putSQLDriverToOozieShared()",
          "",
          "[Removed Lines]",
          "424:       source = oozie_shared_lib,",
          "429:   copy_tarballs_to_hdfs(format(\"/usr/hdp/{stack_version}/hadoop/mapreduce.tar.gz\"), hdfs_path_prefix+\"/hdp/apps/{{ stack_version_formatted }}/mapreduce/\", 'hadoop-mapreduce-historyserver', params.mapred_user, params.hdfs_user, params.user_group)",
          "430:   copy_tarballs_to_hdfs(format(\"/usr/hdp/{stack_version}/tez/lib/tez.tar.gz\"), hdfs_path_prefix+\"/hdp/apps/{{ stack_version_formatted }}/tez/\", 'hadoop-mapreduce-historyserver', params.mapred_user, params.hdfs_user, params.user_group)",
          "431:   copy_tarballs_to_hdfs(format(\"/usr/hdp/{stack_version}/hive/hive.tar.gz\"), hdfs_path_prefix+\"/hdp/apps/{{ stack_version_formatted }}/hive/\", 'hadoop-mapreduce-historyserver', params.mapred_user, params.hdfs_user, params.user_group)",
          "434:   copy_tarballs_to_hdfs(format(\"/usr/hdp/{stack_version}/tez_hive2/lib/tez.tar.gz\"), hdfs_path_prefix+\"/hdp/apps/{{ stack_version_formatted }}/tez_hive2/\", 'hadoop-mapreduce-historyserver', params.mapred_user, params.hdfs_user, params.user_group)",
          "436:   copy_tarballs_to_hdfs(format(\"/usr/hdp/{stack_version}/pig/pig.tar.gz\"), hdfs_path_prefix+\"/hdp/apps/{{ stack_version_formatted }}/pig/\", 'hadoop-mapreduce-historyserver', params.mapred_user, params.hdfs_user, params.user_group)",
          "437:   copy_tarballs_to_hdfs(format(\"/usr/hdp/{stack_version}/hadoop-mapreduce/hadoop-streaming.jar\"), hdfs_path_prefix+\"/hdp/apps/{{ stack_version_formatted }}/mapreduce/\", 'hadoop-mapreduce-historyserver', params.mapred_user, params.hdfs_user, params.user_group)",
          "438:   copy_tarballs_to_hdfs(format(\"/usr/hdp/{stack_version}/sqoop/sqoop.tar.gz\"), hdfs_path_prefix+\"/hdp/apps/{{ stack_version_formatted }}/sqoop/\", 'hadoop-mapreduce-historyserver', params.mapred_user, params.hdfs_user, params.user_group)",
          "439:   copy_tarballs_to_hdfs(format(\"/usr/hdp/{stack_version}/hadoop-yarn/lib/service-dep.tar.gz\"), hdfs_path_prefix+\"/hdp/apps/{{ stack_version_formatted }}/yarn/\", 'hadoop-mapreduce-historyserver', params.hdfs_user, params.hdfs_user, params.user_group)",
          "",
          "[Added Lines]",
          "421:       source = oozie_shared_lib",
          "426:   copy_tarballs_to_hdfs(format(\"/usr/hdp/{stack_version}/hadoop/mapreduce.tar.gz\"), hdfs_path_prefix+\"/hdp/apps/{{ stack_version_formatted }}/mapreduce/\", params.mapred_user, params.hdfs_user, params.user_group)",
          "427:   copy_tarballs_to_hdfs(format(\"/usr/hdp/{stack_version}/tez/lib/tez.tar.gz\"), hdfs_path_prefix+\"/hdp/apps/{{ stack_version_formatted }}/tez/\", params.mapred_user, params.hdfs_user, params.user_group)",
          "428:   copy_tarballs_to_hdfs(format(\"/usr/hdp/{stack_version}/hive/hive.tar.gz\"), hdfs_path_prefix+\"/hdp/apps/{{ stack_version_formatted }}/hive/\", params.mapred_user, params.hdfs_user, params.user_group)",
          "431:   copy_tarballs_to_hdfs(format(\"/usr/hdp/{stack_version}/tez_hive2/lib/tez.tar.gz\"), hdfs_path_prefix+\"/hdp/apps/{{ stack_version_formatted }}/tez_hive2/\", params.mapred_user, params.hdfs_user, params.user_group)",
          "433:   copy_tarballs_to_hdfs(format(\"/usr/hdp/{stack_version}/pig/pig.tar.gz\"), hdfs_path_prefix+\"/hdp/apps/{{ stack_version_formatted }}/pig/\", params.mapred_user, params.hdfs_user, params.user_group)",
          "434:   copy_tarballs_to_hdfs(format(\"/usr/hdp/{stack_version}/hadoop-mapreduce/hadoop-streaming.jar\"), hdfs_path_prefix+\"/hdp/apps/{{ stack_version_formatted }}/mapreduce/\", params.mapred_user, params.hdfs_user, params.user_group)",
          "435:   copy_tarballs_to_hdfs(format(\"/usr/hdp/{stack_version}/sqoop/sqoop.tar.gz\"), hdfs_path_prefix+\"/hdp/apps/{{ stack_version_formatted }}/sqoop/\", params.mapred_user, params.hdfs_user, params.user_group)",
          "436:   copy_tarballs_to_hdfs(format(\"/usr/hdp/{stack_version}/hadoop-yarn/lib/service-dep.tar.gz\"), hdfs_path_prefix+\"/hdp/apps/{{ stack_version_formatted }}/yarn/\", params.hdfs_user, params.hdfs_user, params.user_group)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "451:   # Create everything in one jar call (this is fast).",
          "452:   # (! Before everything should be executed with action=\"create_on_execute/delete_on_execute\" for this time-optimization to work)",
          "453:   try:",
          "455:                  logoutput=True,",
          "456:                  action=\"execute\"",
          "457:     )",
          "",
          "[Removed Lines]",
          "454:     params.HdfsResource(None,",
          "",
          "[Added Lines]",
          "451:     params.HdfsResource(None,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d96bfd326d186955dee564e03e27488ab1da8df2",
      "candidate_info": {
        "commit_hash": "d96bfd326d186955dee564e03e27488ab1da8df2",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/d96bfd326d186955dee564e03e27488ab1da8df2",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/WidgetResourceProvider.java",
          "ambari-server/src/main/java/org/apache/ambari/server/security/authorization/RoleAuthorization.java",
          "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog272.java",
          "ambari-server/src/main/resources/Ambari-DDL-Derby-CREATE.sql",
          "ambari-server/src/main/resources/Ambari-DDL-MySQL-CREATE.sql",
          "ambari-server/src/main/resources/Ambari-DDL-Oracle-CREATE.sql",
          "ambari-server/src/main/resources/Ambari-DDL-Postgres-CREATE.sql",
          "ambari-server/src/main/resources/Ambari-DDL-SQLAnywhere-CREATE.sql",
          "ambari-server/src/main/resources/Ambari-DDL-SQLServer-CREATE.sql",
          "ambari-server/src/test/java/org/apache/ambari/server/controller/internal/WidgetResourceProviderTest.java"
        ],
        "message": "AMBARI-24605. Using the new RBAC framework to allow cluster operators/administrators and Ambari administrators to manage widgets (#2275)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/WidgetResourceProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/WidgetResourceProvider.java",
          "ambari-server/src/main/java/org/apache/ambari/server/security/authorization/RoleAuthorization.java||ambari-server/src/main/java/org/apache/ambari/server/security/authorization/RoleAuthorization.java",
          "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog272.java||ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog272.java",
          "ambari-server/src/main/resources/Ambari-DDL-Derby-CREATE.sql||ambari-server/src/main/resources/Ambari-DDL-Derby-CREATE.sql",
          "ambari-server/src/main/resources/Ambari-DDL-MySQL-CREATE.sql||ambari-server/src/main/resources/Ambari-DDL-MySQL-CREATE.sql",
          "ambari-server/src/main/resources/Ambari-DDL-Oracle-CREATE.sql||ambari-server/src/main/resources/Ambari-DDL-Oracle-CREATE.sql",
          "ambari-server/src/main/resources/Ambari-DDL-Postgres-CREATE.sql||ambari-server/src/main/resources/Ambari-DDL-Postgres-CREATE.sql",
          "ambari-server/src/main/resources/Ambari-DDL-SQLAnywhere-CREATE.sql||ambari-server/src/main/resources/Ambari-DDL-SQLAnywhere-CREATE.sql",
          "ambari-server/src/main/resources/Ambari-DDL-SQLServer-CREATE.sql||ambari-server/src/main/resources/Ambari-DDL-SQLServer-CREATE.sql",
          "ambari-server/src/test/java/org/apache/ambari/server/controller/internal/WidgetResourceProviderTest.java||ambari-server/src/test/java/org/apache/ambari/server/controller/internal/WidgetResourceProviderTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/WidgetResourceProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/WidgetResourceProvider.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/internal/WidgetResourceProvider.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/internal/WidgetResourceProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: package org.apache.ambari.server.controller.internal;",
          "20: import java.util.ArrayList;",
          "21: import java.util.HashMap;",
          "22: import java.util.HashSet;",
          "23: import java.util.List;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: import static org.apache.ambari.server.security.authorization.RoleAuthorization.CLUSTER_MANAGE_WIDGETS;",
          "23: import java.util.EnumSet;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40: import org.apache.ambari.server.controller.spi.UnsupportedPropertyException;",
          "41: import org.apache.ambari.server.controller.utilities.PropertyHelper;",
          "42: import org.apache.ambari.server.orm.dao.WidgetDAO;",
          "44: import org.apache.ambari.server.orm.entities.WidgetEntity;",
          "45: import org.apache.ambari.server.orm.entities.WidgetLayoutUserWidgetEntity;",
          "47: import org.apache.ambari.server.security.authorization.AuthorizationHelper;",
          "48: import org.apache.commons.lang.ObjectUtils;",
          "49: import org.apache.commons.lang.StringUtils;",
          "50: import org.springframework.security.access.AccessDeniedException;",
          "55: import com.google.gson.Gson;",
          "56: import com.google.inject.Inject;",
          "",
          "[Removed Lines]",
          "43: import org.apache.ambari.server.orm.entities.PermissionEntity;",
          "46: import org.apache.ambari.server.security.authorization.AmbariGrantedAuthority;",
          "51: import org.springframework.security.core.GrantedAuthority;",
          "52: import org.springframework.security.core.context.SecurityContext;",
          "53: import org.springframework.security.core.context.SecurityContextHolder;",
          "",
          "[Added Lines]",
          "49: import org.apache.ambari.server.security.authorization.ResourceType;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "157:           String clusterName = properties.get(WIDGET_CLUSTER_NAME_PROPERTY_ID).toString();",
          "158:           String scope = properties.get(WIDGET_SCOPE_PROPERTY_ID).toString();",
          "161:             throw new AccessDeniedException(\"Only cluster operator can create widgets with cluster scope\");",
          "162:           }",
          "",
          "[Removed Lines]",
          "160:           if (!isScopeAllowedForUser(scope)) {",
          "",
          "[Added Lines]",
          "159:           if (!isScopeAllowedForUser(scope, clusterName)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "311:           if (StringUtils.isNotBlank(ObjectUtils.toString(propertyMap.get(WIDGET_SCOPE_PROPERTY_ID)))) {",
          "312:             String scope = propertyMap.get(WIDGET_SCOPE_PROPERTY_ID).toString();",
          "314:               throw new AmbariException(\"Only cluster operator can create widgets with cluster scope\");",
          "315:             }",
          "316:             entity.setScope(scope);",
          "",
          "[Removed Lines]",
          "313:             if (!isScopeAllowedForUser(scope)) {",
          "",
          "[Added Lines]",
          "312:             String clusterName = propertyMap.get(WIDGET_CLUSTER_NAME_PROPERTY_ID).toString();",
          "313:             if (!isScopeAllowedForUser(scope, clusterName)) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "383:     return pkPropertyIds;",
          "384:   }",
          "404:       return true;",
          "407:     }",
          "408:   }",
          "410:   private String getAuthorName(Map<String, Object> properties) {",
          "",
          "[Removed Lines]",
          "386:   private boolean isScopeAllowedForUser(String scope) {",
          "387:     if (scope.equals(WidgetEntity.USER_SCOPE)) {",
          "388:       return true;",
          "389:     }",
          "392:     SecurityContext securityContext = SecurityContextHolder.getContext();",
          "393:     securityContext.getAuthentication().getAuthorities();",
          "394:     boolean hasPermissionForClusterScope = false;",
          "395:     for (GrantedAuthority grantedAuthority : securityContext.getAuthentication().getAuthorities()) {",
          "396:       if (((AmbariGrantedAuthority) grantedAuthority).getPrivilegeEntity().getPermission().getId()",
          "397:               == PermissionEntity.AMBARI_ADMINISTRATOR_PERMISSION ||",
          "398:               ((AmbariGrantedAuthority) grantedAuthority).getPrivilegeEntity().getPermission().getId()",
          "399:                       == PermissionEntity.CLUSTER_ADMINISTRATOR_PERMISSION) {",
          "400:         hasPermissionForClusterScope = true;",
          "401:       }",
          "402:     }",
          "403:     if (hasPermissionForClusterScope) {",
          "405:     } else {",
          "406:       return false;",
          "",
          "[Added Lines]",
          "386:   private boolean isScopeAllowedForUser(String scope, String clusterName) throws AmbariException {",
          "387:     if (WidgetEntity.USER_SCOPE.equals(scope)) {",
          "390:     return AuthorizationHelper.isAuthorized(ResourceType.CLUSTER, getClusterResourceId(clusterName), EnumSet.of(CLUSTER_MANAGE_WIDGETS));",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/security/authorization/RoleAuthorization.java||ambari-server/src/main/java/org/apache/ambari/server/security/authorization/RoleAuthorization.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/security/authorization/RoleAuthorization.java -> ambari-server/src/main/java/org/apache/ambari/server/security/authorization/RoleAuthorization.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:   CLUSTER_RUN_CUSTOM_COMMAND(\"CLUSTER.RUN_CUSTOM_COMMAND\"),",
          "58:   CLUSTER_MANAGE_AUTO_START(\"CLUSTER.MANAGE_AUTO_START\"),",
          "59:   CLUSTER_MANAGE_ALERT_NOTIFICATIONS(\"CLUSTER.MANAGE_ALERT_NOTIFICATIONS\"),",
          "60:   HOST_ADD_DELETE_COMPONENTS(\"HOST.ADD_DELETE_COMPONENTS\"),",
          "61:   HOST_ADD_DELETE_HOSTS(\"HOST.ADD_DELETE_HOSTS\"),",
          "62:   HOST_TOGGLE_MAINTENANCE(\"HOST.TOGGLE_MAINTENANCE\"),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "60:   CLUSTER_MANAGE_WIDGETS(\"CLUSTER.MANAGE_WIDGETS\"),",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog272.java||ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog272.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog272.java -> ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog272.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: import static org.apache.ambari.server.configuration.AmbariServerConfigurationCategory.LDAP_CONFIGURATION;",
          "21: import static org.apache.ambari.server.security.authorization.RoleAuthorization.AMBARI_VIEW_STATUS_INFO;",
          "22: import static org.apache.ambari.server.upgrade.UpgradeCatalog270.AMBARI_CONFIGURATION_CATEGORY_NAME_COLUMN;",
          "23: import static org.apache.ambari.server.upgrade.UpgradeCatalog270.AMBARI_CONFIGURATION_PROPERTY_NAME_COLUMN;",
          "24: import static org.apache.ambari.server.upgrade.UpgradeCatalog270.AMBARI_CONFIGURATION_TABLE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: import static org.apache.ambari.server.security.authorization.RoleAuthorization.CLUSTER_MANAGE_WIDGETS;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32: import org.slf4j.Logger;",
          "33: import org.slf4j.LoggerFactory;",
          "35: import com.google.inject.Inject;",
          "36: import com.google.inject.Injector;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: import com.google.common.collect.Sets;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "97:   protected void createRoleAuthorizations() throws SQLException {",
          "98:     addRoleAuthorization(AMBARI_VIEW_STATUS_INFO.getId(), \"View status information\", Collections.singleton(\"AMBARI.ADMINISTRATOR:AMBARI\"));",
          "99:     LOG.info(\"Added new role authorization {}\", AMBARI_VIEW_STATUS_INFO.getId());",
          "100:   }",
          "102:   protected void moveBlueprintProvisioningState() throws SQLException {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "102:     addRoleAuthorization(CLUSTER_MANAGE_WIDGETS.getId(), \"Manage widgets\", Sets.newHashSet( \"AMBARI.ADMINISTRATOR:AMBARI\", \"CLUSTER.ADMINISTRATOR:CLUSTER\", \"CLUSTER.OPERATOR:CLUSTER\"));",
          "103:     LOG.info(\"Added new role authorization {}\", CLUSTER_MANAGE_WIDGETS.getId());",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/Ambari-DDL-Derby-CREATE.sql||ambari-server/src/main/resources/Ambari-DDL-Derby-CREATE.sql": [
          "File: ambari-server/src/main/resources/Ambari-DDL-Derby-CREATE.sql -> ambari-server/src/main/resources/Ambari-DDL-Derby-CREATE.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "1335:   SELECT 'CLUSTER.RUN_CUSTOM_COMMAND', 'Perform custom cluster-level actions' FROM SYSIBM.SYSDUMMY1 UNION ALL",
          "1336:   SELECT 'CLUSTER.MANAGE_AUTO_START', 'Manage service auto-start configuration' FROM SYSIBM.SYSDUMMY1 UNION ALL",
          "1337:   SELECT 'CLUSTER.MANAGE_ALERT_NOTIFICATIONS', 'Manage alert notifications configuration' FROM SYSIBM.SYSDUMMY1 UNION ALL",
          "1338:   SELECT 'AMBARI.ADD_DELETE_CLUSTERS', 'Create new clusters' FROM SYSIBM.SYSDUMMY1 UNION ALL",
          "1339:   SELECT 'AMBARI.RENAME_CLUSTER', 'Rename clusters' FROM SYSIBM.SYSDUMMY1 UNION ALL",
          "1340:   SELECT 'AMBARI.MANAGE_SETTINGS', 'Manage settings' FROM SYSIBM.SYSDUMMY1 UNION ALL",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1338:   SELECT 'CLUSTER.MANAGE_WIDGETS', 'Manage widgets' FROM SYSIBM.SYSDUMMY1 UNION ALL",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1450:   SELECT permission_id, 'CLUSTER.VIEW_ALERTS' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR'  UNION ALL",
          "1451:   SELECT permission_id, 'CLUSTER.MANAGE_CREDENTIALS' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR'  UNION ALL",
          "1452:   SELECT permission_id, 'CLUSTER.MANAGE_AUTO_START' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR'  UNION ALL",
          "1453:   SELECT permission_id, 'CLUSTER.MANAGE_USER_PERSISTED_DATA' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR';",
          "1455: -- Set authorizations for Cluster Administrator role",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1454:   SELECT permission_id, 'CLUSTER.MANAGE_WIDGETS' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR' UNION ALL",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1493:   SELECT permission_id, 'CLUSTER.MANAGE_USER_PERSISTED_DATA' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR' UNION ALL",
          "1494:   SELECT permission_id, 'CLUSTER.MANAGE_AUTO_START' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR' UNION ALL",
          "1495:   SELECT permission_id, 'CLUSTER.MANAGE_ALERT_NOTIFICATIONS' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR' UNION ALL",
          "1496:   SELECT permission_id, 'CLUSTER.RUN_CUSTOM_COMMAND' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR';",
          "1498: -- Set authorizations for Administrator role",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1498:   SELECT permission_id, 'CLUSTER.MANAGE_WIDGETS' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR' UNION ALL",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1538:   SELECT permission_id, 'CLUSTER.MANAGE_AUTO_START' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR'  UNION ALL",
          "1539:   SELECT permission_id, 'CLUSTER.MANAGE_ALERT_NOTIFICATIONS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR'  UNION ALL",
          "1540:   SELECT permission_id, 'CLUSTER.MANAGE_USER_PERSISTED_DATA' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1541:   SELECT permission_id, 'AMBARI.ADD_DELETE_CLUSTERS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR'  UNION ALL",
          "1542:   SELECT permission_id, 'AMBARI.RENAME_CLUSTER' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR'  UNION ALL",
          "1543:   SELECT permission_id, 'AMBARI.MANAGE_SETTINGS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR'  UNION ALL",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1544:   SELECT permission_id, 'CLUSTER.MANAGE_WIDGETS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/Ambari-DDL-MySQL-CREATE.sql||ambari-server/src/main/resources/Ambari-DDL-MySQL-CREATE.sql": [
          "File: ambari-server/src/main/resources/Ambari-DDL-MySQL-CREATE.sql -> ambari-server/src/main/resources/Ambari-DDL-MySQL-CREATE.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "1280:   SELECT 'CLUSTER.RUN_CUSTOM_COMMAND', 'Perform custom cluster-level actions' UNION ALL",
          "1281:   SELECT 'CLUSTER.MANAGE_AUTO_START', 'Manage service auto-start configuration' UNION ALL",
          "1282:   SELECT 'CLUSTER.MANAGE_ALERT_NOTIFICATIONS', 'Manage alert notifications configuration' UNION ALL",
          "1283:   SELECT 'AMBARI.ADD_DELETE_CLUSTERS', 'Create new clusters' UNION ALL",
          "1284:   SELECT 'AMBARI.RENAME_CLUSTER', 'Rename clusters' UNION ALL",
          "1285:   SELECT 'AMBARI.MANAGE_SETTINGS', 'Manage administrative settings' UNION ALL",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1283:   SELECT 'CLUSTER.MANAGE_WIDGETS', 'Manage widgets' UNION ALL",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1395:   SELECT permission_id, 'CLUSTER.VIEW_ALERTS' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR' UNION ALL",
          "1396:   SELECT permission_id, 'CLUSTER.MANAGE_CREDENTIALS' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR' UNION ALL",
          "1397:   SELECT permission_id, 'CLUSTER.MANAGE_AUTO_START' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR' UNION ALL",
          "1398:   SELECT permission_id, 'CLUSTER.MANAGE_USER_PERSISTED_DATA' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR';",
          "1400: -- Set authorizations for Cluster Administrator role",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1399:   SELECT permission_id, 'CLUSTER.MANAGE_WIDGETS' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR' UNION ALL",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1440:   SELECT permission_id, 'CLUSTER.MANAGE_USER_PERSISTED_DATA' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR' UNION ALL",
          "1441:   SELECT permission_id, 'CLUSTER.MANAGE_AUTO_START' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR' UNION ALL",
          "1442:   SELECT permission_id, 'CLUSTER.MANAGE_ALERT_NOTIFICATIONS' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR' UNION ALL",
          "1443:   SELECT permission_id, 'CLUSTER.RUN_CUSTOM_COMMAND' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR';",
          "1445: -- Set authorizations for Administrator role",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1445:   SELECT permission_id, 'CLUSTER.MANAGE_WIDGETS' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR' UNION ALL",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1486:   SELECT permission_id, 'CLUSTER.MANAGE_USER_PERSISTED_DATA' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1487:   SELECT permission_id, 'CLUSTER.MANAGE_AUTO_START' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1488:   SELECT permission_id, 'CLUSTER.MANAGE_ALERT_NOTIFICATIONS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1489:   SELECT permission_id, 'CLUSTER.RUN_CUSTOM_COMMAND' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1490:   SELECT permission_id, 'AMBARI.ADD_DELETE_CLUSTERS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1491:   SELECT permission_id, 'AMBARI.RENAME_CLUSTER' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1492:   SELECT permission_id, 'CLUSTER.MANAGE_WIDGETS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/Ambari-DDL-Oracle-CREATE.sql||ambari-server/src/main/resources/Ambari-DDL-Oracle-CREATE.sql": [
          "File: ambari-server/src/main/resources/Ambari-DDL-Oracle-CREATE.sql -> ambari-server/src/main/resources/Ambari-DDL-Oracle-CREATE.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "1278:   SELECT 'CLUSTER.RUN_CUSTOM_COMMAND', 'Perform custom cluster-level actions' FROM dual UNION ALL",
          "1279:   SELECT 'CLUSTER.MANAGE_AUTO_START', 'Manage service auto-start configuration' FROM dual UNION ALL",
          "1280:   SELECT 'CLUSTER.MANAGE_ALERT_NOTIFICATIONS', 'Manage alert notifications configuration' FROM dual UNION ALL",
          "1281:   SELECT 'AMBARI.ADD_DELETE_CLUSTERS', 'Create new clusters' FROM dual UNION ALL",
          "1282:   SELECT 'AMBARI.RENAME_CLUSTER', 'Rename clusters' FROM dual UNION ALL",
          "1283:   SELECT 'AMBARI.MANAGE_SETTINGS', 'Manage settings' FROM dual UNION ALL",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1281:   SELECT 'CLUSTER.MANAGE_WIDGETS', 'Manage widgets' FROM dual UNION ALL",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1393:   SELECT permission_id, 'CLUSTER.VIEW_ALERTS' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR' UNION ALL",
          "1394:   SELECT permission_id, 'CLUSTER.MANAGE_CREDENTIALS' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR' UNION ALL",
          "1395:   SELECT permission_id, 'CLUSTER.MANAGE_AUTO_START' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR' UNION ALL",
          "1396:   SELECT permission_id, 'CLUSTER.MANAGE_USER_PERSISTED_DATA' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR';",
          "1398: -- Set authorizations for Cluster Administrator role",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1397:   SELECT permission_id, 'CLUSTER.MANAGE_WIDGETS' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR' UNION ALL",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1438:   SELECT permission_id, 'CLUSTER.MANAGE_USER_PERSISTED_DATA' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR' UNION ALL",
          "1439:   SELECT permission_id, 'CLUSTER.MANAGE_AUTO_START' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR' UNION ALL",
          "1440:   SELECT permission_id, 'CLUSTER.MANAGE_ALERT_NOTIFICATIONS' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR' UNION ALL",
          "1441:   SELECT permission_id, 'CLUSTER.RUN_CUSTOM_COMMAND' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR';",
          "1443: -- Set authorizations for Administrator role",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1443:   SELECT permission_id, 'CLUSTER.MANAGE_WIDGETS' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR' UNION ALL",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1484:   SELECT permission_id, 'CLUSTER.MANAGE_USER_PERSISTED_DATA' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1485:   SELECT permission_id, 'CLUSTER.MANAGE_AUTO_START' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1486:   SELECT permission_id, 'CLUSTER.MANAGE_ALERT_NOTIFICATIONS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1487:   SELECT permission_id, 'CLUSTER.RUN_CUSTOM_COMMAND' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1488:   SELECT permission_id, 'AMBARI.ADD_DELETE_CLUSTERS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1489:   SELECT permission_id, 'AMBARI.RENAME_CLUSTER' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1490:   SELECT permission_id, 'CLUSTER.MANAGE_WIDGETS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/Ambari-DDL-Postgres-CREATE.sql||ambari-server/src/main/resources/Ambari-DDL-Postgres-CREATE.sql": [
          "File: ambari-server/src/main/resources/Ambari-DDL-Postgres-CREATE.sql -> ambari-server/src/main/resources/Ambari-DDL-Postgres-CREATE.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "1262:   SELECT 'CLUSTER.RUN_CUSTOM_COMMAND', 'Perform custom cluster-level actions' UNION ALL",
          "1263:   SELECT 'CLUSTER.MANAGE_AUTO_START', 'Manage service auto-start configuration' UNION ALL",
          "1264:   SELECT 'CLUSTER.MANAGE_ALERT_NOTIFICATIONS', 'Manage alert notifications configuration' UNION ALL",
          "1265:   SELECT 'AMBARI.ADD_DELETE_CLUSTERS', 'Create new clusters' UNION ALL",
          "1266:   SELECT 'AMBARI.RENAME_CLUSTER', 'Rename clusters' UNION ALL",
          "1267:   SELECT 'AMBARI.MANAGE_SETTINGS', 'Manage administrative settings' UNION ALL",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1265:   SELECT 'CLUSTER.MANAGE_WIDGETS', 'Manage widgets' UNION ALL",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1377:   SELECT permission_id, 'CLUSTER.VIEW_ALERTS' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR' UNION ALL",
          "1378:   SELECT permission_id, 'CLUSTER.MANAGE_CREDENTIALS' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR' UNION ALL",
          "1379:   SELECT permission_id, 'CLUSTER.MANAGE_AUTO_START' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR' UNION ALL",
          "1380:   SELECT permission_id, 'CLUSTER.MANAGE_USER_PERSISTED_DATA' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR';",
          "1382: -- Set authorizations for Cluster Administrator role",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1381:   SELECT permission_id, 'CLUSTER.MANAGE_WIDGETS' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR' UNION ALL",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1422:   SELECT permission_id, 'CLUSTER.MANAGE_USER_PERSISTED_DATA' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR' UNION ALL",
          "1423:   SELECT permission_id, 'CLUSTER.MANAGE_AUTO_START' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR' UNION ALL",
          "1424:   SELECT permission_id, 'CLUSTER.MANAGE_ALERT_NOTIFICATIONS' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR' UNION ALL",
          "1425:   SELECT permission_id, 'CLUSTER.RUN_CUSTOM_COMMAND' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR';",
          "1427: -- Set authorizations for Administrator role",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1427:   SELECT permission_id, 'CLUSTER.MANAGE_WIDGETS' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR' UNION ALL",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1468:   SELECT permission_id, 'CLUSTER.MANAGE_USER_PERSISTED_DATA' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1469:   SELECT permission_id, 'CLUSTER.MANAGE_AUTO_START' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1470:   SELECT permission_id, 'CLUSTER.MANAGE_ALERT_NOTIFICATIONS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1471:   SELECT permission_id, 'CLUSTER.RUN_CUSTOM_COMMAND' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1472:   SELECT permission_id, 'AMBARI.ADD_DELETE_CLUSTERS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1473:   SELECT permission_id, 'AMBARI.RENAME_CLUSTER' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1474:   SELECT permission_id, 'CLUSTER.MANAGE_WIDGETS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/Ambari-DDL-SQLAnywhere-CREATE.sql||ambari-server/src/main/resources/Ambari-DDL-SQLAnywhere-CREATE.sql": [
          "File: ambari-server/src/main/resources/Ambari-DDL-SQLAnywhere-CREATE.sql -> ambari-server/src/main/resources/Ambari-DDL-SQLAnywhere-CREATE.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "1276:     SELECT 'CLUSTER.RUN_CUSTOM_COMMAND', 'Perform custom cluster-level actions' UNION ALL",
          "1277:     SELECT 'CLUSTER.MANAGE_AUTO_START', 'Manage service auto-start configuration' UNION ALL",
          "1278:     SELECT 'CLUSTER.MANAGE_ALERT_NOTIFICATIONS', 'Manage alert notifications configuration' UNION ALL",
          "1279:     SELECT 'AMBARI.ADD_DELETE_CLUSTERS', 'Create new clusters' UNION ALL",
          "1280:     SELECT 'AMBARI.RENAME_CLUSTER', 'Rename clusters' UNION ALL",
          "1281:     SELECT 'AMBARI.MANAGE_SETTINGS', 'Manage settings' UNION ALL",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1279:     SELECT 'CLUSTER.MANAGE_WIDGETS', 'Manage widgets' UNION ALL",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1391:     SELECT permission_id, 'CLUSTER.VIEW_ALERTS' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR' UNION ALL",
          "1392:     SELECT permission_id, 'CLUSTER.MANAGE_CREDENTIALS' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR' UNION ALL",
          "1393:     SELECT permission_id, 'CLUSTER.MANAGE_AUTO_START' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR' UNION ALL",
          "1394:     SELECT permission_id, 'CLUSTER.MANAGE_USER_PERSISTED_DATA' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR';",
          "1396:   -- Set authorizations for Cluster Administrator role",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1395:     SELECT permission_id, 'CLUSTER.MANAGE_WIDGETS' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR' UNION ALL",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1436:     SELECT permission_id, 'CLUSTER.MANAGE_USER_PERSISTED_DATA' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR' UNION ALL",
          "1437:     SELECT permission_id, 'CLUSTER.MANAGE_AUTO_START' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR' UNION ALL",
          "1438:     SELECT permission_id, 'CLUSTER.MANAGE_ALERT_NOTIFICATIONS' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR' UNION ALL",
          "1439:     SELECT permission_id, 'CLUSTER.RUN_CUSTOM_COMMAND' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR';",
          "1441:   -- Set authorizations for Administrator role",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1441:     SELECT permission_id, 'CLUSTER.MANAGE_WIDGETS' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR' UNION ALL",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1482:     SELECT permission_id, 'CLUSTER.MANAGE_USER_PERSISTED_DATA' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1483:     SELECT permission_id, 'CLUSTER.MANAGE_AUTO_START' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1484:     SELECT permission_id, 'CLUSTER.MANAGE_ALERT_NOTIFICATIONS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1485:     SELECT permission_id, 'CLUSTER.RUN_SERVICE_CHECK' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1486:     SELECT permission_id, 'AMBARI.ADD_DELETE_CLUSTERS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1487:     SELECT permission_id, 'AMBARI.RENAME_CLUSTER' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1488:     SELECT permission_id, 'CLUSTER.MANAGE_WIDGETS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/Ambari-DDL-SQLServer-CREATE.sql||ambari-server/src/main/resources/Ambari-DDL-SQLServer-CREATE.sql": [
          "File: ambari-server/src/main/resources/Ambari-DDL-SQLServer-CREATE.sql -> ambari-server/src/main/resources/Ambari-DDL-SQLServer-CREATE.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "1290:     SELECT 'CLUSTER.RUN_CUSTOM_COMMAND', 'Perform custom cluster-level actions' UNION ALL",
          "1291:     SELECT 'CLUSTER.MANAGE_AUTO_START', 'Manage service auto-start configuration' UNION ALL",
          "1292:     SELECT 'CLUSTER.MANAGE_ALERT_NOTIFICATIONS', 'Manage alert notifications configuration' UNION ALL",
          "1293:     SELECT 'AMBARI.ADD_DELETE_CLUSTERS', 'Create new clusters' UNION ALL",
          "1294:     SELECT 'AMBARI.RENAME_CLUSTER', 'Rename clusters' UNION ALL",
          "1295:     SELECT 'AMBARI.MANAGE_SETTINGS', 'Manage settings' UNION ALL",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1293:     SELECT 'CLUSTER.MANAGE_WIDGETS', 'Manage widgets' UNION ALL",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1405:     SELECT permission_id, 'CLUSTER.VIEW_ALERTS' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR' UNION ALL",
          "1406:     SELECT permission_id, 'CLUSTER.MANAGE_CREDENTIALS' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR' UNION ALL",
          "1407:     SELECT permission_id, 'CLUSTER.MANAGE_AUTO_START' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR' UNION ALL",
          "1408:     SELECT permission_id, 'CLUSTER.MANAGE_USER_PERSISTED_DATA' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR';",
          "1410:   -- Set authorizations for Cluster Administrator role",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1409:     SELECT permission_id, 'CLUSTER.MANAGE_WIDGETS' FROM adminpermission WHERE permission_name='CLUSTER.OPERATOR' UNION ALL",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1450:     SELECT permission_id, 'CLUSTER.MANAGE_USER_PERSISTED_DATA' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR' UNION ALL",
          "1451:     SELECT permission_id, 'CLUSTER.MANAGE_AUTO_START' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR' UNION ALL",
          "1452:     SELECT permission_id, 'CLUSTER.MANAGE_ALERT_NOTIFICATIONS' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR' UNION ALL",
          "1453:     SELECT permission_id, 'CLUSTER.RUN_CUSTOM_COMMAND' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR';",
          "1455:   -- Set authorizations for Administrator role",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1455:     SELECT permission_id, 'CLUSTER.MANAGE_WIDGETS' FROM adminpermission WHERE permission_name='CLUSTER.ADMINISTRATOR' UNION ALL",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1496:     SELECT permission_id, 'CLUSTER.MANAGE_USER_PERSISTED_DATA' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1497:     SELECT permission_id, 'CLUSTER.MANAGE_AUTO_START' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1498:     SELECT permission_id, 'CLUSTER.MANAGE_ALERT_NOTIFICATIONS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1499:     SELECT permission_id, 'CLUSTER.RUN_CUSTOM_COMMAND' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1500:     SELECT permission_id, 'AMBARI.ADD_DELETE_CLUSTERS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "1501:     SELECT permission_id, 'AMBARI.RENAME_CLUSTER' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1502:     SELECT permission_id, 'CLUSTER.MANAGE_WIDGETS' FROM adminpermission WHERE permission_name='AMBARI.ADMINISTRATOR' UNION ALL",
          "",
          "---------------"
        ],
        "ambari-server/src/test/java/org/apache/ambari/server/controller/internal/WidgetResourceProviderTest.java||ambari-server/src/test/java/org/apache/ambari/server/controller/internal/WidgetResourceProviderTest.java": [
          "File: ambari-server/src/test/java/org/apache/ambari/server/controller/internal/WidgetResourceProviderTest.java -> ambari-server/src/test/java/org/apache/ambari/server/controller/internal/WidgetResourceProviderTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "435:     Cluster cluster = createMock(Cluster.class);",
          "436:     expect(amc.getClusters()).andReturn(clusters).atLeastOnce();",
          "437:     expect(clusters.getCluster((String) anyObject())).andReturn(cluster).atLeastOnce();",
          "440:     Capture<WidgetEntity> entityCapture = EasyMock.newCapture();",
          "441:     dao.create(capture(entityCapture));",
          "",
          "[Removed Lines]",
          "438:     expect(cluster.getClusterId()).andReturn(Long.valueOf(1)).atLeastOnce();",
          "",
          "[Added Lines]",
          "438:     expect(cluster.getResourceId()).andReturn(Long.valueOf(1)).atLeastOnce();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "392607c3e85a56c1ab05d0f68f80a6aa91cb1ce4",
      "candidate_info": {
        "commit_hash": "392607c3e85a56c1ab05d0f68f80a6aa91cb1ce4",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/392607c3e85a56c1ab05d0f68f80a6aa91cb1ce4",
        "files": [
          "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/pre_upgrade.py"
        ],
        "message": "AMBARI-24276. Including Derby jars for Hive convert table step (on behalf of mgergely) (#1908)",
        "before_after_code_files": [
          "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/pre_upgrade.py||ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/pre_upgrade.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/pre_upgrade.py||ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/pre_upgrade.py": [
          "File: ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/pre_upgrade.py -> ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/scripts/pre_upgrade.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import os",
          "22: import shutil",
          "23: import traceback",
          "26: # Ambari Commons & Resource Management Imports",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: import glob",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "100:       Execute(hive_kinit_cmd, user = params.hive_user)",
          "102:     classpath = format(\"{source_dir}/hive2/lib/*:{source_dir}/hadoop/*:{source_dir}/hadoop/lib/*:{source_dir}/hadoop-mapreduce/*:{source_dir}/hadoop-mapreduce/lib/*:{source_dir}/hadoop-hdfs/*:{source_dir}/hadoop-hdfs/lib/*:{source_dir}/hadoop/etc/hadoop/:{target_dir}/hive/lib/hive-pre-upgrade.jar:{source_dir}/hive/conf/conf.server\")",
          "103:     cmd = format(\"{java64_home}/bin/java -Djavax.security.auth.useSubjectCredsOnly=false -cp {classpath} org.apache.hadoop.hive.upgrade.acid.PreUpgradeTool -execute\")",
          "104:     Execute(cmd, user = params.hive_user)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "104:     # hack to avoid derby cp issue we want derby-10.10.2.0.jar to appear first in cp, if its available, note other derby jars are derbyclient-10.11.1.1.jar  derbynet-10.11.1.1.jar",
          "105:     derby_jars = glob.glob(source_dir+\"/hive2/lib/*derby-*.jar\")",
          "106:     if len(derby_jars) == 1:",
          "107:       classpath = derby_jars[0] + \":\" + classpath",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c9e98f9fa2956a51a580d9e44e62d561e243f7ab",
      "candidate_info": {
        "commit_hash": "c9e98f9fa2956a51a580d9e44e62d561e243f7ab",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/c9e98f9fa2956a51a580d9e44e62d561e243f7ab",
        "files": [
          "ambari-admin/src/main/resources/ui/admin-web/app/scripts/app.js"
        ],
        "message": "AMBARI-24597. Popup shown when Ambari started on a different port other than 8080 (akovalenko)",
        "before_after_code_files": [
          "ambari-admin/src/main/resources/ui/admin-web/app/scripts/app.js||ambari-admin/src/main/resources/ui/admin-web/app/scripts/app.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-admin/src/main/resources/ui/admin-web/app/scripts/app.js||ambari-admin/src/main/resources/ui/admin-web/app/scripts/app.js": [
          "File: ambari-admin/src/main/resources/ui/admin-web/app/scripts/app.js -> ambari-admin/src/main/resources/ui/admin-web/app/scripts/app.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: .constant('Settings', {",
          "29:   siteRoot: '{proxy_root}/'.replace(/\\{.+\\}/g, ''),",
          "30:  baseUrl: '{proxy_root}/api/v1'.replace(/\\{.+\\}/g, ''),",
          "32:   mockDataPrefix: 'assets/data/',",
          "33:   isLDAPConfigurationSupported: false,",
          "34:   isLoginActivitiesSupported: false,",
          "",
          "[Removed Lines]",
          "31:   testMode: (window.location.port == 8000),",
          "",
          "[Added Lines]",
          "31:   testMode: false,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "63902d68996b43795718dd39b4a20ba2d3490281",
      "candidate_info": {
        "commit_hash": "63902d68996b43795718dd39b4a20ba2d3490281",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/63902d68996b43795718dd39b4a20ba2d3490281",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/checks/ServicesMapReduceDistributedCacheCheck.java",
          "ambari-server/src/main/java/org/apache/ambari/server/checks/ServicesTezDistributedCacheCheck.java",
          "ambari-server/src/test/java/org/apache/ambari/server/checks/ServicesMapReduceDistributedCacheCheckTest.java",
          "ambari-server/src/test/java/org/apache/ambari/server/checks/ServicesTezDistributedCacheCheckTest.java"
        ],
        "message": "AMBARI-25236. Host Ordered Upgrade: Pre Upgrade check of fs.defaultFS fails for ABFS. (mpapirkovskyy)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/checks/ServicesMapReduceDistributedCacheCheck.java||ambari-server/src/main/java/org/apache/ambari/server/checks/ServicesMapReduceDistributedCacheCheck.java",
          "ambari-server/src/main/java/org/apache/ambari/server/checks/ServicesTezDistributedCacheCheck.java||ambari-server/src/main/java/org/apache/ambari/server/checks/ServicesTezDistributedCacheCheck.java",
          "ambari-server/src/test/java/org/apache/ambari/server/checks/ServicesMapReduceDistributedCacheCheckTest.java||ambari-server/src/test/java/org/apache/ambari/server/checks/ServicesMapReduceDistributedCacheCheckTest.java",
          "ambari-server/src/test/java/org/apache/ambari/server/checks/ServicesTezDistributedCacheCheckTest.java||ambari-server/src/test/java/org/apache/ambari/server/checks/ServicesTezDistributedCacheCheckTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/checks/ServicesMapReduceDistributedCacheCheck.java||ambari-server/src/main/java/org/apache/ambari/server/checks/ServicesMapReduceDistributedCacheCheck.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/checks/ServicesMapReduceDistributedCacheCheck.java -> ambari-server/src/main/java/org/apache/ambari/server/checks/ServicesMapReduceDistributedCacheCheck.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:   static final String KEY_FRAMEWORK_PATH = \"framework_path\";",
          "48:   static final String KEY_NOT_DFS = \"not_dfs\";",
          "49:   static final String DFS_PROTOCOLS_REGEX_PROPERTY_NAME = \"dfs-protocols-regex\";",
          "",
          "[Removed Lines]",
          "50:   static final String DFS_PROTOCOLS_REGEX_DEFAULT = \"^([^:]*dfs|wasb|ecs):.*\";",
          "",
          "[Added Lines]",
          "50:   static final String DFS_PROTOCOLS_REGEX_DEFAULT = \"^([^:]*dfs|wasb|ecs|abfs):.*\";",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/checks/ServicesTezDistributedCacheCheck.java||ambari-server/src/main/java/org/apache/ambari/server/checks/ServicesTezDistributedCacheCheck.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/checks/ServicesTezDistributedCacheCheck.java -> ambari-server/src/main/java/org/apache/ambari/server/checks/ServicesTezDistributedCacheCheck.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:   static final String KEY_LIB_NOT_TARGZ = \"lib_not_targz\";",
          "50:   static final String KEY_USE_HADOOP_LIBS_FALSE = \"tez_use_hadoop_libs_false\";",
          "51:   static final String DFS_PROTOCOLS_REGEX_PROPERTY_NAME = \"dfs-protocols-regex\";",
          "",
          "[Removed Lines]",
          "52:   static final String DFS_PROTOCOLS_REGEX_DEFAULT = \"^([^:]*dfs|wasb|ecs):.*\";",
          "",
          "[Added Lines]",
          "52:   static final String DFS_PROTOCOLS_REGEX_DEFAULT = \"^([^:]*dfs|wasb|ecs|abfs):.*\";",
          "",
          "---------------"
        ],
        "ambari-server/src/test/java/org/apache/ambari/server/checks/ServicesMapReduceDistributedCacheCheckTest.java||ambari-server/src/test/java/org/apache/ambari/server/checks/ServicesMapReduceDistributedCacheCheckTest.java": [
          "File: ambari-server/src/test/java/org/apache/ambari/server/checks/ServicesMapReduceDistributedCacheCheckTest.java -> ambari-server/src/test/java/org/apache/ambari/server/checks/ServicesMapReduceDistributedCacheCheckTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "190:     Mockito.when(config.getProperties()).thenReturn(properties);",
          "192:     Map<String, String> checkProperties = new HashMap<>();",
          "194:     PrerequisiteCheckConfig prerequisiteCheckConfig = Mockito.mock(PrerequisiteCheckConfig.class);",
          "195:     Mockito.when(prerequisiteCheckConfig.getCheckProperties(",
          "196:         servicesMapReduceDistributedCacheCheck.getClass().getName())).thenReturn(checkProperties);",
          "",
          "[Removed Lines]",
          "193:     checkProperties.put(\"dfs-protocols-regex\",\"^([^:]*dfs|wasb|ecs):.*\");",
          "",
          "[Added Lines]",
          "193:     checkProperties.put(\"dfs-protocols-regex\",ServicesMapReduceDistributedCacheCheck.DFS_PROTOCOLS_REGEX_DEFAULT);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "228:     servicesMapReduceDistributedCacheCheck.perform(check, request);",
          "229:     Assert.assertEquals(PrereqCheckStatus.PASS, check.getStatus());",
          "231:     properties.put(\"fs.defaultFS\", \"anything\");",
          "232:     properties.put(\"mapreduce.application.framework.path\", \"ecs://some/path\");",
          "233:     properties.put(\"mapreduce.application.classpath\", \"anything\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "231:     properties.put(\"fs.defaultFS\", \"anything\");",
          "232:     properties.put(\"mapreduce.application.framework.path\", \"abfs://some/path\");",
          "233:     properties.put(\"mapreduce.application.classpath\", \"anything\");",
          "234:     request = new PrereqCheckRequest(\"cluster\");",
          "235:     request.setPrerequisiteCheckConfig(prerequisiteCheckConfig);",
          "236:     check = new PrerequisiteCheck(null, null);",
          "237:     servicesMapReduceDistributedCacheCheck.perform(check, request);",
          "238:     Assert.assertEquals(PrereqCheckStatus.PASS, check.getStatus());",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "264:     servicesMapReduceDistributedCacheCheck.perform(check, request);",
          "265:     Assert.assertEquals(PrereqCheckStatus.PASS, check.getStatus());",
          "267:     properties.put(\"fs.defaultFS\", \"ecs://ha\");",
          "268:     properties.put(\"mapreduce.application.framework.path\", \"/some/path\");",
          "269:     properties.put(\"mapreduce.application.classpath\", \"anything\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "276:     properties.put(\"fs.defaultFS\", \"abfs://ha\");",
          "277:     properties.put(\"mapreduce.application.framework.path\", \"/some/path\");",
          "278:     properties.put(\"mapreduce.application.classpath\", \"anything\");",
          "279:     request = new PrereqCheckRequest(\"cluster\");",
          "280:     request.setPrerequisiteCheckConfig(prerequisiteCheckConfig);",
          "281:     check = new PrerequisiteCheck(null, null);",
          "282:     servicesMapReduceDistributedCacheCheck.perform(check, request);",
          "283:     Assert.assertEquals(PrereqCheckStatus.PASS, check.getStatus());",
          "",
          "---------------"
        ],
        "ambari-server/src/test/java/org/apache/ambari/server/checks/ServicesTezDistributedCacheCheckTest.java||ambari-server/src/test/java/org/apache/ambari/server/checks/ServicesTezDistributedCacheCheckTest.java": [
          "File: ambari-server/src/test/java/org/apache/ambari/server/checks/ServicesTezDistributedCacheCheckTest.java -> ambari-server/src/test/java/org/apache/ambari/server/checks/ServicesTezDistributedCacheCheckTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "207:     Mockito.when(config.getProperties()).thenReturn(properties);",
          "209:     Map<String, String> checkProperties = new HashMap<>();",
          "211:     PrerequisiteCheckConfig prerequisiteCheckConfig = Mockito.mock(PrerequisiteCheckConfig.class);",
          "212:     Mockito.when(prerequisiteCheckConfig.getCheckProperties(",
          "213:         servicesTezDistributedCacheCheck.getClass().getName())).thenReturn(checkProperties);",
          "",
          "[Removed Lines]",
          "210:     checkProperties.put(\"dfs-protocols-regex\",\"^([^:]*dfs|wasb|ecs):.*\");",
          "",
          "[Added Lines]",
          "210:     checkProperties.put(\"dfs-protocols-regex\", ServicesTezDistributedCacheCheck.DFS_PROTOCOLS_REGEX_DEFAULT);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "246:     servicesTezDistributedCacheCheck.perform(check, request);",
          "247:     Assert.assertEquals(PrereqCheckStatus.PASS, check.getStatus());",
          "249:     properties.put(\"fs.defaultFS\", \"anything\");",
          "250:     properties.put(\"tez.lib.uris\", \"ecs://some/path/to/archive.tar.gz\");",
          "251:     properties.put(\"tez.use.cluster.hadoop-libs\", \"false\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "249:     properties.put(\"fs.defaultFS\", \"anything\");",
          "250:     properties.put(\"tez.lib.uris\", \"abfs://some/path/to/archive.tar.gz\");",
          "251:     properties.put(\"tez.use.cluster.hadoop-libs\", \"false\");",
          "252:     request = new PrereqCheckRequest(\"cluster\");",
          "253:     request.setPrerequisiteCheckConfig(prerequisiteCheckConfig);",
          "254:     check = new PrerequisiteCheck(null, null);",
          "255:     servicesTezDistributedCacheCheck.perform(check, request);",
          "256:     Assert.assertEquals(PrereqCheckStatus.PASS, check.getStatus());",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "282:     servicesTezDistributedCacheCheck.perform(check, request);",
          "283:     Assert.assertEquals(PrereqCheckStatus.PASS, check.getStatus());",
          "285:     properties.put(\"fs.defaultFS\", \"ecs://ha\");",
          "286:     properties.put(\"tez.lib.uris\", \"/some/path/to/archive.tar.gz\");",
          "287:     properties.put(\"tez.use.cluster.hadoop-libs\", \"false\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "292:     Assert.assertEquals(PrereqCheckStatus.PASS, check.getStatus());",
          "294:     properties.put(\"fs.defaultFS\", \"abfs://ha\");",
          "295:     properties.put(\"tez.lib.uris\", \"/some/path/to/archive.tar.gz\");",
          "296:     properties.put(\"tez.use.cluster.hadoop-libs\", \"false\");",
          "297:     request = new PrereqCheckRequest(\"cluster\");",
          "298:     request.setPrerequisiteCheckConfig(prerequisiteCheckConfig);",
          "299:     check = new PrerequisiteCheck(null, null);",
          "300:     servicesTezDistributedCacheCheck.perform(check, request);",
          "",
          "---------------"
        ]
      }
    }
  ]
}