{
  "cve_id": "CVE-2016-8749",
  "cve_desc": "Apache Camel's Jackson and JacksonXML unmarshalling operation are vulnerable to Remote Code Execution attacks.",
  "repo": "apache/camel",
  "patch_hash": "881e5099f94316d4a66ffbff0a3e6915829d49d7",
  "patch_info": {
    "commit_hash": "881e5099f94316d4a66ffbff0a3e6915829d49d7",
    "repo": "apache/camel",
    "commit_url": "https://github.com/apache/camel/commit/881e5099f94316d4a66ffbff0a3e6915829d49d7",
    "files": [
      "camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java",
      "components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java",
      "components/camel-jacksonxml/src/main/docs/jacksonxml-dataformat.adoc",
      "components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java",
      "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
      "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java"
    ],
    "message": "CAMEL-10604 - Camel-JacksonXML: Add an option to allow the UnmarshallType header use",
    "before_after_code_files": [
      "camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java||camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java",
      "components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java||components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java",
      "components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java||components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java",
      "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
      "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java"
    ]
  },
  "patch_diff": {
    "camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java||camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java": [
      "File: camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java -> camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "68:     private String enableFeatures;",
      "69:     @XmlAttribute",
      "70:     private String disableFeatures;",
      "72:     public JacksonXMLDataFormat() {",
      "73:         super(\"jacksonxml\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "71:     @XmlAttribute",
      "72:     private Boolean allowUnmarshallType;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "256:     public void setDisableFeatures(String disableFeatures) {",
      "257:         this.disableFeatures = disableFeatures;",
      "258:     }",
      "260:     @Override",
      "261:     public String getDataFormatName() {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "262:     public Boolean getAllowUnmarshallType() {",
      "263:         return allowUnmarshallType;",
      "264:     }",
      "271:     public void setAllowUnmarshallType(Boolean allowUnmarshallType) {",
      "272:         this.allowUnmarshallType = allowUnmarshallType;",
      "273:     }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "326:         if (disableFeatures != null) {",
      "327:             setProperty(camelContext, dataFormat, \"disableFeatures\", disableFeatures);",
      "328:         }",
      "329:     }",
      "331: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "344:         if (allowUnmarshallType != null) {",
      "345:             setProperty(camelContext, dataFormat, \"allowUnmarshallType\", allowUnmarshallType);",
      "346:         }",
      "",
      "---------------"
    ],
    "components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java||components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java": [
      "File: components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java -> components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "103:     private String disableFeatures;",
      "105:     public String getXmlMapper() {",
      "106:         return xmlMapper;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "109:     private Boolean allowUnmarshallType = false;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "205:     public void setDisableFeatures(String disableFeatures) {",
      "206:         this.disableFeatures = disableFeatures;",
      "207:     }",
      "208: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "215:     public Boolean getAllowUnmarshallType() {",
      "216:         return allowUnmarshallType;",
      "217:     }",
      "219:     public void setAllowUnmarshallType(Boolean allowUnmarshallType) {",
      "220:         this.allowUnmarshallType = allowUnmarshallType;",
      "221:     }",
      "",
      "---------------"
    ],
    "components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java||components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java": [
      "File: components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java -> components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "68:     private String enableFeatures;",
      "69:     private String disableFeatures;",
      "70:     private boolean enableJacksonTypeConverter;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "71:     private boolean allowUnmarshallType;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "160:         Class<?> clazz = unmarshalType;",
      "162:         if (type == null && isAllowJmsType()) {",
      "163:             type = exchange.getIn().getHeader(\"JMSType\", String.class);",
      "164:         }",
      "",
      "[Removed Lines]",
      "161:         String type = exchange.getIn().getHeader(JacksonXMLConstants.UNMARSHAL_TYPE, String.class);",
      "",
      "[Added Lines]",
      "162:         String type = null;",
      "163:         if (allowUnmarshallType) {",
      "164:             type = exchange.getIn().getHeader(JacksonXMLConstants.UNMARSHAL_TYPE, String.class);",
      "165:         }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "326:     public void setEnableJacksonTypeConverter(boolean enableJacksonTypeConverter) {",
      "327:         this.enableJacksonTypeConverter = enableJacksonTypeConverter;",
      "328:     }",
      "330:     public String getEnableFeatures() {",
      "331:         return enableFeatures;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "334:     public boolean isAllowUnmarshallType() {",
      "335:         return allowUnmarshallType;",
      "336:     }",
      "343:     public void setAllowUnmarshallType(boolean allowJacksonUnmarshallType) {",
      "344:         this.allowUnmarshallType = allowJacksonUnmarshallType;",
      "345:     }",
      "",
      "---------------"
    ],
    "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java": [
      "File: components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java -> components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "17: package org.apache.camel.component.jacksonxml;",
      "19: import java.util.LinkedHashMap;",
      "21: import org.apache.camel.builder.RouteBuilder;",
      "22: import org.apache.camel.component.mock.MockEndpoint;",
      "23: import org.apache.camel.test.junit4.CamelTestSupport;",
      "24: import org.junit.Test;",
      "26: public class JacksonMarshalUnmarshalTypeHeaderNotAllowedTest extends CamelTestSupport {",
      "28:     @Test",
      "29:     public void testUnmarshalPojo() throws Exception {",
      "30:         MockEndpoint mock = getMockEndpoint(\"mock:reversePojo\");",
      "31:         mock.expectedMessageCount(1);",
      "33:         String json = \"<pojo name=\\\"Camel\\\"/>\";",
      "34:         template.sendBodyAndHeader(\"direct:backPojo\", json, JacksonXMLConstants.UNMARSHAL_TYPE, TestPojo.class.getName());",
      "36:         assertMockEndpointsSatisfied();",
      "37:     }",
      "39:     @Override",
      "40:     protected RouteBuilder createRouteBuilder() throws Exception {",
      "41:         return new RouteBuilder() {",
      "43:             @Override",
      "44:             public void configure() throws Exception {",
      "45:                 JacksonXMLDataFormat format = new JacksonXMLDataFormat();",
      "47:                 from(\"direct:backPojo\").unmarshal(format).to(\"mock:reversePojo\");",
      "49:             }",
      "50:         };",
      "51:     }",
      "53: }",
      "",
      "---------------"
    ],
    "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java": [
      "File: components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java -> components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "46:             @Override",
      "47:             public void configure() throws Exception {",
      "48:                 JacksonXMLDataFormat format = new JacksonXMLDataFormat();",
      "50:                 from(\"direct:backPojo\").unmarshal(format).to(\"mock:reversePojo\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "49:                 format.setAllowUnmarshallType(true);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ccf149c76bf37adc5977dc626e141a14e60b5aee",
      "candidate_info": {
        "commit_hash": "ccf149c76bf37adc5977dc626e141a14e60b5aee",
        "repo": "apache/camel",
        "commit_url": "https://github.com/apache/camel/commit/ccf149c76bf37adc5977dc626e141a14e60b5aee",
        "files": [
          "camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java",
          "components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java",
          "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
          "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java"
        ],
        "message": "CAMEL-10604 - Camel-JacksonXML: Add an option to allow the UnmarshallType header use",
        "before_after_code_files": [
          "camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java||camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java",
          "components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java||components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java",
          "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
          "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java||camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java",
            "components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java||components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java",
            "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
            "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java"
          ],
          "candidate": [
            "camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java||camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java",
            "components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java||components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java",
            "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
            "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java"
          ]
        }
      },
      "candidate_diff": {
        "camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java||camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java": [
          "File: camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java -> camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:     private String enableFeatures;",
          "67:     @XmlAttribute",
          "68:     private String disableFeatures;",
          "70:     public JacksonXMLDataFormat() {",
          "71:         super(\"jacksonxml\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "69:     @XmlAttribute",
          "70:     private Boolean allowUnmarshallType;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "243:     public void setDisableFeatures(String disableFeatures) {",
          "244:         this.disableFeatures = disableFeatures;",
          "245:     }",
          "247:     @Override",
          "248:     public String getDataFormatName() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "249:     public Boolean getAllowUnmarshallType() {",
          "250:         return allowUnmarshallType;",
          "251:     }",
          "258:     public void setAllowUnmarshallType(Boolean allowUnmarshallType) {",
          "259:         this.allowUnmarshallType = allowUnmarshallType;",
          "260:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "308:         if (disableFeatures != null) {",
          "309:             setProperty(camelContext, dataFormat, \"disableFeatures\", disableFeatures);",
          "310:         }",
          "311:     }",
          "313: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "326:         if (allowUnmarshallType != null) {",
          "327:             setProperty(camelContext, dataFormat, \"allowUnmarshallType\", allowUnmarshallType);",
          "328:         }",
          "",
          "---------------"
        ],
        "components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java||components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java": [
          "File: components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java -> components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:     private String enableFeatures;",
          "69:     private String disableFeatures;",
          "70:     private boolean enableJacksonTypeConverter;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71:     private boolean allowUnmarshallType;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "161:         Class<?> clazz = unmarshalType;",
          "163:         if (type == null && isAllowJmsType()) {",
          "164:             type = exchange.getIn().getHeader(\"JMSType\", String.class);",
          "165:         }",
          "",
          "[Removed Lines]",
          "162:         String type = exchange.getIn().getHeader(JacksonXMLConstants.UNMARSHAL_TYPE, String.class);",
          "",
          "[Added Lines]",
          "163:         String type = null;",
          "164:         if (allowUnmarshallType) {",
          "165:             type = exchange.getIn().getHeader(JacksonXMLConstants.UNMARSHAL_TYPE, String.class);",
          "166:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "323:     public void setEnableJacksonTypeConverter(boolean enableJacksonTypeConverter) {",
          "324:         this.enableJacksonTypeConverter = enableJacksonTypeConverter;",
          "325:     }",
          "327:     public String getEnableFeatures() {",
          "328:         return enableFeatures;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "331:     public boolean isAllowUnmarshallType() {",
          "332:         return allowUnmarshallType;",
          "333:     }",
          "340:     public void setAllowUnmarshallType(boolean allowJacksonUnmarshallType) {",
          "341:         this.allowUnmarshallType = allowJacksonUnmarshallType;",
          "342:     }",
          "",
          "---------------"
        ],
        "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java": [
          "File: components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java -> components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.apache.camel.component.jacksonxml;",
          "19: import java.util.LinkedHashMap;",
          "21: import org.apache.camel.builder.RouteBuilder;",
          "22: import org.apache.camel.component.mock.MockEndpoint;",
          "23: import org.apache.camel.test.junit4.CamelTestSupport;",
          "24: import org.junit.Test;",
          "26: public class JacksonMarshalUnmarshalTypeHeaderNotAllowedTest extends CamelTestSupport {",
          "28:     @Test",
          "29:     public void testUnmarshalPojo() throws Exception {",
          "30:         MockEndpoint mock = getMockEndpoint(\"mock:reversePojo\");",
          "31:         mock.expectedMessageCount(1);",
          "33:         String json = \"<pojo name=\\\"Camel\\\"/>\";",
          "34:         template.sendBodyAndHeader(\"direct:backPojo\", json, JacksonXMLConstants.UNMARSHAL_TYPE, TestPojo.class.getName());",
          "36:         assertMockEndpointsSatisfied();",
          "37:     }",
          "39:     @Override",
          "40:     protected RouteBuilder createRouteBuilder() throws Exception {",
          "41:         return new RouteBuilder() {",
          "43:             @Override",
          "44:             public void configure() throws Exception {",
          "45:                 JacksonXMLDataFormat format = new JacksonXMLDataFormat();",
          "47:                 from(\"direct:backPojo\").unmarshal(format).to(\"mock:reversePojo\");",
          "49:             }",
          "50:         };",
          "51:     }",
          "53: }",
          "",
          "---------------"
        ],
        "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java": [
          "File: components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java -> components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:             @Override",
          "47:             public void configure() throws Exception {",
          "48:                 JacksonXMLDataFormat format = new JacksonXMLDataFormat();",
          "50:                 from(\"direct:backPojo\").unmarshal(format).to(\"mock:reversePojo\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:                 format.setAllowUnmarshallType(true);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5ae9c0dcc4843347cd01ffb58ce5dd0687755a14",
      "candidate_info": {
        "commit_hash": "5ae9c0dcc4843347cd01ffb58ce5dd0687755a14",
        "repo": "apache/camel",
        "commit_url": "https://github.com/apache/camel/commit/5ae9c0dcc4843347cd01ffb58ce5dd0687755a14",
        "files": [
          "camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java",
          "components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java",
          "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
          "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java"
        ],
        "message": "CAMEL-10604 - Camel-JacksonXML: Add an option to allow the UnmarshallType header use",
        "before_after_code_files": [
          "camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java||camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java",
          "components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java||components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java",
          "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
          "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java||camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java",
            "components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java||components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java",
            "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
            "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java"
          ],
          "candidate": [
            "camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java||camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java",
            "components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java||components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java",
            "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
            "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java"
          ]
        }
      },
      "candidate_diff": {
        "camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java||camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java": [
          "File: camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java -> camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:     private String enableFeatures;",
          "69:     @XmlAttribute",
          "70:     private String disableFeatures;",
          "72:     public JacksonXMLDataFormat() {",
          "73:         super(\"jacksonxml\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71:     @XmlAttribute",
          "72:     private Boolean allowUnmarshallType;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "256:     public void setDisableFeatures(String disableFeatures) {",
          "257:         this.disableFeatures = disableFeatures;",
          "258:     }",
          "260:     @Override",
          "261:     public String getDataFormatName() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "262:     public Boolean getAllowUnmarshallType() {",
          "263:         return allowUnmarshallType;",
          "264:     }",
          "271:     public void setAllowUnmarshallType(Boolean allowUnmarshallType) {",
          "272:         this.allowUnmarshallType = allowUnmarshallType;",
          "273:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "326:         if (disableFeatures != null) {",
          "327:             setProperty(camelContext, dataFormat, \"disableFeatures\", disableFeatures);",
          "328:         }",
          "329:     }",
          "331: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "344:         if (allowUnmarshallType != null) {",
          "345:             setProperty(camelContext, dataFormat, \"allowUnmarshallType\", allowUnmarshallType);",
          "346:         }",
          "",
          "---------------"
        ],
        "components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java||components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java": [
          "File: components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java -> components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:     private String enableFeatures;",
          "69:     private String disableFeatures;",
          "70:     private boolean enableJacksonTypeConverter;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71:     private boolean allowUnmarshallType;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "160:         Class<?> clazz = unmarshalType;",
          "162:         if (type == null && isAllowJmsType()) {",
          "163:             type = exchange.getIn().getHeader(\"JMSType\", String.class);",
          "164:         }",
          "",
          "[Removed Lines]",
          "161:         String type = exchange.getIn().getHeader(JacksonXMLConstants.UNMARSHAL_TYPE, String.class);",
          "",
          "[Added Lines]",
          "162:         String type = null;",
          "163:         if (allowUnmarshallType) {",
          "164:             type = exchange.getIn().getHeader(JacksonXMLConstants.UNMARSHAL_TYPE, String.class);",
          "165:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "326:     public void setEnableJacksonTypeConverter(boolean enableJacksonTypeConverter) {",
          "327:         this.enableJacksonTypeConverter = enableJacksonTypeConverter;",
          "328:     }",
          "330:     public String getEnableFeatures() {",
          "331:         return enableFeatures;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "334:     public boolean isAllowUnmarshallType() {",
          "335:         return allowUnmarshallType;",
          "336:     }",
          "343:     public void setAllowUnmarshallType(boolean allowJacksonUnmarshallType) {",
          "344:         this.allowUnmarshallType = allowJacksonUnmarshallType;",
          "345:     }",
          "",
          "---------------"
        ],
        "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java": [
          "File: components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java -> components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.apache.camel.component.jacksonxml;",
          "19: import java.util.LinkedHashMap;",
          "21: import org.apache.camel.builder.RouteBuilder;",
          "22: import org.apache.camel.component.mock.MockEndpoint;",
          "23: import org.apache.camel.test.junit4.CamelTestSupport;",
          "24: import org.junit.Test;",
          "26: public class JacksonMarshalUnmarshalTypeHeaderNotAllowedTest extends CamelTestSupport {",
          "28:     @Test",
          "29:     public void testUnmarshalPojo() throws Exception {",
          "30:         MockEndpoint mock = getMockEndpoint(\"mock:reversePojo\");",
          "31:         mock.expectedMessageCount(1);",
          "33:         String json = \"<pojo name=\\\"Camel\\\"/>\";",
          "34:         template.sendBodyAndHeader(\"direct:backPojo\", json, JacksonXMLConstants.UNMARSHAL_TYPE, TestPojo.class.getName());",
          "36:         assertMockEndpointsSatisfied();",
          "37:     }",
          "39:     @Override",
          "40:     protected RouteBuilder createRouteBuilder() throws Exception {",
          "41:         return new RouteBuilder() {",
          "43:             @Override",
          "44:             public void configure() throws Exception {",
          "45:                 JacksonXMLDataFormat format = new JacksonXMLDataFormat();",
          "47:                 from(\"direct:backPojo\").unmarshal(format).to(\"mock:reversePojo\");",
          "49:             }",
          "50:         };",
          "51:     }",
          "53: }",
          "",
          "---------------"
        ],
        "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java": [
          "File: components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java -> components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:             @Override",
          "47:             public void configure() throws Exception {",
          "48:                 JacksonXMLDataFormat format = new JacksonXMLDataFormat();",
          "50:                 from(\"direct:backPojo\").unmarshal(format).to(\"mock:reversePojo\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:                 format.setAllowUnmarshallType(true);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8c862aa11e31d0f804c4a4516a0715e05e3eebcf",
      "candidate_info": {
        "commit_hash": "8c862aa11e31d0f804c4a4516a0715e05e3eebcf",
        "repo": "apache/camel",
        "commit_url": "https://github.com/apache/camel/commit/8c862aa11e31d0f804c4a4516a0715e05e3eebcf",
        "files": [
          "camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java",
          "components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java",
          "components/camel-jacksonxml/src/main/docs/jacksonxml-dataformat.adoc",
          "components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java",
          "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
          "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java"
        ],
        "message": "CAMEL-10604 - Camel-JacksonXML: Add an option to allow the UnmarshallType header use",
        "before_after_code_files": [
          "camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java||camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java",
          "components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java||components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java",
          "components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java||components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java",
          "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
          "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java||camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java",
            "components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java||components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java",
            "components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java||components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java",
            "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
            "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java"
          ],
          "candidate": [
            "camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java||camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java",
            "components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java||components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java",
            "components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java||components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java",
            "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
            "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java"
          ]
        }
      },
      "candidate_diff": {
        "camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java||camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java": [
          "File: camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java -> camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:     private String enableFeatures;",
          "69:     @XmlAttribute",
          "70:     private String disableFeatures;",
          "72:     public JacksonXMLDataFormat() {",
          "73:         super(\"jacksonxml\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71:     @XmlAttribute",
          "72:     private Boolean allowUnmarshallType;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "256:     public void setDisableFeatures(String disableFeatures) {",
          "257:         this.disableFeatures = disableFeatures;",
          "258:     }",
          "260:     @Override",
          "261:     public String getDataFormatName() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "262:     public Boolean getAllowUnmarshallType() {",
          "263:         return allowUnmarshallType;",
          "264:     }",
          "271:     public void setAllowUnmarshallType(Boolean allowUnmarshallType) {",
          "272:         this.allowUnmarshallType = allowUnmarshallType;",
          "273:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "326:         if (disableFeatures != null) {",
          "327:             setProperty(camelContext, dataFormat, \"disableFeatures\", disableFeatures);",
          "328:         }",
          "329:     }",
          "331: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "344:         if (allowUnmarshallType != null) {",
          "345:             setProperty(camelContext, dataFormat, \"allowUnmarshallType\", allowUnmarshallType);",
          "346:         }",
          "",
          "---------------"
        ],
        "components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java||components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java": [
          "File: components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java -> components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "103:     private String disableFeatures;",
          "105:     public String getXmlMapper() {",
          "106:         return xmlMapper;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "109:     private Boolean allowUnmarshallType = false;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "205:     public void setDisableFeatures(String disableFeatures) {",
          "206:         this.disableFeatures = disableFeatures;",
          "207:     }",
          "208: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "215:     public Boolean getAllowUnmarshallType() {",
          "216:         return allowUnmarshallType;",
          "217:     }",
          "219:     public void setAllowUnmarshallType(Boolean allowUnmarshallType) {",
          "220:         this.allowUnmarshallType = allowUnmarshallType;",
          "221:     }",
          "",
          "---------------"
        ],
        "components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java||components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java": [
          "File: components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java -> components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:     private String enableFeatures;",
          "69:     private String disableFeatures;",
          "70:     private boolean enableJacksonTypeConverter;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71:     private boolean allowUnmarshallType;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "160:         Class<?> clazz = unmarshalType;",
          "162:         if (type == null && isAllowJmsType()) {",
          "163:             type = exchange.getIn().getHeader(\"JMSType\", String.class);",
          "164:         }",
          "",
          "[Removed Lines]",
          "161:         String type = exchange.getIn().getHeader(JacksonXMLConstants.UNMARSHAL_TYPE, String.class);",
          "",
          "[Added Lines]",
          "162:         String type = null;",
          "163:         if (allowUnmarshallType) {",
          "164:             type = exchange.getIn().getHeader(JacksonXMLConstants.UNMARSHAL_TYPE, String.class);",
          "165:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "326:     public void setEnableJacksonTypeConverter(boolean enableJacksonTypeConverter) {",
          "327:         this.enableJacksonTypeConverter = enableJacksonTypeConverter;",
          "328:     }",
          "330:     public String getEnableFeatures() {",
          "331:         return enableFeatures;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "334:     public boolean isAllowUnmarshallType() {",
          "335:         return allowUnmarshallType;",
          "336:     }",
          "343:     public void setAllowUnmarshallType(boolean allowJacksonUnmarshallType) {",
          "344:         this.allowUnmarshallType = allowJacksonUnmarshallType;",
          "345:     }",
          "",
          "---------------"
        ],
        "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java": [
          "File: components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java -> components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.apache.camel.component.jacksonxml;",
          "19: import java.util.LinkedHashMap;",
          "21: import org.apache.camel.builder.RouteBuilder;",
          "22: import org.apache.camel.component.mock.MockEndpoint;",
          "23: import org.apache.camel.test.junit4.CamelTestSupport;",
          "24: import org.junit.Test;",
          "26: public class JacksonMarshalUnmarshalTypeHeaderNotAllowedTest extends CamelTestSupport {",
          "28:     @Test",
          "29:     public void testUnmarshalPojo() throws Exception {",
          "30:         MockEndpoint mock = getMockEndpoint(\"mock:reversePojo\");",
          "31:         mock.expectedMessageCount(1);",
          "33:         String json = \"<pojo name=\\\"Camel\\\"/>\";",
          "34:         template.sendBodyAndHeader(\"direct:backPojo\", json, JacksonXMLConstants.UNMARSHAL_TYPE, TestPojo.class.getName());",
          "36:         assertMockEndpointsSatisfied();",
          "37:     }",
          "39:     @Override",
          "40:     protected RouteBuilder createRouteBuilder() throws Exception {",
          "41:         return new RouteBuilder() {",
          "43:             @Override",
          "44:             public void configure() throws Exception {",
          "45:                 JacksonXMLDataFormat format = new JacksonXMLDataFormat();",
          "47:                 from(\"direct:backPojo\").unmarshal(format).to(\"mock:reversePojo\");",
          "49:             }",
          "50:         };",
          "51:     }",
          "53: }",
          "",
          "---------------"
        ],
        "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java": [
          "File: components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java -> components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:             @Override",
          "47:             public void configure() throws Exception {",
          "48:                 JacksonXMLDataFormat format = new JacksonXMLDataFormat();",
          "50:                 from(\"direct:backPojo\").unmarshal(format).to(\"mock:reversePojo\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:                 format.setAllowUnmarshallType(true);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "97e3928de57c45235cade4b185e4cf2d59f87c28",
      "candidate_info": {
        "commit_hash": "97e3928de57c45235cade4b185e4cf2d59f87c28",
        "repo": "apache/camel",
        "commit_url": "https://github.com/apache/camel/commit/97e3928de57c45235cade4b185e4cf2d59f87c28",
        "files": [
          "camel-core/src/main/java/org/apache/camel/model/dataformat/JsonDataFormat.java"
        ],
        "message": "CAMEL-10567: Camel-Jackson: Add an option to allow the UnmarshallType header use",
        "before_after_code_files": [
          "camel-core/src/main/java/org/apache/camel/model/dataformat/JsonDataFormat.java||camel-core/src/main/java/org/apache/camel/model/dataformat/JsonDataFormat.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "camel-core/src/main/java/org/apache/camel/model/dataformat/JsonDataFormat.java||camel-core/src/main/java/org/apache/camel/model/dataformat/JsonDataFormat.java": [
          "File: camel-core/src/main/java/org/apache/camel/model/dataformat/JsonDataFormat.java -> camel-core/src/main/java/org/apache/camel/model/dataformat/JsonDataFormat.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:     private String disableFeatures;",
          "74:     @XmlAttribute",
          "75:     private String permissions;",
          "77:     public JsonDataFormat() {",
          "78:         super(\"json\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:     @XmlAttribute",
          "77:     private Boolean allowUnmarshallType;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "303:         setPermissions(csb.toString());",
          "304:     }",
          "306:     @Override",
          "307:     public String getDataFormatName() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "308:     public Boolean getAllowUnmarshallType() {",
          "309:         return allowUnmarshallType;",
          "310:     }",
          "317:     public void setAllowUnmarshallType(Boolean allowUnmarshallType) {",
          "318:         this.allowUnmarshallType = allowUnmarshallType;",
          "319:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "385:         if (permissions != null) {",
          "386:             setProperty(camelContext, dataFormat, \"permissions\", permissions);",
          "387:         }",
          "389:         if (permissions == null && unmarshalType != null) {",
          "390:             String allow = \"+\" + unmarshalType.getName();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "403:         if (allowUnmarshallType != null) {",
          "404:             setProperty(camelContext, dataFormat, \"allowUnmarshallType\", allowUnmarshallType);",
          "405:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c93a87c36aa4d14ad6f7ee1df9507fa2ca1fd91a",
      "candidate_info": {
        "commit_hash": "c93a87c36aa4d14ad6f7ee1df9507fa2ca1fd91a",
        "repo": "apache/camel",
        "commit_url": "https://github.com/apache/camel/commit/c93a87c36aa4d14ad6f7ee1df9507fa2ca1fd91a",
        "files": [
          "camel-core/src/main/java/org/apache/camel/model/dataformat/JsonDataFormat.java"
        ],
        "message": "CAMEL-10567: Camel-Jackson: Add an option to allow the UnmarshallType header use",
        "before_after_code_files": [
          "camel-core/src/main/java/org/apache/camel/model/dataformat/JsonDataFormat.java||camel-core/src/main/java/org/apache/camel/model/dataformat/JsonDataFormat.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "camel-core/src/main/java/org/apache/camel/model/dataformat/JsonDataFormat.java||camel-core/src/main/java/org/apache/camel/model/dataformat/JsonDataFormat.java": [
          "File: camel-core/src/main/java/org/apache/camel/model/dataformat/JsonDataFormat.java -> camel-core/src/main/java/org/apache/camel/model/dataformat/JsonDataFormat.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:     private String disableFeatures;",
          "74:     @XmlAttribute",
          "75:     private String permissions;",
          "77:     public JsonDataFormat() {",
          "78:         super(\"json\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:     @XmlAttribute",
          "77:     private Boolean allowUnmarshallType;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "303:         setPermissions(csb.toString());",
          "304:     }",
          "306:     @Override",
          "307:     public String getDataFormatName() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "308:     public Boolean getAllowUnmarshallType() {",
          "309:         return allowUnmarshallType;",
          "310:     }",
          "317:     public void setAllowUnmarshallType(Boolean allowUnmarshallType) {",
          "318:         this.allowUnmarshallType = allowUnmarshallType;",
          "319:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "383:         if (permissions != null) {",
          "384:             setProperty(camelContext, dataFormat, \"permissions\", permissions);",
          "385:         }",
          "387:         if (permissions == null && unmarshalType != null) {",
          "388:             String allow = \"+\" + unmarshalType.getName();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "401:         if (allowUnmarshallType != null) {",
          "402:             setProperty(camelContext, dataFormat, \"allowUnmarshallType\", allowUnmarshallType);",
          "403:         }",
          "",
          "---------------"
        ]
      }
    }
  ]
}