{
  "cve_id": "CVE-2021-32767",
  "cve_desc": "TYPO3 is an open source PHP based web content management system. In versions 9.0.0 through 9.5.27, 10.0.0 through 10.4.17, and 11.0.0 through 11.3.0, user credentials may been logged as plain-text. This occurs when explicitly using log level debug, which is not the default configuration. TYPO3 versions 9.5.28, 10.4.18, 11.3.1 contain a patch for this vulnerability.",
  "repo": "TYPO3/typo3",
  "patch_hash": "0b4950163b8919451964133febc65bcdfcec721c",
  "patch_info": {
    "commit_hash": "0b4950163b8919451964133febc65bcdfcec721c",
    "repo": "TYPO3/typo3",
    "commit_url": "https://github.com/TYPO3/typo3/commit/0b4950163b8919451964133febc65bcdfcec721c",
    "files": [
      "typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php",
      "typo3/sysext/core/Classes/Session/UserSessionManager.php"
    ],
    "message": "[SECURITY] Do not log sensitive data in authentication process\n\nWhen having the debug logging activated for the\nauthentication process, sensitive data is not being\nlogged anymore.\n\nThis change\n* removes password from being logged\n* hashes the cookie value processed for logging\n\nResolves: #93925\nReleases: master, 11.3, 10.4, 9.5\nChange-Id: I8c610a72014de571ef52b4430c43f8d149b273d9\nSecurity-Bulletin: CORE-SA-2021-012\nSecurity-References: CVE-2021-32767\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/69990\nTested-by: Oliver Hader <oliver.hader@typo3.org>\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>",
    "before_after_code_files": [
      "typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php||typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php",
      "typo3/sysext/core/Classes/Session/UserSessionManager.php||typo3/sysext/core/Classes/Session/UserSessionManager.php"
    ]
  },
  "patch_diff": {
    "typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php||typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php": [
      "File: typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php -> typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "335:             );",
      "336:             $message = $isRefreshTimeBasedCookie ? 'Updated Cookie: {session}, {domain}' : 'Set Cookie: {session}, {domain}';",
      "337:             $this->logger->debug($message, [",
      "339:                 'domain' => $cookieDomain,",
      "340:             ]);",
      "341:         }",
      "",
      "[Removed Lines]",
      "338:                 'session' => $sessionId,",
      "",
      "[Added Lines]",
      "338:                 'session' => sha1($sessionId),",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "440:         $authInfo = $this->getAuthInfoArray();",
      "442:         $loginData = $this->getLoginFormData();",
      "445:         if ($loginData['status'] === LoginType::LOGOUT) {",
      "446:             if ($this->writeStdLog) {",
      "448:                 $this->writelog(SystemLogType::LOGIN, SystemLogLoginAction::LOGOUT, SystemLogErrorClassification::MESSAGE, 2, 'User %s logged out', [$this->user['username']], '', 0, 0);",
      "449:             }",
      "451:             $this->logoff();",
      "452:         }",
      "",
      "[Removed Lines]",
      "443:         $this->logger->debug('Login data', $loginData);",
      "450:             $this->logger->info('User logged out. Id: {session}', ['session' => $this->userSession->getIdentifier()]);",
      "",
      "[Added Lines]",
      "443:         $this->logger->debug('Login data', $this->removeSensitiveLoginDataForLoggingInfo($loginData));",
      "450:             $this->logger->info('User logged out. Id: {session}', ['session' => sha1($this->userSession->getIdentifier())]);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "560:                 $subType = 'authUser' . $this->loginType;",
      "",
      "[Removed Lines]",
      "559:                 $this->logger->debug('Auth user', $tempuser);",
      "",
      "[Added Lines]",
      "559:                 $this->logger->debug('Auth user', $this->removeSensitiveLoginDataForLoggingInfo($tempuser, true));",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "642:             if (empty($tempuserArr) && $activeLogin) {",
      "643:                 $this->logger->debug('Login failed', [",
      "645:                 ]);",
      "646:             } elseif (!empty($tempuserArr)) {",
      "647:                 $this->logger->debug('Login failed', [",
      "",
      "[Removed Lines]",
      "644:                     'loginData' => $loginData",
      "",
      "[Added Lines]",
      "644:                     'loginData' => $this->removeSensitiveLoginDataForLoggingInfo($loginData)",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "862:     public function logoff()",
      "863:     {",
      "866:         $_params = [];",
      "867:         foreach ($GLOBALS['TYPO3_CONF_VARS']['SC_OPTIONS']['t3lib/class.t3lib_userauth.php']['logoff_pre_processing'] ?? [] as $_funcRef) {",
      "",
      "[Removed Lines]",
      "864:         $this->logger->debug('logoff: ses_id = {session}', ['session' => $this->userSession->getIdentifier()]);",
      "",
      "[Added Lines]",
      "864:         $this->logger->debug('logoff: ses_id = {session}', ['session' => sha1($this->userSession->getIdentifier())]);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1094:     public function setAndSaveSessionData($key, $data)",
      "1095:     {",
      "1096:         $this->userSession->set($key, $data);",
      "1098:         $this->userSession = $this->userSessionManager->updateSession($this->userSession);",
      "1099:     }",
      "",
      "[Removed Lines]",
      "1097:         $this->logger->debug('setAndSaveSessionData: ses_id = {session}', ['session' => $this->userSession->getIdentifier()]);",
      "",
      "[Added Lines]",
      "1097:         $this->logger->debug('setAndSaveSessionData: ses_id = {session}', ['session' => sha1($this->userSession->getIdentifier())]);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1139:     public function processLoginData($loginData)",
      "1140:     {",
      "1142:         $subType = 'processLoginData' . $this->loginType;",
      "1143:         $authInfo = $this->getAuthInfoArray();",
      "1144:         $isLoginDataProcessed = false;",
      "",
      "[Removed Lines]",
      "1141:         $this->logger->debug('Login data before processing', $loginData);",
      "",
      "[Added Lines]",
      "1141:         $this->logger->debug('Login data before processing', $this->removeSensitiveLoginDataForLoggingInfo($loginData));",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1156:         }",
      "1157:         if ($isLoginDataProcessed) {",
      "1158:             $loginData = $processedLoginData;",
      "1160:         }",
      "1161:         return $loginData;",
      "1162:     }",
      "",
      "[Removed Lines]",
      "1159:             $this->logger->debug('Processed login data', $processedLoginData);",
      "",
      "[Added Lines]",
      "1159:             $this->logger->debug('Processed login data', $this->removeSensitiveLoginDataForLoggingInfo($processedLoginData));",
      "1174:     protected function removeSensitiveLoginDataForLoggingInfo($data, bool $isUserRecord = false)",
      "1175:     {",
      "1176:         if ($isUserRecord && is_array($data)) {",
      "1177:             $fieldNames = ['uid', 'pid', 'tstamp', 'crdate', 'cruser_id', 'deleted', 'disabled', 'starttime', 'endtime', 'username', 'admin', 'usergroup', 'db_mountpoints', 'file_mountpoints', 'file_permissions', 'workspace_perms', 'lastlogin', 'workspace_id', 'category_perms'];",
      "1178:             $data = array_intersect_key($data, array_combine($fieldNames, $fieldNames));",
      "1179:         }",
      "1180:         if (isset($data['uident'])) {",
      "1181:             $data['uident'] = '********';",
      "1182:         }",
      "1183:         if (isset($data['uident_text'])) {",
      "1184:             $data['uident_text'] = '********';",
      "1185:         }",
      "1186:         if (isset($data['password'])) {",
      "1187:             $data['password'] = '********';",
      "1188:         }",
      "1189:         return $data;",
      "1190:     }",
      "",
      "---------------"
    ],
    "typo3/sysext/core/Classes/Session/UserSessionManager.php||typo3/sysext/core/Classes/Session/UserSessionManager.php": [
      "File: typo3/sysext/core/Classes/Session/UserSessionManager.php -> typo3/sysext/core/Classes/Session/UserSessionManager.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "123:     public function createSessionFromStorage(string $sessionId): UserSession",
      "124:     {",
      "126:         $sessionRecord = $this->sessionBackend->get($sessionId);",
      "127:         return UserSession::createFromRecord($sessionId, $sessionRecord);",
      "128:     }",
      "",
      "[Removed Lines]",
      "125:         $this->logger->debug('Fetch session with identifier {session}', ['session' => $sessionId]);",
      "",
      "[Added Lines]",
      "125:         $this->logger->debug('Fetch session with identifier {session}', ['session' => sha1($sessionId)]);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "189:     public function elevateToFixatedUserSession(UserSession $session, int $userId, bool $isPermanent = false): UserSession",
      "190:     {",
      "191:         $sessionId = $session->getIdentifier();",
      "194:         $this->sessionBackend->remove($sessionId);",
      "",
      "[Removed Lines]",
      "192:         $this->logger->debug('Create session ses_id = {session}', ['session' => $sessionId]);",
      "",
      "[Added Lines]",
      "192:         $this->logger->debug('Create session ses_id = {session}', ['session' => sha1($sessionId)]);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "642d17b832a31ee325e0e0bca87645b71f613699",
      "candidate_info": {
        "commit_hash": "642d17b832a31ee325e0e0bca87645b71f613699",
        "repo": "TYPO3/typo3",
        "commit_url": "https://github.com/TYPO3/typo3/commit/642d17b832a31ee325e0e0bca87645b71f613699",
        "files": [
          "typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php",
          "typo3/sysext/core/Documentation/Changelog/master/Breaking-92989-AbstractUserAuthentication-loginFailureRemoved.rst",
          "typo3/sysext/frontend/Tests/Unit/Authentication/FrontendUserAuthenticationTest.php",
          "typo3/sysext/install/Configuration/ExtensionScanner/Php/PropertyPublicMatcher.php"
        ],
        "message": "[!!!][TASK] Separate login failure in authentication process\n\nThe flag AbstractUserAuthentication->loginFailure\nis removed. The current plans are to clean up the\nAbstractUserAuthentication class, and build separate\nconcerns as much as possible.\n\nThe main \"monster\" method \"checkAuthentication\" is now\ncleaned up, and the public property \"loginFailure\" is removed,\nas this is handled by a local variable now.\n\nResolves: #92989\nReleases: master\nChange-Id: I377baa94d6681fab7de04a74991254156235af52\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/66999\nTested-by: TYPO3com <noreply@typo3.com>\nTested-by: Markus Klein <markus.klein@typo3.org>\nTested-by: Oliver Hader <oliver.hader@typo3.org>\nReviewed-by: Markus Klein <markus.klein@typo3.org>\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>",
        "before_after_code_files": [
          "typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php||typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php",
          "typo3/sysext/frontend/Tests/Unit/Authentication/FrontendUserAuthenticationTest.php||typo3/sysext/frontend/Tests/Unit/Authentication/FrontendUserAuthenticationTest.php",
          "typo3/sysext/install/Configuration/ExtensionScanner/Php/PropertyPublicMatcher.php||typo3/sysext/install/Configuration/ExtensionScanner/Php/PropertyPublicMatcher.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php||typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php"
          ],
          "candidate": [
            "typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php||typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php"
          ]
        }
      },
      "candidate_diff": {
        "typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php||typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php": [
          "File: typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php -> typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "216:     public $id;",
          "",
          "[Removed Lines]",
          "222:     public $loginFailure = false;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "516:         $authenticated = false;",
          "518:         $activeLogin = false;",
          "521:         $this->logger->debug('Login type: ' . $this->loginType);",
          "523:         $authInfo = $this->getAuthInfoArray();",
          "",
          "[Removed Lines]",
          "520:         $this->loginFailure = false;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "667:         if ($authenticated) {",
          "671:             if (!$haveSession || $anonymousSession || $tempuser['ses_id'] != $this->id && $tempuser['uid'] != $authInfo['userSession']['ses_userid']) {",
          "672:                 $sessionData = $this->createUserSession($tempuser);",
          "",
          "[Removed Lines]",
          "669:             $this->loginFailure = false;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "711:                 $this->regenerateSessionId();",
          "712:             }",
          "718:             if ($activeLogin) {",
          "719:                 $this->logger->info('User ' . $tempuser[$this->username_column] . ' logged in from ' . GeneralUtility::getIndpEnv('REMOTE_ADDR'));",
          "722:                 $this->logger->debug('User ' . $tempuser[$this->username_column] . ' authenticated from ' . GeneralUtility::getIndpEnv('REMOTE_ADDR'));",
          "723:             }",
          "724:         } else {",
          "",
          "[Removed Lines]",
          "715:             if ($this->writeStdLog && $activeLogin) {",
          "716:                 $this->writelog(SystemLogType::LOGIN, SystemLogLoginAction::LOGIN, SystemLogErrorClassification::MESSAGE, 1, 'User %s logged in from ###IP###', [$tempuser[$this->username_column]], '', '', '');",
          "717:             }",
          "720:             }",
          "721:             if (!$activeLogin) {",
          "",
          "[Added Lines]",
          "706:                 if ($this->writeStdLog) {",
          "707:                     $this->writelog(SystemLogType::LOGIN, SystemLogLoginAction::LOGIN, SystemLogErrorClassification::MESSAGE, 1, 'User %s logged in from ###IP###', [$tempuser[$this->username_column]], '', '', '');",
          "708:                 }",
          "710:             } else {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "728:             }",
          "746:             }",
          "760:             }",
          "764:             }",
          "765:         }",
          "766:     }",
          "",
          "[Removed Lines]",
          "731:             if ($activeLogin || !empty($tempuserArr)) {",
          "732:                 $this->loginFailure = true;",
          "733:                 if (empty($tempuserArr) && $activeLogin) {",
          "734:                     $logData = [",
          "735:                         'loginData' => $loginData",
          "736:                     ];",
          "737:                     $this->logger->debug('Login failed', $logData);",
          "738:                 }",
          "739:                 if (!empty($tempuserArr)) {",
          "740:                     $logData = [",
          "741:                         $this->userid_column => $tempuser[$this->userid_column],",
          "742:                         $this->username_column => $tempuser[$this->username_column],",
          "743:                     ];",
          "744:                     $this->logger->debug('Login failed', $logData);",
          "745:                 }",
          "747:         }",
          "750:         if ($this->loginFailure && $activeLogin) {",
          "752:             $_params = [];",
          "753:             $sleep = true;",
          "754:             foreach ($GLOBALS['TYPO3_CONF_VARS']['SC_OPTIONS']['t3lib/class.t3lib_userauth.php']['postLoginFailureProcessing'] ?? [] as $hookIdentifier => $_funcRef) {",
          "755:                 GeneralUtility::callUserFunction($_funcRef, $_params, $this);",
          "757:                 if ($hookIdentifier !== 'sendEmailOnFailedLoginAttempt') {",
          "758:                     $sleep = false;",
          "759:                 }",
          "761:             if ($sleep) {",
          "763:                 sleep(5);",
          "",
          "[Added Lines]",
          "720:             if (empty($tempuserArr) && $activeLogin) {",
          "721:                 $this->logger->debug('Login failed', [",
          "722:                     'loginData' => $loginData",
          "723:                 ]);",
          "724:             } elseif (!empty($tempuserArr)) {",
          "725:                 $this->logger->debug('Login failed', [",
          "726:                     $this->userid_column => $tempuser[$this->userid_column],",
          "727:                     $this->username_column => $tempuser[$this->username_column],",
          "728:                 ]);",
          "732:             if ($activeLogin) {",
          "733:                 $this->handleLoginFailure();",
          "735:         }",
          "736:     }",
          "741:     protected function handleLoginFailure(): void",
          "742:     {",
          "743:         $_params = [];",
          "744:         $sleep = true;",
          "745:         foreach ($GLOBALS['TYPO3_CONF_VARS']['SC_OPTIONS']['t3lib/class.t3lib_userauth.php']['postLoginFailureProcessing'] ?? [] as $hookIdentifier => $_funcRef) {",
          "746:             GeneralUtility::callUserFunction($_funcRef, $_params, $this);",
          "748:             if ($hookIdentifier !== 'sendEmailOnFailedLoginAttempt') {",
          "749:                 $sleep = false;",
          "752:         if ($sleep) {",
          "754:             sleep(5);",
          "755:         }",
          "",
          "---------------"
        ],
        "typo3/sysext/frontend/Tests/Unit/Authentication/FrontendUserAuthenticationTest.php||typo3/sysext/frontend/Tests/Unit/Authentication/FrontendUserAuthenticationTest.php": [
          "File: typo3/sysext/frontend/Tests/Unit/Authentication/FrontendUserAuthenticationTest.php -> typo3/sysext/frontend/Tests/Unit/Authentication/FrontendUserAuthenticationTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "394:         $subject->method('getCookie')->willReturn(null);",
          "396:         $subject->start();",
          "398:         self::assertEquals('existingUserName', $subject->user['username']);",
          "399:     }",
          "",
          "[Removed Lines]",
          "397:         self::assertFalse($subject->loginFailure);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "typo3/sysext/install/Configuration/ExtensionScanner/Php/PropertyPublicMatcher.php||typo3/sysext/install/Configuration/ExtensionScanner/Php/PropertyPublicMatcher.php": [
          "File: typo3/sysext/install/Configuration/ExtensionScanner/Php/PropertyPublicMatcher.php -> typo3/sysext/install/Configuration/ExtensionScanner/Php/PropertyPublicMatcher.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "720:             'Breaking-92801-RemovedFailedLoginFunctionalityFromUserAuthenticationObject.rst',",
          "721:         ],",
          "722:     ],",
          "723: ];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "723:     'TYPO3\\CMS\\Core\\Authentication\\AbstractUserAuthentication->loginFailure' => [",
          "724:         'restFiles' => [",
          "725:             'Breaking-92989-AbstractUserAuthentication-loginFailureRemoved.rst',",
          "726:         ],",
          "727:     ],",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "678dfccb29c333ea33b84d9bbea5c9d0af6b6f20",
      "candidate_info": {
        "commit_hash": "678dfccb29c333ea33b84d9bbea5c9d0af6b6f20",
        "repo": "TYPO3/typo3",
        "commit_url": "https://github.com/TYPO3/typo3/commit/678dfccb29c333ea33b84d9bbea5c9d0af6b6f20",
        "files": [
          "typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php",
          "typo3/sysext/core/Classes/Session/UserSessionManager.php"
        ],
        "message": "[SECURITY] Do not log sensitive data in authentication process\n\nWhen having the debug logging activated for the\nauthentication process, sensitive data is not being\nlogged anymore.\n\nThis change\n* removes password from being logged\n* hashes the cookie value processed for logging\n\nResolves: #93925\nReleases: master, 11.3, 10.4, 9.5\nChange-Id: I8c610a72014de571ef52b4430c43f8d149b273d9\nSecurity-Bulletin: CORE-SA-2021-012\nSecurity-References: CVE-2021-32767\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/69994\nTested-by: Oliver Hader <oliver.hader@typo3.org>\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>",
        "before_after_code_files": [
          "typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php||typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php",
          "typo3/sysext/core/Classes/Session/UserSessionManager.php||typo3/sysext/core/Classes/Session/UserSessionManager.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php||typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php",
            "typo3/sysext/core/Classes/Session/UserSessionManager.php||typo3/sysext/core/Classes/Session/UserSessionManager.php"
          ],
          "candidate": [
            "typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php||typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php",
            "typo3/sysext/core/Classes/Session/UserSessionManager.php||typo3/sysext/core/Classes/Session/UserSessionManager.php"
          ]
        }
      },
      "candidate_diff": {
        "typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php||typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php": [
          "File: typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php -> typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "335:             );",
          "336:             $message = $isRefreshTimeBasedCookie ? 'Updated Cookie: {session}, {domain}' : 'Set Cookie: {session}, {domain}';",
          "337:             $this->logger->debug($message, [",
          "339:                 'domain' => $cookieDomain,",
          "340:             ]);",
          "341:         }",
          "",
          "[Removed Lines]",
          "338:                 'session' => $sessionId,",
          "",
          "[Added Lines]",
          "338:                 'session' => sha1($sessionId),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "440:         $authInfo = $this->getAuthInfoArray();",
          "442:         $loginData = $this->getLoginFormData();",
          "445:         if ($loginData['status'] === LoginType::LOGOUT) {",
          "446:             if ($this->writeStdLog) {",
          "448:                 $this->writelog(SystemLogType::LOGIN, SystemLogLoginAction::LOGOUT, SystemLogErrorClassification::MESSAGE, 2, 'User %s logged out', [$this->user['username']], '', 0, 0);",
          "449:             }",
          "451:             $this->logoff();",
          "452:         }",
          "",
          "[Removed Lines]",
          "443:         $this->logger->debug('Login data', $loginData);",
          "450:             $this->logger->info('User logged out. Id: {session}', ['session' => $this->userSession->getIdentifier()]);",
          "",
          "[Added Lines]",
          "443:         $this->logger->debug('Login data', $this->removeSensitiveLoginDataForLoggingInfo($loginData));",
          "450:             $this->logger->info('User logged out. Id: {session}', ['session' => sha1($this->userSession->getIdentifier())]);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "560:                 $subType = 'authUser' . $this->loginType;",
          "",
          "[Removed Lines]",
          "559:                 $this->logger->debug('Auth user', $tempuser);",
          "",
          "[Added Lines]",
          "559:                 $this->logger->debug('Auth user', $this->removeSensitiveLoginDataForLoggingInfo($tempuser, true));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "642:             if (empty($tempuserArr) && $activeLogin) {",
          "643:                 $this->logger->debug('Login failed', [",
          "645:                 ]);",
          "646:             } elseif (!empty($tempuserArr)) {",
          "647:                 $this->logger->debug('Login failed', [",
          "",
          "[Removed Lines]",
          "644:                     'loginData' => $loginData",
          "",
          "[Added Lines]",
          "644:                     'loginData' => $this->removeSensitiveLoginDataForLoggingInfo($loginData)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "862:     public function logoff()",
          "863:     {",
          "866:         $_params = [];",
          "867:         foreach ($GLOBALS['TYPO3_CONF_VARS']['SC_OPTIONS']['t3lib/class.t3lib_userauth.php']['logoff_pre_processing'] ?? [] as $_funcRef) {",
          "",
          "[Removed Lines]",
          "864:         $this->logger->debug('logoff: ses_id = {session}', ['session' => $this->userSession->getIdentifier()]);",
          "",
          "[Added Lines]",
          "864:         $this->logger->debug('logoff: ses_id = {session}', ['session' => sha1($this->userSession->getIdentifier())]);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1094:     public function setAndSaveSessionData($key, $data)",
          "1095:     {",
          "1096:         $this->userSession->set($key, $data);",
          "1098:         $this->userSession = $this->userSessionManager->updateSession($this->userSession);",
          "1099:     }",
          "",
          "[Removed Lines]",
          "1097:         $this->logger->debug('setAndSaveSessionData: ses_id = {session}', ['session' => $this->userSession->getIdentifier()]);",
          "",
          "[Added Lines]",
          "1097:         $this->logger->debug('setAndSaveSessionData: ses_id = {session}', ['session' => sha1($this->userSession->getIdentifier())]);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1139:     public function processLoginData($loginData)",
          "1140:     {",
          "1142:         $subType = 'processLoginData' . $this->loginType;",
          "1143:         $authInfo = $this->getAuthInfoArray();",
          "1144:         $isLoginDataProcessed = false;",
          "",
          "[Removed Lines]",
          "1141:         $this->logger->debug('Login data before processing', $loginData);",
          "",
          "[Added Lines]",
          "1141:         $this->logger->debug('Login data before processing', $this->removeSensitiveLoginDataForLoggingInfo($loginData));",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1156:         }",
          "1157:         if ($isLoginDataProcessed) {",
          "1158:             $loginData = $processedLoginData;",
          "1160:         }",
          "1161:         return $loginData;",
          "1162:     }",
          "",
          "[Removed Lines]",
          "1159:             $this->logger->debug('Processed login data', $processedLoginData);",
          "",
          "[Added Lines]",
          "1159:             $this->logger->debug('Processed login data', $this->removeSensitiveLoginDataForLoggingInfo($processedLoginData));",
          "1174:     protected function removeSensitiveLoginDataForLoggingInfo($data, bool $isUserRecord = false)",
          "1175:     {",
          "1176:         if ($isUserRecord && is_array($data)) {",
          "1177:             $fieldNames = ['uid', 'pid', 'tstamp', 'crdate', 'cruser_id', 'deleted', 'disabled', 'starttime', 'endtime', 'username', 'admin', 'usergroup', 'db_mountpoints', 'file_mountpoints', 'file_permissions', 'workspace_perms', 'lastlogin', 'workspace_id', 'category_perms'];",
          "1178:             $data = array_intersect_key($data, array_combine($fieldNames, $fieldNames));",
          "1179:         }",
          "1180:         if (isset($data['uident'])) {",
          "1181:             $data['uident'] = '********';",
          "1182:         }",
          "1183:         if (isset($data['uident_text'])) {",
          "1184:             $data['uident_text'] = '********';",
          "1185:         }",
          "1186:         if (isset($data['password'])) {",
          "1187:             $data['password'] = '********';",
          "1188:         }",
          "1189:         return $data;",
          "1190:     }",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/Session/UserSessionManager.php||typo3/sysext/core/Classes/Session/UserSessionManager.php": [
          "File: typo3/sysext/core/Classes/Session/UserSessionManager.php -> typo3/sysext/core/Classes/Session/UserSessionManager.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "123:     public function createSessionFromStorage(string $sessionId): UserSession",
          "124:     {",
          "126:         $sessionRecord = $this->sessionBackend->get($sessionId);",
          "127:         return UserSession::createFromRecord($sessionId, $sessionRecord);",
          "128:     }",
          "",
          "[Removed Lines]",
          "125:         $this->logger->debug('Fetch session with identifier {session}', ['session' => $sessionId]);",
          "",
          "[Added Lines]",
          "125:         $this->logger->debug('Fetch session with identifier {session}', ['session' => sha1($sessionId)]);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "189:     public function elevateToFixatedUserSession(UserSession $session, int $userId, bool $isPermanent = false): UserSession",
          "190:     {",
          "191:         $sessionId = $session->getIdentifier();",
          "194:         $this->sessionBackend->remove($sessionId);",
          "",
          "[Removed Lines]",
          "192:         $this->logger->debug('Create session ses_id = {session}', ['session' => $sessionId]);",
          "",
          "[Added Lines]",
          "192:         $this->logger->debug('Create session ses_id = {session}', ['session' => sha1($sessionId)]);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bb5e0821d5bfaccf90ce560892b072a15445a823",
      "candidate_info": {
        "commit_hash": "bb5e0821d5bfaccf90ce560892b072a15445a823",
        "repo": "TYPO3/typo3",
        "commit_url": "https://github.com/TYPO3/typo3/commit/bb5e0821d5bfaccf90ce560892b072a15445a823",
        "files": [
          "typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php"
        ],
        "message": "[SECURITY] Do not log sensitive data in authentication process\n\nWhen having the debug logging activated for the\nauthentication process, sensitive data is not being\nlogged anymore.\n\nThis change\n* removes password from being logged\n* hashes the cookie value processed for logging\n\nResolves: #93925\nReleases: master, 11.3, 10.4, 9.5\nChange-Id: I8c610a72014de571ef52b4430c43f8d149b273d9\nSecurity-Bulletin: CORE-SA-2021-012\nSecurity-References: CVE-2021-32767\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/69982\nTested-by: Oliver Hader <oliver.hader@typo3.org>\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>",
        "before_after_code_files": [
          "typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php||typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php||typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php"
          ],
          "candidate": [
            "typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php||typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php"
          ]
        }
      },
      "candidate_diff": {
        "typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php||typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php": [
          "File: typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php -> typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "528:             }",
          "529:             $this->logger->debug(",
          "530:                 ($isRefreshTimeBasedCookie ? 'Updated Cookie: ' : 'Set Cookie: ')",
          "532:             );",
          "533:         }",
          "534:     }",
          "",
          "[Removed Lines]",
          "531:                 . $this->id . ($cookieDomain ? ', ' . $cookieDomain : '')",
          "",
          "[Added Lines]",
          "531:                 . sha1($this->id) . ($cookieDomain ? ', ' . $cookieDomain : '')",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "619:         $authInfo = $this->getAuthInfoArray();",
          "621:         $loginData = $this->getLoginFormData();",
          "624:         if ($loginData['status'] === LoginType::LOGOUT) {",
          "625:             if ($this->writeStdLog) {",
          "627:                 $this->writelog(255, 2, 0, 2, 'User %s logged out', [$this->user['username']], '', 0, 0);",
          "628:             }",
          "630:             $this->logoff();",
          "631:         }",
          "",
          "[Removed Lines]",
          "622:         $this->logger->debug('Login data', $loginData);",
          "629:             $this->logger->info('User logged out. Id: ' . $this->id);",
          "",
          "[Added Lines]",
          "622:         $this->logger->debug('Login data', $this->removeSensitiveLoginDataForLoggingInfo($loginData));",
          "629:             $this->logger->info('User logged out. Id: ' . sha1($this->id));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "734:                 $subType = 'authUser' . $this->loginType;",
          "736:                 foreach ($this->getAuthServices($subType, $loginData, $authInfo) as $serviceObj) {",
          "",
          "[Removed Lines]",
          "733:                 $this->logger->debug('Auth user', $tempuser);",
          "",
          "[Added Lines]",
          "733:                 $this->logger->debug('Auth user', $this->removeSensitiveLoginDataForLoggingInfo($tempuser, true));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "826:                 $this->loginFailure = true;",
          "827:                 if (empty($tempuserArr) && $activeLogin) {",
          "828:                     $logData = [",
          "830:                     ];",
          "831:                     $this->logger->debug('Login failed', $logData);",
          "832:                 }",
          "",
          "[Removed Lines]",
          "829:                         'loginData' => $loginData",
          "",
          "[Added Lines]",
          "829:                         'loginData' => $this->removeSensitiveLoginDataForLoggingInfo($loginData)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "940:     public function createUserSession($tempuser)",
          "941:     {",
          "944:         $this->getSessionBackend()->remove($this->id);",
          "",
          "[Removed Lines]",
          "942:         $this->logger->debug('Create session ses_id = ' . $this->id);",
          "",
          "[Added Lines]",
          "942:         $this->logger->debug('Create session ses_id = ' . sha1($this->id));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "999:     public function fetchUserSession($skipSessionUpdate = false)",
          "1000:     {",
          "1002:         try {",
          "1003:             $sessionRecord = $this->getSessionBackend()->get($this->id);",
          "1004:         } catch (SessionNotFoundException $e) {",
          "",
          "[Removed Lines]",
          "1001:         $this->logger->debug('Fetch session ses_id = ' . $this->id);",
          "",
          "[Added Lines]",
          "1001:         $this->logger->debug('Fetch session ses_id = ' . sha1($this->id));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1062:     public function logoff()",
          "1063:     {",
          "1066:         $_params = [];",
          "1067:         foreach ($GLOBALS['TYPO3_CONF_VARS']['SC_OPTIONS']['t3lib/class.t3lib_userauth.php']['logoff_pre_processing'] ?? [] as $_funcRef) {",
          "",
          "[Removed Lines]",
          "1064:         $this->logger->debug('logoff: ses_id = ' . $this->id);",
          "",
          "[Added Lines]",
          "1064:         $this->logger->debug('logoff: ses_id = ' . sha1($this->id));",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1331:     {",
          "1332:         $this->sessionData[$key] = $data;",
          "1333:         $this->user['ses_data'] = serialize($this->sessionData);",
          "1335:         $updatedSession = $this->getSessionBackend()->update(",
          "1336:             $this->id,",
          "1337:             ['ses_data' => $this->user['ses_data']]",
          "",
          "[Removed Lines]",
          "1334:         $this->logger->debug('setAndSaveSessionData: ses_id = ' . $this->id);",
          "",
          "[Added Lines]",
          "1334:         $this->logger->debug('setAndSaveSessionData: ses_id = ' . sha1($this->id));",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1404:         }",
          "1405:         if ($isLoginDataProcessed) {",
          "1406:             $loginData = $processedLoginData;",
          "1408:         }",
          "1409:         return $loginData;",
          "1410:     }",
          "",
          "[Removed Lines]",
          "1407:             $this->logger->debug('Processed login data', $processedLoginData);",
          "",
          "[Added Lines]",
          "1407:             $this->logger->debug('Processed login data', $this->removeSensitiveLoginDataForLoggingInfo($processedLoginData));",
          "1410:     }",
          "1422:     protected function removeSensitiveLoginDataForLoggingInfo($data, bool $isUserRecord = false)",
          "1423:     {",
          "1424:         if ($isUserRecord && is_array($data)) {",
          "1425:             $fieldNames = ['uid', 'pid', 'tstamp', 'crdate', 'cruser_id', 'deleted', 'disabled', 'starttime', 'endtime', 'username', 'admin', 'usergroup', 'db_mountpoints', 'file_mountpoints', 'file_permissions', 'workspace_perms', 'lastlogin', 'workspace_id', 'category_perms'];",
          "1426:             $data = array_intersect_key($data, array_combine($fieldNames, $fieldNames));",
          "1427:         }",
          "1428:         if (isset($data['uident'])) {",
          "1429:             $data['uident'] = '********';",
          "1430:         }",
          "1431:         if (isset($data['uident_text'])) {",
          "1432:             $data['uident_text'] = '********';",
          "1433:         }",
          "1434:         if (isset($data['password'])) {",
          "1435:             $data['password'] = '********';",
          "1436:         }",
          "1437:         return $data;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f8082e1fbaede14bff4076048cdb5e02b5876e2f",
      "candidate_info": {
        "commit_hash": "f8082e1fbaede14bff4076048cdb5e02b5876e2f",
        "repo": "TYPO3/typo3",
        "commit_url": "https://github.com/TYPO3/typo3/commit/f8082e1fbaede14bff4076048cdb5e02b5876e2f",
        "files": [
          "typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php"
        ],
        "message": "[SECURITY] Do not log sensitive data in authentication process\n\nWhen having the debug logging activated for the\nauthentication process, sensitive data is not being\nlogged anymore.\n\nThis change\n* removes password from being logged\n* hashes the cookie value processed for logging\n\nResolves: #93925\nReleases: master, 11.3, 10.4, 9.5\nChange-Id: I8c610a72014de571ef52b4430c43f8d149b273d9\nSecurity-Bulletin: CORE-SA-2021-012\nSecurity-References: CVE-2021-32767\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/69986\nTested-by: Oliver Hader <oliver.hader@typo3.org>\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>",
        "before_after_code_files": [
          "typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php||typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php||typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php"
          ],
          "candidate": [
            "typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php||typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php"
          ]
        }
      },
      "candidate_diff": {
        "typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php||typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php": [
          "File: typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php -> typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "484:             }",
          "485:             $this->logger->debug(",
          "486:                 ($isRefreshTimeBasedCookie ? 'Updated Cookie: ' : 'Set Cookie: ')",
          "488:             );",
          "489:         }",
          "490:     }",
          "",
          "[Removed Lines]",
          "487:                 . $this->id . ($cookieDomain ? ', ' . $cookieDomain : '')",
          "",
          "[Added Lines]",
          "487:                 . sha1($this->id) . ($cookieDomain ? ', ' . $cookieDomain : '')",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "575:         $authInfo = $this->getAuthInfoArray();",
          "577:         $loginData = $this->getLoginFormData();",
          "580:         if ($loginData['status'] === LoginType::LOGOUT) {",
          "581:             if ($this->writeStdLog) {",
          "583:                 $this->writelog(SystemLogType::LOGIN, SystemLogLoginAction::LOGOUT, SystemLogErrorClassification::MESSAGE, 2, 'User %s logged out', [$this->user['username']], '', 0, 0);",
          "584:             }",
          "586:             $this->logoff();",
          "587:         }",
          "",
          "[Removed Lines]",
          "578:         $this->logger->debug('Login data', $loginData);",
          "585:             $this->logger->info('User logged out. Id: ' . $this->id);",
          "",
          "[Added Lines]",
          "578:         $this->logger->debug('Login data', $this->removeSensitiveLoginDataForLoggingInfo($loginData));",
          "585:             $this->logger->info('User logged out. Id: ' . sha1($this->id));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "691:                 $subType = 'authUser' . $this->loginType;",
          "",
          "[Removed Lines]",
          "690:                 $this->logger->debug('Auth user', $tempuser);",
          "",
          "[Added Lines]",
          "690:                 $this->logger->debug('Auth user', $this->removeSensitiveLoginDataForLoggingInfo($tempuser, true));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "784:                 $this->loginFailure = true;",
          "785:                 if (empty($tempuserArr) && $activeLogin) {",
          "786:                     $logData = [",
          "788:                     ];",
          "789:                     $this->logger->debug('Login failed', $logData);",
          "790:                 }",
          "",
          "[Removed Lines]",
          "787:                         'loginData' => $loginData",
          "",
          "[Added Lines]",
          "787:                         'loginData' => $this->removeSensitiveLoginDataForLoggingInfo($loginData)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "898:     public function createUserSession($tempuser)",
          "899:     {",
          "902:         $this->getSessionBackend()->remove($this->id);",
          "",
          "[Removed Lines]",
          "900:         $this->logger->debug('Create session ses_id = ' . $this->id);",
          "",
          "[Added Lines]",
          "900:         $this->logger->debug('Create session ses_id = ' . sha1($this->id));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "954:     public function fetchUserSession($skipSessionUpdate = false)",
          "955:     {",
          "957:         try {",
          "958:             $sessionRecord = $this->getSessionBackend()->get($this->id);",
          "959:         } catch (SessionNotFoundException $e) {",
          "",
          "[Removed Lines]",
          "956:         $this->logger->debug('Fetch session ses_id = ' . $this->id);",
          "",
          "[Added Lines]",
          "956:         $this->logger->debug('Fetch session ses_id = ' . sha1($this->id));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1017:     public function logoff()",
          "1018:     {",
          "1021:         $_params = [];",
          "1022:         foreach ($GLOBALS['TYPO3_CONF_VARS']['SC_OPTIONS']['t3lib/class.t3lib_userauth.php']['logoff_pre_processing'] ?? [] as $_funcRef) {",
          "",
          "[Removed Lines]",
          "1019:         $this->logger->debug('logoff: ses_id = ' . $this->id);",
          "",
          "[Added Lines]",
          "1019:         $this->logger->debug('logoff: ses_id = ' . sha1($this->id));",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1268:     {",
          "1269:         $this->sessionData[$key] = $data;",
          "1270:         $this->user['ses_data'] = serialize($this->sessionData);",
          "1272:         $updatedSession = $this->getSessionBackend()->update(",
          "1273:             $this->id,",
          "1274:             ['ses_data' => $this->user['ses_data']]",
          "",
          "[Removed Lines]",
          "1271:         $this->logger->debug('setAndSaveSessionData: ses_id = ' . $this->id);",
          "",
          "[Added Lines]",
          "1271:         $this->logger->debug('setAndSaveSessionData: ses_id = ' . sha1($this->id));",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1314:     {",
          "1315:         $loginSecurityLevel = trim($GLOBALS['TYPO3_CONF_VARS'][$this->loginType]['loginSecurityLevel']) ?: 'normal';",
          "1316:         $passwordTransmissionStrategy = $passwordTransmissionStrategy ?: $loginSecurityLevel;",
          "1318:         $subType = 'processLoginData' . $this->loginType;",
          "1319:         $authInfo = $this->getAuthInfoArray();",
          "1320:         $isLoginDataProcessed = false;",
          "",
          "[Removed Lines]",
          "1317:         $this->logger->debug('Login data before processing', $loginData);",
          "",
          "[Added Lines]",
          "1317:         $this->logger->debug('Login data before processing', $this->removeSensitiveLoginDataForLoggingInfo($loginData));",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1332:         }",
          "1333:         if ($isLoginDataProcessed) {",
          "1334:             $loginData = $processedLoginData;",
          "1336:         }",
          "1337:         return $loginData;",
          "1338:     }",
          "",
          "[Removed Lines]",
          "1335:             $this->logger->debug('Processed login data', $processedLoginData);",
          "",
          "[Added Lines]",
          "1335:             $this->logger->debug('Processed login data', $this->removeSensitiveLoginDataForLoggingInfo($processedLoginData));",
          "1350:     protected function removeSensitiveLoginDataForLoggingInfo($data, bool $isUserRecord = false)",
          "1351:     {",
          "1352:         if ($isUserRecord && is_array($data)) {",
          "1353:             $fieldNames = ['uid', 'pid', 'tstamp', 'crdate', 'cruser_id', 'deleted', 'disabled', 'starttime', 'endtime', 'username', 'admin', 'usergroup', 'db_mountpoints', 'file_mountpoints', 'file_permissions', 'workspace_perms', 'lastlogin', 'workspace_id', 'category_perms'];",
          "1354:             $data = array_intersect_key($data, array_combine($fieldNames, $fieldNames));",
          "1355:         }",
          "1356:         if (isset($data['uident'])) {",
          "1357:             $data['uident'] = '********';",
          "1358:         }",
          "1359:         if (isset($data['uident_text'])) {",
          "1360:             $data['uident_text'] = '********';",
          "1361:         }",
          "1362:         if (isset($data['password'])) {",
          "1363:             $data['password'] = '********';",
          "1364:         }",
          "1365:         return $data;",
          "1366:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}