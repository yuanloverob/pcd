{
  "cve_id": "CVE-2024-29190",
  "cve_desc": "Mobile Security Framework (MobSF) is a pen-testing, malware analysis and security assessment framework capable of performing static and dynamic analysis. In version 3.9.5 Beta and prior, MobSF does not perform any input validation when extracting the hostnames in `android:host`, so requests can also be sent to local hostnames. This can lead to server-side request forgery. An attacker can cause the server to make a connection to internal-only services within the organization's infrastructure. Commit 5a8eeee73c5f504a6c3abdf2a139a13804efdb77 has a hotfix for this issue.\n",
  "repo": "MobSF/Mobile-Security-Framework-MobSF",
  "patch_hash": "5a8eeee73c5f504a6c3abdf2a139a13804efdb77",
  "patch_info": {
    "commit_hash": "5a8eeee73c5f504a6c3abdf2a139a13804efdb77",
    "repo": "MobSF/Mobile-Security-Framework-MobSF",
    "commit_url": "https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/5a8eeee73c5f504a6c3abdf2a139a13804efdb77",
    "files": [
      ".github/workflows/docker-release.yml",
      ".github/workflows/docker-test.yml",
      "mobsf/MobSF/init.py",
      "mobsf/MobSF/utils.py",
      "mobsf/StaticAnalyzer/views/android/manifest_analysis.py",
      "poetry.lock",
      "pyproject.toml"
    ],
    "message": "HOTFIX:[SECURITY] Fix GHSA-wfgj-wrgh-h3r3, dep bump, docker build qa",
    "before_after_code_files": [
      "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
      "mobsf/MobSF/utils.py||mobsf/MobSF/utils.py",
      "mobsf/StaticAnalyzer/views/android/manifest_analysis.py||mobsf/StaticAnalyzer/views/android/manifest_analysis.py",
      "poetry.lock||poetry.lock"
    ]
  },
  "patch_diff": {
    "mobsf/MobSF/init.py||mobsf/MobSF/init.py": [
      "File: mobsf/MobSF/init.py -> mobsf/MobSF/init.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "11: logger = logging.getLogger(__name__)",
      "14: BANNER = \"\"\"",
      "15:   __  __       _    ____  _____       _____ ___",
      "16:  |  \\/  | ___ | |__/ ___||  ___|_   _|___ // _ \\",
      "",
      "[Removed Lines]",
      "13: VERSION = '3.9.5'",
      "",
      "[Added Lines]",
      "13: VERSION = '3.9.6'",
      "",
      "---------------"
    ],
    "mobsf/MobSF/utils.py||mobsf/MobSF/utils.py": [
      "File: mobsf/MobSF/utils.py -> mobsf/MobSF/utils.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "16: import string",
      "17: import subprocess",
      "18: import stat",
      "19: import sqlite3",
      "20: import unicodedata",
      "21: import threading",
      "22: from pathlib import Path",
      "23: from distutils.version import StrictVersion",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "19: import socket",
      "23: from urllib.parse import urlparse",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "848: def id_generator(size=6, chars=string.ascii_uppercase + string.digits):",
      "849:     \"\"\"Generate random string.\"\"\"",
      "850:     return ''.join(random.choice(chars) for _ in range(size))",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "855: def valid_host(host):",
      "856:     \"\"\"Check if host is valid.\"\"\"",
      "857:     try:",
      "858:         prefixs = ('http://', 'https://')",
      "859:         if not host.startswith(prefixs):",
      "860:             host = f'http://{host}'",
      "861:         parsed = urlparse(host)",
      "862:         domain = parsed.netloc",
      "863:         path = parsed.path",
      "864:         if len(domain) == 0:",
      "865:             # No valid domain",
      "866:             return False",
      "867:         if len(path) > 0:",
      "868:             # Only host is allowed",
      "869:             return False",
      "870:         if ':' in domain:",
      "871:             # IPv6",
      "872:             return False",
      "873:         # Local network",
      "874:         invalid_prefix = (",
      "875:             '127.',",
      "876:             '192.',",
      "877:             '10.',",
      "878:             '172.',",
      "879:             '169',",
      "880:             '0.',",
      "881:             'localhost')",
      "882:         if domain.startswith(invalid_prefix):",
      "883:             return False",
      "884:         ip = socket.gethostbyname(domain)",
      "885:         if ip.startswith(invalid_prefix):",
      "886:             # Resolve dns to get IP",
      "887:             return False",
      "888:         return True",
      "889:     except Exception:",
      "890:         return False",
      "",
      "---------------"
    ],
    "mobsf/StaticAnalyzer/views/android/manifest_analysis.py||mobsf/StaticAnalyzer/views/android/manifest_analysis.py": [
      "File: mobsf/StaticAnalyzer/views/android/manifest_analysis.py -> mobsf/StaticAnalyzer/views/android/manifest_analysis.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "7: from concurrent.futures import ThreadPoolExecutor",
      "9: from mobsf.MobSF.utils import (",
      "10:     upstream_proxy,",
      "11: )",
      "12: from mobsf.StaticAnalyzer.views.android import (",
      "13:     android_manifest_desc,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "10:     is_number,",
      "12:     valid_host,",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "148:                           and scheme in ('http', 'https')",
      "149:                           and host",
      "150:                           and host != '*'):",
      "152:                         shost = f'{scheme}://{host}'",
      "154:                             c_url = f'{shost}:{port}{well_known_path}'",
      "155:                         else:",
      "156:                             c_url = f'{shost}{well_known_path}'",
      "",
      "[Removed Lines]",
      "151:                         host = host.replace('*.', '')",
      "153:                         if port:",
      "",
      "[Added Lines]",
      "153:                         host = host.replace('*.', '').replace('#', '')",
      "154:                         if not valid_host(host):",
      "155:                             continue",
      "157:                         if port and is_number(port):",
      "",
      "---------------"
    ],
    "poetry.lock||poetry.lock": [
      "File: poetry.lock -> poetry.lock",
      "--- Hunk 1 ---",
      "[Context before]",
      "101: [[package]]",
      "102: name = \"apkinspector\"",
      "104: description = \"apkInspector is a tool designed to provide detailed insights into the zip structure of APK files, offering the capability to extract content and decode the AndroidManifest.xml file.\"",
      "105: optional = false",
      "106: python-versions = \">=3.5,<4.0\"",
      "107: files = [",
      "110: ]",
      "112: [[package]]",
      "",
      "[Removed Lines]",
      "103: version = \"1.2.1\"",
      "108:     {file = \"apkinspector-1.2.1-py3-none-any.whl\", hash = \"sha256:4736719884e92dfbe3203103ad46deb22b4683e208ae66972236a052c5d23e37\"},",
      "109:     {file = \"apkinspector-1.2.1.tar.gz\", hash = \"sha256:6c1fd678246760e75f8386e6f4d9686b640cc6bd88256f0865dfacbd49e8e0dd\"},",
      "",
      "[Added Lines]",
      "103: version = \"1.2.2\"",
      "108:     {file = \"apkinspector-1.2.2-py3-none-any.whl\", hash = \"sha256:ad55200bd72eb1edeeb5fb114e3bb576ec825feef54fb8727173f1f02fa12bb7\"},",
      "109:     {file = \"apkinspector-1.2.2.tar.gz\", hash = \"sha256:ea7e56090e95eb791b593e9beedf4f1056eb269c4483558e13d5d5ef4b479c60\"},",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "951: [[package]]",
      "952: name = \"fonttools\"",
      "954: description = \"Tools to manipulate font files\"",
      "955: optional = false",
      "956: python-versions = \">=3.8\"",
      "957: files = [",
      "1000: ]",
      "1002: [package.extras]",
      "",
      "[Removed Lines]",
      "953: version = \"4.49.0\"",
      "958:     {file = \"fonttools-4.49.0-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:d970ecca0aac90d399e458f0b7a8a597e08f95de021f17785fb68e2dc0b99717\"},",
      "959:     {file = \"fonttools-4.49.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:ac9a745b7609f489faa65e1dc842168c18530874a5f5b742ac3dd79e26bca8bc\"},",
      "960:     {file = \"fonttools-4.49.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:0ba0e00620ca28d4ca11fc700806fd69144b463aa3275e1b36e56c7c09915559\"},",
      "961:     {file = \"fonttools-4.49.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:cdee3ab220283057e7840d5fb768ad4c2ebe65bdba6f75d5d7bf47f4e0ed7d29\"},",
      "962:     {file = \"fonttools-4.49.0-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:ce7033cb61f2bb65d8849658d3786188afd80f53dad8366a7232654804529532\"},",
      "963:     {file = \"fonttools-4.49.0-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:07bc5ea02bb7bc3aa40a1eb0481ce20e8d9b9642a9536cde0218290dd6085828\"},",
      "964:     {file = \"fonttools-4.49.0-cp310-cp310-win32.whl\", hash = \"sha256:86eef6aab7fd7c6c8545f3ebd00fd1d6729ca1f63b0cb4d621bccb7d1d1c852b\"},",
      "965:     {file = \"fonttools-4.49.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:1fac1b7eebfce75ea663e860e7c5b4a8831b858c17acd68263bc156125201abf\"},",
      "966:     {file = \"fonttools-4.49.0-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:edc0cce355984bb3c1d1e89d6a661934d39586bb32191ebff98c600f8957c63e\"},",
      "967:     {file = \"fonttools-4.49.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:83a0d9336de2cba86d886507dd6e0153df333ac787377325a39a2797ec529814\"},",
      "968:     {file = \"fonttools-4.49.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:36c8865bdb5cfeec88f5028e7e592370a0657b676c6f1d84a2108e0564f90e22\"},",
      "969:     {file = \"fonttools-4.49.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:33037d9e56e2562c710c8954d0f20d25b8386b397250d65581e544edc9d6b942\"},",
      "970:     {file = \"fonttools-4.49.0-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:8fb022d799b96df3eaa27263e9eea306bd3d437cc9aa981820850281a02b6c9a\"},",
      "971:     {file = \"fonttools-4.49.0-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:33c584c0ef7dc54f5dd4f84082eabd8d09d1871a3d8ca2986b0c0c98165f8e86\"},",
      "972:     {file = \"fonttools-4.49.0-cp311-cp311-win32.whl\", hash = \"sha256:cbe61b158deb09cffdd8540dc4a948d6e8f4d5b4f3bf5cd7db09bd6a61fee64e\"},",
      "973:     {file = \"fonttools-4.49.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:fc11e5114f3f978d0cea7e9853627935b30d451742eeb4239a81a677bdee6bf6\"},",
      "974:     {file = \"fonttools-4.49.0-cp312-cp312-macosx_10_9_universal2.whl\", hash = \"sha256:d647a0e697e5daa98c87993726da8281c7233d9d4ffe410812a4896c7c57c075\"},",
      "975:     {file = \"fonttools-4.49.0-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:f3bbe672df03563d1f3a691ae531f2e31f84061724c319652039e5a70927167e\"},",
      "976:     {file = \"fonttools-4.49.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:bebd91041dda0d511b0d303180ed36e31f4f54b106b1259b69fade68413aa7ff\"},",
      "977:     {file = \"fonttools-4.49.0-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4145f91531fd43c50f9eb893faa08399816bb0b13c425667c48475c9f3a2b9b5\"},",
      "978:     {file = \"fonttools-4.49.0-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:ea329dafb9670ffbdf4dbc3b0e5c264104abcd8441d56de77f06967f032943cb\"},",
      "979:     {file = \"fonttools-4.49.0-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:c076a9e548521ecc13d944b1d261ff3d7825048c338722a4bd126d22316087b7\"},",
      "980:     {file = \"fonttools-4.49.0-cp312-cp312-win32.whl\", hash = \"sha256:b607ea1e96768d13be26d2b400d10d3ebd1456343eb5eaddd2f47d1c4bd00880\"},",
      "981:     {file = \"fonttools-4.49.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:a974c49a981e187381b9cc2c07c6b902d0079b88ff01aed34695ec5360767034\"},",
      "982:     {file = \"fonttools-4.49.0-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:b85ec0bdd7bdaa5c1946398cbb541e90a6dfc51df76dfa88e0aaa41b335940cb\"},",
      "983:     {file = \"fonttools-4.49.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:af20acbe198a8a790618ee42db192eb128afcdcc4e96d99993aca0b60d1faeb4\"},",
      "984:     {file = \"fonttools-4.49.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4d418b1fee41a1d14931f7ab4b92dc0bc323b490e41d7a333eec82c9f1780c75\"},",
      "985:     {file = \"fonttools-4.49.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b44a52b8e6244b6548851b03b2b377a9702b88ddc21dcaf56a15a0393d425cb9\"},",
      "986:     {file = \"fonttools-4.49.0-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:7c7125068e04a70739dad11857a4d47626f2b0bd54de39e8622e89701836eabd\"},",
      "987:     {file = \"fonttools-4.49.0-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:29e89d0e1a7f18bc30f197cfadcbef5a13d99806447c7e245f5667579a808036\"},",
      "988:     {file = \"fonttools-4.49.0-cp38-cp38-win32.whl\", hash = \"sha256:9d95fa0d22bf4f12d2fb7b07a46070cdfc19ef5a7b1c98bc172bfab5bf0d6844\"},",
      "989:     {file = \"fonttools-4.49.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:768947008b4dc552d02772e5ebd49e71430a466e2373008ce905f953afea755a\"},",
      "990:     {file = \"fonttools-4.49.0-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:08877e355d3dde1c11973bb58d4acad1981e6d1140711230a4bfb40b2b937ccc\"},",
      "991:     {file = \"fonttools-4.49.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:fdb54b076f25d6b0f0298dc706acee5052de20c83530fa165b60d1f2e9cbe3cb\"},",
      "992:     {file = \"fonttools-4.49.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:0af65c720520710cc01c293f9c70bd69684365c6015cc3671db2b7d807fe51f2\"},",
      "993:     {file = \"fonttools-4.49.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1f255ce8ed7556658f6d23f6afd22a6d9bbc3edb9b96c96682124dc487e1bf42\"},",
      "994:     {file = \"fonttools-4.49.0-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:d00af0884c0e65f60dfaf9340e26658836b935052fdd0439952ae42e44fdd2be\"},",
      "995:     {file = \"fonttools-4.49.0-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:263832fae27481d48dfafcc43174644b6706639661e242902ceb30553557e16c\"},",
      "996:     {file = \"fonttools-4.49.0-cp39-cp39-win32.whl\", hash = \"sha256:0404faea044577a01bb82d47a8fa4bc7a54067fa7e324785dd65d200d6dd1133\"},",
      "997:     {file = \"fonttools-4.49.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:b050d362df50fc6e38ae3954d8c29bf2da52be384649ee8245fdb5186b620836\"},",
      "998:     {file = \"fonttools-4.49.0-py3-none-any.whl\", hash = \"sha256:af281525e5dd7fa0b39fb1667b8d5ca0e2a9079967e14c4bfe90fd1cd13e0f18\"},",
      "999:     {file = \"fonttools-4.49.0.tar.gz\", hash = \"sha256:ebf46e7f01b7af7861310417d7c49591a85d99146fc23a5ba82fdb28af156321\"},",
      "",
      "[Added Lines]",
      "953: version = \"4.50.0\"",
      "958:     {file = \"fonttools-4.50.0-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:effd303fb422f8ce06543a36ca69148471144c534cc25f30e5be752bc4f46736\"},",
      "959:     {file = \"fonttools-4.50.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:7913992ab836f621d06aabac118fc258b9947a775a607e1a737eb3a91c360335\"},",
      "960:     {file = \"fonttools-4.50.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8e0a1c5bd2f63da4043b63888534b52c5a1fd7ae187c8ffc64cbb7ae475b9dab\"},",
      "961:     {file = \"fonttools-4.50.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d40fc98540fa5360e7ecf2c56ddf3c6e7dd04929543618fd7b5cc76e66390562\"},",
      "962:     {file = \"fonttools-4.50.0-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:9fff65fbb7afe137bac3113827855e0204482727bddd00a806034ab0d3951d0d\"},",
      "963:     {file = \"fonttools-4.50.0-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:b1aeae3dd2ee719074a9372c89ad94f7c581903306d76befdaca2a559f802472\"},",
      "964:     {file = \"fonttools-4.50.0-cp310-cp310-win32.whl\", hash = \"sha256:e9623afa319405da33b43c85cceb0585a6f5d3a1d7c604daf4f7e1dd55c03d1f\"},",
      "965:     {file = \"fonttools-4.50.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:778c5f43e7e654ef7fe0605e80894930bc3a7772e2f496238e57218610140f54\"},",
      "966:     {file = \"fonttools-4.50.0-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:3dfb102e7f63b78c832e4539969167ffcc0375b013080e6472350965a5fe8048\"},",
      "967:     {file = \"fonttools-4.50.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:9e58fe34cb379ba3d01d5d319d67dd3ce7ca9a47ad044ea2b22635cd2d1247fc\"},",
      "968:     {file = \"fonttools-4.50.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:2c673ab40d15a442a4e6eb09bf007c1dda47c84ac1e2eecbdf359adacb799c24\"},",
      "969:     {file = \"fonttools-4.50.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9b3ac35cdcd1a4c90c23a5200212c1bb74fa05833cc7c14291d7043a52ca2aaa\"},",
      "970:     {file = \"fonttools-4.50.0-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:8844e7a2c5f7ecf977e82eb6b3014f025c8b454e046d941ece05b768be5847ae\"},",
      "971:     {file = \"fonttools-4.50.0-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:f849bd3c5c2249b49c98eca5aaebb920d2bfd92b3c69e84ca9bddf133e9f83f0\"},",
      "972:     {file = \"fonttools-4.50.0-cp311-cp311-win32.whl\", hash = \"sha256:39293ff231b36b035575e81c14626dfc14407a20de5262f9596c2cbb199c3625\"},",
      "973:     {file = \"fonttools-4.50.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:c33d5023523b44d3481624f840c8646656a1def7630ca562f222eb3ead16c438\"},",
      "974:     {file = \"fonttools-4.50.0-cp312-cp312-macosx_10_9_universal2.whl\", hash = \"sha256:b4a886a6dbe60100ba1cd24de962f8cd18139bd32808da80de1fa9f9f27bf1dc\"},",
      "975:     {file = \"fonttools-4.50.0-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:b2ca1837bfbe5eafa11313dbc7edada79052709a1fffa10cea691210af4aa1fa\"},",
      "976:     {file = \"fonttools-4.50.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a0493dd97ac8977e48ffc1476b932b37c847cbb87fd68673dee5182004906828\"},",
      "977:     {file = \"fonttools-4.50.0-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:77844e2f1b0889120b6c222fc49b2b75c3d88b930615e98893b899b9352a27ea\"},",
      "978:     {file = \"fonttools-4.50.0-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:3566bfb8c55ed9100afe1ba6f0f12265cd63a1387b9661eb6031a1578a28bad1\"},",
      "979:     {file = \"fonttools-4.50.0-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:35e10ddbc129cf61775d58a14f2d44121178d89874d32cae1eac722e687d9019\"},",
      "980:     {file = \"fonttools-4.50.0-cp312-cp312-win32.whl\", hash = \"sha256:cc8140baf9fa8f9b903f2b393a6c413a220fa990264b215bf48484f3d0bf8710\"},",
      "981:     {file = \"fonttools-4.50.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:0ccc85fd96373ab73c59833b824d7a73846670a0cb1f3afbaee2b2c426a8f931\"},",
      "982:     {file = \"fonttools-4.50.0-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:e270a406219af37581d96c810172001ec536e29e5593aa40d4c01cca3e145aa6\"},",
      "983:     {file = \"fonttools-4.50.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:ac2463de667233372e9e1c7e9de3d914b708437ef52a3199fdbf5a60184f190c\"},",
      "984:     {file = \"fonttools-4.50.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:47abd6669195abe87c22750dbcd366dc3a0648f1b7c93c2baa97429c4dc1506e\"},",
      "985:     {file = \"fonttools-4.50.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:074841375e2e3d559aecc86e1224caf78e8b8417bb391e7d2506412538f21adc\"},",
      "986:     {file = \"fonttools-4.50.0-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:0743fd2191ad7ab43d78cd747215b12033ddee24fa1e088605a3efe80d6984de\"},",
      "987:     {file = \"fonttools-4.50.0-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:3d7080cce7be5ed65bee3496f09f79a82865a514863197ff4d4d177389e981b0\"},",
      "988:     {file = \"fonttools-4.50.0-cp38-cp38-win32.whl\", hash = \"sha256:a467ba4e2eadc1d5cc1a11d355abb945f680473fbe30d15617e104c81f483045\"},",
      "989:     {file = \"fonttools-4.50.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:f77e048f805e00870659d6318fd89ef28ca4ee16a22b4c5e1905b735495fc422\"},",
      "990:     {file = \"fonttools-4.50.0-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:b6245eafd553c4e9a0708e93be51392bd2288c773523892fbd616d33fd2fda59\"},",
      "991:     {file = \"fonttools-4.50.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:a4062cc7e8de26f1603323ef3ae2171c9d29c8a9f5e067d555a2813cd5c7a7e0\"},",
      "992:     {file = \"fonttools-4.50.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:34692850dfd64ba06af61e5791a441f664cb7d21e7b544e8f385718430e8f8e4\"},",
      "993:     {file = \"fonttools-4.50.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:678dd95f26a67e02c50dcb5bf250f95231d455642afbc65a3b0bcdacd4e4dd38\"},",
      "994:     {file = \"fonttools-4.50.0-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:4f2ce7b0b295fe64ac0a85aef46a0f2614995774bd7bc643b85679c0283287f9\"},",
      "995:     {file = \"fonttools-4.50.0-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:d346f4dc2221bfb7ab652d1e37d327578434ce559baf7113b0f55768437fe6a0\"},",
      "996:     {file = \"fonttools-4.50.0-cp39-cp39-win32.whl\", hash = \"sha256:a51eeaf52ba3afd70bf489be20e52fdfafe6c03d652b02477c6ce23c995222f4\"},",
      "997:     {file = \"fonttools-4.50.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:8639be40d583e5d9da67795aa3eeeda0488fb577a1d42ae11a5036f18fb16d93\"},",
      "998:     {file = \"fonttools-4.50.0-py3-none-any.whl\", hash = \"sha256:48fa36da06247aa8282766cfd63efff1bb24e55f020f29a335939ed3844d20d3\"},",
      "999:     {file = \"fonttools-4.50.0.tar.gz\", hash = \"sha256:fa5cf61058c7dbb104c2ac4e782bf1b2016a8cf2f69de6e4dd6a865d2c969bb5\"},",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2538: [[package]]",
      "2539: name = \"pyqt5-qt5\"",
      "2541: description = \"The subset of a Qt installation needed by PyQt5.\"",
      "2542: optional = false",
      "2543: python-versions = \"*\"",
      "2544: files = [",
      "2549: ]",
      "2551: [[package]]",
      "",
      "[Removed Lines]",
      "2540: version = \"5.15.2\"",
      "2545:     {file = \"PyQt5_Qt5-5.15.2-py3-none-macosx_10_13_intel.whl\", hash = \"sha256:76980cd3d7ae87e3c7a33bfebfaee84448fd650bad6840471d6cae199b56e154\"},",
      "2546:     {file = \"PyQt5_Qt5-5.15.2-py3-none-manylinux2014_x86_64.whl\", hash = \"sha256:1988f364ec8caf87a6ee5d5a3a5210d57539988bf8e84714c7d60972692e2f4a\"},",
      "2547:     {file = \"PyQt5_Qt5-5.15.2-py3-none-win32.whl\", hash = \"sha256:9cc7a768b1921f4b982ebc00a318ccb38578e44e45316c7a4a850e953e1dd327\"},",
      "2548:     {file = \"PyQt5_Qt5-5.15.2-py3-none-win_amd64.whl\", hash = \"sha256:750b78e4dba6bdf1607febedc08738e318ea09e9b10aea9ff0d73073f11f6962\"},",
      "",
      "[Added Lines]",
      "2540: version = \"5.15.13\"",
      "2545:     {file = \"PyQt5_Qt5-5.15.13-py3-none-macosx_10_13_x86_64.whl\", hash = \"sha256:92575a9e96a27c4ed67c56c7048ded7461a1655d5d21f0e05064664e6e9fcbdf\"},",
      "2546:     {file = \"PyQt5_Qt5-5.15.13-py3-none-macosx_11_0_arm64.whl\", hash = \"sha256:141859f2ffe04cc6c5db970e2b6ad9f98897805d886a14c52614e3799daab6d6\"},",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "dc0dc273e520d6bf2949e75fcf8dc10e27866b30",
      "candidate_info": {
        "commit_hash": "dc0dc273e520d6bf2949e75fcf8dc10e27866b30",
        "repo": "MobSF/Mobile-Security-Framework-MobSF",
        "commit_url": "https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/dc0dc273e520d6bf2949e75fcf8dc10e27866b30",
        "files": [
          "mobsf/MalwareAnalyzer/views/MalwareDomainCheck.py",
          "mobsf/MobSF/init.py",
          "mobsf/StaticAnalyzer/views/android/manifest_analysis.py",
          "mobsf/StaticAnalyzer/views/common/appsec.py",
          "mobsf/static/adminlte/plugins/jquery.min.js",
          "mobsf/templates/dynamic_analysis/android/dynamic_report.html",
          "mobsf/templates/pdf/android_report.html",
          "mobsf/templates/pdf/ios_report.html",
          "mobsf/templates/static_analysis/android_binary_analysis.html",
          "mobsf/templates/static_analysis/android_source_analysis.html",
          "mobsf/templates/static_analysis/ios_binary_analysis.html",
          "mobsf/templates/static_analysis/ios_source_analysis.html",
          "tox.ini"
        ],
        "message": "HOTFIX: Feature updates and Bug Fixes (#2197)\n\n* OFAC, jquery bump, tox fix\n* AAR handle multiple application tags",
        "before_after_code_files": [
          "mobsf/MalwareAnalyzer/views/MalwareDomainCheck.py||mobsf/MalwareAnalyzer/views/MalwareDomainCheck.py",
          "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
          "mobsf/StaticAnalyzer/views/android/manifest_analysis.py||mobsf/StaticAnalyzer/views/android/manifest_analysis.py",
          "mobsf/StaticAnalyzer/views/common/appsec.py||mobsf/StaticAnalyzer/views/common/appsec.py",
          "mobsf/static/adminlte/plugins/jquery.min.js||mobsf/static/adminlte/plugins/jquery.min.js",
          "mobsf/templates/dynamic_analysis/android/dynamic_report.html||mobsf/templates/dynamic_analysis/android/dynamic_report.html",
          "mobsf/templates/pdf/android_report.html||mobsf/templates/pdf/android_report.html",
          "mobsf/templates/pdf/ios_report.html||mobsf/templates/pdf/ios_report.html",
          "mobsf/templates/static_analysis/android_binary_analysis.html||mobsf/templates/static_analysis/android_binary_analysis.html",
          "mobsf/templates/static_analysis/android_source_analysis.html||mobsf/templates/static_analysis/android_source_analysis.html",
          "mobsf/templates/static_analysis/ios_binary_analysis.html||mobsf/templates/static_analysis/ios_binary_analysis.html",
          "mobsf/templates/static_analysis/ios_source_analysis.html||mobsf/templates/static_analysis/ios_source_analysis.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
            "mobsf/StaticAnalyzer/views/android/manifest_analysis.py||mobsf/StaticAnalyzer/views/android/manifest_analysis.py"
          ],
          "candidate": [
            "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
            "mobsf/StaticAnalyzer/views/android/manifest_analysis.py||mobsf/StaticAnalyzer/views/android/manifest_analysis.py"
          ]
        }
      },
      "candidate_diff": {
        "mobsf/MalwareAnalyzer/views/MalwareDomainCheck.py||mobsf/MalwareAnalyzer/views/MalwareDomainCheck.py": [
          "File: mobsf/MalwareAnalyzer/views/MalwareDomainCheck.py -> mobsf/MalwareAnalyzer/views/MalwareDomainCheck.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:     def gelocation(self):",
          "79:         \"\"\"Perform Geolocation.\"\"\"",
          "80:         try:",
          "81:             self.IP2Loc.open(self.iplocbin)",
          "82:             for domain in self.domainlist:",
          "83:                 # Tag Good Domains",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "81:             ofac_list = {",
          "82:                 'cuba', 'iran', 'north korea',",
          "83:                 'russia', 'syria', 'balkans',",
          "84:                 'belarus', 'myanmar', 'congo',",
          "85:                 'ethiopia', 'hong kong', 'iraq',",
          "86:                 'lebanon', 'libya', 'sudan',",
          "87:                 'venezuela', 'yemen', 'zimbabwe',",
          "88:                 'crimea', 'donetsk', 'luhansk',",
          "89:                 'afghanistan', 'china', 'ivory coast',",
          "90:                 'cyprus', 'eritrea', 'haiti',",
          "91:                 'liberia', 'somalia', 'sri lanka',",
          "92:                 'vietnam', 'south sudan',",
          "93:             }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94:                 if ip:",
          "95:                     rec = self.IP2Loc.get_all(ip)",
          "96:                     self.result[domain]['geolocation'] = rec.__dict__",
          "97:                 else:",
          "98:                     self.result[domain]['geolocation'] = None",
          "99:         except Exception:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "110:                     country = rec.__dict__.get('country_long')",
          "111:                     region = rec.__dict__.get('region')",
          "112:                     city = rec.__dict__.get('city')",
          "113:                     self.result[domain]['ofac'] = False",
          "114:                     if country and country.lower() in ofac_list:",
          "115:                         self.result[domain]['ofac'] = True",
          "116:                     elif region and region.lower() in ofac_list:",
          "117:                         self.result[domain]['ofac'] = True",
          "118:                     elif city and city.lower() in ofac_list:",
          "119:                         self.result[domain]['ofac'] = True",
          "",
          "---------------"
        ],
        "mobsf/MobSF/init.py||mobsf/MobSF/init.py": [
          "File: mobsf/MobSF/init.py -> mobsf/MobSF/init.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: logger = logging.getLogger(__name__)",
          "14: BANNER = \"\"\"",
          "15:   __  __       _    ____  _____       _____  __",
          "16:  |  \\/  | ___ | |__/ ___||  ___|_   _|___ / / /_",
          "",
          "[Removed Lines]",
          "13: VERSION = '3.6.7'",
          "",
          "[Added Lines]",
          "13: VERSION = '3.6.8'",
          "",
          "---------------"
        ],
        "mobsf/StaticAnalyzer/views/android/manifest_analysis.py||mobsf/StaticAnalyzer/views/android/manifest_analysis.py": [
          "File: mobsf/StaticAnalyzer/views/android/manifest_analysis.py -> mobsf/StaticAnalyzer/views/android/manifest_analysis.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "299:             minsdk = man_data_dic.get('min_sdk')",
          "300:             ret_list.append(('vulnerable_os_version', (minsdk,), ()))",
          "301:         # APPLICATIONS",
          "302:         for application in applications:",
          "303:             # Esteve 23.07.2016 - begin - identify permission at the",
          "304:             # application level",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "302:         # Handle multiple application tags in AAR",
          "303:         backupDisabled = False",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "323:             if application.getAttribute('android:allowBackup') == 'true':",
          "324:                 ret_list.append(('app_allowbackup', (), ()))",
          "325:             elif application.getAttribute('android:allowBackup') == 'false':",
          "327:             else:",
          "329:             if application.getAttribute('android:testOnly') == 'true':",
          "330:                 ret_list.append(('app_in_test_mode', (), ()))",
          "331:             for node in application.childNodes:",
          "",
          "[Removed Lines]",
          "326:                 pass",
          "328:                 ret_list.append(('allowbackup_not_set', (), ()))",
          "",
          "[Added Lines]",
          "328:                 backupDisabled = True",
          "330:                 if not backupDisabled:",
          "331:                     ret_list.append(('allowbackup_not_set', (), ()))",
          "",
          "---------------"
        ],
        "mobsf/StaticAnalyzer/views/common/appsec.py||mobsf/StaticAnalyzer/views/common/appsec.py": [
          "File: mobsf/StaticAnalyzer/views/common/appsec.py -> mobsf/StaticAnalyzer/views/common/appsec.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "99:                 'description': str(value['geolocation']),",
          "100:                 'section': 'domains',",
          "101:             })",
          "102:     # Firebase",
          "103:     for fb in data['firebase_urls']:",
          "104:         if fb['open']:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "102:         if value.get('ofac') and value['ofac'] is True:",
          "103:             country = ''",
          "104:             if value['geolocation'].get('country_long'):",
          "105:                 country = value['geolocation'].get('country_long')",
          "106:             elif value['geolocation'].get('region'):",
          "107:                 country = value['geolocation'].get('region')",
          "108:             elif value['geolocation'].get('city'):",
          "109:                 country = value['geolocation'].get('city')",
          "110:             findings['hotspot'].append({",
          "111:                 'title': ('App may communicate to a server '",
          "112:                           f'({domain}) in OFAC sanctioned country '",
          "113:                           f'({country})'),",
          "114:                 'description': str(value['geolocation']),",
          "115:                 'section': 'domains',",
          "116:             })",
          "",
          "---------------"
        ],
        "mobsf/static/adminlte/plugins/jquery.min.js||mobsf/static/adminlte/plugins/jquery.min.js": [
          "File: mobsf/static/adminlte/plugins/jquery.min.js -> mobsf/static/adminlte/plugins/jquery.min.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "2: !function(e,t){\"use strict\";\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error(\"jQuery requires a window with a document\");return t(e)}:t(e)}(\"undefined\"!=typeof window?window:this,function(C,e){\"use strict\";var t=[],r=Object.getPrototypeOf,s=t.slice,g=t.flat?function(e){return t.flat.call(e)}:function(e){return t.concat.apply([],e)},u=t.push,i=t.indexOf,n={},o=n.toString,v=n.hasOwnProperty,a=v.toString,l=a.call(Object),y={},m=function(e){return\"function\"==typeof e&&\"number\"!=typeof e.nodeType},x=function(e){return null!=e&&e===e.window},E=C.document,c={type:!0,src:!0,nonce:!0,noModule:!0};function b(e,t,n){var r,i,o=(n=n||E).createElement(\"script\");if(o.text=e,t)for(r in c)(i=t[r]||t.getAttribute&&t.getAttribute(r))&&o.setAttribute(r,i);n.head.appendChild(o).parentNode.removeChild(o)}function w(e){return null==e?e+\"\":\"object\"==typeof e||\"function\"==typeof e?n[o.call(e)]||\"object\":typeof e}var f=\"3.5.0\",S=function(e,t){return new S.fn.init(e,t)};function p(e){var t=!!e&&\"length\"in e&&e.length,n=w(e);return!m(e)&&!x(e)&&(\"array\"===n||0===t||\"number\"==typeof t&&0<t&&t-1 in e)}S.fn=S.prototype={jquery:f,constructor:S,length:0,toArray:function(){return s.call(this)},get:function(e){return null==e?s.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=S.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return S.each(this,e)},map:function(n){return this.pushStack(S.map(this,function(e,t){return n.call(e,t,e)}))},slice:function(){return this.pushStack(s.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(S.grep(this,function(e,t){return(t+1)%2}))},odd:function(){return this.pushStack(S.grep(this,function(e,t){return t%2}))},eq:function(e){var t=this.length,n=+e+(e<0?t:0);return this.pushStack(0<=n&&n<t?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:u,sort:t.sort,splice:t.splice},S.extend=S.fn.extend=function(){var e,t,n,r,i,o,a=arguments[0]||{},s=1,u=arguments.length,l=!1;for(\"boolean\"==typeof a&&(l=a,a=arguments[s]||{},s++),\"object\"==typeof a||m(a)||(a={}),s===u&&(a=this,s--);s<u;s++)if(null!=(e=arguments[s]))for(t in e)r=e[t],\"__proto__\"!==t&&a!==r&&(l&&r&&(S.isPlainObject(r)||(i=Array.isArray(r)))?(n=a[t],o=i&&!Array.isArray(n)?[]:i||S.isPlainObject(n)?n:{},i=!1,a[t]=S.extend(l,o,r)):void 0!==r&&(a[t]=r));return a},S.extend({expando:\"jQuery\"+(f+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,n;return!(!e||\"[object Object]\"!==o.call(e))&&(!(t=r(e))||\"function\"==typeof(n=v.call(t,\"constructor\")&&t.constructor)&&a.call(n)===l)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t,n){b(e,{nonce:t&&t.nonce},n)},each:function(e,t){var n,r=0;if(p(e)){for(n=e.length;r<n;r++)if(!1===t.call(e[r],r,e[r]))break}else for(r in e)if(!1===t.call(e[r],r,e[r]))break;return e},makeArray:function(e,t){var n=t||[];return null!=e&&(p(Object(e))?S.merge(n,\"string\"==typeof e?[e]:e):u.call(n,e)),n},inArray:function(e,t,n){return null==t?-1:i.call(t,e,n)},merge:function(e,t){for(var n=+t.length,r=0,i=e.length;r<n;r++)e[i++]=t[r];return e.length=i,e},grep:function(e,t,n){for(var r=[],i=0,o=e.length,a=!n;i<o;i++)!t(e[i],i)!==a&&r.push(e[i]);return r},map:function(e,t,n){var r,i,o=0,a=[];if(p(e))for(r=e.length;o<r;o++)null!=(i=t(e[o],o,n))&&a.push(i);else for(o in e)null!=(i=t(e[o],o,n))&&a.push(i);return g(a)},guid:1,support:y}),\"function\"==typeof Symbol&&(S.fn[Symbol.iterator]=t[Symbol.iterator]),S.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"),function(e,t){n[\"[object \"+t+\"]\"]=t.toLowerCase()});var d=function(n){var e,d,b,o,i,h,f,g,w,u,l,T,C,a,E,v,s,c,y,S=\"sizzle\"+1*new Date,p=n.document,k=0,r=0,m=ue(),x=ue(),A=ue(),N=ue(),D=function(e,t){return e===t&&(l=!0),0},j={}.hasOwnProperty,t=[],q=t.pop,L=t.push,H=t.push,O=t.slice,P=function(e,t){for(var n=0,r=e.length;n<r;n++)if(e[n]===t)return n;return-1},R=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",M=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",I=\"(?:\\\\\\\\[\\\\da-fA-F]{1,6}\"+M+\"?|\\\\\\\\[^\\\\r\\\\n\\\\f]|[\\\\w-]|[^\\0-\\\\x7f])+\",W=\"\\\\[\"+M+\"*(\"+I+\")(?:\"+M+\"*([*^$|!~]?=)\"+M+\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+I+\"))|)\"+M+\"*\\\\]\",F=\":(\"+I+\")(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+W+\")*)|.*)\\\\)|)\",B=new RegExp(M+\"+\",\"g\"),$=new RegExp(\"^\"+M+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+M+\"+$\",\"g\"),_=new RegExp(\"^\"+M+\"*,\"+M+\"*\"),z=new RegExp(\"^\"+M+\"*([>+~]|\"+M+\")\"+M+\"*\"),U=new RegExp(M+\"|>\"),X=new RegExp(F),V=new RegExp(\"^\"+I+\"$\"),G={ID:new RegExp(\"^#(\"+I+\")\"),CLASS:new RegExp(\"^\\\\.(\"+I+\")\"),TAG:new RegExp(\"^(\"+I+\"|[*])\"),ATTR:new RegExp(\"^\"+W),PSEUDO:new RegExp(\"^\"+F),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+M+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+M+\"*(?:([+-]|)\"+M+\"*(\\\\d+)|))\"+M+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+R+\")$\",\"i\"),needsContext:new RegExp(\"^\"+M+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+M+\"*((?:-\\\\d)?\\\\d*)\"+M+\"*\\\\)|)(?=[^-]|$)\",\"i\")},Y=/HTML$/i,Q=/^(?:input|select|textarea|button)$/i,J=/^h\\d$/i,K=/^[^{]+\\{\\s*\\[native \\w/,Z=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,ee=/[+~]/,te=new RegExp(\"\\\\\\\\[\\\\da-fA-F]{1,6}\"+M+\"?|\\\\\\\\([^\\\\r\\\\n\\\\f])\",\"g\"),ne=function(e,t){var n=\"0x\"+e.slice(1)-65536;return t||(n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320))},re=/([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,ie=function(e,t){return t?\"\\0\"===e?\"\\ufffd\":e.slice(0,-1)+\"\\\\\"+e.charCodeAt(e.length-1).toString(16)+\" \":\"\\\\\"+e},oe=function(){T()},ae=be(function(e){return!0===e.disabled&&\"fieldset\"===e.nodeName.toLowerCase()},{dir:\"parentNode\",next:\"legend\"});try{H.apply(t=O.call(p.childNodes),p.childNodes),t[p.childNodes.length].nodeType}catch(e){H={apply:t.length?function(e,t){L.apply(e,O.call(t))}:function(e,t){var n=e.length,r=0;while(e[n++]=t[r++]);e.length=n-1}}}function se(t,e,n,r){var i,o,a,s,u,l,c,f=e&&e.ownerDocument,p=e?e.nodeType:9;if(n=n||[],\"string\"!=typeof t||!t||1!==p&&9!==p&&11!==p)return n;if(!r&&(T(e),e=e||C,E)){if(11!==p&&(u=Z.exec(t)))if(i=u[1]){if(9===p){if(!(a=e.getElementById(i)))return n;if(a.id===i)return n.push(a),n}else if(f&&(a=f.getElementById(i))&&y(e,a)&&a.id===i)return n.push(a),n}else{if(u[2])return H.apply(n,e.getElementsByTagName(t)),n;if((i=u[3])&&d.getElementsByClassName&&e.getElementsByClassName)return H.apply(n,e.getElementsByClassName(i)),n}if(d.qsa&&!N[t+\" \"]&&(!v||!v.test(t))&&(1!==p||\"object\"!==e.nodeName.toLowerCase())){if(c=t,f=e,1===p&&(U.test(t)||z.test(t))){(f=ee.test(t)&&ye(e.parentNode)||e)===e&&d.scope||((s=e.getAttribute(\"id\"))?s=s.replace(re,ie):e.setAttribute(\"id\",s=S)),o=(l=h(t)).length;while(o--)l[o]=(s?\"#\"+s:\":scope\")+\" \"+xe(l[o]);c=l.join(\",\")}try{return H.apply(n,f.querySelectorAll(c)),n}catch(e){N(t,!0)}finally{s===S&&e.removeAttribute(\"id\")}}}return g(t.replace($,\"$1\"),e,n,r)}function ue(){var r=[];return function e(t,n){return r.push(t+\" \")>b.cacheLength&&delete e[r.shift()],e[t+\" \"]=n}}function le(e){return e[S]=!0,e}function ce(e){var t=C.createElement(\"fieldset\");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function fe(e,t){var n=e.split(\"|\"),r=n.length;while(r--)b.attrHandle[n[r]]=t}function pe(e,t){var n=t&&e,r=n&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(r)return r;if(n)while(n=n.nextSibling)if(n===t)return-1;return e?1:-1}function de(t){return function(e){return\"input\"===e.nodeName.toLowerCase()&&e.type===t}}function he(n){return function(e){var t=e.nodeName.toLowerCase();return(\"input\"===t||\"button\"===t)&&e.type===n}}function ge(t){return function(e){return\"form\"in e?e.parentNode&&!1===e.disabled?\"label\"in e?\"label\"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&ae(e)===t:e.disabled===t:\"label\"in e&&e.disabled===t}}function ve(a){return le(function(o){return o=+o,le(function(e,t){var n,r=a([],e.length,o),i=r.length;while(i--)e[n=r[i]]&&(e[n]=!(t[n]=e[n]))})})}function ye(e){return e&&\"undefined\"!=typeof e.getElementsByTagName&&e}for(e in d=se.support={},i=se.isXML=function(e){var t=e.namespaceURI,n=(e.ownerDocument||e).documentElement;return!Y.test(t||n&&n.nodeName||\"HTML\")},T=se.setDocument=function(e){var t,n,r=e?e.ownerDocument||e:p;return r!=C&&9===r.nodeType&&r.documentElement&&(a=(C=r).documentElement,E=!i(C),p!=C&&(n=C.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener(\"unload\",oe,!1):n.attachEvent&&n.attachEvent(\"onunload\",oe)),d.scope=ce(function(e){return a.appendChild(e).appendChild(C.createElement(\"div\")),\"undefined\"!=typeof e.querySelectorAll&&!e.querySelectorAll(\":scope fieldset div\").length}),d.attributes=ce(function(e){return e.className=\"i\",!e.getAttribute(\"className\")}),d.getElementsByTagName=ce(function(e){return e.appendChild(C.createComment(\"\")),!e.getElementsByTagName(\"*\").length}),d.getElementsByClassName=K.test(C.getElementsByClassName),d.getById=ce(function(e){return a.appendChild(e).id=S,!C.getElementsByName||!C.getElementsByName(S).length}),d.getById?(b.filter.ID=function(e){var t=e.replace(te,ne);return function(e){return e.getAttribute(\"id\")===t}},b.find.ID=function(e,t){if(\"undefined\"!=typeof t.getElementById&&E){var n=t.getElementById(e);return n?[n]:[]}}):(b.filter.ID=function(e){var n=e.replace(te,ne);return function(e){var t=\"undefined\"!=typeof e.getAttributeNode&&e.getAttributeNode(\"id\");return t&&t.value===n}},b.find.ID=function(e,t){if(\"undefined\"!=typeof t.getElementById&&E){var n,r,i,o=t.getElementById(e);if(o){if((n=o.getAttributeNode(\"id\"))&&n.value===e)return[o];i=t.getElementsByName(e),r=0;while(o=i[r++])if((n=o.getAttributeNode(\"id\"))&&n.value===e)return[o]}return[]}}),b.find.TAG=d.getElementsByTagName?function(e,t){return\"undefined\"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):d.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if(\"*\"===e){while(n=o[i++])1===n.nodeType&&r.push(n);return r}return o},b.find.CLASS=d.getElementsByClassName&&function(e,t){if(\"undefined\"!=typeof t.getElementsByClassName&&E)return t.getElementsByClassName(e)},s=[],v=[],(d.qsa=K.test(C.querySelectorAll))&&(ce(function(e){var t;a.appendChild(e).innerHTML=\"<a id='\"+S+\"'></a><select id='\"+S+\"-\\r\\\\' msallowcapture=''><option selected=''></option></select>\",e.querySelectorAll(\"[msallowcapture^='']\").length&&v.push(\"[*^$]=\"+M+\"*(?:''|\\\"\\\")\"),e.querySelectorAll(\"[selected]\").length||v.push(\"\\\\[\"+M+\"*(?:value|\"+R+\")\"),e.querySelectorAll(\"[id~=\"+S+\"-]\").length||v.push(\"~=\"),(t=C.createElement(\"input\")).setAttribute(\"name\",\"\"),e.appendChild(t),e.querySelectorAll(\"[name='']\").length||v.push(\"\\\\[\"+M+\"*name\"+M+\"*=\"+M+\"*(?:''|\\\"\\\")\"),e.querySelectorAll(\":checked\").length||v.push(\":checked\"),e.querySelectorAll(\"a#\"+S+\"+*\").length||v.push(\".#.+[+~]\"),e.querySelectorAll(\"\\\\\\f\"),v.push(\"[\\\\r\\\\n\\\\f]\")}),ce(function(e){e.innerHTML=\"<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>\";var t=C.createElement(\"input\");t.setAttribute(\"type\",\"hidden\"),e.appendChild(t).setAttribute(\"name\",\"D\"),e.querySelectorAll(\"[name=d]\").length&&v.push(\"name\"+M+\"*[*^$|!~]?=\"),2!==e.querySelectorAll(\":enabled\").length&&v.push(\":enabled\",\":disabled\"),a.appendChild(e).disabled=!0,2!==e.querySelectorAll(\":disabled\").length&&v.push(\":enabled\",\":disabled\"),e.querySelectorAll(\"*,:x\"),v.push(\",.*:\")})),(d.matchesSelector=K.test(c=a.matches||a.webkitMatchesSelector||a.mozMatchesSelector||a.oMatchesSelector||a.msMatchesSelector))&&ce(function(e){d.disconnectedMatch=c.call(e,\"*\"),c.call(e,\"[s!='']:x\"),s.push(\"!=\",F)}),v=v.length&&new RegExp(v.join(\"|\")),s=s.length&&new RegExp(s.join(\"|\")),t=K.test(a.compareDocumentPosition),y=t||K.test(a.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)while(t=t.parentNode)if(t===e)return!0;return!1},D=t?function(e,t){if(e===t)return l=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n||(1&(n=(e.ownerDocument||e)==(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!d.sortDetached&&t.compareDocumentPosition(e)===n?e==C||e.ownerDocument==p&&y(p,e)?-1:t==C||t.ownerDocument==p&&y(p,t)?1:u?P(u,e)-P(u,t):0:4&n?-1:1)}:function(e,t){if(e===t)return l=!0,0;var n,r=0,i=e.parentNode,o=t.parentNode,a=[e],s=[t];if(!i||!o)return e==C?-1:t==C?1:i?-1:o?1:u?P(u,e)-P(u,t):0;if(i===o)return pe(e,t);n=e;while(n=n.parentNode)a.unshift(n);n=t;while(n=n.parentNode)s.unshift(n);while(a[r]===s[r])r++;return r?pe(a[r],s[r]):a[r]==p?-1:s[r]==p?1:0}),C},se.matches=function(e,t){return se(e,null,null,t)},se.matchesSelector=function(e,t){if(T(e),d.matchesSelector&&E&&!N[t+\" \"]&&(!s||!s.test(t))&&(!v||!v.test(t)))try{var n=c.call(e,t);if(n||d.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(e){N(t,!0)}return 0<se(t,C,null,[e]).length},se.contains=function(e,t){return(e.ownerDocument||e)!=C&&T(e),y(e,t)},se.attr=function(e,t){(e.ownerDocument||e)!=C&&T(e);var n=b.attrHandle[t.toLowerCase()],r=n&&j.call(b.attrHandle,t.toLowerCase())?n(e,t,!E):void 0;return void 0!==r?r:d.attributes||!E?e.getAttribute(t):(r=e.getAttributeNode(t))&&r.specified?r.value:null},se.escape=function(e){return(e+\"\").replace(re,ie)},se.error=function(e){throw new Error(\"Syntax error, unrecognized expression: \"+e)},se.uniqueSort=function(e){var t,n=[],r=0,i=0;if(l=!d.detectDuplicates,u=!d.sortStable&&e.slice(0),e.sort(D),l){while(t=e[i++])t===e[i]&&(r=n.push(i));while(r--)e.splice(n[r],1)}return u=null,e},o=se.getText=function(e){var t,n=\"\",r=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if(\"string\"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=o(e)}else if(3===i||4===i)return e.nodeValue}else while(t=e[r++])n+=o(t);return n},(b=se.selectors={cacheLength:50,createPseudo:le,match:G,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(te,ne),e[3]=(e[3]||e[4]||e[5]||\"\").replace(te,ne),\"~=\"===e[2]&&(e[3]=\" \"+e[3]+\" \"),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),\"nth\"===e[1].slice(0,3)?(e[3]||se.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*(\"even\"===e[3]||\"odd\"===e[3])),e[5]=+(e[7]+e[8]||\"odd\"===e[3])):e[3]&&se.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return G.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||\"\":n&&X.test(n)&&(t=h(n,!0))&&(t=n.indexOf(\")\",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(te,ne).toLowerCase();return\"*\"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=m[e+\" \"];return t||(t=new RegExp(\"(^|\"+M+\")\"+e+\"(\"+M+\"|$)\"))&&m(e,function(e){return t.test(\"string\"==typeof e.className&&e.className||\"undefined\"!=typeof e.getAttribute&&e.getAttribute(\"class\")||\"\")})},ATTR:function(n,r,i){return function(e){var t=se.attr(e,n);return null==t?\"!=\"===r:!r||(t+=\"\",\"=\"===r?t===i:\"!=\"===r?t!==i:\"^=\"===r?i&&0===t.indexOf(i):\"*=\"===r?i&&-1<t.indexOf(i):\"$=\"===r?i&&t.slice(-i.length)===i:\"~=\"===r?-1<(\" \"+t.replace(B,\" \")+\" \").indexOf(i):\"|=\"===r&&(t===i||t.slice(0,i.length+1)===i+\"-\"))}},CHILD:function(h,e,t,g,v){var y=\"nth\"!==h.slice(0,3),m=\"last\"!==h.slice(-4),x=\"of-type\"===e;return 1===g&&0===v?function(e){return!!e.parentNode}:function(e,t,n){var r,i,o,a,s,u,l=y!==m?\"nextSibling\":\"previousSibling\",c=e.parentNode,f=x&&e.nodeName.toLowerCase(),p=!n&&!x,d=!1;if(c){if(y){while(l){a=e;while(a=a[l])if(x?a.nodeName.toLowerCase()===f:1===a.nodeType)return!1;u=l=\"only\"===h&&!u&&\"nextSibling\"}return!0}if(u=[m?c.firstChild:c.lastChild],m&&p){d=(s=(r=(i=(o=(a=c)[S]||(a[S]={}))[a.uniqueID]||(o[a.uniqueID]={}))[h]||[])[0]===k&&r[1])&&r[2],a=s&&c.childNodes[s];while(a=++s&&a&&a[l]||(d=s=0)||u.pop())if(1===a.nodeType&&++d&&a===e){i[h]=[k,s,d];break}}else if(p&&(d=s=(r=(i=(o=(a=e)[S]||(a[S]={}))[a.uniqueID]||(o[a.uniqueID]={}))[h]||[])[0]===k&&r[1]),!1===d)while(a=++s&&a&&a[l]||(d=s=0)||u.pop())if((x?a.nodeName.toLowerCase()===f:1===a.nodeType)&&++d&&(p&&((i=(o=a[S]||(a[S]={}))[a.uniqueID]||(o[a.uniqueID]={}))[h]=[k,d]),a===e))break;return(d-=v)===g||d%g==0&&0<=d/g}}},PSEUDO:function(e,o){var t,a=b.pseudos[e]||b.setFilters[e.toLowerCase()]||se.error(\"unsupported pseudo: \"+e);return a[S]?a(o):1<a.length?(t=[e,e,\"\",o],b.setFilters.hasOwnProperty(e.toLowerCase())?le(function(e,t){var n,r=a(e,o),i=r.length;while(i--)e[n=P(e,r[i])]=!(t[n]=r[i])}):function(e){return a(e,0,t)}):a}},pseudos:{not:le(function(e){var r=[],i=[],s=f(e.replace($,\"$1\"));return s[S]?le(function(e,t,n,r){var i,o=s(e,null,r,[]),a=e.length;while(a--)(i=o[a])&&(e[a]=!(t[a]=i))}):function(e,t,n){return r[0]=e,s(r,null,n,i),r[0]=null,!i.pop()}}),has:le(function(t){return function(e){return 0<se(t,e).length}}),contains:le(function(t){return t=t.replace(te,ne),function(e){return-1<(e.textContent||o(e)).indexOf(t)}}),lang:le(function(n){return V.test(n||\"\")||se.error(\"unsupported lang: \"+n),n=n.replace(te,ne).toLowerCase(),function(e){var t;do{if(t=E?e.lang:e.getAttribute(\"xml:lang\")||e.getAttribute(\"lang\"))return(t=t.toLowerCase())===n||0===t.indexOf(n+\"-\")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=n.location&&n.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===a},focus:function(e){return e===C.activeElement&&(!C.hasFocus||C.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:ge(!1),disabled:ge(!0),checked:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&!!e.checked||\"option\"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!b.pseudos.empty(e)},header:function(e){return J.test(e.nodeName)},input:function(e){return Q.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&\"button\"===e.type||\"button\"===t},text:function(e){var t;return\"input\"===e.nodeName.toLowerCase()&&\"text\"===e.type&&(null==(t=e.getAttribute(\"type\"))||\"text\"===t.toLowerCase())},first:ve(function(){return[0]}),last:ve(function(e,t){return[t-1]}),eq:ve(function(e,t,n){return[n<0?n+t:n]}),even:ve(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:ve(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:ve(function(e,t,n){for(var r=n<0?n+t:t<n?t:n;0<=--r;)e.push(r);return e}),gt:ve(function(e,t,n){for(var r=n<0?n+t:n;++r<t;)e.push(r);return e})}}).pseudos.nth=b.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})b.pseudos[e]=de(e);for(e in{submit:!0,reset:!0})b.pseudos[e]=he(e);function me(){}function xe(e){for(var t=0,n=e.length,r=\"\";t<n;t++)r+=e[t].value;return r}function be(s,e,t){var u=e.dir,l=e.next,c=l||u,f=t&&\"parentNode\"===c,p=r++;return e.first?function(e,t,n){while(e=e[u])if(1===e.nodeType||f)return s(e,t,n);return!1}:function(e,t,n){var r,i,o,a=[k,p];if(n){while(e=e[u])if((1===e.nodeType||f)&&s(e,t,n))return!0}else while(e=e[u])if(1===e.nodeType||f)if(i=(o=e[S]||(e[S]={}))[e.uniqueID]||(o[e.uniqueID]={}),l&&l===e.nodeName.toLowerCase())e=e[u]||e;else{if((r=i[c])&&r[0]===k&&r[1]===p)return a[2]=r[2];if((i[c]=a)[2]=s(e,t,n))return!0}return!1}}function we(i){return 1<i.length?function(e,t,n){var r=i.length;while(r--)if(!i[r](e,t,n))return!1;return!0}:i[0]}function Te(e,t,n,r,i){for(var o,a=[],s=0,u=e.length,l=null!=t;s<u;s++)(o=e[s])&&(n&&!n(o,r,i)||(a.push(o),l&&t.push(s)));return a}function Ce(d,h,g,v,y,e){return v&&!v[S]&&(v=Ce(v)),y&&!y[S]&&(y=Ce(y,e)),le(function(e,t,n,r){var i,o,a,s=[],u=[],l=t.length,c=e||function(e,t,n){for(var r=0,i=t.length;r<i;r++)se(e,t[r],n);return n}(h||\"*\",n.nodeType?[n]:n,[]),f=!d||!e&&h?c:Te(c,s,d,n,r),p=g?y||(e?d:l||v)?[]:t:f;if(g&&g(f,p,n,r),v){i=Te(p,u),v(i,[],n,r),o=i.length;while(o--)(a=i[o])&&(p[u[o]]=!(f[u[o]]=a))}if(e){if(y||d){if(y){i=[],o=p.length;while(o--)(a=p[o])&&i.push(f[o]=a);y(null,p=[],i,r)}o=p.length;while(o--)(a=p[o])&&-1<(i=y?P(e,a):s[o])&&(e[i]=!(t[i]=a))}}else p=Te(p===t?p.splice(l,p.length):p),y?y(null,t,p,r):H.apply(t,p)})}function Ee(e){for(var i,t,n,r=e.length,o=b.relative[e[0].type],a=o||b.relative[\" \"],s=o?1:0,u=be(function(e){return e===i},a,!0),l=be(function(e){return-1<P(i,e)},a,!0),c=[function(e,t,n){var r=!o&&(n||t!==w)||((i=t).nodeType?u(e,t,n):l(e,t,n));return i=null,r}];s<r;s++)if(t=b.relative[e[s].type])c=[be(we(c),t)];else{if((t=b.filter[e[s].type].apply(null,e[s].matches))[S]){for(n=++s;n<r;n++)if(b.relative[e[n].type])break;return Ce(1<s&&we(c),1<s&&xe(e.slice(0,s-1).concat({value:\" \"===e[s-2].type?\"*\":\"\"})).replace($,\"$1\"),t,s<n&&Ee(e.slice(s,n)),n<r&&Ee(e=e.slice(n)),n<r&&xe(e))}c.push(t)}return we(c)}return me.prototype=b.filters=b.pseudos,b.setFilters=new me,h=se.tokenize=function(e,t){var n,r,i,o,a,s,u,l=x[e+\" \"];if(l)return t?0:l.slice(0);a=e,s=[],u=b.preFilter;while(a){for(o in n&&!(r=_.exec(a))||(r&&(a=a.slice(r[0].length)||a),s.push(i=[])),n=!1,(r=z.exec(a))&&(n=r.shift(),i.push({value:n,type:r[0].replace($,\" \")}),a=a.slice(n.length)),b.filter)!(r=G[o].exec(a))||u[o]&&!(r=u[o](r))||(n=r.shift(),i.push({value:n,type:o,matches:r}),a=a.slice(n.length));if(!n)break}return t?a.length:a?se.error(e):x(e,s).slice(0)},f=se.compile=function(e,t){var n,v,y,m,x,r,i=[],o=[],a=A[e+\" \"];if(!a){t||(t=h(e)),n=t.length;while(n--)(a=Ee(t[n]))[S]?i.push(a):o.push(a);(a=A(e,(v=o,m=0<(y=i).length,x=0<v.length,r=function(e,t,n,r,i){var o,a,s,u=0,l=\"0\",c=e&&[],f=[],p=w,d=e||x&&b.find.TAG(\"*\",i),h=k+=null==p?1:Math.random()||.1,g=d.length;for(i&&(w=t==C||t||i);l!==g&&null!=(o=d[l]);l++){if(x&&o){a=0,t||o.ownerDocument==C||(T(o),n=!E);while(s=v[a++])if(s(o,t||C,n)){r.push(o);break}i&&(k=h)}m&&((o=!s&&o)&&u--,e&&c.push(o))}if(u+=l,m&&l!==u){a=0;while(s=y[a++])s(c,f,t,n);if(e){if(0<u)while(l--)c[l]||f[l]||(f[l]=q.call(r));f=Te(f)}H.apply(r,f),i&&!e&&0<f.length&&1<u+y.length&&se.uniqueSort(r)}return i&&(k=h,w=p),c},m?le(r):r))).selector=e}return a},g=se.select=function(e,t,n,r){var i,o,a,s,u,l=\"function\"==typeof e&&e,c=!r&&h(e=l.selector||e);if(n=n||[],1===c.length){if(2<(o=c[0]=c[0].slice(0)).length&&\"ID\"===(a=o[0]).type&&9===t.nodeType&&E&&b.relative[o[1].type]){if(!(t=(b.find.ID(a.matches[0].replace(te,ne),t)||[])[0]))return n;l&&(t=t.parentNode),e=e.slice(o.shift().value.length)}i=G.needsContext.test(e)?0:o.length;while(i--){if(a=o[i],b.relative[s=a.type])break;if((u=b.find[s])&&(r=u(a.matches[0].replace(te,ne),ee.test(o[0].type)&&ye(t.parentNode)||t))){if(o.splice(i,1),!(e=r.length&&xe(o)))return H.apply(n,r),n;break}}}return(l||f(e,c))(r,t,!E,n,!t||ee.test(e)&&ye(t.parentNode)||t),n},d.sortStable=S.split(\"\").sort(D).join(\"\")===S,d.detectDuplicates=!!l,T(),d.sortDetached=ce(function(e){return 1&e.compareDocumentPosition(C.createElement(\"fieldset\"))}),ce(function(e){return e.innerHTML=\"<a href='#'></a>\",\"#\"===e.firstChild.getAttribute(\"href\")})||fe(\"type|href|height|width\",function(e,t,n){if(!n)return e.getAttribute(t,\"type\"===t.toLowerCase()?1:2)}),d.attributes&&ce(function(e){return e.innerHTML=\"<input/>\",e.firstChild.setAttribute(\"value\",\"\"),\"\"===e.firstChild.getAttribute(\"value\")})||fe(\"value\",function(e,t,n){if(!n&&\"input\"===e.nodeName.toLowerCase())return e.defaultValue}),ce(function(e){return null==e.getAttribute(\"disabled\")})||fe(R,function(e,t,n){var r;if(!n)return!0===e[t]?t.toLowerCase():(r=e.getAttributeNode(t))&&r.specified?r.value:null}),se}(C);S.find=d,S.expr=d.selectors,S.expr[\":\"]=S.expr.pseudos,S.uniqueSort=S.unique=d.uniqueSort,S.text=d.getText,S.isXMLDoc=d.isXML,S.contains=d.contains,S.escapeSelector=d.escape;var h=function(e,t,n){var r=[],i=void 0!==n;while((e=e[t])&&9!==e.nodeType)if(1===e.nodeType){if(i&&S(e).is(n))break;r.push(e)}return r},T=function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n},k=S.expr.match.needsContext;function A(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var N=/^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i;function D(e,n,r){return m(n)?S.grep(e,function(e,t){return!!n.call(e,t,e)!==r}):n.nodeType?S.grep(e,function(e){return e===n!==r}):\"string\"!=typeof n?S.grep(e,function(e){return-1<i.call(n,e)!==r}):S.filter(n,e,r)}S.filter=function(e,t,n){var r=t[0];return n&&(e=\":not(\"+e+\")\"),1===t.length&&1===r.nodeType?S.find.matchesSelector(r,e)?[r]:[]:S.find.matches(e,S.grep(t,function(e){return 1===e.nodeType}))},S.fn.extend({find:function(e){var t,n,r=this.length,i=this;if(\"string\"!=typeof e)return this.pushStack(S(e).filter(function(){for(t=0;t<r;t++)if(S.contains(i[t],this))return!0}));for(n=this.pushStack([]),t=0;t<r;t++)S.find(e,i[t],n);return 1<r?S.uniqueSort(n):n},filter:function(e){return this.pushStack(D(this,e||[],!1))},not:function(e){return this.pushStack(D(this,e||[],!0))},is:function(e){return!!D(this,\"string\"==typeof e&&k.test(e)?S(e):e||[],!1).length}});var j,q=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/;(S.fn.init=function(e,t,n){var r,i;if(!e)return this;if(n=n||j,\"string\"==typeof e){if(!(r=\"<\"===e[0]&&\">\"===e[e.length-1]&&3<=e.length?[null,e,null]:q.exec(e))||!r[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(r[1]){if(t=t instanceof S?t[0]:t,S.merge(this,S.parseHTML(r[1],t&&t.nodeType?t.ownerDocument||t:E,!0)),N.test(r[1])&&S.isPlainObject(t))for(r in t)m(this[r])?this[r](t[r]):this.attr(r,t[r]);return this}return(i=E.getElementById(r[2]))&&(this[0]=i,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):m(e)?void 0!==n.ready?n.ready(e):e(S):S.makeArray(e,this)}).prototype=S.fn,j=S(E);var L=/^(?:parents|prev(?:Until|All))/,H={children:!0,contents:!0,next:!0,prev:!0};function O(e,t){while((e=e[t])&&1!==e.nodeType);return e}S.fn.extend({has:function(e){var t=S(e,this),n=t.length;return this.filter(function(){for(var e=0;e<n;e++)if(S.contains(this,t[e]))return!0})},closest:function(e,t){var n,r=0,i=this.length,o=[],a=\"string\"!=typeof e&&S(e);if(!k.test(e))for(;r<i;r++)for(n=this[r];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(a?-1<a.index(n):1===n.nodeType&&S.find.matchesSelector(n,e))){o.push(n);break}return this.pushStack(1<o.length?S.uniqueSort(o):o)},index:function(e){return e?\"string\"==typeof e?i.call(S(e),this[0]):i.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(S.uniqueSort(S.merge(this.get(),S(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),S.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return h(e,\"parentNode\")},parentsUntil:function(e,t,n){return h(e,\"parentNode\",n)},next:function(e){return O(e,\"nextSibling\")},prev:function(e){return O(e,\"previousSibling\")},nextAll:function(e){return h(e,\"nextSibling\")},prevAll:function(e){return h(e,\"previousSibling\")},nextUntil:function(e,t,n){return h(e,\"nextSibling\",n)},prevUntil:function(e,t,n){return h(e,\"previousSibling\",n)},siblings:function(e){return T((e.parentNode||{}).firstChild,e)},children:function(e){return T(e.firstChild)},contents:function(e){return null!=e.contentDocument&&r(e.contentDocument)?e.contentDocument:(A(e,\"template\")&&(e=e.content||e),S.merge([],e.childNodes))}},function(r,i){S.fn[r]=function(e,t){var n=S.map(this,i,e);return\"Until\"!==r.slice(-5)&&(t=e),t&&\"string\"==typeof t&&(n=S.filter(t,n)),1<this.length&&(H[r]||S.uniqueSort(n),L.test(r)&&n.reverse()),this.pushStack(n)}});var P=/[^\\x20\\t\\r\\n\\f]+/g;function R(e){return e}function M(e){throw e}function I(e,t,n,r){var i;try{e&&m(i=e.promise)?i.call(e).done(t).fail(n):e&&m(i=e.then)?i.call(e,t,n):t.apply(void 0,[e].slice(r))}catch(e){n.apply(void 0,[e])}}S.Callbacks=function(r){var e,n;r=\"string\"==typeof r?(e=r,n={},S.each(e.match(P)||[],function(e,t){n[t]=!0}),n):S.extend({},r);var i,t,o,a,s=[],u=[],l=-1,c=function(){for(a=a||r.once,o=i=!0;u.length;l=-1){t=u.shift();while(++l<s.length)!1===s[l].apply(t[0],t[1])&&r.stopOnFalse&&(l=s.length,t=!1)}r.memory||(t=!1),i=!1,a&&(s=t?[]:\"\")},f={add:function(){return s&&(t&&!i&&(l=s.length-1,u.push(t)),function n(e){S.each(e,function(e,t){m(t)?r.unique&&f.has(t)||s.push(t):t&&t.length&&\"string\"!==w(t)&&n(t)})}(arguments),t&&!i&&c()),this},remove:function(){return S.each(arguments,function(e,t){var n;while(-1<(n=S.inArray(t,s,n)))s.splice(n,1),n<=l&&l--}),this},has:function(e){return e?-1<S.inArray(e,s):0<s.length},empty:function(){return s&&(s=[]),this},disable:function(){return a=u=[],s=t=\"\",this},disabled:function(){return!s},lock:function(){return a=u=[],t||i||(s=t=\"\"),this},locked:function(){return!!a},fireWith:function(e,t){return a||(t=[e,(t=t||[]).slice?t.slice():t],u.push(t),i||c()),this},fire:function(){return f.fireWith(this,arguments),this},fired:function(){return!!o}};return f},S.extend({Deferred:function(e){var o=[[\"notify\",\"progress\",S.Callbacks(\"memory\"),S.Callbacks(\"memory\"),2],[\"resolve\",\"done\",S.Callbacks(\"once memory\"),S.Callbacks(\"once memory\"),0,\"resolved\"],[\"reject\",\"fail\",S.Callbacks(\"once memory\"),S.Callbacks(\"once memory\"),1,\"rejected\"]],i=\"pending\",a={state:function(){return i},always:function(){return s.done(arguments).fail(arguments),this},\"catch\":function(e){return a.then(null,e)},pipe:function(){var i=arguments;return S.Deferred(function(r){S.each(o,function(e,t){var n=m(i[t[4]])&&i[t[4]];s[t[1]](function(){var e=n&&n.apply(this,arguments);e&&m(e.promise)?e.promise().progress(r.notify).done(r.resolve).fail(r.reject):r[t[0]+\"With\"](this,n?[e]:arguments)})}),i=null}).promise()},then:function(t,n,r){var u=0;function l(i,o,a,s){return function(){var n=this,r=arguments,e=function(){var e,t;if(!(i<u)){if((e=a.apply(n,r))===o.promise())throw new TypeError(\"Thenable self-resolution\");t=e&&(\"object\"==typeof e||\"function\"==typeof e)&&e.then,m(t)?s?t.call(e,l(u,o,R,s),l(u,o,M,s)):(u++,t.call(e,l(u,o,R,s),l(u,o,M,s),l(u,o,R,o.notifyWith))):(a!==R&&(n=void 0,r=[e]),(s||o.resolveWith)(n,r))}},t=s?e:function(){try{e()}catch(e){S.Deferred.exceptionHook&&S.Deferred.exceptionHook(e,t.stackTrace),u<=i+1&&(a!==M&&(n=void 0,r=[e]),o.rejectWith(n,r))}};i?t():(S.Deferred.getStackHook&&(t.stackTrace=S.Deferred.getStackHook()),C.setTimeout(t))}}return S.Deferred(function(e){o[0][3].add(l(0,e,m(r)?r:R,e.notifyWith)),o[1][3].add(l(0,e,m(t)?t:R)),o[2][3].add(l(0,e,m(n)?n:M))}).promise()},promise:function(e){return null!=e?S.extend(e,a):a}},s={};return S.each(o,function(e,t){var n=t[2],r=t[5];a[t[1]]=n.add,r&&n.add(function(){i=r},o[3-e][2].disable,o[3-e][3].disable,o[0][2].lock,o[0][3].lock),n.add(t[3].fire),s[t[0]]=function(){return s[t[0]+\"With\"](this===s?void 0:this,arguments),this},s[t[0]+\"With\"]=n.fireWith}),a.promise(s),e&&e.call(s,s),s},when:function(e){var n=arguments.length,t=n,r=Array(t),i=s.call(arguments),o=S.Deferred(),a=function(t){return function(e){r[t]=this,i[t]=1<arguments.length?s.call(arguments):e,--n||o.resolveWith(r,i)}};if(n<=1&&(I(e,o.done(a(t)).resolve,o.reject,!n),\"pending\"===o.state()||m(i[t]&&i[t].then)))return o.then();while(t--)I(i[t],a(t),o.reject);return o.promise()}});var W=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;S.Deferred.exceptionHook=function(e,t){C.console&&C.console.warn&&e&&W.test(e.name)&&C.console.warn(\"jQuery.Deferred exception: \"+e.message,e.stack,t)},S.readyException=function(e){C.setTimeout(function(){throw e})};var F=S.Deferred();function B(){E.removeEventListener(\"DOMContentLoaded\",B),C.removeEventListener(\"load\",B),S.ready()}S.fn.ready=function(e){return F.then(e)[\"catch\"](function(e){S.readyException(e)}),this},S.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--S.readyWait:S.isReady)||(S.isReady=!0)!==e&&0<--S.readyWait||F.resolveWith(E,[S])}}),S.ready.then=F.then,\"complete\"===E.readyState||\"loading\"!==E.readyState&&!E.documentElement.doScroll?C.setTimeout(S.ready):(E.addEventListener(\"DOMContentLoaded\",B),C.addEventListener(\"load\",B));var $=function(e,t,n,r,i,o,a){var s=0,u=e.length,l=null==n;if(\"object\"===w(n))for(s in i=!0,n)$(e,t,s,n[s],!0,o,a);else if(void 0!==r&&(i=!0,m(r)||(a=!0),l&&(a?(t.call(e,r),t=null):(l=t,t=function(e,t,n){return l.call(S(e),n)})),t))for(;s<u;s++)t(e[s],n,a?r:r.call(e[s],s,t(e[s],n)));return i?e:l?t.call(e):u?t(e[0],n):o},_=/^-ms-/,z=/-([a-z])/g;function U(e,t){return t.toUpperCase()}function X(e){return e.replace(_,\"ms-\").replace(z,U)}var V=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};function G(){this.expando=S.expando+G.uid++}G.uid=1,G.prototype={cache:function(e){var t=e[this.expando];return t||(t=Object.create(null),V(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var r,i=this.cache(e);if(\"string\"==typeof t)i[X(t)]=n;else for(r in t)i[X(r)]=t[r];return i},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][X(t)]},access:function(e,t,n){return void 0===t||t&&\"string\"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,r=e[this.expando];if(void 0!==r){if(void 0!==t){n=(t=Array.isArray(t)?t.map(X):(t=X(t))in r?[t]:t.match(P)||[]).length;while(n--)delete r[t[n]]}(void 0===t||S.isEmptyObject(r))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!S.isEmptyObject(t)}};var Y=new G,Q=new G,J=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,K=/[A-Z]/g;function Z(e,t,n){var r,i;if(void 0===n&&1===e.nodeType)if(r=\"data-\"+t.replace(K,\"-$&\").toLowerCase(),\"string\"==typeof(n=e.getAttribute(r))){try{n=\"true\"===(i=n)||\"false\"!==i&&(\"null\"===i?null:i===+i+\"\"?+i:J.test(i)?JSON.parse(i):i)}catch(e){}Q.set(e,t,n)}else n=void 0;return n}S.extend({hasData:function(e){return Q.hasData(e)||Y.hasData(e)},data:function(e,t,n){return Q.access(e,t,n)},removeData:function(e,t){Q.remove(e,t)},_data:function(e,t,n){return Y.access(e,t,n)},_removeData:function(e,t){Y.remove(e,t)}}),S.fn.extend({data:function(n,e){var t,r,i,o=this[0],a=o&&o.attributes;if(void 0===n){if(this.length&&(i=Q.get(o),1===o.nodeType&&!Y.get(o,\"hasDataAttrs\"))){t=a.length;while(t--)a[t]&&0===(r=a[t].name).indexOf(\"data-\")&&(r=X(r.slice(5)),Z(o,r,i[r]));Y.set(o,\"hasDataAttrs\",!0)}return i}return\"object\"==typeof n?this.each(function(){Q.set(this,n)}):$(this,function(e){var t;if(o&&void 0===e)return void 0!==(t=Q.get(o,n))?t:void 0!==(t=Z(o,n))?t:void 0;this.each(function(){Q.set(this,n,e)})},null,e,1<arguments.length,null,!0)},removeData:function(e){return this.each(function(){Q.remove(this,e)})}}),S.extend({queue:function(e,t,n){var r;if(e)return t=(t||\"fx\")+\"queue\",r=Y.get(e,t),n&&(!r||Array.isArray(n)?r=Y.access(e,t,S.makeArray(n)):r.push(n)),r||[]},dequeue:function(e,t){t=t||\"fx\";var n=S.queue(e,t),r=n.length,i=n.shift(),o=S._queueHooks(e,t);\"inprogress\"===i&&(i=n.shift(),r--),i&&(\"fx\"===t&&n.unshift(\"inprogress\"),delete o.stop,i.call(e,function(){S.dequeue(e,t)},o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+\"queueHooks\";return Y.get(e,n)||Y.access(e,n,{empty:S.Callbacks(\"once memory\").add(function(){Y.remove(e,[t+\"queue\",n])})})}}),S.fn.extend({queue:function(t,n){var e=2;return\"string\"!=typeof t&&(n=t,t=\"fx\",e--),arguments.length<e?S.queue(this[0],t):void 0===n?this:this.each(function(){var e=S.queue(this,t,n);S._queueHooks(this,t),\"fx\"===t&&\"inprogress\"!==e[0]&&S.dequeue(this,t)})},dequeue:function(e){return this.each(function(){S.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||\"fx\",[])},promise:function(e,t){var n,r=1,i=S.Deferred(),o=this,a=this.length,s=function(){--r||i.resolveWith(o,[o])};\"string\"!=typeof e&&(t=e,e=void 0),e=e||\"fx\";while(a--)(n=Y.get(o[a],e+\"queueHooks\"))&&n.empty&&(r++,n.empty.add(s));return s(),i.promise(t)}});var ee=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,te=new RegExp(\"^(?:([+-])=|)(\"+ee+\")([a-z%]*)$\",\"i\"),ne=[\"Top\",\"Right\",\"Bottom\",\"Left\"],re=E.documentElement,ie=function(e){return S.contains(e.ownerDocument,e)},oe={composed:!0};re.getRootNode&&(ie=function(e){return S.contains(e.ownerDocument,e)||e.getRootNode(oe)===e.ownerDocument});var ae=function(e,t){return\"none\"===(e=t||e).style.display||\"\"===e.style.display&&ie(e)&&\"none\"===S.css(e,\"display\")};function se(e,t,n,r){var i,o,a=20,s=r?function(){return r.cur()}:function(){return S.css(e,t,\"\")},u=s(),l=n&&n[3]||(S.cssNumber[t]?\"\":\"px\"),c=e.nodeType&&(S.cssNumber[t]||\"px\"!==l&&+u)&&te.exec(S.css(e,t));if(c&&c[3]!==l){u/=2,l=l||c[3],c=+u||1;while(a--)S.style(e,t,c+l),(1-o)*(1-(o=s()/u||.5))<=0&&(a=0),c/=o;c*=2,S.style(e,t,c+l),n=n||[]}return n&&(c=+c||+u||0,i=n[1]?c+(n[1]+1)*n[2]:+n[2],r&&(r.unit=l,r.start=c,r.end=i)),i}var ue={};function le(e,t){for(var n,r,i,o,a,s,u,l=[],c=0,f=e.length;c<f;c++)(r=e[c]).style&&(n=r.style.display,t?(\"none\"===n&&(l[c]=Y.get(r,\"display\")||null,l[c]||(r.style.display=\"\")),\"\"===r.style.display&&ae(r)&&(l[c]=(u=a=o=void 0,a=(i=r).ownerDocument,s=i.nodeName,(u=ue[s])||(o=a.body.appendChild(a.createElement(s)),u=S.css(o,\"display\"),o.parentNode.removeChild(o),\"none\"===u&&(u=\"block\"),ue[s]=u)))):\"none\"!==n&&(l[c]=\"none\",Y.set(r,\"display\",n)));for(c=0;c<f;c++)null!=l[c]&&(e[c].style.display=l[c]);return e}S.fn.extend({show:function(){return le(this,!0)},hide:function(){return le(this)},toggle:function(e){return\"boolean\"==typeof e?e?this.show():this.hide():this.each(function(){ae(this)?S(this).show():S(this).hide()})}});var ce,fe,pe=/^(?:checkbox|radio)$/i,de=/<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i,he=/^$|^module$|\\/(?:java|ecma)script/i;ce=E.createDocumentFragment().appendChild(E.createElement(\"div\")),(fe=E.createElement(\"input\")).setAttribute(\"type\",\"radio\"),fe.setAttribute(\"checked\",\"checked\"),fe.setAttribute(\"name\",\"t\"),ce.appendChild(fe),y.checkClone=ce.cloneNode(!0).cloneNode(!0).lastChild.checked,ce.innerHTML=\"<textarea>x</textarea>\",y.noCloneChecked=!!ce.cloneNode(!0).lastChild.defaultValue,ce.innerHTML=\"<option></option>\",y.option=!!ce.lastChild;var ge={thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};function ve(e,t){var n;return n=\"undefined\"!=typeof e.getElementsByTagName?e.getElementsByTagName(t||\"*\"):\"undefined\"!=typeof e.querySelectorAll?e.querySelectorAll(t||\"*\"):[],void 0===t||t&&A(e,t)?S.merge([e],n):n}function ye(e,t){for(var n=0,r=e.length;n<r;n++)Y.set(e[n],\"globalEval\",!t||Y.get(t[n],\"globalEval\"))}ge.tbody=ge.tfoot=ge.colgroup=ge.caption=ge.thead,ge.th=ge.td,y.option||(ge.optgroup=ge.option=[1,\"<select multiple='multiple'>\",\"</select>\"]);var me=/<|&#?\\w+;/;function xe(e,t,n,r,i){for(var o,a,s,u,l,c,f=t.createDocumentFragment(),p=[],d=0,h=e.length;d<h;d++)if((o=e[d])||0===o)if(\"object\"===w(o))S.merge(p,o.nodeType?[o]:o);else if(me.test(o)){a=a||f.appendChild(t.createElement(\"div\")),s=(de.exec(o)||[\"\",\"\"])[1].toLowerCase(),u=ge[s]||ge._default,a.innerHTML=u[1]+S.htmlPrefilter(o)+u[2],c=u[0];while(c--)a=a.lastChild;S.merge(p,a.childNodes),(a=f.firstChild).textContent=\"\"}else p.push(t.createTextNode(o));f.textContent=\"\",d=0;while(o=p[d++])if(r&&-1<S.inArray(o,r))i&&i.push(o);else if(l=ie(o),a=ve(f.appendChild(o),\"script\"),l&&ye(a),n){c=0;while(o=a[c++])he.test(o.type||\"\")&&n.push(o)}return f}var be=/^key/,we=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Te=/^([^.]*)(?:\\.(.+)|)/;function Ce(){return!0}function Ee(){return!1}function Se(e,t){return e===function(){try{return E.activeElement}catch(e){}}()==(\"focus\"===t)}function ke(e,t,n,r,i,o){var a,s;if(\"object\"==typeof t){for(s in\"string\"!=typeof n&&(r=r||n,n=void 0),t)ke(e,s,n,r,t[s],o);return e}if(null==r&&null==i?(i=n,r=n=void 0):null==i&&(\"string\"==typeof n?(i=r,r=void 0):(i=r,r=n,n=void 0)),!1===i)i=Ee;else if(!i)return e;return 1===o&&(a=i,(i=function(e){return S().off(e),a.apply(this,arguments)}).guid=a.guid||(a.guid=S.guid++)),e.each(function(){S.event.add(this,t,i,r,n)})}function Ae(e,i,o){o?(Y.set(e,i,!1),S.event.add(e,i,{namespace:!1,handler:function(e){var t,n,r=Y.get(this,i);if(1&e.isTrigger&&this[i]){if(r.length)(S.event.special[i]||{}).delegateType&&e.stopPropagation();else if(r=s.call(arguments),Y.set(this,i,r),t=o(this,i),this[i](),r!==(n=Y.get(this,i))||t?Y.set(this,i,!1):n={},r!==n)return e.stopImmediatePropagation(),e.preventDefault(),n.value}else r.length&&(Y.set(this,i,{value:S.event.trigger(S.extend(r[0],S.Event.prototype),r.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===Y.get(e,i)&&S.event.add(e,i,Ce)}S.event={global:{},add:function(t,e,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=Y.get(t);if(V(t)){n.handler&&(n=(o=n).handler,i=o.selector),i&&S.find.matchesSelector(re,i),n.guid||(n.guid=S.guid++),(u=v.events)||(u=v.events=Object.create(null)),(a=v.handle)||(a=v.handle=function(e){return\"undefined\"!=typeof S&&S.event.triggered!==e.type?S.event.dispatch.apply(t,arguments):void 0}),l=(e=(e||\"\").match(P)||[\"\"]).length;while(l--)d=g=(s=Te.exec(e[l])||[])[1],h=(s[2]||\"\").split(\".\").sort(),d&&(f=S.event.special[d]||{},d=(i?f.delegateType:f.bindType)||d,f=S.event.special[d]||{},c=S.extend({type:d,origType:g,data:r,handler:n,guid:n.guid,selector:i,needsContext:i&&S.expr.match.needsContext.test(i),namespace:h.join(\".\")},o),(p=u[d])||((p=u[d]=[]).delegateCount=0,f.setup&&!1!==f.setup.call(t,r,h,a)||t.addEventListener&&t.addEventListener(d,a)),f.add&&(f.add.call(t,c),c.handler.guid||(c.handler.guid=n.guid)),i?p.splice(p.delegateCount++,0,c):p.push(c),S.event.global[d]=!0)}},remove:function(e,t,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=Y.hasData(e)&&Y.get(e);if(v&&(u=v.events)){l=(t=(t||\"\").match(P)||[\"\"]).length;while(l--)if(d=g=(s=Te.exec(t[l])||[])[1],h=(s[2]||\"\").split(\".\").sort(),d){f=S.event.special[d]||{},p=u[d=(r?f.delegateType:f.bindType)||d]||[],s=s[2]&&new RegExp(\"(^|\\\\.)\"+h.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),a=o=p.length;while(o--)c=p[o],!i&&g!==c.origType||n&&n.guid!==c.guid||s&&!s.test(c.namespace)||r&&r!==c.selector&&(\"**\"!==r||!c.selector)||(p.splice(o,1),c.selector&&p.delegateCount--,f.remove&&f.remove.call(e,c));a&&!p.length&&(f.teardown&&!1!==f.teardown.call(e,h,v.handle)||S.removeEvent(e,d,v.handle),delete u[d])}else for(d in u)S.event.remove(e,d+t[l],n,r,!0);S.isEmptyObject(u)&&Y.remove(e,\"handle events\")}},dispatch:function(e){var t,n,r,i,o,a,s=new Array(arguments.length),u=S.event.fix(e),l=(Y.get(this,\"events\")||Object.create(null))[u.type]||[],c=S.event.special[u.type]||{};for(s[0]=u,t=1;t<arguments.length;t++)s[t]=arguments[t];if(u.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,u)){a=S.event.handlers.call(this,u,l),t=0;while((i=a[t++])&&!u.isPropagationStopped()){u.currentTarget=i.elem,n=0;while((o=i.handlers[n++])&&!u.isImmediatePropagationStopped())u.rnamespace&&!1!==o.namespace&&!u.rnamespace.test(o.namespace)||(u.handleObj=o,u.data=o.data,void 0!==(r=((S.event.special[o.origType]||{}).handle||o.handler).apply(i.elem,s))&&!1===(u.result=r)&&(u.preventDefault(),u.stopPropagation()))}return c.postDispatch&&c.postDispatch.call(this,u),u.result}},handlers:function(e,t){var n,r,i,o,a,s=[],u=t.delegateCount,l=e.target;if(u&&l.nodeType&&!(\"click\"===e.type&&1<=e.button))for(;l!==this;l=l.parentNode||this)if(1===l.nodeType&&(\"click\"!==e.type||!0!==l.disabled)){for(o=[],a={},n=0;n<u;n++)void 0===a[i=(r=t[n]).selector+\" \"]&&(a[i]=r.needsContext?-1<S(i,this).index(l):S.find(i,this,null,[l]).length),a[i]&&o.push(r);o.length&&s.push({elem:l,handlers:o})}return l=this,u<t.length&&s.push({elem:l,handlers:t.slice(u)}),s},addProp:function(t,e){Object.defineProperty(S.Event.prototype,t,{enumerable:!0,configurable:!0,get:m(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[S.expando]?e:new S.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return pe.test(t.type)&&t.click&&A(t,\"input\")&&Ae(t,\"click\",Ce),!1},trigger:function(e){var t=this||e;return pe.test(t.type)&&t.click&&A(t,\"input\")&&Ae(t,\"click\"),!0},_default:function(e){var t=e.target;return pe.test(t.type)&&t.click&&A(t,\"input\")&&Y.get(t,\"click\")||A(t,\"a\")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},S.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},S.Event=function(e,t){if(!(this instanceof S.Event))return new S.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?Ce:Ee,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&S.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[S.expando]=!0},S.Event.prototype={constructor:S.Event,isDefaultPrevented:Ee,isPropagationStopped:Ee,isImmediatePropagationStopped:Ee,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=Ce,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=Ce,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=Ce,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},S.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,\"char\":!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&be.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&we.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},S.event.addProp),S.each({focus:\"focusin\",blur:\"focusout\"},function(e,t){S.event.special[e]={setup:function(){return Ae(this,e,Se),!1},trigger:function(){return Ae(this,e),!0},delegateType:t}}),S.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(e,i){S.event.special[e]={delegateType:i,bindType:i,handle:function(e){var t,n=e.relatedTarget,r=e.handleObj;return n&&(n===this||S.contains(this,n))||(e.type=r.origType,t=r.handler.apply(this,arguments),e.type=i),t}}}),S.fn.extend({on:function(e,t,n,r){return ke(this,e,t,n,r)},one:function(e,t,n,r){return ke(this,e,t,n,r,1)},off:function(e,t,n){var r,i;if(e&&e.preventDefault&&e.handleObj)return r=e.handleObj,S(e.delegateTarget).off(r.namespace?r.origType+\".\"+r.namespace:r.origType,r.selector,r.handler),this;if(\"object\"==typeof e){for(i in e)this.off(i,t,e[i]);return this}return!1!==t&&\"function\"!=typeof t||(n=t,t=void 0),!1===n&&(n=Ee),this.each(function(){S.event.remove(this,e,n,t)})}});var Ne=/<script|<style|<link/i,De=/checked\\s*(?:[^=]|=\\s*.checked.)/i,je=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;function qe(e,t){return A(e,\"table\")&&A(11!==t.nodeType?t:t.firstChild,\"tr\")&&S(e).children(\"tbody\")[0]||e}function Le(e){return e.type=(null!==e.getAttribute(\"type\"))+\"/\"+e.type,e}function He(e){return\"true/\"===(e.type||\"\").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute(\"type\"),e}function Oe(e,t){var n,r,i,o,a,s;if(1===t.nodeType){if(Y.hasData(e)&&(s=Y.get(e).events))for(i in Y.remove(t,\"handle events\"),s)for(n=0,r=s[i].length;n<r;n++)S.event.add(t,i,s[i][n]);Q.hasData(e)&&(o=Q.access(e),a=S.extend({},o),Q.set(t,a))}}function Pe(n,r,i,o){r=g(r);var e,t,a,s,u,l,c=0,f=n.length,p=f-1,d=r[0],h=m(d);if(h||1<f&&\"string\"==typeof d&&!y.checkClone&&De.test(d))return n.each(function(e){var t=n.eq(e);h&&(r[0]=d.call(this,e,t.html())),Pe(t,r,i,o)});if(f&&(t=(e=xe(r,n[0].ownerDocument,!1,n,o)).firstChild,1===e.childNodes.length&&(e=t),t||o)){for(s=(a=S.map(ve(e,\"script\"),Le)).length;c<f;c++)u=e,c!==p&&(u=S.clone(u,!0,!0),s&&S.merge(a,ve(u,\"script\"))),i.call(n[c],u,c);if(s)for(l=a[a.length-1].ownerDocument,S.map(a,He),c=0;c<s;c++)u=a[c],he.test(u.type||\"\")&&!Y.access(u,\"globalEval\")&&S.contains(l,u)&&(u.src&&\"module\"!==(u.type||\"\").toLowerCase()?S._evalUrl&&!u.noModule&&S._evalUrl(u.src,{nonce:u.nonce||u.getAttribute(\"nonce\")},l):b(u.textContent.replace(je,\"\"),u,l))}return n}function Re(e,t,n){for(var r,i=t?S.filter(t,e):e,o=0;null!=(r=i[o]);o++)n||1!==r.nodeType||S.cleanData(ve(r)),r.parentNode&&(n&&ie(r)&&ye(ve(r,\"script\")),r.parentNode.removeChild(r));return e}S.extend({htmlPrefilter:function(e){return e},clone:function(e,t,n){var r,i,o,a,s,u,l,c=e.cloneNode(!0),f=ie(e);if(!(y.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||S.isXMLDoc(e)))for(a=ve(c),r=0,i=(o=ve(e)).length;r<i;r++)s=o[r],u=a[r],void 0,\"input\"===(l=u.nodeName.toLowerCase())&&pe.test(s.type)?u.checked=s.checked:\"input\"!==l&&\"textarea\"!==l||(u.defaultValue=s.defaultValue);if(t)if(n)for(o=o||ve(e),a=a||ve(c),r=0,i=o.length;r<i;r++)Oe(o[r],a[r]);else Oe(e,c);return 0<(a=ve(c,\"script\")).length&&ye(a,!f&&ve(e,\"script\")),c},cleanData:function(e){for(var t,n,r,i=S.event.special,o=0;void 0!==(n=e[o]);o++)if(V(n)){if(t=n[Y.expando]){if(t.events)for(r in t.events)i[r]?S.event.remove(n,r):S.removeEvent(n,r,t.handle);n[Y.expando]=void 0}n[Q.expando]&&(n[Q.expando]=void 0)}}}),S.fn.extend({detach:function(e){return Re(this,e,!0)},remove:function(e){return Re(this,e)},text:function(e){return $(this,function(e){return void 0===e?S.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return Pe(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||qe(this,e).appendChild(e)})},prepend:function(){return Pe(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=qe(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return Pe(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return Pe(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(S.cleanData(ve(e,!1)),e.textContent=\"\");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return S.clone(this,e,t)})},html:function(e){return $(this,function(e){var t=this[0]||{},n=0,r=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if(\"string\"==typeof e&&!Ne.test(e)&&!ge[(de.exec(e)||[\"\",\"\"])[1].toLowerCase()]){e=S.htmlPrefilter(e);try{for(;n<r;n++)1===(t=this[n]||{}).nodeType&&(S.cleanData(ve(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var n=[];return Pe(this,arguments,function(e){var t=this.parentNode;S.inArray(this,n)<0&&(S.cleanData(ve(this)),t&&t.replaceChild(e,this))},n)}}),S.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(e,a){S.fn[e]=function(e){for(var t,n=[],r=S(e),i=r.length-1,o=0;o<=i;o++)t=o===i?this:this.clone(!0),S(r[o])[a](t),u.apply(n,t.get());return this.pushStack(n)}});var Me=new RegExp(\"^(\"+ee+\")(?!px)[a-z%]+$\",\"i\"),Ie=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=C),t.getComputedStyle(e)},We=function(e,t,n){var r,i,o={};for(i in t)o[i]=e.style[i],e.style[i]=t[i];for(i in r=n.call(e),t)e.style[i]=o[i];return r},Fe=new RegExp(ne.join(\"|\"),\"i\");function Be(e,t,n){var r,i,o,a,s=e.style;return(n=n||Ie(e))&&(\"\"!==(a=n.getPropertyValue(t)||n[t])||ie(e)||(a=S.style(e,t)),!y.pixelBoxStyles()&&Me.test(a)&&Fe.test(t)&&(r=s.width,i=s.minWidth,o=s.maxWidth,s.minWidth=s.maxWidth=s.width=a,a=n.width,s.width=r,s.minWidth=i,s.maxWidth=o)),void 0!==a?a+\"\":a}function $e(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}!function(){function e(){if(l){u.style.cssText=\"position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0\",l.style.cssText=\"position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%\",re.appendChild(u).appendChild(l);var e=C.getComputedStyle(l);n=\"1%\"!==e.top,s=12===t(e.marginLeft),l.style.right=\"60%\",o=36===t(e.right),r=36===t(e.width),l.style.position=\"absolute\",i=12===t(l.offsetWidth/3),re.removeChild(u),l=null}}function t(e){return Math.round(parseFloat(e))}var n,r,i,o,a,s,u=E.createElement(\"div\"),l=E.createElement(\"div\");l.style&&(l.style.backgroundClip=\"content-box\",l.cloneNode(!0).style.backgroundClip=\"\",y.clearCloneStyle=\"content-box\"===l.style.backgroundClip,S.extend(y,{boxSizingReliable:function(){return e(),r},pixelBoxStyles:function(){return e(),o},pixelPosition:function(){return e(),n},reliableMarginLeft:function(){return e(),s},scrollboxSize:function(){return e(),i},reliableTrDimensions:function(){var e,t,n,r;return null==a&&(e=E.createElement(\"table\"),t=E.createElement(\"tr\"),n=E.createElement(\"div\"),e.style.cssText=\"position:absolute;left:-11111px\",t.style.height=\"1px\",n.style.height=\"9px\",re.appendChild(e).appendChild(t).appendChild(n),r=C.getComputedStyle(t),a=3<parseInt(r.height),re.removeChild(e)),a}}))}();var _e=[\"Webkit\",\"Moz\",\"ms\"],ze=E.createElement(\"div\").style,Ue={};function Xe(e){var t=S.cssProps[e]||Ue[e];return t||(e in ze?e:Ue[e]=function(e){var t=e[0].toUpperCase()+e.slice(1),n=_e.length;while(n--)if((e=_e[n]+t)in ze)return e}(e)||e)}var Ve=/^(none|table(?!-c[ea]).+)/,Ge=/^--/,Ye={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Qe={letterSpacing:\"0\",fontWeight:\"400\"};function Je(e,t,n){var r=te.exec(t);return r?Math.max(0,r[2]-(n||0))+(r[3]||\"px\"):t}function Ke(e,t,n,r,i,o){var a=\"width\"===t?1:0,s=0,u=0;if(n===(r?\"border\":\"content\"))return 0;for(;a<4;a+=2)\"margin\"===n&&(u+=S.css(e,n+ne[a],!0,i)),r?(\"content\"===n&&(u-=S.css(e,\"padding\"+ne[a],!0,i)),\"margin\"!==n&&(u-=S.css(e,\"border\"+ne[a]+\"Width\",!0,i))):(u+=S.css(e,\"padding\"+ne[a],!0,i),\"padding\"!==n?u+=S.css(e,\"border\"+ne[a]+\"Width\",!0,i):s+=S.css(e,\"border\"+ne[a]+\"Width\",!0,i));return!r&&0<=o&&(u+=Math.max(0,Math.ceil(e[\"offset\"+t[0].toUpperCase()+t.slice(1)]-o-u-s-.5))||0),u}function Ze(e,t,n){var r=Ie(e),i=(!y.boxSizingReliable()||n)&&\"border-box\"===S.css(e,\"boxSizing\",!1,r),o=i,a=Be(e,t,r),s=\"offset\"+t[0].toUpperCase()+t.slice(1);if(Me.test(a)){if(!n)return a;a=\"auto\"}return(!y.boxSizingReliable()&&i||!y.reliableTrDimensions()&&A(e,\"tr\")||\"auto\"===a||!parseFloat(a)&&\"inline\"===S.css(e,\"display\",!1,r))&&e.getClientRects().length&&(i=\"border-box\"===S.css(e,\"boxSizing\",!1,r),(o=s in e)&&(a=e[s])),(a=parseFloat(a)||0)+Ke(e,t,n||(i?\"border\":\"content\"),o,r,a)+\"px\"}function et(e,t,n,r,i){return new et.prototype.init(e,t,n,r,i)}S.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Be(e,\"opacity\");return\"\"===n?\"1\":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,n,r){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,o,a,s=X(t),u=Ge.test(t),l=e.style;if(u||(t=Xe(s)),a=S.cssHooks[t]||S.cssHooks[s],void 0===n)return a&&\"get\"in a&&void 0!==(i=a.get(e,!1,r))?i:l[t];\"string\"===(o=typeof n)&&(i=te.exec(n))&&i[1]&&(n=se(e,t,i),o=\"number\"),null!=n&&n==n&&(\"number\"!==o||u||(n+=i&&i[3]||(S.cssNumber[s]?\"\":\"px\")),y.clearCloneStyle||\"\"!==n||0!==t.indexOf(\"background\")||(l[t]=\"inherit\"),a&&\"set\"in a&&void 0===(n=a.set(e,n,r))||(u?l.setProperty(t,n):l[t]=n))}},css:function(e,t,n,r){var i,o,a,s=X(t);return Ge.test(t)||(t=Xe(s)),(a=S.cssHooks[t]||S.cssHooks[s])&&\"get\"in a&&(i=a.get(e,!0,n)),void 0===i&&(i=Be(e,t,r)),\"normal\"===i&&t in Qe&&(i=Qe[t]),\"\"===n||n?(o=parseFloat(i),!0===n||isFinite(o)?o||0:i):i}}),S.each([\"height\",\"width\"],function(e,u){S.cssHooks[u]={get:function(e,t,n){if(t)return!Ve.test(S.css(e,\"display\"))||e.getClientRects().length&&e.getBoundingClientRect().width?Ze(e,u,n):We(e,Ye,function(){return Ze(e,u,n)})},set:function(e,t,n){var r,i=Ie(e),o=!y.scrollboxSize()&&\"absolute\"===i.position,a=(o||n)&&\"border-box\"===S.css(e,\"boxSizing\",!1,i),s=n?Ke(e,u,n,a,i):0;return a&&o&&(s-=Math.ceil(e[\"offset\"+u[0].toUpperCase()+u.slice(1)]-parseFloat(i[u])-Ke(e,u,\"border\",!1,i)-.5)),s&&(r=te.exec(t))&&\"px\"!==(r[3]||\"px\")&&(e.style[u]=t,t=S.css(e,u)),Je(0,t,s)}}}),S.cssHooks.marginLeft=$e(y.reliableMarginLeft,function(e,t){if(t)return(parseFloat(Be(e,\"marginLeft\"))||e.getBoundingClientRect().left-We(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+\"px\"}),S.each({margin:\"\",padding:\"\",border:\"Width\"},function(i,o){S.cssHooks[i+o]={expand:function(e){for(var t=0,n={},r=\"string\"==typeof e?e.split(\" \"):[e];t<4;t++)n[i+ne[t]+o]=r[t]||r[t-2]||r[0];return n}},\"margin\"!==i&&(S.cssHooks[i+o].set=Je)}),S.fn.extend({css:function(e,t){return $(this,function(e,t,n){var r,i,o={},a=0;if(Array.isArray(t)){for(r=Ie(e),i=t.length;a<i;a++)o[t[a]]=S.css(e,t[a],!1,r);return o}return void 0!==n?S.style(e,t,n):S.css(e,t)},e,t,1<arguments.length)}}),((S.Tween=et).prototype={constructor:et,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||S.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(S.cssNumber[n]?\"\":\"px\")},cur:function(){var e=et.propHooks[this.prop];return e&&e.get?e.get(this):et.propHooks._default.get(this)},run:function(e){var t,n=et.propHooks[this.prop];return this.options.duration?this.pos=t=S.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):et.propHooks._default.set(this),this}}).init.prototype=et.prototype,(et.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=S.css(e.elem,e.prop,\"\"))&&\"auto\"!==t?t:0},set:function(e){S.fx.step[e.prop]?S.fx.step[e.prop](e):1!==e.elem.nodeType||!S.cssHooks[e.prop]&&null==e.elem.style[Xe(e.prop)]?e.elem[e.prop]=e.now:S.style(e.elem,e.prop,e.now+e.unit)}}}).scrollTop=et.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},S.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:\"swing\"},S.fx=et.prototype.init,S.fx.step={};var tt,nt,rt,it,ot=/^(?:toggle|show|hide)$/,at=/queueHooks$/;function st(){nt&&(!1===E.hidden&&C.requestAnimationFrame?C.requestAnimationFrame(st):C.setTimeout(st,S.fx.interval),S.fx.tick())}function ut(){return C.setTimeout(function(){tt=void 0}),tt=Date.now()}function lt(e,t){var n,r=0,i={height:e};for(t=t?1:0;r<4;r+=2-t)i[\"margin\"+(n=ne[r])]=i[\"padding\"+n]=e;return t&&(i.opacity=i.width=e),i}function ct(e,t,n){for(var r,i=(ft.tweeners[t]||[]).concat(ft.tweeners[\"*\"]),o=0,a=i.length;o<a;o++)if(r=i[o].call(n,t,e))return r}function ft(o,e,t){var n,a,r=0,i=ft.prefilters.length,s=S.Deferred().always(function(){delete u.elem}),u=function(){if(a)return!1;for(var e=tt||ut(),t=Math.max(0,l.startTime+l.duration-e),n=1-(t/l.duration||0),r=0,i=l.tweens.length;r<i;r++)l.tweens[r].run(n);return s.notifyWith(o,[l,n,t]),n<1&&i?t:(i||s.notifyWith(o,[l,1,0]),s.resolveWith(o,[l]),!1)},l=s.promise({elem:o,props:S.extend({},e),opts:S.extend(!0,{specialEasing:{},easing:S.easing._default},t),originalProperties:e,originalOptions:t,startTime:tt||ut(),duration:t.duration,tweens:[],createTween:function(e,t){var n=S.Tween(o,l.opts,e,t,l.opts.specialEasing[e]||l.opts.easing);return l.tweens.push(n),n},stop:function(e){var t=0,n=e?l.tweens.length:0;if(a)return this;for(a=!0;t<n;t++)l.tweens[t].run(1);return e?(s.notifyWith(o,[l,1,0]),s.resolveWith(o,[l,e])):s.rejectWith(o,[l,e]),this}}),c=l.props;for(!function(e,t){var n,r,i,o,a;for(n in e)if(i=t[r=X(n)],o=e[n],Array.isArray(o)&&(i=o[1],o=e[n]=o[0]),n!==r&&(e[r]=o,delete e[n]),(a=S.cssHooks[r])&&\"expand\"in a)for(n in o=a.expand(o),delete e[r],o)n in e||(e[n]=o[n],t[n]=i);else t[r]=i}(c,l.opts.specialEasing);r<i;r++)if(n=ft.prefilters[r].call(l,o,c,l.opts))return m(n.stop)&&(S._queueHooks(l.elem,l.opts.queue).stop=n.stop.bind(n)),n;return S.map(c,ct,l),m(l.opts.start)&&l.opts.start.call(o,l),l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always),S.fx.timer(S.extend(u,{elem:o,anim:l,queue:l.opts.queue})),l}S.Animation=S.extend(ft,{tweeners:{\"*\":[function(e,t){var n=this.createTween(e,t);return se(n.elem,e,te.exec(t),n),n}]},tweener:function(e,t){m(e)?(t=e,e=[\"*\"]):e=e.match(P);for(var n,r=0,i=e.length;r<i;r++)n=e[r],ft.tweeners[n]=ft.tweeners[n]||[],ft.tweeners[n].unshift(t)},prefilters:[function(e,t,n){var r,i,o,a,s,u,l,c,f=\"width\"in t||\"height\"in t,p=this,d={},h=e.style,g=e.nodeType&&ae(e),v=Y.get(e,\"fxshow\");for(r in n.queue||(null==(a=S._queueHooks(e,\"fx\")).unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,p.always(function(){p.always(function(){a.unqueued--,S.queue(e,\"fx\").length||a.empty.fire()})})),t)if(i=t[r],ot.test(i)){if(delete t[r],o=o||\"toggle\"===i,i===(g?\"hide\":\"show\")){if(\"show\"!==i||!v||void 0===v[r])continue;g=!0}d[r]=v&&v[r]||S.style(e,r)}if((u=!S.isEmptyObject(t))||!S.isEmptyObject(d))for(r in f&&1===e.nodeType&&(n.overflow=[h.overflow,h.overflowX,h.overflowY],null==(l=v&&v.display)&&(l=Y.get(e,\"display\")),\"none\"===(c=S.css(e,\"display\"))&&(l?c=l:(le([e],!0),l=e.style.display||l,c=S.css(e,\"display\"),le([e]))),(\"inline\"===c||\"inline-block\"===c&&null!=l)&&\"none\"===S.css(e,\"float\")&&(u||(p.done(function(){h.display=l}),null==l&&(c=h.display,l=\"none\"===c?\"\":c)),h.display=\"inline-block\")),n.overflow&&(h.overflow=\"hidden\",p.always(function(){h.overflow=n.overflow[0],h.overflowX=n.overflow[1],h.overflowY=n.overflow[2]})),u=!1,d)u||(v?\"hidden\"in v&&(g=v.hidden):v=Y.access(e,\"fxshow\",{display:l}),o&&(v.hidden=!g),g&&le([e],!0),p.done(function(){for(r in g||le([e]),Y.remove(e,\"fxshow\"),d)S.style(e,r,d[r])})),u=ct(g?v[r]:0,r,p),r in v||(v[r]=u.start,g&&(u.end=u.start,u.start=0))}],prefilter:function(e,t){t?ft.prefilters.unshift(e):ft.prefilters.push(e)}}),S.speed=function(e,t,n){var r=e&&\"object\"==typeof e?S.extend({},e):{complete:n||!n&&t||m(e)&&e,duration:e,easing:n&&t||t&&!m(t)&&t};return S.fx.off?r.duration=0:\"number\"!=typeof r.duration&&(r.duration in S.fx.speeds?r.duration=S.fx.speeds[r.duration]:r.duration=S.fx.speeds._default),null!=r.queue&&!0!==r.queue||(r.queue=\"fx\"),r.old=r.complete,r.complete=function(){m(r.old)&&r.old.call(this),r.queue&&S.dequeue(this,r.queue)},r},S.fn.extend({fadeTo:function(e,t,n,r){return this.filter(ae).css(\"opacity\",0).show().end().animate({opacity:t},e,n,r)},animate:function(t,e,n,r){var i=S.isEmptyObject(t),o=S.speed(e,n,r),a=function(){var e=ft(this,S.extend({},t),o);(i||Y.get(this,\"finish\"))&&e.stop(!0)};return a.finish=a,i||!1===o.queue?this.each(a):this.queue(o.queue,a)},stop:function(i,e,o){var a=function(e){var t=e.stop;delete e.stop,t(o)};return\"string\"!=typeof i&&(o=e,e=i,i=void 0),e&&this.queue(i||\"fx\",[]),this.each(function(){var e=!0,t=null!=i&&i+\"queueHooks\",n=S.timers,r=Y.get(this);if(t)r[t]&&r[t].stop&&a(r[t]);else for(t in r)r[t]&&r[t].stop&&at.test(t)&&a(r[t]);for(t=n.length;t--;)n[t].elem!==this||null!=i&&n[t].queue!==i||(n[t].anim.stop(o),e=!1,n.splice(t,1));!e&&o||S.dequeue(this,i)})},finish:function(a){return!1!==a&&(a=a||\"fx\"),this.each(function(){var e,t=Y.get(this),n=t[a+\"queue\"],r=t[a+\"queueHooks\"],i=S.timers,o=n?n.length:0;for(t.finish=!0,S.queue(this,a,[]),r&&r.stop&&r.stop.call(this,!0),e=i.length;e--;)i[e].elem===this&&i[e].queue===a&&(i[e].anim.stop(!0),i.splice(e,1));for(e=0;e<o;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete t.finish})}}),S.each([\"toggle\",\"show\",\"hide\"],function(e,r){var i=S.fn[r];S.fn[r]=function(e,t,n){return null==e||\"boolean\"==typeof e?i.apply(this,arguments):this.animate(lt(r,!0),e,t,n)}}),S.each({slideDown:lt(\"show\"),slideUp:lt(\"hide\"),slideToggle:lt(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(e,r){S.fn[e]=function(e,t,n){return this.animate(r,e,t,n)}}),S.timers=[],S.fx.tick=function(){var e,t=0,n=S.timers;for(tt=Date.now();t<n.length;t++)(e=n[t])()||n[t]!==e||n.splice(t--,1);n.length||S.fx.stop(),tt=void 0},S.fx.timer=function(e){S.timers.push(e),S.fx.start()},S.fx.interval=13,S.fx.start=function(){nt||(nt=!0,st())},S.fx.stop=function(){nt=null},S.fx.speeds={slow:600,fast:200,_default:400},S.fn.delay=function(r,e){return r=S.fx&&S.fx.speeds[r]||r,e=e||\"fx\",this.queue(e,function(e,t){var n=C.setTimeout(e,r);t.stop=function(){C.clearTimeout(n)}})},rt=E.createElement(\"input\"),it=E.createElement(\"select\").appendChild(E.createElement(\"option\")),rt.type=\"checkbox\",y.checkOn=\"\"!==rt.value,y.optSelected=it.selected,(rt=E.createElement(\"input\")).value=\"t\",rt.type=\"radio\",y.radioValue=\"t\"===rt.value;var pt,dt=S.expr.attrHandle;S.fn.extend({attr:function(e,t){return $(this,S.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){S.removeAttr(this,e)})}}),S.extend({attr:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return\"undefined\"==typeof e.getAttribute?S.prop(e,t,n):(1===o&&S.isXMLDoc(e)||(i=S.attrHooks[t.toLowerCase()]||(S.expr.match.bool.test(t)?pt:void 0)),void 0!==n?null===n?void S.removeAttr(e,t):i&&\"set\"in i&&void 0!==(r=i.set(e,n,t))?r:(e.setAttribute(t,n+\"\"),n):i&&\"get\"in i&&null!==(r=i.get(e,t))?r:null==(r=S.find.attr(e,t))?void 0:r)},attrHooks:{type:{set:function(e,t){if(!y.radioValue&&\"radio\"===t&&A(e,\"input\")){var n=e.value;return e.setAttribute(\"type\",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,r=0,i=t&&t.match(P);if(i&&1===e.nodeType)while(n=i[r++])e.removeAttribute(n)}}),pt={set:function(e,t,n){return!1===t?S.removeAttr(e,n):e.setAttribute(n,n),n}},S.each(S.expr.match.bool.source.match(/\\w+/g),function(e,t){var a=dt[t]||S.find.attr;dt[t]=function(e,t,n){var r,i,o=t.toLowerCase();return n||(i=dt[o],dt[o]=r,r=null!=a(e,t,n)?o:null,dt[o]=i),r}});var ht=/^(?:input|select|textarea|button)$/i,gt=/^(?:a|area)$/i;function vt(e){return(e.match(P)||[]).join(\" \")}function yt(e){return e.getAttribute&&e.getAttribute(\"class\")||\"\"}function mt(e){return Array.isArray(e)?e:\"string\"==typeof e&&e.match(P)||[]}S.fn.extend({prop:function(e,t){return $(this,S.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[S.propFix[e]||e]})}}),S.extend({prop:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&S.isXMLDoc(e)||(t=S.propFix[t]||t,i=S.propHooks[t]),void 0!==n?i&&\"set\"in i&&void 0!==(r=i.set(e,n,t))?r:e[t]=n:i&&\"get\"in i&&null!==(r=i.get(e,t))?r:e[t]},propHooks:{tabIndex:{get:function(e){var t=S.find.attr(e,\"tabindex\");return t?parseInt(t,10):ht.test(e.nodeName)||gt.test(e.nodeName)&&e.href?0:-1}}},propFix:{\"for\":\"htmlFor\",\"class\":\"className\"}}),y.optSelected||(S.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),S.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){S.propFix[this.toLowerCase()]=this}),S.fn.extend({addClass:function(t){var e,n,r,i,o,a,s,u=0;if(m(t))return this.each(function(e){S(this).addClass(t.call(this,e,yt(this)))});if((e=mt(t)).length)while(n=this[u++])if(i=yt(n),r=1===n.nodeType&&\" \"+vt(i)+\" \"){a=0;while(o=e[a++])r.indexOf(\" \"+o+\" \")<0&&(r+=o+\" \");i!==(s=vt(r))&&n.setAttribute(\"class\",s)}return this},removeClass:function(t){var e,n,r,i,o,a,s,u=0;if(m(t))return this.each(function(e){S(this).removeClass(t.call(this,e,yt(this)))});if(!arguments.length)return this.attr(\"class\",\"\");if((e=mt(t)).length)while(n=this[u++])if(i=yt(n),r=1===n.nodeType&&\" \"+vt(i)+\" \"){a=0;while(o=e[a++])while(-1<r.indexOf(\" \"+o+\" \"))r=r.replace(\" \"+o+\" \",\" \");i!==(s=vt(r))&&n.setAttribute(\"class\",s)}return this},toggleClass:function(i,t){var o=typeof i,a=\"string\"===o||Array.isArray(i);return\"boolean\"==typeof t&&a?t?this.addClass(i):this.removeClass(i):m(i)?this.each(function(e){S(this).toggleClass(i.call(this,e,yt(this),t),t)}):this.each(function(){var e,t,n,r;if(a){t=0,n=S(this),r=mt(i);while(e=r[t++])n.hasClass(e)?n.removeClass(e):n.addClass(e)}else void 0!==i&&\"boolean\"!==o||((e=yt(this))&&Y.set(this,\"__className__\",e),this.setAttribute&&this.setAttribute(\"class\",e||!1===i?\"\":Y.get(this,\"__className__\")||\"\"))})},hasClass:function(e){var t,n,r=0;t=\" \"+e+\" \";while(n=this[r++])if(1===n.nodeType&&-1<(\" \"+vt(yt(n))+\" \").indexOf(t))return!0;return!1}});var xt=/\\r/g;S.fn.extend({val:function(n){var r,e,i,t=this[0];return arguments.length?(i=m(n),this.each(function(e){var t;1===this.nodeType&&(null==(t=i?n.call(this,e,S(this).val()):n)?t=\"\":\"number\"==typeof t?t+=\"\":Array.isArray(t)&&(t=S.map(t,function(e){return null==e?\"\":e+\"\"})),(r=S.valHooks[this.type]||S.valHooks[this.nodeName.toLowerCase()])&&\"set\"in r&&void 0!==r.set(this,t,\"value\")||(this.value=t))})):t?(r=S.valHooks[t.type]||S.valHooks[t.nodeName.toLowerCase()])&&\"get\"in r&&void 0!==(e=r.get(t,\"value\"))?e:\"string\"==typeof(e=t.value)?e.replace(xt,\"\"):null==e?\"\":e:void 0}}),S.extend({valHooks:{option:{get:function(e){var t=S.find.attr(e,\"value\");return null!=t?t:vt(S.text(e))}},select:{get:function(e){var t,n,r,i=e.options,o=e.selectedIndex,a=\"select-one\"===e.type,s=a?null:[],u=a?o+1:i.length;for(r=o<0?u:a?o:0;r<u;r++)if(((n=i[r]).selected||r===o)&&!n.disabled&&(!n.parentNode.disabled||!A(n.parentNode,\"optgroup\"))){if(t=S(n).val(),a)return t;s.push(t)}return s},set:function(e,t){var n,r,i=e.options,o=S.makeArray(t),a=i.length;while(a--)((r=i[a]).selected=-1<S.inArray(S.valHooks.option.get(r),o))&&(n=!0);return n||(e.selectedIndex=-1),o}}}}),S.each([\"radio\",\"checkbox\"],function(){S.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<S.inArray(S(e).val(),t)}},y.checkOn||(S.valHooks[this].get=function(e){return null===e.getAttribute(\"value\")?\"on\":e.value})}),y.focusin=\"onfocusin\"in C;var bt=/^(?:focusinfocus|focusoutblur)$/,wt=function(e){e.stopPropagation()};S.extend(S.event,{trigger:function(e,t,n,r){var i,o,a,s,u,l,c,f,p=[n||E],d=v.call(e,\"type\")?e.type:e,h=v.call(e,\"namespace\")?e.namespace.split(\".\"):[];if(o=f=a=n=n||E,3!==n.nodeType&&8!==n.nodeType&&!bt.test(d+S.event.triggered)&&(-1<d.indexOf(\".\")&&(d=(h=d.split(\".\")).shift(),h.sort()),u=d.indexOf(\":\")<0&&\"on\"+d,(e=e[S.expando]?e:new S.Event(d,\"object\"==typeof e&&e)).isTrigger=r?2:3,e.namespace=h.join(\".\"),e.rnamespace=e.namespace?new RegExp(\"(^|\\\\.)\"+h.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,e.result=void 0,e.target||(e.target=n),t=null==t?[e]:S.makeArray(t,[e]),c=S.event.special[d]||{},r||!c.trigger||!1!==c.trigger.apply(n,t))){if(!r&&!c.noBubble&&!x(n)){for(s=c.delegateType||d,bt.test(s+d)||(o=o.parentNode);o;o=o.parentNode)p.push(o),a=o;a===(n.ownerDocument||E)&&p.push(a.defaultView||a.parentWindow||C)}i=0;while((o=p[i++])&&!e.isPropagationStopped())f=o,e.type=1<i?s:c.bindType||d,(l=(Y.get(o,\"events\")||Object.create(null))[e.type]&&Y.get(o,\"handle\"))&&l.apply(o,t),(l=u&&o[u])&&l.apply&&V(o)&&(e.result=l.apply(o,t),!1===e.result&&e.preventDefault());return e.type=d,r||e.isDefaultPrevented()||c._default&&!1!==c._default.apply(p.pop(),t)||!V(n)||u&&m(n[d])&&!x(n)&&((a=n[u])&&(n[u]=null),S.event.triggered=d,e.isPropagationStopped()&&f.addEventListener(d,wt),n[d](),e.isPropagationStopped()&&f.removeEventListener(d,wt),S.event.triggered=void 0,a&&(n[u]=a)),e.result}},simulate:function(e,t,n){var r=S.extend(new S.Event,n,{type:e,isSimulated:!0});S.event.trigger(r,null,t)}}),S.fn.extend({trigger:function(e,t){return this.each(function(){S.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];if(n)return S.event.trigger(e,t,n,!0)}}),y.focusin||S.each({focus:\"focusin\",blur:\"focusout\"},function(n,r){var i=function(e){S.event.simulate(r,e.target,S.event.fix(e))};S.event.special[r]={setup:function(){var e=this.ownerDocument||this.document||this,t=Y.access(e,r);t||e.addEventListener(n,i,!0),Y.access(e,r,(t||0)+1)},teardown:function(){var e=this.ownerDocument||this.document||this,t=Y.access(e,r)-1;t?Y.access(e,r,t):(e.removeEventListener(n,i,!0),Y.remove(e,r))}}});var Tt=C.location,Ct={guid:Date.now()},Et=/\\?/;S.parseXML=function(e){var t;if(!e||\"string\"!=typeof e)return null;try{t=(new C.DOMParser).parseFromString(e,\"text/xml\")}catch(e){t=void 0}return t&&!t.getElementsByTagName(\"parsererror\").length||S.error(\"Invalid XML: \"+e),t};var St=/\\[\\]$/,kt=/\\r?\\n/g,At=/^(?:submit|button|image|reset|file)$/i,Nt=/^(?:input|select|textarea|keygen)/i;function Dt(n,e,r,i){var t;if(Array.isArray(e))S.each(e,function(e,t){r||St.test(n)?i(n,t):Dt(n+\"[\"+(\"object\"==typeof t&&null!=t?e:\"\")+\"]\",t,r,i)});else if(r||\"object\"!==w(e))i(n,e);else for(t in e)Dt(n+\"[\"+t+\"]\",e[t],r,i)}S.param=function(e,t){var n,r=[],i=function(e,t){var n=m(t)?t():t;r[r.length]=encodeURIComponent(e)+\"=\"+encodeURIComponent(null==n?\"\":n)};if(null==e)return\"\";if(Array.isArray(e)||e.jquery&&!S.isPlainObject(e))S.each(e,function(){i(this.name,this.value)});else for(n in e)Dt(n,e[n],t,i);return r.join(\"&\")},S.fn.extend({serialize:function(){return S.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=S.prop(this,\"elements\");return e?S.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!S(this).is(\":disabled\")&&Nt.test(this.nodeName)&&!At.test(e)&&(this.checked||!pe.test(e))}).map(function(e,t){var n=S(this).val();return null==n?null:Array.isArray(n)?S.map(n,function(e){return{name:t.name,value:e.replace(kt,\"\\r\\n\")}}):{name:t.name,value:n.replace(kt,\"\\r\\n\")}}).get()}});var jt=/%20/g,qt=/#.*$/,Lt=/([?&])_=[^&]*/,Ht=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,Ot=/^(?:GET|HEAD)$/,Pt=/^\\/\\//,Rt={},Mt={},It=\"*/\".concat(\"*\"),Wt=E.createElement(\"a\");function Ft(o){return function(e,t){\"string\"!=typeof e&&(t=e,e=\"*\");var n,r=0,i=e.toLowerCase().match(P)||[];if(m(t))while(n=i[r++])\"+\"===n[0]?(n=n.slice(1)||\"*\",(o[n]=o[n]||[]).unshift(t)):(o[n]=o[n]||[]).push(t)}}function Bt(t,i,o,a){var s={},u=t===Mt;function l(e){var r;return s[e]=!0,S.each(t[e]||[],function(e,t){var n=t(i,o,a);return\"string\"!=typeof n||u||s[n]?u?!(r=n):void 0:(i.dataTypes.unshift(n),l(n),!1)}),r}return l(i.dataTypes[0])||!s[\"*\"]&&l(\"*\")}function $t(e,t){var n,r,i=S.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((i[n]?e:r||(r={}))[n]=t[n]);return r&&S.extend(!0,e,r),e}Wt.href=Tt.href,S.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Tt.href,type:\"GET\",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Tt.protocol),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":It,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/\\bxml\\b/,html:/\\bhtml/,json:/\\bjson\\b/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":JSON.parse,\"text xml\":S.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?$t($t(e,S.ajaxSettings),t):$t(S.ajaxSettings,e)},ajaxPrefilter:Ft(Rt),ajaxTransport:Ft(Mt),ajax:function(e,t){\"object\"==typeof e&&(t=e,e=void 0),t=t||{};var c,f,p,n,d,r,h,g,i,o,v=S.ajaxSetup({},t),y=v.context||v,m=v.context&&(y.nodeType||y.jquery)?S(y):S.event,x=S.Deferred(),b=S.Callbacks(\"once memory\"),w=v.statusCode||{},a={},s={},u=\"canceled\",T={readyState:0,getResponseHeader:function(e){var t;if(h){if(!n){n={};while(t=Ht.exec(p))n[t[1].toLowerCase()+\" \"]=(n[t[1].toLowerCase()+\" \"]||[]).concat(t[2])}t=n[e.toLowerCase()+\" \"]}return null==t?null:t.join(\", \")},getAllResponseHeaders:function(){return h?p:null},setRequestHeader:function(e,t){return null==h&&(e=s[e.toLowerCase()]=s[e.toLowerCase()]||e,a[e]=t),this},overrideMimeType:function(e){return null==h&&(v.mimeType=e),this},statusCode:function(e){var t;if(e)if(h)T.always(e[T.status]);else for(t in e)w[t]=[w[t],e[t]];return this},abort:function(e){var t=e||u;return c&&c.abort(t),l(0,t),this}};if(x.promise(T),v.url=((e||v.url||Tt.href)+\"\").replace(Pt,Tt.protocol+\"//\"),v.type=t.method||t.type||v.method||v.type,v.dataTypes=(v.dataType||\"*\").toLowerCase().match(P)||[\"\"],null==v.crossDomain){r=E.createElement(\"a\");try{r.href=v.url,r.href=r.href,v.crossDomain=Wt.protocol+\"//\"+Wt.host!=r.protocol+\"//\"+r.host}catch(e){v.crossDomain=!0}}if(v.data&&v.processData&&\"string\"!=typeof v.data&&(v.data=S.param(v.data,v.traditional)),Bt(Rt,v,t,T),h)return T;for(i in(g=S.event&&v.global)&&0==S.active++&&S.event.trigger(\"ajaxStart\"),v.type=v.type.toUpperCase(),v.hasContent=!Ot.test(v.type),f=v.url.replace(qt,\"\"),v.hasContent?v.data&&v.processData&&0===(v.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&(v.data=v.data.replace(jt,\"+\")):(o=v.url.slice(f.length),v.data&&(v.processData||\"string\"==typeof v.data)&&(f+=(Et.test(f)?\"&\":\"?\")+v.data,delete v.data),!1===v.cache&&(f=f.replace(Lt,\"$1\"),o=(Et.test(f)?\"&\":\"?\")+\"_=\"+Ct.guid+++o),v.url=f+o),v.ifModified&&(S.lastModified[f]&&T.setRequestHeader(\"If-Modified-Since\",S.lastModified[f]),S.etag[f]&&T.setRequestHeader(\"If-None-Match\",S.etag[f])),(v.data&&v.hasContent&&!1!==v.contentType||t.contentType)&&T.setRequestHeader(\"Content-Type\",v.contentType),T.setRequestHeader(\"Accept\",v.dataTypes[0]&&v.accepts[v.dataTypes[0]]?v.accepts[v.dataTypes[0]]+(\"*\"!==v.dataTypes[0]?\", \"+It+\"; q=0.01\":\"\"):v.accepts[\"*\"]),v.headers)T.setRequestHeader(i,v.headers[i]);if(v.beforeSend&&(!1===v.beforeSend.call(y,T,v)||h))return T.abort();if(u=\"abort\",b.add(v.complete),T.done(v.success),T.fail(v.error),c=Bt(Mt,v,t,T)){if(T.readyState=1,g&&m.trigger(\"ajaxSend\",[T,v]),h)return T;v.async&&0<v.timeout&&(d=C.setTimeout(function(){T.abort(\"timeout\")},v.timeout));try{h=!1,c.send(a,l)}catch(e){if(h)throw e;l(-1,e)}}else l(-1,\"No Transport\");function l(e,t,n,r){var i,o,a,s,u,l=t;h||(h=!0,d&&C.clearTimeout(d),c=void 0,p=r||\"\",T.readyState=0<e?4:0,i=200<=e&&e<300||304===e,n&&(s=function(e,t,n){var r,i,o,a,s=e.contents,u=e.dataTypes;while(\"*\"===u[0])u.shift(),void 0===r&&(r=e.mimeType||t.getResponseHeader(\"Content-Type\"));if(r)for(i in s)if(s[i]&&s[i].test(r)){u.unshift(i);break}if(u[0]in n)o=u[0];else{for(i in n){if(!u[0]||e.converters[i+\" \"+u[0]]){o=i;break}a||(a=i)}o=o||a}if(o)return o!==u[0]&&u.unshift(o),n[o]}(v,T,n)),!i&&-1<S.inArray(\"script\",v.dataTypes)&&(v.converters[\"text script\"]=function(){}),s=function(e,t,n,r){var i,o,a,s,u,l={},c=e.dataTypes.slice();if(c[1])for(a in e.converters)l[a.toLowerCase()]=e.converters[a];o=c.shift();while(o)if(e.responseFields[o]&&(n[e.responseFields[o]]=t),!u&&r&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),u=o,o=c.shift())if(\"*\"===o)o=u;else if(\"*\"!==u&&u!==o){if(!(a=l[u+\" \"+o]||l[\"* \"+o]))for(i in l)if((s=i.split(\" \"))[1]===o&&(a=l[u+\" \"+s[0]]||l[\"* \"+s[0]])){!0===a?a=l[i]:!0!==l[i]&&(o=s[0],c.unshift(s[1]));break}if(!0!==a)if(a&&e[\"throws\"])t=a(t);else try{t=a(t)}catch(e){return{state:\"parsererror\",error:a?e:\"No conversion from \"+u+\" to \"+o}}}return{state:\"success\",data:t}}(v,s,T,i),i?(v.ifModified&&((u=T.getResponseHeader(\"Last-Modified\"))&&(S.lastModified[f]=u),(u=T.getResponseHeader(\"etag\"))&&(S.etag[f]=u)),204===e||\"HEAD\"===v.type?l=\"nocontent\":304===e?l=\"notmodified\":(l=s.state,o=s.data,i=!(a=s.error))):(a=l,!e&&l||(l=\"error\",e<0&&(e=0))),T.status=e,T.statusText=(t||l)+\"\",i?x.resolveWith(y,[o,l,T]):x.rejectWith(y,[T,l,a]),T.statusCode(w),w=void 0,g&&m.trigger(i?\"ajaxSuccess\":\"ajaxError\",[T,v,i?o:a]),b.fireWith(y,[T,l]),g&&(m.trigger(\"ajaxComplete\",[T,v]),--S.active||S.event.trigger(\"ajaxStop\")))}return T},getJSON:function(e,t,n){return S.get(e,t,n,\"json\")},getScript:function(e,t){return S.get(e,void 0,t,\"script\")}}),S.each([\"get\",\"post\"],function(e,i){S[i]=function(e,t,n,r){return m(t)&&(r=r||n,n=t,t=void 0),S.ajax(S.extend({url:e,type:i,dataType:r,data:t,success:n},S.isPlainObject(e)&&e))}}),S.ajaxPrefilter(function(e){var t;for(t in e.headers)\"content-type\"===t.toLowerCase()&&(e.contentType=e.headers[t]||\"\")}),S._evalUrl=function(e,t,n){return S.ajax({url:e,type:\"GET\",dataType:\"script\",cache:!0,async:!1,global:!1,converters:{\"text script\":function(){}},dataFilter:function(e){S.globalEval(e,t,n)}})},S.fn.extend({wrapAll:function(e){var t;return this[0]&&(m(e)&&(e=e.call(this[0])),t=S(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstElementChild)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(n){return m(n)?this.each(function(e){S(this).wrapInner(n.call(this,e))}):this.each(function(){var e=S(this),t=e.contents();t.length?t.wrapAll(n):e.append(n)})},wrap:function(t){var n=m(t);return this.each(function(e){S(this).wrapAll(n?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not(\"body\").each(function(){S(this).replaceWith(this.childNodes)}),this}}),S.expr.pseudos.hidden=function(e){return!S.expr.pseudos.visible(e)},S.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},S.ajaxSettings.xhr=function(){try{return new C.XMLHttpRequest}catch(e){}};var _t={0:200,1223:204},zt=S.ajaxSettings.xhr();y.cors=!!zt&&\"withCredentials\"in zt,y.ajax=zt=!!zt,S.ajaxTransport(function(i){var o,a;if(y.cors||zt&&!i.crossDomain)return{send:function(e,t){var n,r=i.xhr();if(r.open(i.type,i.url,i.async,i.username,i.password),i.xhrFields)for(n in i.xhrFields)r[n]=i.xhrFields[n];for(n in i.mimeType&&r.overrideMimeType&&r.overrideMimeType(i.mimeType),i.crossDomain||e[\"X-Requested-With\"]||(e[\"X-Requested-With\"]=\"XMLHttpRequest\"),e)r.setRequestHeader(n,e[n]);o=function(e){return function(){o&&(o=a=r.onload=r.onerror=r.onabort=r.ontimeout=r.onreadystatechange=null,\"abort\"===e?r.abort():\"error\"===e?\"number\"!=typeof r.status?t(0,\"error\"):t(r.status,r.statusText):t(_t[r.status]||r.status,r.statusText,\"text\"!==(r.responseType||\"text\")||\"string\"!=typeof r.responseText?{binary:r.response}:{text:r.responseText},r.getAllResponseHeaders()))}},r.onload=o(),a=r.onerror=r.ontimeout=o(\"error\"),void 0!==r.onabort?r.onabort=a:r.onreadystatechange=function(){4===r.readyState&&C.setTimeout(function(){o&&a()})},o=o(\"abort\");try{r.send(i.hasContent&&i.data||null)}catch(e){if(o)throw e}},abort:function(){o&&o()}}}),S.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),S.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/\\b(?:java|ecma)script\\b/},converters:{\"text script\":function(e){return S.globalEval(e),e}}}),S.ajaxPrefilter(\"script\",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type=\"GET\")}),S.ajaxTransport(\"script\",function(n){var r,i;if(n.crossDomain||n.scriptAttrs)return{send:function(e,t){r=S(\"<script>\").attr(n.scriptAttrs||{}).prop({charset:n.scriptCharset,src:n.url}).on(\"load error\",i=function(e){r.remove(),i=null,e&&t(\"error\"===e.type?404:200,e.type)}),E.head.appendChild(r[0])},abort:function(){i&&i()}}});var Ut,Xt=[],Vt=/(=)\\?(?=&|$)|\\?\\?/;S.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var e=Xt.pop()||S.expando+\"_\"+Ct.guid++;return this[e]=!0,e}}),S.ajaxPrefilter(\"json jsonp\",function(e,t,n){var r,i,o,a=!1!==e.jsonp&&(Vt.test(e.url)?\"url\":\"string\"==typeof e.data&&0===(e.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Vt.test(e.data)&&\"data\");if(a||\"jsonp\"===e.dataTypes[0])return r=e.jsonpCallback=m(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace(Vt,\"$1\"+r):!1!==e.jsonp&&(e.url+=(Et.test(e.url)?\"&\":\"?\")+e.jsonp+\"=\"+r),e.converters[\"script json\"]=function(){return o||S.error(r+\" was not called\"),o[0]},e.dataTypes[0]=\"json\",i=C[r],C[r]=function(){o=arguments},n.always(function(){void 0===i?S(C).removeProp(r):C[r]=i,e[r]&&(e.jsonpCallback=t.jsonpCallback,Xt.push(r)),o&&m(i)&&i(o[0]),o=i=void 0}),\"script\"}),y.createHTMLDocument=((Ut=E.implementation.createHTMLDocument(\"\").body).innerHTML=\"<form></form><form></form>\",2===Ut.childNodes.length),S.parseHTML=function(e,t,n){return\"string\"!=typeof e?[]:(\"boolean\"==typeof t&&(n=t,t=!1),t||(y.createHTMLDocument?((r=(t=E.implementation.createHTMLDocument(\"\")).createElement(\"base\")).href=E.location.href,t.head.appendChild(r)):t=E),o=!n&&[],(i=N.exec(e))?[t.createElement(i[1])]:(i=xe([e],t,o),o&&o.length&&S(o).remove(),S.merge([],i.childNodes)));var r,i,o},S.fn.load=function(e,t,n){var r,i,o,a=this,s=e.indexOf(\" \");return-1<s&&(r=vt(e.slice(s)),e=e.slice(0,s)),m(t)?(n=t,t=void 0):t&&\"object\"==typeof t&&(i=\"POST\"),0<a.length&&S.ajax({url:e,type:i||\"GET\",dataType:\"html\",data:t}).done(function(e){o=arguments,a.html(r?S(\"<div>\").append(S.parseHTML(e)).find(r):e)}).always(n&&function(e,t){a.each(function(){n.apply(this,o||[e.responseText,t,e])})}),this},S.expr.pseudos.animated=function(t){return S.grep(S.timers,function(e){return t===e.elem}).length},S.offset={setOffset:function(e,t,n){var r,i,o,a,s,u,l=S.css(e,\"position\"),c=S(e),f={};\"static\"===l&&(e.style.position=\"relative\"),s=c.offset(),o=S.css(e,\"top\"),u=S.css(e,\"left\"),(\"absolute\"===l||\"fixed\"===l)&&-1<(o+u).indexOf(\"auto\")?(a=(r=c.position()).top,i=r.left):(a=parseFloat(o)||0,i=parseFloat(u)||0),m(t)&&(t=t.call(e,n,S.extend({},s))),null!=t.top&&(f.top=t.top-s.top+a),null!=t.left&&(f.left=t.left-s.left+i),\"using\"in t?t.using.call(e,f):(\"number\"==typeof f.top&&(f.top+=\"px\"),\"number\"==typeof f.left&&(f.left+=\"px\"),c.css(f))}},S.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){S.offset.setOffset(this,t,e)});var e,n,r=this[0];return r?r.getClientRects().length?(e=r.getBoundingClientRect(),n=r.ownerDocument.defaultView,{top:e.top+n.pageYOffset,left:e.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,n,r=this[0],i={top:0,left:0};if(\"fixed\"===S.css(r,\"position\"))t=r.getBoundingClientRect();else{t=this.offset(),n=r.ownerDocument,e=r.offsetParent||n.documentElement;while(e&&(e===n.body||e===n.documentElement)&&\"static\"===S.css(e,\"position\"))e=e.parentNode;e&&e!==r&&1===e.nodeType&&((i=S(e).offset()).top+=S.css(e,\"borderTopWidth\",!0),i.left+=S.css(e,\"borderLeftWidth\",!0))}return{top:t.top-i.top-S.css(r,\"marginTop\",!0),left:t.left-i.left-S.css(r,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var e=this.offsetParent;while(e&&\"static\"===S.css(e,\"position\"))e=e.offsetParent;return e||re})}}),S.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(t,i){var o=\"pageYOffset\"===i;S.fn[t]=function(e){return $(this,function(e,t,n){var r;if(x(e)?r=e:9===e.nodeType&&(r=e.defaultView),void 0===n)return r?r[i]:e[t];r?r.scrollTo(o?r.pageXOffset:n,o?n:r.pageYOffset):e[t]=n},t,e,arguments.length)}}),S.each([\"top\",\"left\"],function(e,n){S.cssHooks[n]=$e(y.pixelPosition,function(e,t){if(t)return t=Be(e,n),Me.test(t)?S(e).position()[n]+\"px\":t})}),S.each({Height:\"height\",Width:\"width\"},function(a,s){S.each({padding:\"inner\"+a,content:s,\"\":\"outer\"+a},function(r,o){S.fn[o]=function(e,t){var n=arguments.length&&(r||\"boolean\"!=typeof e),i=r||(!0===e||!0===t?\"margin\":\"border\");return $(this,function(e,t,n){var r;return x(e)?0===o.indexOf(\"outer\")?e[\"inner\"+a]:e.document.documentElement[\"client\"+a]:9===e.nodeType?(r=e.documentElement,Math.max(e.body[\"scroll\"+a],r[\"scroll\"+a],e.body[\"offset\"+a],r[\"offset\"+a],r[\"client\"+a])):void 0===n?S.css(e,t,i):S.style(e,t,n,i)},s,n?e:void 0,n)}})}),S.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(e,t){S.fn[t]=function(e){return this.on(t,e)}}),S.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,\"**\"):this.off(t,e||\"**\",n)},hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),S.each(\"blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu\".split(\" \"),function(e,n){S.fn[n]=function(e,t){return 0<arguments.length?this.on(n,null,e,t):this.trigger(n)}});var Gt=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;S.proxy=function(e,t){var n,r,i;if(\"string\"==typeof t&&(n=e[t],t=e,e=n),m(e))return r=s.call(arguments,2),(i=function(){return e.apply(t||this,r.concat(s.call(arguments)))}).guid=e.guid=e.guid||S.guid++,i},S.holdReady=function(e){e?S.readyWait++:S.ready(!0)},S.isArray=Array.isArray,S.parseJSON=JSON.parse,S.nodeName=A,S.isFunction=m,S.isWindow=x,S.camelCase=X,S.type=w,S.now=Date.now,S.isNumeric=function(e){var t=S.type(e);return(\"number\"===t||\"string\"===t)&&!isNaN(e-parseFloat(e))},S.trim=function(e){return null==e?\"\":(e+\"\").replace(Gt,\"\")},\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return S});var Yt=C.jQuery,Qt=C.$;return S.noConflict=function(e){return C.$===S&&(C.$=Qt),e&&C.jQuery===S&&(C.jQuery=Yt),S},\"undefined\"==typeof e&&(C.jQuery=C.$=S),S});",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "mobsf/templates/dynamic_analysis/android/dynamic_report.html||mobsf/templates/dynamic_analysis/android/dynamic_report.html": [
          "File: mobsf/templates/dynamic_analysis/android/dynamic_report.html -> mobsf/templates/dynamic_analysis/android/dynamic_report.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "584:               <div class=\"table-responsive\">",
          "585:                 <div id=\"chartdiv\"></div>",
          "586:             </div>",
          "587:           </div>",
          "588:         </div><!-- /.card -->",
          "589:         </div>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "588:             <div class=\"table-responsive\">",
          "589:               {% if domains %}",
          "590:               <p></br>This app may communicate with the following OFAC sanctioned list of countries.</p>",
          "591:              <table id=\"table_ofac\" class=\"table table-bordered table-hover table-striped\">",
          "592:                   <thead>",
          "593:                   <tr>",
          "594:                      <th>DOMAIN</th>",
          "595:                      <th>COUNTRY/REGION</th>",
          "596:                   </tr>",
          "597:                  </thead>",
          "598:                  <tbody>",
          "599:                  {% for domain, details in domains.items %}",
          "600:                  {% if details|key:\"ofac\" == True %}",
          "601:                   <tr><td>{{domain}}</td>",
          "602:                   <td>",
          "603:                     <strong>IP: </strong>{{details|key:\"geolocation\"|key:\"ip\"}}  <br/>",
          "604:                     <strong>Country: </strong>{{details|key:\"geolocation\"|key:\"country_long\"}} <br/>",
          "605:                     <strong>Region: </strong>{{details|key:\"geolocation\"|key:\"region\"}} <br/>",
          "606:                     <strong>City: </strong>{{details|key:\"geolocation\"|key:\"city\"}} <br/>",
          "607:                   </td>",
          "608:                   </tr>",
          "609:                   {% endif %}",
          "610:                   {% endfor %}",
          "611:                 </tbody>",
          "612:             </table>",
          "613:              {% endif %}",
          "614:             </div>",
          "",
          "---------------"
        ],
        "mobsf/templates/pdf/android_report.html||mobsf/templates/pdf/android_report.html": [
          "File: mobsf/templates/pdf/android_report.html -> mobsf/templates/pdf/android_report.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "734:         {% endif %}",
          "735: -->",
          "736:       {% if domains  %}",
          "737:       <h2><i class=\"fab fa-searchengin\"></i> DOMAIN MALWARE CHECK</h2>",
          "738:          <table  class=\"basic\">",
          "739:                   <thead>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "737:       <h2><i class=\"fa fa-exclamation\"></i> OFAC SANCTIONED COUNTRIES</h2>",
          "738:       <p>This app may communicate with the following OFAC sanctioned list of countries.</p>",
          "739:       <table id=\"table_ofac\" class=\"table table-bordered table-hover table-striped\">",
          "740:            <thead>",
          "741:            <tr>",
          "742:               <th>DOMAIN</th>",
          "743:               <th>COUNTRY/REGION</th>",
          "744:            </tr>",
          "745:           </thead>",
          "746:           <tbody>",
          "747:           {% for domain, details in domains.items %}",
          "748:           {% if details|key:\"ofac\" == True %}",
          "749:            <tr><td>{{domain}}</td>",
          "750:            <td>",
          "751:              <strong>IP: </strong>{{details|key:\"geolocation\"|key:\"ip\"}}  <br/>",
          "752:              <strong>Country: </strong>{{details|key:\"geolocation\"|key:\"country_long\"}} <br/>",
          "753:              <strong>Region: </strong>{{details|key:\"geolocation\"|key:\"region\"}} <br/>",
          "754:              <strong>City: </strong>{{details|key:\"geolocation\"|key:\"city\"}} <br/>",
          "755:            </td>",
          "756:            </tr>",
          "757:            {% endif %}",
          "758:            {% endfor %}",
          "759:          </tbody>",
          "760:      </table>",
          "",
          "---------------"
        ],
        "mobsf/templates/pdf/ios_report.html||mobsf/templates/pdf/ios_report.html": [
          "File: mobsf/templates/pdf/ios_report.html -> mobsf/templates/pdf/ios_report.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "587:       {% endif %}",
          "588:       {% if domains  %}",
          "589:       <h2><i class=\"fab fa-searchengin\"></i> DOMAIN MALWARE CHECK</h2>",
          "590:          <table  class=\"basic\">",
          "591:                   <thead>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "590:       <h2><i class=\"fa fa-exclamation\"></i> OFAC SANCTIONED COUNTRIES</h2>",
          "591:       <p>This app may communicate with the following OFAC sanctioned list of countries.</p>",
          "592:       <table id=\"table_ofac\" class=\"table table-bordered table-hover table-striped\">",
          "593:            <thead>",
          "594:            <tr>",
          "595:               <th>DOMAIN</th>",
          "596:               <th>COUNTRY/REGION</th>",
          "597:            </tr>",
          "598:           </thead>",
          "599:           <tbody>",
          "600:           {% for domain, details in domains.items %}",
          "601:           {% if details|key:\"ofac\" == True %}",
          "602:            <tr><td>{{domain}}</td>",
          "603:            <td>",
          "604:              <strong>IP: </strong>{{details|key:\"geolocation\"|key:\"ip\"}}  <br/>",
          "605:              <strong>Country: </strong>{{details|key:\"geolocation\"|key:\"country_long\"}} <br/>",
          "606:              <strong>Region: </strong>{{details|key:\"geolocation\"|key:\"region\"}} <br/>",
          "607:              <strong>City: </strong>{{details|key:\"geolocation\"|key:\"city\"}} <br/>",
          "608:            </td>",
          "609:            </tr>",
          "610:            {% endif %}",
          "611:            {% endfor %}",
          "612:          </tbody>",
          "613:      </table>",
          "",
          "---------------"
        ],
        "mobsf/templates/static_analysis/android_binary_analysis.html||mobsf/templates/static_analysis/android_binary_analysis.html": [
          "File: mobsf/templates/static_analysis/android_binary_analysis.html -> mobsf/templates/static_analysis/android_binary_analysis.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "1669:               <div class=\"table-responsive\">",
          "1670:                 <div id=\"chartdiv\"></div>",
          "1671:             </div>",
          "1677:     </div>",
          "1678: </section>",
          "1679:  <!-- ===========================end server locations ================================== -->",
          "1680: <a id=\"malware_check\" class=\"anchor\"></a>",
          "",
          "[Removed Lines]",
          "1672:           </div>",
          "1673:         </div><!-- /.card -->",
          "1674:         </div>",
          "1675:         <!-- end row -->",
          "1676:         </div>",
          "",
          "[Added Lines]",
          "1674:     <div class=\"table-responsive\">",
          "1675:       {% if domains %}",
          "1676:       <p></br>This app may communicate with the following OFAC sanctioned list of countries.</p>",
          "1677:      <table id=\"table_ofac\" class=\"table table-bordered table-hover table-striped\">",
          "1678:           <thead>",
          "1679:           <tr>",
          "1680:              <th>DOMAIN</th>",
          "1681:              <th>COUNTRY/REGION</th>",
          "1682:           </tr>",
          "1683:          </thead>",
          "1684:          <tbody>",
          "1685:          {% for domain, details in domains.items %}",
          "1686:          {% if details|key:\"ofac\" == True %}",
          "1687:           <tr><td>{{domain}}</td>",
          "1688:           <td>",
          "1689:             <strong>IP: </strong>{{details|key:\"geolocation\"|key:\"ip\"}}  <br/>",
          "1690:             <strong>Country: </strong>{{details|key:\"geolocation\"|key:\"country_long\"}} <br/>",
          "1691:             <strong>Region: </strong>{{details|key:\"geolocation\"|key:\"region\"}} <br/>",
          "1692:             <strong>City: </strong>{{details|key:\"geolocation\"|key:\"city\"}} <br/>",
          "1693:           </td>",
          "1694:           </tr>",
          "1695:           {% endif %}",
          "1696:           {% endfor %}",
          "1697:         </tbody>",
          "1698:     </table>",
          "1699:      {% endif %}",
          "1702:   </div>",
          "1703:   </div><!-- /.card -->",
          "1704:   </div>",
          "1705:     <!-- end row -->",
          "1706:   </div>",
          "1707:   </div>",
          "",
          "---------------"
        ],
        "mobsf/templates/static_analysis/android_source_analysis.html||mobsf/templates/static_analysis/android_source_analysis.html": [
          "File: mobsf/templates/static_analysis/android_source_analysis.html -> mobsf/templates/static_analysis/android_source_analysis.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "1184:               <div class=\"table-responsive\">",
          "1185:                 <div id=\"chartdiv\"></div>",
          "1186:             </div>",
          "1187:           </div>",
          "1188:         </div><!-- /.card -->",
          "1189:         </div>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1188:             <div class=\"table-responsive\">",
          "1189:               {% if domains %}",
          "1190:               <p></br>This app may communicate with the following OFAC sanctioned list of countries.</p>",
          "1191:              <table id=\"table_ofac\" class=\"table table-bordered table-hover table-striped\">",
          "1192:                   <thead>",
          "1193:                   <tr>",
          "1194:                      <th>DOMAIN</th>",
          "1195:                      <th>COUNTRY/REGION</th>",
          "1196:                   </tr>",
          "1197:                  </thead>",
          "1198:                  <tbody>",
          "1199:                  {% for domain, details in domains.items %}",
          "1200:                  {% if details|key:\"ofac\" == True %}",
          "1201:                   <tr><td>{{domain}}</td>",
          "1202:                   <td>",
          "1203:                     <strong>IP: </strong>{{details|key:\"geolocation\"|key:\"ip\"}}  <br/>",
          "1204:                     <strong>Country: </strong>{{details|key:\"geolocation\"|key:\"country_long\"}} <br/>",
          "1205:                     <strong>Region: </strong>{{details|key:\"geolocation\"|key:\"region\"}} <br/>",
          "1206:                     <strong>City: </strong>{{details|key:\"geolocation\"|key:\"city\"}} <br/>",
          "1207:                   </td>",
          "1208:                   </tr>",
          "1209:                   {% endif %}",
          "1210:                   {% endfor %}",
          "1211:                 </tbody>",
          "1212:             </table>",
          "1213:              {% endif %}",
          "1214:             </div>",
          "",
          "---------------"
        ],
        "mobsf/templates/static_analysis/ios_binary_analysis.html||mobsf/templates/static_analysis/ios_binary_analysis.html": [
          "File: mobsf/templates/static_analysis/ios_binary_analysis.html -> mobsf/templates/static_analysis/ios_binary_analysis.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "977:               <div class=\"table-responsive\">",
          "978:                 <div id=\"chartdiv\"></div>",
          "979:             </div>",
          "980:           </div>",
          "981:         </div><!-- /.card -->",
          "982:         </div>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "981:             <div class=\"table-responsive\">",
          "982:               {% if domains %}",
          "983:               <p></br>This app may communicate with the following OFAC sanctioned list of countries.</p>",
          "984:              <table id=\"table_ofac\" class=\"table table-bordered table-hover table-striped\">",
          "985:                   <thead>",
          "986:                   <tr>",
          "987:                      <th>DOMAIN</th>",
          "988:                      <th>COUNTRY/REGION</th>",
          "989:                   </tr>",
          "990:                  </thead>",
          "991:                  <tbody>",
          "992:                  {% for domain, details in domains.items %}",
          "993:                  {% if details|key:\"ofac\" == True %}",
          "994:                   <tr><td>{{domain}}</td>",
          "995:                   <td>",
          "996:                     <strong>IP: </strong>{{details|key:\"geolocation\"|key:\"ip\"}}  <br/>",
          "997:                     <strong>Country: </strong>{{details|key:\"geolocation\"|key:\"country_long\"}} <br/>",
          "998:                     <strong>Region: </strong>{{details|key:\"geolocation\"|key:\"region\"}} <br/>",
          "999:                     <strong>City: </strong>{{details|key:\"geolocation\"|key:\"city\"}} <br/>",
          "1000:                   </td>",
          "1001:                   </tr>",
          "1002:                   {% endif %}",
          "1003:                   {% endfor %}",
          "1004:                 </tbody>",
          "1005:             </table>",
          "1006:              {% endif %}",
          "1007:             </div>",
          "",
          "---------------"
        ],
        "mobsf/templates/static_analysis/ios_source_analysis.html||mobsf/templates/static_analysis/ios_source_analysis.html": [
          "File: mobsf/templates/static_analysis/ios_source_analysis.html -> mobsf/templates/static_analysis/ios_source_analysis.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "844:               <div class=\"table-responsive\">",
          "845:                 <div id=\"chartdiv\"></div>",
          "846:             </div>",
          "847:           </div>",
          "848:         </div><!-- /.card -->",
          "849:         </div>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "848:             <div class=\"table-responsive\">",
          "849:               {% if domains %}",
          "850:               <p></br>This app may communicate with the following OFAC sanctioned list of countries.</p>",
          "851:              <table id=\"table_ofac\" class=\"table table-bordered table-hover table-striped\">",
          "852:                   <thead>",
          "853:                   <tr>",
          "854:                      <th>DOMAIN</th>",
          "855:                      <th>COUNTRY/REGION</th>",
          "856:                   </tr>",
          "857:                  </thead>",
          "858:                  <tbody>",
          "859:                  {% for domain, details in domains.items %}",
          "860:                  {% if details|key:\"ofac\" == True %}",
          "861:                   <tr><td>{{domain}}</td>",
          "862:                   <td>",
          "863:                     <strong>IP: </strong>{{details|key:\"geolocation\"|key:\"ip\"}}  <br/>",
          "864:                     <strong>Country: </strong>{{details|key:\"geolocation\"|key:\"country_long\"}} <br/>",
          "865:                     <strong>Region: </strong>{{details|key:\"geolocation\"|key:\"region\"}} <br/>",
          "866:                     <strong>City: </strong>{{details|key:\"geolocation\"|key:\"city\"}} <br/>",
          "867:                   </td>",
          "868:                   </tr>",
          "869:                   {% endif %}",
          "870:                   {% endfor %}",
          "871:                 </tbody>",
          "872:             </table>",
          "873:              {% endif %}",
          "874:             </div>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "28b7fdeca5a806a3d429593c8eec012373fe2b24",
      "candidate_info": {
        "commit_hash": "28b7fdeca5a806a3d429593c8eec012373fe2b24",
        "repo": "MobSF/Mobile-Security-Framework-MobSF",
        "commit_url": "https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/28b7fdeca5a806a3d429593c8eec012373fe2b24",
        "files": [
          "mobsf/MobSF/init.py",
          "mobsf/MobSF/utils.py",
          "mobsf/StaticAnalyzer/views/android/rules/android_niap.yaml",
          "mobsf/StaticAnalyzer/views/android/rules/android_rules.yaml",
          "mobsf/StaticAnalyzer/views/android/static_analyzer.py",
          "mobsf/StaticAnalyzer/views/ios/rules/ios_apis.yaml",
          "mobsf/StaticAnalyzer/views/ios/rules/objective_c_rules.yaml",
          "mobsf/StaticAnalyzer/views/ios/rules/swift_rules.yaml",
          "mobsf/install/windows/setup.py",
          "mobsf/templates/general/home.html"
        ],
        "message": "[HOTFIX] Regex + Rule Update (#2232)\n\n* IOS Swift Rules updates\n  *  Updated or added rules `ios_biometric_bool`, `ios_biometric_acl`, `ios_keychain_weak_acl_device_passcode`, `ios_keychain_weak_accessibility_value`, `ios_insecure_random_no_generator`, `ios_biometry_hardened`\n * Regex Hardening: Fixes possible Regex DoS in rules and MobSF code base",
        "before_after_code_files": [
          "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
          "mobsf/MobSF/utils.py||mobsf/MobSF/utils.py",
          "mobsf/StaticAnalyzer/views/android/static_analyzer.py||mobsf/StaticAnalyzer/views/android/static_analyzer.py",
          "mobsf/install/windows/setup.py||mobsf/install/windows/setup.py",
          "mobsf/templates/general/home.html||mobsf/templates/general/home.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
            "mobsf/MobSF/utils.py||mobsf/MobSF/utils.py"
          ],
          "candidate": [
            "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
            "mobsf/MobSF/utils.py||mobsf/MobSF/utils.py"
          ]
        }
      },
      "candidate_diff": {
        "mobsf/MobSF/init.py||mobsf/MobSF/init.py": [
          "File: mobsf/MobSF/init.py -> mobsf/MobSF/init.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: logger = logging.getLogger(__name__)",
          "14: BANNER = \"\"\"",
          "15:   __  __       _    ____  _____       _____ _____",
          "16:  |  \\/  | ___ | |__/ ___||  ___|_   _|___ /|___  |",
          "",
          "[Removed Lines]",
          "13: VERSION = '3.7.1'",
          "",
          "[Added Lines]",
          "13: VERSION = '3.7.2'",
          "",
          "---------------"
        ],
        "mobsf/MobSF/utils.py||mobsf/MobSF/utils.py": [
          "File: mobsf/MobSF/utils.py -> mobsf/MobSF/utils.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "602: def strict_package_check(user_input):",
          "603:     \"\"\"Strict package name check.\"\"\"",
          "605:     resp = re.match(pat, user_input)",
          "606:     if not resp:",
          "607:         logger.error('Invalid package/class name')",
          "",
          "[Removed Lines]",
          "604:     pat = re.compile(r'^\\w+\\.*[\\w\\.\\$]+$')",
          "",
          "[Added Lines]",
          "604:     pat = re.compile(r'^([A-Za-z]{1}[\\w]*\\.)+[A-Za-z][\\w]*$')",
          "",
          "---------------"
        ],
        "mobsf/StaticAnalyzer/views/android/static_analyzer.py||mobsf/StaticAnalyzer/views/android/static_analyzer.py": [
          "File: mobsf/StaticAnalyzer/views/android/static_analyzer.py -> mobsf/StaticAnalyzer/views/android/static_analyzer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "625:     with open(file_path, 'r', encoding='utf-8') as f:",
          "626:         data = f.read()",
          "631:     if (not app_name_match) or (len(app_name_match.group()) <= 0):",
          "632:         # Did not find app_name in current file.",
          "",
          "[Removed Lines]",
          "628:     app_name_match = re.search(r'<string name=\\\"app_name\\\">(.*)</string>',",
          "629:                                data)",
          "",
          "[Added Lines]",
          "628:     app_name_match = re.search(",
          "629:         r'<string name=\\\"app_name\\\">(.{0,300})</string>',",
          "630:         data)",
          "",
          "---------------"
        ],
        "mobsf/install/windows/setup.py||mobsf/install/windows/setup.py": [
          "File: mobsf/install/windows/setup.py -> mobsf/install/windows/setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "180:     # Search for the version number",
          "181:     folder = re.search(",
          "183:     try:",
          "184:         # Substring-Foo for removing b'X's in python3",
          "185:         if sys.version_info.major == 3:",
          "",
          "[Removed Lines]",
          "182:         b'Microsoft\\\\.CodeAnalysis\\\\.BinSkim\\\\..*(\\'|\\\") ', output)",
          "",
          "[Added Lines]",
          "182:         b'Microsoft\\\\.CodeAnalysis\\\\.BinSkim\\\\..{0,300}(\\'|\\\") ', output)",
          "",
          "---------------"
        ],
        "mobsf/templates/general/home.html||mobsf/templates/general/home.html": [
          "File: mobsf/templates/general/home.html -> mobsf/templates/general/home.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "226:           function isValidExt(file_name){",
          "227:                 var val = file_name.toLowerCase();",
          "229:                 val = val.replace(/^.*[\\\\\\/]/, '');",
          "230:                 if (!(regex.test(val))) {",
          "231:                     _('status').innerText = \"Please upload APK/APKS/XAPK/JAR/AAR/IPA/ZIP/APPX only!\";",
          "",
          "[Removed Lines]",
          "228:                 var regex = new RegExp(\"(.*?)\\.(ipa|apk|apks|xapk|jar|aar|zip|appx)$\");",
          "",
          "[Added Lines]",
          "228:                 var regex = new RegExp(\"^(.{1,300}?)\\.(ipa|apk|apks|xapk|jar|aar|zip|appx)$\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d3b02143fe700f5ec1568516e15387496c65bff7",
      "candidate_info": {
        "commit_hash": "d3b02143fe700f5ec1568516e15387496c65bff7",
        "repo": "MobSF/Mobile-Security-Framework-MobSF",
        "commit_url": "https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/d3b02143fe700f5ec1568516e15387496c65bff7",
        "files": [
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/auxiliary/string_compare.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/default/dump_clipboard.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/stop-app-terminate.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/default/jailbreak_bypass.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/data-dir.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/nslog.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/nsuserdefaults.js",
          "mobsf/DynamicAnalyzer/views/android/frida_core.py",
          "mobsf/DynamicAnalyzer/views/android/tests_frida.py",
          "mobsf/DynamicAnalyzer/views/common/frida.py",
          "mobsf/DynamicAnalyzer/views/ios/corellium_apis.py",
          "mobsf/DynamicAnalyzer/views/ios/corellium_instance.py",
          "mobsf/DynamicAnalyzer/views/ios/frida_core.py",
          "mobsf/MobSF/init.py",
          "mobsf/MobSF/urls.py",
          "mobsf/MobSF/utils.py",
          "mobsf/MobSF/views/api/api_dynamic_analysis.py",
          "mobsf/static/others/css/terminal.css",
          "mobsf/static/terminal/terminal.css",
          "mobsf/templates/dynamic_analysis/android/dynamic_analyzer.html",
          "mobsf/templates/dynamic_analysis/android/frida_logs.html",
          "mobsf/templates/dynamic_analysis/ios/dynamic_analysis.html",
          "mobsf/templates/dynamic_analysis/ios/dynamic_analyzer.html",
          "pyproject.toml"
        ],
        "message": "[HOTFIX] RPC hook suggestions + Bug Fix (#2301)\n\n* String compare script improvements\n* Fix iOS Frida script bugs\n* Added RPC helpers for hook suggestion (TODO:Expose to UI)\n* Code QA",
        "before_after_code_files": [
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/auxiliary/string_compare.js||mobsf/DynamicAnalyzer/tools/frida_scripts/android/auxiliary/string_compare.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/default/dump_clipboard.js||mobsf/DynamicAnalyzer/tools/frida_scripts/android/default/dump_clipboard.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/stop-app-terminate.js||mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/stop-app-terminate.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/default/jailbreak_bypass.js||mobsf/DynamicAnalyzer/tools/frida_scripts/ios/default/jailbreak_bypass.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/data-dir.js||mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/data-dir.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/nslog.js||mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/nslog.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/nsuserdefaults.js||mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/nsuserdefaults.js",
          "mobsf/DynamicAnalyzer/views/android/frida_core.py||mobsf/DynamicAnalyzer/views/android/frida_core.py",
          "mobsf/DynamicAnalyzer/views/android/tests_frida.py||mobsf/DynamicAnalyzer/views/android/tests_frida.py",
          "mobsf/DynamicAnalyzer/views/common/frida.py||mobsf/DynamicAnalyzer/views/common/frida.py",
          "mobsf/DynamicAnalyzer/views/ios/corellium_apis.py||mobsf/DynamicAnalyzer/views/ios/corellium_apis.py",
          "mobsf/DynamicAnalyzer/views/ios/corellium_instance.py||mobsf/DynamicAnalyzer/views/ios/corellium_instance.py",
          "mobsf/DynamicAnalyzer/views/ios/frida_core.py||mobsf/DynamicAnalyzer/views/ios/frida_core.py",
          "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
          "mobsf/MobSF/urls.py||mobsf/MobSF/urls.py",
          "mobsf/MobSF/utils.py||mobsf/MobSF/utils.py",
          "mobsf/MobSF/views/api/api_dynamic_analysis.py||mobsf/MobSF/views/api/api_dynamic_analysis.py",
          "mobsf/static/others/css/terminal.css||mobsf/static/others/css/terminal.css",
          "mobsf/static/terminal/terminal.css||mobsf/static/terminal/terminal.css",
          "mobsf/templates/dynamic_analysis/android/dynamic_analyzer.html||mobsf/templates/dynamic_analysis/android/dynamic_analyzer.html",
          "mobsf/templates/dynamic_analysis/android/frida_logs.html||mobsf/templates/dynamic_analysis/android/frida_logs.html",
          "mobsf/templates/dynamic_analysis/ios/dynamic_analysis.html||mobsf/templates/dynamic_analysis/ios/dynamic_analysis.html",
          "mobsf/templates/dynamic_analysis/ios/dynamic_analyzer.html||mobsf/templates/dynamic_analysis/ios/dynamic_analyzer.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
            "mobsf/MobSF/utils.py||mobsf/MobSF/utils.py"
          ],
          "candidate": [
            "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
            "mobsf/MobSF/utils.py||mobsf/MobSF/utils.py"
          ]
        }
      },
      "candidate_diff": {
        "mobsf/DynamicAnalyzer/tools/frida_scripts/android/auxiliary/string_compare.js||mobsf/DynamicAnalyzer/tools/frida_scripts/android/auxiliary/string_compare.js": [
          "File: mobsf/DynamicAnalyzer/tools/frida_scripts/android/auxiliary/string_compare.js -> mobsf/DynamicAnalyzer/tools/frida_scripts/android/auxiliary/string_compare.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: Java.perform(function () {",
          "4:     send('[AUXILIARY] [String Compare] capturing all string comparisons')",
          "12:         }",
          "13:         return response;",
          "14:     }",
          "",
          "[Removed Lines]",
          "5:     var str = Java.use('java.lang.String'), objectClass = 'java.lang.Object';",
          "6:     str.equals.overload(objectClass).implementation = function (obj) {",
          "7:         var response = str.equals.overload(objectClass).call(this, obj);",
          "8:         if (obj) {",
          "9:             if (obj.toString().length > 5) {",
          "10:                 send('[AUXILIARY] [String Compare] ' + str.toString.call(this) + ' == ' + obj.toString() + ' ? ' + response);",
          "11:             }",
          "15: });",
          "",
          "[Added Lines]",
          "4:     let Exception = Java.use('java.lang.Exception');",
          "5:     let javaString = Java.use('java.lang.String')",
          "6:     let objectClass = 'java.lang.Object';",
          "7:     var skiplist = ['android.app.SystemServiceRegistry.getSystemService']",
          "8:     javaString.equals.overload(objectClass).implementation = function (obj) {",
          "9:         var response = javaString.equals.overload(objectClass).call(this, obj);",
          "10:         if (obj && obj.toString().length > 5) {",
          "11:            var stack = [];",
          "12:            var calledFrom = Exception.$new().getStackTrace().toString().split(',');",
          "14:            let i = 0;",
          "15:            do {",
          "16:                 i = i + 1;",
          "17:                 stack.push(calledFrom[i]);",
          "18:             } while (i <= 5);",
          "19:             var skipClass, skipMethod = false;",
          "20:             skiplist.forEach(function (toSkip) {",
          "21:                 if (calledFrom[4].includes(toSkip))",
          "22:                     skipClass = true;",
          "23:            });",
          "24:            if (!skipClass) {",
          "25:                 var data = {",
          "26:                 caller: stack,",
          "27:                 string1: javaString.toString.call(this),",
          "28:                 string2: obj.toString(),",
          "29:                 return: response,",
          "30:                 }",
          "31:                 send('[AUXILIARY] [String Compare] ' + JSON.stringify(data, null, 2));",
          "32:            }",
          "36:  });",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/tools/frida_scripts/android/default/dump_clipboard.js||mobsf/DynamicAnalyzer/tools/frida_scripts/android/default/dump_clipboard.js": [
          "File: mobsf/DynamicAnalyzer/tools/frida_scripts/android/default/dump_clipboard.js -> mobsf/DynamicAnalyzer/tools/frida_scripts/android/default/dump_clipboard.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: var string_data;",
          "15: function check_clipboard_data() {",
          "17:     Java.perform(function () {",
          "30:             }",
          "36:     });",
          "37: }",
          "",
          "[Removed Lines]",
          "2: var ActivityThread = Java.use('android.app.ActivityThread');",
          "3: var ClipboardManager = Java.use('android.content.ClipboardManager');",
          "4: var CLIPBOARD_SERVICE = 'clipboard';",
          "6: var currentApplication = ActivityThread.currentApplication();",
          "7: var context = currentApplication.getApplicationContext();",
          "9: var clipboard_handle = context.getApplicationContext().getSystemService(CLIPBOARD_SERVICE);",
          "10: var clipboard = Java.cast(clipboard_handle, ClipboardManager);",
          "19:         var primary_clip = clipboard.getPrimaryClip();",
          "23:         if (primary_clip != null && primary_clip.getItemCount() > 0) {",
          "25:             var data = primary_clip.getItemAt(0).coerceToText(context).toString();",
          "28:             if (string_data == data) {",
          "29:                 return;",
          "33:             string_data = data;",
          "34:             send('mobsf-android-clipboard:' + data);",
          "35:         }",
          "40: setInterval(check_clipboard_data, 1000 * 5);",
          "",
          "[Added Lines]",
          "8:         var ActivityThread = Java.use('android.app.ActivityThread');",
          "9:         var ClipboardManager = Java.use('android.content.ClipboardManager');",
          "10:         var CLIPBOARD_SERVICE = 'clipboard';",
          "12:         var currentApplication = ActivityThread.currentApplication();",
          "13:         var context = currentApplication.getApplicationContext();",
          "15:         var clipboard_handle = context.getApplicationContext().getSystemService(CLIPBOARD_SERVICE);",
          "16:         var clipboard = Java.cast(clipboard_handle, ClipboardManager);",
          "18:         setInterval(function(){",
          "20:             var primary_clip = clipboard.getPrimaryClip();",
          "24:             if (primary_clip != null && primary_clip.getItemCount() > 0) {",
          "26:                 var data = primary_clip.getItemAt(0).coerceToText(context).toString();",
          "29:                 if (string_data == data) {",
          "30:                     return;",
          "31:                 }",
          "34:                 string_data = data;",
          "35:                 send('mobsf-android-clipboard:' + data);",
          "38:         }, 1000 * 5);",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/stop-app-terminate.js||mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/stop-app-terminate.js": [
          "File: mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/stop-app-terminate.js -> mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/stop-app-terminate.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "132:         console.error(e);",
          "133:     }",
          "134: })",
          "167:     var abortPtr = Module.getExportByName('libc.so', 'abort');",
          "168:     var abort = new NativeFunction(abortPtr, 'int', ['int']);",
          "169:     var exitPtr = Module.getExportByName('libc.so', 'exit');",
          "",
          "[Removed Lines]",
          "135: Interceptor.attach(Module.findExportByName(null, \"exit\"), {",
          "136:     onEnter: function(args) {",
          "137:         console.warn(\"Native Exit() Called :-->:\\n\" + Thread.backtrace(this.context, Backtracer.ACCURATE).map(DebugSymbol.fromAddress).join(\"\\n\") + \"\\n\");",
          "138:     },",
          "139:     onLeave: function(retval) {}",
          "140: });",
          "141: Interceptor.attach(Module.findExportByName(null, \"abort\"), {",
          "142:     onEnter: function(args) {",
          "143:         console.warn(\"Native Abort() Called :-->:\\n\" + Thread.backtrace(this.context, Backtracer.ACCURATE).map(DebugSymbol.fromAddress).join(\"\\n\") + \"\\n\");",
          "144:     },",
          "145:     onLeave: function(retval) {}",
          "146: });",
          "147: var fork = Module.findExportByName(null, \"fork\")",
          "148: Interceptor.attach(fork, {",
          "149:     onEnter: function(args) {},",
          "150:     onLeave: function(retval) {",
          "151:         var pid = parseInt(retval.toString(16), 16)",
          "152:         console.log(\"Second Process PID : \", pid)",
          "153:     }",
          "154: })",
          "155: Interceptor.attach(Module.findExportByName(\"libc.so\", \"system\"), {",
          "156:     onEnter: function(args) {",
          "157:         var cmd = Memory.readCString(args[0]);",
          "158:         if (cmd.indexOf(\"kill\") != -1) {",
          "159:             console.log(\"Bypass native system: \" + cmd);",
          "160:             var NewKill = args[0].writeUtf8String(\"bypassed\");",
          "161:             args[0] = ptr(NewKill);",
          "162:         }",
          "163:     },",
          "164:     onLeave: function(retval) {}",
          "165: });",
          "",
          "[Added Lines]",
          "135: try {",
          "136:     Interceptor.attach(Module.findExportByName(null, \"exit\"), {",
          "137:         onEnter: function(args) {",
          "138:             console.warn(\"Native Exit() Called :-->:\\n\" + Thread.backtrace(this.context, Backtracer.ACCURATE).map(DebugSymbol.fromAddress).join(\"\\n\") + \"\\n\");",
          "139:         },",
          "140:         onLeave: function(retval) {}",
          "141:     });",
          "142: } catch (e) {}",
          "143: try {",
          "144:     Interceptor.attach(Module.findExportByName(null, \"abort\"), {",
          "145:         onEnter: function(args) {",
          "146:             console.warn(\"Native Abort() Called :-->:\\n\" + Thread.backtrace(this.context, Backtracer.ACCURATE).map(DebugSymbol.fromAddress).join(\"\\n\") + \"\\n\");",
          "147:         },",
          "148:         onLeave: function(retval) {}",
          "149:     });",
          "150: } catch (e) {}",
          "151: try {",
          "152:     var fork = Module.findExportByName(null, \"fork\")",
          "153:     Interceptor.attach(fork, {",
          "154:         onEnter: function(args) {},",
          "155:         onLeave: function(retval) {",
          "156:             var pid = parseInt(retval.toString(16), 16)",
          "157:             console.log(\"Second Process PID : \", pid)",
          "158:         }",
          "159:     })",
          "160: } catch (e) {}",
          "161: try {",
          "162:     Interceptor.attach(Module.findExportByName(\"libc.so\", \"system\"), {",
          "163:         onEnter: function(args) {",
          "164:             var cmd = Memory.readCString(args[0]);",
          "165:             if (cmd.indexOf(\"kill\") != -1) {",
          "166:                 console.log(\"Bypass native system: \" + cmd);",
          "167:                 var NewKill = args[0].writeUtf8String(\"bypassed\");",
          "168:                 args[0] = ptr(NewKill);",
          "169:             }",
          "170:         },",
          "171:         onLeave: function(retval) {}",
          "172:     });",
          "173: } catch (e) {}",
          "174: try {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "200:         console.log('Shutdown Replaced');",
          "201:         return 0;",
          "202:     }, 'int', ['int', 'int']));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "211: } catch (e) {}",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/default/jailbreak_bypass.js||mobsf/DynamicAnalyzer/tools/frida_scripts/ios/default/jailbreak_bypass.js": [
          "File: mobsf/DynamicAnalyzer/tools/frida_scripts/ios/default/jailbreak_bypass.js -> mobsf/DynamicAnalyzer/tools/frida_scripts/ios/default/jailbreak_bypass.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:     try {",
          "90:         var f = Module.findExportByName(\"libSystem.B.dylib\", \"stat64\");",
          "",
          "[Removed Lines]",
          "1: function bypassJailbreakDetection(){",
          "3:     var paths = [",
          "4:         \"/Applications/blackra1n.app\",",
          "5:         \"/Applications/Cydia.app\",",
          "6:         \"/Applications/FakeCarrier.app\",",
          "7:         \"/Applications/Icy.app\",",
          "8:         \"/Applications/IntelliScreen.app\",",
          "9:         \"/Applications/MxTube.app\",",
          "10:         \"/Applications/RockApp.app\",",
          "11:         \"/Applications/SBSetttings.app\",",
          "12:         \"/Applications/WinterBoard.app\",",
          "13:         \"/bin/bash\",",
          "14:         \"/bin/sh\",",
          "15:         \"/bin/su\",",
          "16:         \"/etc/apt\",",
          "17:         \"/etc/ssh/sshd_config\",",
          "18:         \"/Library/MobileSubstrate/DynamicLibraries/LiveClock.plist\",",
          "19:         \"/Library/MobileSubstrate/DynamicLibraries/Veency.plist\",",
          "20:         \"/Library/MobileSubstrate/MobileSubstrate.dylib\",",
          "21:         \"/pguntether\",",
          "22:         \"/private/var/lib/cydia\",",
          "23:         \"/private/var/mobile/Library/SBSettings/Themes\",",
          "24:         \"/private/var/stash\",",
          "25:         \"/private/var/tmp/cydia.log\",",
          "26:         \"/System/Library/LaunchDaemons/com.ikey.bbot.plist\",",
          "27:         \"/System/Library/LaunchDaemons/com.saurik.Cydia.Startup.plist\",",
          "28:         \"/usr/bin/cycript\",",
          "29:         \"/usr/bin/ssh\",",
          "30:         \"/usr/bin/sshd\",",
          "31:         \"/usr/libexec/sftp-server\",",
          "32:         \"/usr/libexec/ssh-keysign\",",
          "33:         \"/usr/sbin/frida-server\",",
          "34:         \"/usr/sbin/sshd\",",
          "35:         \"/var/cache/apt\",",
          "36:         \"/var/lib/cydia\",",
          "37:         \"/var/log/syslog\",",
          "38:         \"/var/mobile/Media/.evasi0n7_installed\",",
          "39:         \"/var/tmp/cydia.log\",",
          "40:         \"/etc/apt\",",
          "41:         \"/Library/MobileSubstrate/MobileSubstrate.dylib\",",
          "42:         \"/Applications/Cydia.app\",",
          "43:         \"/Applications/blackra1n.app\",",
          "44:         \"/Applications/FakeCarrier.app\",",
          "45:         \"/Applications/Icy.app\",",
          "46:         \"/Applications/IntelliScreen.app\",",
          "47:         \"/Applications/MxTube.app\",",
          "48:         \"/Applications/RockApp.app\",",
          "49:         \"/Applications/SBSetttings.app\",",
          "50:         \"/private/var/lib/apt/\",",
          "51:         \"/Applications/WinterBoard.app\",",
          "52:         \"/usr/sbin/sshd\",",
          "53:         \"/private/var/tmp/cydia.log\",",
          "54:         \"/usr/binsshd\",",
          "55:         \"/usr/libexec/sftp-server\",",
          "56:         \"/Systetem/Library/LaunchDaemons/com.ikey.bbot.plist\",",
          "57:         \"/System/Library/LaunchDaemons/com.saurik.Cy@dia.Startup.plist\",",
          "58:         \"/var/log/syslog\",",
          "59:         \"/bin/bash\",",
          "60:         \"/bin/sh\",",
          "61:         \"/etc/ssh/sshd_config\",",
          "62:         \"/usr/libexec/ssh-keysign\",",
          "63:         \"/Library/MobileSubstrate/DynamicLibraries/Veency.plist\",",
          "64:         \"/System/Library/LaunchDaemons/com.ikey.bbot.plist\",",
          "65:         \"/private/var/stash\",",
          "66:         \"/usr/bin/cycript\",",
          "67:         \"/usr/bin/ssh\",",
          "68:         \"/usr/bin/sshd\",",
          "69:         \"/var/cache/apt\",",
          "70:         \"/var/lib/cydia\",",
          "71:         \"/var/tmp/cydia.log\",",
          "72:         \"/Applications/SBSettings.app\",",
          "73:         \"/Library/MobileSubstrate/DynamicLibraries/LiveClock.plist\",",
          "74:         \"/System/Library/LaunchDaemons/com.saurik.Cydia.Startup.plist\",",
          "75:         \"/private/var/lib/apt\",",
          "76:         \"/private/var/lib/cydia\",",
          "77:         \"/private/var/mobile/Library/SBSettings/Themes\",",
          "78:         \"/var/lib/apt\",",
          "79:         \"/private/jailbreak.txt\",",
          "80:         \"/bin/su\",",
          "81:         \"/pguntether\",",
          "82:         \"/usr/sbin/frida-server\",",
          "83:         \"/private/Jailbreaktest.txt\",",
          "84:         \"/var/mobile/Media/.evasi0n7_installed\",",
          "85:         \"cydia://package/com.example.package\"",
          "86:     ];",
          "",
          "[Added Lines]",
          "1: var paths = [",
          "2:     \"/Applications/blackra1n.app\",",
          "3:     \"/Applications/Cydia.app\",",
          "4:     \"/Applications/FakeCarrier.app\",",
          "5:     \"/Applications/Icy.app\",",
          "6:     \"/Applications/IntelliScreen.app\",",
          "7:     \"/Applications/MxTube.app\",",
          "8:     \"/Applications/RockApp.app\",",
          "9:     \"/Applications/SBSetttings.app\",",
          "10:     \"/Applications/WinterBoard.app\",",
          "11:     \"/bin/bash\",",
          "12:     \"/bin/sh\",",
          "13:     \"/bin/su\",",
          "14:     \"/etc/apt\",",
          "15:     \"/etc/ssh/sshd_config\",",
          "16:     \"/Library/MobileSubstrate/DynamicLibraries/LiveClock.plist\",",
          "17:     \"/Library/MobileSubstrate/DynamicLibraries/Veency.plist\",",
          "18:     \"/Library/MobileSubstrate/MobileSubstrate.dylib\",",
          "19:     \"/pguntether\",",
          "20:     \"/private/var/lib/cydia\",",
          "21:     \"/private/var/mobile/Library/SBSettings/Themes\",",
          "22:     \"/private/var/stash\",",
          "23:     \"/private/var/tmp/cydia.log\",",
          "24:     \"/System/Library/LaunchDaemons/com.ikey.bbot.plist\",",
          "25:     \"/System/Library/LaunchDaemons/com.saurik.Cydia.Startup.plist\",",
          "26:     \"/usr/bin/cycript\",",
          "27:     \"/usr/bin/ssh\",",
          "28:     \"/usr/bin/sshd\",",
          "29:     \"/usr/libexec/sftp-server\",",
          "30:     \"/usr/libexec/ssh-keysign\",",
          "31:     \"/usr/sbin/frida-server\",",
          "32:     \"/usr/sbin/sshd\",",
          "33:     \"/var/cache/apt\",",
          "34:     \"/var/lib/cydia\",",
          "35:     \"/var/log/syslog\",",
          "36:     \"/var/mobile/Media/.evasi0n7_installed\",",
          "37:     \"/var/tmp/cydia.log\",",
          "38:     \"/etc/apt\",",
          "39:     \"/Library/MobileSubstrate/MobileSubstrate.dylib\",",
          "40:     \"/Applications/Cydia.app\",",
          "41:     \"/Applications/blackra1n.app\",",
          "42:     \"/Applications/FakeCarrier.app\",",
          "43:     \"/Applications/Icy.app\",",
          "44:     \"/Applications/IntelliScreen.app\",",
          "45:     \"/Applications/MxTube.app\",",
          "46:     \"/Applications/RockApp.app\",",
          "47:     \"/Applications/SBSetttings.app\",",
          "48:     \"/private/var/lib/apt/\",",
          "49:     \"/Applications/WinterBoard.app\",",
          "50:     \"/usr/sbin/sshd\",",
          "51:     \"/private/var/tmp/cydia.log\",",
          "52:     \"/usr/binsshd\",",
          "53:     \"/usr/libexec/sftp-server\",",
          "54:     \"/Systetem/Library/LaunchDaemons/com.ikey.bbot.plist\",",
          "55:     \"/System/Library/LaunchDaemons/com.saurik.Cy@dia.Startup.plist\",",
          "56:     \"/var/log/syslog\",",
          "57:     \"/bin/bash\",",
          "58:     \"/bin/sh\",",
          "59:     \"/etc/ssh/sshd_config\",",
          "60:     \"/usr/libexec/ssh-keysign\",",
          "61:     \"/Library/MobileSubstrate/DynamicLibraries/Veency.plist\",",
          "62:     \"/System/Library/LaunchDaemons/com.ikey.bbot.plist\",",
          "63:     \"/private/var/stash\",",
          "64:     \"/usr/bin/cycript\",",
          "65:     \"/usr/bin/ssh\",",
          "66:     \"/usr/bin/sshd\",",
          "67:     \"/var/cache/apt\",",
          "68:     \"/var/lib/cydia\",",
          "69:     \"/var/tmp/cydia.log\",",
          "70:     \"/Applications/SBSettings.app\",",
          "71:     \"/Library/MobileSubstrate/DynamicLibraries/LiveClock.plist\",",
          "72:     \"/System/Library/LaunchDaemons/com.saurik.Cydia.Startup.plist\",",
          "73:     \"/private/var/lib/apt\",",
          "74:     \"/private/var/lib/cydia\",",
          "75:     \"/private/var/mobile/Library/SBSettings/Themes\",",
          "76:     \"/var/lib/apt\",",
          "77:     \"/private/jailbreak.txt\",",
          "78:     \"/bin/su\",",
          "79:     \"/pguntether\",",
          "80:     \"/usr/sbin/frida-server\",",
          "81:     \"/private/Jailbreaktest.txt\",",
          "82:     \"/var/mobile/Media/.evasi0n7_installed\",",
          "83:     \"cydia://package/com.example.package\"",
          "84: ];",
          "86: function bypassJailbreakDetection(){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "196:                 },",
          "197:                 onComplete: function() {}",
          "198:             });",
          "200:         }",
          "201:         catch(e) {",
          "203:         }",
          "204:     }",
          "206:     try {",
          "207:         if (ObjC.available) {",
          "208:             bypassJailbreakDetection();",
          "210:             setTimeout(() => {",
          "211:                 bypassJailbreakDetection2();",
          "213:         } else {",
          "214:             send('[Jailbreak Detection Bypass] error: Objective-C Runtime is not available!');",
          "215:         }",
          "",
          "[Removed Lines]",
          "199:             send(\"[Jailbreak Detection Bypass 2] success\");",
          "202:             send('[Jailbreak Detection Bypass 2] script error:' + e.toString());",
          "212:             }, \"1000\");",
          "",
          "[Added Lines]",
          "198:             send(\"[Jailbreak Detection Bypass] success\");",
          "201:             send('[Jailbreak Detection Bypass] script error:' + e.toString());",
          "207:             send('Bypassing Jailbreak detection checks');",
          "212:             }, 1000);",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/data-dir.js||mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/data-dir.js": [
          "File: mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/data-dir.js -> mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/data-dir.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "61: try {",
          "62:     setTimeout(() => {",
          "63:         send(JSON.stringify({'[MBSFDUMP] datadir': getDataProtectionKeysForAllPaths()}));",
          "65: } catch(err) {}",
          "",
          "[Removed Lines]",
          "64:     }, \"2000\");",
          "",
          "[Added Lines]",
          "64:     }, 2000);",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/nslog.js||mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/nslog.js": [
          "File: mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/nslog.js -> mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/nslog.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: }",
          "28: try {",
          "30: } catch(err) {}",
          "31: try {",
          "33: } catch(err) {}",
          "",
          "[Removed Lines]",
          "29:  NSlog();",
          "32:  NSLogv();",
          "",
          "[Added Lines]",
          "29:  setTimeout(() => {",
          "30:   NSlog();",
          "31:  }, 1000);",
          "35:  setTimeout(() => {",
          "36:   NSLogv();",
          "37:  }, 1000);",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/nsuserdefaults.js||mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/nsuserdefaults.js": [
          "File: mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/nsuserdefaults.js -> mobsf/DynamicAnalyzer/tools/frida_scripts/ios/dump/nsuserdefaults.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: try{",
          "31:     setTimeout(() => {",
          "32:         ns_userdefaults();",
          "35: } catch(err) {}",
          "",
          "[Removed Lines]",
          "33:     }, \"2000\");",
          "",
          "[Added Lines]",
          "33:     }, 2000);",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/views/android/frida_core.py||mobsf/DynamicAnalyzer/views/android/frida_core.py": [
          "File: mobsf/DynamicAnalyzer/views/android/frida_core.py -> mobsf/DynamicAnalyzer/views/android/frida_core.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: import logging",
          "5: from pathlib import Path",
          "6: import sys",
          "",
          "[Removed Lines]",
          "1: import io",
          "2: import os",
          "3: import glob",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "21: )",
          "22: from mobsf.MobSF.utils import (",
          "23:     get_device,",
          "25: )",
          "27: logger = logging.getLogger(__name__)",
          "",
          "[Removed Lines]",
          "24:     is_file_exists,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "37:         self.auxiliary = auxiliary",
          "38:         self.extras = extras",
          "39:         self.code = code",
          "50:         combined_script = []",
          "51:         header = []",
          "53:             return header",
          "62:         return header + combined_script",
          "64:     def get_auxiliary(self):",
          "",
          "[Removed Lines]",
          "40:         self.frida_dir = os.path.join(settings.TOOLS_DIR,",
          "41:                                       'frida_scripts', 'android')",
          "42:         self.apk_dir = os.path.join(settings.UPLD_DIR, self.hash + '/')",
          "43:         self.api_mon = os.path.join(self.apk_dir, 'mobsf_api_monitor.txt')",
          "44:         self.frida_log = os.path.join(self.apk_dir, 'mobsf_frida_out.txt')",
          "45:         self.deps = os.path.join(self.apk_dir, 'mobsf_app_deps.txt')",
          "46:         self.clipboard = os.path.join(self.apk_dir, 'mobsf_app_clipboard.txt')",
          "48:     def get_default_scripts(self):",
          "49:         \"\"\"Get default Frida Scripts.\"\"\"",
          "52:         if not self.defaults:",
          "54:         def_scripts = os.path.join(self.frida_dir, 'default')",
          "55:         files = glob.glob(def_scripts + '**/*.js', recursive=True)",
          "56:         for item in files:",
          "57:             script = Path(item)",
          "58:             if script.stem in self.defaults:",
          "59:                 header.append('send(\"Loaded Frida Script - {}\");'.format(",
          "60:                     script.stem))",
          "61:                 combined_script.append(script.read_text())",
          "",
          "[Added Lines]",
          "36:         self.frida_dir = Path(settings.TOOLS_DIR) / 'frida_scripts' / 'android'",
          "37:         self.apk_dir = Path(settings.UPLD_DIR) / self.hash",
          "38:         self.api_mon = self.apk_dir / 'mobsf_api_monitor.txt'",
          "39:         self.frida_log = self.apk_dir / 'mobsf_frida_out.txt'",
          "40:         self.deps = self.apk_dir / 'mobsf_app_deps.txt'",
          "41:         self.clipboard = self.apk_dir / 'mobsf_app_clipboard.txt'",
          "43:     def get_scripts(self, script_type, selected_scripts):",
          "44:         \"\"\"Get Frida Scripts.\"\"\"",
          "47:         if not selected_scripts:",
          "49:         all_scripts = self.frida_dir / script_type",
          "50:         for script in all_scripts.rglob('*.js'):",
          "51:             if '*' in selected_scripts:",
          "52:                 combined_script.append(script.read_text('utf-8', 'ignore'))",
          "53:             if script.stem in selected_scripts:",
          "54:                 header.append(f'send(\"Loaded Frida Script - {script.stem}\");')",
          "55:                 combined_script.append(script.read_text('utf-8', 'ignore'))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "88:         \"\"\"Get final script.\"\"\"",
          "89:         if not self.code:",
          "90:             self.code = ''",
          "91:         # Load custom code first",
          "92:         scripts = [self.code]",
          "94:         scripts.extend(self.get_auxiliary())",
          "95:         combined = '\\n'.join(scripts)",
          "97:         return final",
          "99:     def frida_response(self, message, data):",
          "",
          "[Removed Lines]",
          "93:         scripts.extend(self.get_default_scripts())",
          "96:         final = f'setTimeout(function() {{ \\n{combined}\\n}}, 1000)'",
          "",
          "[Added Lines]",
          "85:         rpc_list = []",
          "88:         scripts.extend(self.get_scripts('default', self.defaults))",
          "89:         rpc_list.extend(self.get_scripts('rpc', ['*']))",
          "91:         rpc_script = ','.join(rpc_list)",
          "92:         rpc = f'rpc.exports = {{ \\n{rpc_script}\\n }};'",
          "94:         final = f'{rpc}\\n setTimeout(function() {{ \\n{combined}\\n }}, 1000)'",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "112:                 msg = msg.replace(clip, '')",
          "113:                 self.write_log(self.clipboard, f'{msg}\\n')",
          "114:             elif msg.startswith(deps):",
          "118:             elif msg.startswith(aux):",
          "121:             else:",
          "122:                 logger.debug('[Frida] %s', msg)",
          "124:         else:",
          "125:             logger.error('[Frida] %s', message)",
          "",
          "[Removed Lines]",
          "115:                 info = msg.replace(deps, '') + '\\n'",
          "116:                 self.write_log(self.deps, info)",
          "117:                 self.write_log(self.frida_log, info)",
          "119:                 self.write_log(self.frida_log,",
          "120:                                msg.replace(aux, '[*] ') + '\\n')",
          "123:                 self.write_log(self.frida_log, msg + '\\n')",
          "",
          "[Added Lines]",
          "113:                 info = msg.replace(deps, '')",
          "114:                 self.write_log(self.deps, f'{info}\\n')",
          "115:                 self.write_log(self.frida_log, f'{info}\\n')",
          "117:                 msg = msg.replace(aux, '[*] ')",
          "118:                 self.write_log(self.frida_log, f'{msg}\\n')",
          "121:                 self.write_log(self.frida_log, f'{msg}\\n')",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "165:                 if pid and package:",
          "166:                     _FPID = pid",
          "167:                     self.package = package",
          "168:                 session = device.attach(_FPID)",
          "169:                 time.sleep(2)",
          "170:             except frida.NotSupportedError:",
          "171:                 logger.exception('Not Supported Error')",
          "172:                 return",
          "173:             except Exception:",
          "175:                 self.spawn()",
          "176:                 session = device.attach(_FPID)",
          "177:                 time.sleep(2)",
          "",
          "[Removed Lines]",
          "174:                 logger.warning('Cannot attach to pid, spawning again')",
          "",
          "[Added Lines]",
          "166:                 try:",
          "167:                     front = device.get_frontmost_application()",
          "168:                     if front and front.pid != _FPID:",
          "169:                         # Not the front most app.",
          "170:                         # Get the pid of the front most app",
          "171:                         logger.warning('Front most app has PID %s', front.pid)",
          "172:                         _FPID = front.pid",
          "173:                 except Exception:",
          "174:                     pass",
          "175:                 # pid is the fornt most app",
          "182:                 logger.exception('Cannot attach to pid, spawning again')",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "179:                 script = session.create_script(self.get_script())",
          "180:                 script.on('message', self.frida_response)",
          "181:                 script.load()",
          "182:                 sys.stdin.read()",
          "183:                 script.unload()",
          "184:                 session.detach()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "190:                 api = script.exports_sync",
          "191:                 self.api_handler(api)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "212:             logger.exception('Failed to enumerate running applications')",
          "213:         return ps_dict",
          "215:     def clean_up(self):",
          "223:     def write_log(self, file_path, data):",
          "229:             flip.write(data)",
          "",
          "[Removed Lines]",
          "216:         if is_file_exists(self.api_mon):",
          "217:             os.remove(self.api_mon)",
          "218:         if is_file_exists(self.frida_log):",
          "219:             os.remove(self.frida_log)",
          "220:         if is_file_exists(self.clipboard):",
          "221:             os.remove(self.clipboard)",
          "224:         with io.open(",
          "225:                 file_path,",
          "226:                 'a',",
          "227:                 encoding='utf-8',",
          "228:                 errors='replace') as flip:",
          "",
          "[Added Lines]",
          "225:     def api_handler(self, api):",
          "226:         \"\"\"Call Frida rpc functions.\"\"\"",
          "227:         loaded_classes = []",
          "228:         loaded_class_methods = []",
          "229:         implementations = []",
          "230:         try:",
          "231:             raction = self.extras.get('rclass_action')",
          "232:             rclass = self.extras.get('rclass_name')",
          "233:             rclass_pattern = self.extras.get('rclass_pattern')",
          "234:             rmethod = self.extras.get('rmethod_name')",
          "235:             rmethod_pattern = self.extras.get('rmethod_pattern')",
          "236:             if raction == 'raction':",
          "237:                 loaded_classes = api.getLoadedClasses()",
          "238:             elif raction == 'getclasses' and rclass_pattern:",
          "239:                 loaded_classes = api.getLoadedClasses(f'/{rclass_pattern}/i')",
          "240:             elif raction == 'getmethods' and rclass and rmethod:",
          "241:                 loaded_class_methods = api.getMethods(rclass)",
          "242:             elif raction == 'getmethods' and rclass and rmethod_pattern:",
          "243:                 loaded_class_methods = api.getMethods(",
          "244:                     rclass,",
          "245:                     f'/{rmethod_pattern}/i')",
          "246:             elif raction == 'getimplementations' and rclass and rmethod:",
          "247:                 implementations = api.getImplementations(rclass, rmethod)",
          "248:         except Exception:",
          "249:             logger.exception('Error while calling Frida RPC functions')",
          "250:         if loaded_classes:",
          "251:             rpc_classes = self.apk_dir / 'mobsf_rpc_classes.txt'",
          "252:             loaded_classes = sorted(loaded_classes)",
          "253:             rpc_classes.write_text('\\n'.join(",
          "254:                 loaded_classes), 'utf-8')",
          "255:         if loaded_class_methods:",
          "256:             rpc_methods = self.apk_dir / 'mobsf_rpc_methods.txt'",
          "257:             loaded_class_methods = sorted(loaded_class_methods)",
          "258:             rpc_methods.write_text('\\n'.join(",
          "259:                 loaded_class_methods), 'utf-8')",
          "260:         if implementations:",
          "261:             implementations = sorted(implementations)",
          "262:             rpc_impl = self.apk_dir / 'mobsf_rpc_impl.txt'",
          "263:             rpc_impl.write_text('\\n'.join(",
          "264:                 implementations), 'utf-8')",
          "267:         if self.api_mon.exists():",
          "268:             self.api_mon.unlink()",
          "269:         if self.frida_log.exists():",
          "270:             self.frida_log.unlink()",
          "271:         if self.clipboard.exists():",
          "272:             self.clipboard.unlink()",
          "275:         with file_path.open('a',",
          "276:                             encoding='utf-8',",
          "277:                             errors='replace') as flip:",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/views/android/tests_frida.py||mobsf/DynamicAnalyzer/views/android/tests_frida.py": [
          "File: mobsf/DynamicAnalyzer/views/android/tests_frida.py -> mobsf/DynamicAnalyzer/views/android/tests_frida.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "163:         return print_n_send_error_response(request, err, api)",
          "204: def decode_base64(data, altchars=b'+/'):",
          "205:     \"\"\"Decode base64, padding being optional.",
          "",
          "[Removed Lines]",
          "166: def frida_logs(request, api=False):",
          "167:     try:",
          "168:         if api:",
          "169:             apphash = request.POST['hash']",
          "170:             stream = True",
          "171:         else:",
          "172:             apphash = request.GET.get('hash', '')",
          "173:             stream = request.GET.get('stream', '')",
          "174:         if not is_md5(apphash):",
          "175:             return invalid_params(api)",
          "176:         if stream:",
          "177:             apk_dir = os.path.join(settings.UPLD_DIR, apphash + '/')",
          "178:             frida_logs = os.path.join(apk_dir, 'mobsf_frida_out.txt')",
          "179:             data = {}",
          "180:             if not is_file_exists(frida_logs):",
          "181:                 data = {",
          "182:                     'status': 'failed',",
          "183:                     'message': 'Data does not exist.'}",
          "184:                 return send_response(data, api)",
          "185:             with open(frida_logs, 'r',",
          "186:                       encoding='utf8',",
          "187:                       errors='ignore') as flip:",
          "188:                 data = {'data': flip.read()}",
          "189:             return send_response(data, api)",
          "190:         logger.info('Frida Logs live streaming')",
          "191:         template = 'dynamic_analysis/android/frida_logs.html'",
          "192:         return render(request,",
          "193:                       template,",
          "194:                       {'hash': apphash,",
          "195:                        'package': request.GET.get('package', ''),",
          "196:                        'version': settings.MOBSF_VER,",
          "197:                        'title': 'Live Frida logs'})",
          "198:     except Exception:",
          "199:         logger.exception('Frida log streaming')",
          "200:         err = 'Error in Frida log streaming'",
          "201:         return print_n_send_error_response(request, err, api)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/views/common/frida.py||mobsf/DynamicAnalyzer/views/common/frida.py": [
          "File: mobsf/DynamicAnalyzer/views/common/frida.py -> mobsf/DynamicAnalyzer/views/common/frida.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: \"\"\"Shared Frida Views.\"\"\"",
          "2: import glob",
          "3: import os",
          "4: from pathlib import Path",
          "6: from django.conf import settings",
          "7: from django.views.decorators.http import require_http_methods",
          "9: from mobsf.DynamicAnalyzer.views.common.shared import (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: import logging",
          "8: from django.shortcuts import render",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11: )",
          "12: from mobsf.MobSF.utils import (",
          "13:     is_file_exists,",
          "14:     is_safe_path,",
          "15: )",
          "16: # AJAX",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16:     is_md5,",
          "18:     print_n_send_error_response,",
          "22: logger = logging.getLogger(__name__)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "65:     except Exception:",
          "66:         pass",
          "67:     return send_response(data, api)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77: # AJAX + HTML",
          "80: def frida_logs(request, api=False):",
          "81:     try:",
          "82:         data = {",
          "83:             'status': 'failed',",
          "84:             'message': 'Data does not exist.'}",
          "85:         if api:",
          "86:             apphash = request.POST['hash']",
          "87:             stream = True",
          "88:         else:",
          "89:             apphash = request.GET.get('hash', '')",
          "90:             stream = request.GET.get('stream', '')",
          "91:         if not is_md5(apphash):",
          "92:             data['message'] = 'Invalid hash'",
          "93:             return send_response(data, api)",
          "94:         if stream:",
          "95:             apk_dir = os.path.join(settings.UPLD_DIR, apphash + '/')",
          "96:             frida_logs = os.path.join(apk_dir, 'mobsf_frida_out.txt')",
          "97:             if not is_file_exists(frida_logs):",
          "98:                 return send_response(data, api)",
          "99:             with open(frida_logs, 'r',",
          "100:                       encoding='utf8',",
          "101:                       errors='ignore') as flip:",
          "102:                 data = {",
          "103:                     'status': 'ok',",
          "104:                     'message': flip.read(),",
          "105:                 }",
          "106:             return send_response(data, api)",
          "107:         logger.info('Frida Logs live streaming')",
          "108:         template = 'dynamic_analysis/android/frida_logs.html'",
          "109:         return render(request,",
          "110:                       template,",
          "111:                       {'hash': apphash,",
          "112:                        'package': request.GET.get('package', ''),",
          "113:                        'version': settings.MOBSF_VER,",
          "114:                        'title': 'Live Frida logs'})",
          "115:     except Exception:",
          "116:         logger.exception('Frida log streaming')",
          "117:         err = 'Error in Frida log streaming'",
          "118:         return print_n_send_error_response(request, err, api)",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/views/ios/corellium_apis.py||mobsf/DynamicAnalyzer/views/ios/corellium_apis.py": [
          "File: mobsf/DynamicAnalyzer/views/ios/corellium_apis.py -> mobsf/DynamicAnalyzer/views/ios/corellium_apis.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "263:     def screenshot(self):",
          "264:         \"\"\"Take screenshot inside VM.\"\"\"",
          "272:         return False",
          "274:     def start_network_capture(self):",
          "",
          "[Removed Lines]",
          "265:         r = requests.get(",
          "266:             f'{self.api}/instances/{self.instance_id}/screenshot.png?scale=1',",
          "267:             headers=self.headers,",
          "268:             stream=True)",
          "269:         if r.status_code == 200:",
          "270:             return r.content",
          "271:         logger.error('Failed to take a screenshot. %s', r.json()['error'])",
          "",
          "[Added Lines]",
          "265:         r = None",
          "266:         err = ''",
          "267:         try:",
          "268:             r = requests.get(",
          "269:                 (f'{self.api}/instances/{self.instance_id}'",
          "270:                  '/screenshot.png?scale=1'),",
          "271:                 headers=self.headers,",
          "272:                 stream=True)",
          "273:             if r.status_code == 200:",
          "274:                 return r.content",
          "275:         except Exception:",
          "276:             if r and r.json().get('error'):",
          "277:                 err = r.json()['error']",
          "278:             logger.error('Failed to take a screenshot. %s', err)",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/views/ios/corellium_instance.py||mobsf/DynamicAnalyzer/views/ios/corellium_instance.py": [
          "File: mobsf/DynamicAnalyzer/views/ios/corellium_instance.py -> mobsf/DynamicAnalyzer/views/ios/corellium_instance.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "719:         'message': '',",
          "720:     }",
          "721:     try:",
          "726:         max_x = request.POST.get('max_x', 0)",
          "727:         max_y = request.POST.get('max_y', 0)",
          "",
          "[Removed Lines]",
          "722:         x_axis = request.POST['x']",
          "723:         y_axis = request.POST['y']",
          "724:         event = request.POST['event']",
          "",
          "[Added Lines]",
          "722:         x_axis = request.POST.get('x')",
          "723:         y_axis = request.POST.get('y')",
          "724:         event = request.POST.get('event')",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/views/ios/frida_core.py||mobsf/DynamicAnalyzer/views/ios/frida_core.py": [
          "File: mobsf/DynamicAnalyzer/views/ios/frida_core.py -> mobsf/DynamicAnalyzer/views/ios/frida_core.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "168:                 return",
          "169:             except frida.ServerNotRunningError:",
          "170:                 self.frida_ssh_forward()",
          "171:             if not _PID:",
          "172:                 _PID = frida.get_remote_device().spawn([self.bundle_id])",
          "173:             logger.info('Spawning %s', self.bundle_id)",
          "174:             time.sleep(2)",
          "175:         except frida.TimedOutError:",
          "176:             logger.error('Timed out while waiting for device to appear')",
          "177:         except frida.NotSupportedError:",
          "178:             logger.error(self.not_supported_text)",
          "179:             return",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "171:                 _PID = None",
          "178:         except frida.ServerNotRunningError:",
          "179:             logger.error('Frida Server is not running')",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "194:                 if pid and bundle_id:",
          "195:                     _PID = pid",
          "196:                     self.bundle_id = bundle_id",
          "204:                 session = device.attach(_PID)",
          "205:             except frida.NotSupportedError:",
          "206:                 logger.error(self.not_supported_text)",
          "207:                 return",
          "208:             except Exception:",
          "210:                 self.spawn()",
          "211:                 session = device.attach(_PID)",
          "212:             if session and device and _PID:",
          "",
          "[Removed Lines]",
          "197:                 front = device.get_frontmost_application()",
          "198:                 if not front or front.pid != _PID:",
          "199:                     # No front most app, spawn the app or",
          "200:                     # pid is not the front most app",
          "201:                     _PID = device.spawn([self.bundle_id])",
          "202:                     logger.info('Spawning %s', self.bundle_id)",
          "203:                 # pid is the fornt most app",
          "209:                 logger.warning('Cannot attach to pid, spawning again')",
          "",
          "[Added Lines]",
          "200:                 try:",
          "201:                     front = device.get_frontmost_application()",
          "202:                     if front or front.pid != _PID:",
          "203:                         # Not the front most app.",
          "204:                         # Get the pid of the front most app",
          "205:                         logger.warning('Front most app has PID %s', front.pid)",
          "206:                         _PID = front.pid",
          "207:                 except Exception:",
          "208:                     pass",
          "214:                 logger.warning('Cannot attach to pid, spawning again.')",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "215:                 script.load()",
          "216:                 api = script.exports_sync",
          "217:                 device.resume(_PID)",
          "220:                 sys.stdin.read()",
          "221:                 script.unload()",
          "222:                 session.detach()",
          "",
          "[Removed Lines]",
          "218:                 self.app_container = api.get_container()",
          "219:                 self.container_file.write_text(self.app_container)",
          "",
          "[Added Lines]",
          "223:                 self.api_handler(api)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "253:             logger.exception('Failed to enumerate running applications')",
          "254:         return ps_dict",
          "256:     def clean_up(self):",
          "257:         if self.frida_log.exists():",
          "258:             self.frida_log.unlink()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "260:     def api_handler(self, api):",
          "261:         \"\"\"Call Frida rpc functions.\"\"\"",
          "262:         loaded_classes = []",
          "263:         loaded_class_methods = []",
          "264:         implementations = []",
          "265:         try:",
          "266:             try:",
          "267:                 self.app_container = api.get_container()",
          "268:                 self.container_file.write_text(self.app_container)",
          "269:             except frida.InvalidOperationError:",
          "270:                 pass",
          "271:             raction = self.extras.get('rclass_action')",
          "272:             rclass = self.extras.get('rclass_name')",
          "273:             rclass_pattern = self.extras.get('rclass_pattern')",
          "274:             rmethod = self.extras.get('rmethod_name')",
          "275:             rmethod_pattern = self.extras.get('rmethod_pattern')",
          "276:             if raction == 'raction':",
          "277:                 loaded_classes = api.getLoadedClasses()",
          "278:             elif raction == 'getclasses' and rclass_pattern:",
          "279:                 loaded_classes = api.getLoadedClasses(f'/{rclass_pattern}/i')",
          "280:             elif raction == 'getmethods' and rclass and rmethod:",
          "281:                 loaded_class_methods = api.getMethods(rclass)",
          "282:             elif raction == 'getmethods' and rclass and rmethod_pattern:",
          "283:                 loaded_class_methods = api.getMethods(",
          "284:                     rclass,",
          "285:                     f'/{rmethod_pattern}/i')",
          "286:             elif raction == 'getimplementations' and rclass and rmethod:",
          "287:                 implementations = api.getImplementations(rclass, rmethod)",
          "288:         except Exception:",
          "289:             logger.exception('Error while calling Frida RPC functions')",
          "290:         if loaded_classes:",
          "291:             loaded_classes = sorted(loaded_classes)",
          "292:             rpc_classes = self.ipa_dir / 'mobsf_rpc_classes.txt'",
          "293:             rpc_classes.write_text('\\n'.join(",
          "294:                 loaded_classes), 'utf-8')",
          "295:         if loaded_class_methods:",
          "296:             loaded_class_methods = sorted(loaded_class_methods)",
          "297:             rpc_methods = self.ipa_dir / 'mobsf_rpc_methods.txt'",
          "298:             rpc_methods.write_text('\\n'.join(",
          "299:                 loaded_class_methods), 'utf-8')",
          "300:         if implementations:",
          "301:             implementations = sorted(implementations)",
          "302:             rpc_impl = self.ipa_dir / 'mobsf_rpc_impl.txt'",
          "303:             rpc_impl.write_text('\\n'.join(",
          "304:                 implementations), 'utf-8')",
          "",
          "---------------"
        ],
        "mobsf/MobSF/init.py||mobsf/MobSF/init.py": [
          "File: mobsf/MobSF/init.py -> mobsf/MobSF/init.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: logger = logging.getLogger(__name__)",
          "14: BANNER = \"\"\"",
          "15:   __  __       _    ____  _____       _____  ___",
          "16:  |  \\/  | ___ | |__/ ___||  ___|_   _|___ / ( _ )",
          "",
          "[Removed Lines]",
          "13: VERSION = '3.8.4'",
          "",
          "[Added Lines]",
          "13: VERSION = '3.8.5'",
          "",
          "---------------"
        ],
        "mobsf/MobSF/urls.py||mobsf/MobSF/urls.py": [
          "File: mobsf/MobSF/urls.py -> mobsf/MobSF/urls.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "194:                 tests_frida.live_api,",
          "195:                 name='live_api'),",
          "196:         re_path(r'^frida_logs/$',",
          "198:                 name='frida_logs'),",
          "199:         re_path(r'^get_dependencies/$', tests_frida.get_runtime_dependencies),",
          "200:         # Report",
          "",
          "[Removed Lines]",
          "197:                 tests_frida.frida_logs,",
          "",
          "[Added Lines]",
          "197:                 frida.frida_logs,",
          "",
          "---------------"
        ],
        "mobsf/MobSF/utils.py||mobsf/MobSF/utils.py": [
          "File: mobsf/MobSF/utils.py -> mobsf/MobSF/utils.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "230: def is_number(s):",
          "231:     if s == 'NaN':",
          "232:         return False",
          "233:     try:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "231:     if not s:",
          "232:         return False",
          "",
          "---------------"
        ],
        "mobsf/MobSF/views/api/api_dynamic_analysis.py||mobsf/MobSF/views/api/api_dynamic_analysis.py": [
          "File: mobsf/MobSF/views/api/api_dynamic_analysis.py -> mobsf/MobSF/views/api/api_dynamic_analysis.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "222:     if 'hash' not in request.POST:",
          "223:         return make_api_response(",
          "224:             {'error': 'Missing Parameters'}, 422)",
          "226:     # frida logs can be json or html",
          "227:     if resp.get('data'):",
          "228:         return make_api_response(resp, 200)",
          "",
          "[Removed Lines]",
          "225:     resp = tests_frida.frida_logs(request, True)",
          "",
          "[Added Lines]",
          "225:     resp = frida.frida_logs(request, True)",
          "",
          "---------------"
        ],
        "mobsf/static/others/css/terminal.css||mobsf/static/others/css/terminal.css": [
          "File: mobsf/static/others/css/terminal.css -> mobsf/static/others/css/terminal.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: output {",
          "6:   color: #d2d2d2;",
          "7: }",
          "",
          "[Removed Lines]",
          "2: ::selection {",
          "3:   background: #FF5E99;",
          "4: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "mobsf/static/terminal/terminal.css||mobsf/static/terminal/terminal.css": [
          "File: mobsf/static/terminal/terminal.css -> mobsf/static/terminal/terminal.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "mobsf/templates/dynamic_analysis/android/dynamic_analyzer.html||mobsf/templates/dynamic_analysis/android/dynamic_analyzer.html": [
          "File: mobsf/templates/dynamic_analysis/android/dynamic_analyzer.html -> mobsf/templates/dynamic_analysis/android/dynamic_analyzer.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "241:                       <!-- /.box-body -->",
          "242:                       <div class=\"box-footer\">",
          "243:                         <button id=\"frida_spawn\" type=\"submit\" class=\"btn btn-success btn-sm\"><i class=\"far fa-play-circle\"></i> Spawn & Inject</button>",
          "245:                         <button id=\"frida_attach\" type=\"submit\" class=\"btn btn-success btn-sm\"><i class=\"fas fa-bug\"></i> Attach </button>",
          "246:                         <button id=\"frida_get\" class=\"btn btn-primary btn-sm\" hidden><i class=\"fas fa-code\"></i> Injected Code</button>",
          "247:                       </div>",
          "",
          "[Removed Lines]",
          "244:                         <button id=\"frida_session\" type=\"submit\" class=\"btn btn-success btn-sm\"><i class=\"fas fa-redo\"></i> Inject </button>",
          "",
          "[Added Lines]",
          "244:                         <button id=\"frida_session\" type=\"submit\" class=\"btn btn-success btn-sm\" disabled><i class=\"fas fa-redo\"></i> Inject </button>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "848: function get_logs(){",
          "849:       $.ajax({",
          "851:         type : \"GET\",",
          "852:         dataType: \"json\",",
          "853:         success : function(json){",
          "855:         },",
          "856:         error : function(xhr, ajaxOptions, thrownError) {",
          "857:           console.log(xhr.responseText);",
          "",
          "[Removed Lines]",
          "850:         url : '/frida_logs/?hash={{ hash }}&stream=1',",
          "854:             $('#frida-logs').text(json.data);",
          "",
          "[Added Lines]",
          "850:         url : '{% url 'frida_logs' %}?hash={{ hash }}&stream=1',",
          "854:           if (json.status===\"ok\"){",
          "855:             $('#frida-logs').text(json.message);",
          "856:           } else {",
          "857:             $('#frida-logs').text('')",
          "858:           }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1232:     });",
          "1234:     if (frida_action === 'spawn'){",
          "1235:       print_status(\"Instrumenting the application with Frida.\");",
          "1236:     } else if (frida_action === 'session' && pid === null){",
          "1237:       print_status(\"Injecting Frida script to existing session.\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1239:       document.getElementById('frida_session').disabled = false;",
          "",
          "---------------"
        ],
        "mobsf/templates/dynamic_analysis/android/frida_logs.html||mobsf/templates/dynamic_analysis/android/frida_logs.html": [
          "File: mobsf/templates/dynamic_analysis/android/frida_logs.html -> mobsf/templates/dynamic_analysis/android/frida_logs.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:             type : \"GET\",",
          "32:             dataType: \"json\",",
          "33:             success : function(json){",
          "35:             },",
          "36:             error : function(xhr, ajaxOptions, thrownError) {",
          "37:               console.log(xhr.responseText);",
          "",
          "[Removed Lines]",
          "34:                 $('#logs').text(json.data);",
          "",
          "[Added Lines]",
          "34:                 $('#logs').text(json.message);",
          "",
          "---------------"
        ],
        "mobsf/templates/dynamic_analysis/ios/dynamic_analysis.html||mobsf/templates/dynamic_analysis/ios/dynamic_analysis.html": [
          "File: mobsf/templates/dynamic_analysis/ios/dynamic_analysis.html -> mobsf/templates/dynamic_analysis/ios/dynamic_analysis.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "802:                           'IPA Installed',",
          "803:                           'The IPA is successfully installed',",
          "804:                           'success'",
          "808:                       }",
          "809:                   },",
          "810:                   error : function(xhr,errmsg,err) {",
          "",
          "[Removed Lines]",
          "805:                           ).then(function () {",
          "806:                               location.reload();",
          "807:                           })",
          "",
          "[Added Lines]",
          "805:                           );",
          "806:                         location.reload();",
          "",
          "---------------"
        ],
        "mobsf/templates/dynamic_analysis/ios/dynamic_analyzer.html||mobsf/templates/dynamic_analysis/ios/dynamic_analyzer.html": [
          "File: mobsf/templates/dynamic_analysis/ios/dynamic_analyzer.html -> mobsf/templates/dynamic_analysis/ios/dynamic_analyzer.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "280:                       <div class=\"box-footer\">",
          "281:                       <button id=\"run\" type=\"submit\" class=\"btn btn-success btn-sm\"><i class=\"fas fa-play\"></i> Run</button>",
          "282:                       <button id=\"frida_spawn\" type=\"submit\" class=\"btn btn-success btn-sm\"><i class=\"far fa-play-circle\"></i> Spawn & Inject</button>",
          "284:                       <button id=\"frida_attach\" type=\"submit\" class=\"btn btn-success btn-sm\"><i class=\"fas fa-bug\"></i> Attach </button>",
          "285:                       <button id=\"frida_get\" class=\"btn btn-primary btn-sm\" hidden><i class=\"fas fa-code\"></i> Injected Code</button>",
          "286:                     </div>",
          "",
          "[Removed Lines]",
          "283:                       <button id=\"frida_session\" type=\"submit\" class=\"btn btn-success btn-sm\"><i class=\"fas fa-redo\"></i> Inject </button>",
          "",
          "[Added Lines]",
          "283:                       <button id=\"frida_session\" type=\"submit\" class=\"btn btn-success btn-sm\" disabled><i class=\"fas fa-redo\"></i> Inject </button>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "775: setInterval( function () {",
          "776:   $.ajax({",
          "778:       type : \"GET\",",
          "779:       dataType: \"json\",",
          "780:       success : function(json){",
          "782:       },",
          "783:       error : function(xhr, ajaxOptions, thrownError) {",
          "784:         console.log(xhr.responseText);",
          "",
          "[Removed Lines]",
          "777:       url : '/frida_logs/?hash={{ hash }}&stream=1',",
          "781:           $('#frida-logs').text(json.data);",
          "",
          "[Added Lines]",
          "777:       url : '{% url 'frida_logs' %}?hash={{ hash }}&stream=1',",
          "781:          if (json.status===\"ok\"){",
          "782:             $('#frida-logs').text(json.message);",
          "783:           } else {",
          "784:             $('#frida-logs').text('')",
          "785:           }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1077:     });",
          "1079:     if (frida_action === 'spawn'){",
          "1080:       print_status(\"Instrumenting the application with Frida.\");",
          "1081:     } else if (frida_action === 'session' && pid === null){",
          "1082:       print_status(\"Injecting Frida script to existing session.\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1084:       document.getElementById('frida_session').disabled = false;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2e6c6c59d70c589f76e1e833f517866a983ac81d",
      "candidate_info": {
        "commit_hash": "2e6c6c59d70c589f76e1e833f517866a983ac81d",
        "repo": "MobSF/Mobile-Security-Framework-MobSF",
        "commit_url": "https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/2e6c6c59d70c589f76e1e833f517866a983ac81d",
        "files": [
          ".pyup.yml",
          "README.md",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/default/dump_clipboard.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/default/root_bypass.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/app-environment.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/crypto-aes-key.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/crypto-dump-keystore.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/crypto-keyguard-credential-intent.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/crypto-trace-cipher.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/crypto-trace-keygenparameterspec.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/crypto-trace-keystore.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/crypto-trace-secretkeyfactory.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/device-android-id.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/device-environment.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/dump-inputstream.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/dump-intent.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/helper-bypass-method.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/helper-convert.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/helper-jni-hook-by-address.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/helper-trace-jni.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/hook-constructor.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/hook-java-reflection.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/trace-file.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/ui-bypass-flag-secure.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/ui-fingerprint-bypass-via-exception-handling.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/ui-fingerprint-bypass.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/ui-webview-enable-debugging.js",
          "mobsf/DynamicAnalyzer/tools/onDevice/xposed/ClipDump.apk",
          "mobsf/DynamicAnalyzer/views/android/analysis.py",
          "mobsf/DynamicAnalyzer/views/android/dynamic_analyzer.py",
          "mobsf/DynamicAnalyzer/views/android/environment.py",
          "mobsf/DynamicAnalyzer/views/android/frida_core.py",
          "mobsf/DynamicAnalyzer/views/android/operations.py",
          "mobsf/DynamicAnalyzer/views/android/tests_frida.py",
          "mobsf/DynamicAnalyzer/views/android/tests_tls.py",
          "mobsf/DynamicAnalyzer/views/ios/corellium_apis.py",
          "mobsf/DynamicAnalyzer/views/ios/corellium_instance.py",
          "mobsf/DynamicAnalyzer/views/ios/frida_core.py",
          "mobsf/DynamicAnalyzer/views/ios/tests_frida.py",
          "mobsf/MobSF/init.py",
          "mobsf/MobSF/urls.py",
          "mobsf/MobSF/utils.py",
          "mobsf/templates/dynamic_analysis/android/dynamic_analysis.html",
          "mobsf/templates/dynamic_analysis/android/dynamic_analyzer.html",
          "mobsf/templates/dynamic_analysis/ios/dynamic_analysis.html",
          "mobsf/templates/dynamic_analysis/ios/dynamic_analyzer.html",
          "pyproject.toml"
        ],
        "message": "HOTFIX: Dynamic Analysis Improvements Android & iOS (#2295)\n\niOS Screencast, better swipe\nAndroid Screencast to support touch, swipe and text input events\nAndroid Frida Logs update\nAndroid Improved Screencast\nAndroid Frida spawn, inject and attach support\nAdded new Android Frida scripts\nReplaced Clipdump with Frida script for clipboard monitoring",
        "before_after_code_files": [
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/default/dump_clipboard.js||mobsf/DynamicAnalyzer/tools/frida_scripts/android/default/dump_clipboard.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/default/root_bypass.js||mobsf/DynamicAnalyzer/tools/frida_scripts/android/default/root_bypass.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/app-environment.js||mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/app-environment.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/crypto-dump-keystore.js||mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/crypto-dump-keystore.js",
          "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/device-environment.js||mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/device-environment.js",
          "mobsf/DynamicAnalyzer/views/android/analysis.py||mobsf/DynamicAnalyzer/views/android/analysis.py",
          "mobsf/DynamicAnalyzer/views/android/dynamic_analyzer.py||mobsf/DynamicAnalyzer/views/android/dynamic_analyzer.py",
          "mobsf/DynamicAnalyzer/views/android/environment.py||mobsf/DynamicAnalyzer/views/android/environment.py",
          "mobsf/DynamicAnalyzer/views/android/frida_core.py||mobsf/DynamicAnalyzer/views/android/frida_core.py",
          "mobsf/DynamicAnalyzer/views/android/operations.py||mobsf/DynamicAnalyzer/views/android/operations.py",
          "mobsf/DynamicAnalyzer/views/android/tests_frida.py||mobsf/DynamicAnalyzer/views/android/tests_frida.py",
          "mobsf/DynamicAnalyzer/views/android/tests_tls.py||mobsf/DynamicAnalyzer/views/android/tests_tls.py",
          "mobsf/DynamicAnalyzer/views/ios/corellium_apis.py||mobsf/DynamicAnalyzer/views/ios/corellium_apis.py",
          "mobsf/DynamicAnalyzer/views/ios/corellium_instance.py||mobsf/DynamicAnalyzer/views/ios/corellium_instance.py",
          "mobsf/DynamicAnalyzer/views/ios/frida_core.py||mobsf/DynamicAnalyzer/views/ios/frida_core.py",
          "mobsf/DynamicAnalyzer/views/ios/tests_frida.py||mobsf/DynamicAnalyzer/views/ios/tests_frida.py",
          "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
          "mobsf/MobSF/urls.py||mobsf/MobSF/urls.py",
          "mobsf/MobSF/utils.py||mobsf/MobSF/utils.py",
          "mobsf/templates/dynamic_analysis/android/dynamic_analysis.html||mobsf/templates/dynamic_analysis/android/dynamic_analysis.html",
          "mobsf/templates/dynamic_analysis/android/dynamic_analyzer.html||mobsf/templates/dynamic_analysis/android/dynamic_analyzer.html",
          "mobsf/templates/dynamic_analysis/ios/dynamic_analysis.html||mobsf/templates/dynamic_analysis/ios/dynamic_analysis.html",
          "mobsf/templates/dynamic_analysis/ios/dynamic_analyzer.html||mobsf/templates/dynamic_analysis/ios/dynamic_analyzer.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
            "mobsf/MobSF/utils.py||mobsf/MobSF/utils.py"
          ],
          "candidate": [
            "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
            "mobsf/MobSF/utils.py||mobsf/MobSF/utils.py"
          ]
        }
      },
      "candidate_diff": {
        "mobsf/DynamicAnalyzer/tools/frida_scripts/android/default/dump_clipboard.js||mobsf/DynamicAnalyzer/tools/frida_scripts/android/default/dump_clipboard.js": [
          "File: mobsf/DynamicAnalyzer/tools/frida_scripts/android/default/dump_clipboard.js -> mobsf/DynamicAnalyzer/tools/frida_scripts/android/default/dump_clipboard.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: var ActivityThread = Java.use('android.app.ActivityThread');",
          "3: var ClipboardManager = Java.use('android.content.ClipboardManager');",
          "4: var CLIPBOARD_SERVICE = 'clipboard';",
          "6: var currentApplication = ActivityThread.currentApplication();",
          "7: var context = currentApplication.getApplicationContext();",
          "9: var clipboard_handle = context.getApplicationContext().getSystemService(CLIPBOARD_SERVICE);",
          "10: var clipboard = Java.cast(clipboard_handle, ClipboardManager);",
          "13: var string_data;",
          "15: function check_clipboard_data() {",
          "17:     Java.perform(function () {",
          "19:         var primary_clip = clipboard.getPrimaryClip();",
          "23:         if (primary_clip != null && primary_clip.getItemCount() > 0) {",
          "25:             var data = primary_clip.getItemAt(0).coerceToText(context).toString();",
          "28:             if (string_data == data) {",
          "29:                 return;",
          "30:             }",
          "33:             string_data = data;",
          "34:             send('mobsf-android-clipboard:' + data);",
          "35:         }",
          "36:     });",
          "37: }",
          "40: setInterval(check_clipboard_data, 1000 * 5);",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/tools/frida_scripts/android/default/root_bypass.js||mobsf/DynamicAnalyzer/tools/frida_scripts/android/default/root_bypass.js": [
          "File: mobsf/DynamicAnalyzer/tools/frida_scripts/android/default/root_bypass.js -> mobsf/DynamicAnalyzer/tools/frida_scripts/android/default/root_bypass.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "130:             }",
          "131:         }",
          "132:         if (shouldModifyCommand) {",
          "134:             this.command.call(this, [\"grep\"]);",
          "135:             return this.start.call(this);",
          "136:         }",
          "137:         if (cmd.indexOf(\"su\") != -1) {",
          "139:             this.command.call(this, [\"justafakecommandthatcannotexistsusingthisshouldthowanexceptionwheneversuiscalled\"]);",
          "140:             return this.start.call(this);",
          "141:         }",
          "",
          "[Removed Lines]",
          "133:             send(\"[RootDetection Bypass] ProcessBuilder \" + cmd);",
          "138:             send(\"[RootDetection Bypass] ProcessBuilder \" + cmd);",
          "",
          "[Added Lines]",
          "133:             send(\"[RootDetection Bypass] ProcessBuilder \" + JSON.stringify(cmd));",
          "138:             send(\"[RootDetection Bypass] ProcessBuilder \" + JSON.stringify(cmd));",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/app-environment.js||mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/app-environment.js": [
          "File: mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/app-environment.js -> mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/app-environment.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: var ActivityThread = Java.use('android.app.ActivityThread');",
          "4: var currentApplication = ActivityThread.currentApplication();",
          "5: var context = currentApplication.getApplicationContext();",
          "7: var data = {",
          "9:     filesDirectory: context.getFilesDir().getAbsolutePath().toString(),",
          "10:     cacheDirectory: context.getCacheDir().getAbsolutePath().toString(),",
          "11:     externalCacheDirectory: context.getExternalCacheDir().getAbsolutePath().toString(),",
          "12:     codeCacheDirectory: 'getCodeCacheDir' in context ? context.getCodeCacheDir().getAbsolutePath().toString() : 'n/a',",
          "13:     obbDir: context.getObbDir().getAbsolutePath().toString(),",
          "14:     packageCodePath: context.getPackageCodePath().toString()",
          "15: };",
          "18: send(JSON.stringify(data, null, 2));",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/crypto-dump-keystore.js||mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/crypto-dump-keystore.js": [
          "File: mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/crypto-dump-keystore.js -> mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/crypto-dump-keystore.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: var KeyStore = Java.use('java.security.KeyStore');",
          "8: var entries = [];",
          "13: var ks = KeyStore.getInstance('AndroidKeyStore');",
          "14: ks.load(null, null);",
          "18: var aliases = ks.aliases();",
          "20: while (aliases.hasMoreElements()) {",
          "22:     var alias = aliases.nextElement();",
          "24:     entries.push({",
          "25:         'alias': alias.toString(),",
          "26:         'is_key': ks.isKeyEntry(alias),",
          "27:         'is_certificate': ks.isCertificateEntry(alias)",
          "28:     })",
          "29: }",
          "32: send(JSON.stringify(entries, null, 2));",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/device-environment.js||mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/device-environment.js": [
          "File: mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/device-environment.js -> mobsf/DynamicAnalyzer/tools/frida_scripts/android/others/device-environment.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: var Build = Java.use('android.os.Build');",
          "3: var ActivityThread = Java.use('android.app.ActivityThread');",
          "5: var currentApplication = ActivityThread.currentApplication();",
          "6: var context = currentApplication.getApplicationContext();",
          "8: var data = {",
          "9:     application_name: context.getPackageName(),",
          "10:     model: Build.MODEL.value.toString(),",
          "11:     board: Build.BOARD.value.toString(),",
          "12:     brand: Build.BRAND.value.toString(),",
          "13:     device: Build.DEVICE.value.toString(),",
          "14:     host: Build.HOST.value.toString(),",
          "15:     id: Build.ID.value.toString(),",
          "16:     product: Build.PRODUCT.value.toString(),",
          "17:     user: Build.USER.value.toString(),",
          "18:     version: Java.androidVersion",
          "19: }",
          "20: send(JSON.stringify(data, null, 2));",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/views/android/analysis.py||mobsf/DynamicAnalyzer/views/android/analysis.py": [
          "File: mobsf/DynamicAnalyzer/views/android/analysis.py -> mobsf/DynamicAnalyzer/views/android/analysis.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:     clipboard = []",
          "29:     # Collect Log data",
          "30:     data = get_log_data(apk_dir, package)",
          "40:     urls, domains, emails = extract_urls_domains_emails(",
          "41:         data['traffic'].lower())",
          "42:     # Tar dump and fetch files",
          "",
          "[Removed Lines]",
          "31:     clip_tag = 'I/CLIPDUMP-INFO-LOG'",
          "32:     clip_tag2 = 'I CLIPDUMP-INFO-LOG'",
          "33:     # Collect Clipboard",
          "34:     for log_line in data['logcat']:",
          "35:         if clip_tag in log_line:",
          "36:             clipboard.append(log_line.replace(clip_tag, 'Process ID '))",
          "37:         if clip_tag2 in log_line:",
          "38:             log_line = log_line.split(clip_tag2)[1]",
          "39:             clipboard.append(log_line)",
          "",
          "[Added Lines]",
          "31:     clip = Path(apk_dir) / 'mobsf_app_clipboard.txt'",
          "32:     if clip.exists():",
          "33:         clipboard = clip.read_text('utf-8', 'ignore').split('\\n')",
          "34:     else:",
          "35:         # For Xposed",
          "36:         clip_tag = 'I/CLIPDUMP-INFO-LOG'",
          "37:         clip_tag2 = 'I CLIPDUMP-INFO-LOG'",
          "38:         # Collect Clipboard",
          "39:         for log_line in data['logcat']:",
          "40:             if clip_tag in log_line:",
          "41:                 clipboard.append(",
          "42:                     log_line.replace(clip_tag, 'Process ID '))",
          "43:             if clip_tag2 in log_line:",
          "44:                 log_line = log_line.split(clip_tag2)[1]",
          "45:                 clipboard.append(log_line)",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/views/android/dynamic_analyzer.py||mobsf/DynamicAnalyzer/views/android/dynamic_analyzer.py": [
          "File: mobsf/DynamicAnalyzer/views/android/dynamic_analyzer.py -> mobsf/DynamicAnalyzer/views/android/dynamic_analyzer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "165:                     'Failed to MobSFy the instance',",
          "166:                     api)",
          "167:             if version < 5:",
          "168:                 xposed_first_run = True",
          "169:         if xposed_first_run:",
          "170:             msg = ('Have you MobSFyed the instance before'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "168:                 # Start Clipboard monitor",
          "169:                 env.start_clipmon()",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "182:         env.enable_adb_reverse_tcp(version)",
          "183:         # Apply Global Proxy to device",
          "184:         env.set_global_proxy(version)",
          "189:         if install == '1':",
          "190:             # Install APK",
          "191:             apk_path = Path(settings.UPLD_DIR) / checksum / f'{checksum}.apk'",
          "",
          "[Removed Lines]",
          "185:         # Start Clipboard monitor",
          "186:         env.start_clipmon()",
          "187:         # Get Screen Resolution",
          "188:         screen_width, screen_height = env.get_screen_res()",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "203:                     msg,",
          "204:                     api)",
          "205:         logger.info('Testing Environment is Ready!')",
          "209:                    'hash': checksum,",
          "210:                    'android_version': version,",
          "211:                    'version': settings.MOBSF_VER,",
          "",
          "[Removed Lines]",
          "206:         context = {'screen_width': screen_width,",
          "207:                    'screen_height': screen_height,",
          "208:                    'package': package,",
          "",
          "[Added Lines]",
          "204:         context = {'package': package,",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/views/android/environment.py||mobsf/DynamicAnalyzer/views/android/environment.py": [
          "File: mobsf/DynamicAnalyzer/views/android/environment.py -> mobsf/DynamicAnalyzer/views/android/environment.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: \"\"\"Dynamic Analyzer Helpers.\"\"\"",
          "3: import logging",
          "4: import os",
          "6: import shutil",
          "7: import subprocess",
          "8: import tempfile",
          "9: import threading",
          "10: import time",
          "11: from hashlib import md5",
          "13: from django.conf import settings",
          "",
          "[Removed Lines]",
          "5: import re",
          "",
          "[Added Lines]",
          "10: from base64 import b64encode",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "83:         if not self.identifier:",
          "84:             return False",
          "85:         self.adb_command(['kill-server'])",
          "87:         logger.info('ADB Restarted')",
          "88:         self.wait(2)",
          "89:         logger.info('Connecting to Android %s', self.identifier)",
          "",
          "[Removed Lines]",
          "86:         self.adb_command(['start-server'])",
          "",
          "[Added Lines]",
          "86:         self.adb_command(['start-server'], False, True)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "305:                 'opensecurity.clipdump/.ClipDumper']",
          "306:         self.adb_command(args, True)",
          "331:     def screen_shot(self, outfile):",
          "332:         \"\"\"Take Screenshot.\"\"\"",
          "333:         self.adb_command(['screencap',",
          "334:                           '-p',",
          "336:         self.adb_command(['pull',",
          "337:                           '/data/local/screen.png',",
          "340:     def screen_stream(self):",
          "341:         \"\"\"Screen Stream.\"\"\"",
          "342:         self.adb_command(['screencap',",
          "343:                           '-p',",
          "344:                           '/data/local/stream.png'],",
          "350:     def android_component(self, bin_hash, comp):",
          "351:         \"\"\"Get APK Components.\"\"\"",
          "",
          "[Removed Lines]",
          "308:     def get_screen_res(self):",
          "309:         \"\"\"Get Screen Resolution of Android Instance.\"\"\"",
          "310:         logger.info('Getting screen resolution')",
          "311:         try:",
          "312:             resp = self.adb_command(['dumpsys', 'window'], True)",
          "313:             scn_rgx = re.compile(r'mUnrestrictedScreen=\\(0,0\\) .*')",
          "314:             scn_rgx2 = re.compile(r'mUnrestricted=\\[0,0\\]\\[.*\\]')",
          "315:             match = scn_rgx.search(resp.decode('utf-8'))",
          "316:             if match:",
          "317:                 screen_res = match.group().split(' ')[1]",
          "318:                 width, height = screen_res.split('x', 1)",
          "319:                 return width, height",
          "320:             match = scn_rgx2.search(resp.decode('utf-8'))",
          "321:             if match:",
          "322:                 res = match.group().split('][')[1].replace(']', '')",
          "323:                 width, height = res.split(',', 1)",
          "324:                 return width, height",
          "325:             else:",
          "326:                 logger.error('Error getting screen resolution')",
          "327:         except Exception:",
          "328:             logger.exception('Getting screen resolution')",
          "329:         return '1440', '2560'",
          "335:                           '/data/local/screen.png'], True)",
          "338:                           outfile])",
          "345:                          True)",
          "346:         self.adb_command(['pull',",
          "347:                           '/data/local/stream.png',",
          "348:                           '{}screen.png'.format(settings.SCREEN_DIR)])",
          "",
          "[Added Lines]",
          "312:                           '/data/local/screen.png'], True, True)",
          "315:                           outfile], False, True)",
          "322:                          True, True)",
          "323:         out = self.adb_command(['cat', '/data/local/stream.png'], True, True)",
          "324:         if out:",
          "325:             return b64encode(out).decode('utf-8')",
          "326:         return ''",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "371:     def get_environment(self):",
          "372:         \"\"\"Identify the environment.\"\"\"",
          "373:         out = self.adb_command(['getprop',",
          "375:         out += self.adb_command(['getprop',",
          "377:         out += self.adb_command(['getprop',",
          "379:         out += self.adb_command(['getprop',",
          "381:         out += self.adb_command(['getprop',",
          "383:         ver = self.adb_command(['getprop',",
          "384:                                 'ro.genymotion.version'],",
          "386:         if b'EMULATOR' in out:",
          "387:             logger.info('Found Android Studio Emulator')",
          "388:             return 'emulator'",
          "",
          "[Removed Lines]",
          "374:                                 'ro.boot.serialno'], True)",
          "376:                                  'ro.serialno'], True)",
          "378:                                  'ro.build.user'], True)",
          "380:                                  'ro.manufacturer.geny-def'], True)",
          "382:                                  'ro.product.manufacturer.geny-def'], True)",
          "385:                                True).decode('utf-8', 'ignore')",
          "",
          "[Added Lines]",
          "352:                                 'ro.boot.serialno'], True, False)",
          "354:                                  'ro.serialno'], True, False)",
          "356:                                  'ro.build.user'], True, False)",
          "358:                                  'ro.manufacturer.geny-def'],",
          "359:                                 True, False)",
          "361:                                  'ro.product.manufacturer.geny-def'],",
          "362:                                 True, False)",
          "365:                                True, False).decode('utf-8', 'ignore')",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "403:     def get_android_version(self):",
          "404:         \"\"\"Get Android version.\"\"\"",
          "405:         out = self.adb_command(['getprop',",
          "407:         and_version = out.decode('utf-8').rstrip()",
          "408:         if and_version.count('.') > 1:",
          "409:             and_version = and_version.rsplit('.', 1)[0]",
          "",
          "[Removed Lines]",
          "406:                                 'ro.build.version.release'], True)",
          "",
          "[Added Lines]",
          "386:                                 'ro.build.version.release'],",
          "387:                                True, False)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "581:         create_ca()",
          "582:         # Install MITM RootCA",
          "583:         self.install_mobsf_ca('install')",
          "591:         if agent == 'frida':",
          "592:             agent_file = '.mobsf-f'",
          "593:             agent_str = self.frida_str",
          "",
          "[Removed Lines]",
          "584:         # Install MobSF Agents",
          "585:         mobsf_agents = 'onDevice/mobsf_agents/'",
          "586:         clip_dump = os.path.join(self.tools_dir,",
          "587:                                  mobsf_agents,",
          "588:                                  'ClipDump.apk')",
          "589:         logger.info('Installing MobSF Clipboard Dumper')",
          "590:         self.adb_command(['install', '-r', clip_dump])",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "604:         \"\"\"Setup Xposed.\"\"\"",
          "605:         xposed_dir = 'onDevice/xposed/'",
          "606:         xposed_modules = xposed_dir + 'modules/'",
          "607:         if android_version < 5:",
          "608:             logger.info('Installing Xposed for Kitkat and below')",
          "609:             xposed_apk = os.path.join(self.tools_dir,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "581:         # Install MobSF Agents for Xposed",
          "582:         clip_dump_apk = os.path.join(self.tools_dir,",
          "583:                                      xposed_dir,",
          "584:                                      'ClipDump.apk')",
          "585:         logger.info('Installing MobSF Clipboard Dumper')",
          "586:         self.adb_command(['install', '-r', clip_dump_apk])",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/views/android/frida_core.py||mobsf/DynamicAnalyzer/views/android/frida_core.py": [
          "File: mobsf/DynamicAnalyzer/views/android/frida_core.py -> mobsf/DynamicAnalyzer/views/android/frida_core.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: )",
          "27: logger = logging.getLogger(__name__)",
          "30: class Frida:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: _FPID = None",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42:         self.api_mon = os.path.join(self.apk_dir, 'mobsf_api_monitor.txt')",
          "43:         self.frida_log = os.path.join(self.apk_dir, 'mobsf_frida_out.txt')",
          "44:         self.deps = os.path.join(self.apk_dir, 'mobsf_app_deps.txt')",
          "46:     def get_default_scripts(self):",
          "47:         \"\"\"Get default Frida Scripts.\"\"\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46:         self.clipboard = os.path.join(self.apk_dir, 'mobsf_app_clipboard.txt')",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "101:             api_mon = 'MobSF-API-Monitor: '",
          "102:             aux = '[AUXILIARY] '",
          "103:             deps = '[RUNTIME-DEPS] '",
          "104:             if not isinstance(msg, str):",
          "105:                 msg = str(msg)",
          "106:             if msg.startswith(api_mon):",
          "107:                 self.write_log(self.api_mon, msg.replace(api_mon, ''))",
          "108:             elif msg.startswith(deps):",
          "109:                 info = msg.replace(deps, '') + '\\n'",
          "110:                 self.write_log(self.deps, info)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "106:             clip = 'mobsf-android-clipboard:'",
          "111:             elif msg.startswith(clip):",
          "112:                 msg = msg.replace(clip, '')",
          "113:                 self.write_log(self.clipboard, f'{msg}\\n')",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "118:         else:",
          "119:             logger.error('[Frida] %s', message)",
          "125:         try:",
          "126:             env = Environment()",
          "127:             self.clean_up()",
          "128:             env.run_frida_server()",
          "131:             logger.info('Spawning %s', self.package)",
          "134:         except frida.ServerNotRunningError:",
          "135:             logger.warning('Frida server is not running')",
          "137:         except frida.TimedOutError:",
          "138:             logger.error('Timed out while waiting for device to appear')",
          "139:         except (frida.ProcessNotFoundError,",
          "",
          "[Removed Lines]",
          "121:     def connect(self):",
          "122:         \"\"\"Connect to Frida Server.\"\"\"",
          "123:         session = None",
          "124:         device = None",
          "129:             device = frida.get_device(get_device(), settings.FRIDA_TIMEOUT)",
          "130:             pid = device.spawn([self.package])",
          "132:             session = device.attach(pid)",
          "133:             time.sleep(2)",
          "136:             self.connect()",
          "",
          "[Added Lines]",
          "127:     def spawn(self):",
          "128:         \"\"\"Frida Spawn.\"\"\"",
          "129:         global _FPID",
          "134:             device = frida.get_device(",
          "135:                 get_device(),",
          "136:                 settings.FRIDA_TIMEOUT)",
          "138:             _FPID = device.spawn([self.package])",
          "139:             device.resume(_FPID)",
          "140:             time.sleep(1)",
          "141:         except frida.NotSupportedError:",
          "142:             logger.exception('Not Supported Error')",
          "143:             return",
          "146:             self.spawn()",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "142:             pass",
          "143:         except Exception:",
          "144:             logger.exception('Error Connecting to Frida')",
          "145:         try:",
          "147:                 script = session.create_script(self.get_script())",
          "148:                 script.on('message', self.frida_response)",
          "149:                 script.load()",
          "151:                 sys.stdin.read()",
          "152:                 script.unload()",
          "153:                 session.detach()",
          "154:         except (frida.ProcessNotFoundError,",
          "155:                 frida.TransportError,",
          "156:                 frida.InvalidOperationError):",
          "",
          "[Removed Lines]",
          "146:             if session:",
          "150:                 device.resume(pid)",
          "",
          "[Added Lines]",
          "156:     def session(self, pid, package):",
          "157:         \"\"\"Use existing session to inject frida scripts.\"\"\"",
          "158:         global _FPID",
          "160:             try:",
          "161:                 device = frida.get_device(",
          "162:                     get_device(),",
          "163:                     settings.FRIDA_TIMEOUT)",
          "164:                 if pid and package:",
          "165:                     _FPID = pid",
          "166:                     self.package = package",
          "167:                 session = device.attach(_FPID)",
          "168:                 time.sleep(2)",
          "169:             except frida.NotSupportedError:",
          "170:                 logger.exception('Not Supported Error')",
          "171:                 return",
          "172:             except Exception:",
          "173:                 logger.warning('Cannot attach to pid, spawning again')",
          "174:                 self.spawn()",
          "175:                 session = device.attach(_FPID)",
          "176:                 time.sleep(2)",
          "177:             if session and device and _FPID:",
          "184:         except frida.NotSupportedError:",
          "185:             logger.exception('Not Supported Error')",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "158:         except Exception:",
          "159:             logger.exception('Error Connecting to Frida')",
          "161:     def clean_up(self):",
          "162:         if is_file_exists(self.api_mon):",
          "163:             os.remove(self.api_mon)",
          "164:         if is_file_exists(self.frida_log):",
          "165:             os.remove(self.frida_log)",
          "167:     def write_log(self, file_path, data):",
          "168:         with io.open(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "193:     def ps(self):",
          "194:         \"\"\"Get running process pid.\"\"\"",
          "195:         ps_dict = []",
          "196:         try:",
          "197:             device = frida.get_device(",
          "198:                 get_device(),",
          "199:                 settings.FRIDA_TIMEOUT)",
          "200:             processes = device.enumerate_applications(scope='minimal')",
          "201:             if device and processes:",
          "202:                 for process in processes:",
          "203:                     if process.pid != 0:",
          "204:                         ps_dict.append({",
          "205:                             'pid': process.pid,",
          "206:                             'name': process.name,",
          "207:                             'identifier': process.identifier,",
          "208:                         })",
          "209:         except Exception:",
          "210:             logger.exception('Failed to enumerate running applications')",
          "211:         return ps_dict",
          "218:         if is_file_exists(self.clipboard):",
          "219:             os.remove(self.clipboard)",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/views/android/operations.py||mobsf/DynamicAnalyzer/views/android/operations.py": [
          "File: mobsf/DynamicAnalyzer/views/android/operations.py -> mobsf/DynamicAnalyzer/views/android/operations.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: import logging",
          "5: import os",
          "6: import random",
          "7: import subprocess",
          "8: import threading",
          "9: from pathlib import Path",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: import shlex",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "188: @require_http_methods(['POST'])",
          "189: def screen_cast(request):",
          "190:     \"\"\"ScreenCast.\"\"\"",
          "192:     try:",
          "193:         env = Environment()",
          "198:     except Exception as exp:",
          "199:         logger.exception('Screen streaming')",
          "201:     return send_response(data)",
          "202: # AJAX",
          "205: @require_http_methods(['POST'])",
          "206: def touch(request):",
          "209:     try:",
          "210:         env = Environment()",
          "224:         data = {'status': 'ok'}",
          "225:     except Exception as exp:",
          "228:     return send_response(data)",
          "229: # AJAX",
          "",
          "[Removed Lines]",
          "191:     data = {}",
          "194:         trd = threading.Thread(target=env.screen_stream)",
          "195:         trd.daemon = True",
          "196:         trd.start()",
          "197:         data = {'status': 'ok'}",
          "200:         data = {'status': 'failed', 'message': str(exp)}",
          "207:     \"\"\"Sending Touch Events.\"\"\"",
          "208:     data = {}",
          "211:         x_axis = request.POST['x']",
          "212:         y_axis = request.POST['y']",
          "213:         if not is_number(x_axis) and not is_number(y_axis):",
          "214:             logger.error('Axis parameters must be numbers')",
          "215:             return invalid_params()",
          "216:         args = ['input',",
          "217:                 'tap',",
          "218:                 x_axis,",
          "219:                 y_axis]",
          "220:         trd = threading.Thread(target=env.adb_command,",
          "221:                                args=(args, True))",
          "222:         trd.daemon = True",
          "223:         trd.start()",
          "226:         logger.exception('Sending Touch Events')",
          "227:         data = {'status': 'failed', 'message': str(exp)}",
          "",
          "[Added Lines]",
          "192:     data = {",
          "193:         'status': 'failed',",
          "194:         'message': 'Failed to stream screen'}",
          "197:         b64dat = env.screen_stream()",
          "198:         data = {",
          "199:             'status': 'ok',",
          "200:             'message': f'data:image/png;base64,{b64dat}'}",
          "203:         data['message'] = str(exp)",
          "210:     \"\"\"Sending Touch/Swipe/Text Events.\"\"\"",
          "211:     data = {",
          "212:         'status': 'failed',",
          "213:         'message': '',",
          "214:     }",
          "217:         x = request.POST['x']",
          "218:         y = request.POST['y']",
          "219:         event = request.POST['event']",
          "220:         max_x = request.POST.get('max_x', 0)",
          "221:         max_y = request.POST.get('max_y', 0)",
          "223:         if event == 'text':",
          "224:             args = ['text', shlex.quote(x)]",
          "225:         else:",
          "226:             if (not is_number(x)",
          "227:                     or not is_number(y)",
          "228:                     or not is_number(max_x)",
          "229:                     or not is_number(max_y)):",
          "230:                 return",
          "231:             # Should not be greater than max screen size",
          "232:             swipe_x = str(min(int(float(x)) + 500, int(float(max_x))))",
          "233:             swipe_y = str(min(int(float(y)) + 500, int(float(max_y))))",
          "235:             if event == 'enter':",
          "236:                 args = ['keyevent', '66']",
          "237:             elif event == 'backspace':",
          "238:                 args = ['keyevent', '67']",
          "239:             elif event == 'left':",
          "240:                 args = ['keyevent', '21']",
          "241:             elif event == 'right':",
          "242:                 args = ['keyevent', '22']",
          "243:             elif event == 'swipe_up':",
          "244:                 args = ['swipe', x, y, x, swipe_y]",
          "245:             elif event == 'swipe_down':",
          "246:                 args = ['swipe', x, swipe_y, x, y]",
          "247:             elif event == 'swipe_left':",
          "248:                 args = ['swipe', x, y, swipe_x, y]",
          "249:             elif event == 'swipe_right':",
          "250:                 args = ['swipe', swipe_x, y, x, y]",
          "251:             else:",
          "252:                 args = ['tap', x, y]",
          "253:         threading.Thread(target=env.adb_command,",
          "254:                          args=(['input'] + args, True),",
          "255:                          daemon=True).start()",
          "258:         logger.exception('Sending Touchscreen Events')",
          "259:         data['message'] = str(exp)",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/views/android/tests_frida.py||mobsf/DynamicAnalyzer/views/android/tests_frida.py": [
          "File: mobsf/DynamicAnalyzer/views/android/tests_frida.py -> mobsf/DynamicAnalyzer/views/android/tests_frida.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: import re",
          "6: import json",
          "7: from pathlib import Path",
          "9: import logging",
          "11: from django.shortcuts import render",
          "",
          "[Removed Lines]",
          "8: import threading",
          "",
          "[Added Lines]",
          "8: from threading import Thread",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25:     is_file_exists,",
          "26:     is_md5,",
          "27:     print_n_send_error_response,",
          "28: )",
          "30: logger = logging.getLogger(__name__)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28:     strict_package_check,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "58: @require_http_methods(['POST'])",
          "59: def instrument(request, api=False):",
          "60:     \"\"\"Instrument app with frida.\"\"\"",
          "62:     try:",
          "64:         md5_hash = request.POST['hash']",
          "65:         default_hooks = request.POST['default_hooks']",
          "66:         auxiliary_hooks = request.POST['auxiliary_hooks']",
          "",
          "[Removed Lines]",
          "61:     data = {}",
          "63:         logger.info('Starting Instrumentation')",
          "",
          "[Added Lines]",
          "62:     data = {",
          "63:         'status': 'failed',",
          "64:         'message': 'Failed to instrument app'}",
          "66:         action = request.POST.get('frida_action', 'spawn')",
          "67:         pid = request.POST.get('pid')",
          "68:         new_pkg = request.POST.get('new_package')",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "76:         cls_trace = request.POST.get('class_trace')",
          "77:         if cls_trace:",
          "78:             extras['class_trace'] = cls_trace.strip()",
          "79:         if (is_attack_pattern(default_hooks)",
          "80:                 or is_attack_pattern(auxiliary_hooks)",
          "82:             return invalid_params(api)",
          "83:         package = get_package_name(md5_hash)",
          "85:             return invalid_params(api)",
          "86:         frida_obj = Frida(md5_hash,",
          "87:                           package,",
          "",
          "[Removed Lines]",
          "81:                 or not is_md5(md5_hash)):",
          "84:         if not package:",
          "",
          "[Added Lines]",
          "87:                 or not is_md5(md5_hash)",
          "88:                 or (new_pkg and not strict_package_check(new_pkg))):",
          "91:         if not package and not new_pkg:",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "89:                           auxiliary_hooks.split(','),",
          "90:                           extras,",
          "91:                           code)",
          "96:     except Exception as exp:",
          "97:         logger.exception('Instrumentation failed')",
          "98:         data = {'status': 'failed', 'message': str(exp)}",
          "",
          "[Removed Lines]",
          "92:         trd = threading.Thread(target=frida_obj.connect)",
          "93:         trd.daemon = True",
          "94:         trd.start()",
          "95:         data = {'status': 'ok'}",
          "",
          "[Added Lines]",
          "99:         if action == 'spawn':",
          "100:             logger.info('Starting Instrumentation')",
          "101:             frida_obj.spawn()",
          "102:         elif action == 'ps':",
          "103:             logger.info('Enumerating running applications')",
          "104:             data['message'] = frida_obj.ps()",
          "105:         if action in ('spawn', 'session'):",
          "106:             if pid and pid.isdigit():",
          "107:                 # Attach to a different pid/bundle id",
          "108:                 args = (int(pid), new_pkg)",
          "109:                 logger.info('Attaching to %s [PID: %s]', new_pkg, pid)",
          "110:             else:",
          "111:                 # Injecting to existing session/spawn",
          "112:                 if action == 'session':",
          "113:                     logger.info('Injecting to existing frida session')",
          "114:                 args = (None, None)",
          "115:             Thread(target=frida_obj.session, args=args, daemon=True).start()",
          "116:         data['status'] = 'ok'",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "271:     location = Path(frd.deps)",
          "272:     if location.exists():",
          "273:         location.write_text('')",
          "279: def dependency_analysis(package, app_dir):",
          "",
          "[Removed Lines]",
          "274:     trd = threading.Thread(target=frd.connect)",
          "275:     trd.daemon = True",
          "276:     trd.start()",
          "",
          "[Added Lines]",
          "295:     frd.spawn()",
          "296:     Thread(target=frd.session, args=(None, None), daemon=True).start()",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/views/android/tests_tls.py||mobsf/DynamicAnalyzer/views/android/tests_tls.py": [
          "File: mobsf/DynamicAnalyzer/views/android/tests_tls.py -> mobsf/DynamicAnalyzer/views/android/tests_tls.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: \"\"\"Security tests on data in transit.\"\"\"",
          "3: import re",
          "4: import logging",
          "6: from json import dump",
          "7: from pathlib import Path",
          "",
          "[Removed Lines]",
          "5: import threading",
          "",
          "[Added Lines]",
          "5: from threading import Thread",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "90:         None,",
          "91:         None,",
          "92:     )",
          "96:     env.wait(duration)",
          "97:     stop_httptools(get_http_tools_url(request))",
          "98:     traffic = get_traffic(test_pkg)",
          "",
          "[Removed Lines]",
          "93:     trd = threading.Thread(target=frd.connect)",
          "94:     trd.daemon = True",
          "95:     trd.start()",
          "",
          "[Added Lines]",
          "93:     frd.spawn()",
          "94:     Thread(target=frd.session, args=(None, None), daemon=True).start()",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/views/ios/corellium_apis.py||mobsf/DynamicAnalyzer/views/ios/corellium_apis.py": [
          "File: mobsf/DynamicAnalyzer/views/ios/corellium_apis.py -> mobsf/DynamicAnalyzer/views/ios/corellium_apis.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: import requests",
          "12: SUCCESS_RESP = (200, 204)",
          "13: ERROR_RESP = (400, 403, 404, 409)",
          "14: OK = 'ok'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12: from mobsf.MobSF.utils import is_number",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "322:             'Failed to get SSH connection string %s', r.json()['error'])",
          "323:         return r.json()['error']",
          "326:         \"\"\"Provide touch/button event to VM.\"\"\"",
          "332:             data = [{",
          "333:                 'text': x,",
          "334:             }]",
          "387:         else:",
          "393:         r = requests.post(",
          "394:             f'{self.api}/instances/{self.instance_id}/input',",
          "395:             headers=self.headers,",
          "",
          "[Removed Lines]",
          "325:     def device_input(self, event, x, y):",
          "327:         if event == 'home':",
          "328:             data = [{",
          "329:                 'buttons': ['holdButton'],",
          "330:             }]",
          "331:         elif event == 'text':",
          "335:         elif event == 'enter':",
          "336:             data = [{",
          "337:                 'buttons': ['enter'],",
          "338:             }]",
          "339:         elif event == 'backspace':",
          "340:             data = [{",
          "341:                 'buttons': ['backspace'],",
          "342:             }]",
          "343:         elif event == 'left':",
          "344:             data = [{",
          "345:                 'buttons': ['left'],",
          "346:             }]",
          "347:         elif event == 'right':",
          "348:             data = [{",
          "349:                 'buttons': ['right'],",
          "350:             }]",
          "351:         elif event == 'swipe_up':",
          "352:             data = [{",
          "353:                 'startButtons': ['finger'],",
          "354:                 'start': [[300, 600]],",
          "355:                 'bezierPoints': [[[350, 700]], [[375, 850]]],",
          "356:                 'end': [[400, 950]],",
          "357:                 'endButtons': [],",
          "358:                 'duration': 200,",
          "359:             }]",
          "360:         elif event == 'swipe_down':",
          "361:             data = [{",
          "362:                 'startButtons': ['finger'],",
          "363:                 'start': [[300, 600]],",
          "364:                 'bezierPoints': [[[700, 350]], [[850, 375]]],",
          "365:                 'end': [[950, 400]],",
          "366:                 'endButtons': [],",
          "367:                 'duration': 200,",
          "368:             }]",
          "369:         elif event == 'swipe_left':",
          "370:             data = [{",
          "371:                 'startButtons': ['finger'],",
          "372:                 'start': [[200, 200]],",
          "373:                 'bezierPoints': [[[700, 350]], [[850, 375]]],",
          "374:                 'end': [[950, 400]],",
          "375:                 'endButtons': [],",
          "376:                 'duration': 200,",
          "377:             }]",
          "378:         elif event == 'swipe_right':",
          "379:             data = [{",
          "380:                 'startButtons': ['finger'],",
          "381:                 'start': [[700, 100]],",
          "382:                 'bezierPoints': [[[350, 750]], [[375, 875]]],",
          "383:                 'end': [[300, 600]],",
          "384:                 'endButtons': [],",
          "385:                 'duration': 200,",
          "386:             }]",
          "388:             data = [",
          "389:                 {'buttons': ['finger'],",
          "390:                  'position': [[x, y]],",
          "391:                  'wait': 0},",
          "392:                 {'buttons': [], 'wait': 100}]",
          "",
          "[Added Lines]",
          "328:     def device_input(self, event, x, y, max_x, max_y):",
          "330:         if event == 'text':",
          "335:             if (not is_number(x)",
          "336:                     or not is_number(y)",
          "337:                     or not is_number(max_x)",
          "338:                     or not is_number(max_y)):",
          "339:                 return",
          "340:             # Should not be greater than max screen size",
          "341:             swipe_x = min(int(x) + 200, int(max_x))",
          "342:             swipe_y = min(int(y) + 400, int(max_y))",
          "343:             if event == 'home':",
          "344:                 data = [{",
          "345:                     'buttons': ['holdButton'],",
          "346:                 }]",
          "347:             elif event == 'enter':",
          "348:                 data = [{",
          "349:                     'buttons': ['enter'],",
          "350:                 }]",
          "351:             elif event == 'backspace':",
          "352:                 data = [{",
          "353:                     'buttons': ['backspace'],",
          "354:                 }]",
          "355:             elif event == 'left':",
          "356:                 data = [{",
          "357:                     'buttons': ['left'],",
          "358:                 }]",
          "359:             elif event == 'right':",
          "360:                 data = [{",
          "361:                     'buttons': ['right'],",
          "362:                 }]",
          "363:             elif event == 'swipe_up':",
          "364:                 data = [{",
          "365:                     'startButtons': ['finger'],",
          "366:                     'start': [[x, 600]],",
          "367:                     'end': [[400, y]],",
          "368:                     'duration': 200,",
          "369:                 }]",
          "370:             elif event == 'swipe_down':",
          "371:                 data = [{",
          "372:                     'startButtons': ['finger'],",
          "373:                     'start': [[x, swipe_y]],",
          "374:                     'end': [[swipe_x, y]],",
          "375:                     'duration': 200,",
          "376:                 }]",
          "377:             elif event == 'swipe_left':",
          "378:                 data = [{",
          "379:                     'startButtons': ['finger'],",
          "380:                     'start': [[100, 900]],",
          "381:                     'bezierPoints': [[[700, 350]], [[850, 375]]],",
          "382:                     'end': [[900, 100]],",
          "383:                     'duration': 200,",
          "384:                 }]",
          "385:             elif event == 'swipe_right':",
          "386:                 data = [{",
          "387:                     'startButtons': ['finger'],",
          "388:                     'start': [[700, 100]],",
          "389:                     'bezierPoints': [[[350, 750]], [[375, 875]]],",
          "390:                     'end': [[100, 700]],",
          "391:                     'duration': 200,",
          "392:                 }]",
          "393:             else:",
          "394:                 if not is_number(x) or not is_number(y):",
          "395:                     return",
          "396:                 data = [",
          "397:                     {'buttons': ['finger'],",
          "398:                      'position': [[x, y]],",
          "399:                      'wait': 0},",
          "400:                     {'buttons': [], 'wait': 100}]",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/views/ios/corellium_instance.py||mobsf/DynamicAnalyzer/views/ios/corellium_instance.py": [
          "File: mobsf/DynamicAnalyzer/views/ios/corellium_instance.py -> mobsf/DynamicAnalyzer/views/ios/corellium_instance.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:     get_md5,",
          "24:     id_generator,",
          "25:     is_md5,",
          "27:     print_n_send_error_response,",
          "28:     strict_package_check,",
          "29: )",
          "",
          "[Removed Lines]",
          "26:     is_number,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33:     stop_httptools,",
          "34: )",
          "35: from mobsf.DynamicAnalyzer.views.common.shared import (",
          "37:     send_response,",
          "38: )",
          "39: from mobsf.DynamicAnalyzer.views.ios.corellium_ssh import (",
          "",
          "[Removed Lines]",
          "36:     invalid_params,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "716: @require_http_methods(['POST'])",
          "717: def touch(request, api=False):",
          "719:     data = {",
          "720:         'status': 'failed',",
          "721:         'message': '',",
          "",
          "[Removed Lines]",
          "718:     \"\"\"Sending Touch Events.\"\"\"",
          "",
          "[Added Lines]",
          "716:     \"\"\"Sending Touch/Swipe/Text Events.\"\"\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "724:         x_axis = request.POST['x']",
          "725:         y_axis = request.POST['y']",
          "726:         event = request.POST['event']",
          "727:         instance_id = request.POST['instance_id']",
          "731:         failed = common_check(instance_id)",
          "732:         if failed:",
          "733:             return send_response(failed, api)",
          "734:         ci = CorelliumInstanceAPI(instance_id)",
          "736:         data = {'status': 'ok'}",
          "737:     except Exception as exp:",
          "739:         data['message'] = str(exp)",
          "740:     return send_response(data)",
          "741: # AJAX + HTML",
          "",
          "[Removed Lines]",
          "728:         if not is_number(x_axis) and not is_number(y_axis):",
          "729:             logger.error('Axis parameters must be numbers')",
          "730:             return invalid_params()",
          "735:         ci.device_input(event, x_axis, y_axis)",
          "738:         logger.exception('Sending Touch Events')",
          "",
          "[Added Lines]",
          "726:         max_x = request.POST.get('max_x', 0)",
          "727:         max_y = request.POST.get('max_y', 0)",
          "733:         ci.device_input(event, x_axis, y_axis, max_x, max_y)",
          "736:         logger.exception('Sending Touchscreen Events')",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/views/ios/frida_core.py||mobsf/DynamicAnalyzer/views/ios/frida_core.py": [
          "File: mobsf/DynamicAnalyzer/views/ios/frida_core.py -> mobsf/DynamicAnalyzer/views/ios/frida_core.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:             dump,",
          "39:             auxiliary,",
          "40:             extras,",
          "43:         self.ssh_connection_string = ssh_string",
          "44:         self.app_container = None",
          "45:         self.hash = app_hash",
          "",
          "[Removed Lines]",
          "41:             code,",
          "42:             action):",
          "",
          "[Added Lines]",
          "41:             code):",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:         self.auxiliary = auxiliary",
          "50:         self.extras = extras",
          "51:         self.code = code",
          "53:         self.frida_dir = Path(settings.TOOLS_DIR) / 'frida_scripts' / 'ios'",
          "54:         self.ipa_dir = Path(settings.UPLD_DIR) / self.hash",
          "55:         self.frida_log = self.ipa_dir / 'mobsf_frida_out.txt'",
          "",
          "[Removed Lines]",
          "52:         self.action = action",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "157:         \"\"\"Connect to Frida Server and spawn the app.\"\"\"",
          "158:         global _PID",
          "159:         try:",
          "161:             try:",
          "162:                 _PID = frida.get_remote_device().spawn([self.bundle_id])",
          "163:             except frida.NotSupportedError:",
          "164:                 logger.exception('Not Supported Error')",
          "",
          "[Removed Lines]",
          "160:             self.clean_up()",
          "",
          "[Added Lines]",
          "159:                 self.clean_up()",
          "",
          "---------------"
        ],
        "mobsf/DynamicAnalyzer/views/ios/tests_frida.py||mobsf/DynamicAnalyzer/views/ios/tests_frida.py": [
          "File: mobsf/DynamicAnalyzer/views/ios/tests_frida.py -> mobsf/DynamicAnalyzer/views/ios/tests_frida.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:             dump_hooks.split(','),",
          "86:             auxiliary_hooks.split(','),",
          "87:             extras,",
          "90:         if action == 'spawn':",
          "91:             logger.info('Starting Instrumentation')",
          "92:             frida_obj.spawn()",
          "",
          "[Removed Lines]",
          "88:             code,",
          "89:             action)",
          "",
          "[Added Lines]",
          "88:             code)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "107:         data['status'] = OK",
          "108:     except Exception as exp:",
          "109:         logger.exception('Frida Instrumentation failed')",
          "111:     return send_response(data, api)",
          "",
          "[Removed Lines]",
          "110:         data = {'status': 'failed', 'message': str(exp)}",
          "",
          "[Added Lines]",
          "109:         data['message'] = str(exp)",
          "",
          "---------------"
        ],
        "mobsf/MobSF/init.py||mobsf/MobSF/init.py": [
          "File: mobsf/MobSF/init.py -> mobsf/MobSF/init.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: logger = logging.getLogger(__name__)",
          "14: BANNER = \"\"\"",
          "15:   __  __       _    ____  _____       _____  ___",
          "16:  |  \\/  | ___ | |__/ ___||  ___|_   _|___ / ( _ )",
          "",
          "[Removed Lines]",
          "13: VERSION = '3.8.0'",
          "",
          "[Added Lines]",
          "13: VERSION = '3.8.1'",
          "",
          "---------------"
        ],
        "mobsf/MobSF/urls.py||mobsf/MobSF/urls.py": [
          "File: mobsf/MobSF/urls.py -> mobsf/MobSF/urls.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "169:         re_path(r'^mobsfy/$', operations.mobsfy, name='mobsfy'),",
          "170:         re_path(r'^screenshot/$', operations.take_screenshot),",
          "171:         re_path(r'^execute_adb/$', operations.execute_adb),",
          "174:         re_path(r'^get_component/$', operations.get_component),",
          "175:         re_path(r'^mobsf_ca/$', operations.mobsf_ca),",
          "176:         re_path(r'^global_proxy/$', operations.global_proxy),",
          "",
          "[Removed Lines]",
          "172:         re_path(r'^screen_cast/$', operations.screen_cast),",
          "173:         re_path(r'^touch_events/$', operations.touch),",
          "",
          "[Added Lines]",
          "172:         re_path(r'^screen_cast/$',",
          "173:                 operations.screen_cast,",
          "174:                 name='screen_cast'),",
          "175:         re_path(r'^touch_events/$',",
          "176:                 operations.touch,",
          "177:                 name='android_touch'),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "183:         re_path(r'^collect_logs/$', tests_common.collect_logs),",
          "184:         re_path(r'^tls_tests/$', tests_common.tls_tests),",
          "185:         # Frida",
          "187:         re_path(r'^live_api/$',",
          "188:                 tests_frida.live_api,",
          "189:                 name='live_api'),",
          "",
          "[Removed Lines]",
          "186:         re_path(r'^frida_instrument/$', tests_frida.instrument),",
          "",
          "[Added Lines]",
          "190:         re_path(r'^frida_instrument/$',",
          "191:                 tests_frida.instrument,",
          "192:                 name='android_instrument'),",
          "",
          "---------------"
        ],
        "mobsf/MobSF/utils.py||mobsf/MobSF/utils.py": [
          "File: mobsf/MobSF/utils.py -> mobsf/MobSF/utils.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "230: def is_number(s):",
          "231:     try:",
          "232:         float(s)",
          "233:         return True",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "231:     if s == 'NaN':",
          "232:         return False",
          "",
          "---------------"
        ],
        "mobsf/templates/dynamic_analysis/android/dynamic_analysis.html||mobsf/templates/dynamic_analysis/android/dynamic_analysis.html": [
          "File: mobsf/templates/dynamic_analysis/android/dynamic_analysis.html -> mobsf/templates/dynamic_analysis/android/dynamic_analysis.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "140:               </div>",
          "141:               <div class=\"card-body\">",
          "142:                  <div class=\"table-responsive\">",
          "143:                   <h4> Apps Available</h4>",
          "144:                 <table class=\"table table-bordered table-hover table-striped\">",
          "145:                     <thead>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "143:                   <h4> Apps in Device</h4>",
          "144:                   <table class=\"table table-bordered table-hover table-striped\">",
          "145:                     <thead>",
          "146:                     <tr>",
          "147:                         <th>APP</th>",
          "148:                         <th>LOCATION IN DEVICE</th>",
          "149:                         <th>ACTION</th>",
          "150:                     </tr>",
          "151:                     </thead>",
          "152:                     <tbody>",
          "153:                     {% if device_packages %}",
          "154:                     {% for hash, det in device_packages.items %}",
          "155:                         <tr>",
          "156:                             <td align=\"center\">",
          "157:                               <img id=\"app_icon\" src=\"/download/{{ hash }}-icon.png\" onerror=\"this.onerror=null;this.src='{% static 'img/no_icon.png' %}'\"/>",
          "158:                               <br/><strong>{{ det.0 }}</strong>",
          "159:                             </td>",
          "160:                             <td>",
          "161:                                 {{ det.1}}",
          "162:                            </td>",
          "163:                             <td align=\"center\">",
          "164:                               <p>",
          "165:                                 <a class=\"btn btn-primary disable\" onclick=\"dynamic_loader()\" href={% url \"dynamic_analyzer\" checksum=hash %}?re_install=0&install=0\"><i class=\"fab fa-android\"></i> Start Dynamic Analysis</a>",
          "166:                               </p>",
          "167:                               <p>",
          "168:                                 <a class=\"btn btn-warning disable\" onclick=\"dynamic_loader()\" href=\"{% url \"static_scan\" checksum=hash %}\"><i class=\"fa fa-download\"></i> Pull &amp; Static Analysis</a>",
          "169:                                 </p>",
          "170:                               <p>",
          "171:                                  <a class=\"btn btn-info\" href=\"{% url \"dynamic_report\" checksum=hash %}\"><i class=\"fa fa-mobile\"></i> View Report </a>",
          "172:                               </p>",
          "173:                             </td>",
          "174:                         </tr>",
          "175:                     {% endfor %}",
          "176:                     {% endif %}",
          "177:                     </tbody>",
          "178:                 </table>",
          "179:               </br>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "169:                                 <a class=\"btn btn-success disable\" onclick=\"dynamic_loader()\" href=\"{% url \"dynamic_analyzer\" checksum=e.MD5 %}\"><i class=\"fab fa-android\"></i> Start Dynamic Analysis</a>",
          "170:                               </p>",
          "171:                               <p>",
          "173:                               </p>",
          "174:                               <p>",
          "175:                                  <a class=\"btn btn-info {% if not e.DYNAMIC_REPORT_EXISTS %}disabled{% endif %}\" href=\"{% url \"dynamic_report\" checksum=e.MD5 %}\"><i class=\"fa fa-mobile\"></i> View Report </a>",
          "",
          "[Removed Lines]",
          "172:                                 <a class=\"btn btn-primary btn-sm disable\" onclick=\"dynamic_loader()\" href=\"{% url \"dynamic_analyzer\" checksum=e.MD5 %}?re_install=0\"><i class=\"fab fa-android\"></i> Start Dynamic Analysis (without Re-install)</a>",
          "",
          "[Added Lines]",
          "209:                                 <a class=\"btn btn-primary btn-sm disable\" onclick=\"dynamic_loader()\" href=\"{% url \"dynamic_analyzer\" checksum=e.MD5 %}?re_install=0\"><i class=\"fab fa-android\"></i> Start Dynamic Analysis (No reinstall)</a>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "180:                     {% endif %}",
          "181:                     </tbody>",
          "182:                 </table>",
          "221:             </div>",
          "222:               </div>",
          "",
          "[Removed Lines]",
          "183:               </br>",
          "184:                 <h4> Apps in Device</h4>",
          "185:                 <table class=\"table table-bordered table-hover table-striped\">",
          "186:                   <thead>",
          "187:                   <tr>",
          "188:                       <th>APP</th>",
          "189:                       <th>LOCATION IN DEVICE</th>",
          "190:                       <th>ACTION</th>",
          "191:                   </tr>",
          "192:                   </thead>",
          "193:                   <tbody>",
          "194:                   {% if device_packages %}",
          "195:                   {% for hash, det in device_packages.items %}",
          "196:                       <tr>",
          "197:                           <td align=\"center\">",
          "198:                             <img id=\"app_icon\" src=\"/download/{{ hash }}-icon.png\" onerror=\"this.onerror=null;this.src='{% static 'img/no_icon.png' %}'\"/>",
          "199:                             <br/><strong>{{ det.0 }}</strong>",
          "200:                           </td>",
          "201:                           <td>",
          "202:                               {{ det.1}}",
          "203:                          </td>",
          "204:                           <td align=\"center\">",
          "205:                             <p>",
          "206:                               <a class=\"btn btn-primary disable\" onclick=\"dynamic_loader()\" href={% url \"dynamic_analyzer\" checksum=hash %}?re_install=0&install=0\"><i class=\"fab fa-android\"></i> Start Dynamic Analysis</a>",
          "207:                             </p>",
          "208:                             <p>",
          "209:                               <a class=\"btn btn-warning disable\" onclick=\"dynamic_loader()\" href=\"{% url \"static_scan\" checksum=hash %}\"><i class=\"fa fa-download\"></i> Pull &amp; Static Analysis</a>",
          "210:                               </p>",
          "211:                             <p>",
          "212:                                <a class=\"btn btn-info\" href=\"{% url \"dynamic_report\" checksum=hash %}\"><i class=\"fa fa-mobile\"></i> View Report </a>",
          "213:                             </p>",
          "214:                           </td>",
          "215:                       </tr>",
          "216:                   {% endfor %}",
          "217:                   {% endif %}",
          "218:                   </tbody>",
          "219:               </table>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "mobsf/templates/dynamic_analysis/android/dynamic_analyzer.html||mobsf/templates/dynamic_analysis/android/dynamic_analyzer.html": [
          "File: mobsf/templates/dynamic_analysis/android/dynamic_analyzer.html -> mobsf/templates/dynamic_analysis/android/dynamic_analyzer.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:       <div class=\"row mb-2\">",
          "70:         <div id=\"mobsf_header\">",
          "71:             <h2><strong>Dynamic Analyzer </strong>- {{ package }}</h2>",
          "74:         </div>",
          "75:       </div>",
          "76:     </div>",
          "",
          "[Removed Lines]",
          "72:           <input type=\"hidden\" id=\"screen_width\" value=\"{{ screen_width }}\">",
          "73:           <input type=\"hidden\" id=\"screen_height\" value=\"{{ screen_height }}\">",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "118:                   <div class=\"camera\"></div>",
          "119:                   <div class=\"sensor\"></div>",
          "120:                   <div class=\"speaker\"></div>",
          "122:                   <img width=\"320\" height=\"580\" src=\"{% url 'download' %}screen/screen.png\" id=\"my\" onerror=\"$('#my').attr('src','/static/img/loading.jpg')\" style=\"background-color:black;\">",
          "123:                   </div>",
          "124:                   </div>",
          "125:                 </div>",
          "126:               </div>",
          "127:               <!-- /.card-body -->",
          "128:             </div>",
          "",
          "[Removed Lines]",
          "121:                   <div class=\"screen\" id=\"container\">",
          "",
          "[Added Lines]",
          "119:                   <div class=\"screen\" id=\"container\" tabindex=\"0\" style=\"outline: none;\">",
          "125:                 <div class=\"card-body\">",
          "126:                   <p>",
          "127:                   <div class=\"input-group input-group-sm\">",
          "128:                     <input class=\"form-control form-control-navbar\" id=\"android_text\" type=\"text\" placeholder=\"Text Input\" >",
          "129:                     <div class=\"input-group-append\">",
          "130:                       <button id=\"android_text_btn\" class=\"btn btn-primary\">",
          "131:                         <i class=\"far fa-paper-plane\"></i>",
          "132:                       </button>",
          "133:                     </div>",
          "134:                   </div>",
          "135:                 </p>",
          "136:               </div>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "141:                   <li class=\"nav-item\">",
          "142:                     <a class=\"nav-link active\" id=\"dm-tab\" data-toggle=\"pill\" href=\"#dm\" role=\"tab\" aria-controls=\"dm\" aria-selected=\"true\">Dynamic Analyzer</a>",
          "143:                   </li>",
          "147:                   <li class=\"nav-item\">",
          "148:                     <a class=\"nav-link\" id=\"errors-tab\" data-toggle=\"pill\" href=\"#errors\" role=\"tab\" aria-controls=\"errors\" aria-selected=\"false\">Errors</a>",
          "149:                   </li>",
          "",
          "[Removed Lines]",
          "144:                   <li class=\"nav-item\">",
          "145:                     <a class=\"nav-link disabled\" id=\"frida-tab\" data-toggle=\"pill\" href=\"#frida_logs\" role=\"tab\" aria-controls=\"frida\" aria-selected=\"false\">Frida Logs</a>",
          "146:                   </li>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "186:                             <input name=\"default_hooks\" type=\"checkbox\" value=\"debugger_check_bypass\" checked>",
          "187:                               Debugger Check Bypass",
          "188:                             </label>",
          "189:                         </div>",
          "190:                                            <hr/>",
          "191:                         <div class=\"form-group\">",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "198:                             <label>",
          "199:                               <input name=\"default_hooks\" type=\"checkbox\" value=\"dump_clipboard\" checked>",
          "200:                                Clipboard Monitor",
          "201:                               </label>",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "226:                       </div>",
          "227:                       <!-- /.box-body -->",
          "229:                       <div class=\"box-footer\">",
          "233:                       </div>",
          "234:                     </form>",
          "235:                   </div>",
          "236:             {% if activities or exported_activities %}",
          "",
          "[Removed Lines]",
          "231:                       <button id=\"frida_spawn\" type=\"submit\" class=\"btn btn-success\"><i class=\"fas fa-play\"></i> Start Instrumentation</button>",
          "232:                       <button id=\"fd_log\" type=\"button\" class=\"btn btn-primary\" disabled><i class=\"fas fa-file-medical-alt\"></i> Frida Live Logs</button>",
          "",
          "[Added Lines]",
          "242:                         <button id=\"frida_spawn\" type=\"submit\" class=\"btn btn-success\"><i class=\"far fa-play-circle\"></i> Spawn & Inject</button>",
          "243:                         <button id=\"frida_session\" type=\"submit\" class=\"btn btn-success\"><i class=\"fas fa-redo\"></i> Inject </button>",
          "244:                         <button id=\"frida_attach\" type=\"submit\" class=\"btn btn-success\"><i class=\"fas fa-bug\"></i> Attach </button>",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "256:                   </div>",
          "264:                   <div class=\"tab-pane fade\" id=\"errors\" role=\"tabpanel\" aria-labelledby=\"errors-tab\">",
          "",
          "[Removed Lines]",
          "258:                   <div class=\"tab-pane fade\" id=\"frida_logs\" role=\"tabpanel\" aria-labelledby=\"frida-tab\">",
          "259:                     <h4 class=\"page-header\"><strong>Frida Logs </strong>- {{ package }}</h4>",
          "260:                     <div id=\"messages\"></br>Data refreshed in every 3 seconds.</div>",
          "261:                     <pre class=\"frida-pre\" id=\"logs\"></pre>",
          "262:                   </div>",
          "263:                   <!-- frida logs -->",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "336:             <!-- /.card -->",
          "337:           </div>",
          "338:           <!-- /.col -->",
          "340:         </div>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "348:           <div class=\"col-md-12\">",
          "349:             <div class=\"card card-default\">",
          "350:               <!-- /.card-header -->",
          "351:               <div class=\"card-body\">",
          "352:                    <div>",
          "353:                     <h4 class=\"page-header\"><strong>Frida Logs </strong></h4>",
          "354:                     <div id=\"messages\"></br>Data refreshed in every 3 seconds.</div>",
          "355:                     <pre class=\"frida-pre\" id=\"frida-logs\"></pre>",
          "356:                   </div>",
          "357:               </div>",
          "358:               <!-- /.card-body -->",
          "359:             </div>",
          "360:             <!-- /.card -->",
          "361:           </div>",
          "362:           <!-- /.col -->",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "344:      </div>",
          "345:     </div>",
          "346: </div>",
          "347: <!-- Modal -->",
          "348: <div class=\"modal\" id=\"tls_modal\" tabindex=\"-1\" role=\"dialog\">",
          "349:   <div class=\"modal-dialog modal-xl\">",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "373: <!--Loader-->",
          "374: <div class=\"hidden loading\">",
          "375:   <div class='uil-ring-css' style='transform:scale(0.79);'>",
          "376:     <div></div>",
          "377:   </div>",
          "378:   </div>",
          "379: <!-- Modal -->",
          "380: <div class=\"modal fade\" id=\"frida_attach_mdl\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">",
          "381:   <div class=\"modal-dialog\" role=\"document\">",
          "382:     <div class=\"modal-content\">",
          "383:       <div class=\"modal-header\">",
          "384:         <h5 class=\"modal-title\" id=\"exampleModalLabel\">Attach to a Running Process</h5>",
          "385:         <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">",
          "386:           <span aria-hidden=\"true\">&times;</span>",
          "387:         </button>",
          "388:       </div>",
          "389:       <div class=\"modal-body\">",
          "390:         <form role=\"form\">",
          "391:           <div class=\"form-group\">",
          "392:             <select id=\"process_select\" class=\"form-select\" aria-label=\"Select a process\">",
          "393:             </select>",
          "394:           </div>",
          "395:         </form>",
          "396:       </div>",
          "397:       <div class=\"modal-footer\">",
          "398:         <button id=\"attach_to_pid\" type=\"button\" class=\"btn btn-primary\"><i class=\"fas fa-bug\"></i> Attach</button>",
          "399:       </div>",
          "401:     </div>",
          "402:   </div>",
          "403: </div>",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "412:       </div>",
          "413:     </div>",
          "423:     <!-- /.modal-content -->",
          "",
          "[Removed Lines]",
          "415:     <!--Loader-->",
          "416: <div class=\"hidden loading\">",
          "417:   <div class='uil-ring-css' style='transform:scale(0.79);'>",
          "418:     <div></div>",
          "419:   </div>",
          "420:   </div>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "433: <script src=\"{% static \"codemirror/jshint.js\" %}\"></script>",
          "434: <script src=\"{% static \"codemirror/lint.js\" %}\"></script>",
          "435: <script src=\"{% static \"codemirror/javascript-lint.js\" %}\"></script>",
          "436: <script>",
          "438: function dynamic_loader(){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "488: <script src=\"{% static \"others/js/swipe.js\" %}\"></script>",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "444:     loadingOverlay.classList.add('hidden');",
          "445: }",
          "449: function aux_click(cb) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "501: document.getElementById('my').ondragstart = function() { return false; };",
          "504: document.getElementById('frida-logs').style.display = 'none';",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "479:   });",
          "480: }",
          "483: function load_frida_others(){",
          "484:   action('{% url 'list_frida_scripts' %}', {device: 'android'}, function(json) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "542: function escape(data_string) {",
          "543:     var encodedStr = data_string.replace(/[\\u00A0-\\u9999<>\\&]/gim, function (i) {",
          "544:         return '&#' + i.charCodeAt(0) + ';';",
          "545:     });",
          "546:     return encodedStr;",
          "547: }",
          "550: function escapeHtml(unsafe){",
          "551:     return unsafe",
          "552:         .replace(/&/g, \"&amp;\")",
          "553:         .replace(/</g, \"&lt;\")",
          "554:         .replace(/>/g, \"&gt;\")",
          "555:         .replace(/\"/g, \"&quot;\")",
          "556:         .replace(/'/g, \"&#039;\");",
          "557: }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "504: function restore(){",
          "506:   if (custom_code !== null) {",
          "507:     setTimeout(function(){ editor.getDoc().setValue(custom_code); }, 2000);",
          "508:   }",
          "",
          "[Removed Lines]",
          "505:   var custom_code = window.sessionStorage.getItem(\"code\");",
          "",
          "[Added Lines]",
          "582:   var custom_code = window.sessionStorage.getItem(\"code_android\");",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "580:         }",
          "581:     }",
          "590:     function output(html, escape_=false, pre=false, error=false) {",
          "591:         if (escape_)",
          "",
          "[Removed Lines]",
          "583:     function escape(data) {",
          "584:         var encodedStr = data.replace(/[\\u00A0-\\u9999<>\\&]/gim, function (i) {",
          "585:             return '&#' + i.charCodeAt(0) + ';';",
          "586:         });",
          "587:         return encodedStr;",
          "588:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "762:         type : \"GET\",",
          "763:         dataType: \"json\",",
          "764:         success : function(json){",
          "766:         },",
          "767:         error : function(xhr, ajaxOptions, thrownError) {",
          "768:           console.log(xhr.responseText);",
          "",
          "[Removed Lines]",
          "765:             $('#logs').text(json.data);",
          "",
          "[Added Lines]",
          "836:             $('#frida-logs').text(json.data);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "774:       get_logs();",
          "775: }, 3000 );",
          "807: var screenfunc;",
          "808: $(\"#screen\").click(function() {",
          "809:       var stext = $(\"#screen\").text();",
          "",
          "[Removed Lines]",
          "778: var touch = \"off\";",
          "780: $('#my').click(function(e) {",
          "781:   if (touch === \"on\")",
          "782:   {",
          "783:     var res=[$('#screen_width').val(),$('#screen_height').val()];",
          "784:     var width = res[0];",
          "785:     var height =res[1];",
          "786:     if (width.length > 0 && height.length > 0)",
          "787:     {",
          "788:         width = parseInt(width);",
          "789:         height = parseInt(height);",
          "790:         var offset = $(this).offset();",
          "791:         var x = e.pageX - offset.left;",
          "792:         var y = e.pageY - offset.top;",
          "793:         x = x * (width/320);",
          "794:         y = y * (height/580);",
          "795:         console.log('X Axis: '+ x + \" Y Axis: \"+ y);",
          "796:         action(document.location.origin + '/touch_events/', {x: x, y: y}, function(json) {",
          "797:             if (json.status==='ok')",
          "798:               console.log('Clicked!');",
          "799:             else",
          "800:               console.log(json.message)",
          "801:           });",
          "802:       }",
          "803:   }",
          "804: });",
          "",
          "[Added Lines]",
          "849: var screen_width, screen_height;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "813:           touch = \"on\";",
          "814:           screenfunc = setInterval(function(){",
          "820:                   console.log(json.message)",
          "821:                });",
          "823:       } else {",
          "824:           $(\"#screen\").html(\"<i class='fa fa-mobile-alt'></i> Show Screen\");",
          "825:           print_status(\"Screen streaming stopped.\");",
          "",
          "[Removed Lines]",
          "816:               action(document.location.origin + '/screen_cast/', {}, function(json) {",
          "817:                 if (json.status == 'ok')",
          "818:                   $('#my').attr('src', document.location.origin + '/download/screen/screen.png?'+ new Date().getTime());",
          "819:                 else",
          "822:           },3000);",
          "",
          "[Added Lines]",
          "859:               action('{% url 'screen_cast' %}', {}, function(json) {",
          "860:                 if (json.status == 'ok'){",
          "861:                   if (screen_width === undefined || screen_height === undefined){",
          "863:                     var i = new Image();",
          "864:                     i.onload = function(){",
          "865:                       screen_width = i.width;",
          "866:                       screen_height = i.height;",
          "867:                       console.log('Screen Resolution: ' + screen_width + 'x' + screen_height)",
          "868:                       i = null;",
          "869:                     };",
          "870:                     i.src = json.message;",
          "871:                   }",
          "872:                   $('#my').attr('src', json.message);",
          "873:                 } else",
          "876:           }, 2000);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "830:       return false;",
          "831: });",
          "834: $(\"#ss\").click(function() {",
          "835:   print_status(\"Taking a screenshot.\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "889: var touch = \"off\";",
          "890: function android_input(event, x, y){",
          "891:   if ( touch === \"on\"){",
          "892:     action('{% url 'android_touch' %}', { event, x, y, max_x: screen_width, max_y:screen_height}, function(json) {",
          "893:         if (json.status==='ok')",
          "894:           console.log('Event: ' + event);",
          "895:         else",
          "896:           console.log(json.message)",
          "897:     });",
          "898:   }",
          "899: }",
          "901: var xaxis, yaxis = 0;",
          "903: function getXY(e, t){",
          "905:       var offset = $(t).offset();",
          "906:       var x = e.pageX - offset.left;",
          "907:       var y = e.pageY - offset.top;",
          "908:       xaxis = x * (screen_width/320);",
          "909:       yaxis = y * (screen_height/580);",
          "910:       console.log('X Axis: '+ xaxis + \" Y Axis: \"+ yaxis);",
          "911: }",
          "914: var pressedTime;",
          "915: var releaseTime;",
          "916: $(\"#my\").on( \"mousedown\", function() {",
          "917:   pressedTime = new Date().getTime();",
          "918: });",
          "920: $(\"#my\").on( \"mouseup\", function(e) {",
          "921:   releaseTime = new Date().getTime();",
          "922:   getXY(e, this);",
          "923:   if (releaseTime - pressedTime < 300 && touch === \"on\") {",
          "924:           android_input('touch', xaxis, yaxis);",
          "925:       }",
          "926: });",
          "930: $('#android_text_btn').click(function(e) {",
          "931:   if ($('#android_text').val()){",
          "933:     android_input('text', $('#android_text').val(), 0);",
          "934:     $('#android_text').val('');",
          "935:   } else {",
          "937:     android_input('enter', 0, 0);",
          "938:   }",
          "939: });",
          "942: $('#container').on('keypress', function(event) {",
          "944:     if (touch === \"on\"){",
          "945:         switch(event.keyCode){",
          "946:           case 13:",
          "949:             $('#android_text_btn').click();",
          "950:             break;",
          "951:           case 32:",
          "954:             $('#android_text').val($('#android_text').val() + ' ');",
          "955:             event.preventDefault();",
          "956:             break;",
          "957:           default:",
          "958:           $('#android_text').val($('#android_text').val() + String.fromCharCode(event.keyCode));",
          "959:         }",
          "960:     }",
          "961:  });",
          "962:  $('#container').on('keydown', function(event) {",
          "964:     if (touch === \"on\")",
          "965:     {",
          "966:         switch(event.keyCode){",
          "967:           case 8:",
          "969:             android_input('backspace', 0, 0)",
          "970:             break;",
          "971:           case 37:",
          "973:             android_input('left', 0, 0)",
          "974:             break;",
          "975:           case 39:",
          "977:             android_input('right', 0, 0)",
          "978:             break;",
          "979:         }",
          "980:     }",
          "981:  });",
          "983:  $('#android_text').keypress(function(event){",
          "984:   if (touch === \"on\"){",
          "985:     var keycode = (event.keyCode ? event.keyCode : event.which);",
          "986:     if(keycode === 13){",
          "987:       $('#android_text_btn').click();",
          "988:     }",
          "989:  event.stopPropagation();",
          "990:   }",
          "991: });",
          "995: const box = document.getElementById(\"my\");",
          "996: const classes = Swipe.directions();",
          "997: const swipe = new Swipe(box, {",
          "998:   corners: true,",
          "999:   minDistance: 100",
          "1000: });",
          "1002: swipe.addEventListener(\"after\", direction => {",
          "1003:   if (touch === \"on\") {",
          "1004:     switch(direction){",
          "1005:       case 'up': case 'leftup': case 'rightup':",
          "1006:         android_input('swipe_down', xaxis, yaxis)",
          "1007:         break;",
          "1008:       case 'down': case 'leftdown': case 'rightdown':",
          "1009:         android_input('swipe_up', xaxis, yaxis)",
          "1010:         break;",
          "1011:       case 'left':",
          "1012:         android_input('swipe_right', xaxis, yaxis)",
          "1013:         break;",
          "1014:       case 'right':",
          "1015:         android_input('swipe_left', xaxis, yaxis)",
          "1016:         break;",
          "1017:     }",
          "1018: }",
          "1019: });",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "988:     setTimeout(function(){ window.open(document.location.origin + '/logcat/?package={{ package }}', '_blank');}, 500);",
          "989:     return false;",
          "990: });",
          "",
          "[Removed Lines]",
          "992: $(\"#fd_log\").click(function() {",
          "993:     $('#tabnav a[href=\"#frida_logs\"]').tab('show');",
          "996:     document.body.scrollTop = document.documentElement.scrollTop = 0;",
          "997:     return false;",
          "998: });",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1009:   return false;",
          "1010: });",
          "1017:     var code = editor.getDoc().getValue();",
          "1021:     var default_hooks = [];",
          "1022:     $.each($(\"input[name='default_hooks']:checked\"), function(){",
          "1023:         default_hooks.push($(this).val());",
          "1024:     });",
          "",
          "[Removed Lines]",
          "1014: $(\"#frida_spawn\").click(function() {",
          "1015:     print_status(\"Instrumenting the application with Frida.\");",
          "1018:     window.sessionStorage.setItem('code', code);",
          "1019:     $('#fd_log').removeAttr('disabled');",
          "1020:     $('#frida-tab').removeClass('disabled');",
          "",
          "[Added Lines]",
          "1194: function frida_instrument(frida_action, pid=null, new_pkg=null){",
          "1197:     window.sessionStorage.setItem('code_android', code);",
          "1199:     document.getElementById('frida-logs').style.display = 'block';",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1026:       $('#apimon').show();",
          "1027:     else",
          "1028:       $('#apimon').hide();",
          "1030:     var auxiliary_hooks = [];",
          "1031:     $.each($(\"input[name='auxiliary']:checked\"), function(){",
          "1032:         auxiliary_hooks.push($(this).val());",
          "1033:     });",
          "1036:       hash: '{{ hash }}',",
          "1037:       default_hooks: default_hooks.join(\",\"),",
          "1038:       auxiliary_hooks: auxiliary_hooks.join(\",\"),",
          "",
          "[Removed Lines]",
          "1035:     action(document.location.origin + '/frida_instrument/', {",
          "",
          "[Added Lines]",
          "1214:     if (frida_action === 'spawn'){",
          "1215:       print_status(\"Instrumenting the application with Frida.\");",
          "1216:     } else if (frida_action === 'session' && pid === null){",
          "1217:       print_status(\"Injecting Frida script to existing session.\");",
          "1218:     } else if (pid){",
          "1219:       print_status(\"Attaching to PID: \" + parseInt(pid));",
          "1220:     } else if (frida_action == 'ps'){",
          "1221:       print_status(\"Enumerating running processes.\");",
          "1222:     }",
          "1223:     action('{% url 'android_instrument' %}', {",
          "1224:       frida_action,",
          "1225:       pid, // attach pid",
          "1226:       new_package: new_pkg, // attach package",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1041:       class_trace:  $('#class_trace').val(),",
          "1042:       frida_code: editor.getDoc().getValue(),",
          "1043:     }, function(json) {",
          "1047:       print_status(json.message);",
          "1048:   });",
          "1049:   return false;",
          "1050: });",
          "1053: $(\"#deps\").click(function() {",
          "1054:     print_status(\"Getting application runtime dependencies.\");",
          "1055:     action(document.location.origin + '/get_dependencies/', {hash: '{{ hash }}'}, function(json) {",
          "1056:       if (json.status===\"ok\"){",
          "1059:           print_status(\"Dependencies collected!\");",
          "1060:       } else {",
          "1061:           print_status(json.message);",
          "",
          "[Removed Lines]",
          "1044:     if (json.status === \"ok\")",
          "1045:       print_status(\"Frida instrumentation successful.\");",
          "1046:     else",
          "1057:           $('#fd_log').removeAttr('disabled');",
          "1058:           $('#frida-tab').removeClass('disabled');",
          "",
          "[Added Lines]",
          "1235:     if (json.status !== \"ok\")",
          "1238:       if (frida_action == 'ps' && json.message && json.message.length > 0 && Array.isArray(json.message)){",
          "1239:         $(\"#process_select\").empty();",
          "1240:         json.message.forEach(function(p) {",
          "1241:           $('#process_select').append(",
          "1242:             '<option value=' + escape(p.pid.toString()) + ',' + escape(p.identifier.toString()) + '>' +  escape(p.pid.toString()) + ': ' + escapeHtml(p.name.toString()) + ' - ' + escape(p.identifier.toString()) + '</option>');",
          "1243:         });",
          "1244:         $('#frida_attach_mdl').modal('toggle');",
          "1245:       }",
          "1247: }",
          "1251: $(\"#frida_spawn\").click(function() {",
          "1252:   frida_instrument('spawn');",
          "1253:   return false;",
          "1254: });",
          "1257: $(\"#frida_session\").click(function() {",
          "1258:   $( \"input[name='default_hooks']:checkbox\" ).prop( \"checked\", false );",
          "1259:   frida_instrument('session');",
          "1265: $(\"#frida_attach\").click(function() {",
          "1266:   frida_instrument('ps');",
          "1267:   return false;",
          "1268: });",
          "1271: $(\"#attach_to_pid\").click(function() {",
          "1272:   var values = $('#process_select').val();",
          "1273:   var pid = values.split(',')[0];",
          "1274:   var package = values.split(',')[1];",
          "1275:   frida_instrument('session', pid, package);",
          "1276:   $('#frida_attach_mdl').modal('hide');",
          "1277:   return false;",
          "1278: });",
          "",
          "---------------"
        ],
        "mobsf/templates/dynamic_analysis/ios/dynamic_analysis.html||mobsf/templates/dynamic_analysis/ios/dynamic_analysis.html": [
          "File: mobsf/templates/dynamic_analysis/ios/dynamic_analysis.html -> mobsf/templates/dynamic_analysis/ios/dynamic_analysis.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "107:               </div>",
          "108:               <div class=\"card-body\">",
          "109:                  <div class=\"table-responsive\">",
          "153:                 <h4> Apps in Device</h4>",
          "154:                 <table id=\"in_device\" class=\"table table-bordered table-hover table-striped\">",
          "155:                   <tbody>",
          "156:                   </tbody>",
          "157:               </table>",
          "158:             </div>",
          "159:               </div>",
          "160:               <!-- /.card-body -->",
          "",
          "[Removed Lines]",
          "110:                   <h4> Apps Available</h4>",
          "111:                 <table class=\"dattbl table table-bordered table-hover table-striped\">",
          "112:                     <thead>",
          "113:                     <tr>",
          "114:                         <th>APP</th>",
          "115:                         <th>FILE NAME</th>",
          "116:                         <th>BUNDLE ID</th>",
          "117:                         <th>ACTION</th>",
          "118:                     </tr>",
          "119:                     </thead>",
          "120:                     <tbody>",
          "121:                     {% if apps %}",
          "122:                     {% for e in apps %}",
          "123:                         <tr>",
          "124:                             <td align=\"center\">",
          "125:                               <img id=\"app_icon\" src=\"/download/{{ e.MD5 }}-icon.png\"/>",
          "126:                               <br/><strong>{{ e.APP_NAME }} - {{ e.APP_VERSION }}</strong>",
          "127:                             </td>",
          "128:                             <td>",
          "129:                                 {{ e.FILE_NAME }}",
          "130:                             </td>",
          "131:                             <td>",
          "132:                                 {{ e.BUNDLE_ID }}",
          "133:                            </td>",
          "134:                             <td align=\"center\">",
          "135:                               {% if e.ENCRYPTED %}",
          "136:                                 <span class=\"badge badge-danger\">ENCRYPTED IPA</span></br>",
          "137:                                 <small>You need decrypted IPA for dynamic analysis.</small>",
          "138:                               {% else %}",
          "139:                               <p>",
          "140:                                   <a class=\"btn btn-success disable\" onclick=\"upload_and_install('{% url 'setup_environment' checksum=e.MD5 %}')\"><i class=\"fab fa-apple\"></i> Upload &amp; Install</a>",
          "141:                               </p>",
          "142:                               <p>",
          "143:                                 <a class=\"btn btn-info {% if not e.DYNAMIC_REPORT_EXISTS %}disabled{% endif %}\" href=\"{% url 'ios_view_report' bundle_id=e.BUNDLE_ID %}\"><i class=\"fa fa-mobile\"></i> View Report </a>",
          "144:                              </p>",
          "145:                              {% endif %}",
          "146:                             </td>",
          "147:                         </tr>",
          "148:                     {% endfor %}",
          "149:                     {% endif %}",
          "150:                     </tbody>",
          "151:                 </table>",
          "152:               </br>",
          "",
          "[Added Lines]",
          "115:             </br>",
          "117:             <h4> Apps Available</h4>",
          "118:             <table class=\"dattbl table table-bordered table-hover table-striped\">",
          "119:                 <thead>",
          "120:                 <tr>",
          "121:                     <th>APP</th>",
          "122:                     <th>FILE NAME</th>",
          "123:                     <th>BUNDLE ID</th>",
          "124:                     <th>ACTION</th>",
          "125:                 </tr>",
          "126:                 </thead>",
          "127:                 <tbody>",
          "128:                 {% if apps %}",
          "129:                 {% for e in apps %}",
          "130:                     <tr>",
          "131:                         <td align=\"center\">",
          "132:                           <img id=\"app_icon\" src=\"/download/{{ e.MD5 }}-icon.png\"/>",
          "133:                           <br/><strong>{{ e.APP_NAME }} - {{ e.APP_VERSION }}</strong>",
          "134:                         </td>",
          "135:                         <td>",
          "136:                             {{ e.FILE_NAME }}",
          "137:                         </td>",
          "138:                         <td>",
          "139:                             {{ e.BUNDLE_ID }}",
          "140:                        </td>",
          "141:                         <td align=\"center\">",
          "142:                           {% if e.ENCRYPTED %}",
          "143:                             <span class=\"badge badge-danger\">ENCRYPTED IPA</span></br>",
          "144:                             <small>You need decrypted IPA for dynamic analysis.</small>",
          "145:                           {% else %}",
          "146:                           <p>",
          "147:                               <a class=\"btn btn-success disable\" onclick=\"upload_and_install('{% url 'setup_environment' checksum=e.MD5 %}')\"><i class=\"fab fa-apple\"></i> Upload &amp; Install</a>",
          "148:                           </p>",
          "149:                           <p>",
          "150:                             <a class=\"btn btn-info {% if not e.DYNAMIC_REPORT_EXISTS %}disabled{% endif %}\" href=\"{% url 'ios_view_report' bundle_id=e.BUNDLE_ID %}\"><i class=\"fa fa-mobile\"></i> View Report </a>",
          "151:                          </p>",
          "152:                          {% endif %}",
          "153:                         </td>",
          "154:                     </tr>",
          "155:                 {% endfor %}",
          "156:                 {% endif %}",
          "157:                 </tbody>",
          "158:             </table>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "355:                     instance_id: $('#ios_dynamic').val(),",
          "356:                     },",
          "357:                 success : function(json) {",
          "358:                     if(!json.status){",
          "359:                       stop_loader();",
          "360:                       Swal.fire(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "360:                     if(!json)",
          "361:                       stop_loader();",
          "",
          "---------------"
        ],
        "mobsf/templates/dynamic_analysis/ios/dynamic_analyzer.html||mobsf/templates/dynamic_analysis/ios/dynamic_analyzer.html": [
          "File: mobsf/templates/dynamic_analysis/ios/dynamic_analyzer.html -> mobsf/templates/dynamic_analysis/ios/dynamic_analyzer.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "820:                     i.src = json.message;",
          "821:                   }",
          "822:                   $('#my').attr('src', json.message);",
          "824:                 } else {",
          "825:                   console.log(json.message)",
          "826:                 }",
          "827:               });",
          "829:       } else {",
          "830:           $(\"#screen\").html(\"<i class='fa fa-mobile-alt'></i> Show Screen\");",
          "831:           print_status(\"Screen streaming stopped.\");",
          "",
          "[Removed Lines]",
          "828:           },3000);",
          "",
          "[Added Lines]",
          "826:           },2000);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "841: var touch = \"off\";",
          "842: function ios_input(event, x, y){",
          "843:   if ( touch === \"on\"){",
          "845:         if (json.status==='ok')",
          "846:           console.log('Event: ' + event);",
          "847:         else",
          "",
          "[Removed Lines]",
          "844:     action('{% url 'ios_touch' %}', { event, instance_id: '{{ instance_id }}', x, y}, function(json) {",
          "",
          "[Added Lines]",
          "842:     action('{% url 'ios_touch' %}', { event, instance_id: '{{ instance_id }}', x, y, max_x: screen_width, max_y: screen_height}, function(json) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "850:   }",
          "851: }",
          "854: var pressedTime;",
          "855: var releaseTime;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "851: var xaxis, yaxis = 0;",
          "853: function getXY(e, t){",
          "855:     var offset = $(t).offset();",
          "856:     var x = e.pageX - offset.left;",
          "857:     var y = e.pageY - offset.top;",
          "858:     xaxis = Math.trunc(x * (screen_width/320));",
          "859:     yaxis = Math.trunc(y * (screen_height/570));",
          "860:     console.log('X Axis: '+ xaxis + \" Y Axis: \"+ yaxis);",
          "861: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "860: $(\"#my\").on( \"mouseup\", function(e) {",
          "861:   releaseTime = new Date().getTime();",
          "862:   if (releaseTime - pressedTime < 300 && touch === \"on\") {",
          "871:   }",
          "872: });",
          "",
          "[Removed Lines]",
          "864:       var offset = $(this).offset();",
          "865:       var x = e.pageX - offset.left;",
          "866:       var y = e.pageY - offset.top;",
          "867:       x = Math.trunc(x * (screen_width/320));",
          "868:       y = Math.trunc(y * (screen_height/570));",
          "869:       console.log('X Axis: '+ x + \" Y Axis: \"+ y);",
          "870:       ios_input('touch', x, y);",
          "",
          "[Added Lines]",
          "872:   getXY(e, this);",
          "874:       ios_input('touch', xaxis, yaxis);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "892: $('#container').on('keypress', function(event) {",
          "894:     if (touch === \"on\"){",
          "896:         switch(event.keyCode){",
          "897:           case 13:",
          "900:             $('#ios_text_btn').click();",
          "901:             break;",
          "902:           default:",
          "903:           $('#ios_text').val($('#ios_text').val() + String.fromCharCode(event.keyCode));",
          "904:         }",
          "",
          "[Removed Lines]",
          "895:         console.log(String.fromCharCode(event.keyCode));",
          "",
          "[Added Lines]",
          "905:           case 32:",
          "908:             $('#ios_text').val($('#ios_text').val() + ' ');",
          "909:             event.preventDefault();",
          "910:             break;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "950:   if (touch === \"on\") {",
          "951:     switch(direction){",
          "952:       case 'up': case 'leftup': case 'rightup':",
          "954:         break;",
          "955:       case 'down': case 'leftdown': case 'rightdown':",
          "957:         break;",
          "958:       case 'left':",
          "960:         break;",
          "961:       case 'right':",
          "963:         break;",
          "964:     }",
          "965: }",
          "",
          "[Removed Lines]",
          "953:         ios_input('swipe_down', 0, 0)",
          "956:         ios_input('swipe_up', 0, 0)",
          "959:         ios_input('swipe_right', 0, 0)",
          "962:         ios_input('swipe_left', 0, 0)",
          "",
          "[Added Lines]",
          "959:         ios_input('swipe_down', xaxis, yaxis)",
          "962:         ios_input('swipe_up', xaxis, yaxis)",
          "965:         ios_input('swipe_right', xaxis, yaxis)",
          "968:         ios_input('swipe_left', xaxis, yaxis)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1106: $(\"#frida_session\").click(function() {",
          "1107:   start_network_capture();",
          "1108:   frida_instrument('session');",
          "1109:   enableReportBtn(2);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1113:   $( \"input[name='default_hooks']:checkbox\" ).prop( \"checked\", false );",
          "1114:   $( \"input[name='dump_hooks']:checkbox\" ).prop( \"checked\", false );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8e29cb06a60adc2e9de3c1a92a767c44ea3bf2a6",
      "candidate_info": {
        "commit_hash": "8e29cb06a60adc2e9de3c1a92a767c44ea3bf2a6",
        "repo": "MobSF/Mobile-Security-Framework-MobSF",
        "commit_url": "https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/8e29cb06a60adc2e9de3c1a92a767c44ea3bf2a6",
        "files": [
          ".dockerignore",
          ".github/workflows/docker-latest.yml",
          ".github/workflows/docker-release.yml",
          ".github/workflows/mobsf-test.yml",
          ".github/workflows/python-publish.yml",
          "Dockerfile",
          "README.md",
          "mobsf/MobSF/init.py",
          "mobsf/MobSF/settings.py",
          "poetry.lock",
          "pyproject.toml",
          "requirements.txt",
          "run.bat",
          "run.sh",
          "scripts/check_install.py",
          "scripts/entrypoint.sh",
          "scripts/install_java_wkhtmltopdf.sh",
          "setup.bat",
          "setup.py",
          "setup.sh",
          "tox.ini"
        ],
        "message": "Pip to Poetry,  Ubuntu Base image Bump, Dockerfile QA, Python 3.11 support (#2244)\n\n* Docker base image update\n* Docker file QA\n* Github Actions version update\n* Removed unwanted pinned repository\n* Pip to Poetry migration\n* Bump httptools\n* Jump yara-python-dex\n* Python 3.11 support",
        "before_after_code_files": [
          "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
          "mobsf/MobSF/settings.py||mobsf/MobSF/settings.py",
          "poetry.lock||poetry.lock",
          "run.bat||run.bat",
          "run.sh||run.sh",
          "scripts/check_install.py||scripts/check_install.py",
          "scripts/entrypoint.sh||scripts/entrypoint.sh",
          "scripts/install_java_wkhtmltopdf.sh||scripts/install_java_wkhtmltopdf.sh",
          "setup.bat||setup.bat",
          "setup.py||setup.py",
          "setup.sh||setup.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
            "poetry.lock||poetry.lock"
          ],
          "candidate": [
            "mobsf/MobSF/init.py||mobsf/MobSF/init.py",
            "poetry.lock||poetry.lock"
          ]
        }
      },
      "candidate_diff": {
        "mobsf/MobSF/init.py||mobsf/MobSF/init.py": [
          "File: mobsf/MobSF/init.py -> mobsf/MobSF/init.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: logger = logging.getLogger(__name__)",
          "14: BANNER = \"\"\"",
          "15:   __  __       _    ____  _____       _____ _____",
          "16:  |  \\/  | ___ | |__/ ___||  ___|_   _|___ /|___  |",
          "",
          "[Removed Lines]",
          "13: VERSION = '3.7.5'",
          "",
          "[Added Lines]",
          "13: VERSION = '3.7.6'",
          "",
          "---------------"
        ],
        "mobsf/MobSF/settings.py||mobsf/MobSF/settings.py": [
          "File: mobsf/MobSF/settings.py -> mobsf/MobSF/settings.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:     'application/x-itunes-ipa',",
          "90:     'application/x-zip-compressed',",
          "91:     'application/x-ar',",
          "92:     'binary/octet-stream',",
          "93: ]",
          "94: ZIP_MIME = [",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "92:     'text/vnd.a',",
          "",
          "---------------"
        ],
        "poetry.lock||poetry.lock": [
          "File: poetry.lock -> poetry.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # This file is automatically @generated by Poetry 1.6.1 and should not be changed by hand.",
          "3: [[package]]",
          "4: name = \"altgraph\"",
          "5: version = \"0.17.3\"",
          "6: description = \"Python graph (network) package\"",
          "7: optional = false",
          "8: python-versions = \"*\"",
          "9: files = [",
          "10:     {file = \"altgraph-0.17.3-py2.py3-none-any.whl\", hash = \"sha256:c8ac1ca6772207179ed8003ce7687757c04b0b71536f81e2ac5755c6226458fe\"},",
          "11:     {file = \"altgraph-0.17.3.tar.gz\", hash = \"sha256:ad33358114df7c9416cdb8fa1eaa5852166c505118717021c6a8c7c7abbd03dd\"},",
          "12: ]",
          "14: [[package]]",
          "15: name = \"androguard\"",
          "16: version = \"3.4.0a1\"",
          "17: description = \"Androguard is a full python tool to play with Android files.\"",
          "18: optional = false",
          "19: python-versions = \">=3.5\"",
          "20: files = [",
          "21:     {file = \"androguard-3.4.0a1-py3-none-any.whl\", hash = \"sha256:1292b6631878ccd75c02426f68c159edee3d3716b212428397800b5b328537a2\"},",
          "22:     {file = \"androguard-3.4.0a1.tar.gz\", hash = \"sha256:2bdd9583321b14bbc0c5bd92fd330f0efe7fb6abe1f334b658ded5f93849e898\"},",
          "23: ]",
          "25: [package.dependencies]",
          "26: asn1crypto = \">=0.24.0\"",
          "27: click = \">=7.0\"",
          "28: colorama = \">=0.4.1\"",
          "29: ipython = \">=5.0.0\"",
          "30: lxml = \">=4.3.0\"",
          "31: matplotlib = \">=3.0.2\"",
          "32: networkx = \">=2.2\"",
          "33: pydot = \">=1.4.1\"",
          "34: pygments = \">=2.3.1\"",
          "36: [package.extras]",
          "37: docs = [\"sphinx\", \"sphinx-rtd-theme\", \"sphinxcontrib-programoutput (>0.8)\"]",
          "38: gui = [\"PyQt5\", \"pyperclip\"]",
          "39: magic = [\"python-magic-bin (>=0.4.14)\"]",
          "40: tests = [\"codecov\", \"coverage\", \"mock (>=2.0)\", \"nose\", \"nose-timer\"]",
          "42: [[package]]",
          "43: name = \"apkid\"",
          "44: version = \"2.1.5\"",
          "45: description = \"Android Package Identifier\"",
          "46: optional = false",
          "47: python-versions = \"*\"",
          "48: files = [",
          "49:     {file = \"apkid-2.1.5-py2.py3-none-any.whl\", hash = \"sha256:be54f05d0599a163df505d8de5f7d3cccd3043c784334c15e4fa7034e7e9687a\"},",
          "50:     {file = \"apkid-2.1.5.tar.gz\", hash = \"sha256:0f739ff9fc9d5a4c739af26762964bb5120b5264f5c58923d3434dd5d224e2b0\"},",
          "51: ]",
          "53: [package.dependencies]",
          "54: yara-python-dex = \">=1.0.1\"",
          "56: [package.extras]",
          "57: dev = [\"mypy\", \"pypandoc\", \"twine\"]",
          "58: test = [\"delayed-assert\", \"factory-boy\", \"mock\", \"pytest\", \"pytest-cov\", \"pytest-factoryboy\", \"pytest-flask\", \"pytest-runner\", \"tox\"]",
          "60: [[package]]",
          "61: name = \"apksigcopier\"",
          "62: version = \"1.1.1\"",
          "63: description = \"copy/extract/patch android apk signatures & compare apks\"",
          "64: optional = false",
          "65: python-versions = \">=3.7\"",
          "66: files = [",
          "67:     {file = \"apksigcopier-1.1.1-py3-none-any.whl\", hash = \"sha256:0834bb7d6f3607bb0994cf8cd2e26b8f0c9d481e13b75872e0fa9cec052e519b\"},",
          "68:     {file = \"apksigcopier-1.1.1.tar.gz\", hash = \"sha256:ea5d3482128f2bcfa8307356f5bed4f4240a559d702acb117bf777955f64c851\"},",
          "69: ]",
          "71: [package.dependencies]",
          "72: click = \">=6.0\"",
          "74: [[package]]",
          "75: name = \"apksigtool\"",
          "76: version = \"0.1.0\"",
          "77: description = \"parse & verify android apk signing blocks\"",
          "78: optional = false",
          "79: python-versions = \">=3.5\"",
          "80: files = [",
          "81:     {file = \"apksigtool-0.1.0-py3-none-any.whl\", hash = \"sha256:136525c43bc57942798de43e6dfed9df84081276957cbfd3a2d7b0b118a29089\"},",
          "82:     {file = \"apksigtool-0.1.0.tar.gz\", hash = \"sha256:0039368ce5b5f938301eaefb59a008df605df873dce67b55cd7803379475cfc7\"},",
          "83: ]",
          "85: [package.dependencies]",
          "86: apksigcopier = \"*\"",
          "87: asn1crypto = \"*\"",
          "88: click = \">=6.0\"",
          "89: cryptography = \"*\"",
          "90: simplejson = \"*\"",
          "92: [[package]]",
          "93: name = \"appnope\"",
          "94: version = \"0.1.3\"",
          "95: description = \"Disable App Nap on macOS >= 10.9\"",
          "96: optional = false",
          "97: python-versions = \"*\"",
          "98: files = [",
          "99:     {file = \"appnope-0.1.3-py2.py3-none-any.whl\", hash = \"sha256:265a455292d0bd8a72453494fa24df5a11eb18373a60c7c0430889f22548605e\"},",
          "100:     {file = \"appnope-0.1.3.tar.gz\", hash = \"sha256:02bd91c4de869fbb1e1c50aafc4098827a7a54ab2f39d9dcba6c9547ed920e24\"},",
          "101: ]",
          "103: [[package]]",
          "104: name = \"arpy\"",
          "105: version = \"2.3.0\"",
          "106: description = \"Library for accessing \\\"ar\\\" files\"",
          "107: optional = false",
          "108: python-versions = \"*\"",
          "109: files = [",
          "110:     {file = \"arpy-2.3.0.tar.gz\", hash = \"sha256:8302829a991cfcef2630b61e00f315db73164021cecbd7fb1fc18525f83f339c\"},",
          "111: ]",
          "113: [[package]]",
          "114: name = \"asgiref\"",
          "115: version = \"3.5.2\"",
          "116: description = \"ASGI specs, helper code, and adapters\"",
          "117: optional = false",
          "118: python-versions = \">=3.7\"",
          "119: files = [",
          "120:     {file = \"asgiref-3.5.2-py3-none-any.whl\", hash = \"sha256:1d2880b792ae8757289136f1db2b7b99100ce959b2aa57fd69dab783d05afac4\"},",
          "121:     {file = \"asgiref-3.5.2.tar.gz\", hash = \"sha256:4a29362a6acebe09bf1d6640db38c1dc3d9217c68e6f9f6204d72667fc19a424\"},",
          "122: ]",
          "124: [package.extras]",
          "125: tests = [\"mypy (>=0.800)\", \"pytest\", \"pytest-asyncio\"]",
          "127: [[package]]",
          "128: name = \"asn1crypto\"",
          "129: version = \"1.5.1\"",
          "130: description = \"Fast ASN.1 parser and serializer with definitions for private keys, public keys, certificates, CRL, OCSP, CMS, PKCS#3, PKCS#7, PKCS#8, PKCS#12, PKCS#5, X.509 and TSP\"",
          "131: optional = false",
          "132: python-versions = \"*\"",
          "133: files = [",
          "134:     {file = \"asn1crypto-1.5.1-py2.py3-none-any.whl\", hash = \"sha256:db4e40728b728508912cbb3d44f19ce188f218e9eba635821bb4b68564f8fd67\"},",
          "135:     {file = \"asn1crypto-1.5.1.tar.gz\", hash = \"sha256:13ae38502be632115abf8a24cbe5f4da52e3b5231990aff31123c805306ccb9c\"},",
          "136: ]",
          "138: [[package]]",
          "139: name = \"asttokens\"",
          "140: version = \"2.2.1\"",
          "141: description = \"Annotate AST trees with source code positions\"",
          "142: optional = false",
          "143: python-versions = \"*\"",
          "144: files = [",
          "145:     {file = \"asttokens-2.2.1-py2.py3-none-any.whl\", hash = \"sha256:6b0ac9e93fb0335014d382b8fa9b3afa7df546984258005da0b9e7095b3deb1c\"},",
          "146:     {file = \"asttokens-2.2.1.tar.gz\", hash = \"sha256:4622110b2a6f30b77e1473affaa97e711bc2f07d3f10848420ff1898edbe94f3\"},",
          "147: ]",
          "149: [package.dependencies]",
          "150: six = \"*\"",
          "152: [package.extras]",
          "153: test = [\"astroid\", \"pytest\"]",
          "155: [[package]]",
          "156: name = \"attrs\"",
          "157: version = \"21.4.0\"",
          "158: description = \"Classes Without Boilerplate\"",
          "159: optional = false",
          "160: python-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*\"",
          "161: files = [",
          "162:     {file = \"attrs-21.4.0-py2.py3-none-any.whl\", hash = \"sha256:2d27e3784d7a565d36ab851fe94887c5eccd6a463168875832a1be79c82828b4\"},",
          "163:     {file = \"attrs-21.4.0.tar.gz\", hash = \"sha256:626ba8234211db98e869df76230a137c4c40a12d72445c45d5f5b716f076e2fd\"},",
          "164: ]",
          "166: [package.extras]",
          "167: dev = [\"cloudpickle\", \"coverage[toml] (>=5.0.2)\", \"furo\", \"hypothesis\", \"mypy\", \"pre-commit\", \"pympler\", \"pytest (>=4.3.0)\", \"pytest-mypy-plugins\", \"six\", \"sphinx\", \"sphinx-notfound-page\", \"zope.interface\"]",
          "168: docs = [\"furo\", \"sphinx\", \"sphinx-notfound-page\", \"zope.interface\"]",
          "169: tests = [\"cloudpickle\", \"coverage[toml] (>=5.0.2)\", \"hypothesis\", \"mypy\", \"pympler\", \"pytest (>=4.3.0)\", \"pytest-mypy-plugins\", \"six\", \"zope.interface\"]",
          "170: tests-no-zope = [\"cloudpickle\", \"coverage[toml] (>=5.0.2)\", \"hypothesis\", \"mypy\", \"pympler\", \"pytest (>=4.3.0)\", \"pytest-mypy-plugins\", \"six\"]",
          "172: [[package]]",
          "173: name = \"backcall\"",
          "174: version = \"0.2.0\"",
          "175: description = \"Specifications for callback functions passed in to an API\"",
          "176: optional = false",
          "177: python-versions = \"*\"",
          "178: files = [",
          "179:     {file = \"backcall-0.2.0-py2.py3-none-any.whl\", hash = \"sha256:fbbce6a29f263178a1f7915c1940bde0ec2b2a967566fe1c65c1dfb7422bd255\"},",
          "180:     {file = \"backcall-0.2.0.tar.gz\", hash = \"sha256:5cbdbf27be5e7cfadb448baf0aa95508f91f2bbc6c6437cd9cd06e2a4c215e1e\"},",
          "181: ]",
          "183: [[package]]",
          "184: name = \"beautifulsoup4\"",
          "185: version = \"4.12.2\"",
          "186: description = \"Screen-scraping library\"",
          "187: optional = false",
          "188: python-versions = \">=3.6.0\"",
          "189: files = [",
          "190:     {file = \"beautifulsoup4-4.12.2-py3-none-any.whl\", hash = \"sha256:bd2520ca0d9d7d12694a53d44ac482d181b4ec1888909b035a3dbf40d0f57d4a\"},",
          "191:     {file = \"beautifulsoup4-4.12.2.tar.gz\", hash = \"sha256:492bbc69dca35d12daac71c4db1bfff0c876c00ef4a2ffacce226d4638eb72da\"},",
          "192: ]",
          "194: [package.dependencies]",
          "195: soupsieve = \">1.2\"",
          "197: [package.extras]",
          "198: html5lib = [\"html5lib\"]",
          "199: lxml = [\"lxml\"]",
          "201: [[package]]",
          "202: name = \"biplist\"",
          "203: version = \"1.0.3\"",
          "204: description = \"biplist is a library for reading/writing binary plists.\"",
          "205: optional = false",
          "206: python-versions = \"*\"",
          "207: files = [",
          "208:     {file = \"biplist-1.0.3.tar.gz\", hash = \"sha256:4c0549764c5fe50b28042ec21aa2e14fe1a2224e239a1dae77d9e7f3932aa4c6\"},",
          "209: ]",
          "211: [[package]]",
          "212: name = \"boltons\"",
          "213: version = \"21.0.0\"",
          "214: description = \"When they're not builtins, they're boltons.\"",
          "215: optional = false",
          "216: python-versions = \"*\"",
          "217: files = [",
          "218:     {file = \"boltons-21.0.0-py2.py3-none-any.whl\", hash = \"sha256:b9bb7b58b2b420bbe11a6025fdef6d3e5edc9f76a42fb467afe7ca212ef9948b\"},",
          "219:     {file = \"boltons-21.0.0.tar.gz\", hash = \"sha256:65e70a79a731a7fe6e98592ecfb5ccf2115873d01dbc576079874629e5c90f13\"},",
          "220: ]",
          "222: [[package]]",
          "223: name = \"bracex\"",
          "224: version = \"2.3.post1\"",
          "225: description = \"Bash style brace expander.\"",
          "226: optional = false",
          "227: python-versions = \">=3.7\"",
          "228: files = [",
          "229:     {file = \"bracex-2.3.post1-py3-none-any.whl\", hash = \"sha256:351b7f20d56fb9ea91f9b9e9e7664db466eb234188c175fd943f8f755c807e73\"},",
          "230:     {file = \"bracex-2.3.post1.tar.gz\", hash = \"sha256:e7b23fc8b2cd06d3dec0692baabecb249dda94e06a617901ff03a6c56fd71693\"},",
          "231: ]",
          "233: [[package]]",
          "234: name = \"brotli\"",
          "235: version = \"1.0.9\"",
          "236: description = \"Python bindings for the Brotli compression library\"",
          "237: optional = false",
          "238: python-versions = \"*\"",
          "239: files = [",
          "240:     {file = \"Brotli-1.0.9-cp27-cp27m-macosx_10_9_x86_64.whl\", hash = \"sha256:268fe94547ba25b58ebc724680609c8ee3e5a843202e9a381f6f9c5e8bdb5c70\"},",
          "241:     {file = \"Brotli-1.0.9-cp27-cp27m-manylinux1_i686.whl\", hash = \"sha256:c2415d9d082152460f2bd4e382a1e85aed233abc92db5a3880da2257dc7daf7b\"},",
          "242:     {file = \"Brotli-1.0.9-cp27-cp27m-manylinux1_x86_64.whl\", hash = \"sha256:5913a1177fc36e30fcf6dc868ce23b0453952c78c04c266d3149b3d39e1410d6\"},",
          "243:     {file = \"Brotli-1.0.9-cp27-cp27m-win32.whl\", hash = \"sha256:afde17ae04d90fbe53afb628f7f2d4ca022797aa093e809de5c3cf276f61bbfa\"},",
          "244:     {file = \"Brotli-1.0.9-cp27-cp27mu-manylinux1_i686.whl\", hash = \"sha256:7cb81373984cc0e4682f31bc3d6be9026006d96eecd07ea49aafb06897746452\"},",
          "245:     {file = \"Brotli-1.0.9-cp27-cp27mu-manylinux1_x86_64.whl\", hash = \"sha256:db844eb158a87ccab83e868a762ea8024ae27337fc7ddcbfcddd157f841fdfe7\"},",
          "246:     {file = \"Brotli-1.0.9-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:9744a863b489c79a73aba014df554b0e7a0fc44ef3f8a0ef2a52919c7d155031\"},",
          "247:     {file = \"Brotli-1.0.9-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:a72661af47119a80d82fa583b554095308d6a4c356b2a554fdc2799bc19f2a43\"},",
          "248:     {file = \"Brotli-1.0.9-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:7ee83d3e3a024a9618e5be64648d6d11c37047ac48adff25f12fa4226cf23d1c\"},",
          "249:     {file = \"Brotli-1.0.9-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:19598ecddd8a212aedb1ffa15763dd52a388518c4550e615aed88dc3753c0f0c\"},",
          "250:     {file = \"Brotli-1.0.9-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:44bb8ff420c1d19d91d79d8c3574b8954288bdff0273bf788954064d260d7ab0\"},",
          "251:     {file = \"Brotli-1.0.9-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:e23281b9a08ec338469268f98f194658abfb13658ee98e2b7f85ee9dd06caa91\"},",
          "252:     {file = \"Brotli-1.0.9-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:3496fc835370da351d37cada4cf744039616a6db7d13c430035e901443a34daa\"},",
          "253:     {file = \"Brotli-1.0.9-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:b83bb06a0192cccf1eb8d0a28672a1b79c74c3a8a5f2619625aeb6f28b3a82bb\"},",
          "254:     {file = \"Brotli-1.0.9-cp310-cp310-win32.whl\", hash = \"sha256:26d168aac4aaec9a4394221240e8a5436b5634adc3cd1cdf637f6645cecbf181\"},",
          "255:     {file = \"Brotli-1.0.9-cp310-cp310-win_amd64.whl\", hash = \"sha256:622a231b08899c864eb87e85f81c75e7b9ce05b001e59bbfbf43d4a71f5f32b2\"},",
          "256:     {file = \"Brotli-1.0.9-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:cc0283a406774f465fb45ec7efb66857c09ffefbe49ec20b7882eff6d3c86d3a\"},",
          "257:     {file = \"Brotli-1.0.9-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:11d3283d89af7033236fa4e73ec2cbe743d4f6a81d41bd234f24bf63dde979df\"},",
          "258:     {file = \"Brotli-1.0.9-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:3c1306004d49b84bd0c4f90457c6f57ad109f5cc6067a9664e12b7b79a9948ad\"},",
          "259:     {file = \"Brotli-1.0.9-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b1375b5d17d6145c798661b67e4ae9d5496920d9265e2f00f1c2c0b5ae91fbde\"},",
          "260:     {file = \"Brotli-1.0.9-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:cab1b5964b39607a66adbba01f1c12df2e55ac36c81ec6ed44f2fca44178bf1a\"},",
          "261:     {file = \"Brotli-1.0.9-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:8ed6a5b3d23ecc00ea02e1ed8e0ff9a08f4fc87a1f58a2530e71c0f48adf882f\"},",
          "262:     {file = \"Brotli-1.0.9-cp311-cp311-musllinux_1_1_i686.whl\", hash = \"sha256:cb02ed34557afde2d2da68194d12f5719ee96cfb2eacc886352cb73e3808fc5d\"},",
          "263:     {file = \"Brotli-1.0.9-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:b3523f51818e8f16599613edddb1ff924eeb4b53ab7e7197f85cbc321cdca32f\"},",
          "264:     {file = \"Brotli-1.0.9-cp311-cp311-win32.whl\", hash = \"sha256:ba72d37e2a924717990f4d7482e8ac88e2ef43fb95491eb6e0d124d77d2a150d\"},",
          "265:     {file = \"Brotli-1.0.9-cp311-cp311-win_amd64.whl\", hash = \"sha256:3ffaadcaeafe9d30a7e4e1e97ad727e4f5610b9fa2f7551998471e3736738679\"},",
          "266:     {file = \"Brotli-1.0.9-cp35-cp35m-macosx_10_6_intel.whl\", hash = \"sha256:c83aa123d56f2e060644427a882a36b3c12db93727ad7a7b9efd7d7f3e9cc2c4\"},",
          "267:     {file = \"Brotli-1.0.9-cp35-cp35m-manylinux1_i686.whl\", hash = \"sha256:6b2ae9f5f67f89aade1fab0f7fd8f2832501311c363a21579d02defa844d9296\"},",
          "268:     {file = \"Brotli-1.0.9-cp35-cp35m-manylinux1_x86_64.whl\", hash = \"sha256:68715970f16b6e92c574c30747c95cf8cf62804569647386ff032195dc89a430\"},",
          "269:     {file = \"Brotli-1.0.9-cp35-cp35m-win32.whl\", hash = \"sha256:defed7ea5f218a9f2336301e6fd379f55c655bea65ba2476346340a0ce6f74a1\"},",
          "270:     {file = \"Brotli-1.0.9-cp35-cp35m-win_amd64.whl\", hash = \"sha256:88c63a1b55f352b02c6ffd24b15ead9fc0e8bf781dbe070213039324922a2eea\"},",
          "271:     {file = \"Brotli-1.0.9-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:503fa6af7da9f4b5780bb7e4cbe0c639b010f12be85d02c99452825dd0feef3f\"},",
          "272:     {file = \"Brotli-1.0.9-cp36-cp36m-manylinux1_i686.whl\", hash = \"sha256:40d15c79f42e0a2c72892bf407979febd9cf91f36f495ffb333d1d04cebb34e4\"},",
          "273:     {file = \"Brotli-1.0.9-cp36-cp36m-manylinux1_x86_64.whl\", hash = \"sha256:93130612b837103e15ac3f9cbacb4613f9e348b58b3aad53721d92e57f96d46a\"},",
          "274:     {file = \"Brotli-1.0.9-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:87fdccbb6bb589095f413b1e05734ba492c962b4a45a13ff3408fa44ffe6479b\"},",
          "275:     {file = \"Brotli-1.0.9-cp36-cp36m-musllinux_1_1_aarch64.whl\", hash = \"sha256:6d847b14f7ea89f6ad3c9e3901d1bc4835f6b390a9c71df999b0162d9bb1e20f\"},",
          "276:     {file = \"Brotli-1.0.9-cp36-cp36m-musllinux_1_1_i686.whl\", hash = \"sha256:495ba7e49c2db22b046a53b469bbecea802efce200dffb69b93dd47397edc9b6\"},",
          "277:     {file = \"Brotli-1.0.9-cp36-cp36m-musllinux_1_1_x86_64.whl\", hash = \"sha256:4688c1e42968ba52e57d8670ad2306fe92e0169c6f3af0089be75bbac0c64a3b\"},",
          "278:     {file = \"Brotli-1.0.9-cp36-cp36m-win32.whl\", hash = \"sha256:61a7ee1f13ab913897dac7da44a73c6d44d48a4adff42a5701e3239791c96e14\"},",
          "279:     {file = \"Brotli-1.0.9-cp36-cp36m-win_amd64.whl\", hash = \"sha256:1c48472a6ba3b113452355b9af0a60da5c2ae60477f8feda8346f8fd48e3e87c\"},",
          "280:     {file = \"Brotli-1.0.9-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:3b78a24b5fd13c03ee2b7b86290ed20efdc95da75a3557cc06811764d5ad1126\"},",
          "281:     {file = \"Brotli-1.0.9-cp37-cp37m-manylinux1_i686.whl\", hash = \"sha256:9d12cf2851759b8de8ca5fde36a59c08210a97ffca0eb94c532ce7b17c6a3d1d\"},",
          "282:     {file = \"Brotli-1.0.9-cp37-cp37m-manylinux1_x86_64.whl\", hash = \"sha256:6c772d6c0a79ac0f414a9f8947cc407e119b8598de7621f39cacadae3cf57d12\"},",
          "283:     {file = \"Brotli-1.0.9-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:29d1d350178e5225397e28ea1b7aca3648fcbab546d20e7475805437bfb0a130\"},",
          "284:     {file = \"Brotli-1.0.9-cp37-cp37m-musllinux_1_1_aarch64.whl\", hash = \"sha256:7bbff90b63328013e1e8cb50650ae0b9bac54ffb4be6104378490193cd60f85a\"},",
          "285:     {file = \"Brotli-1.0.9-cp37-cp37m-musllinux_1_1_i686.whl\", hash = \"sha256:ec1947eabbaf8e0531e8e899fc1d9876c179fc518989461f5d24e2223395a9e3\"},",
          "286:     {file = \"Brotli-1.0.9-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:12effe280b8ebfd389022aa65114e30407540ccb89b177d3fbc9a4f177c4bd5d\"},",
          "287:     {file = \"Brotli-1.0.9-cp37-cp37m-win32.whl\", hash = \"sha256:f909bbbc433048b499cb9db9e713b5d8d949e8c109a2a548502fb9aa8630f0b1\"},",
          "288:     {file = \"Brotli-1.0.9-cp37-cp37m-win_amd64.whl\", hash = \"sha256:97f715cf371b16ac88b8c19da00029804e20e25f30d80203417255d239f228b5\"},",
          "289:     {file = \"Brotli-1.0.9-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:e16eb9541f3dd1a3e92b89005e37b1257b157b7256df0e36bd7b33b50be73bcb\"},",
          "290:     {file = \"Brotli-1.0.9-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:160c78292e98d21e73a4cc7f76a234390e516afcd982fa17e1422f7c6a9ce9c8\"},",
          "291:     {file = \"Brotli-1.0.9-cp38-cp38-manylinux1_i686.whl\", hash = \"sha256:b663f1e02de5d0573610756398e44c130add0eb9a3fc912a09665332942a2efb\"},",
          "292:     {file = \"Brotli-1.0.9-cp38-cp38-manylinux1_x86_64.whl\", hash = \"sha256:5b6ef7d9f9c38292df3690fe3e302b5b530999fa90014853dcd0d6902fb59f26\"},",
          "293:     {file = \"Brotli-1.0.9-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8a674ac10e0a87b683f4fa2b6fa41090edfd686a6524bd8dedbd6138b309175c\"},",
          "294:     {file = \"Brotli-1.0.9-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:e2d9e1cbc1b25e22000328702b014227737756f4b5bf5c485ac1d8091ada078b\"},",
          "295:     {file = \"Brotli-1.0.9-cp38-cp38-musllinux_1_1_i686.whl\", hash = \"sha256:b336c5e9cf03c7be40c47b5fd694c43c9f1358a80ba384a21969e0b4e66a9b17\"},",
          "296:     {file = \"Brotli-1.0.9-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:85f7912459c67eaab2fb854ed2bc1cc25772b300545fe7ed2dc03954da638649\"},",
          "297:     {file = \"Brotli-1.0.9-cp38-cp38-win32.whl\", hash = \"sha256:35a3edbe18e876e596553c4007a087f8bcfd538f19bc116917b3c7522fca0429\"},",
          "298:     {file = \"Brotli-1.0.9-cp38-cp38-win_amd64.whl\", hash = \"sha256:269a5743a393c65db46a7bb982644c67ecba4b8d91b392403ad8a861ba6f495f\"},",
          "299:     {file = \"Brotli-1.0.9-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:2aad0e0baa04517741c9bb5b07586c642302e5fb3e75319cb62087bd0995ab19\"},",
          "300:     {file = \"Brotli-1.0.9-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:5cb1e18167792d7d21e21365d7650b72d5081ed476123ff7b8cac7f45189c0c7\"},",
          "301:     {file = \"Brotli-1.0.9-cp39-cp39-manylinux1_i686.whl\", hash = \"sha256:16d528a45c2e1909c2798f27f7bf0a3feec1dc9e50948e738b961618e38b6a7b\"},",
          "302:     {file = \"Brotli-1.0.9-cp39-cp39-manylinux1_x86_64.whl\", hash = \"sha256:56d027eace784738457437df7331965473f2c0da2c70e1a1f6fdbae5402e0389\"},",
          "303:     {file = \"Brotli-1.0.9-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:9bf919756d25e4114ace16a8ce91eb340eb57a08e2c6950c3cebcbe3dff2a5e7\"},",
          "304:     {file = \"Brotli-1.0.9-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:e4c4e92c14a57c9bd4cb4be678c25369bf7a092d55fd0866f759e425b9660806\"},",
          "305:     {file = \"Brotli-1.0.9-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:e48f4234f2469ed012a98f4b7874e7f7e173c167bed4934912a29e03167cf6b1\"},",
          "306:     {file = \"Brotli-1.0.9-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:9ed4c92a0665002ff8ea852353aeb60d9141eb04109e88928026d3c8a9e5433c\"},",
          "307:     {file = \"Brotli-1.0.9-cp39-cp39-win32.whl\", hash = \"sha256:cfc391f4429ee0a9370aa93d812a52e1fee0f37a81861f4fdd1f4fb28e8547c3\"},",
          "308:     {file = \"Brotli-1.0.9-cp39-cp39-win_amd64.whl\", hash = \"sha256:854c33dad5ba0fbd6ab69185fec8dab89e13cda6b7d191ba111987df74f38761\"},",
          "309:     {file = \"Brotli-1.0.9-pp37-pypy37_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:9749a124280a0ada4187a6cfd1ffd35c350fb3af79c706589d98e088c5044267\"},",
          "310:     {file = \"Brotli-1.0.9-pp37-pypy37_pp73-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:73fd30d4ce0ea48010564ccee1a26bfe39323fde05cb34b5863455629db61dc7\"},",
          "311:     {file = \"Brotli-1.0.9-pp37-pypy37_pp73-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:02177603aaca36e1fd21b091cb742bb3b305a569e2402f1ca38af471777fb019\"},",
          "312:     {file = \"Brotli-1.0.9-pp37-pypy37_pp73-win_amd64.whl\", hash = \"sha256:76ffebb907bec09ff511bb3acc077695e2c32bc2142819491579a695f77ffd4d\"},",
          "313:     {file = \"Brotli-1.0.9-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:b43775532a5904bc938f9c15b77c613cb6ad6fb30990f3b0afaea82797a402d8\"},",
          "314:     {file = \"Brotli-1.0.9-pp38-pypy38_pp73-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:5bf37a08493232fbb0f8229f1824b366c2fc1d02d64e7e918af40acd15f3e337\"},",
          "315:     {file = \"Brotli-1.0.9-pp38-pypy38_pp73-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:330e3f10cd01da535c70d09c4283ba2df5fb78e915bea0a28becad6e2ac010be\"},",
          "316:     {file = \"Brotli-1.0.9-pp38-pypy38_pp73-win_amd64.whl\", hash = \"sha256:e1abbeef02962596548382e393f56e4c94acd286bd0c5afba756cffc33670e8a\"},",
          "317:     {file = \"Brotli-1.0.9-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:3148362937217b7072cf80a2dcc007f09bb5ecb96dae4617316638194113d5be\"},",
          "318:     {file = \"Brotli-1.0.9-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:336b40348269f9b91268378de5ff44dc6fbaa2268194f85177b53463d313842a\"},",
          "319:     {file = \"Brotli-1.0.9-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:3b8b09a16a1950b9ef495a0f8b9d0a87599a9d1f179e2d4ac014b2ec831f87e7\"},",
          "320:     {file = \"Brotli-1.0.9-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:c8e521a0ce7cf690ca84b8cc2272ddaf9d8a50294fd086da67e517439614c755\"},",
          "321:     {file = \"Brotli-1.0.9.zip\", hash = \"sha256:4d1b810aa0ed773f81dceda2cc7b403d01057458730e309856356d4ef4188438\"},",
          "322: ]",
          "324: [[package]]",
          "325: name = \"bs4\"",
          "326: version = \"0.0.1\"",
          "327: description = \"Dummy package for Beautiful Soup\"",
          "328: optional = false",
          "329: python-versions = \"*\"",
          "330: files = [",
          "331:     {file = \"bs4-0.0.1.tar.gz\", hash = \"sha256:36ecea1fd7cc5c0c6e4a1ff075df26d50da647b75376626cc186e2212886dd3a\"},",
          "332: ]",
          "334: [package.dependencies]",
          "335: beautifulsoup4 = \"*\"",
          "337: [[package]]",
          "338: name = \"certifi\"",
          "339: version = \"2023.7.22\"",
          "340: description = \"Python package for providing Mozilla's CA Bundle.\"",
          "341: optional = false",
          "342: python-versions = \">=3.6\"",
          "343: files = [",
          "344:     {file = \"certifi-2023.7.22-py3-none-any.whl\", hash = \"sha256:92d6037539857d8206b8f6ae472e8b77db8058fec5937a1ef3f54304089edbb9\"},",
          "345:     {file = \"certifi-2023.7.22.tar.gz\", hash = \"sha256:539cc1d13202e33ca466e88b2807e29f4c13049d6d87031a3c110744495cb082\"},",
          "346: ]",
          "348: [[package]]",
          "349: name = \"cffi\"",
          "350: version = \"1.15.1\"",
          "351: description = \"Foreign Function Interface for Python calling C code.\"",
          "352: optional = false",
          "353: python-versions = \"*\"",
          "354: files = [",
          "355:     {file = \"cffi-1.15.1-cp27-cp27m-macosx_10_9_x86_64.whl\", hash = \"sha256:a66d3508133af6e8548451b25058d5812812ec3798c886bf38ed24a98216fab2\"},",
          "356:     {file = \"cffi-1.15.1-cp27-cp27m-manylinux1_i686.whl\", hash = \"sha256:470c103ae716238bbe698d67ad020e1db9d9dba34fa5a899b5e21577e6d52ed2\"},",
          "357:     {file = \"cffi-1.15.1-cp27-cp27m-manylinux1_x86_64.whl\", hash = \"sha256:9ad5db27f9cabae298d151c85cf2bad1d359a1b9c686a275df03385758e2f914\"},",
          "358:     {file = \"cffi-1.15.1-cp27-cp27m-win32.whl\", hash = \"sha256:b3bbeb01c2b273cca1e1e0c5df57f12dce9a4dd331b4fa1635b8bec26350bde3\"},",
          "359:     {file = \"cffi-1.15.1-cp27-cp27m-win_amd64.whl\", hash = \"sha256:e00b098126fd45523dd056d2efba6c5a63b71ffe9f2bbe1a4fe1716e1d0c331e\"},",
          "360:     {file = \"cffi-1.15.1-cp27-cp27mu-manylinux1_i686.whl\", hash = \"sha256:d61f4695e6c866a23a21acab0509af1cdfd2c013cf256bbf5b6b5e2695827162\"},",
          "361:     {file = \"cffi-1.15.1-cp27-cp27mu-manylinux1_x86_64.whl\", hash = \"sha256:ed9cb427ba5504c1dc15ede7d516b84757c3e3d7868ccc85121d9310d27eed0b\"},",
          "362:     {file = \"cffi-1.15.1-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:39d39875251ca8f612b6f33e6b1195af86d1b3e60086068be9cc053aa4376e21\"},",
          "363:     {file = \"cffi-1.15.1-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:285d29981935eb726a4399badae8f0ffdff4f5050eaa6d0cfc3f64b857b77185\"},",
          "364:     {file = \"cffi-1.15.1-cp310-cp310-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:3eb6971dcff08619f8d91607cfc726518b6fa2a9eba42856be181c6d0d9515fd\"},",
          "365:     {file = \"cffi-1.15.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:21157295583fe8943475029ed5abdcf71eb3911894724e360acff1d61c1d54bc\"},",
          "366:     {file = \"cffi-1.15.1-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:5635bd9cb9731e6d4a1132a498dd34f764034a8ce60cef4f5319c0541159392f\"},",
          "367:     {file = \"cffi-1.15.1-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:2012c72d854c2d03e45d06ae57f40d78e5770d252f195b93f581acf3ba44496e\"},",
          "368:     {file = \"cffi-1.15.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:dd86c085fae2efd48ac91dd7ccffcfc0571387fe1193d33b6394db7ef31fe2a4\"},",
          "369:     {file = \"cffi-1.15.1-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:fa6693661a4c91757f4412306191b6dc88c1703f780c8234035eac011922bc01\"},",
          "370:     {file = \"cffi-1.15.1-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:59c0b02d0a6c384d453fece7566d1c7e6b7bae4fc5874ef2ef46d56776d61c9e\"},",
          "371:     {file = \"cffi-1.15.1-cp310-cp310-win32.whl\", hash = \"sha256:cba9d6b9a7d64d4bd46167096fc9d2f835e25d7e4c121fb2ddfc6528fb0413b2\"},",
          "372:     {file = \"cffi-1.15.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:ce4bcc037df4fc5e3d184794f27bdaab018943698f4ca31630bc7f84a7b69c6d\"},",
          "373:     {file = \"cffi-1.15.1-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:3d08afd128ddaa624a48cf2b859afef385b720bb4b43df214f85616922e6a5ac\"},",
          "374:     {file = \"cffi-1.15.1-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:3799aecf2e17cf585d977b780ce79ff0dc9b78d799fc694221ce814c2c19db83\"},",
          "375:     {file = \"cffi-1.15.1-cp311-cp311-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:a591fe9e525846e4d154205572a029f653ada1a78b93697f3b5a8f1f2bc055b9\"},",
          "376:     {file = \"cffi-1.15.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:3548db281cd7d2561c9ad9984681c95f7b0e38881201e157833a2342c30d5e8c\"},",
          "377:     {file = \"cffi-1.15.1-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:91fc98adde3d7881af9b59ed0294046f3806221863722ba7d8d120c575314325\"},",
          "378:     {file = \"cffi-1.15.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:94411f22c3985acaec6f83c6df553f2dbe17b698cc7f8ae751ff2237d96b9e3c\"},",
          "379:     {file = \"cffi-1.15.1-cp311-cp311-musllinux_1_1_i686.whl\", hash = \"sha256:03425bdae262c76aad70202debd780501fabeaca237cdfddc008987c0e0f59ef\"},",
          "380:     {file = \"cffi-1.15.1-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:cc4d65aeeaa04136a12677d3dd0b1c0c94dc43abac5860ab33cceb42b801c1e8\"},",
          "381:     {file = \"cffi-1.15.1-cp311-cp311-win32.whl\", hash = \"sha256:a0f100c8912c114ff53e1202d0078b425bee3649ae34d7b070e9697f93c5d52d\"},",
          "382:     {file = \"cffi-1.15.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:04ed324bda3cda42b9b695d51bb7d54b680b9719cfab04227cdd1e04e5de3104\"},",
          "383:     {file = \"cffi-1.15.1-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:50a74364d85fd319352182ef59c5c790484a336f6db772c1a9231f1c3ed0cbd7\"},",
          "384:     {file = \"cffi-1.15.1-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e263d77ee3dd201c3a142934a086a4450861778baaeeb45db4591ef65550b0a6\"},",
          "385:     {file = \"cffi-1.15.1-cp36-cp36m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:cec7d9412a9102bdc577382c3929b337320c4c4c4849f2c5cdd14d7368c5562d\"},",
          "386:     {file = \"cffi-1.15.1-cp36-cp36m-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:4289fc34b2f5316fbb762d75362931e351941fa95fa18789191b33fc4cf9504a\"},",
          "387:     {file = \"cffi-1.15.1-cp36-cp36m-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:173379135477dc8cac4bc58f45db08ab45d228b3363adb7af79436135d028405\"},",
          "388:     {file = \"cffi-1.15.1-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.whl\", hash = \"sha256:6975a3fac6bc83c4a65c9f9fcab9e47019a11d3d2cf7f3c0d03431bf145a941e\"},",
          "389:     {file = \"cffi-1.15.1-cp36-cp36m-win32.whl\", hash = \"sha256:2470043b93ff09bf8fb1d46d1cb756ce6132c54826661a32d4e4d132e1977adf\"},",
          "390:     {file = \"cffi-1.15.1-cp36-cp36m-win_amd64.whl\", hash = \"sha256:30d78fbc8ebf9c92c9b7823ee18eb92f2e6ef79b45ac84db507f52fbe3ec4497\"},",
          "391:     {file = \"cffi-1.15.1-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:198caafb44239b60e252492445da556afafc7d1e3ab7a1fb3f0584ef6d742375\"},",
          "392:     {file = \"cffi-1.15.1-cp37-cp37m-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:5ef34d190326c3b1f822a5b7a45f6c4535e2f47ed06fec77d3d799c450b2651e\"},",
          "393:     {file = \"cffi-1.15.1-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8102eaf27e1e448db915d08afa8b41d6c7ca7a04b7d73af6514df10a3e74bd82\"},",
          "394:     {file = \"cffi-1.15.1-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:5df2768244d19ab7f60546d0c7c63ce1581f7af8b5de3eb3004b9b6fc8a9f84b\"},",
          "395:     {file = \"cffi-1.15.1-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:a8c4917bd7ad33e8eb21e9a5bbba979b49d9a97acb3a803092cbc1133e20343c\"},",
          "396:     {file = \"cffi-1.15.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0e2642fe3142e4cc4af0799748233ad6da94c62a8bec3a6648bf8ee68b1c7426\"},",
          "397:     {file = \"cffi-1.15.1-cp37-cp37m-win32.whl\", hash = \"sha256:e229a521186c75c8ad9490854fd8bbdd9a0c9aa3a524326b55be83b54d4e0ad9\"},",
          "398:     {file = \"cffi-1.15.1-cp37-cp37m-win_amd64.whl\", hash = \"sha256:a0b71b1b8fbf2b96e41c4d990244165e2c9be83d54962a9a1d118fd8657d2045\"},",
          "399:     {file = \"cffi-1.15.1-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:320dab6e7cb2eacdf0e658569d2575c4dad258c0fcc794f46215e1e39f90f2c3\"},",
          "400:     {file = \"cffi-1.15.1-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:1e74c6b51a9ed6589199c787bf5f9875612ca4a8a0785fb2d4a84429badaf22a\"},",
          "401:     {file = \"cffi-1.15.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a5c84c68147988265e60416b57fc83425a78058853509c1b0629c180094904a5\"},",
          "402:     {file = \"cffi-1.15.1-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:3b926aa83d1edb5aa5b427b4053dc420ec295a08e40911296b9eb1b6170f6cca\"},",
          "403:     {file = \"cffi-1.15.1-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:87c450779d0914f2861b8526e035c5e6da0a3199d8f1add1a665e1cbc6fc6d02\"},",
          "404:     {file = \"cffi-1.15.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4f2c9f67e9821cad2e5f480bc8d83b8742896f1242dba247911072d4fa94c192\"},",
          "405:     {file = \"cffi-1.15.1-cp38-cp38-win32.whl\", hash = \"sha256:8b7ee99e510d7b66cdb6c593f21c043c248537a32e0bedf02e01e9553a172314\"},",
          "406:     {file = \"cffi-1.15.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:00a9ed42e88df81ffae7a8ab6d9356b371399b91dbdf0c3cb1e84c03a13aceb5\"},",
          "407:     {file = \"cffi-1.15.1-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:54a2db7b78338edd780e7ef7f9f6c442500fb0d41a5a4ea24fff1c929d5af585\"},",
          "408:     {file = \"cffi-1.15.1-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:fcd131dd944808b5bdb38e6f5b53013c5aa4f334c5cad0c72742f6eba4b73db0\"},",
          "409:     {file = \"cffi-1.15.1-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:7473e861101c9e72452f9bf8acb984947aa1661a7704553a9f6e4baa5ba64415\"},",
          "410:     {file = \"cffi-1.15.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6c9a799e985904922a4d207a94eae35c78ebae90e128f0c4e521ce339396be9d\"},",
          "411:     {file = \"cffi-1.15.1-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:3bcde07039e586f91b45c88f8583ea7cf7a0770df3a1649627bf598332cb6984\"},",
          "412:     {file = \"cffi-1.15.1-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:33ab79603146aace82c2427da5ca6e58f2b3f2fb5da893ceac0c42218a40be35\"},",
          "413:     {file = \"cffi-1.15.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:5d598b938678ebf3c67377cdd45e09d431369c3b1a5b331058c338e201f12b27\"},",
          "414:     {file = \"cffi-1.15.1-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:db0fbb9c62743ce59a9ff687eb5f4afbe77e5e8403d6697f7446e5f609976f76\"},",
          "415:     {file = \"cffi-1.15.1-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:98d85c6a2bef81588d9227dde12db8a7f47f639f4a17c9ae08e773aa9c697bf3\"},",
          "416:     {file = \"cffi-1.15.1-cp39-cp39-win32.whl\", hash = \"sha256:40f4774f5a9d4f5e344f31a32b5096977b5d48560c5592e2f3d2c4374bd543ee\"},",
          "417:     {file = \"cffi-1.15.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:70df4e3b545a17496c9b3f41f5115e69a4f2e77e94e1d2a8e1070bc0c38c8a3c\"},",
          "418:     {file = \"cffi-1.15.1.tar.gz\", hash = \"sha256:d400bfb9a37b1351253cb402671cea7e89bdecc294e8016a707f6d1d8ac934f9\"},",
          "419: ]",
          "421: [package.dependencies]",
          "422: pycparser = \"*\"",
          "424: [[package]]",
          "425: name = \"charset-normalizer\"",
          "426: version = \"3.2.0\"",
          "427: description = \"The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet.\"",
          "428: optional = false",
          "429: python-versions = \">=3.7.0\"",
          "430: files = [",
          "431:     {file = \"charset-normalizer-3.2.0.tar.gz\", hash = \"sha256:3bb3d25a8e6c0aedd251753a79ae98a093c7e7b471faa3aa9a93a81431987ace\"},",
          "432:     {file = \"charset_normalizer-3.2.0-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:0b87549028f680ca955556e3bd57013ab47474c3124dc069faa0b6545b6c9710\"},",
          "433:     {file = \"charset_normalizer-3.2.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:7c70087bfee18a42b4040bb9ec1ca15a08242cf5867c58726530bdf3945672ed\"},",
          "434:     {file = \"charset_normalizer-3.2.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:a103b3a7069b62f5d4890ae1b8f0597618f628b286b03d4bc9195230b154bfa9\"},",
          "435:     {file = \"charset_normalizer-3.2.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:94aea8eff76ee6d1cdacb07dd2123a68283cb5569e0250feab1240058f53b623\"},",
          "436:     {file = \"charset_normalizer-3.2.0-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:db901e2ac34c931d73054d9797383d0f8009991e723dab15109740a63e7f902a\"},",
          "437:     {file = \"charset_normalizer-3.2.0-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:b0dac0ff919ba34d4df1b6131f59ce95b08b9065233446be7e459f95554c0dc8\"},",
          "438:     {file = \"charset_normalizer-3.2.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:193cbc708ea3aca45e7221ae58f0fd63f933753a9bfb498a3b474878f12caaad\"},",
          "439:     {file = \"charset_normalizer-3.2.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:09393e1b2a9461950b1c9a45d5fd251dc7c6f228acab64da1c9c0165d9c7765c\"},",
          "440:     {file = \"charset_normalizer-3.2.0-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:baacc6aee0b2ef6f3d308e197b5d7a81c0e70b06beae1f1fcacffdbd124fe0e3\"},",
          "441:     {file = \"charset_normalizer-3.2.0-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:bf420121d4c8dce6b889f0e8e4ec0ca34b7f40186203f06a946fa0276ba54029\"},",
          "442:     {file = \"charset_normalizer-3.2.0-cp310-cp310-musllinux_1_1_ppc64le.whl\", hash = \"sha256:c04a46716adde8d927adb9457bbe39cf473e1e2c2f5d0a16ceb837e5d841ad4f\"},",
          "443:     {file = \"charset_normalizer-3.2.0-cp310-cp310-musllinux_1_1_s390x.whl\", hash = \"sha256:aaf63899c94de41fe3cf934601b0f7ccb6b428c6e4eeb80da72c58eab077b19a\"},",
          "444:     {file = \"charset_normalizer-3.2.0-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:d62e51710986674142526ab9f78663ca2b0726066ae26b78b22e0f5e571238dd\"},",
          "445:     {file = \"charset_normalizer-3.2.0-cp310-cp310-win32.whl\", hash = \"sha256:04e57ab9fbf9607b77f7d057974694b4f6b142da9ed4a199859d9d4d5c63fe96\"},",
          "446:     {file = \"charset_normalizer-3.2.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:48021783bdf96e3d6de03a6e39a1171ed5bd7e8bb93fc84cc649d11490f87cea\"},",
          "447:     {file = \"charset_normalizer-3.2.0-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:4957669ef390f0e6719db3613ab3a7631e68424604a7b448f079bee145da6e09\"},",
          "448:     {file = \"charset_normalizer-3.2.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:46fb8c61d794b78ec7134a715a3e564aafc8f6b5e338417cb19fe9f57a5a9bf2\"},",
          "449:     {file = \"charset_normalizer-3.2.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:f779d3ad205f108d14e99bb3859aa7dd8e9c68874617c72354d7ecaec2a054ac\"},",
          "450:     {file = \"charset_normalizer-3.2.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f25c229a6ba38a35ae6e25ca1264621cc25d4d38dca2942a7fce0b67a4efe918\"},",
          "451:     {file = \"charset_normalizer-3.2.0-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:2efb1bd13885392adfda4614c33d3b68dee4921fd0ac1d3988f8cbb7d589e72a\"},",
          "452:     {file = \"charset_normalizer-3.2.0-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:1f30b48dd7fa1474554b0b0f3fdfdd4c13b5c737a3c6284d3cdc424ec0ffff3a\"},",
          "453:     {file = \"charset_normalizer-3.2.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:246de67b99b6851627d945db38147d1b209a899311b1305dd84916f2b88526c6\"},",
          "454:     {file = \"charset_normalizer-3.2.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:9bd9b3b31adcb054116447ea22caa61a285d92e94d710aa5ec97992ff5eb7cf3\"},",
          "455:     {file = \"charset_normalizer-3.2.0-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:8c2f5e83493748286002f9369f3e6607c565a6a90425a3a1fef5ae32a36d749d\"},",
          "456:     {file = \"charset_normalizer-3.2.0-cp311-cp311-musllinux_1_1_i686.whl\", hash = \"sha256:3170c9399da12c9dc66366e9d14da8bf7147e1e9d9ea566067bbce7bb74bd9c2\"},",
          "457:     {file = \"charset_normalizer-3.2.0-cp311-cp311-musllinux_1_1_ppc64le.whl\", hash = \"sha256:7a4826ad2bd6b07ca615c74ab91f32f6c96d08f6fcc3902ceeedaec8cdc3bcd6\"},",
          "458:     {file = \"charset_normalizer-3.2.0-cp311-cp311-musllinux_1_1_s390x.whl\", hash = \"sha256:3b1613dd5aee995ec6d4c69f00378bbd07614702a315a2cf6c1d21461fe17c23\"},",
          "459:     {file = \"charset_normalizer-3.2.0-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:9e608aafdb55eb9f255034709e20d5a83b6d60c054df0802fa9c9883d0a937aa\"},",
          "460:     {file = \"charset_normalizer-3.2.0-cp311-cp311-win32.whl\", hash = \"sha256:f2a1d0fd4242bd8643ce6f98927cf9c04540af6efa92323e9d3124f57727bfc1\"},",
          "461:     {file = \"charset_normalizer-3.2.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:681eb3d7e02e3c3655d1b16059fbfb605ac464c834a0c629048a30fad2b27489\"},",
          "462:     {file = \"charset_normalizer-3.2.0-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:c57921cda3a80d0f2b8aec7e25c8aa14479ea92b5b51b6876d975d925a2ea346\"},",
          "463:     {file = \"charset_normalizer-3.2.0-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:41b25eaa7d15909cf3ac4c96088c1f266a9a93ec44f87f1d13d4a0e86c81b982\"},",
          "464:     {file = \"charset_normalizer-3.2.0-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:f058f6963fd82eb143c692cecdc89e075fa0828db2e5b291070485390b2f1c9c\"},",
          "465:     {file = \"charset_normalizer-3.2.0-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:a7647ebdfb9682b7bb97e2a5e7cb6ae735b1c25008a70b906aecca294ee96cf4\"},",
          "466:     {file = \"charset_normalizer-3.2.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:eef9df1eefada2c09a5e7a40991b9fc6ac6ef20b1372abd48d2794a316dc0449\"},",
          "467:     {file = \"charset_normalizer-3.2.0-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:e03b8895a6990c9ab2cdcd0f2fe44088ca1c65ae592b8f795c3294af00a461c3\"},",
          "468:     {file = \"charset_normalizer-3.2.0-cp37-cp37m-musllinux_1_1_aarch64.whl\", hash = \"sha256:ee4006268ed33370957f55bf2e6f4d263eaf4dc3cfc473d1d90baff6ed36ce4a\"},",
          "469:     {file = \"charset_normalizer-3.2.0-cp37-cp37m-musllinux_1_1_i686.whl\", hash = \"sha256:c4983bf937209c57240cff65906b18bb35e64ae872da6a0db937d7b4af845dd7\"},",
          "470:     {file = \"charset_normalizer-3.2.0-cp37-cp37m-musllinux_1_1_ppc64le.whl\", hash = \"sha256:3bb7fda7260735efe66d5107fb7e6af6a7c04c7fce9b2514e04b7a74b06bf5dd\"},",
          "471:     {file = \"charset_normalizer-3.2.0-cp37-cp37m-musllinux_1_1_s390x.whl\", hash = \"sha256:72814c01533f51d68702802d74f77ea026b5ec52793c791e2da806a3844a46c3\"},",
          "472:     {file = \"charset_normalizer-3.2.0-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:70c610f6cbe4b9fce272c407dd9d07e33e6bf7b4aa1b7ffb6f6ded8e634e3592\"},",
          "473:     {file = \"charset_normalizer-3.2.0-cp37-cp37m-win32.whl\", hash = \"sha256:a401b4598e5d3f4a9a811f3daf42ee2291790c7f9d74b18d75d6e21dda98a1a1\"},",
          "474:     {file = \"charset_normalizer-3.2.0-cp37-cp37m-win_amd64.whl\", hash = \"sha256:c0b21078a4b56965e2b12f247467b234734491897e99c1d51cee628da9786959\"},",
          "475:     {file = \"charset_normalizer-3.2.0-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:95eb302ff792e12aba9a8b8f8474ab229a83c103d74a750ec0bd1c1eea32e669\"},",
          "476:     {file = \"charset_normalizer-3.2.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:1a100c6d595a7f316f1b6f01d20815d916e75ff98c27a01ae817439ea7726329\"},",
          "477:     {file = \"charset_normalizer-3.2.0-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:6339d047dab2780cc6220f46306628e04d9750f02f983ddb37439ca47ced7149\"},",
          "478:     {file = \"charset_normalizer-3.2.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e4b749b9cc6ee664a3300bb3a273c1ca8068c46be705b6c31cf5d276f8628a94\"},",
          "479:     {file = \"charset_normalizer-3.2.0-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:a38856a971c602f98472050165cea2cdc97709240373041b69030be15047691f\"},",
          "480:     {file = \"charset_normalizer-3.2.0-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f87f746ee241d30d6ed93969de31e5ffd09a2961a051e60ae6bddde9ec3583aa\"},",
          "481:     {file = \"charset_normalizer-3.2.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:89f1b185a01fe560bc8ae5f619e924407efca2191b56ce749ec84982fc59a32a\"},",
          "482:     {file = \"charset_normalizer-3.2.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:e1c8a2f4c69e08e89632defbfabec2feb8a8d99edc9f89ce33c4b9e36ab63037\"},",
          "483:     {file = \"charset_normalizer-3.2.0-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:2f4ac36d8e2b4cc1aa71df3dd84ff8efbe3bfb97ac41242fbcfc053c67434f46\"},",
          "484:     {file = \"charset_normalizer-3.2.0-cp38-cp38-musllinux_1_1_i686.whl\", hash = \"sha256:a386ebe437176aab38c041de1260cd3ea459c6ce5263594399880bbc398225b2\"},",
          "485:     {file = \"charset_normalizer-3.2.0-cp38-cp38-musllinux_1_1_ppc64le.whl\", hash = \"sha256:ccd16eb18a849fd8dcb23e23380e2f0a354e8daa0c984b8a732d9cfaba3a776d\"},",
          "486:     {file = \"charset_normalizer-3.2.0-cp38-cp38-musllinux_1_1_s390x.whl\", hash = \"sha256:e6a5bf2cba5ae1bb80b154ed68a3cfa2fa00fde979a7f50d6598d3e17d9ac20c\"},",
          "487:     {file = \"charset_normalizer-3.2.0-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:45de3f87179c1823e6d9e32156fb14c1927fcc9aba21433f088fdfb555b77c10\"},",
          "488:     {file = \"charset_normalizer-3.2.0-cp38-cp38-win32.whl\", hash = \"sha256:1000fba1057b92a65daec275aec30586c3de2401ccdcd41f8a5c1e2c87078706\"},",
          "489:     {file = \"charset_normalizer-3.2.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:8b2c760cfc7042b27ebdb4a43a4453bd829a5742503599144d54a032c5dc7e9e\"},",
          "490:     {file = \"charset_normalizer-3.2.0-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:855eafa5d5a2034b4621c74925d89c5efef61418570e5ef9b37717d9c796419c\"},",
          "491:     {file = \"charset_normalizer-3.2.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:203f0c8871d5a7987be20c72442488a0b8cfd0f43b7973771640fc593f56321f\"},",
          "492:     {file = \"charset_normalizer-3.2.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:e857a2232ba53ae940d3456f7533ce6ca98b81917d47adc3c7fd55dad8fab858\"},",
          "493:     {file = \"charset_normalizer-3.2.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5e86d77b090dbddbe78867a0275cb4df08ea195e660f1f7f13435a4649e954e5\"},",
          "494:     {file = \"charset_normalizer-3.2.0-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:c4fb39a81950ec280984b3a44f5bd12819953dc5fa3a7e6fa7a80db5ee853952\"},",
          "495:     {file = \"charset_normalizer-3.2.0-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:2dee8e57f052ef5353cf608e0b4c871aee320dd1b87d351c28764fc0ca55f9f4\"},",
          "496:     {file = \"charset_normalizer-3.2.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8700f06d0ce6f128de3ccdbc1acaea1ee264d2caa9ca05daaf492fde7c2a7200\"},",
          "497:     {file = \"charset_normalizer-3.2.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:1920d4ff15ce893210c1f0c0e9d19bfbecb7983c76b33f046c13a8ffbd570252\"},",
          "498:     {file = \"charset_normalizer-3.2.0-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:c1c76a1743432b4b60ab3358c937a3fe1341c828ae6194108a94c69028247f22\"},",
          "499:     {file = \"charset_normalizer-3.2.0-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:f7560358a6811e52e9c4d142d497f1a6e10103d3a6881f18d04dbce3729c0e2c\"},",
          "500:     {file = \"charset_normalizer-3.2.0-cp39-cp39-musllinux_1_1_ppc64le.whl\", hash = \"sha256:c8063cf17b19661471ecbdb3df1c84f24ad2e389e326ccaf89e3fb2484d8dd7e\"},",
          "501:     {file = \"charset_normalizer-3.2.0-cp39-cp39-musllinux_1_1_s390x.whl\", hash = \"sha256:cd6dbe0238f7743d0efe563ab46294f54f9bc8f4b9bcf57c3c666cc5bc9d1299\"},",
          "502:     {file = \"charset_normalizer-3.2.0-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:1249cbbf3d3b04902ff081ffbb33ce3377fa6e4c7356f759f3cd076cc138d020\"},",
          "503:     {file = \"charset_normalizer-3.2.0-cp39-cp39-win32.whl\", hash = \"sha256:6c409c0deba34f147f77efaa67b8e4bb83d2f11c8806405f76397ae5b8c0d1c9\"},",
          "504:     {file = \"charset_normalizer-3.2.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:7095f6fbfaa55defb6b733cfeb14efaae7a29f0b59d8cf213be4e7ca0b857b80\"},",
          "505:     {file = \"charset_normalizer-3.2.0-py3-none-any.whl\", hash = \"sha256:8e098148dd37b4ce3baca71fb394c81dc5d9c7728c95df695d2dca218edf40e6\"},",
          "506: ]",
          "508: [[package]]",
          "509: name = \"click\"",
          "510: version = \"8.1.7\"",
          "511: description = \"Composable command line interface toolkit\"",
          "512: optional = false",
          "513: python-versions = \">=3.7\"",
          "514: files = [",
          "515:     {file = \"click-8.1.7-py3-none-any.whl\", hash = \"sha256:ae74fb96c20a0277a1d615f1e4d73c8414f5a98db8b799a7931d1582f3390c28\"},",
          "516:     {file = \"click-8.1.7.tar.gz\", hash = \"sha256:ca9853ad459e787e2192211578cc907e7594e294c7ccc834310722b41b9ca6de\"},",
          "517: ]",
          "519: [[package]]",
          "520: name = \"click-option-group\"",
          "521: version = \"0.5.6\"",
          "522: description = \"Option groups missing in Click\"",
          "523: optional = false",
          "524: python-versions = \">=3.6,<4\"",
          "525: files = [",
          "526:     {file = \"click-option-group-0.5.6.tar.gz\", hash = \"sha256:97d06703873518cc5038509443742b25069a3c7562d1ea72ff08bfadde1ce777\"},",
          "527:     {file = \"click_option_group-0.5.6-py3-none-any.whl\", hash = \"sha256:38a26d963ee3ad93332ddf782f9259c5bdfe405e73408d943ef5e7d0c3767ec7\"},",
          "528: ]",
          "530: [package.dependencies]",
          "531: Click = \">=7.0,<9\"",
          "533: [package.extras]",
          "534: docs = [\"Pallets-Sphinx-Themes\", \"m2r2\", \"sphinx\"]",
          "535: tests = [\"pytest\"]",
          "536: tests-cov = [\"coverage\", \"coveralls\", \"pytest\", \"pytest-cov\"]",
          "538: [[package]]",
          "539: name = \"colorama\"",
          "540: version = \"0.4.6\"",
          "541: description = \"Cross-platform colored terminal text.\"",
          "542: optional = false",
          "543: python-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7\"",
          "544: files = [",
          "545:     {file = \"colorama-0.4.6-py2.py3-none-any.whl\", hash = \"sha256:4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6\"},",
          "546:     {file = \"colorama-0.4.6.tar.gz\", hash = \"sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44\"},",
          "547: ]",
          "549: [[package]]",
          "550: name = \"colorlog\"",
          "551: version = \"6.7.0\"",
          "552: description = \"Add colours to the output of Python's logging module.\"",
          "553: optional = false",
          "554: python-versions = \">=3.6\"",
          "555: files = [",
          "556:     {file = \"colorlog-6.7.0-py2.py3-none-any.whl\", hash = \"sha256:0d33ca236784a1ba3ff9c532d4964126d8a2c44f1f0cb1d2b0728196f512f662\"},",
          "557:     {file = \"colorlog-6.7.0.tar.gz\", hash = \"sha256:bd94bd21c1e13fac7bd3153f4bc3a7dc0eb0974b8bc2fdf1a989e474f6e582e5\"},",
          "558: ]",
          "560: [package.dependencies]",
          "561: colorama = {version = \"*\", markers = \"sys_platform == \\\"win32\\\"\"}",
          "563: [package.extras]",
          "564: development = [\"black\", \"flake8\", \"mypy\", \"pytest\", \"types-colorama\"]",
          "566: [[package]]",
          "567: name = \"contourpy\"",
          "568: version = \"1.1.0\"",
          "569: description = \"Python library for calculating contours of 2D quadrilateral grids\"",
          "570: optional = false",
          "571: python-versions = \">=3.8\"",
          "572: files = [",
          "573:     {file = \"contourpy-1.1.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:89f06eff3ce2f4b3eb24c1055a26981bffe4e7264acd86f15b97e40530b794bc\"},",
          "574:     {file = \"contourpy-1.1.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:dffcc2ddec1782dd2f2ce1ef16f070861af4fb78c69862ce0aab801495dda6a3\"},",
          "575:     {file = \"contourpy-1.1.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:25ae46595e22f93592d39a7eac3d638cda552c3e1160255258b695f7b58e5655\"},",
          "576:     {file = \"contourpy-1.1.0-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:17cfaf5ec9862bc93af1ec1f302457371c34e688fbd381f4035a06cd47324f48\"},",
          "577:     {file = \"contourpy-1.1.0-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:18a64814ae7bce73925131381603fff0116e2df25230dfc80d6d690aa6e20b37\"},",
          "578:     {file = \"contourpy-1.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:90c81f22b4f572f8a2110b0b741bb64e5a6427e0a198b2cdc1fbaf85f352a3aa\"},",
          "579:     {file = \"contourpy-1.1.0-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:53cc3a40635abedbec7f1bde60f8c189c49e84ac180c665f2cd7c162cc454baa\"},",
          "580:     {file = \"contourpy-1.1.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:1f795597073b09d631782e7245016a4323cf1cf0b4e06eef7ea6627e06a37ff2\"},",
          "581:     {file = \"contourpy-1.1.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:0b7b04ed0961647691cfe5d82115dd072af7ce8846d31a5fac6c142dcce8b882\"},",
          "582:     {file = \"contourpy-1.1.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:27bc79200c742f9746d7dd51a734ee326a292d77e7d94c8af6e08d1e6c15d545\"},",
          "583:     {file = \"contourpy-1.1.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:052cc634bf903c604ef1a00a5aa093c54f81a2612faedaa43295809ffdde885e\"},",
          "584:     {file = \"contourpy-1.1.0-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:9382a1c0bc46230fb881c36229bfa23d8c303b889b788b939365578d762b5c18\"},",
          "585:     {file = \"contourpy-1.1.0-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:e5cec36c5090e75a9ac9dbd0ff4a8cf7cecd60f1b6dc23a374c7d980a1cd710e\"},",
          "586:     {file = \"contourpy-1.1.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1f0cbd657e9bde94cd0e33aa7df94fb73c1ab7799378d3b3f902eb8eb2e04a3a\"},",
          "587:     {file = \"contourpy-1.1.0-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:181cbace49874f4358e2929aaf7ba84006acb76694102e88dd15af861996c16e\"},",
          "588:     {file = \"contourpy-1.1.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:fb3b7d9e6243bfa1efb93ccfe64ec610d85cfe5aec2c25f97fbbd2e58b531256\"},",
          "589:     {file = \"contourpy-1.1.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:bcb41692aa09aeb19c7c213411854402f29f6613845ad2453d30bf421fe68fed\"},",
          "590:     {file = \"contourpy-1.1.0-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:5d123a5bc63cd34c27ff9c7ac1cd978909e9c71da12e05be0231c608048bb2ae\"},",
          "591:     {file = \"contourpy-1.1.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:62013a2cf68abc80dadfd2307299bfa8f5aa0dcaec5b2954caeb5fa094171103\"},",
          "592:     {file = \"contourpy-1.1.0-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:0b6616375d7de55797d7a66ee7d087efe27f03d336c27cf1f32c02b8c1a5ac70\"},",
          "593:     {file = \"contourpy-1.1.0-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:317267d915490d1e84577924bd61ba71bf8681a30e0d6c545f577363157e5e94\"},",
          "594:     {file = \"contourpy-1.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d551f3a442655f3dcc1285723f9acd646ca5858834efeab4598d706206b09c9f\"},",
          "595:     {file = \"contourpy-1.1.0-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:e7a117ce7df5a938fe035cad481b0189049e8d92433b4b33aa7fc609344aafa1\"},",
          "596:     {file = \"contourpy-1.1.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:d4f26b25b4f86087e7d75e63212756c38546e70f2a92d2be44f80114826e1cd4\"},",
          "597:     {file = \"contourpy-1.1.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:bc00bb4225d57bff7ebb634646c0ee2a1298402ec10a5fe7af79df9a51c1bfd9\"},",
          "598:     {file = \"contourpy-1.1.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:189ceb1525eb0655ab8487a9a9c41f42a73ba52d6789754788d1883fb06b2d8a\"},",
          "599:     {file = \"contourpy-1.1.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:9f2931ed4741f98f74b410b16e5213f71dcccee67518970c42f64153ea9313b9\"},",
          "600:     {file = \"contourpy-1.1.0-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:30f511c05fab7f12e0b1b7730ebdc2ec8deedcfb505bc27eb570ff47c51a8f15\"},",
          "601:     {file = \"contourpy-1.1.0-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:143dde50520a9f90e4a2703f367cf8ec96a73042b72e68fcd184e1279962eb6f\"},",
          "602:     {file = \"contourpy-1.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e94bef2580e25b5fdb183bf98a2faa2adc5b638736b2c0a4da98691da641316a\"},",
          "603:     {file = \"contourpy-1.1.0-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:ed614aea8462735e7d70141374bd7650afd1c3f3cb0c2dbbcbe44e14331bf002\"},",
          "604:     {file = \"contourpy-1.1.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:438ba416d02f82b692e371858143970ed2eb6337d9cdbbede0d8ad9f3d7dd17d\"},",
          "605:     {file = \"contourpy-1.1.0-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:a698c6a7a432789e587168573a864a7ea374c6be8d4f31f9d87c001d5a843493\"},",
          "606:     {file = \"contourpy-1.1.0-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:397b0ac8a12880412da3551a8cb5a187d3298a72802b45a3bd1805e204ad8439\"},",
          "607:     {file = \"contourpy-1.1.0-pp38-pypy38_pp73-win_amd64.whl\", hash = \"sha256:a67259c2b493b00e5a4d0f7bfae51fb4b3371395e47d079a4446e9b0f4d70e76\"},",
          "608:     {file = \"contourpy-1.1.0-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:2b836d22bd2c7bb2700348e4521b25e077255ebb6ab68e351ab5aa91ca27e027\"},",
          "609:     {file = \"contourpy-1.1.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:084eaa568400cfaf7179b847ac871582199b1b44d5699198e9602ecbbb5f6104\"},",
          "610:     {file = \"contourpy-1.1.0-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:911ff4fd53e26b019f898f32db0d4956c9d227d51338fb3b03ec72ff0084ee5f\"},",
          "611:     {file = \"contourpy-1.1.0.tar.gz\", hash = \"sha256:e53046c3863828d21d531cc3b53786e6580eb1ba02477e8681009b6aa0870b21\"},",
          "612: ]",
          "614: [package.dependencies]",
          "615: numpy = \">=1.16\"",
          "617: [package.extras]",
          "618: bokeh = [\"bokeh\", \"selenium\"]",
          "619: docs = [\"furo\", \"sphinx-copybutton\"]",
          "620: mypy = [\"contourpy[bokeh,docs]\", \"docutils-stubs\", \"mypy (==1.2.0)\", \"types-Pillow\"]",
          "621: test = [\"Pillow\", \"contourpy[test-no-images]\", \"matplotlib\"]",
          "622: test-no-images = [\"pytest\", \"pytest-cov\", \"wurlitzer\"]",
          "624: [[package]]",
          "625: name = \"cryptography\"",
          "626: version = \"38.0.4\"",
          "627: description = \"cryptography is a package which provides cryptographic recipes and primitives to Python developers.\"",
          "628: optional = false",
          "629: python-versions = \">=3.6\"",
          "630: files = [",
          "631:     {file = \"cryptography-38.0.4-cp36-abi3-macosx_10_10_universal2.whl\", hash = \"sha256:2fa36a7b2cc0998a3a4d5af26ccb6273f3df133d61da2ba13b3286261e7efb70\"},",
          "632:     {file = \"cryptography-38.0.4-cp36-abi3-macosx_10_10_x86_64.whl\", hash = \"sha256:1f13ddda26a04c06eb57119caf27a524ccae20533729f4b1e4a69b54e07035eb\"},",
          "633:     {file = \"cryptography-38.0.4-cp36-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_24_aarch64.whl\", hash = \"sha256:2ec2a8714dd005949d4019195d72abed84198d877112abb5a27740e217e0ea8d\"},",
          "634:     {file = \"cryptography-38.0.4-cp36-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:50a1494ed0c3f5b4d07650a68cd6ca62efe8b596ce743a5c94403e6f11bf06c1\"},",
          "635:     {file = \"cryptography-38.0.4-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:a10498349d4c8eab7357a8f9aa3463791292845b79597ad1b98a543686fb1ec8\"},",
          "636:     {file = \"cryptography-38.0.4-cp36-abi3-manylinux_2_24_x86_64.whl\", hash = \"sha256:10652dd7282de17990b88679cb82f832752c4e8237f0c714be518044269415db\"},",
          "637:     {file = \"cryptography-38.0.4-cp36-abi3-manylinux_2_28_aarch64.whl\", hash = \"sha256:bfe6472507986613dc6cc00b3d492b2f7564b02b3b3682d25ca7f40fa3fd321b\"},",
          "638:     {file = \"cryptography-38.0.4-cp36-abi3-manylinux_2_28_x86_64.whl\", hash = \"sha256:ce127dd0a6a0811c251a6cddd014d292728484e530d80e872ad9806cfb1c5b3c\"},",
          "639:     {file = \"cryptography-38.0.4-cp36-abi3-musllinux_1_1_aarch64.whl\", hash = \"sha256:53049f3379ef05182864d13bb9686657659407148f901f3f1eee57a733fb4b00\"},",
          "640:     {file = \"cryptography-38.0.4-cp36-abi3-musllinux_1_1_x86_64.whl\", hash = \"sha256:8a4b2bdb68a447fadebfd7d24855758fe2d6fecc7fed0b78d190b1af39a8e3b0\"},",
          "641:     {file = \"cryptography-38.0.4-cp36-abi3-win32.whl\", hash = \"sha256:1d7e632804a248103b60b16fb145e8df0bc60eed790ece0d12efe8cd3f3e7744\"},",
          "642:     {file = \"cryptography-38.0.4-cp36-abi3-win_amd64.whl\", hash = \"sha256:8e45653fb97eb2f20b8c96f9cd2b3a0654d742b47d638cf2897afbd97f80fa6d\"},",
          "643:     {file = \"cryptography-38.0.4-pp37-pypy37_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ca57eb3ddaccd1112c18fc80abe41db443cc2e9dcb1917078e02dfa010a4f353\"},",
          "644:     {file = \"cryptography-38.0.4-pp37-pypy37_pp73-manylinux_2_24_x86_64.whl\", hash = \"sha256:c9e0d79ee4c56d841bd4ac6e7697c8ff3c8d6da67379057f29e66acffcd1e9a7\"},",
          "645:     {file = \"cryptography-38.0.4-pp37-pypy37_pp73-manylinux_2_28_x86_64.whl\", hash = \"sha256:0e70da4bdff7601b0ef48e6348339e490ebfb0cbe638e083c9c41fb49f00c8bd\"},",
          "646:     {file = \"cryptography-38.0.4-pp38-pypy38_pp73-macosx_10_10_x86_64.whl\", hash = \"sha256:998cd19189d8a747b226d24c0207fdaa1e6658a1d3f2494541cb9dfbf7dcb6d2\"},",
          "647:     {file = \"cryptography-38.0.4-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:67461b5ebca2e4c2ab991733f8ab637a7265bb582f07c7c88914b5afb88cb95b\"},",
          "648:     {file = \"cryptography-38.0.4-pp38-pypy38_pp73-manylinux_2_24_x86_64.whl\", hash = \"sha256:4eb85075437f0b1fd8cd66c688469a0c4119e0ba855e3fef86691971b887caf6\"},",
          "649:     {file = \"cryptography-38.0.4-pp38-pypy38_pp73-manylinux_2_28_x86_64.whl\", hash = \"sha256:3178d46f363d4549b9a76264f41c6948752183b3f587666aff0555ac50fd7876\"},",
          "650:     {file = \"cryptography-38.0.4-pp38-pypy38_pp73-win_amd64.whl\", hash = \"sha256:6391e59ebe7c62d9902c24a4d8bcbc79a68e7c4ab65863536127c8a9cd94043b\"},",
          "651:     {file = \"cryptography-38.0.4-pp39-pypy39_pp73-macosx_10_10_x86_64.whl\", hash = \"sha256:78e47e28ddc4ace41dd38c42e6feecfdadf9c3be2af389abbfeef1ff06822285\"},",
          "652:     {file = \"cryptography-38.0.4-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2fb481682873035600b5502f0015b664abc26466153fab5c6bc92c1ea69d478b\"},",
          "653:     {file = \"cryptography-38.0.4-pp39-pypy39_pp73-manylinux_2_24_x86_64.whl\", hash = \"sha256:4367da5705922cf7070462e964f66e4ac24162e22ab0a2e9d31f1b270dd78083\"},",
          "654:     {file = \"cryptography-38.0.4-pp39-pypy39_pp73-manylinux_2_28_x86_64.whl\", hash = \"sha256:b4cad0cea995af760f82820ab4ca54e5471fc782f70a007f31531957f43e9dee\"},",
          "655:     {file = \"cryptography-38.0.4-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:80ca53981ceeb3241998443c4964a387771588c4e4a5d92735a493af868294f9\"},",
          "656:     {file = \"cryptography-38.0.4.tar.gz\", hash = \"sha256:175c1a818b87c9ac80bb7377f5520b7f31b3ef2a0004e2420319beadedb67290\"},",
          "657: ]",
          "659: [package.dependencies]",
          "660: cffi = \">=1.12\"",
          "662: [package.extras]",
          "663: docs = [\"sphinx (>=1.6.5,!=1.8.0,!=3.1.0,!=3.1.1)\", \"sphinx-rtd-theme\"]",
          "664: docstest = [\"pyenchant (>=1.6.11)\", \"sphinxcontrib-spelling (>=4.0.1)\", \"twine (>=1.12.0)\"]",
          "665: pep8test = [\"black\", \"flake8\", \"flake8-import-order\", \"pep8-naming\"]",
          "666: sdist = [\"setuptools-rust (>=0.11.4)\"]",
          "667: ssh = [\"bcrypt (>=3.1.5)\"]",
          "668: test = [\"hypothesis (>=1.11.4,!=3.79.2)\", \"iso8601\", \"pretend\", \"pytest (>=6.2.0)\", \"pytest-benchmark\", \"pytest-cov\", \"pytest-subtests\", \"pytest-xdist\", \"pytz\"]",
          "670: [[package]]",
          "671: name = \"cycler\"",
          "672: version = \"0.11.0\"",
          "673: description = \"Composable style cycles\"",
          "674: optional = false",
          "675: python-versions = \">=3.6\"",
          "676: files = [",
          "677:     {file = \"cycler-0.11.0-py3-none-any.whl\", hash = \"sha256:3a27e95f763a428a739d2add979fa7494c912a32c17c4c38c4d5f082cad165a3\"},",
          "678:     {file = \"cycler-0.11.0.tar.gz\", hash = \"sha256:9c87405839a19696e837b3b818fed3f5f69f16f1eec1a1ad77e043dcea9c772f\"},",
          "679: ]",
          "681: [[package]]",
          "682: name = \"decorator\"",
          "683: version = \"5.1.1\"",
          "684: description = \"Decorators for Humans\"",
          "685: optional = false",
          "686: python-versions = \">=3.5\"",
          "687: files = [",
          "688:     {file = \"decorator-5.1.1-py3-none-any.whl\", hash = \"sha256:b8c3f85900b9dc423225913c5aace94729fe1fa9763b38939a95226f02d37186\"},",
          "689:     {file = \"decorator-5.1.1.tar.gz\", hash = \"sha256:637996211036b6385ef91435e4fae22989472f9d571faba8927ba8253acbc330\"},",
          "690: ]",
          "692: [[package]]",
          "693: name = \"defusedxml\"",
          "694: version = \"0.7.1\"",
          "695: description = \"XML bomb protection for Python stdlib modules\"",
          "696: optional = false",
          "697: python-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*\"",
          "698: files = [",
          "699:     {file = \"defusedxml-0.7.1-py2.py3-none-any.whl\", hash = \"sha256:a352e7e428770286cc899e2542b6cdaedb2b4953ff269a210103ec58f6198a61\"},",
          "700:     {file = \"defusedxml-0.7.1.tar.gz\", hash = \"sha256:1bb3032db185915b62d7c6209c5a8792be6a32ab2fedacc84e01b52c51aa3e69\"},",
          "701: ]",
          "703: [[package]]",
          "704: name = \"distro\"",
          "705: version = \"1.8.0\"",
          "706: description = \"Distro - an OS platform information API\"",
          "707: optional = false",
          "708: python-versions = \">=3.6\"",
          "709: files = [",
          "710:     {file = \"distro-1.8.0-py3-none-any.whl\", hash = \"sha256:99522ca3e365cac527b44bde033f64c6945d90eb9f769703caaec52b09bbd3ff\"},",
          "711:     {file = \"distro-1.8.0.tar.gz\", hash = \"sha256:02e111d1dc6a50abb8eed6bf31c3e48ed8b0830d1ea2a1b78c61765c2513fdd8\"},",
          "712: ]",
          "714: [[package]]",
          "715: name = \"django\"",
          "716: version = \"4.1.10\"",
          "717: description = \"A high-level Python web framework that encourages rapid development and clean, pragmatic design.\"",
          "718: optional = false",
          "719: python-versions = \">=3.8\"",
          "720: files = [",
          "721:     {file = \"Django-4.1.10-py3-none-any.whl\", hash = \"sha256:26d0260c2fb8121009e62ffc548b2398dea2522b6454208a852fb0ef264c206c\"},",
          "722:     {file = \"Django-4.1.10.tar.gz\", hash = \"sha256:56343019a9fd839e2e5bf203daf45f25af79d5bffa4c71d56eae4f4404d82ade\"},",
          "723: ]",
          "725: [package.dependencies]",
          "726: asgiref = \">=3.5.2,<4\"",
          "727: sqlparse = \">=0.2.2\"",
          "728: tzdata = {version = \"*\", markers = \"sys_platform == \\\"win32\\\"\"}",
          "730: [package.extras]",
          "731: argon2 = [\"argon2-cffi (>=19.1.0)\"]",
          "732: bcrypt = [\"bcrypt\"]",
          "734: [[package]]",
          "735: name = \"executing\"",
          "736: version = \"1.2.0\"",
          "737: description = \"Get the currently executing AST node of a frame, and other information\"",
          "738: optional = false",
          "739: python-versions = \"*\"",
          "740: files = [",
          "741:     {file = \"executing-1.2.0-py2.py3-none-any.whl\", hash = \"sha256:0314a69e37426e3608aada02473b4161d4caf5a4b244d1d0c48072b8fee7bacc\"},",
          "742:     {file = \"executing-1.2.0.tar.gz\", hash = \"sha256:19da64c18d2d851112f09c287f8d3dbbdf725ab0e569077efb6cdcbd3497c107\"},",
          "743: ]",
          "745: [package.extras]",
          "746: tests = [\"asttokens\", \"littleutils\", \"pytest\", \"rich\"]",
          "748: [[package]]",
          "749: name = \"face\"",
          "750: version = \"22.0.0\"",
          "751: description = \"A command-line application framework (and CLI parser). Friendly for users, full-featured for developers.\"",
          "752: optional = false",
          "753: python-versions = \"*\"",
          "754: files = [",
          "755:     {file = \"face-22.0.0-py3-none-any.whl\", hash = \"sha256:344fe31562d0f6f444a45982418f3793d4b14f9abb98ccca1509d22e0a3e7e35\"},",
          "756:     {file = \"face-22.0.0.tar.gz\", hash = \"sha256:d5d692f90bc8f5987b636e47e36384b9bbda499aaf0a77aa0b0bbe834c76923d\"},",
          "757: ]",
          "759: [package.dependencies]",
          "760: boltons = \">=20.0.0\"",
          "762: [[package]]",
          "763: name = \"filelock\"",
          "764: version = \"3.12.2\"",
          "765: description = \"A platform independent file lock.\"",
          "766: optional = false",
          "767: python-versions = \">=3.7\"",
          "768: files = [",
          "769:     {file = \"filelock-3.12.2-py3-none-any.whl\", hash = \"sha256:cbb791cdea2a72f23da6ac5b5269ab0a0d161e9ef0100e653b69049a7706d1ec\"},",
          "770:     {file = \"filelock-3.12.2.tar.gz\", hash = \"sha256:002740518d8aa59a26b0c76e10fb8c6e15eae825d34b6fdf670333fd7b938d81\"},",
          "771: ]",
          "773: [package.extras]",
          "774: docs = [\"furo (>=2023.5.20)\", \"sphinx (>=7.0.1)\", \"sphinx-autodoc-typehints (>=1.23,!=1.23.4)\"]",
          "775: testing = [\"covdefaults (>=2.3)\", \"coverage (>=7.2.7)\", \"diff-cover (>=7.5)\", \"pytest (>=7.3.1)\", \"pytest-cov (>=4.1)\", \"pytest-mock (>=3.10)\", \"pytest-timeout (>=2.1)\"]",
          "777: [[package]]",
          "778: name = \"flask\"",
          "779: version = \"2.1.3\"",
          "780: description = \"A simple framework for building complex web applications.\"",
          "781: optional = false",
          "782: python-versions = \">=3.7\"",
          "783: files = [",
          "784:     {file = \"Flask-2.1.3-py3-none-any.whl\", hash = \"sha256:9013281a7402ad527f8fd56375164f3aa021ecfaff89bfe3825346c24f87e04c\"},",
          "785:     {file = \"Flask-2.1.3.tar.gz\", hash = \"sha256:15972e5017df0575c3d6c090ba168b6db90259e620ac8d7ea813a396bad5b6cb\"},",
          "786: ]",
          "788: [package.dependencies]",
          "789: click = \">=8.0\"",
          "790: importlib-metadata = {version = \">=3.6.0\", markers = \"python_version < \\\"3.10\\\"\"}",
          "791: itsdangerous = \">=2.0\"",
          "792: Jinja2 = \">=3.0\"",
          "793: Werkzeug = \">=2.0\"",
          "795: [package.extras]",
          "796: async = [\"asgiref (>=3.2)\"]",
          "797: dotenv = [\"python-dotenv\"]",
          "799: [[package]]",
          "800: name = \"fonttools\"",
          "801: version = \"4.42.1\"",
          "802: description = \"Tools to manipulate font files\"",
          "803: optional = false",
          "804: python-versions = \">=3.8\"",
          "805: files = [",
          "806:     {file = \"fonttools-4.42.1-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:ed1a13a27f59d1fc1920394a7f596792e9d546c9ca5a044419dca70c37815d7c\"},",
          "807:     {file = \"fonttools-4.42.1-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:c9b1ce7a45978b821a06d375b83763b27a3a5e8a2e4570b3065abad240a18760\"},",
          "808:     {file = \"fonttools-4.42.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f720fa82a11c0f9042376fd509b5ed88dab7e3cd602eee63a1af08883b37342b\"},",
          "809:     {file = \"fonttools-4.42.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:db55cbaea02a20b49fefbd8e9d62bd481aaabe1f2301dabc575acc6b358874fa\"},",
          "810:     {file = \"fonttools-4.42.1-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:3a35981d90feebeaef05e46e33e6b9e5b5e618504672ca9cd0ff96b171e4bfff\"},",
          "811:     {file = \"fonttools-4.42.1-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:68a02bbe020dc22ee0540e040117535f06df9358106d3775e8817d826047f3fd\"},",
          "812:     {file = \"fonttools-4.42.1-cp310-cp310-win32.whl\", hash = \"sha256:12a7c247d1b946829bfa2f331107a629ea77dc5391dfd34fdcd78efa61f354ca\"},",
          "813:     {file = \"fonttools-4.42.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:a398bdadb055f8de69f62b0fc70625f7cbdab436bbb31eef5816e28cab083ee8\"},",
          "814:     {file = \"fonttools-4.42.1-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:689508b918332fb40ce117131633647731d098b1b10d092234aa959b4251add5\"},",
          "815:     {file = \"fonttools-4.42.1-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:9e36344e48af3e3bde867a1ca54f97c308735dd8697005c2d24a86054a114a71\"},",
          "816:     {file = \"fonttools-4.42.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:19b7db825c8adee96fac0692e6e1ecd858cae9affb3b4812cdb9d934a898b29e\"},",
          "817:     {file = \"fonttools-4.42.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:113337c2d29665839b7d90b39f99b3cac731f72a0eda9306165a305c7c31d341\"},",
          "818:     {file = \"fonttools-4.42.1-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:37983b6bdab42c501202500a2be3a572f50d4efe3237e0686ee9d5f794d76b35\"},",
          "819:     {file = \"fonttools-4.42.1-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:6ed2662a3d9c832afa36405f8748c250be94ae5dfc5283d668308391f2102861\"},",
          "820:     {file = \"fonttools-4.42.1-cp311-cp311-win32.whl\", hash = \"sha256:179737095eb98332a2744e8f12037b2977f22948cf23ff96656928923ddf560a\"},",
          "821:     {file = \"fonttools-4.42.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:f2b82f46917d8722e6b5eafeefb4fb585d23babd15d8246c664cd88a5bddd19c\"},",
          "822:     {file = \"fonttools-4.42.1-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:62f481ac772fd68901573956231aea3e4b1ad87b9b1089a61613a91e2b50bb9b\"},",
          "823:     {file = \"fonttools-4.42.1-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:f2f806990160d1ce42d287aa419df3ffc42dfefe60d473695fb048355fe0c6a0\"},",
          "824:     {file = \"fonttools-4.42.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:db372213d39fa33af667c2aa586a0c1235e88e9c850f5dd5c8e1f17515861868\"},",
          "825:     {file = \"fonttools-4.42.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:5d18fc642fd0ac29236ff88ecfccff229ec0386090a839dd3f1162e9a7944a40\"},",
          "826:     {file = \"fonttools-4.42.1-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:8708b98c278012ad267ee8a7433baeb809948855e81922878118464b274c909d\"},",
          "827:     {file = \"fonttools-4.42.1-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:c95b0724a6deea2c8c5d3222191783ced0a2f09bd6d33f93e563f6f1a4b3b3a4\"},",
          "828:     {file = \"fonttools-4.42.1-cp38-cp38-win32.whl\", hash = \"sha256:4aa79366e442dbca6e2c8595645a3a605d9eeabdb7a094d745ed6106816bef5d\"},",
          "829:     {file = \"fonttools-4.42.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:acb47f6f8680de24c1ab65ebde39dd035768e2a9b571a07c7b8da95f6c8815fd\"},",
          "830:     {file = \"fonttools-4.42.1-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:5fb289b7a815638a7613d46bcf324c9106804725b2bb8ad913c12b6958ffc4ec\"},",
          "831:     {file = \"fonttools-4.42.1-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:53eb5091ddc8b1199330bb7b4a8a2e7995ad5d43376cadce84523d8223ef3136\"},",
          "832:     {file = \"fonttools-4.42.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:46a0ec8adbc6ff13494eb0c9c2e643b6f009ce7320cf640de106fb614e4d4360\"},",
          "833:     {file = \"fonttools-4.42.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7cc7d685b8eeca7ae69dc6416833fbfea61660684b7089bca666067cb2937dcf\"},",
          "834:     {file = \"fonttools-4.42.1-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:be24fcb80493b2c94eae21df70017351851652a37de514de553435b256b2f249\"},",
          "835:     {file = \"fonttools-4.42.1-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:515607ec756d7865f23070682622c49d922901943697871fc292277cf1e71967\"},",
          "836:     {file = \"fonttools-4.42.1-cp39-cp39-win32.whl\", hash = \"sha256:0eb79a2da5eb6457a6f8ab904838454accc7d4cccdaff1fd2bd3a0679ea33d64\"},",
          "837:     {file = \"fonttools-4.42.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:7286aed4ea271df9eab8d7a9b29e507094b51397812f7ce051ecd77915a6e26b\"},",
          "838:     {file = \"fonttools-4.42.1-py3-none-any.whl\", hash = \"sha256:9398f244e28e0596e2ee6024f808b06060109e33ed38dcc9bded452fd9bbb853\"},",
          "839:     {file = \"fonttools-4.42.1.tar.gz\", hash = \"sha256:c391cd5af88aacaf41dd7cfb96eeedfad297b5899a39e12f4c2c3706d0a3329d\"},",
          "840: ]",
          "842: [package.extras]",
          "843: all = [\"brotli (>=1.0.1)\", \"brotlicffi (>=0.8.0)\", \"fs (>=2.2.0,<3)\", \"lxml (>=4.0,<5)\", \"lz4 (>=1.7.4.2)\", \"matplotlib\", \"munkres\", \"scipy\", \"skia-pathops (>=0.5.0)\", \"sympy\", \"uharfbuzz (>=0.23.0)\", \"unicodedata2 (>=15.0.0)\", \"xattr\", \"zopfli (>=0.1.4)\"]",
          "844: graphite = [\"lz4 (>=1.7.4.2)\"]",
          "845: interpolatable = [\"munkres\", \"scipy\"]",
          "846: lxml = [\"lxml (>=4.0,<5)\"]",
          "847: pathops = [\"skia-pathops (>=0.5.0)\"]",
          "848: plot = [\"matplotlib\"]",
          "849: repacker = [\"uharfbuzz (>=0.23.0)\"]",
          "850: symfont = [\"sympy\"]",
          "851: type1 = [\"xattr\"]",
          "852: ufo = [\"fs (>=2.2.0,<3)\"]",
          "853: unicode = [\"unicodedata2 (>=15.0.0)\"]",
          "854: woff = [\"brotli (>=1.0.1)\", \"brotlicffi (>=0.8.0)\", \"zopfli (>=0.1.4)\"]",
          "856: [[package]]",
          "857: name = \"frida\"",
          "858: version = \"15.2.2\"",
          "859: description = \"Dynamic instrumentation toolkit for developers, reverse-engineers, and security researchers\"",
          "860: optional = false",
          "861: python-versions = \"*\"",
          "862: files = [",
          "863:     {file = \"frida-15.2.2.tar.gz\", hash = \"sha256:76e2cd9d4ce0559d0132201ff087fd31205e8e26ef590eeba89cbdad582ecb59\"},",
          "864: ]",
          "866: [package.dependencies]",
          "867: setuptools = \"*\"",
          "869: [[package]]",
          "870: name = \"glom\"",
          "871: version = \"22.1.0\"",
          "872: description = \"A declarative object transformer and formatter, for conglomerating nested data.\"",
          "873: optional = false",
          "874: python-versions = \"*\"",
          "875: files = [",
          "876:     {file = \"glom-22.1.0-py2.py3-none-any.whl\", hash = \"sha256:5339da206bf3532e01a83a35aca202960ea885156986d190574b779598e9e772\"},",
          "877:     {file = \"glom-22.1.0.tar.gz\", hash = \"sha256:1510c6587a8f9c64a246641b70033cbc5ebde99f02ad245693678038e821aeb5\"},",
          "878: ]",
          "880: [package.dependencies]",
          "881: attrs = \"*\"",
          "882: boltons = \">=19.3.0\"",
          "883: face = \">=20.1.0\"",
          "885: [package.extras]",
          "886: yaml = [\"PyYAML\"]",
          "888: [[package]]",
          "889: name = \"google-play-scraper\"",
          "890: version = \"1.2.4\"",
          "891: description = \"Google-Play-Scraper provides APIs to easily crawl the Google Play Store for Python without any external dependencies!\"",
          "892: optional = false",
          "893: python-versions = \">=3.7,<4.0\"",
          "894: files = [",
          "895:     {file = \"google_play_scraper-1.2.4-py3-none-any.whl\", hash = \"sha256:99a5af02dd5fc46143b5e56afb2a5f329f1d30b18633d28c08fd1f1988fff48b\"},",
          "896:     {file = \"google_play_scraper-1.2.4.tar.gz\", hash = \"sha256:cbda99d611a6de9a3e755785a42f13c3157bbd36089c742b45d24856afbfd5f7\"},",
          "897: ]",
          "899: [[package]]",
          "900: name = \"graphviz\"",
          "901: version = \"0.20.1\"",
          "902: description = \"Simple Python interface for Graphviz\"",
          "903: optional = false",
          "904: python-versions = \">=3.7\"",
          "905: files = [",
          "906:     {file = \"graphviz-0.20.1-py3-none-any.whl\", hash = \"sha256:587c58a223b51611c0cf461132da386edd896a029524ca61a1462b880bf97977\"},",
          "907:     {file = \"graphviz-0.20.1.zip\", hash = \"sha256:8c58f14adaa3b947daf26c19bc1e98c4e0702cdc31cf99153e6f06904d492bf8\"},",
          "908: ]",
          "910: [package.extras]",
          "911: dev = [\"flake8\", \"pep8-naming\", \"tox (>=3)\", \"twine\", \"wheel\"]",
          "912: docs = [\"sphinx (>=5)\", \"sphinx-autodoc-typehints\", \"sphinx-rtd-theme\"]",
          "913: test = [\"coverage\", \"mock (>=4)\", \"pytest (>=7)\", \"pytest-cov\", \"pytest-mock (>=3)\"]",
          "915: [[package]]",
          "916: name = \"gunicorn\"",
          "917: version = \"21.2.0\"",
          "918: description = \"WSGI HTTP Server for UNIX\"",
          "919: optional = false",
          "920: python-versions = \">=3.5\"",
          "921: files = [",
          "922:     {file = \"gunicorn-21.2.0-py3-none-any.whl\", hash = \"sha256:3213aa5e8c24949e792bcacfc176fef362e7aac80b76c56f6b5122bf350722f0\"},",
          "923:     {file = \"gunicorn-21.2.0.tar.gz\", hash = \"sha256:88ec8bff1d634f98e61b9f65bc4bf3cd918a90806c6f5c48bc5603849ec81033\"},",
          "924: ]",
          "926: [package.dependencies]",
          "927: packaging = \"*\"",
          "929: [package.extras]",
          "930: eventlet = [\"eventlet (>=0.24.1)\"]",
          "931: gevent = [\"gevent (>=1.4.0)\"]",
          "932: setproctitle = [\"setproctitle\"]",
          "933: tornado = [\"tornado (>=0.2)\"]",
          "935: [[package]]",
          "936: name = \"h11\"",
          "937: version = \"0.14.0\"",
          "938: description = \"A pure-Python, bring-your-own-I/O implementation of HTTP/1.1\"",
          "939: optional = false",
          "940: python-versions = \">=3.7\"",
          "941: files = [",
          "942:     {file = \"h11-0.14.0-py3-none-any.whl\", hash = \"sha256:e3fe4ac4b851c468cc8363d500db52c2ead036020723024a109d37346efaa761\"},",
          "943:     {file = \"h11-0.14.0.tar.gz\", hash = \"sha256:8f19fbbe99e72420ff35c00b27a34cb9937e902a8b810e2c88300c6f0a3b699d\"},",
          "944: ]",
          "946: [[package]]",
          "947: name = \"h2\"",
          "948: version = \"4.1.0\"",
          "949: description = \"HTTP/2 State-Machine based protocol implementation\"",
          "950: optional = false",
          "951: python-versions = \">=3.6.1\"",
          "952: files = [",
          "953:     {file = \"h2-4.1.0-py3-none-any.whl\", hash = \"sha256:03a46bcf682256c95b5fd9e9a99c1323584c3eec6440d379b9903d709476bc6d\"},",
          "954:     {file = \"h2-4.1.0.tar.gz\", hash = \"sha256:a83aca08fbe7aacb79fec788c9c0bac936343560ed9ec18b82a13a12c28d2abb\"},",
          "955: ]",
          "957: [package.dependencies]",
          "958: hpack = \">=4.0,<5\"",
          "959: hyperframe = \">=6.0,<7\"",
          "961: [[package]]",
          "962: name = \"hpack\"",
          "963: version = \"4.0.0\"",
          "964: description = \"Pure-Python HPACK header compression\"",
          "965: optional = false",
          "966: python-versions = \">=3.6.1\"",
          "967: files = [",
          "968:     {file = \"hpack-4.0.0-py3-none-any.whl\", hash = \"sha256:84a076fad3dc9a9f8063ccb8041ef100867b1878b25ef0ee63847a5d53818a6c\"},",
          "969:     {file = \"hpack-4.0.0.tar.gz\", hash = \"sha256:fc41de0c63e687ebffde81187a948221294896f6bdc0ae2312708df339430095\"},",
          "970: ]",
          "972: [[package]]",
          "973: name = \"http-tools\"",
          "974: version = \"3.0.0\"",
          "975: description = \"httptools helps you to capture, repeat and live intercept HTTP requests. It is built on top of [mitmproxy](https://mitmproxy.org/)\"",
          "976: optional = false",
          "977: python-versions = \"*\"",
          "978: files = [",
          "979:     {file = \"http-tools-3.0.0.tar.gz\", hash = \"sha256:367e03a83464a16aa710cd77dc5e1b3730b3fdbee1b7db2e20a8adf759d987e2\"},",
          "980: ]",
          "982: [package.dependencies]",
          "983: markupsafe = \"2.0.1\"",
          "984: mitmproxy = \"9.0.1\"",
          "986: [[package]]",
          "987: name = \"hyperframe\"",
          "988: version = \"6.0.1\"",
          "989: description = \"HTTP/2 framing layer for Python\"",
          "990: optional = false",
          "991: python-versions = \">=3.6.1\"",
          "992: files = [",
          "993:     {file = \"hyperframe-6.0.1-py3-none-any.whl\", hash = \"sha256:0ec6bafd80d8ad2195c4f03aacba3a8265e57bc4cff261e802bf39970ed02a15\"},",
          "994:     {file = \"hyperframe-6.0.1.tar.gz\", hash = \"sha256:ae510046231dc8e9ecb1a6586f63d2347bf4c8905914aa84ba585ae85f28a914\"},",
          "995: ]",
          "997: [[package]]",
          "998: name = \"idna\"",
          "999: version = \"3.4\"",
          "1000: description = \"Internationalized Domain Names in Applications (IDNA)\"",
          "1001: optional = false",
          "1002: python-versions = \">=3.5\"",
          "1003: files = [",
          "1004:     {file = \"idna-3.4-py3-none-any.whl\", hash = \"sha256:90b77e79eaa3eba6de819a0c442c0b4ceefc341a7a2ab77d7562bf49f425c5c2\"},",
          "1005:     {file = \"idna-3.4.tar.gz\", hash = \"sha256:814f528e8dead7d329833b91c5faa87d60bf71824cd12a7530b5526063d02cb4\"},",
          "1006: ]",
          "1008: [[package]]",
          "1009: name = \"importlib-metadata\"",
          "1010: version = \"6.8.0\"",
          "1011: description = \"Read metadata from Python packages\"",
          "1012: optional = false",
          "1013: python-versions = \">=3.8\"",
          "1014: files = [",
          "1015:     {file = \"importlib_metadata-6.8.0-py3-none-any.whl\", hash = \"sha256:3ebb78df84a805d7698245025b975d9d67053cd94c79245ba4b3eb694abe68bb\"},",
          "1016:     {file = \"importlib_metadata-6.8.0.tar.gz\", hash = \"sha256:dbace7892d8c0c4ac1ad096662232f831d4e64f4c4545bd53016a3e9d4654743\"},",
          "1017: ]",
          "1019: [package.dependencies]",
          "1020: zipp = \">=0.5\"",
          "1022: [package.extras]",
          "1023: docs = [\"furo\", \"jaraco.packaging (>=9)\", \"jaraco.tidelift (>=1.4)\", \"rst.linker (>=1.9)\", \"sphinx (>=3.5)\", \"sphinx-lint\"]",
          "1024: perf = [\"ipython\"]",
          "1025: testing = [\"flufl.flake8\", \"importlib-resources (>=1.3)\", \"packaging\", \"pyfakefs\", \"pytest (>=6)\", \"pytest-black (>=0.3.7)\", \"pytest-checkdocs (>=2.4)\", \"pytest-cov\", \"pytest-enabler (>=2.2)\", \"pytest-mypy (>=0.9.1)\", \"pytest-perf (>=0.9.2)\", \"pytest-ruff\"]",
          "1027: [[package]]",
          "1028: name = \"importlib-resources\"",
          "1029: version = \"6.0.1\"",
          "1030: description = \"Read resources from Python packages\"",
          "1031: optional = false",
          "1032: python-versions = \">=3.8\"",
          "1033: files = [",
          "1034:     {file = \"importlib_resources-6.0.1-py3-none-any.whl\", hash = \"sha256:134832a506243891221b88b4ae1213327eea96ceb4e407a00d790bb0626f45cf\"},",
          "1035:     {file = \"importlib_resources-6.0.1.tar.gz\", hash = \"sha256:4359457e42708462b9626a04657c6208ad799ceb41e5c58c57ffa0e6a098a5d4\"},",
          "1036: ]",
          "1038: [package.dependencies]",
          "1039: zipp = {version = \">=3.1.0\", markers = \"python_version < \\\"3.10\\\"\"}",
          "1041: [package.extras]",
          "1042: docs = [\"furo\", \"jaraco.packaging (>=9.3)\", \"jaraco.tidelift (>=1.4)\", \"rst.linker (>=1.9)\", \"sphinx (>=3.5)\", \"sphinx-lint\"]",
          "1043: testing = [\"pytest (>=6)\", \"pytest-black (>=0.3.7)\", \"pytest-checkdocs (>=2.4)\", \"pytest-cov\", \"pytest-enabler (>=2.2)\", \"pytest-mypy (>=0.9.1)\", \"pytest-ruff\"]",
          "1045: [[package]]",
          "1046: name = \"ip2location\"",
          "1047: version = \"8.10.0\"",
          "1048: description = \"This is an IP geolocation library that enables the user to find the country, region, city, latitude and longitude, ZIP code, time zone, ISP, domain name, area code, weather info, mobile info, elevation, usage type, address type and IAB category from an IP address. It supports both IPv4 and IPv6 lookup.\"",
          "1049: optional = false",
          "1050: python-versions = \"*\"",
          "1051: files = [",
          "1052:     {file = \"IP2Location-8.10.0-py3-none-any.whl\", hash = \"sha256:b6573b422569581b2f40425e1e8dd5fdba1f8a75d3a1be366c1f0886fede3ba4\"},",
          "1053:     {file = \"IP2Location-8.10.0.tar.gz\", hash = \"sha256:f0eea26c655f701406fa9379a38a0b56cc0dc7d0c6a221d44bda5280978a75ab\"},",
          "1054: ]",
          "1056: [[package]]",
          "1057: name = \"ipython\"",
          "1058: version = \"8.14.0\"",
          "1059: description = \"IPython: Productive Interactive Computing\"",
          "1060: optional = false",
          "1061: python-versions = \">=3.9\"",
          "1062: files = [",
          "1063:     {file = \"ipython-8.14.0-py3-none-any.whl\", hash = \"sha256:248aca623f5c99a6635bc3857677b7320b9b8039f99f070ee0d20a5ca5a8e6bf\"},",
          "1064:     {file = \"ipython-8.14.0.tar.gz\", hash = \"sha256:1d197b907b6ba441b692c48cf2a3a2de280dc0ac91a3405b39349a50272ca0a1\"},",
          "1065: ]",
          "1067: [package.dependencies]",
          "1068: appnope = {version = \"*\", markers = \"sys_platform == \\\"darwin\\\"\"}",
          "1069: backcall = \"*\"",
          "1070: colorama = {version = \"*\", markers = \"sys_platform == \\\"win32\\\"\"}",
          "1071: decorator = \"*\"",
          "1072: jedi = \">=0.16\"",
          "1073: matplotlib-inline = \"*\"",
          "1074: pexpect = {version = \">4.3\", markers = \"sys_platform != \\\"win32\\\"\"}",
          "1075: pickleshare = \"*\"",
          "1076: prompt-toolkit = \">=3.0.30,<3.0.37 || >3.0.37,<3.1.0\"",
          "1077: pygments = \">=2.4.0\"",
          "1078: stack-data = \"*\"",
          "1079: traitlets = \">=5\"",
          "1080: typing-extensions = {version = \"*\", markers = \"python_version < \\\"3.10\\\"\"}",
          "1082: [package.extras]",
          "1083: all = [\"black\", \"curio\", \"docrepr\", \"ipykernel\", \"ipyparallel\", \"ipywidgets\", \"matplotlib\", \"matplotlib (!=3.2.0)\", \"nbconvert\", \"nbformat\", \"notebook\", \"numpy (>=1.21)\", \"pandas\", \"pytest (<7)\", \"pytest (<7.1)\", \"pytest-asyncio\", \"qtconsole\", \"setuptools (>=18.5)\", \"sphinx (>=1.3)\", \"sphinx-rtd-theme\", \"stack-data\", \"testpath\", \"trio\", \"typing-extensions\"]",
          "1084: black = [\"black\"]",
          "1085: doc = [\"docrepr\", \"ipykernel\", \"matplotlib\", \"pytest (<7)\", \"pytest (<7.1)\", \"pytest-asyncio\", \"setuptools (>=18.5)\", \"sphinx (>=1.3)\", \"sphinx-rtd-theme\", \"stack-data\", \"testpath\", \"typing-extensions\"]",
          "1086: kernel = [\"ipykernel\"]",
          "1087: nbconvert = [\"nbconvert\"]",
          "1088: nbformat = [\"nbformat\"]",
          "1089: notebook = [\"ipywidgets\", \"notebook\"]",
          "1090: parallel = [\"ipyparallel\"]",
          "1091: qtconsole = [\"qtconsole\"]",
          "1092: test = [\"pytest (<7.1)\", \"pytest-asyncio\", \"testpath\"]",
          "1093: test-extra = [\"curio\", \"matplotlib (!=3.2.0)\", \"nbformat\", \"numpy (>=1.21)\", \"pandas\", \"pytest (<7.1)\", \"pytest-asyncio\", \"testpath\", \"trio\"]",
          "1095: [[package]]",
          "1096: name = \"itsdangerous\"",
          "1097: version = \"2.1.2\"",
          "1098: description = \"Safely pass data to untrusted environments and back.\"",
          "1099: optional = false",
          "1100: python-versions = \">=3.7\"",
          "1101: files = [",
          "1102:     {file = \"itsdangerous-2.1.2-py3-none-any.whl\", hash = \"sha256:2c2349112351b88699d8d4b6b075022c0808887cb7ad10069318a8b0bc88db44\"},",
          "1103:     {file = \"itsdangerous-2.1.2.tar.gz\", hash = \"sha256:5dbbc68b317e5e42f327f9021763545dc3fc3bfe22e6deb96aaf1fc38874156a\"},",
          "1104: ]",
          "1106: [[package]]",
          "1107: name = \"jedi\"",
          "1108: version = \"0.19.0\"",
          "1109: description = \"An autocompletion tool for Python that can be used for text editors.\"",
          "1110: optional = false",
          "1111: python-versions = \">=3.6\"",
          "1112: files = [",
          "1113:     {file = \"jedi-0.19.0-py2.py3-none-any.whl\", hash = \"sha256:cb8ce23fbccff0025e9386b5cf85e892f94c9b822378f8da49970471335ac64e\"},",
          "1114:     {file = \"jedi-0.19.0.tar.gz\", hash = \"sha256:bcf9894f1753969cbac8022a8c2eaee06bfa3724e4192470aaffe7eb6272b0c4\"},",
          "1115: ]",
          "1117: [package.dependencies]",
          "1118: parso = \">=0.8.3,<0.9.0\"",
          "1120: [package.extras]",
          "1121: docs = [\"Jinja2 (==2.11.3)\", \"MarkupSafe (==1.1.1)\", \"Pygments (==2.8.1)\", \"alabaster (==0.7.12)\", \"babel (==2.9.1)\", \"chardet (==4.0.0)\", \"commonmark (==0.8.1)\", \"docutils (==0.17.1)\", \"future (==0.18.2)\", \"idna (==2.10)\", \"imagesize (==1.2.0)\", \"mock (==1.0.1)\", \"packaging (==20.9)\", \"pyparsing (==2.4.7)\", \"pytz (==2021.1)\", \"readthedocs-sphinx-ext (==2.1.4)\", \"recommonmark (==0.5.0)\", \"requests (==2.25.1)\", \"six (==1.15.0)\", \"snowballstemmer (==2.1.0)\", \"sphinx (==1.8.5)\", \"sphinx-rtd-theme (==0.4.3)\", \"sphinxcontrib-serializinghtml (==1.1.4)\", \"sphinxcontrib-websupport (==1.2.4)\", \"urllib3 (==1.26.4)\"]",
          "1122: qa = [\"flake8 (==5.0.4)\", \"mypy (==0.971)\", \"types-setuptools (==67.2.0.1)\"]",
          "1123: testing = [\"Django (<3.1)\", \"attrs\", \"colorama\", \"docopt\", \"pytest (<7.0.0)\"]",
          "1125: [[package]]",
          "1126: name = \"jinja2\"",
          "1127: version = \"3.1.2\"",
          "1128: description = \"A very fast and expressive template engine.\"",
          "1129: optional = false",
          "1130: python-versions = \">=3.7\"",
          "1131: files = [",
          "1132:     {file = \"Jinja2-3.1.2-py3-none-any.whl\", hash = \"sha256:6088930bfe239f0e6710546ab9c19c9ef35e29792895fed6e6e31a023a182a61\"},",
          "1133:     {file = \"Jinja2-3.1.2.tar.gz\", hash = \"sha256:31351a702a408a9e7595a8fc6150fc3f43bb6bf7e319770cbc0db9df9437e852\"},",
          "1134: ]",
          "1136: [package.dependencies]",
          "1137: MarkupSafe = \">=2.0\"",
          "1139: [package.extras]",
          "1140: i18n = [\"Babel (>=2.7)\"]",
          "1142: [[package]]",
          "1143: name = \"jsonschema\"",
          "1144: version = \"4.17.3\"",
          "1145: description = \"An implementation of JSON Schema validation for Python\"",
          "1146: optional = false",
          "1147: python-versions = \">=3.7\"",
          "1148: files = [",
          "1149:     {file = \"jsonschema-4.17.3-py3-none-any.whl\", hash = \"sha256:a870ad254da1a8ca84b6a2905cac29d265f805acc57af304784962a2aa6508f6\"},",
          "1150:     {file = \"jsonschema-4.17.3.tar.gz\", hash = \"sha256:0f864437ab8b6076ba6707453ef8f98a6a0d512a80e93f8abdb676f737ecb60d\"},",
          "1151: ]",
          "1153: [package.dependencies]",
          "1154: attrs = \">=17.4.0\"",
          "1155: pyrsistent = \">=0.14.0,<0.17.0 || >0.17.0,<0.17.1 || >0.17.1,<0.17.2 || >0.17.2\"",
          "1157: [package.extras]",
          "1158: format = [\"fqdn\", \"idna\", \"isoduration\", \"jsonpointer (>1.13)\", \"rfc3339-validator\", \"rfc3987\", \"uri-template\", \"webcolors (>=1.11)\"]",
          "1159: format-nongpl = [\"fqdn\", \"idna\", \"isoduration\", \"jsonpointer (>1.13)\", \"rfc3339-validator\", \"rfc3986-validator (>0.1.0)\", \"uri-template\", \"webcolors (>=1.11)\"]",
          "1161: [[package]]",
          "1162: name = \"kaitaistruct\"",
          "1163: version = \"0.10\"",
          "1164: description = \"Kaitai Struct declarative parser generator for binary data: runtime library for Python\"",
          "1165: optional = false",
          "1166: python-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7\"",
          "1167: files = [",
          "1168:     {file = \"kaitaistruct-0.10-py2.py3-none-any.whl\", hash = \"sha256:a97350919adbf37fda881f75e9365e2fb88d04832b7a4e57106ec70119efb235\"},",
          "1169:     {file = \"kaitaistruct-0.10.tar.gz\", hash = \"sha256:a044dee29173d6afbacf27bcac39daf89b654dd418cfa009ab82d9178a9ae52a\"},",
          "1170: ]",
          "1172: [[package]]",
          "1173: name = \"kiwisolver\"",
          "1174: version = \"1.4.5\"",
          "1175: description = \"A fast implementation of the Cassowary constraint solver\"",
          "1176: optional = false",
          "1177: python-versions = \">=3.7\"",
          "1178: files = [",
          "1179:     {file = \"kiwisolver-1.4.5-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:05703cf211d585109fcd72207a31bb170a0f22144d68298dc5e61b3c946518af\"},",
          "1180:     {file = \"kiwisolver-1.4.5-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:146d14bebb7f1dc4d5fbf74f8a6cb15ac42baadee8912eb84ac0b3b2a3dc6ac3\"},",
          "1181:     {file = \"kiwisolver-1.4.5-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:6ef7afcd2d281494c0a9101d5c571970708ad911d028137cd558f02b851c08b4\"},",
          "1182:     {file = \"kiwisolver-1.4.5-cp310-cp310-manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:9eaa8b117dc8337728e834b9c6e2611f10c79e38f65157c4c38e9400286f5cb1\"},",
          "1183:     {file = \"kiwisolver-1.4.5-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:ec20916e7b4cbfb1f12380e46486ec4bcbaa91a9c448b97023fde0d5bbf9e4ff\"},",
          "1184:     {file = \"kiwisolver-1.4.5-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:39b42c68602539407884cf70d6a480a469b93b81b7701378ba5e2328660c847a\"},",
          "1185:     {file = \"kiwisolver-1.4.5-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:aa12042de0171fad672b6c59df69106d20d5596e4f87b5e8f76df757a7c399aa\"},",
          "1186:     {file = \"kiwisolver-1.4.5-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:2a40773c71d7ccdd3798f6489aaac9eee213d566850a9533f8d26332d626b82c\"},",
          "1187:     {file = \"kiwisolver-1.4.5-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:19df6e621f6d8b4b9c4d45f40a66839294ff2bb235e64d2178f7522d9170ac5b\"},",
          "1188:     {file = \"kiwisolver-1.4.5-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:83d78376d0d4fd884e2c114d0621624b73d2aba4e2788182d286309ebdeed770\"},",
          "1189:     {file = \"kiwisolver-1.4.5-cp310-cp310-musllinux_1_1_ppc64le.whl\", hash = \"sha256:e391b1f0a8a5a10ab3b9bb6afcfd74f2175f24f8975fb87ecae700d1503cdee0\"},",
          "1190:     {file = \"kiwisolver-1.4.5-cp310-cp310-musllinux_1_1_s390x.whl\", hash = \"sha256:852542f9481f4a62dbb5dd99e8ab7aedfeb8fb6342349a181d4036877410f525\"},",
          "1191:     {file = \"kiwisolver-1.4.5-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:59edc41b24031bc25108e210c0def6f6c2191210492a972d585a06ff246bb79b\"},",
          "1192:     {file = \"kiwisolver-1.4.5-cp310-cp310-win32.whl\", hash = \"sha256:a6aa6315319a052b4ee378aa171959c898a6183f15c1e541821c5c59beaa0238\"},",
          "1193:     {file = \"kiwisolver-1.4.5-cp310-cp310-win_amd64.whl\", hash = \"sha256:d0ef46024e6a3d79c01ff13801cb19d0cad7fd859b15037aec74315540acc276\"},",
          "1194:     {file = \"kiwisolver-1.4.5-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:11863aa14a51fd6ec28688d76f1735f8f69ab1fabf388851a595d0721af042f5\"},",
          "1195:     {file = \"kiwisolver-1.4.5-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:8ab3919a9997ab7ef2fbbed0cc99bb28d3c13e6d4b1ad36e97e482558a91be90\"},",
          "1196:     {file = \"kiwisolver-1.4.5-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:fcc700eadbbccbf6bc1bcb9dbe0786b4b1cb91ca0dcda336eef5c2beed37b797\"},",
          "1197:     {file = \"kiwisolver-1.4.5-cp311-cp311-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:dfdd7c0b105af050eb3d64997809dc21da247cf44e63dc73ff0fd20b96be55a9\"},",
          "1198:     {file = \"kiwisolver-1.4.5-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:76c6a5964640638cdeaa0c359382e5703e9293030fe730018ca06bc2010c4437\"},",
          "1199:     {file = \"kiwisolver-1.4.5-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:bbea0db94288e29afcc4c28afbf3a7ccaf2d7e027489c449cf7e8f83c6346eb9\"},",
          "1200:     {file = \"kiwisolver-1.4.5-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:ceec1a6bc6cab1d6ff5d06592a91a692f90ec7505d6463a88a52cc0eb58545da\"},",
          "1201:     {file = \"kiwisolver-1.4.5-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:040c1aebeda72197ef477a906782b5ab0d387642e93bda547336b8957c61022e\"},",
          "1202:     {file = \"kiwisolver-1.4.5-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:f91de7223d4c7b793867797bacd1ee53bfe7359bd70d27b7b58a04efbb9436c8\"},",
          "1203:     {file = \"kiwisolver-1.4.5-cp311-cp311-musllinux_1_1_i686.whl\", hash = \"sha256:faae4860798c31530dd184046a900e652c95513796ef51a12bc086710c2eec4d\"},",
          "1204:     {file = \"kiwisolver-1.4.5-cp311-cp311-musllinux_1_1_ppc64le.whl\", hash = \"sha256:b0157420efcb803e71d1b28e2c287518b8808b7cf1ab8af36718fd0a2c453eb0\"},",
          "1205:     {file = \"kiwisolver-1.4.5-cp311-cp311-musllinux_1_1_s390x.whl\", hash = \"sha256:06f54715b7737c2fecdbf140d1afb11a33d59508a47bf11bb38ecf21dc9ab79f\"},",
          "1206:     {file = \"kiwisolver-1.4.5-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:fdb7adb641a0d13bdcd4ef48e062363d8a9ad4a182ac7647ec88f695e719ae9f\"},",
          "1207:     {file = \"kiwisolver-1.4.5-cp311-cp311-win32.whl\", hash = \"sha256:bb86433b1cfe686da83ce32a9d3a8dd308e85c76b60896d58f082136f10bffac\"},",
          "1208:     {file = \"kiwisolver-1.4.5-cp311-cp311-win_amd64.whl\", hash = \"sha256:6c08e1312a9cf1074d17b17728d3dfce2a5125b2d791527f33ffbe805200a355\"},",
          "1209:     {file = \"kiwisolver-1.4.5-cp312-cp312-macosx_10_9_universal2.whl\", hash = \"sha256:32d5cf40c4f7c7b3ca500f8985eb3fb3a7dfc023215e876f207956b5ea26632a\"},",
          "1210:     {file = \"kiwisolver-1.4.5-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:f846c260f483d1fd217fe5ed7c173fb109efa6b1fc8381c8b7552c5781756192\"},",
          "1211:     {file = \"kiwisolver-1.4.5-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:5ff5cf3571589b6d13bfbfd6bcd7a3f659e42f96b5fd1c4830c4cf21d4f5ef45\"},",
          "1212:     {file = \"kiwisolver-1.4.5-cp312-cp312-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:7269d9e5f1084a653d575c7ec012ff57f0c042258bf5db0954bf551c158466e7\"},",
          "1213:     {file = \"kiwisolver-1.4.5-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:da802a19d6e15dffe4b0c24b38b3af68e6c1a68e6e1d8f30148c83864f3881db\"},",
          "1214:     {file = \"kiwisolver-1.4.5-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:3aba7311af82e335dd1e36ffff68aaca609ca6290c2cb6d821a39aa075d8e3ff\"},",
          "1215:     {file = \"kiwisolver-1.4.5-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:763773d53f07244148ccac5b084da5adb90bfaee39c197554f01b286cf869228\"},",
          "1216:     {file = \"kiwisolver-1.4.5-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2270953c0d8cdab5d422bee7d2007f043473f9d2999631c86a223c9db56cbd16\"},",
          "1217:     {file = \"kiwisolver-1.4.5-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:d099e745a512f7e3bbe7249ca835f4d357c586d78d79ae8f1dcd4d8adeb9bda9\"},",
          "1218:     {file = \"kiwisolver-1.4.5-cp312-cp312-musllinux_1_1_i686.whl\", hash = \"sha256:74db36e14a7d1ce0986fa104f7d5637aea5c82ca6326ed0ec5694280942d1162\"},",
          "1219:     {file = \"kiwisolver-1.4.5-cp312-cp312-musllinux_1_1_ppc64le.whl\", hash = \"sha256:7e5bab140c309cb3a6ce373a9e71eb7e4873c70c2dda01df6820474f9889d6d4\"},",
          "1220:     {file = \"kiwisolver-1.4.5-cp312-cp312-musllinux_1_1_s390x.whl\", hash = \"sha256:0f114aa76dc1b8f636d077979c0ac22e7cd8f3493abbab152f20eb8d3cda71f3\"},",
          "1221:     {file = \"kiwisolver-1.4.5-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:88a2df29d4724b9237fc0c6eaf2a1adae0cdc0b3e9f4d8e7dc54b16812d2d81a\"},",
          "1222:     {file = \"kiwisolver-1.4.5-cp312-cp312-win32.whl\", hash = \"sha256:72d40b33e834371fd330fb1472ca19d9b8327acb79a5821d4008391db8e29f20\"},",
          "1223:     {file = \"kiwisolver-1.4.5-cp312-cp312-win_amd64.whl\", hash = \"sha256:2c5674c4e74d939b9d91dda0fae10597ac7521768fec9e399c70a1f27e2ea2d9\"},",
          "1224:     {file = \"kiwisolver-1.4.5-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:3a2b053a0ab7a3960c98725cfb0bf5b48ba82f64ec95fe06f1d06c99b552e130\"},",
          "1225:     {file = \"kiwisolver-1.4.5-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:3cd32d6c13807e5c66a7cbb79f90b553642f296ae4518a60d8d76243b0ad2898\"},",
          "1226:     {file = \"kiwisolver-1.4.5-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:59ec7b7c7e1a61061850d53aaf8e93db63dce0c936db1fda2658b70e4a1be709\"},",
          "1227:     {file = \"kiwisolver-1.4.5-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:da4cfb373035def307905d05041c1d06d8936452fe89d464743ae7fb8371078b\"},",
          "1228:     {file = \"kiwisolver-1.4.5-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:2400873bccc260b6ae184b2b8a4fec0e4082d30648eadb7c3d9a13405d861e89\"},",
          "1229:     {file = \"kiwisolver-1.4.5-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl\", hash = \"sha256:1b04139c4236a0f3aff534479b58f6f849a8b351e1314826c2d230849ed48985\"},",
          "1230:     {file = \"kiwisolver-1.4.5-cp37-cp37m-musllinux_1_1_aarch64.whl\", hash = \"sha256:4e66e81a5779b65ac21764c295087de82235597a2293d18d943f8e9e32746265\"},",
          "1231:     {file = \"kiwisolver-1.4.5-cp37-cp37m-musllinux_1_1_i686.whl\", hash = \"sha256:7931d8f1f67c4be9ba1dd9c451fb0eeca1a25b89e4d3f89e828fe12a519b782a\"},",
          "1232:     {file = \"kiwisolver-1.4.5-cp37-cp37m-musllinux_1_1_ppc64le.whl\", hash = \"sha256:b3f7e75f3015df442238cca659f8baa5f42ce2a8582727981cbfa15fee0ee205\"},",
          "1233:     {file = \"kiwisolver-1.4.5-cp37-cp37m-musllinux_1_1_s390x.whl\", hash = \"sha256:bbf1d63eef84b2e8c89011b7f2235b1e0bf7dacc11cac9431fc6468e99ac77fb\"},",
          "1234:     {file = \"kiwisolver-1.4.5-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:4c380469bd3f970ef677bf2bcba2b6b0b4d5c75e7a020fb863ef75084efad66f\"},",
          "1235:     {file = \"kiwisolver-1.4.5-cp37-cp37m-win32.whl\", hash = \"sha256:9408acf3270c4b6baad483865191e3e582b638b1654a007c62e3efe96f09a9a3\"},",
          "1236:     {file = \"kiwisolver-1.4.5-cp37-cp37m-win_amd64.whl\", hash = \"sha256:5b94529f9b2591b7af5f3e0e730a4e0a41ea174af35a4fd067775f9bdfeee01a\"},",
          "1237:     {file = \"kiwisolver-1.4.5-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:11c7de8f692fc99816e8ac50d1d1aef4f75126eefc33ac79aac02c099fd3db71\"},",
          "1238:     {file = \"kiwisolver-1.4.5-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:53abb58632235cd154176ced1ae8f0d29a6657aa1aa9decf50b899b755bc2b93\"},",
          "1239:     {file = \"kiwisolver-1.4.5-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:88b9f257ca61b838b6f8094a62418421f87ac2a1069f7e896c36a7d86b5d4c29\"},",
          "1240:     {file = \"kiwisolver-1.4.5-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:3195782b26fc03aa9c6913d5bad5aeb864bdc372924c093b0f1cebad603dd712\"},",
          "1241:     {file = \"kiwisolver-1.4.5-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:fc579bf0f502e54926519451b920e875f433aceb4624a3646b3252b5caa9e0b6\"},",
          "1242:     {file = \"kiwisolver-1.4.5-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:5a580c91d686376f0f7c295357595c5a026e6cbc3d77b7c36e290201e7c11ecb\"},",
          "1243:     {file = \"kiwisolver-1.4.5-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:cfe6ab8da05c01ba6fbea630377b5da2cd9bcbc6338510116b01c1bc939a2c18\"},",
          "1244:     {file = \"kiwisolver-1.4.5-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl\", hash = \"sha256:d2e5a98f0ec99beb3c10e13b387f8db39106d53993f498b295f0c914328b1333\"},",
          "1245:     {file = \"kiwisolver-1.4.5-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:a51a263952b1429e429ff236d2f5a21c5125437861baeed77f5e1cc2d2c7c6da\"},",
          "1246:     {file = \"kiwisolver-1.4.5-cp38-cp38-musllinux_1_1_i686.whl\", hash = \"sha256:3edd2fa14e68c9be82c5b16689e8d63d89fe927e56debd6e1dbce7a26a17f81b\"},",
          "1247:     {file = \"kiwisolver-1.4.5-cp38-cp38-musllinux_1_1_ppc64le.whl\", hash = \"sha256:74d1b44c6cfc897df648cc9fdaa09bc3e7679926e6f96df05775d4fb3946571c\"},",
          "1248:     {file = \"kiwisolver-1.4.5-cp38-cp38-musllinux_1_1_s390x.whl\", hash = \"sha256:76d9289ed3f7501012e05abb8358bbb129149dbd173f1f57a1bf1c22d19ab7cc\"},",
          "1249:     {file = \"kiwisolver-1.4.5-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:92dea1ffe3714fa8eb6a314d2b3c773208d865a0e0d35e713ec54eea08a66250\"},",
          "1250:     {file = \"kiwisolver-1.4.5-cp38-cp38-win32.whl\", hash = \"sha256:5c90ae8c8d32e472be041e76f9d2f2dbff4d0b0be8bd4041770eddb18cf49a4e\"},",
          "1251:     {file = \"kiwisolver-1.4.5-cp38-cp38-win_amd64.whl\", hash = \"sha256:c7940c1dc63eb37a67721b10d703247552416f719c4188c54e04334321351ced\"},",
          "1252:     {file = \"kiwisolver-1.4.5-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:9407b6a5f0d675e8a827ad8742e1d6b49d9c1a1da5d952a67d50ef5f4170b18d\"},",
          "1253:     {file = \"kiwisolver-1.4.5-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:15568384086b6df3c65353820a4473575dbad192e35010f622c6ce3eebd57af9\"},",
          "1254:     {file = \"kiwisolver-1.4.5-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:0dc9db8e79f0036e8173c466d21ef18e1befc02de8bf8aa8dc0813a6dc8a7046\"},",
          "1255:     {file = \"kiwisolver-1.4.5-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:cdc8a402aaee9a798b50d8b827d7ecf75edc5fb35ea0f91f213ff927c15f4ff0\"},",
          "1256:     {file = \"kiwisolver-1.4.5-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:6c3bd3cde54cafb87d74d8db50b909705c62b17c2099b8f2e25b461882e544ff\"},",
          "1257:     {file = \"kiwisolver-1.4.5-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:955e8513d07a283056b1396e9a57ceddbd272d9252c14f154d450d227606eb54\"},",
          "1258:     {file = \"kiwisolver-1.4.5-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:346f5343b9e3f00b8db8ba359350eb124b98c99efd0b408728ac6ebf38173958\"},",
          "1259:     {file = \"kiwisolver-1.4.5-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:b9098e0049e88c6a24ff64545cdfc50807818ba6c1b739cae221bbbcbc58aad3\"},",
          "1260:     {file = \"kiwisolver-1.4.5-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:00bd361b903dc4bbf4eb165f24d1acbee754fce22ded24c3d56eec268658a5cf\"},",
          "1261:     {file = \"kiwisolver-1.4.5-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:7b8b454bac16428b22560d0a1cf0a09875339cab69df61d7805bf48919415901\"},",
          "1262:     {file = \"kiwisolver-1.4.5-cp39-cp39-musllinux_1_1_ppc64le.whl\", hash = \"sha256:f1d072c2eb0ad60d4c183f3fb44ac6f73fb7a8f16a2694a91f988275cbf352f9\"},",
          "1263:     {file = \"kiwisolver-1.4.5-cp39-cp39-musllinux_1_1_s390x.whl\", hash = \"sha256:31a82d498054cac9f6d0b53d02bb85811185bcb477d4b60144f915f3b3126342\"},",
          "1264:     {file = \"kiwisolver-1.4.5-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:6512cb89e334e4700febbffaaa52761b65b4f5a3cf33f960213d5656cea36a77\"},",
          "1265:     {file = \"kiwisolver-1.4.5-cp39-cp39-win32.whl\", hash = \"sha256:9db8ea4c388fdb0f780fe91346fd438657ea602d58348753d9fb265ce1bca67f\"},",
          "1266:     {file = \"kiwisolver-1.4.5-cp39-cp39-win_amd64.whl\", hash = \"sha256:59415f46a37f7f2efeec758353dd2eae1b07640d8ca0f0c42548ec4125492635\"},",
          "1267:     {file = \"kiwisolver-1.4.5-pp37-pypy37_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:5c7b3b3a728dc6faf3fc372ef24f21d1e3cee2ac3e9596691d746e5a536de920\"},",
          "1268:     {file = \"kiwisolver-1.4.5-pp37-pypy37_pp73-manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:620ced262a86244e2be10a676b646f29c34537d0d9cc8eb26c08f53d98013390\"},",
          "1269:     {file = \"kiwisolver-1.4.5-pp37-pypy37_pp73-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:378a214a1e3bbf5ac4a8708304318b4f890da88c9e6a07699c4ae7174c09a68d\"},",
          "1270:     {file = \"kiwisolver-1.4.5-pp37-pypy37_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:aaf7be1207676ac608a50cd08f102f6742dbfc70e8d60c4db1c6897f62f71523\"},",
          "1271:     {file = \"kiwisolver-1.4.5-pp37-pypy37_pp73-win_amd64.whl\", hash = \"sha256:ba55dce0a9b8ff59495ddd050a0225d58bd0983d09f87cfe2b6aec4f2c1234e4\"},",
          "1272:     {file = \"kiwisolver-1.4.5-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:fd32ea360bcbb92d28933fc05ed09bffcb1704ba3fc7942e81db0fd4f81a7892\"},",
          "1273:     {file = \"kiwisolver-1.4.5-pp38-pypy38_pp73-manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:5e7139af55d1688f8b960ee9ad5adafc4ac17c1c473fe07133ac092310d76544\"},",
          "1274:     {file = \"kiwisolver-1.4.5-pp38-pypy38_pp73-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:dced8146011d2bc2e883f9bd68618b8247387f4bbec46d7392b3c3b032640126\"},",
          "1275:     {file = \"kiwisolver-1.4.5-pp38-pypy38_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c9bf3325c47b11b2e51bca0824ea217c7cd84491d8ac4eefd1e409705ef092bd\"},",
          "1276:     {file = \"kiwisolver-1.4.5-pp38-pypy38_pp73-win_amd64.whl\", hash = \"sha256:5794cf59533bc3f1b1c821f7206a3617999db9fbefc345360aafe2e067514929\"},",
          "1277:     {file = \"kiwisolver-1.4.5-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:e368f200bbc2e4f905b8e71eb38b3c04333bddaa6a2464a6355487b02bb7fb09\"},",
          "1278:     {file = \"kiwisolver-1.4.5-pp39-pypy39_pp73-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:e5d706eba36b4c4d5bc6c6377bb6568098765e990cfc21ee16d13963fab7b3e7\"},",
          "1279:     {file = \"kiwisolver-1.4.5-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:85267bd1aa8880a9c88a8cb71e18d3d64d2751a790e6ca6c27b8ccc724bcd5ad\"},",
          "1280:     {file = \"kiwisolver-1.4.5-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:210ef2c3a1f03272649aff1ef992df2e724748918c4bc2d5a90352849eb40bea\"},",
          "1281:     {file = \"kiwisolver-1.4.5-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:11d011a7574eb3b82bcc9c1a1d35c1d7075677fdd15de527d91b46bd35e935ee\"},",
          "1282:     {file = \"kiwisolver-1.4.5.tar.gz\", hash = \"sha256:e57e563a57fb22a142da34f38acc2fc1a5c864bc29ca1517a88abc963e60d6ec\"},",
          "1283: ]",
          "1285: [[package]]",
          "1286: name = \"ldap3\"",
          "1287: version = \"2.9.1\"",
          "1288: description = \"A strictly RFC 4510 conforming LDAP V3 pure Python client library\"",
          "1289: optional = false",
          "1290: python-versions = \"*\"",
          "1291: files = [",
          "1292:     {file = \"ldap3-2.9.1-py2.py3-none-any.whl\", hash = \"sha256:5869596fc4948797020d3f03b7939da938778a0f9e2009f7a072ccf92b8e8d70\"},",
          "1293:     {file = \"ldap3-2.9.1.tar.gz\", hash = \"sha256:f3e7fc4718e3f09dda568b57100095e0ce58633bcabbed8667ce3f8fbaa4229f\"},",
          "1294: ]",
          "1296: [package.dependencies]",
          "1297: pyasn1 = \">=0.4.6\"",
          "1299: [[package]]",
          "1300: name = \"libsast\"",
          "1301: version = \"1.5.2\"",
          "1302: description = \"A generic SAST core built on top of semgrep and regex\"",
          "1303: optional = false",
          "1304: python-versions = \"*\"",
          "1305: files = [",
          "1306:     {file = \"libsast-1.5.2.tar.gz\", hash = \"sha256:38ea83c816d491d911c7db917dc697ff87e631e679cf9e84f9d41e330816af5d\"},",
          "1307: ]",
          "1309: [package.dependencies]",
          "1310: pyyaml = \">=6.0\"",
          "1311: requests = \">=2.27.1\"",
          "1312: semgrep = {version = \"0.104.0\", markers = \"platform_system != \\\"Windows\\\"\"}",
          "1314: [[package]]",
          "1315: name = \"lief\"",
          "1316: version = \"0.13.2\"",
          "1317: description = \"Library to instrument executable formats\"",
          "1318: optional = false",
          "1319: python-versions = \">=3.8\"",
          "1320: files = [",
          "1321:     {file = \"lief-0.13.2-cp310-cp310-macosx_10_14_x86_64.whl\", hash = \"sha256:0390cfaaf0e9aed46bebf26f00f34852768f76bc7f90abf7ceb384566200e5f5\"},",
          "1322:     {file = \"lief-0.13.2-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:5581bf0072c1e7a9ea2fb2e2252b8582016e8b298804b5461e552b402c9cd4e9\"},",
          "1323:     {file = \"lief-0.13.2-cp310-cp310-manylinux2014_aarch64.whl\", hash = \"sha256:dbbf2fb3d7807e815f345c77e287da162e081100f059ec03005995befc295d7f\"},",
          "1324:     {file = \"lief-0.13.2-cp310-cp310-manylinux_2_24_x86_64.whl\", hash = \"sha256:d344d37334c2b488dc02f04cb13c22cd61aa065eeb9bca7424588e0c8c23bdfb\"},",
          "1325:     {file = \"lief-0.13.2-cp310-cp310-win32.whl\", hash = \"sha256:bc041b28b94139843a33c014e355822a9276b35f3c5ae10d82da56bf572f8222\"},",
          "1326:     {file = \"lief-0.13.2-cp310-cp310-win_amd64.whl\", hash = \"sha256:01d4075bbc3541e9dd3ef008045fa1eb128294a0c5b0c1f69ce60d8948d248c7\"},",
          "1327:     {file = \"lief-0.13.2-cp311-cp311-macosx_10_14_x86_64.whl\", hash = \"sha256:6570dacebe107ad60c2ba0968d1a865d316009d43cc85af3719d3eeb0911abf3\"},",
          "1328:     {file = \"lief-0.13.2-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:7ce2e3f7c791efba327c2bb3499dbef81e682027109045a9bae696c62e2aeeb0\"},",
          "1329:     {file = \"lief-0.13.2-cp311-cp311-manylinux2014_aarch64.whl\", hash = \"sha256:11ab900e0644b6735ecdef2bbd04439b4866a527650fc054470c195d6cfe2917\"},",
          "1330:     {file = \"lief-0.13.2-cp311-cp311-manylinux_2_24_x86_64.whl\", hash = \"sha256:042ad2105a136b11a7494b9af8178468e8cb32b8fa2a0a55cb659a5605aeb069\"},",
          "1331:     {file = \"lief-0.13.2-cp311-cp311-win32.whl\", hash = \"sha256:1ce289b6ab3cf4be654270007e8a2c0d2e42116180418c29d3ce83762955de63\"},",
          "1332:     {file = \"lief-0.13.2-cp311-cp311-win_amd64.whl\", hash = \"sha256:eccb248ffb598e410fd2ef7c1f171a3cde57a40c9bb8c4fa15d8e7b90eb4eb2d\"},",
          "1333:     {file = \"lief-0.13.2-cp38-cp38-macosx_10_14_x86_64.whl\", hash = \"sha256:95731cadedd6ffc5fb48c147fcefe004624e436b75e8ee9fb2dbf2ae5f084342\"},",
          "1334:     {file = \"lief-0.13.2-cp38-cp38-manylinux2014_aarch64.whl\", hash = \"sha256:8da75df0ea472557fcc37a27ba583bad5a8f3a256c186600d00a6dd0a57f718a\"},",
          "1335:     {file = \"lief-0.13.2-cp38-cp38-manylinux_2_24_x86_64.whl\", hash = \"sha256:b99092f02c13f580c2d00b504af224b7e60e7c98a791e72ae8519f530b7687bb\"},",
          "1336:     {file = \"lief-0.13.2-cp38-cp38-win32.whl\", hash = \"sha256:03db0138e4dbbdfa8bba74de312b0cebb30f504e44f38a9c8918b84022da340b\"},",
          "1337:     {file = \"lief-0.13.2-cp38-cp38-win_amd64.whl\", hash = \"sha256:36c5bea3f8460dee3ebb75d35949f445638ec85d2871f31e293c47fb4a0a5af7\"},",
          "1338:     {file = \"lief-0.13.2-cp39-cp39-macosx_10_14_x86_64.whl\", hash = \"sha256:eca8ecbcae1ad851ed7cf1e22ec8accd74f2267fa7375194559fb917523d8a92\"},",
          "1339:     {file = \"lief-0.13.2-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:a8703cb5308b4828563badc6885ff07a3926ec3403d1caa3aa75f24fe9cbcf84\"},",
          "1340:     {file = \"lief-0.13.2-cp39-cp39-manylinux2014_aarch64.whl\", hash = \"sha256:c60f2f79e7d0d1f18dec7dcdb4d4f35e6b126ac29e2f2f056d28ec50599d868a\"},",
          "1341:     {file = \"lief-0.13.2-cp39-cp39-manylinux_2_24_x86_64.whl\", hash = \"sha256:e0f84a7443b7f1b02666fd16a9aa57f5d9027e60ba2885e0d76db8426d689707\"},",
          "1342:     {file = \"lief-0.13.2-cp39-cp39-win32.whl\", hash = \"sha256:3f8f251de874929d9c9e94a35891621ab8c059149f8a1c24e543fd9cf0c2a31c\"},",
          "1343:     {file = \"lief-0.13.2-cp39-cp39-win_amd64.whl\", hash = \"sha256:2bbe294385e629aa7206b2f39f0ca34e3948605a8db50b22091603053889a759\"},",
          "1344: ]",
          "1346: [[package]]",
          "1347: name = \"lxml\"",
          "1348: version = \"4.9.3\"",
          "1349: description = \"Powerful and Pythonic XML processing library combining libxml2/libxslt with the ElementTree API.\"",
          "1350: optional = false",
          "1351: python-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, != 3.4.*\"",
          "1352: files = [",
          "1353:     {file = \"lxml-4.9.3-cp27-cp27m-macosx_11_0_x86_64.whl\", hash = \"sha256:b0a545b46b526d418eb91754565ba5b63b1c0b12f9bd2f808c852d9b4b2f9b5c\"},",
          "1354:     {file = \"lxml-4.9.3-cp27-cp27m-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:075b731ddd9e7f68ad24c635374211376aa05a281673ede86cbe1d1b3455279d\"},",
          "1355:     {file = \"lxml-4.9.3-cp27-cp27m-manylinux_2_5_x86_64.manylinux1_x86_64.whl\", hash = \"sha256:1e224d5755dba2f4a9498e150c43792392ac9b5380aa1b845f98a1618c94eeef\"},",
          "1356:     {file = \"lxml-4.9.3-cp27-cp27m-win32.whl\", hash = \"sha256:2c74524e179f2ad6d2a4f7caf70e2d96639c0954c943ad601a9e146c76408ed7\"},",
          "1357:     {file = \"lxml-4.9.3-cp27-cp27m-win_amd64.whl\", hash = \"sha256:4f1026bc732b6a7f96369f7bfe1a4f2290fb34dce00d8644bc3036fb351a4ca1\"},",
          "1358:     {file = \"lxml-4.9.3-cp27-cp27mu-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:c0781a98ff5e6586926293e59480b64ddd46282953203c76ae15dbbbf302e8bb\"},",
          "1359:     {file = \"lxml-4.9.3-cp27-cp27mu-manylinux_2_5_x86_64.manylinux1_x86_64.whl\", hash = \"sha256:cef2502e7e8a96fe5ad686d60b49e1ab03e438bd9123987994528febd569868e\"},",
          "1360:     {file = \"lxml-4.9.3-cp310-cp310-macosx_11_0_x86_64.whl\", hash = \"sha256:b86164d2cff4d3aaa1f04a14685cbc072efd0b4f99ca5708b2ad1b9b5988a991\"},",
          "1361:     {file = \"lxml-4.9.3-cp310-cp310-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_24_i686.whl\", hash = \"sha256:42871176e7896d5d45138f6d28751053c711ed4d48d8e30b498da155af39aebd\"},",
          "1362:     {file = \"lxml-4.9.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl\", hash = \"sha256:ae8b9c6deb1e634ba4f1930eb67ef6e6bf6a44b6eb5ad605642b2d6d5ed9ce3c\"},",
          "1363:     {file = \"lxml-4.9.3-cp310-cp310-manylinux_2_28_aarch64.whl\", hash = \"sha256:411007c0d88188d9f621b11d252cce90c4a2d1a49db6c068e3c16422f306eab8\"},",
          "1364:     {file = \"lxml-4.9.3-cp310-cp310-manylinux_2_28_x86_64.whl\", hash = \"sha256:cd47b4a0d41d2afa3e58e5bf1f62069255aa2fd6ff5ee41604418ca925911d76\"},",
          "1365:     {file = \"lxml-4.9.3-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:0e2cb47860da1f7e9a5256254b74ae331687b9672dfa780eed355c4c9c3dbd23\"},",
          "1366:     {file = \"lxml-4.9.3-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:1247694b26342a7bf47c02e513d32225ededd18045264d40758abeb3c838a51f\"},",
          "1367:     {file = \"lxml-4.9.3-cp310-cp310-win32.whl\", hash = \"sha256:cdb650fc86227eba20de1a29d4b2c1bfe139dc75a0669270033cb2ea3d391b85\"},",
          "1368:     {file = \"lxml-4.9.3-cp310-cp310-win_amd64.whl\", hash = \"sha256:97047f0d25cd4bcae81f9ec9dc290ca3e15927c192df17331b53bebe0e3ff96d\"},",
          "1369:     {file = \"lxml-4.9.3-cp311-cp311-macosx_11_0_universal2.whl\", hash = \"sha256:1f447ea5429b54f9582d4b955f5f1985f278ce5cf169f72eea8afd9502973dd5\"},",
          "1370:     {file = \"lxml-4.9.3-cp311-cp311-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_24_i686.whl\", hash = \"sha256:57d6ba0ca2b0c462f339640d22882acc711de224d769edf29962b09f77129cbf\"},",
          "1371:     {file = \"lxml-4.9.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl\", hash = \"sha256:9767e79108424fb6c3edf8f81e6730666a50feb01a328f4a016464a5893f835a\"},",
          "1372:     {file = \"lxml-4.9.3-cp311-cp311-manylinux_2_28_aarch64.whl\", hash = \"sha256:71c52db65e4b56b8ddc5bb89fb2e66c558ed9d1a74a45ceb7dcb20c191c3df2f\"},",
          "1373:     {file = \"lxml-4.9.3-cp311-cp311-manylinux_2_28_x86_64.whl\", hash = \"sha256:d73d8ecf8ecf10a3bd007f2192725a34bd62898e8da27eb9d32a58084f93962b\"},",
          "1374:     {file = \"lxml-4.9.3-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:0a3d3487f07c1d7f150894c238299934a2a074ef590b583103a45002035be120\"},",
          "1375:     {file = \"lxml-4.9.3-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:9e28c51fa0ce5674be9f560c6761c1b441631901993f76700b1b30ca6c8378d6\"},",
          "1376:     {file = \"lxml-4.9.3-cp311-cp311-win32.whl\", hash = \"sha256:0bfd0767c5c1de2551a120673b72e5d4b628737cb05414f03c3277bf9bed3305\"},",
          "1377:     {file = \"lxml-4.9.3-cp311-cp311-win_amd64.whl\", hash = \"sha256:25f32acefac14ef7bd53e4218fe93b804ef6f6b92ffdb4322bb6d49d94cad2bc\"},",
          "1378:     {file = \"lxml-4.9.3-cp312-cp312-macosx_11_0_universal2.whl\", hash = \"sha256:d3ff32724f98fbbbfa9f49d82852b159e9784d6094983d9a8b7f2ddaebb063d4\"},",
          "1379:     {file = \"lxml-4.9.3-cp312-cp312-manylinux_2_28_aarch64.whl\", hash = \"sha256:48d6ed886b343d11493129e019da91d4039826794a3e3027321c56d9e71505be\"},",
          "1380:     {file = \"lxml-4.9.3-cp312-cp312-manylinux_2_28_x86_64.whl\", hash = \"sha256:9a92d3faef50658dd2c5470af249985782bf754c4e18e15afb67d3ab06233f13\"},",
          "1381:     {file = \"lxml-4.9.3-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:b4e4bc18382088514ebde9328da057775055940a1f2e18f6ad2d78aa0f3ec5b9\"},",
          "1382:     {file = \"lxml-4.9.3-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:fc9b106a1bf918db68619fdcd6d5ad4f972fdd19c01d19bdb6bf63f3589a9ec5\"},",
          "1383:     {file = \"lxml-4.9.3-cp312-cp312-win_amd64.whl\", hash = \"sha256:d37017287a7adb6ab77e1c5bee9bcf9660f90ff445042b790402a654d2ad81d8\"},",
          "1384:     {file = \"lxml-4.9.3-cp35-cp35m-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:56dc1f1ebccc656d1b3ed288f11e27172a01503fc016bcabdcbc0978b19352b7\"},",
          "1385:     {file = \"lxml-4.9.3-cp35-cp35m-manylinux_2_5_x86_64.manylinux1_x86_64.whl\", hash = \"sha256:578695735c5a3f51569810dfebd05dd6f888147a34f0f98d4bb27e92b76e05c2\"},",
          "1386:     {file = \"lxml-4.9.3-cp35-cp35m-win32.whl\", hash = \"sha256:704f61ba8c1283c71b16135caf697557f5ecf3e74d9e453233e4771d68a1f42d\"},",
          "1387:     {file = \"lxml-4.9.3-cp35-cp35m-win_amd64.whl\", hash = \"sha256:c41bfca0bd3532d53d16fd34d20806d5c2b1ace22a2f2e4c0008570bf2c58833\"},",
          "1388:     {file = \"lxml-4.9.3-cp36-cp36m-macosx_11_0_x86_64.whl\", hash = \"sha256:64f479d719dc9f4c813ad9bb6b28f8390360660b73b2e4beb4cb0ae7104f1c12\"},",
          "1389:     {file = \"lxml-4.9.3-cp36-cp36m-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_24_i686.whl\", hash = \"sha256:dd708cf4ee4408cf46a48b108fb9427bfa00b9b85812a9262b5c668af2533ea5\"},",
          "1390:     {file = \"lxml-4.9.3-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5c31c7462abdf8f2ac0577d9f05279727e698f97ecbb02f17939ea99ae8daa98\"},",
          "1391:     {file = \"lxml-4.9.3-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl\", hash = \"sha256:e3cd95e10c2610c360154afdc2f1480aea394f4a4f1ea0a5eacce49640c9b190\"},",
          "1392:     {file = \"lxml-4.9.3-cp36-cp36m-manylinux_2_28_x86_64.whl\", hash = \"sha256:4930be26af26ac545c3dffb662521d4e6268352866956672231887d18f0eaab2\"},",
          "1393:     {file = \"lxml-4.9.3-cp36-cp36m-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:4aec80cde9197340bc353d2768e2a75f5f60bacda2bab72ab1dc499589b3878c\"},",
          "1394:     {file = \"lxml-4.9.3-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.whl\", hash = \"sha256:14e019fd83b831b2e61baed40cab76222139926b1fb5ed0e79225bc0cae14584\"},",
          "1395:     {file = \"lxml-4.9.3-cp36-cp36m-musllinux_1_1_aarch64.whl\", hash = \"sha256:0c0850c8b02c298d3c7006b23e98249515ac57430e16a166873fc47a5d549287\"},",
          "1396:     {file = \"lxml-4.9.3-cp36-cp36m-musllinux_1_1_x86_64.whl\", hash = \"sha256:aca086dc5f9ef98c512bac8efea4483eb84abbf926eaeedf7b91479feb092458\"},",
          "1397:     {file = \"lxml-4.9.3-cp36-cp36m-win32.whl\", hash = \"sha256:50baa9c1c47efcaef189f31e3d00d697c6d4afda5c3cde0302d063492ff9b477\"},",
          "1398:     {file = \"lxml-4.9.3-cp36-cp36m-win_amd64.whl\", hash = \"sha256:bef4e656f7d98aaa3486d2627e7d2df1157d7e88e7efd43a65aa5dd4714916cf\"},",
          "1399:     {file = \"lxml-4.9.3-cp37-cp37m-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_24_i686.whl\", hash = \"sha256:46f409a2d60f634fe550f7133ed30ad5321ae2e6630f13657fb9479506b00601\"},",
          "1400:     {file = \"lxml-4.9.3-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_24_aarch64.whl\", hash = \"sha256:4c28a9144688aef80d6ea666c809b4b0e50010a2aca784c97f5e6bf143d9f129\"},",
          "1401:     {file = \"lxml-4.9.3-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl\", hash = \"sha256:141f1d1a9b663c679dc524af3ea1773e618907e96075262726c7612c02b149a4\"},",
          "1402:     {file = \"lxml-4.9.3-cp37-cp37m-manylinux_2_28_x86_64.whl\", hash = \"sha256:53ace1c1fd5a74ef662f844a0413446c0629d151055340e9893da958a374f70d\"},",
          "1403:     {file = \"lxml-4.9.3-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:17a753023436a18e27dd7769e798ce302963c236bc4114ceee5b25c18c52c693\"},",
          "1404:     {file = \"lxml-4.9.3-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl\", hash = \"sha256:7d298a1bd60c067ea75d9f684f5f3992c9d6766fadbc0bcedd39750bf344c2f4\"},",
          "1405:     {file = \"lxml-4.9.3-cp37-cp37m-musllinux_1_1_aarch64.whl\", hash = \"sha256:081d32421db5df44c41b7f08a334a090a545c54ba977e47fd7cc2deece78809a\"},",
          "1406:     {file = \"lxml-4.9.3-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:23eed6d7b1a3336ad92d8e39d4bfe09073c31bfe502f20ca5116b2a334f8ec02\"},",
          "1407:     {file = \"lxml-4.9.3-cp37-cp37m-win32.whl\", hash = \"sha256:1509dd12b773c02acd154582088820893109f6ca27ef7291b003d0e81666109f\"},",
          "1408:     {file = \"lxml-4.9.3-cp37-cp37m-win_amd64.whl\", hash = \"sha256:120fa9349a24c7043854c53cae8cec227e1f79195a7493e09e0c12e29f918e52\"},",
          "1409:     {file = \"lxml-4.9.3-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_24_i686.whl\", hash = \"sha256:4d2d1edbca80b510443f51afd8496be95529db04a509bc8faee49c7b0fb6d2cc\"},",
          "1410:     {file = \"lxml-4.9.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_24_aarch64.whl\", hash = \"sha256:8d7e43bd40f65f7d97ad8ef5c9b1778943d02f04febef12def25f7583d19baac\"},",
          "1411:     {file = \"lxml-4.9.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl\", hash = \"sha256:71d66ee82e7417828af6ecd7db817913cb0cf9d4e61aa0ac1fde0583d84358db\"},",
          "1412:     {file = \"lxml-4.9.3-cp38-cp38-manylinux_2_28_x86_64.whl\", hash = \"sha256:6fc3c450eaa0b56f815c7b62f2b7fba7266c4779adcf1cece9e6deb1de7305ce\"},",
          "1413:     {file = \"lxml-4.9.3-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:65299ea57d82fb91c7f019300d24050c4ddeb7c5a190e076b5f48a2b43d19c42\"},",
          "1414:     {file = \"lxml-4.9.3-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl\", hash = \"sha256:eadfbbbfb41b44034a4c757fd5d70baccd43296fb894dba0295606a7cf3124aa\"},",
          "1415:     {file = \"lxml-4.9.3-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:3e9bdd30efde2b9ccfa9cb5768ba04fe71b018a25ea093379c857c9dad262c40\"},",
          "1416:     {file = \"lxml-4.9.3-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:fcdd00edfd0a3001e0181eab3e63bd5c74ad3e67152c84f93f13769a40e073a7\"},",
          "1417:     {file = \"lxml-4.9.3-cp38-cp38-win32.whl\", hash = \"sha256:57aba1bbdf450b726d58b2aea5fe47c7875f5afb2c4a23784ed78f19a0462574\"},",
          "1418:     {file = \"lxml-4.9.3-cp38-cp38-win_amd64.whl\", hash = \"sha256:92af161ecbdb2883c4593d5ed4815ea71b31fafd7fd05789b23100d081ecac96\"},",
          "1419:     {file = \"lxml-4.9.3-cp39-cp39-macosx_11_0_x86_64.whl\", hash = \"sha256:9bb6ad405121241e99a86efff22d3ef469024ce22875a7ae045896ad23ba2340\"},",
          "1420:     {file = \"lxml-4.9.3-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_24_i686.whl\", hash = \"sha256:8ed74706b26ad100433da4b9d807eae371efaa266ffc3e9191ea436087a9d6a7\"},",
          "1421:     {file = \"lxml-4.9.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl\", hash = \"sha256:fbf521479bcac1e25a663df882c46a641a9bff6b56dc8b0fafaebd2f66fb231b\"},",
          "1422:     {file = \"lxml-4.9.3-cp39-cp39-manylinux_2_28_aarch64.whl\", hash = \"sha256:303bf1edce6ced16bf67a18a1cf8339d0db79577eec5d9a6d4a80f0fb10aa2da\"},",
          "1423:     {file = \"lxml-4.9.3-cp39-cp39-manylinux_2_28_x86_64.whl\", hash = \"sha256:5515edd2a6d1a5a70bfcdee23b42ec33425e405c5b351478ab7dc9347228f96e\"},",
          "1424:     {file = \"lxml-4.9.3-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:690dafd0b187ed38583a648076865d8c229661ed20e48f2335d68e2cf7dc829d\"},",
          "1425:     {file = \"lxml-4.9.3-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.whl\", hash = \"sha256:b6420a005548ad52154c8ceab4a1290ff78d757f9e5cbc68f8c77089acd3c432\"},",
          "1426:     {file = \"lxml-4.9.3-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:bb3bb49c7a6ad9d981d734ef7c7193bc349ac338776a0360cc671eaee89bcf69\"},",
          "1427:     {file = \"lxml-4.9.3-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:d27be7405547d1f958b60837dc4c1007da90b8b23f54ba1f8b728c78fdb19d50\"},",
          "1428:     {file = \"lxml-4.9.3-cp39-cp39-win32.whl\", hash = \"sha256:8df133a2ea5e74eef5e8fc6f19b9e085f758768a16e9877a60aec455ed2609b2\"},",
          "1429:     {file = \"lxml-4.9.3-cp39-cp39-win_amd64.whl\", hash = \"sha256:4dd9a263e845a72eacb60d12401e37c616438ea2e5442885f65082c276dfb2b2\"},",
          "1430:     {file = \"lxml-4.9.3-pp310-pypy310_pp73-manylinux_2_28_x86_64.whl\", hash = \"sha256:6689a3d7fd13dc687e9102a27e98ef33730ac4fe37795d5036d18b4d527abd35\"},",
          "1431:     {file = \"lxml-4.9.3-pp37-pypy37_pp73-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_24_i686.whl\", hash = \"sha256:f6bdac493b949141b733c5345b6ba8f87a226029cbabc7e9e121a413e49441e0\"},",
          "1432:     {file = \"lxml-4.9.3-pp37-pypy37_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl\", hash = \"sha256:05186a0f1346ae12553d66df1cfce6f251589fea3ad3da4f3ef4e34b2d58c6a3\"},",
          "1433:     {file = \"lxml-4.9.3-pp37-pypy37_pp73-manylinux_2_28_x86_64.whl\", hash = \"sha256:c2006f5c8d28dee289f7020f721354362fa304acbaaf9745751ac4006650254b\"},",
          "1434:     {file = \"lxml-4.9.3-pp38-pypy38_pp73-macosx_11_0_x86_64.whl\", hash = \"sha256:5c245b783db29c4e4fbbbfc9c5a78be496c9fea25517f90606aa1f6b2b3d5f7b\"},",
          "1435:     {file = \"lxml-4.9.3-pp38-pypy38_pp73-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_24_i686.whl\", hash = \"sha256:4fb960a632a49f2f089d522f70496640fdf1218f1243889da3822e0a9f5f3ba7\"},",
          "1436:     {file = \"lxml-4.9.3-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl\", hash = \"sha256:50670615eaf97227d5dc60de2dc99fb134a7130d310d783314e7724bf163f75d\"},",
          "1437:     {file = \"lxml-4.9.3-pp38-pypy38_pp73-manylinux_2_28_x86_64.whl\", hash = \"sha256:9719fe17307a9e814580af1f5c6e05ca593b12fb7e44fe62450a5384dbf61b4b\"},",
          "1438:     {file = \"lxml-4.9.3-pp38-pypy38_pp73-win_amd64.whl\", hash = \"sha256:3331bece23c9ee066e0fb3f96c61322b9e0f54d775fccefff4c38ca488de283a\"},",
          "1439:     {file = \"lxml-4.9.3-pp39-pypy39_pp73-macosx_11_0_x86_64.whl\", hash = \"sha256:ed667f49b11360951e201453fc3967344d0d0263aa415e1619e85ae7fd17b4e0\"},",
          "1440:     {file = \"lxml-4.9.3-pp39-pypy39_pp73-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_24_i686.whl\", hash = \"sha256:8b77946fd508cbf0fccd8e400a7f71d4ac0e1595812e66025bac475a8e811694\"},",
          "1441:     {file = \"lxml-4.9.3-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl\", hash = \"sha256:e4da8ca0c0c0aea88fd46be8e44bd49716772358d648cce45fe387f7b92374a7\"},",
          "1442:     {file = \"lxml-4.9.3-pp39-pypy39_pp73-manylinux_2_28_x86_64.whl\", hash = \"sha256:fe4bda6bd4340caa6e5cf95e73f8fea5c4bfc55763dd42f1b50a94c1b4a2fbd4\"},",
          "1443:     {file = \"lxml-4.9.3-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:f3df3db1d336b9356dd3112eae5f5c2b8b377f3bc826848567f10bfddfee77e9\"},",
          "1444:     {file = \"lxml-4.9.3.tar.gz\", hash = \"sha256:48628bd53a426c9eb9bc066a923acaa0878d1e86129fd5359aee99285f4eed9c\"},",
          "1445: ]",
          "1447: [package.extras]",
          "1448: cssselect = [\"cssselect (>=0.7)\"]",
          "1449: html5 = [\"html5lib\"]",
          "1450: htmlsoup = [\"BeautifulSoup4\"]",
          "1451: source = [\"Cython (>=0.29.35)\"]",
          "1453: [[package]]",
          "1454: name = \"macholib\"",
          "1455: version = \"1.16.2\"",
          "1456: description = \"Mach-O header analysis and editing\"",
          "1457: optional = false",
          "1458: python-versions = \"*\"",
          "1459: files = [",
          "1460:     {file = \"macholib-1.16.2-py2.py3-none-any.whl\", hash = \"sha256:44c40f2cd7d6726af8fa6fe22549178d3a4dfecc35a9cd15ea916d9c83a688e0\"},",
          "1461:     {file = \"macholib-1.16.2.tar.gz\", hash = \"sha256:557bbfa1bb255c20e9abafe7ed6cd8046b48d9525db2f9b77d3122a63a2a8bf8\"},",
          "1462: ]",
          "1464: [package.dependencies]",
          "1465: altgraph = \">=0.17\"",
          "1467: [[package]]",
          "1468: name = \"markupsafe\"",
          "1469: version = \"2.0.1\"",
          "1470: description = \"Safely add untrusted strings to HTML/XML markup.\"",
          "1471: optional = false",
          "1472: python-versions = \">=3.6\"",
          "1473: files = [",
          "1474:     {file = \"MarkupSafe-2.0.1-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:d8446c54dc28c01e5a2dbac5a25f071f6653e6e40f3a8818e8b45d790fe6ef53\"},",
          "1475:     {file = \"MarkupSafe-2.0.1-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:36bc903cbb393720fad60fc28c10de6acf10dc6cc883f3e24ee4012371399a38\"},",
          "1476:     {file = \"MarkupSafe-2.0.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:2d7d807855b419fc2ed3e631034685db6079889a1f01d5d9dac950f764da3dad\"},",
          "1477:     {file = \"MarkupSafe-2.0.1-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:add36cb2dbb8b736611303cd3bfcee00afd96471b09cda130da3581cbdc56a6d\"},",
          "1478:     {file = \"MarkupSafe-2.0.1-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:168cd0a3642de83558a5153c8bd34f175a9a6e7f6dc6384b9655d2697312a646\"},",
          "1479:     {file = \"MarkupSafe-2.0.1-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:4dc8f9fb58f7364b63fd9f85013b780ef83c11857ae79f2feda41e270468dd9b\"},",
          "1480:     {file = \"MarkupSafe-2.0.1-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:20dca64a3ef2d6e4d5d615a3fd418ad3bde77a47ec8a23d984a12b5b4c74491a\"},",
          "1481:     {file = \"MarkupSafe-2.0.1-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:cdfba22ea2f0029c9261a4bd07e830a8da012291fbe44dc794e488b6c9bb353a\"},",
          "1482:     {file = \"MarkupSafe-2.0.1-cp310-cp310-win32.whl\", hash = \"sha256:99df47edb6bda1249d3e80fdabb1dab8c08ef3975f69aed437cb69d0a5de1e28\"},",
          "1483:     {file = \"MarkupSafe-2.0.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:e0f138900af21926a02425cf736db95be9f4af72ba1bb21453432a07f6082134\"},",
          "1484:     {file = \"MarkupSafe-2.0.1-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:f9081981fe268bd86831e5c75f7de206ef275defcb82bc70740ae6dc507aee51\"},",
          "1485:     {file = \"MarkupSafe-2.0.1-cp36-cp36m-manylinux1_i686.whl\", hash = \"sha256:0955295dd5eec6cb6cc2fe1698f4c6d84af2e92de33fbcac4111913cd100a6ff\"},",
          "1486:     {file = \"MarkupSafe-2.0.1-cp36-cp36m-manylinux1_x86_64.whl\", hash = \"sha256:0446679737af14f45767963a1a9ef7620189912317d095f2d9ffa183a4d25d2b\"},",
          "1487:     {file = \"MarkupSafe-2.0.1-cp36-cp36m-manylinux2010_i686.whl\", hash = \"sha256:f826e31d18b516f653fe296d967d700fddad5901ae07c622bb3705955e1faa94\"},",
          "1488:     {file = \"MarkupSafe-2.0.1-cp36-cp36m-manylinux2010_x86_64.whl\", hash = \"sha256:fa130dd50c57d53368c9d59395cb5526eda596d3ffe36666cd81a44d56e48872\"},",
          "1489:     {file = \"MarkupSafe-2.0.1-cp36-cp36m-manylinux2014_aarch64.whl\", hash = \"sha256:905fec760bd2fa1388bb5b489ee8ee5f7291d692638ea5f67982d968366bef9f\"},",
          "1490:     {file = \"MarkupSafe-2.0.1-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:bf5d821ffabf0ef3533c39c518f3357b171a1651c1ff6827325e4489b0e46c3c\"},",
          "1491:     {file = \"MarkupSafe-2.0.1-cp36-cp36m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:0d4b31cc67ab36e3392bbf3862cfbadac3db12bdd8b02a2731f509ed5b829724\"},",
          "1492:     {file = \"MarkupSafe-2.0.1-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:baa1a4e8f868845af802979fcdbf0bb11f94f1cb7ced4c4b8a351bb60d108145\"},",
          "1493:     {file = \"MarkupSafe-2.0.1-cp36-cp36m-musllinux_1_1_aarch64.whl\", hash = \"sha256:deb993cacb280823246a026e3b2d81c493c53de6acfd5e6bfe31ab3402bb37dd\"},",
          "1494:     {file = \"MarkupSafe-2.0.1-cp36-cp36m-musllinux_1_1_i686.whl\", hash = \"sha256:63f3268ba69ace99cab4e3e3b5840b03340efed0948ab8f78d2fd87ee5442a4f\"},",
          "1495:     {file = \"MarkupSafe-2.0.1-cp36-cp36m-musllinux_1_1_x86_64.whl\", hash = \"sha256:8d206346619592c6200148b01a2142798c989edcb9c896f9ac9722a99d4e77e6\"},",
          "1496:     {file = \"MarkupSafe-2.0.1-cp36-cp36m-win32.whl\", hash = \"sha256:6c4ca60fa24e85fe25b912b01e62cb969d69a23a5d5867682dd3e80b5b02581d\"},",
          "1497:     {file = \"MarkupSafe-2.0.1-cp36-cp36m-win_amd64.whl\", hash = \"sha256:b2f4bf27480f5e5e8ce285a8c8fd176c0b03e93dcc6646477d4630e83440c6a9\"},",
          "1498:     {file = \"MarkupSafe-2.0.1-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:0717a7390a68be14b8c793ba258e075c6f4ca819f15edfc2a3a027c823718567\"},",
          "1499:     {file = \"MarkupSafe-2.0.1-cp37-cp37m-manylinux1_i686.whl\", hash = \"sha256:6557b31b5e2c9ddf0de32a691f2312a32f77cd7681d8af66c2692efdbef84c18\"},",
          "1500:     {file = \"MarkupSafe-2.0.1-cp37-cp37m-manylinux1_x86_64.whl\", hash = \"sha256:49e3ceeabbfb9d66c3aef5af3a60cc43b85c33df25ce03d0031a608b0a8b2e3f\"},",
          "1501:     {file = \"MarkupSafe-2.0.1-cp37-cp37m-manylinux2010_i686.whl\", hash = \"sha256:d7f9850398e85aba693bb640262d3611788b1f29a79f0c93c565694658f4071f\"},",
          "1502:     {file = \"MarkupSafe-2.0.1-cp37-cp37m-manylinux2010_x86_64.whl\", hash = \"sha256:6a7fae0dd14cf60ad5ff42baa2e95727c3d81ded453457771d02b7d2b3f9c0c2\"},",
          "1503:     {file = \"MarkupSafe-2.0.1-cp37-cp37m-manylinux2014_aarch64.whl\", hash = \"sha256:b7f2d075102dc8c794cbde1947378051c4e5180d52d276987b8d28a3bd58c17d\"},",
          "1504:     {file = \"MarkupSafe-2.0.1-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e9936f0b261d4df76ad22f8fee3ae83b60d7c3e871292cd42f40b81b70afae85\"},",
          "1505:     {file = \"MarkupSafe-2.0.1-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:2a7d351cbd8cfeb19ca00de495e224dea7e7d919659c2841bbb7f420ad03e2d6\"},",
          "1506:     {file = \"MarkupSafe-2.0.1-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:60bf42e36abfaf9aff1f50f52644b336d4f0a3fd6d8a60ca0d054ac9f713a864\"},",
          "1507:     {file = \"MarkupSafe-2.0.1-cp37-cp37m-musllinux_1_1_aarch64.whl\", hash = \"sha256:d6c7ebd4e944c85e2c3421e612a7057a2f48d478d79e61800d81468a8d842207\"},",
          "1508:     {file = \"MarkupSafe-2.0.1-cp37-cp37m-musllinux_1_1_i686.whl\", hash = \"sha256:f0567c4dc99f264f49fe27da5f735f414c4e7e7dd850cfd8e69f0862d7c74ea9\"},",
          "1509:     {file = \"MarkupSafe-2.0.1-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:89c687013cb1cd489a0f0ac24febe8c7a666e6e221b783e53ac50ebf68e45d86\"},",
          "1510:     {file = \"MarkupSafe-2.0.1-cp37-cp37m-win32.whl\", hash = \"sha256:a30e67a65b53ea0a5e62fe23682cfe22712e01f453b95233b25502f7c61cb415\"},",
          "1511:     {file = \"MarkupSafe-2.0.1-cp37-cp37m-win_amd64.whl\", hash = \"sha256:611d1ad9a4288cf3e3c16014564df047fe08410e628f89805e475368bd304914\"},",
          "1512:     {file = \"MarkupSafe-2.0.1-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:5bb28c636d87e840583ee3adeb78172efc47c8b26127267f54a9c0ec251d41a9\"},",
          "1513:     {file = \"MarkupSafe-2.0.1-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:be98f628055368795d818ebf93da628541e10b75b41c559fdf36d104c5787066\"},",
          "1514:     {file = \"MarkupSafe-2.0.1-cp38-cp38-manylinux1_i686.whl\", hash = \"sha256:1d609f577dc6e1aa17d746f8bd3c31aa4d258f4070d61b2aa5c4166c1539de35\"},",
          "1515:     {file = \"MarkupSafe-2.0.1-cp38-cp38-manylinux1_x86_64.whl\", hash = \"sha256:7d91275b0245b1da4d4cfa07e0faedd5b0812efc15b702576d103293e252af1b\"},",
          "1516:     {file = \"MarkupSafe-2.0.1-cp38-cp38-manylinux2010_i686.whl\", hash = \"sha256:01a9b8ea66f1658938f65b93a85ebe8bc016e6769611be228d797c9d998dd298\"},",
          "1517:     {file = \"MarkupSafe-2.0.1-cp38-cp38-manylinux2010_x86_64.whl\", hash = \"sha256:47ab1e7b91c098ab893b828deafa1203de86d0bc6ab587b160f78fe6c4011f75\"},",
          "1518:     {file = \"MarkupSafe-2.0.1-cp38-cp38-manylinux2014_aarch64.whl\", hash = \"sha256:97383d78eb34da7e1fa37dd273c20ad4320929af65d156e35a5e2d89566d9dfb\"},",
          "1519:     {file = \"MarkupSafe-2.0.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6fcf051089389abe060c9cd7caa212c707e58153afa2c649f00346ce6d260f1b\"},",
          "1520:     {file = \"MarkupSafe-2.0.1-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:5855f8438a7d1d458206a2466bf82b0f104a3724bf96a1c781ab731e4201731a\"},",
          "1521:     {file = \"MarkupSafe-2.0.1-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:3dd007d54ee88b46be476e293f48c85048603f5f516008bee124ddd891398ed6\"},",
          "1522:     {file = \"MarkupSafe-2.0.1-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:aca6377c0cb8a8253e493c6b451565ac77e98c2951c45f913e0b52facdcff83f\"},",
          "1523:     {file = \"MarkupSafe-2.0.1-cp38-cp38-musllinux_1_1_i686.whl\", hash = \"sha256:04635854b943835a6ea959e948d19dcd311762c5c0c6e1f0e16ee57022669194\"},",
          "1524:     {file = \"MarkupSafe-2.0.1-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:6300b8454aa6930a24b9618fbb54b5a68135092bc666f7b06901f897fa5c2fee\"},",
          "1525:     {file = \"MarkupSafe-2.0.1-cp38-cp38-win32.whl\", hash = \"sha256:023cb26ec21ece8dc3907c0e8320058b2e0cb3c55cf9564da612bc325bed5e64\"},",
          "1526:     {file = \"MarkupSafe-2.0.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:984d76483eb32f1bcb536dc27e4ad56bba4baa70be32fa87152832cdd9db0833\"},",
          "1527:     {file = \"MarkupSafe-2.0.1-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:2ef54abee730b502252bcdf31b10dacb0a416229b72c18b19e24a4509f273d26\"},",
          "1528:     {file = \"MarkupSafe-2.0.1-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:3c112550557578c26af18a1ccc9e090bfe03832ae994343cfdacd287db6a6ae7\"},",
          "1529:     {file = \"MarkupSafe-2.0.1-cp39-cp39-manylinux1_i686.whl\", hash = \"sha256:53edb4da6925ad13c07b6d26c2a852bd81e364f95301c66e930ab2aef5b5ddd8\"},",
          "1530:     {file = \"MarkupSafe-2.0.1-cp39-cp39-manylinux1_x86_64.whl\", hash = \"sha256:f5653a225f31e113b152e56f154ccbe59eeb1c7487b39b9d9f9cdb58e6c79dc5\"},",
          "1531:     {file = \"MarkupSafe-2.0.1-cp39-cp39-manylinux2010_i686.whl\", hash = \"sha256:4efca8f86c54b22348a5467704e3fec767b2db12fc39c6d963168ab1d3fc9135\"},",
          "1532:     {file = \"MarkupSafe-2.0.1-cp39-cp39-manylinux2010_x86_64.whl\", hash = \"sha256:ab3ef638ace319fa26553db0624c4699e31a28bb2a835c5faca8f8acf6a5a902\"},",
          "1533:     {file = \"MarkupSafe-2.0.1-cp39-cp39-manylinux2014_aarch64.whl\", hash = \"sha256:f8ba0e8349a38d3001fae7eadded3f6606f0da5d748ee53cc1dab1d6527b9509\"},",
          "1534:     {file = \"MarkupSafe-2.0.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c47adbc92fc1bb2b3274c4b3a43ae0e4573d9fbff4f54cd484555edbf030baf1\"},",
          "1535:     {file = \"MarkupSafe-2.0.1-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:37205cac2a79194e3750b0af2a5720d95f786a55ce7df90c3af697bfa100eaac\"},",
          "1536:     {file = \"MarkupSafe-2.0.1-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:1f2ade76b9903f39aa442b4aadd2177decb66525062db244b35d71d0ee8599b6\"},",
          "1537:     {file = \"MarkupSafe-2.0.1-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:4296f2b1ce8c86a6aea78613c34bb1a672ea0e3de9c6ba08a960efe0b0a09047\"},",
          "1538:     {file = \"MarkupSafe-2.0.1-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:9f02365d4e99430a12647f09b6cc8bab61a6564363f313126f775eb4f6ef798e\"},",
          "1539:     {file = \"MarkupSafe-2.0.1-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:5b6d930f030f8ed98e3e6c98ffa0652bdb82601e7a016ec2ab5d7ff23baa78d1\"},",
          "1540:     {file = \"MarkupSafe-2.0.1-cp39-cp39-win32.whl\", hash = \"sha256:10f82115e21dc0dfec9ab5c0223652f7197feb168c940f3ef61563fc2d6beb74\"},",
          "1541:     {file = \"MarkupSafe-2.0.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:693ce3f9e70a6cf7d2fb9e6c9d8b204b6b39897a2c4a1aa65728d5ac97dcc1d8\"},",
          "1542:     {file = \"MarkupSafe-2.0.1.tar.gz\", hash = \"sha256:594c67807fb16238b30c44bdf74f36c02cdf22d1c8cda91ef8a0ed8dabf5620a\"},",
          "1543: ]",
          "1545: [[package]]",
          "1546: name = \"matplotlib\"",
          "1547: version = \"3.7.2\"",
          "1548: description = \"Python plotting package\"",
          "1549: optional = false",
          "1550: python-versions = \">=3.8\"",
          "1551: files = [",
          "1552:     {file = \"matplotlib-3.7.2-cp310-cp310-macosx_10_12_universal2.whl\", hash = \"sha256:2699f7e73a76d4c110f4f25be9d2496d6ab4f17345307738557d345f099e07de\"},",
          "1553:     {file = \"matplotlib-3.7.2-cp310-cp310-macosx_10_12_x86_64.whl\", hash = \"sha256:a8035ba590658bae7562786c9cc6ea1a84aa49d3afab157e414c9e2ea74f496d\"},",
          "1554:     {file = \"matplotlib-3.7.2-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:2f8e4a49493add46ad4a8c92f63e19d548b2b6ebbed75c6b4c7f46f57d36cdd1\"},",
          "1555:     {file = \"matplotlib-3.7.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:71667eb2ccca4c3537d9414b1bc00554cb7f91527c17ee4ec38027201f8f1603\"},",
          "1556:     {file = \"matplotlib-3.7.2-cp310-cp310-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:152ee0b569a37630d8628534c628456b28686e085d51394da6b71ef84c4da201\"},",
          "1557:     {file = \"matplotlib-3.7.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:070f8dddd1f5939e60aacb8fa08f19551f4b0140fab16a3669d5cd6e9cb28fc8\"},",
          "1558:     {file = \"matplotlib-3.7.2-cp310-cp310-win32.whl\", hash = \"sha256:fdbb46fad4fb47443b5b8ac76904b2e7a66556844f33370861b4788db0f8816a\"},",
          "1559:     {file = \"matplotlib-3.7.2-cp310-cp310-win_amd64.whl\", hash = \"sha256:23fb1750934e5f0128f9423db27c474aa32534cec21f7b2153262b066a581fd1\"},",
          "1560:     {file = \"matplotlib-3.7.2-cp311-cp311-macosx_10_12_universal2.whl\", hash = \"sha256:30e1409b857aa8a747c5d4f85f63a79e479835f8dffc52992ac1f3f25837b544\"},",
          "1561:     {file = \"matplotlib-3.7.2-cp311-cp311-macosx_10_12_x86_64.whl\", hash = \"sha256:50e0a55ec74bf2d7a0ebf50ac580a209582c2dd0f7ab51bc270f1b4a0027454e\"},",
          "1562:     {file = \"matplotlib-3.7.2-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:ac60daa1dc83e8821eed155796b0f7888b6b916cf61d620a4ddd8200ac70cd64\"},",
          "1563:     {file = \"matplotlib-3.7.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:305e3da477dc8607336ba10bac96986d6308d614706cae2efe7d3ffa60465b24\"},",
          "1564:     {file = \"matplotlib-3.7.2-cp311-cp311-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:1c308b255efb9b06b23874236ec0f10f026673ad6515f602027cc8ac7805352d\"},",
          "1565:     {file = \"matplotlib-3.7.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:60c521e21031632aa0d87ca5ba0c1c05f3daacadb34c093585a0be6780f698e4\"},",
          "1566:     {file = \"matplotlib-3.7.2-cp311-cp311-win32.whl\", hash = \"sha256:26bede320d77e469fdf1bde212de0ec889169b04f7f1179b8930d66f82b30cbc\"},",
          "1567:     {file = \"matplotlib-3.7.2-cp311-cp311-win_amd64.whl\", hash = \"sha256:af4860132c8c05261a5f5f8467f1b269bf1c7c23902d75f2be57c4a7f2394b3e\"},",
          "1568:     {file = \"matplotlib-3.7.2-cp38-cp38-macosx_10_12_universal2.whl\", hash = \"sha256:a1733b8e84e7e40a9853e505fe68cc54339f97273bdfe6f3ed980095f769ddc7\"},",
          "1569:     {file = \"matplotlib-3.7.2-cp38-cp38-macosx_10_12_x86_64.whl\", hash = \"sha256:d9881356dc48e58910c53af82b57183879129fa30492be69058c5b0d9fddf391\"},",
          "1570:     {file = \"matplotlib-3.7.2-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:f081c03f413f59390a80b3e351cc2b2ea0205839714dbc364519bcf51f4b56ca\"},",
          "1571:     {file = \"matplotlib-3.7.2-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:1cd120fca3407a225168238b790bd5c528f0fafde6172b140a2f3ab7a4ea63e9\"},",
          "1572:     {file = \"matplotlib-3.7.2-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:a2c1590b90aa7bd741b54c62b78de05d4186271e34e2377e0289d943b3522273\"},",
          "1573:     {file = \"matplotlib-3.7.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6d2ff3c984b8a569bc1383cd468fc06b70d7b59d5c2854ca39f1436ae8394117\"},",
          "1574:     {file = \"matplotlib-3.7.2-cp38-cp38-win32.whl\", hash = \"sha256:5dea00b62d28654b71ca92463656d80646675628d0828e08a5f3b57e12869e13\"},",
          "1575:     {file = \"matplotlib-3.7.2-cp38-cp38-win_amd64.whl\", hash = \"sha256:0f506a1776ee94f9e131af1ac6efa6e5bc7cb606a3e389b0ccb6e657f60bb676\"},",
          "1576:     {file = \"matplotlib-3.7.2-cp39-cp39-macosx_10_12_universal2.whl\", hash = \"sha256:6515e878f91894c2e4340d81f0911857998ccaf04dbc1bba781e3d89cbf70608\"},",
          "1577:     {file = \"matplotlib-3.7.2-cp39-cp39-macosx_10_12_x86_64.whl\", hash = \"sha256:71f7a8c6b124e904db550f5b9fe483d28b896d4135e45c4ea381ad3b8a0e3256\"},",
          "1578:     {file = \"matplotlib-3.7.2-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:12f01b92ecd518e0697da4d97d163b2b3aa55eb3eb4e2c98235b3396d7dad55f\"},",
          "1579:     {file = \"matplotlib-3.7.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a7e28d6396563955f7af437894a36bf2b279462239a41028323e04b85179058b\"},",
          "1580:     {file = \"matplotlib-3.7.2-cp39-cp39-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:dbcf59334ff645e6a67cd5f78b4b2cdb76384cdf587fa0d2dc85f634a72e1a3e\"},",
          "1581:     {file = \"matplotlib-3.7.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:318c89edde72ff95d8df67d82aca03861240512994a597a435a1011ba18dbc7f\"},",
          "1582:     {file = \"matplotlib-3.7.2-cp39-cp39-win32.whl\", hash = \"sha256:ce55289d5659b5b12b3db4dc9b7075b70cef5631e56530f14b2945e8836f2d20\"},",
          "1583:     {file = \"matplotlib-3.7.2-cp39-cp39-win_amd64.whl\", hash = \"sha256:2ecb5be2b2815431c81dc115667e33da0f5a1bcf6143980d180d09a717c4a12e\"},",
          "1584:     {file = \"matplotlib-3.7.2-pp38-pypy38_pp73-macosx_10_12_x86_64.whl\", hash = \"sha256:fdcd28360dbb6203fb5219b1a5658df226ac9bebc2542a9e8f457de959d713d0\"},",
          "1585:     {file = \"matplotlib-3.7.2-pp38-pypy38_pp73-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:0c3cca3e842b11b55b52c6fb8bd6a4088693829acbfcdb3e815fa9b7d5c92c1b\"},",
          "1586:     {file = \"matplotlib-3.7.2-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ebf577c7a6744e9e1bd3fee45fc74a02710b214f94e2bde344912d85e0c9af7c\"},",
          "1587:     {file = \"matplotlib-3.7.2-pp38-pypy38_pp73-win_amd64.whl\", hash = \"sha256:936bba394682049919dda062d33435b3be211dc3dcaa011e09634f060ec878b2\"},",
          "1588:     {file = \"matplotlib-3.7.2-pp39-pypy39_pp73-macosx_10_12_x86_64.whl\", hash = \"sha256:bc221ffbc2150458b1cd71cdd9ddd5bb37962b036e41b8be258280b5b01da1dd\"},",
          "1589:     {file = \"matplotlib-3.7.2-pp39-pypy39_pp73-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:35d74ebdb3f71f112b36c2629cf32323adfbf42679e2751252acd468f5001c07\"},",
          "1590:     {file = \"matplotlib-3.7.2-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:717157e61b3a71d3d26ad4e1770dc85156c9af435659a25ee6407dc866cb258d\"},",
          "1591:     {file = \"matplotlib-3.7.2-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:20f844d6be031948148ba49605c8b96dfe7d3711d1b63592830d650622458c11\"},",
          "1592:     {file = \"matplotlib-3.7.2.tar.gz\", hash = \"sha256:a8cdb91dddb04436bd2f098b8fdf4b81352e68cf4d2c6756fcc414791076569b\"},",
          "1593: ]",
          "1595: [package.dependencies]",
          "1596: contourpy = \">=1.0.1\"",
          "1597: cycler = \">=0.10\"",
          "1598: fonttools = \">=4.22.0\"",
          "1599: importlib-resources = {version = \">=3.2.0\", markers = \"python_version < \\\"3.10\\\"\"}",
          "1600: kiwisolver = \">=1.0.1\"",
          "1601: numpy = \">=1.20\"",
          "1602: packaging = \">=20.0\"",
          "1603: pillow = \">=6.2.0\"",
          "1604: pyparsing = \">=2.3.1,<3.1\"",
          "1605: python-dateutil = \">=2.7\"",
          "1607: [[package]]",
          "1608: name = \"matplotlib-inline\"",
          "1609: version = \"0.1.6\"",
          "1610: description = \"Inline Matplotlib backend for Jupyter\"",
          "1611: optional = false",
          "1612: python-versions = \">=3.5\"",
          "1613: files = [",
          "1614:     {file = \"matplotlib-inline-0.1.6.tar.gz\", hash = \"sha256:f887e5f10ba98e8d2b150ddcf4702c1e5f8b3a20005eb0f74bfdbd360ee6f304\"},",
          "1615:     {file = \"matplotlib_inline-0.1.6-py3-none-any.whl\", hash = \"sha256:f1f41aab5328aa5aaea9b16d083b128102f8712542f819fe7e6a420ff581b311\"},",
          "1616: ]",
          "1618: [package.dependencies]",
          "1619: traitlets = \"*\"",
          "1621: [[package]]",
          "1622: name = \"mitmproxy\"",
          "1623: version = \"9.0.1\"",
          "1624: description = \"An interactive, SSL/TLS-capable intercepting proxy for HTTP/1, HTTP/2, and WebSockets.\"",
          "1625: optional = false",
          "1626: python-versions = \">=3.9\"",
          "1627: files = [",
          "1628:     {file = \"mitmproxy-9.0.1-py3-none-any.whl\", hash = \"sha256:8df75b769725e2d8e7fc064e8397f46610d103630c27f6175e41151d6e523e4c\"},",
          "1629: ]",
          "1631: [package.dependencies]",
          "1632: asgiref = \">=3.2.10,<3.6\"",
          "1633: Brotli = \">=1.0,<1.1\"",
          "1634: certifi = \">=2019.9.11\"",
          "1635: cryptography = \">=38.0,<38.1\"",
          "1636: flask = \">=1.1.1,<2.3\"",
          "1637: h11 = \">=0.11,<0.15\"",
          "1638: h2 = \">=4.1,<5\"",
          "1639: hyperframe = \">=6.0,<7\"",
          "1640: kaitaistruct = \">=0.10,<0.11\"",
          "1641: ldap3 = \">=2.8,<2.10\"",
          "1642: mitmproxy-wireguard = \">=0.1.6,<0.2\"",
          "1643: msgpack = \">=1.0.0,<1.1.0\"",
          "1644: passlib = \">=1.6.5,<1.8\"",
          "1645: protobuf = \">=3.14,<5\"",
          "1646: publicsuffix2 = \">=2.20190812,<3\"",
          "1647: pydivert = {version = \">=2.0.3,<2.2\", markers = \"sys_platform == \\\"win32\\\"\"}",
          "1648: pyOpenSSL = \">=22.1,<22.2\"",
          "1649: pyparsing = \">=2.4.2,<3.1\"",
          "1650: pyperclip = \">=1.6.0,<1.9\"",
          "1651: \"ruamel.yaml\" = \">=0.16,<0.18\"",
          "1652: sortedcontainers = \">=2.3,<2.5\"",
          "1653: tornado = \">=6.1,<7\"",
          "1654: typing-extensions = {version = \">=4.3,<4.5\", markers = \"python_version < \\\"3.10\\\"\"}",
          "1655: urwid = \">=2.1.1,<2.2\"",
          "1656: wsproto = \">=1.0,<1.3\"",
          "1657: zstandard = \">=0.11,<0.20\"",
          "1659: [package.extras]",
          "1660: dev = [\"click (>=7.0,<8.2)\", \"hypothesis (>=5.8,<7)\", \"parver (>=0.1,<2.0)\", \"pdoc (>=4.0.0)\", \"pyinstaller (==5.6.2)\", \"pytest (>=6.1.0,<8)\", \"pytest-asyncio (>=0.17,<0.21)\", \"pytest-cov (>=2.7.1,<4.1)\", \"pytest-timeout (>=1.3.3,<2.2)\", \"pytest-xdist (>=2.1.0,<3.1)\", \"requests (>=2.9.1,<3)\", \"tox (>=3.5,<4)\", \"wheel (>=0.36.2,<0.39)\"]",
          "1662: [[package]]",
          "1663: name = \"mitmproxy-wireguard\"",
          "1664: version = \"0.1.23\"",
          "1665: description = \"WireGuard interface for mitmproxy\"",
          "1666: optional = false",
          "1667: python-versions = \">=3.7\"",
          "1668: files = [",
          "1669:     {file = \"mitmproxy_wireguard-0.1.23-cp37-abi3-macosx_10_7_x86_64.whl\", hash = \"sha256:661471e8a363b16d5d871c6c6c30205b16b636574b5bc062b3f158d8b76951ad\"},",
          "1670:     {file = \"mitmproxy_wireguard-0.1.23-cp37-abi3-macosx_10_9_x86_64.macosx_11_0_arm64.macosx_10_9_universal2.whl\", hash = \"sha256:f433fa20358ab2999ba9233819649d2a5a5c2b95eac7e95f4533de90d978d115\"},",
          "1671:     {file = \"mitmproxy_wireguard-0.1.23-cp37-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:82ac397bcd8ac3cfd08c91b2039b0ba5dc67edfa65fb52ab0e5df81220bdb913\"},",
          "1672:     {file = \"mitmproxy_wireguard-0.1.23-cp37-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:23a55cd010d9d116b23101b5b8b963d10f3d38d6f9be0f58ba53288012f4fef9\"},",
          "1673:     {file = \"mitmproxy_wireguard-0.1.23-cp37-abi3-win_amd64.whl\", hash = \"sha256:f2f6121dc4d2d8b692124f3d027f4c839ef764278d473fb89357841b0a4406cf\"},",
          "1674:     {file = \"mitmproxy_wireguard-0.1.23.tar.gz\", hash = \"sha256:b0f7b44ef9b0601307c122c5fe1ce57368c2fc9330097ec576984a0d640b4727\"},",
          "1675: ]",
          "1677: [[package]]",
          "1678: name = \"msgpack\"",
          "1679: version = \"1.0.5\"",
          "1680: description = \"MessagePack serializer\"",
          "1681: optional = false",
          "1682: python-versions = \"*\"",
          "1683: files = [",
          "1684:     {file = \"msgpack-1.0.5-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:525228efd79bb831cf6830a732e2e80bc1b05436b086d4264814b4b2955b2fa9\"},",
          "1685:     {file = \"msgpack-1.0.5-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:4f8d8b3bf1ff2672567d6b5c725a1b347fe838b912772aa8ae2bf70338d5a198\"},",
          "1686:     {file = \"msgpack-1.0.5-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:cdc793c50be3f01106245a61b739328f7dccc2c648b501e237f0699fe1395b81\"},",
          "1687:     {file = \"msgpack-1.0.5-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5cb47c21a8a65b165ce29f2bec852790cbc04936f502966768e4aae9fa763cb7\"},",
          "1688:     {file = \"msgpack-1.0.5-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e42b9594cc3bf4d838d67d6ed62b9e59e201862a25e9a157019e171fbe672dd3\"},",
          "1689:     {file = \"msgpack-1.0.5-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:55b56a24893105dc52c1253649b60f475f36b3aa0fc66115bffafb624d7cb30b\"},",
          "1690:     {file = \"msgpack-1.0.5-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:1967f6129fc50a43bfe0951c35acbb729be89a55d849fab7686004da85103f1c\"},",
          "1691:     {file = \"msgpack-1.0.5-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:20a97bf595a232c3ee6d57ddaadd5453d174a52594bf9c21d10407e2a2d9b3bd\"},",
          "1692:     {file = \"msgpack-1.0.5-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:d25dd59bbbbb996eacf7be6b4ad082ed7eacc4e8f3d2df1ba43822da9bfa122a\"},",
          "1693:     {file = \"msgpack-1.0.5-cp310-cp310-win32.whl\", hash = \"sha256:382b2c77589331f2cb80b67cc058c00f225e19827dbc818d700f61513ab47bea\"},",
          "1694:     {file = \"msgpack-1.0.5-cp310-cp310-win_amd64.whl\", hash = \"sha256:4867aa2df9e2a5fa5f76d7d5565d25ec76e84c106b55509e78c1ede0f152659a\"},",
          "1695:     {file = \"msgpack-1.0.5-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:9f5ae84c5c8a857ec44dc180a8b0cc08238e021f57abdf51a8182e915e6299f0\"},",
          "1696:     {file = \"msgpack-1.0.5-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:9e6ca5d5699bcd89ae605c150aee83b5321f2115695e741b99618f4856c50898\"},",
          "1697:     {file = \"msgpack-1.0.5-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:5494ea30d517a3576749cad32fa27f7585c65f5f38309c88c6d137877fa28a5a\"},",
          "1698:     {file = \"msgpack-1.0.5-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1ab2f3331cb1b54165976a9d976cb251a83183631c88076613c6c780f0d6e45a\"},",
          "1699:     {file = \"msgpack-1.0.5-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:28592e20bbb1620848256ebc105fc420436af59515793ed27d5c77a217477705\"},",
          "1700:     {file = \"msgpack-1.0.5-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:fe5c63197c55bce6385d9aee16c4d0641684628f63ace85f73571e65ad1c1e8d\"},",
          "1701:     {file = \"msgpack-1.0.5-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:ed40e926fa2f297e8a653c954b732f125ef97bdd4c889f243182299de27e2aa9\"},",
          "1702:     {file = \"msgpack-1.0.5-cp311-cp311-musllinux_1_1_i686.whl\", hash = \"sha256:b2de4c1c0538dcb7010902a2b97f4e00fc4ddf2c8cda9749af0e594d3b7fa3d7\"},",
          "1703:     {file = \"msgpack-1.0.5-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:bf22a83f973b50f9d38e55c6aade04c41ddda19b00c4ebc558930d78eecc64ed\"},",
          "1704:     {file = \"msgpack-1.0.5-cp311-cp311-win32.whl\", hash = \"sha256:c396e2cc213d12ce017b686e0f53497f94f8ba2b24799c25d913d46c08ec422c\"},",
          "1705:     {file = \"msgpack-1.0.5-cp311-cp311-win_amd64.whl\", hash = \"sha256:6c4c68d87497f66f96d50142a2b73b97972130d93677ce930718f68828b382e2\"},",
          "1706:     {file = \"msgpack-1.0.5-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:a2b031c2e9b9af485d5e3c4520f4220d74f4d222a5b8dc8c1a3ab9448ca79c57\"},",
          "1707:     {file = \"msgpack-1.0.5-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4f837b93669ce4336e24d08286c38761132bc7ab29782727f8557e1eb21b2080\"},",
          "1708:     {file = \"msgpack-1.0.5-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b1d46dfe3832660f53b13b925d4e0fa1432b00f5f7210eb3ad3bb9a13c6204a6\"},",
          "1709:     {file = \"msgpack-1.0.5-cp36-cp36m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:366c9a7b9057e1547f4ad51d8facad8b406bab69c7d72c0eb6f529cf76d4b85f\"},",
          "1710:     {file = \"msgpack-1.0.5-cp36-cp36m-musllinux_1_1_aarch64.whl\", hash = \"sha256:4c075728a1095efd0634a7dccb06204919a2f67d1893b6aa8e00497258bf926c\"},",
          "1711:     {file = \"msgpack-1.0.5-cp36-cp36m-musllinux_1_1_i686.whl\", hash = \"sha256:f933bbda5a3ee63b8834179096923b094b76f0c7a73c1cfe8f07ad608c58844b\"},",
          "1712:     {file = \"msgpack-1.0.5-cp36-cp36m-musllinux_1_1_x86_64.whl\", hash = \"sha256:36961b0568c36027c76e2ae3ca1132e35123dcec0706c4b7992683cc26c1320c\"},",
          "1713:     {file = \"msgpack-1.0.5-cp36-cp36m-win32.whl\", hash = \"sha256:b5ef2f015b95f912c2fcab19c36814963b5463f1fb9049846994b007962743e9\"},",
          "1714:     {file = \"msgpack-1.0.5-cp36-cp36m-win_amd64.whl\", hash = \"sha256:288e32b47e67f7b171f86b030e527e302c91bd3f40fd9033483f2cacc37f327a\"},",
          "1715:     {file = \"msgpack-1.0.5-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:137850656634abddfb88236008339fdaba3178f4751b28f270d2ebe77a563b6c\"},",
          "1716:     {file = \"msgpack-1.0.5-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:0c05a4a96585525916b109bb85f8cb6511db1c6f5b9d9cbcbc940dc6b4be944b\"},",
          "1717:     {file = \"msgpack-1.0.5-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:56a62ec00b636583e5cb6ad313bbed36bb7ead5fa3a3e38938503142c72cba4f\"},",
          "1718:     {file = \"msgpack-1.0.5-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ef8108f8dedf204bb7b42994abf93882da1159728a2d4c5e82012edd92c9da9f\"},",
          "1719:     {file = \"msgpack-1.0.5-cp37-cp37m-musllinux_1_1_aarch64.whl\", hash = \"sha256:1835c84d65f46900920b3708f5ba829fb19b1096c1800ad60bae8418652a951d\"},",
          "1720:     {file = \"msgpack-1.0.5-cp37-cp37m-musllinux_1_1_i686.whl\", hash = \"sha256:e57916ef1bd0fee4f21c4600e9d1da352d8816b52a599c46460e93a6e9f17086\"},",
          "1721:     {file = \"msgpack-1.0.5-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:17358523b85973e5f242ad74aa4712b7ee560715562554aa2134d96e7aa4cbbf\"},",
          "1722:     {file = \"msgpack-1.0.5-cp37-cp37m-win32.whl\", hash = \"sha256:cb5aaa8c17760909ec6cb15e744c3ebc2ca8918e727216e79607b7bbce9c8f77\"},",
          "1723:     {file = \"msgpack-1.0.5-cp37-cp37m-win_amd64.whl\", hash = \"sha256:ab31e908d8424d55601ad7075e471b7d0140d4d3dd3272daf39c5c19d936bd82\"},",
          "1724:     {file = \"msgpack-1.0.5-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:b72d0698f86e8d9ddf9442bdedec15b71df3598199ba33322d9711a19f08145c\"},",
          "1725:     {file = \"msgpack-1.0.5-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:379026812e49258016dd84ad79ac8446922234d498058ae1d415f04b522d5b2d\"},",
          "1726:     {file = \"msgpack-1.0.5-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:332360ff25469c346a1c5e47cbe2a725517919892eda5cfaffe6046656f0b7bb\"},",
          "1727:     {file = \"msgpack-1.0.5-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:476a8fe8fae289fdf273d6d2a6cb6e35b5a58541693e8f9f019bfe990a51e4ba\"},",
          "1728:     {file = \"msgpack-1.0.5-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:a9985b214f33311df47e274eb788a5893a761d025e2b92c723ba4c63936b69b1\"},",
          "1729:     {file = \"msgpack-1.0.5-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:48296af57cdb1d885843afd73c4656be5c76c0c6328db3440c9601a98f303d87\"},",
          "1730:     {file = \"msgpack-1.0.5-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:addab7e2e1fcc04bd08e4eb631c2a90960c340e40dfc4a5e24d2ff0d5a3b3edb\"},",
          "1731:     {file = \"msgpack-1.0.5-cp38-cp38-musllinux_1_1_i686.whl\", hash = \"sha256:916723458c25dfb77ff07f4c66aed34e47503b2eb3188b3adbec8d8aa6e00f48\"},",
          "1732:     {file = \"msgpack-1.0.5-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:821c7e677cc6acf0fd3f7ac664c98803827ae6de594a9f99563e48c5a2f27eb0\"},",
          "1733:     {file = \"msgpack-1.0.5-cp38-cp38-win32.whl\", hash = \"sha256:1c0f7c47f0087ffda62961d425e4407961a7ffd2aa004c81b9c07d9269512f6e\"},",
          "1734:     {file = \"msgpack-1.0.5-cp38-cp38-win_amd64.whl\", hash = \"sha256:bae7de2026cbfe3782c8b78b0db9cbfc5455e079f1937cb0ab8d133496ac55e1\"},",
          "1735:     {file = \"msgpack-1.0.5-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:20c784e66b613c7f16f632e7b5e8a1651aa5702463d61394671ba07b2fc9e025\"},",
          "1736:     {file = \"msgpack-1.0.5-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:266fa4202c0eb94d26822d9bfd7af25d1e2c088927fe8de9033d929dd5ba24c5\"},",
          "1737:     {file = \"msgpack-1.0.5-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:18334484eafc2b1aa47a6d42427da7fa8f2ab3d60b674120bce7a895a0a85bdd\"},",
          "1738:     {file = \"msgpack-1.0.5-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:57e1f3528bd95cc44684beda696f74d3aaa8a5e58c816214b9046512240ef437\"},",
          "1739:     {file = \"msgpack-1.0.5-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:586d0d636f9a628ddc6a17bfd45aa5b5efaf1606d2b60fa5d87b8986326e933f\"},",
          "1740:     {file = \"msgpack-1.0.5-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:a740fa0e4087a734455f0fc3abf5e746004c9da72fbd541e9b113013c8dc3282\"},",
          "1741:     {file = \"msgpack-1.0.5-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:3055b0455e45810820db1f29d900bf39466df96ddca11dfa6d074fa47054376d\"},",
          "1742:     {file = \"msgpack-1.0.5-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:a61215eac016f391129a013c9e46f3ab308db5f5ec9f25811e811f96962599a8\"},",
          "1743:     {file = \"msgpack-1.0.5-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:362d9655cd369b08fda06b6657a303eb7172d5279997abe094512e919cf74b11\"},",
          "1744:     {file = \"msgpack-1.0.5-cp39-cp39-win32.whl\", hash = \"sha256:ac9dd47af78cae935901a9a500104e2dea2e253207c924cc95de149606dc43cc\"},",
          "1745:     {file = \"msgpack-1.0.5-cp39-cp39-win_amd64.whl\", hash = \"sha256:06f5174b5f8ed0ed919da0e62cbd4ffde676a374aba4020034da05fab67b9164\"},",
          "1746:     {file = \"msgpack-1.0.5.tar.gz\", hash = \"sha256:c075544284eadc5cddc70f4757331d99dcbc16b2bbd4849d15f8aae4cf36d31c\"},",
          "1747: ]",
          "1749: [[package]]",
          "1750: name = \"networkx\"",
          "1751: version = \"3.1\"",
          "1752: description = \"Python package for creating and manipulating graphs and networks\"",
          "1753: optional = false",
          "1754: python-versions = \">=3.8\"",
          "1755: files = [",
          "1756:     {file = \"networkx-3.1-py3-none-any.whl\", hash = \"sha256:4f33f68cb2afcf86f28a45f43efc27a9386b535d567d2127f8f61d51dec58d36\"},",
          "1757:     {file = \"networkx-3.1.tar.gz\", hash = \"sha256:de346335408f84de0eada6ff9fafafff9bcda11f0a0dfaa931133debb146ab61\"},",
          "1758: ]",
          "1760: [package.extras]",
          "1761: default = [\"matplotlib (>=3.4)\", \"numpy (>=1.20)\", \"pandas (>=1.3)\", \"scipy (>=1.8)\"]",
          "1762: developer = [\"mypy (>=1.1)\", \"pre-commit (>=3.2)\"]",
          "1763: doc = [\"nb2plots (>=0.6)\", \"numpydoc (>=1.5)\", \"pillow (>=9.4)\", \"pydata-sphinx-theme (>=0.13)\", \"sphinx (>=6.1)\", \"sphinx-gallery (>=0.12)\", \"texext (>=0.6.7)\"]",
          "1764: extra = [\"lxml (>=4.6)\", \"pydot (>=1.4.2)\", \"pygraphviz (>=1.10)\", \"sympy (>=1.10)\"]",
          "1765: test = [\"codecov (>=2.1)\", \"pytest (>=7.2)\", \"pytest-cov (>=4.0)\"]",
          "1767: [[package]]",
          "1768: name = \"numpy\"",
          "1769: version = \"1.25.2\"",
          "1770: description = \"Fundamental package for array computing in Python\"",
          "1771: optional = false",
          "1772: python-versions = \">=3.9\"",
          "1773: files = [",
          "1774:     {file = \"numpy-1.25.2-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:db3ccc4e37a6873045580d413fe79b68e47a681af8db2e046f1dacfa11f86eb3\"},",
          "1775:     {file = \"numpy-1.25.2-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:90319e4f002795ccfc9050110bbbaa16c944b1c37c0baeea43c5fb881693ae1f\"},",
          "1776:     {file = \"numpy-1.25.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:dfe4a913e29b418d096e696ddd422d8a5d13ffba4ea91f9f60440a3b759b0187\"},",
          "1777:     {file = \"numpy-1.25.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f08f2e037bba04e707eebf4bc934f1972a315c883a9e0ebfa8a7756eabf9e357\"},",
          "1778:     {file = \"numpy-1.25.2-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:bec1e7213c7cb00d67093247f8c4db156fd03075f49876957dca4711306d39c9\"},",
          "1779:     {file = \"numpy-1.25.2-cp310-cp310-win32.whl\", hash = \"sha256:7dc869c0c75988e1c693d0e2d5b26034644399dd929bc049db55395b1379e044\"},",
          "1780:     {file = \"numpy-1.25.2-cp310-cp310-win_amd64.whl\", hash = \"sha256:834b386f2b8210dca38c71a6e0f4fd6922f7d3fcff935dbe3a570945acb1b545\"},",
          "1781:     {file = \"numpy-1.25.2-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:c5462d19336db4560041517dbb7759c21d181a67cb01b36ca109b2ae37d32418\"},",
          "1782:     {file = \"numpy-1.25.2-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:c5652ea24d33585ea39eb6a6a15dac87a1206a692719ff45d53c5282e66d4a8f\"},",
          "1783:     {file = \"numpy-1.25.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:0d60fbae8e0019865fc4784745814cff1c421df5afee233db6d88ab4f14655a2\"},",
          "1784:     {file = \"numpy-1.25.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:60e7f0f7f6d0eee8364b9a6304c2845b9c491ac706048c7e8cf47b83123b8dbf\"},",
          "1785:     {file = \"numpy-1.25.2-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:bb33d5a1cf360304754913a350edda36d5b8c5331a8237268c48f91253c3a364\"},",
          "1786:     {file = \"numpy-1.25.2-cp311-cp311-win32.whl\", hash = \"sha256:5883c06bb92f2e6c8181df7b39971a5fb436288db58b5a1c3967702d4278691d\"},",
          "1787:     {file = \"numpy-1.25.2-cp311-cp311-win_amd64.whl\", hash = \"sha256:5c97325a0ba6f9d041feb9390924614b60b99209a71a69c876f71052521d42a4\"},",
          "1788:     {file = \"numpy-1.25.2-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:b79e513d7aac42ae918db3ad1341a015488530d0bb2a6abcbdd10a3a829ccfd3\"},",
          "1789:     {file = \"numpy-1.25.2-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:eb942bfb6f84df5ce05dbf4b46673ffed0d3da59f13635ea9b926af3deb76926\"},",
          "1790:     {file = \"numpy-1.25.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:3e0746410e73384e70d286f93abf2520035250aad8c5714240b0492a7302fdca\"},",
          "1791:     {file = \"numpy-1.25.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d7806500e4f5bdd04095e849265e55de20d8cc4b661b038957354327f6d9b295\"},",
          "1792:     {file = \"numpy-1.25.2-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:8b77775f4b7df768967a7c8b3567e309f617dd5e99aeb886fa14dc1a0791141f\"},",
          "1793:     {file = \"numpy-1.25.2-cp39-cp39-win32.whl\", hash = \"sha256:2792d23d62ec51e50ce4d4b7d73de8f67a2fd3ea710dcbc8563a51a03fb07b01\"},",
          "1794:     {file = \"numpy-1.25.2-cp39-cp39-win_amd64.whl\", hash = \"sha256:76b4115d42a7dfc5d485d358728cdd8719be33cc5ec6ec08632a5d6fca2ed380\"},",
          "1795:     {file = \"numpy-1.25.2-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:1a1329e26f46230bf77b02cc19e900db9b52f398d6722ca853349a782d4cff55\"},",
          "1796:     {file = \"numpy-1.25.2-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4c3abc71e8b6edba80a01a52e66d83c5d14433cbcd26a40c329ec7ed09f37901\"},",
          "1797:     {file = \"numpy-1.25.2-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:1b9735c27cea5d995496f46a8b1cd7b408b3f34b6d50459d9ac8fe3a20cc17bf\"},",
          "1798:     {file = \"numpy-1.25.2.tar.gz\", hash = \"sha256:fd608e19c8d7c55021dffd43bfe5492fab8cc105cc8986f813f8c3c048b38760\"},",
          "1799: ]",
          "1801: [[package]]",
          "1802: name = \"openstep-parser\"",
          "1803: version = \"1.5.4\"",
          "1804: description = \"OpenStep plist reader into python objects\"",
          "1805: optional = false",
          "1806: python-versions = \"*\"",
          "1807: files = [",
          "1808:     {file = \"openstep_parser-1.5.4-py3-none-any.whl\", hash = \"sha256:56d7d25f6bfb1b17ce6c522f2467cf114f70b0c910693a07d4513109e19e9b18\"},",
          "1809:     {file = \"openstep_parser-1.5.4.tar.gz\", hash = \"sha256:f03c7fd9c78ac718c470cb0f667c1f09fa7f58786314f77fef8767302abe1658\"},",
          "1810: ]",
          "1812: [[package]]",
          "1813: name = \"oscrypto\"",
          "1814: version = \"1.3.0\"",
          "1815: description = \"TLS (SSL) sockets, key generation, encryption, decryption, signing, verification and KDFs using the OS crypto libraries. Does not require a compiler, and relies on the OS for patching. Works on Windows, OS X and Linux/BSD.\"",
          "1816: optional = false",
          "1817: python-versions = \"*\"",
          "1818: files = [",
          "1819:     {file = \"oscrypto-1.3.0-py2.py3-none-any.whl\", hash = \"sha256:2b2f1d2d42ec152ca90ccb5682f3e051fb55986e1b170ebde472b133713e7085\"},",
          "1820:     {file = \"oscrypto-1.3.0.tar.gz\", hash = \"sha256:6f5fef59cb5b3708321db7cca56aed8ad7e662853351e7991fcf60ec606d47a4\"},",
          "1821: ]",
          "1823: [package.dependencies]",
          "1824: asn1crypto = \">=1.5.1\"",
          "1826: [[package]]",
          "1827: name = \"packaging\"",
          "1828: version = \"21.3\"",
          "1829: description = \"Core utilities for Python packages\"",
          "1830: optional = false",
          "1831: python-versions = \">=3.6\"",
          "1832: files = [",
          "1833:     {file = \"packaging-21.3-py3-none-any.whl\", hash = \"sha256:ef103e05f519cdc783ae24ea4e2e0f508a9c99b2d4969652eed6a2e1ea5bd522\"},",
          "1834:     {file = \"packaging-21.3.tar.gz\", hash = \"sha256:dd47c42927d89ab911e606518907cc2d3a1f38bbd026385970643f9c5b8ecfeb\"},",
          "1835: ]",
          "1837: [package.dependencies]",
          "1838: pyparsing = \">=2.0.2,<3.0.5 || >3.0.5\"",
          "1840: [[package]]",
          "1841: name = \"parso\"",
          "1842: version = \"0.8.3\"",
          "1843: description = \"A Python Parser\"",
          "1844: optional = false",
          "1845: python-versions = \">=3.6\"",
          "1846: files = [",
          "1847:     {file = \"parso-0.8.3-py2.py3-none-any.whl\", hash = \"sha256:c001d4636cd3aecdaf33cbb40aebb59b094be2a74c556778ef5576c175e19e75\"},",
          "1848:     {file = \"parso-0.8.3.tar.gz\", hash = \"sha256:8c07be290bb59f03588915921e29e8a50002acaf2cdc5fa0e0114f91709fafa0\"},",
          "1849: ]",
          "1851: [package.extras]",
          "1852: qa = [\"flake8 (==3.8.3)\", \"mypy (==0.782)\"]",
          "1853: testing = [\"docopt\", \"pytest (<6.0.0)\"]",
          "1855: [[package]]",
          "1856: name = \"passlib\"",
          "1857: version = \"1.7.4\"",
          "1858: description = \"comprehensive password hashing framework supporting over 30 schemes\"",
          "1859: optional = false",
          "1860: python-versions = \"*\"",
          "1861: files = [",
          "1862:     {file = \"passlib-1.7.4-py2.py3-none-any.whl\", hash = \"sha256:aa6bca462b8d8bda89c70b382f0c298a20b5560af6cbfa2dce410c0a2fb669f1\"},",
          "1863:     {file = \"passlib-1.7.4.tar.gz\", hash = \"sha256:defd50f72b65c5402ab2c573830a6978e5f202ad0d984793c8dde2c4152ebe04\"},",
          "1864: ]",
          "1866: [package.extras]",
          "1867: argon2 = [\"argon2-cffi (>=18.2.0)\"]",
          "1868: bcrypt = [\"bcrypt (>=3.1.0)\"]",
          "1869: build-docs = [\"cloud-sptheme (>=1.10.1)\", \"sphinx (>=1.6)\", \"sphinxcontrib-fulltoc (>=1.2.0)\"]",
          "1870: totp = [\"cryptography\"]",
          "1872: [[package]]",
          "1873: name = \"pdfkit\"",
          "1874: version = \"1.0.0\"",
          "1875: description = \"Wkhtmltopdf python wrapper to convert html to pdf using the webkit rendering engine and qt\"",
          "1876: optional = false",
          "1877: python-versions = \"*\"",
          "1878: files = [",
          "1879:     {file = \"pdfkit-1.0.0-py2-none-any.whl\", hash = \"sha256:cc122e5aed594198ff7aaa566f2950d2163763576ab891c161bb1f6c630f5a8e\"},",
          "1880:     {file = \"pdfkit-1.0.0-py3-none-any.whl\", hash = \"sha256:a7a4ca0d978e44fa8310c4909f087052430a6e8e0b1dd7ceef657f139789f96f\"},",
          "1881:     {file = \"pdfkit-1.0.0.tar.gz\", hash = \"sha256:992f821e1e18fc8a0e701ecae24b51a2d598296a180caee0a24c0af181da02a9\"},",
          "1882: ]",
          "1884: [[package]]",
          "1885: name = \"peewee\"",
          "1886: version = \"3.16.3\"",
          "1887: description = \"a little orm\"",
          "1888: optional = false",
          "1889: python-versions = \"*\"",
          "1890: files = [",
          "1891:     {file = \"peewee-3.16.3.tar.gz\", hash = \"sha256:12b30e931193bc37b11f7c2ac646e3f67125a8b1a543ad6ab37ad124c8df7d16\"},",
          "1892: ]",
          "1894: [[package]]",
          "1895: name = \"pexpect\"",
          "1896: version = \"4.8.0\"",
          "1897: description = \"Pexpect allows easy control of interactive console applications.\"",
          "1898: optional = false",
          "1899: python-versions = \"*\"",
          "1900: files = [",
          "1901:     {file = \"pexpect-4.8.0-py2.py3-none-any.whl\", hash = \"sha256:0b48a55dcb3c05f3329815901ea4fc1537514d6ba867a152b581d69ae3710937\"},",
          "1902:     {file = \"pexpect-4.8.0.tar.gz\", hash = \"sha256:fc65a43959d153d0114afe13997d439c22823a27cefceb5ff35c2178c6784c0c\"},",
          "1903: ]",
          "1905: [package.dependencies]",
          "1906: ptyprocess = \">=0.5\"",
          "1908: [[package]]",
          "1909: name = \"pickleshare\"",
          "1910: version = \"0.7.5\"",
          "1911: description = \"Tiny 'shelve'-like database with concurrency support\"",
          "1912: optional = false",
          "1913: python-versions = \"*\"",
          "1914: files = [",
          "1915:     {file = \"pickleshare-0.7.5-py2.py3-none-any.whl\", hash = \"sha256:9649af414d74d4df115d5d718f82acb59c9d418196b7b4290ed47a12ce62df56\"},",
          "1916:     {file = \"pickleshare-0.7.5.tar.gz\", hash = \"sha256:87683d47965c1da65cdacaf31c8441d12b8044cdec9aca500cd78fc2c683afca\"},",
          "1917: ]",
          "1919: [[package]]",
          "1920: name = \"pillow\"",
          "1921: version = \"10.0.0\"",
          "1922: description = \"Python Imaging Library (Fork)\"",
          "1923: optional = false",
          "1924: python-versions = \">=3.8\"",
          "1925: files = [",
          "1926:     {file = \"Pillow-10.0.0-cp310-cp310-macosx_10_10_x86_64.whl\", hash = \"sha256:1f62406a884ae75fb2f818694469519fb685cc7eaff05d3451a9ebe55c646891\"},",
          "1927:     {file = \"Pillow-10.0.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:d5db32e2a6ccbb3d34d87c87b432959e0db29755727afb37290e10f6e8e62614\"},",
          "1928:     {file = \"Pillow-10.0.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:edf4392b77bdc81f36e92d3a07a5cd072f90253197f4a52a55a8cec48a12483b\"},",
          "1929:     {file = \"Pillow-10.0.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:520f2a520dc040512699f20fa1c363eed506e94248d71f85412b625026f6142c\"},",
          "1930:     {file = \"Pillow-10.0.0-cp310-cp310-manylinux_2_28_aarch64.whl\", hash = \"sha256:8c11160913e3dd06c8ffdb5f233a4f254cb449f4dfc0f8f4549eda9e542c93d1\"},",
          "1931:     {file = \"Pillow-10.0.0-cp310-cp310-manylinux_2_28_x86_64.whl\", hash = \"sha256:a74ba0c356aaa3bb8e3eb79606a87669e7ec6444be352870623025d75a14a2bf\"},",
          "1932:     {file = \"Pillow-10.0.0-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:d5d0dae4cfd56969d23d94dc8e89fb6a217be461c69090768227beb8ed28c0a3\"},",
          "1933:     {file = \"Pillow-10.0.0-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:22c10cc517668d44b211717fd9775799ccec4124b9a7f7b3635fc5386e584992\"},",
          "1934:     {file = \"Pillow-10.0.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:dffe31a7f47b603318c609f378ebcd57f1554a3a6a8effbc59c3c69f804296de\"},",
          "1935:     {file = \"Pillow-10.0.0-cp311-cp311-macosx_10_10_x86_64.whl\", hash = \"sha256:9fb218c8a12e51d7ead2a7c9e101a04982237d4855716af2e9499306728fb485\"},",
          "1936:     {file = \"Pillow-10.0.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:d35e3c8d9b1268cbf5d3670285feb3528f6680420eafe35cccc686b73c1e330f\"},",
          "1937:     {file = \"Pillow-10.0.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:3ed64f9ca2f0a95411e88a4efbd7a29e5ce2cea36072c53dd9d26d9c76f753b3\"},",
          "1938:     {file = \"Pillow-10.0.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0b6eb5502f45a60a3f411c63187db83a3d3107887ad0d036c13ce836f8a36f1d\"},",
          "1939:     {file = \"Pillow-10.0.0-cp311-cp311-manylinux_2_28_aarch64.whl\", hash = \"sha256:c1fbe7621c167ecaa38ad29643d77a9ce7311583761abf7836e1510c580bf3dd\"},",
          "1940:     {file = \"Pillow-10.0.0-cp311-cp311-manylinux_2_28_x86_64.whl\", hash = \"sha256:cd25d2a9d2b36fcb318882481367956d2cf91329f6892fe5d385c346c0649629\"},",
          "1941:     {file = \"Pillow-10.0.0-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:3b08d4cc24f471b2c8ca24ec060abf4bebc6b144cb89cba638c720546b1cf538\"},",
          "1942:     {file = \"Pillow-10.0.0-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:d737a602fbd82afd892ca746392401b634e278cb65d55c4b7a8f48e9ef8d008d\"},",
          "1943:     {file = \"Pillow-10.0.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:3a82c40d706d9aa9734289740ce26460a11aeec2d9c79b7af87bb35f0073c12f\"},",
          "1944:     {file = \"Pillow-10.0.0-cp311-cp311-win_arm64.whl\", hash = \"sha256:bc2ec7c7b5d66b8ec9ce9f720dbb5fa4bace0f545acd34870eff4a369b44bf37\"},",
          "1945:     {file = \"Pillow-10.0.0-cp312-cp312-macosx_10_10_x86_64.whl\", hash = \"sha256:d80cf684b541685fccdd84c485b31ce73fc5c9b5d7523bf1394ce134a60c6883\"},",
          "1946:     {file = \"Pillow-10.0.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:76de421f9c326da8f43d690110f0e79fe3ad1e54be811545d7d91898b4c8493e\"},",
          "1947:     {file = \"Pillow-10.0.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:81ff539a12457809666fef6624684c008e00ff6bf455b4b89fd00a140eecd640\"},",
          "1948:     {file = \"Pillow-10.0.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ce543ed15570eedbb85df19b0a1a7314a9c8141a36ce089c0a894adbfccb4568\"},",
          "1949:     {file = \"Pillow-10.0.0-cp312-cp312-manylinux_2_28_aarch64.whl\", hash = \"sha256:685ac03cc4ed5ebc15ad5c23bc555d68a87777586d970c2c3e216619a5476223\"},",
          "1950:     {file = \"Pillow-10.0.0-cp312-cp312-manylinux_2_28_x86_64.whl\", hash = \"sha256:d72e2ecc68a942e8cf9739619b7f408cc7b272b279b56b2c83c6123fcfa5cdff\"},",
          "1951:     {file = \"Pillow-10.0.0-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:d50b6aec14bc737742ca96e85d6d0a5f9bfbded018264b3b70ff9d8c33485551\"},",
          "1952:     {file = \"Pillow-10.0.0-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:00e65f5e822decd501e374b0650146063fbb30a7264b4d2744bdd7b913e0cab5\"},",
          "1953:     {file = \"Pillow-10.0.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:f31f9fdbfecb042d046f9d91270a0ba28368a723302786c0009ee9b9f1f60199\"},",
          "1954:     {file = \"Pillow-10.0.0-cp312-cp312-win_arm64.whl\", hash = \"sha256:1ce91b6ec08d866b14413d3f0bbdea7e24dfdc8e59f562bb77bc3fe60b6144ca\"},",
          "1955:     {file = \"Pillow-10.0.0-cp38-cp38-macosx_10_10_x86_64.whl\", hash = \"sha256:349930d6e9c685c089284b013478d6f76e3a534e36ddfa912cde493f235372f3\"},",
          "1956:     {file = \"Pillow-10.0.0-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:3a684105f7c32488f7153905a4e3015a3b6c7182e106fe3c37fbb5ef3e6994c3\"},",
          "1957:     {file = \"Pillow-10.0.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b4f69b3700201b80bb82c3a97d5e9254084f6dd5fb5b16fc1a7b974260f89f43\"},",
          "1958:     {file = \"Pillow-10.0.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3f07ea8d2f827d7d2a49ecf1639ec02d75ffd1b88dcc5b3a61bbb37a8759ad8d\"},",
          "1959:     {file = \"Pillow-10.0.0-cp38-cp38-manylinux_2_28_aarch64.whl\", hash = \"sha256:040586f7d37b34547153fa383f7f9aed68b738992380ac911447bb78f2abe530\"},",
          "1960:     {file = \"Pillow-10.0.0-cp38-cp38-manylinux_2_28_x86_64.whl\", hash = \"sha256:f88a0b92277de8e3ca715a0d79d68dc82807457dae3ab8699c758f07c20b3c51\"},",
          "1961:     {file = \"Pillow-10.0.0-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:c7cf14a27b0d6adfaebb3ae4153f1e516df54e47e42dcc073d7b3d76111a8d86\"},",
          "1962:     {file = \"Pillow-10.0.0-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:3400aae60685b06bb96f99a21e1ada7bc7a413d5f49bce739828ecd9391bb8f7\"},",
          "1963:     {file = \"Pillow-10.0.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:dbc02381779d412145331789b40cc7b11fdf449e5d94f6bc0b080db0a56ea3f0\"},",
          "1964:     {file = \"Pillow-10.0.0-cp39-cp39-macosx_10_10_x86_64.whl\", hash = \"sha256:9211e7ad69d7c9401cfc0e23d49b69ca65ddd898976d660a2fa5904e3d7a9baa\"},",
          "1965:     {file = \"Pillow-10.0.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:faaf07ea35355b01a35cb442dd950d8f1bb5b040a7787791a535de13db15ed90\"},",
          "1966:     {file = \"Pillow-10.0.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c9f72a021fbb792ce98306ffb0c348b3c9cb967dce0f12a49aa4c3d3fdefa967\"},",
          "1967:     {file = \"Pillow-10.0.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9f7c16705f44e0504a3a2a14197c1f0b32a95731d251777dcb060aa83022cb2d\"},",
          "1968:     {file = \"Pillow-10.0.0-cp39-cp39-manylinux_2_28_aarch64.whl\", hash = \"sha256:76edb0a1fa2b4745fb0c99fb9fb98f8b180a1bbceb8be49b087e0b21867e77d3\"},",
          "1969:     {file = \"Pillow-10.0.0-cp39-cp39-manylinux_2_28_x86_64.whl\", hash = \"sha256:368ab3dfb5f49e312231b6f27b8820c823652b7cd29cfbd34090565a015e99ba\"},",
          "1970:     {file = \"Pillow-10.0.0-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:608bfdee0d57cf297d32bcbb3c728dc1da0907519d1784962c5f0c68bb93e5a3\"},",
          "1971:     {file = \"Pillow-10.0.0-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:5c6e3df6bdd396749bafd45314871b3d0af81ff935b2d188385e970052091017\"},",
          "1972:     {file = \"Pillow-10.0.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:7be600823e4c8631b74e4a0d38384c73f680e6105a7d3c6824fcf226c178c7e6\"},",
          "1973:     {file = \"Pillow-10.0.0-pp310-pypy310_pp73-macosx_10_10_x86_64.whl\", hash = \"sha256:92be919bbc9f7d09f7ae343c38f5bb21c973d2576c1d45600fce4b74bafa7ac0\"},",
          "1974:     {file = \"Pillow-10.0.0-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8f8182b523b2289f7c415f589118228d30ac8c355baa2f3194ced084dac2dbba\"},",
          "1975:     {file = \"Pillow-10.0.0-pp310-pypy310_pp73-manylinux_2_28_x86_64.whl\", hash = \"sha256:38250a349b6b390ee6047a62c086d3817ac69022c127f8a5dc058c31ccef17f3\"},",
          "1976:     {file = \"Pillow-10.0.0-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:88af2003543cc40c80f6fca01411892ec52b11021b3dc22ec3bc9d5afd1c5334\"},",
          "1977:     {file = \"Pillow-10.0.0-pp39-pypy39_pp73-macosx_10_10_x86_64.whl\", hash = \"sha256:c189af0545965fa8d3b9613cfdb0cd37f9d71349e0f7750e1fd704648d475ed2\"},",
          "1978:     {file = \"Pillow-10.0.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ce7b031a6fc11365970e6a5686d7ba8c63e4c1cf1ea143811acbb524295eabed\"},",
          "1979:     {file = \"Pillow-10.0.0-pp39-pypy39_pp73-manylinux_2_28_x86_64.whl\", hash = \"sha256:db24668940f82321e746773a4bc617bfac06ec831e5c88b643f91f122a785684\"},",
          "1980:     {file = \"Pillow-10.0.0-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:efe8c0681042536e0d06c11f48cebe759707c9e9abf880ee213541c5b46c5bf3\"},",
          "1981:     {file = \"Pillow-10.0.0.tar.gz\", hash = \"sha256:9c82b5b3e043c7af0d95792d0d20ccf68f61a1fec6b3530e718b688422727396\"},",
          "1982: ]",
          "1984: [package.extras]",
          "1985: docs = [\"furo\", \"olefile\", \"sphinx (>=2.4)\", \"sphinx-copybutton\", \"sphinx-inline-tabs\", \"sphinx-removed-in\", \"sphinxext-opengraph\"]",
          "1986: tests = [\"check-manifest\", \"coverage\", \"defusedxml\", \"markdown2\", \"olefile\", \"packaging\", \"pyroma\", \"pytest\", \"pytest-cov\", \"pytest-timeout\"]",
          "1988: [[package]]",
          "1989: name = \"plotly\"",
          "1990: version = \"5.16.1\"",
          "1991: description = \"An open-source, interactive data visualization library for Python\"",
          "1992: optional = false",
          "1993: python-versions = \">=3.6\"",
          "1994: files = [",
          "1995:     {file = \"plotly-5.16.1-py2.py3-none-any.whl\", hash = \"sha256:19cc34f339acd4e624177806c14df22f388f23fb70658b03aad959a0e650a0dc\"},",
          "1996:     {file = \"plotly-5.16.1.tar.gz\", hash = \"sha256:295ac25edeb18c893abb71dcadcea075b78fd6fdf07cee4217a4e1009667925b\"},",
          "1997: ]",
          "1999: [package.dependencies]",
          "2000: packaging = \"*\"",
          "2001: tenacity = \">=6.2.0\"",
          "2003: [[package]]",
          "2004: name = \"prettytable\"",
          "2005: version = \"3.8.0\"",
          "2006: description = \"A simple Python library for easily displaying tabular data in a visually appealing ASCII table format\"",
          "2007: optional = false",
          "2008: python-versions = \">=3.8\"",
          "2009: files = [",
          "2010:     {file = \"prettytable-3.8.0-py3-none-any.whl\", hash = \"sha256:03481bca25ae0c28958c8cd6ac5165c159ce89f7ccde04d5c899b24b68bb13b7\"},",
          "2011:     {file = \"prettytable-3.8.0.tar.gz\", hash = \"sha256:031eae6a9102017e8c7c7906460d150b7ed78b20fd1d8c8be4edaf88556c07ce\"},",
          "2012: ]",
          "2014: [package.dependencies]",
          "2015: wcwidth = \"*\"",
          "2017: [package.extras]",
          "2018: tests = [\"pytest\", \"pytest-cov\", \"pytest-lazy-fixture\"]",
          "2020: [[package]]",
          "2021: name = \"prompt-toolkit\"",
          "2022: version = \"3.0.39\"",
          "2023: description = \"Library for building powerful interactive command lines in Python\"",
          "2024: optional = false",
          "2025: python-versions = \">=3.7.0\"",
          "2026: files = [",
          "2027:     {file = \"prompt_toolkit-3.0.39-py3-none-any.whl\", hash = \"sha256:9dffbe1d8acf91e3de75f3b544e4842382fc06c6babe903ac9acb74dc6e08d88\"},",
          "2028:     {file = \"prompt_toolkit-3.0.39.tar.gz\", hash = \"sha256:04505ade687dc26dc4284b1ad19a83be2f2afe83e7a828ace0c72f3a1df72aac\"},",
          "2029: ]",
          "2031: [package.dependencies]",
          "2032: wcwidth = \"*\"",
          "2034: [[package]]",
          "2035: name = \"protobuf\"",
          "2036: version = \"4.24.2\"",
          "2037: description = \"\"",
          "2038: optional = false",
          "2039: python-versions = \">=3.7\"",
          "2040: files = [",
          "2041:     {file = \"protobuf-4.24.2-cp310-abi3-win32.whl\", hash = \"sha256:58e12d2c1aa428ece2281cef09bbaa6938b083bcda606db3da4e02e991a0d924\"},",
          "2042:     {file = \"protobuf-4.24.2-cp310-abi3-win_amd64.whl\", hash = \"sha256:77700b55ba41144fc64828e02afb41901b42497b8217b558e4a001f18a85f2e3\"},",
          "2043:     {file = \"protobuf-4.24.2-cp37-abi3-macosx_10_9_universal2.whl\", hash = \"sha256:237b9a50bd3b7307d0d834c1b0eb1a6cd47d3f4c2da840802cd03ea288ae8880\"},",
          "2044:     {file = \"protobuf-4.24.2-cp37-abi3-manylinux2014_aarch64.whl\", hash = \"sha256:25ae91d21e3ce8d874211110c2f7edd6384816fb44e06b2867afe35139e1fd1c\"},",
          "2045:     {file = \"protobuf-4.24.2-cp37-abi3-manylinux2014_x86_64.whl\", hash = \"sha256:c00c3c7eb9ad3833806e21e86dca448f46035242a680f81c3fe068ff65e79c74\"},",
          "2046:     {file = \"protobuf-4.24.2-cp37-cp37m-win32.whl\", hash = \"sha256:4e69965e7e54de4db989289a9b971a099e626f6167a9351e9d112221fc691bc1\"},",
          "2047:     {file = \"protobuf-4.24.2-cp37-cp37m-win_amd64.whl\", hash = \"sha256:c5cdd486af081bf752225b26809d2d0a85e575b80a84cde5172a05bbb1990099\"},",
          "2048:     {file = \"protobuf-4.24.2-cp38-cp38-win32.whl\", hash = \"sha256:6bd26c1fa9038b26c5c044ee77e0ecb18463e957fefbaeb81a3feb419313a54e\"},",
          "2049:     {file = \"protobuf-4.24.2-cp38-cp38-win_amd64.whl\", hash = \"sha256:bb7aa97c252279da65584af0456f802bd4b2de429eb945bbc9b3d61a42a8cd16\"},",
          "2050:     {file = \"protobuf-4.24.2-cp39-cp39-win32.whl\", hash = \"sha256:2b23bd6e06445699b12f525f3e92a916f2dcf45ffba441026357dea7fa46f42b\"},",
          "2051:     {file = \"protobuf-4.24.2-cp39-cp39-win_amd64.whl\", hash = \"sha256:839952e759fc40b5d46be319a265cf94920174d88de31657d5622b5d8d6be5cd\"},",
          "2052:     {file = \"protobuf-4.24.2-py3-none-any.whl\", hash = \"sha256:3b7b170d3491ceed33f723bbf2d5a260f8a4e23843799a3906f16ef736ef251e\"},",
          "2053:     {file = \"protobuf-4.24.2.tar.gz\", hash = \"sha256:7fda70797ddec31ddfa3576cbdcc3ddbb6b3078b737a1a87ab9136af0570cd6e\"},",
          "2054: ]",
          "2056: [[package]]",
          "2057: name = \"psutil\"",
          "2058: version = \"5.9.5\"",
          "2059: description = \"Cross-platform lib for process and system monitoring in Python.\"",
          "2060: optional = false",
          "2061: python-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"",
          "2062: files = [",
          "2063:     {file = \"psutil-5.9.5-cp27-cp27m-macosx_10_9_x86_64.whl\", hash = \"sha256:be8929ce4313f9f8146caad4272f6abb8bf99fc6cf59344a3167ecd74f4f203f\"},",
          "2064:     {file = \"psutil-5.9.5-cp27-cp27m-manylinux2010_i686.whl\", hash = \"sha256:ab8ed1a1d77c95453db1ae00a3f9c50227ebd955437bcf2a574ba8adbf6a74d5\"},",
          "2065:     {file = \"psutil-5.9.5-cp27-cp27m-manylinux2010_x86_64.whl\", hash = \"sha256:4aef137f3345082a3d3232187aeb4ac4ef959ba3d7c10c33dd73763fbc063da4\"},",
          "2066:     {file = \"psutil-5.9.5-cp27-cp27mu-manylinux2010_i686.whl\", hash = \"sha256:ea8518d152174e1249c4f2a1c89e3e6065941df2fa13a1ab45327716a23c2b48\"},",
          "2067:     {file = \"psutil-5.9.5-cp27-cp27mu-manylinux2010_x86_64.whl\", hash = \"sha256:acf2aef9391710afded549ff602b5887d7a2349831ae4c26be7c807c0a39fac4\"},",
          "2068:     {file = \"psutil-5.9.5-cp27-none-win32.whl\", hash = \"sha256:5b9b8cb93f507e8dbaf22af6a2fd0ccbe8244bf30b1baad6b3954e935157ae3f\"},",
          "2069:     {file = \"psutil-5.9.5-cp27-none-win_amd64.whl\", hash = \"sha256:8c5f7c5a052d1d567db4ddd231a9d27a74e8e4a9c3f44b1032762bd7b9fdcd42\"},",
          "2070:     {file = \"psutil-5.9.5-cp36-abi3-macosx_10_9_x86_64.whl\", hash = \"sha256:3c6f686f4225553615612f6d9bc21f1c0e305f75d7d8454f9b46e901778e7217\"},",
          "2071:     {file = \"psutil-5.9.5-cp36-abi3-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:7a7dd9997128a0d928ed4fb2c2d57e5102bb6089027939f3b722f3a210f9a8da\"},",
          "2072:     {file = \"psutil-5.9.5-cp36-abi3-manylinux_2_12_x86_64.manylinux2010_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:89518112647f1276b03ca97b65cc7f64ca587b1eb0278383017c2a0dcc26cbe4\"},",
          "2073:     {file = \"psutil-5.9.5-cp36-abi3-win32.whl\", hash = \"sha256:104a5cc0e31baa2bcf67900be36acde157756b9c44017b86b2c049f11957887d\"},",
          "2074:     {file = \"psutil-5.9.5-cp36-abi3-win_amd64.whl\", hash = \"sha256:b258c0c1c9d145a1d5ceffab1134441c4c5113b2417fafff7315a917a026c3c9\"},",
          "2075:     {file = \"psutil-5.9.5-cp38-abi3-macosx_11_0_arm64.whl\", hash = \"sha256:c607bb3b57dc779d55e1554846352b4e358c10fff3abf3514a7a6601beebdb30\"},",
          "2076:     {file = \"psutil-5.9.5.tar.gz\", hash = \"sha256:5410638e4df39c54d957fc51ce03048acd8e6d60abc0f5107af51e5fb566eb3c\"},",
          "2077: ]",
          "2079: [package.extras]",
          "2080: test = [\"enum34\", \"ipaddress\", \"mock\", \"pywin32\", \"wmi\"]",
          "2082: [[package]]",
          "2083: name = \"ptyprocess\"",
          "2084: version = \"0.7.0\"",
          "2085: description = \"Run a subprocess in a pseudo terminal\"",
          "2086: optional = false",
          "2087: python-versions = \"*\"",
          "2088: files = [",
          "2089:     {file = \"ptyprocess-0.7.0-py2.py3-none-any.whl\", hash = \"sha256:4b41f3967fce3af57cc7e94b888626c18bf37a083e3651ca8feeb66d492fef35\"},",
          "2090:     {file = \"ptyprocess-0.7.0.tar.gz\", hash = \"sha256:5c5d0a3b48ceee0b48485e0c26037c0acd7d29765ca3fbb5cb3831d347423220\"},",
          "2091: ]",
          "2093: [[package]]",
          "2094: name = \"publicsuffix2\"",
          "2095: version = \"2.20191221\"",
          "2096: description = \"Get a public suffix for a domain name using the Public Suffix List. Forked from and using the same API as the publicsuffix package.\"",
          "2097: optional = false",
          "2098: python-versions = \"*\"",
          "2099: files = [",
          "2100:     {file = \"publicsuffix2-2.20191221-py2.py3-none-any.whl\", hash = \"sha256:786b5e36205b88758bd3518725ec8cfe7a8173f5269354641f581c6b80a99893\"},",
          "2101:     {file = \"publicsuffix2-2.20191221.tar.gz\", hash = \"sha256:00f8cc31aa8d0d5592a5ced19cccba7de428ebca985db26ac852d920ddd6fe7b\"},",
          "2102: ]",
          "2104: [[package]]",
          "2105: name = \"pure-eval\"",
          "2106: version = \"0.2.2\"",
          "2107: description = \"Safely evaluate AST nodes without side effects\"",
          "2108: optional = false",
          "2109: python-versions = \"*\"",
          "2110: files = [",
          "2111:     {file = \"pure_eval-0.2.2-py3-none-any.whl\", hash = \"sha256:01eaab343580944bc56080ebe0a674b39ec44a945e6d09ba7db3cb8cec289350\"},",
          "2112:     {file = \"pure_eval-0.2.2.tar.gz\", hash = \"sha256:2b45320af6dfaa1750f543d714b6d1c520a1688dec6fd24d339063ce0aaa9ac3\"},",
          "2113: ]",
          "2115: [package.extras]",
          "2116: tests = [\"pytest\"]",
          "2118: [[package]]",
          "2119: name = \"pyasn1\"",
          "2120: version = \"0.5.0\"",
          "2121: description = \"Pure-Python implementation of ASN.1 types and DER/BER/CER codecs (X.208)\"",
          "2122: optional = false",
          "2123: python-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,>=2.7\"",
          "2124: files = [",
          "2125:     {file = \"pyasn1-0.5.0-py2.py3-none-any.whl\", hash = \"sha256:87a2121042a1ac9358cabcaf1d07680ff97ee6404333bacca15f76aa8ad01a57\"},",
          "2126:     {file = \"pyasn1-0.5.0.tar.gz\", hash = \"sha256:97b7290ca68e62a832558ec3976f15cbf911bf5d7c7039d8b861c2a0ece69fde\"},",
          "2127: ]",
          "2129: [[package]]",
          "2130: name = \"pycparser\"",
          "2131: version = \"2.21\"",
          "2132: description = \"C parser in Python\"",
          "2133: optional = false",
          "2134: python-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"",
          "2135: files = [",
          "2136:     {file = \"pycparser-2.21-py2.py3-none-any.whl\", hash = \"sha256:8ee45429555515e1f6b185e78100aea234072576aa43ab53aefcae078162fca9\"},",
          "2137:     {file = \"pycparser-2.21.tar.gz\", hash = \"sha256:e644fdec12f7872f86c58ff790da456218b10f863970249516d60a5eaca77206\"},",
          "2138: ]",
          "2140: [[package]]",
          "2141: name = \"pydivert\"",
          "2142: version = \"2.1.0\"",
          "2143: description = \"Python binding to windivert driver\"",
          "2144: optional = false",
          "2145: python-versions = \"*\"",
          "2146: files = [",
          "2147:     {file = \"pydivert-2.1.0-py2.py3-none-any.whl\", hash = \"sha256:382db488e3c37c03ec9ec94e061a0b24334d78dbaeebb7d4e4d32ce4355d9da1\"},",
          "2148:     {file = \"pydivert-2.1.0.tar.gz\", hash = \"sha256:f0e150f4ff591b78e35f514e319561dadff7f24a82186a171dd4d465483de5b4\"},",
          "2149: ]",
          "2151: [package.extras]",
          "2152: docs = [\"sphinx (>=1.4.8)\"]",
          "2153: test = [\"codecov (>=2.0.5)\", \"hypothesis (>=3.5.3)\", \"mock (>=1.0.1)\", \"pytest (>=3.0.3)\", \"pytest-cov (>=2.2.1)\", \"pytest-faulthandler (>=1.3.0,<2)\", \"pytest-timeout (>=1.0.0,<2)\", \"wheel (>=0.29)\"]",
          "2155: [[package]]",
          "2156: name = \"pydot\"",
          "2157: version = \"1.4.2\"",
          "2158: description = \"Python interface to Graphviz's Dot\"",
          "2159: optional = false",
          "2160: python-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"",
          "2161: files = [",
          "2162:     {file = \"pydot-1.4.2-py2.py3-none-any.whl\", hash = \"sha256:66c98190c65b8d2e2382a441b4c0edfdb4f4c025ef9cb9874de478fb0793a451\"},",
          "2163:     {file = \"pydot-1.4.2.tar.gz\", hash = \"sha256:248081a39bcb56784deb018977e428605c1c758f10897a339fce1dd728ff007d\"},",
          "2164: ]",
          "2166: [package.dependencies]",
          "2167: pyparsing = \">=2.1.4\"",
          "2169: [[package]]",
          "2170: name = \"pygments\"",
          "2171: version = \"2.16.1\"",
          "2172: description = \"Pygments is a syntax highlighting package written in Python.\"",
          "2173: optional = false",
          "2174: python-versions = \">=3.7\"",
          "2175: files = [",
          "2176:     {file = \"Pygments-2.16.1-py3-none-any.whl\", hash = \"sha256:13fc09fa63bc8d8671a6d247e1eb303c4b343eaee81d861f3404db2935653692\"},",
          "2177:     {file = \"Pygments-2.16.1.tar.gz\", hash = \"sha256:1daff0494820c69bc8941e407aa20f577374ee88364ee10a98fdbe0aece96e29\"},",
          "2178: ]",
          "2180: [package.extras]",
          "2181: plugins = [\"importlib-metadata\"]",
          "2183: [[package]]",
          "2184: name = \"pyopenssl\"",
          "2185: version = \"22.1.0\"",
          "2186: description = \"Python wrapper module around the OpenSSL library\"",
          "2187: optional = false",
          "2188: python-versions = \">=3.6\"",
          "2189: files = [",
          "2190:     {file = \"pyOpenSSL-22.1.0-py3-none-any.whl\", hash = \"sha256:b28437c9773bb6c6958628cf9c3bebe585de661dba6f63df17111966363dd15e\"},",
          "2191:     {file = \"pyOpenSSL-22.1.0.tar.gz\", hash = \"sha256:7a83b7b272dd595222d672f5ce29aa030f1fb837630ef229f62e72e395ce8968\"},",
          "2192: ]",
          "2194: [package.dependencies]",
          "2195: cryptography = \">=38.0.0,<39\"",
          "2197: [package.extras]",
          "2198: docs = [\"sphinx (!=5.2.0,!=5.2.0.post0)\", \"sphinx-rtd-theme\"]",
          "2199: test = [\"flaky\", \"pretend\", \"pytest (>=3.0.1)\"]",
          "2201: [[package]]",
          "2202: name = \"pyparsing\"",
          "2203: version = \"3.0.9\"",
          "2204: description = \"pyparsing module - Classes and methods to define and execute parsing grammars\"",
          "2205: optional = false",
          "2206: python-versions = \">=3.6.8\"",
          "2207: files = [",
          "2208:     {file = \"pyparsing-3.0.9-py3-none-any.whl\", hash = \"sha256:5026bae9a10eeaefb61dab2f09052b9f4307d44aee4eda64b309723d8d206bbc\"},",
          "2209:     {file = \"pyparsing-3.0.9.tar.gz\", hash = \"sha256:2b020ecf7d21b687f219b71ecad3631f644a47f01403fa1d1036b0c6416d70fb\"},",
          "2210: ]",
          "2212: [package.extras]",
          "2213: diagrams = [\"jinja2\", \"railroad-diagrams\"]",
          "2215: [[package]]",
          "2216: name = \"pyperclip\"",
          "2217: version = \"1.8.2\"",
          "2218: description = \"A cross-platform clipboard module for Python. (Only handles plain text for now.)\"",
          "2219: optional = false",
          "2220: python-versions = \"*\"",
          "2221: files = [",
          "2222:     {file = \"pyperclip-1.8.2.tar.gz\", hash = \"sha256:105254a8b04934f0bc84e9c24eb360a591aaf6535c9def5f29d92af107a9bf57\"},",
          "2223: ]",
          "2225: [[package]]",
          "2226: name = \"pyrsistent\"",
          "2227: version = \"0.19.3\"",
          "2228: description = \"Persistent/Functional/Immutable data structures\"",
          "2229: optional = false",
          "2230: python-versions = \">=3.7\"",
          "2231: files = [",
          "2232:     {file = \"pyrsistent-0.19.3-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:20460ac0ea439a3e79caa1dbd560344b64ed75e85d8703943e0b66c2a6150e4a\"},",
          "2233:     {file = \"pyrsistent-0.19.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4c18264cb84b5e68e7085a43723f9e4c1fd1d935ab240ce02c0324a8e01ccb64\"},",
          "2234:     {file = \"pyrsistent-0.19.3-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:4b774f9288dda8d425adb6544e5903f1fb6c273ab3128a355c6b972b7df39dcf\"},",
          "2235:     {file = \"pyrsistent-0.19.3-cp310-cp310-win32.whl\", hash = \"sha256:5a474fb80f5e0d6c9394d8db0fc19e90fa540b82ee52dba7d246a7791712f74a\"},",
          "2236:     {file = \"pyrsistent-0.19.3-cp310-cp310-win_amd64.whl\", hash = \"sha256:49c32f216c17148695ca0e02a5c521e28a4ee6c5089f97e34fe24163113722da\"},",
          "2237:     {file = \"pyrsistent-0.19.3-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:f0774bf48631f3a20471dd7c5989657b639fd2d285b861237ea9e82c36a415a9\"},",
          "2238:     {file = \"pyrsistent-0.19.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:3ab2204234c0ecd8b9368dbd6a53e83c3d4f3cab10ecaf6d0e772f456c442393\"},",
          "2239:     {file = \"pyrsistent-0.19.3-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:e42296a09e83028b3476f7073fcb69ffebac0e66dbbfd1bd847d61f74db30f19\"},",
          "2240:     {file = \"pyrsistent-0.19.3-cp311-cp311-win32.whl\", hash = \"sha256:64220c429e42a7150f4bfd280f6f4bb2850f95956bde93c6fda1b70507af6ef3\"},",
          "2241:     {file = \"pyrsistent-0.19.3-cp311-cp311-win_amd64.whl\", hash = \"sha256:016ad1afadf318eb7911baa24b049909f7f3bb2c5b1ed7b6a8f21db21ea3faa8\"},",
          "2242:     {file = \"pyrsistent-0.19.3-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:c4db1bd596fefd66b296a3d5d943c94f4fac5bcd13e99bffe2ba6a759d959a28\"},",
          "2243:     {file = \"pyrsistent-0.19.3-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:aeda827381f5e5d65cced3024126529ddc4289d944f75e090572c77ceb19adbf\"},",
          "2244:     {file = \"pyrsistent-0.19.3-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:42ac0b2f44607eb92ae88609eda931a4f0dfa03038c44c772e07f43e738bcac9\"},",
          "2245:     {file = \"pyrsistent-0.19.3-cp37-cp37m-win32.whl\", hash = \"sha256:e8f2b814a3dc6225964fa03d8582c6e0b6650d68a232df41e3cc1b66a5d2f8d1\"},",
          "2246:     {file = \"pyrsistent-0.19.3-cp37-cp37m-win_amd64.whl\", hash = \"sha256:c9bb60a40a0ab9aba40a59f68214eed5a29c6274c83b2cc206a359c4a89fa41b\"},",
          "2247:     {file = \"pyrsistent-0.19.3-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:a2471f3f8693101975b1ff85ffd19bb7ca7dd7c38f8a81701f67d6b4f97b87d8\"},",
          "2248:     {file = \"pyrsistent-0.19.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:cc5d149f31706762c1f8bda2e8c4f8fead6e80312e3692619a75301d3dbb819a\"},",
          "2249:     {file = \"pyrsistent-0.19.3-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:3311cb4237a341aa52ab8448c27e3a9931e2ee09561ad150ba94e4cfd3fc888c\"},",
          "2250:     {file = \"pyrsistent-0.19.3-cp38-cp38-win32.whl\", hash = \"sha256:f0e7c4b2f77593871e918be000b96c8107da48444d57005b6a6bc61fb4331b2c\"},",
          "2251:     {file = \"pyrsistent-0.19.3-cp38-cp38-win_amd64.whl\", hash = \"sha256:c147257a92374fde8498491f53ffa8f4822cd70c0d85037e09028e478cababb7\"},",
          "2252:     {file = \"pyrsistent-0.19.3-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:b735e538f74ec31378f5a1e3886a26d2ca6351106b4dfde376a26fc32a044edc\"},",
          "2253:     {file = \"pyrsistent-0.19.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:99abb85579e2165bd8522f0c0138864da97847875ecbd45f3e7e2af569bfc6f2\"},",
          "2254:     {file = \"pyrsistent-0.19.3-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:3a8cb235fa6d3fd7aae6a4f1429bbb1fec1577d978098da1252f0489937786f3\"},",
          "2255:     {file = \"pyrsistent-0.19.3-cp39-cp39-win32.whl\", hash = \"sha256:c74bed51f9b41c48366a286395c67f4e894374306b197e62810e0fdaf2364da2\"},",
          "2256:     {file = \"pyrsistent-0.19.3-cp39-cp39-win_amd64.whl\", hash = \"sha256:878433581fc23e906d947a6814336eee031a00e6defba224234169ae3d3d6a98\"},",
          "2257:     {file = \"pyrsistent-0.19.3-py3-none-any.whl\", hash = \"sha256:ccf0d6bd208f8111179f0c26fdf84ed7c3891982f2edaeae7422575f47e66b64\"},",
          "2258:     {file = \"pyrsistent-0.19.3.tar.gz\", hash = \"sha256:1a2994773706bbb4995c31a97bc94f1418314923bd1048c6d964837040376440\"},",
          "2259: ]",
          "2261: [[package]]",
          "2262: name = \"python-dateutil\"",
          "2263: version = \"2.8.2\"",
          "2264: description = \"Extensions to the standard Python datetime module\"",
          "2265: optional = false",
          "2266: python-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,>=2.7\"",
          "2267: files = [",
          "2268:     {file = \"python-dateutil-2.8.2.tar.gz\", hash = \"sha256:0123cacc1627ae19ddf3c27a5de5bd67ee4586fbdd6440d9748f8abb483d3e86\"},",
          "2269:     {file = \"python_dateutil-2.8.2-py2.py3-none-any.whl\", hash = \"sha256:961d03dc3453ebbc59dbdea9e4e11c5651520a876d0f4db161e8674aae935da9\"},",
          "2270: ]",
          "2272: [package.dependencies]",
          "2273: six = \">=1.5\"",
          "2275: [[package]]",
          "2276: name = \"python-lsp-jsonrpc\"",
          "2277: version = \"1.0.0\"",
          "2278: description = \"JSON RPC 2.0 server library\"",
          "2279: optional = false",
          "2280: python-versions = \"*\"",
          "2281: files = [",
          "2282:     {file = \"python-lsp-jsonrpc-1.0.0.tar.gz\", hash = \"sha256:7bec170733db628d3506ea3a5288ff76aa33c70215ed223abdb0d95e957660bd\"},",
          "2283:     {file = \"python_lsp_jsonrpc-1.0.0-py3-none-any.whl\", hash = \"sha256:079b143be64b0a378bdb21dff5e28a8c1393fe7e8a654ef068322d754e545fc7\"},",
          "2284: ]",
          "2286: [package.dependencies]",
          "2287: ujson = \">=3.0.0\"",
          "2289: [package.extras]",
          "2290: test = [\"coverage\", \"pycodestyle\", \"pyflakes\", \"pylint\", \"pytest\", \"pytest-cov\"]",
          "2292: [[package]]",
          "2293: name = \"pyyaml\"",
          "2294: version = \"6.0.1\"",
          "2295: description = \"YAML parser and emitter for Python\"",
          "2296: optional = false",
          "2297: python-versions = \">=3.6\"",
          "2298: files = [",
          "2299:     {file = \"PyYAML-6.0.1-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:d858aa552c999bc8a8d57426ed01e40bef403cd8ccdd0fc5f6f04a00414cac2a\"},",
          "2300:     {file = \"PyYAML-6.0.1-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:fd66fc5d0da6d9815ba2cebeb4205f95818ff4b79c3ebe268e75d961704af52f\"},",
          "2301:     {file = \"PyYAML-6.0.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:69b023b2b4daa7548bcfbd4aa3da05b3a74b772db9e23b982788168117739938\"},",
          "2302:     {file = \"PyYAML-6.0.1-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:81e0b275a9ecc9c0c0c07b4b90ba548307583c125f54d5b6946cfee6360c733d\"},",
          "2303:     {file = \"PyYAML-6.0.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ba336e390cd8e4d1739f42dfe9bb83a3cc2e80f567d8805e11b46f4a943f5515\"},",
          "2304:     {file = \"PyYAML-6.0.1-cp310-cp310-win32.whl\", hash = \"sha256:bd4af7373a854424dabd882decdc5579653d7868b8fb26dc7d0e99f823aa5924\"},",
          "2305:     {file = \"PyYAML-6.0.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:fd1592b3fdf65fff2ad0004b5e363300ef59ced41c2e6b3a99d4089fa8c5435d\"},",
          "2306:     {file = \"PyYAML-6.0.1-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:6965a7bc3cf88e5a1c3bd2e0b5c22f8d677dc88a455344035f03399034eb3007\"},",
          "2307:     {file = \"PyYAML-6.0.1-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:f003ed9ad21d6a4713f0a9b5a7a0a79e08dd0f221aff4525a2be4c346ee60aab\"},",
          "2308:     {file = \"PyYAML-6.0.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:42f8152b8dbc4fe7d96729ec2b99c7097d656dc1213a3229ca5383f973a5ed6d\"},",
          "2309:     {file = \"PyYAML-6.0.1-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:062582fca9fabdd2c8b54a3ef1c978d786e0f6b3a1510e0ac93ef59e0ddae2bc\"},",
          "2310:     {file = \"PyYAML-6.0.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d2b04aac4d386b172d5b9692e2d2da8de7bfb6c387fa4f801fbf6fb2e6ba4673\"},",
          "2311:     {file = \"PyYAML-6.0.1-cp311-cp311-win32.whl\", hash = \"sha256:1635fd110e8d85d55237ab316b5b011de701ea0f29d07611174a1b42f1444741\"},",
          "2312:     {file = \"PyYAML-6.0.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:bf07ee2fef7014951eeb99f56f39c9bb4af143d8aa3c21b1677805985307da34\"},",
          "2313:     {file = \"PyYAML-6.0.1-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:50550eb667afee136e9a77d6dc71ae76a44df8b3e51e41b77f6de2932bfe0f47\"},",
          "2314:     {file = \"PyYAML-6.0.1-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1fe35611261b29bd1de0070f0b2f47cb6ff71fa6595c077e42bd0c419fa27b98\"},",
          "2315:     {file = \"PyYAML-6.0.1-cp36-cp36m-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:704219a11b772aea0d8ecd7058d0082713c3562b4e271b849ad7dc4a5c90c13c\"},",
          "2316:     {file = \"PyYAML-6.0.1-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:afd7e57eddb1a54f0f1a974bc4391af8bcce0b444685d936840f125cf046d5bd\"},",
          "2317:     {file = \"PyYAML-6.0.1-cp36-cp36m-win32.whl\", hash = \"sha256:fca0e3a251908a499833aa292323f32437106001d436eca0e6e7833256674585\"},",
          "2318:     {file = \"PyYAML-6.0.1-cp36-cp36m-win_amd64.whl\", hash = \"sha256:f22ac1c3cac4dbc50079e965eba2c1058622631e526bd9afd45fedd49ba781fa\"},",
          "2319:     {file = \"PyYAML-6.0.1-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:b1275ad35a5d18c62a7220633c913e1b42d44b46ee12554e5fd39c70a243d6a3\"},",
          "2320:     {file = \"PyYAML-6.0.1-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:18aeb1bf9a78867dc38b259769503436b7c72f7a1f1f4c93ff9a17de54319b27\"},",
          "2321:     {file = \"PyYAML-6.0.1-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:596106435fa6ad000c2991a98fa58eeb8656ef2325d7e158344fb33864ed87e3\"},",
          "2322:     {file = \"PyYAML-6.0.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:baa90d3f661d43131ca170712d903e6295d1f7a0f595074f151c0aed377c9b9c\"},",
          "2323:     {file = \"PyYAML-6.0.1-cp37-cp37m-win32.whl\", hash = \"sha256:9046c58c4395dff28dd494285c82ba00b546adfc7ef001486fbf0324bc174fba\"},",
          "2324:     {file = \"PyYAML-6.0.1-cp37-cp37m-win_amd64.whl\", hash = \"sha256:4fb147e7a67ef577a588a0e2c17b6db51dda102c71de36f8549b6816a96e1867\"},",
          "2325:     {file = \"PyYAML-6.0.1-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:1d4c7e777c441b20e32f52bd377e0c409713e8bb1386e1099c2415f26e479595\"},",
          "2326:     {file = \"PyYAML-6.0.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a0cd17c15d3bb3fa06978b4e8958dcdc6e0174ccea823003a106c7d4d7899ac5\"},",
          "2327:     {file = \"PyYAML-6.0.1-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:28c119d996beec18c05208a8bd78cbe4007878c6dd15091efb73a30e90539696\"},",
          "2328:     {file = \"PyYAML-6.0.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7e07cbde391ba96ab58e532ff4803f79c4129397514e1413a7dc761ccd755735\"},",
          "2329:     {file = \"PyYAML-6.0.1-cp38-cp38-win32.whl\", hash = \"sha256:184c5108a2aca3c5b3d3bf9395d50893a7ab82a38004c8f61c258d4428e80206\"},",
          "2330:     {file = \"PyYAML-6.0.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:1e2722cc9fbb45d9b87631ac70924c11d3a401b2d7f410cc0e3bbf249f2dca62\"},",
          "2331:     {file = \"PyYAML-6.0.1-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:9eb6caa9a297fc2c2fb8862bc5370d0303ddba53ba97e71f08023b6cd73d16a8\"},",
          "2332:     {file = \"PyYAML-6.0.1-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:c8098ddcc2a85b61647b2590f825f3db38891662cfc2fc776415143f599bb859\"},",
          "2333:     {file = \"PyYAML-6.0.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5773183b6446b2c99bb77e77595dd486303b4faab2b086e7b17bc6bef28865f6\"},",
          "2334:     {file = \"PyYAML-6.0.1-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:b786eecbdf8499b9ca1d697215862083bd6d2a99965554781d0d8d1ad31e13a0\"},",
          "2335:     {file = \"PyYAML-6.0.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bc1bf2925a1ecd43da378f4db9e4f799775d6367bdb94671027b73b393a7c42c\"},",
          "2336:     {file = \"PyYAML-6.0.1-cp39-cp39-win32.whl\", hash = \"sha256:faca3bdcf85b2fc05d06ff3fbc1f83e1391b3e724afa3feba7d13eeab355484c\"},",
          "2337:     {file = \"PyYAML-6.0.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:510c9deebc5c0225e8c96813043e62b680ba2f9c50a08d3724c7f28a747d1486\"},",
          "2338:     {file = \"PyYAML-6.0.1.tar.gz\", hash = \"sha256:bfdf460b1736c775f2ba9f6a92bca30bc2095067b8a9d77876d1fad6cc3b4a43\"},",
          "2339: ]",
          "2341: [[package]]",
          "2342: name = \"quark-engine\"",
          "2343: version = \"23.7.1\"",
          "2344: description = \"An Obfuscation-Neglect Android Malware Scoring System\"",
          "2345: optional = false",
          "2346: python-versions = \">=3.8\"",
          "2347: files = [",
          "2348:     {file = \"quark-engine-23.7.1.tar.gz\", hash = \"sha256:bd9478cd5575a7a2a8655e09568b875edff59e0421c3fb97df10b703f2cab857\"},",
          "2349:     {file = \"quark_engine-23.7.1-py3-none-any.whl\", hash = \"sha256:2473f5f3155e5e930f6a4f2078e6486abff048be697edb2bbea98cda6ba47771\"},",
          "2350: ]",
          "2352: [package.dependencies]",
          "2353: androguard = \"3.4.0a1\"",
          "2354: click = \"*\"",
          "2355: colorama = \"*\"",
          "2356: graphviz = \"*\"",
          "2357: plotly = \"*\"",
          "2358: prettytable = \">=1.0.0\"",
          "2359: prompt-toolkit = \"*\"",
          "2360: rzpipe = \"*\"",
          "2361: tqdm = \"*\"",
          "2363: [[package]]",
          "2364: name = \"requests\"",
          "2365: version = \"2.31.0\"",
          "2366: description = \"Python HTTP for Humans.\"",
          "2367: optional = false",
          "2368: python-versions = \">=3.7\"",
          "2369: files = [",
          "2370:     {file = \"requests-2.31.0-py3-none-any.whl\", hash = \"sha256:58cd2187c01e70e6e26505bca751777aa9f2ee0b7f4300988b709f44e013003f\"},",
          "2371:     {file = \"requests-2.31.0.tar.gz\", hash = \"sha256:942c5a758f98d790eaed1a29cb6eefc7ffb0d1cf7af05c3d2791656dbd6ad1e1\"},",
          "2372: ]",
          "2374: [package.dependencies]",
          "2375: certifi = \">=2017.4.17\"",
          "2376: charset-normalizer = \">=2,<4\"",
          "2377: idna = \">=2.5,<4\"",
          "2378: urllib3 = \">=1.21.1,<3\"",
          "2380: [package.extras]",
          "2381: socks = [\"PySocks (>=1.5.6,!=1.5.7)\"]",
          "2382: use-chardet-on-py3 = [\"chardet (>=3.0.2,<6)\"]",
          "2384: [[package]]",
          "2385: name = \"requests-file\"",
          "2386: version = \"1.5.1\"",
          "2387: description = \"File transport adapter for Requests\"",
          "2388: optional = false",
          "2389: python-versions = \"*\"",
          "2390: files = [",
          "2391:     {file = \"requests-file-1.5.1.tar.gz\", hash = \"sha256:07d74208d3389d01c38ab89ef403af0cfec63957d53a0081d8eca738d0247d8e\"},",
          "2392:     {file = \"requests_file-1.5.1-py2.py3-none-any.whl\", hash = \"sha256:dfe5dae75c12481f68ba353183c53a65e6044c923e64c24b2209f6c7570ca953\"},",
          "2393: ]",
          "2395: [package.dependencies]",
          "2396: requests = \">=1.0.0\"",
          "2397: six = \"*\"",
          "2399: [[package]]",
          "2400: name = \"rsa\"",
          "2401: version = \"4.9\"",
          "2402: description = \"Pure-Python RSA implementation\"",
          "2403: optional = false",
          "2404: python-versions = \">=3.6,<4\"",
          "2405: files = [",
          "2406:     {file = \"rsa-4.9-py3-none-any.whl\", hash = \"sha256:90260d9058e514786967344d0ef75fa8727eed8a7d2e43ce9f4bcf1b536174f7\"},",
          "2407:     {file = \"rsa-4.9.tar.gz\", hash = \"sha256:e38464a49c6c85d7f1351b0126661487a7e0a14a50f1675ec50eb34d4f20ef21\"},",
          "2408: ]",
          "2410: [package.dependencies]",
          "2411: pyasn1 = \">=0.1.3\"",
          "2413: [[package]]",
          "2414: name = \"ruamel-yaml\"",
          "2415: version = \"0.17.32\"",
          "2416: description = \"ruamel.yaml is a YAML parser/emitter that supports roundtrip preservation of comments, seq/map flow style, and map key order\"",
          "2417: optional = false",
          "2418: python-versions = \">=3\"",
          "2419: files = [",
          "2420:     {file = \"ruamel.yaml-0.17.32-py3-none-any.whl\", hash = \"sha256:23cd2ed620231677564646b0c6a89d138b6822a0d78656df7abda5879ec4f447\"},",
          "2421:     {file = \"ruamel.yaml-0.17.32.tar.gz\", hash = \"sha256:ec939063761914e14542972a5cba6d33c23b0859ab6342f61cf070cfc600efc2\"},",
          "2422: ]",
          "2424: [package.dependencies]",
          "2425: \"ruamel.yaml.clib\" = {version = \">=0.2.7\", markers = \"platform_python_implementation == \\\"CPython\\\" and python_version < \\\"3.12\\\"\"}",
          "2427: [package.extras]",
          "2428: docs = [\"ryd\"]",
          "2429: jinja2 = [\"ruamel.yaml.jinja2 (>=0.2)\"]",
          "2431: [[package]]",
          "2432: name = \"ruamel-yaml-clib\"",
          "2433: version = \"0.2.7\"",
          "2434: description = \"C version of reader, parser and emitter for ruamel.yaml derived from libyaml\"",
          "2435: optional = false",
          "2436: python-versions = \">=3.5\"",
          "2437: files = [",
          "2438:     {file = \"ruamel.yaml.clib-0.2.7-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:d5859983f26d8cd7bb5c287ef452e8aacc86501487634573d260968f753e1d71\"},",
          "2439:     {file = \"ruamel.yaml.clib-0.2.7-cp310-cp310-macosx_12_0_arm64.whl\", hash = \"sha256:debc87a9516b237d0466a711b18b6ebeb17ba9f391eb7f91c649c5c4ec5006c7\"},",
          "2440:     {file = \"ruamel.yaml.clib-0.2.7-cp310-cp310-manylinux2014_aarch64.whl\", hash = \"sha256:df5828871e6648db72d1c19b4bd24819b80a755c4541d3409f0f7acd0f335c80\"},",
          "2441:     {file = \"ruamel.yaml.clib-0.2.7-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl\", hash = \"sha256:efa08d63ef03d079dcae1dfe334f6c8847ba8b645d08df286358b1f5293d24ab\"},",
          "2442:     {file = \"ruamel.yaml.clib-0.2.7-cp310-cp310-win32.whl\", hash = \"sha256:763d65baa3b952479c4e972669f679fe490eee058d5aa85da483ebae2009d231\"},",
          "2443:     {file = \"ruamel.yaml.clib-0.2.7-cp310-cp310-win_amd64.whl\", hash = \"sha256:d000f258cf42fec2b1bbf2863c61d7b8918d31ffee905da62dede869254d3b8a\"},",
          "2444:     {file = \"ruamel.yaml.clib-0.2.7-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:045e0626baf1c52e5527bd5db361bc83180faaba2ff586e763d3d5982a876a9e\"},",
          "2445:     {file = \"ruamel.yaml.clib-0.2.7-cp311-cp311-macosx_13_0_arm64.whl\", hash = \"sha256:1a6391a7cabb7641c32517539ca42cf84b87b667bad38b78d4d42dd23e957c81\"},",
          "2446:     {file = \"ruamel.yaml.clib-0.2.7-cp311-cp311-manylinux2014_aarch64.whl\", hash = \"sha256:9c7617df90c1365638916b98cdd9be833d31d337dbcd722485597b43c4a215bf\"},",
          "2447:     {file = \"ruamel.yaml.clib-0.2.7-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl\", hash = \"sha256:41d0f1fa4c6830176eef5b276af04c89320ea616655d01327d5ce65e50575c94\"},",
          "2448:     {file = \"ruamel.yaml.clib-0.2.7-cp311-cp311-win32.whl\", hash = \"sha256:f6d3d39611ac2e4f62c3128a9eed45f19a6608670c5a2f4f07f24e8de3441d38\"},",
          "2449:     {file = \"ruamel.yaml.clib-0.2.7-cp311-cp311-win_amd64.whl\", hash = \"sha256:da538167284de58a52109a9b89b8f6a53ff8437dd6dc26d33b57bf6699153122\"},",
          "2450:     {file = \"ruamel.yaml.clib-0.2.7-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:4b3a93bb9bc662fc1f99c5c3ea8e623d8b23ad22f861eb6fce9377ac07ad6072\"},",
          "2451:     {file = \"ruamel.yaml.clib-0.2.7-cp36-cp36m-macosx_12_0_arm64.whl\", hash = \"sha256:a234a20ae07e8469da311e182e70ef6b199d0fbeb6c6cc2901204dd87fb867e8\"},",
          "2452:     {file = \"ruamel.yaml.clib-0.2.7-cp36-cp36m-manylinux2014_aarch64.whl\", hash = \"sha256:15910ef4f3e537eea7fe45f8a5d19997479940d9196f357152a09031c5be59f3\"},",
          "2453:     {file = \"ruamel.yaml.clib-0.2.7-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl\", hash = \"sha256:370445fd795706fd291ab00c9df38a0caed0f17a6fb46b0f607668ecb16ce763\"},",
          "2454:     {file = \"ruamel.yaml.clib-0.2.7-cp36-cp36m-win32.whl\", hash = \"sha256:ecdf1a604009bd35c674b9225a8fa609e0282d9b896c03dd441a91e5f53b534e\"},",
          "2455:     {file = \"ruamel.yaml.clib-0.2.7-cp36-cp36m-win_amd64.whl\", hash = \"sha256:f34019dced51047d6f70cb9383b2ae2853b7fc4dce65129a5acd49f4f9256646\"},",
          "2456:     {file = \"ruamel.yaml.clib-0.2.7-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:2aa261c29a5545adfef9296b7e33941f46aa5bbd21164228e833412af4c9c75f\"},",
          "2457:     {file = \"ruamel.yaml.clib-0.2.7-cp37-cp37m-macosx_12_0_arm64.whl\", hash = \"sha256:f01da5790e95815eb5a8a138508c01c758e5f5bc0ce4286c4f7028b8dd7ac3d0\"},",
          "2458:     {file = \"ruamel.yaml.clib-0.2.7-cp37-cp37m-manylinux2014_aarch64.whl\", hash = \"sha256:40d030e2329ce5286d6b231b8726959ebbe0404c92f0a578c0e2482182e38282\"},",
          "2459:     {file = \"ruamel.yaml.clib-0.2.7-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl\", hash = \"sha256:c3ca1fbba4ae962521e5eb66d72998b51f0f4d0f608d3c0347a48e1af262efa7\"},",
          "2460:     {file = \"ruamel.yaml.clib-0.2.7-cp37-cp37m-win32.whl\", hash = \"sha256:7bdb4c06b063f6fd55e472e201317a3bb6cdeeee5d5a38512ea5c01e1acbdd93\"},",
          "2461:     {file = \"ruamel.yaml.clib-0.2.7-cp37-cp37m-win_amd64.whl\", hash = \"sha256:be2a7ad8fd8f7442b24323d24ba0b56c51219513cfa45b9ada3b87b76c374d4b\"},",
          "2462:     {file = \"ruamel.yaml.clib-0.2.7-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:91a789b4aa0097b78c93e3dc4b40040ba55bef518f84a40d4442f713b4094acb\"},",
          "2463:     {file = \"ruamel.yaml.clib-0.2.7-cp38-cp38-macosx_12_0_arm64.whl\", hash = \"sha256:99e77daab5d13a48a4054803d052ff40780278240a902b880dd37a51ba01a307\"},",
          "2464:     {file = \"ruamel.yaml.clib-0.2.7-cp38-cp38-manylinux2014_aarch64.whl\", hash = \"sha256:3243f48ecd450eddadc2d11b5feb08aca941b5cd98c9b1db14b2fd128be8c697\"},",
          "2465:     {file = \"ruamel.yaml.clib-0.2.7-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl\", hash = \"sha256:8831a2cedcd0f0927f788c5bdf6567d9dc9cc235646a434986a852af1cb54b4b\"},",
          "2466:     {file = \"ruamel.yaml.clib-0.2.7-cp38-cp38-win32.whl\", hash = \"sha256:3110a99e0f94a4a3470ff67fc20d3f96c25b13d24c6980ff841e82bafe827cac\"},",
          "2467:     {file = \"ruamel.yaml.clib-0.2.7-cp38-cp38-win_amd64.whl\", hash = \"sha256:92460ce908546ab69770b2e576e4f99fbb4ce6ab4b245345a3869a0a0410488f\"},",
          "2468:     {file = \"ruamel.yaml.clib-0.2.7-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:5bc0667c1eb8f83a3752b71b9c4ba55ef7c7058ae57022dd9b29065186a113d9\"},",
          "2469:     {file = \"ruamel.yaml.clib-0.2.7-cp39-cp39-macosx_12_0_arm64.whl\", hash = \"sha256:4a4d8d417868d68b979076a9be6a38c676eca060785abaa6709c7b31593c35d1\"},",
          "2470:     {file = \"ruamel.yaml.clib-0.2.7-cp39-cp39-manylinux2014_aarch64.whl\", hash = \"sha256:bf9a6bc4a0221538b1a7de3ed7bca4c93c02346853f44e1cd764be0023cd3640\"},",
          "2471:     {file = \"ruamel.yaml.clib-0.2.7-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl\", hash = \"sha256:a7b301ff08055d73223058b5c46c55638917f04d21577c95e00e0c4d79201a6b\"},",
          "2472:     {file = \"ruamel.yaml.clib-0.2.7-cp39-cp39-win32.whl\", hash = \"sha256:d5e51e2901ec2366b79f16c2299a03e74ba4531ddcfacc1416639c557aef0ad8\"},",
          "2473:     {file = \"ruamel.yaml.clib-0.2.7-cp39-cp39-win_amd64.whl\", hash = \"sha256:184faeaec61dbaa3cace407cffc5819f7b977e75360e8d5ca19461cd851a5fc5\"},",
          "2474:     {file = \"ruamel.yaml.clib-0.2.7.tar.gz\", hash = \"sha256:1f08fd5a2bea9c4180db71678e850b995d2a5f4537be0e94557668cf0f5f9497\"},",
          "2475: ]",
          "2477: [[package]]",
          "2478: name = \"rzpipe\"",
          "2479: version = \"0.6.0\"",
          "2480: description = \"Pipe interface for rizin\"",
          "2481: optional = false",
          "2482: python-versions = \"*\"",
          "2483: files = [",
          "2484:     {file = \"rzpipe-0.6.0-py3-none-any.whl\", hash = \"sha256:6bb842d9d709ee9ca67feabe18d73e8c2d2644304dee1a7131061477e4a11ffd\"},",
          "2485:     {file = \"rzpipe-0.6.0.tar.gz\", hash = \"sha256:a72e2888da7e59470e1879f601d1f2229815f01b08f00d60b498b68e88b55b17\"},",
          "2486: ]",
          "2488: [[package]]",
          "2489: name = \"semgrep\"",
          "2490: version = \"0.104.0\"",
          "2491: description = \"Lightweight static analysis for many languages. Find bug variants with patterns that look like source code.\"",
          "2492: optional = false",
          "2493: python-versions = \">=3.7\"",
          "2494: files = [",
          "2495:     {file = \"semgrep-0.104.0-cp37.cp38.cp39.py37.py38.py39-none-any.whl\", hash = \"sha256:ea4105fe0d61e4af478340646a5e67221c2b58754d3c0320520a0cc73579cea0\"},",
          "2496:     {file = \"semgrep-0.104.0-cp37.cp38.cp39.py37.py38.py39-none-macosx_10_14_x86_64.whl\", hash = \"sha256:3a68d8e8f5b069a9ab99c69d52923534216b537165650088363df8cf70599170\"},",
          "2497:     {file = \"semgrep-0.104.0-cp37.cp38.cp39.py37.py38.py39-none-macosx_11_0_arm64.whl\", hash = \"sha256:6d71ddc4684f8bab3a75788f7e90dc26cd0c8f686192f9b33a2dedd727c8a871\"},",
          "2498:     {file = \"semgrep-0.104.0.tar.gz\", hash = \"sha256:f84dcfb55b63fb4b91a63f284da2447329fbdeaffd912f0ac44b2e3b456decdc\"},",
          "2499: ]",
          "2501: [package.dependencies]",
          "2502: attrs = \">=21.3,<22.0\"",
          "2503: boltons = \">=21.0,<22.0\"",
          "2504: click = \">=8.1,<9.0\"",
          "2505: click-option-group = \">=0.5,<1.0\"",
          "2506: colorama = \">=0.4.0,<0.5.0\"",
          "2507: defusedxml = \">=0.7.1,<0.8.0\"",
          "2508: glom = \">=22.1,<23.0\"",
          "2509: jsonschema = \">=4.6,<5.0\"",
          "2510: packaging = \">=21.0,<22.0\"",
          "2511: peewee = \">=3.14,<4.0\"",
          "2512: python-lsp-jsonrpc = \">=1.0.0,<1.1.0\"",
          "2513: requests = \">=2.22,<3.0\"",
          "2514: \"ruamel.yaml\" = \">=0.16.0,<0.18\"",
          "2515: tqdm = \">=4.46,<5.0\"",
          "2516: typing-extensions = \">=4.2,<5.0\"",
          "2517: urllib3 = \">=1.26,<2.0\"",
          "2518: wcmatch = \">=8.3,<9.0\"",
          "2520: [[package]]",
          "2521: name = \"setuptools\"",
          "2522: version = \"68.1.2\"",
          "2523: description = \"Easily download, build, install, upgrade, and uninstall Python packages\"",
          "2524: optional = false",
          "2525: python-versions = \">=3.8\"",
          "2526: files = [",
          "2527:     {file = \"setuptools-68.1.2-py3-none-any.whl\", hash = \"sha256:3d8083eed2d13afc9426f227b24fd1659489ec107c0e86cec2ffdde5c92e790b\"},",
          "2528:     {file = \"setuptools-68.1.2.tar.gz\", hash = \"sha256:3d4dfa6d95f1b101d695a6160a7626e15583af71a5f52176efa5d39a054d475d\"},",
          "2529: ]",
          "2531: [package.extras]",
          "2532: docs = [\"furo\", \"jaraco.packaging (>=9.3)\", \"jaraco.tidelift (>=1.4)\", \"pygments-github-lexers (==0.0.5)\", \"rst.linker (>=1.9)\", \"sphinx (>=3.5,<=7.1.2)\", \"sphinx-favicon\", \"sphinx-hoverxref (<2)\", \"sphinx-inline-tabs\", \"sphinx-lint\", \"sphinx-notfound-page (==0.8.3)\", \"sphinx-reredirects\", \"sphinxcontrib-towncrier\"]",
          "2533: testing = [\"build[virtualenv]\", \"filelock (>=3.4.0)\", \"flake8-2020\", \"ini2toml[lite] (>=0.9)\", \"jaraco.develop (>=7.21)\", \"jaraco.envs (>=2.2)\", \"jaraco.path (>=3.2.0)\", \"pip (>=19.1)\", \"pytest (>=6)\", \"pytest-black (>=0.3.7)\", \"pytest-checkdocs (>=2.4)\", \"pytest-cov\", \"pytest-enabler (>=2.2)\", \"pytest-mypy (>=0.9.1)\", \"pytest-perf\", \"pytest-ruff\", \"pytest-timeout\", \"pytest-xdist\", \"tomli-w (>=1.0.0)\", \"virtualenv (>=13.0.0)\", \"wheel\"]",
          "2534: testing-integration = [\"build[virtualenv]\", \"filelock (>=3.4.0)\", \"jaraco.envs (>=2.2)\", \"jaraco.path (>=3.2.0)\", \"pytest\", \"pytest-enabler\", \"pytest-xdist\", \"tomli\", \"virtualenv (>=13.0.0)\", \"wheel\"]",
          "2536: [[package]]",
          "2537: name = \"shelljob\"",
          "2538: version = \"0.6.3\"",
          "2539: description = \"Run multiple subprocesses asynchronous/in parallel with streamed output/non-blocking reading. Also various tools to replace shell scripts.\"",
          "2540: optional = false",
          "2541: python-versions = \">=3.6\"",
          "2542: files = [",
          "2543:     {file = \"shelljob-0.6.3-py3-none-any.whl\", hash = \"sha256:1a37d1c36631a4839be7424910c293b0163b06bd74eaf3daf6cfcb5eabd95286\"},",
          "2544: ]",
          "2546: [[package]]",
          "2547: name = \"simplejson\"",
          "2548: version = \"3.19.1\"",
          "2549: description = \"Simple, fast, extensible JSON encoder/decoder for Python\"",
          "2550: optional = false",
          "2551: python-versions = \">=2.5, !=3.0.*, !=3.1.*, !=3.2.*\"",
          "2552: files = [",
          "2553:     {file = \"simplejson-3.19.1-cp27-cp27m-macosx_10_9_x86_64.whl\", hash = \"sha256:412e58997a30c5deb8cab5858b8e2e5b40ca007079f7010ee74565cc13d19665\"},",
          "2554:     {file = \"simplejson-3.19.1-cp27-cp27m-manylinux1_i686.whl\", hash = \"sha256:e765b1f47293dedf77946f0427e03ee45def2862edacd8868c6cf9ab97c8afbd\"},",
          "2555:     {file = \"simplejson-3.19.1-cp27-cp27m-manylinux1_x86_64.whl\", hash = \"sha256:3231100edee292da78948fa0a77dee4e5a94a0a60bcba9ed7a9dc77f4d4bb11e\"},",
          "2556:     {file = \"simplejson-3.19.1-cp27-cp27m-manylinux2010_i686.whl\", hash = \"sha256:081ea6305b3b5e84ae7417e7f45956db5ea3872ec497a584ec86c3260cda049e\"},",
          "2557:     {file = \"simplejson-3.19.1-cp27-cp27m-manylinux2010_x86_64.whl\", hash = \"sha256:f253edf694ce836631b350d758d00a8c4011243d58318fbfbe0dd54a6a839ab4\"},",
          "2558:     {file = \"simplejson-3.19.1-cp27-cp27mu-manylinux1_i686.whl\", hash = \"sha256:5db86bb82034e055257c8e45228ca3dbce85e38d7bfa84fa7b2838e032a3219c\"},",
          "2559:     {file = \"simplejson-3.19.1-cp27-cp27mu-manylinux1_x86_64.whl\", hash = \"sha256:69a8b10a4f81548bc1e06ded0c4a6c9042c0be0d947c53c1ed89703f7e613950\"},",
          "2560:     {file = \"simplejson-3.19.1-cp27-cp27mu-manylinux2010_i686.whl\", hash = \"sha256:58ee5e24d6863b22194020eb62673cf8cc69945fcad6b283919490f6e359f7c5\"},",
          "2561:     {file = \"simplejson-3.19.1-cp27-cp27mu-manylinux2010_x86_64.whl\", hash = \"sha256:73d0904c2471f317386d4ae5c665b16b5c50ab4f3ee7fd3d3b7651e564ad74b1\"},",
          "2562:     {file = \"simplejson-3.19.1-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:66d780047c31ff316ee305c3f7550f352d87257c756413632303fc59fef19eac\"},",
          "2563:     {file = \"simplejson-3.19.1-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:cd4d50a27b065447c9c399f0bf0a993bd0e6308db8bbbfbc3ea03b41c145775a\"},",
          "2564:     {file = \"simplejson-3.19.1-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:0c16ec6a67a5f66ab004190829eeede01c633936375edcad7cbf06d3241e5865\"},",
          "2565:     {file = \"simplejson-3.19.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:17a963e8dd4d81061cc05b627677c1f6a12e81345111fbdc5708c9f088d752c9\"},",
          "2566:     {file = \"simplejson-3.19.1-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:7e78d79b10aa92f40f54178ada2b635c960d24fc6141856b926d82f67e56d169\"},",
          "2567:     {file = \"simplejson-3.19.1-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ad071cd84a636195f35fa71de2186d717db775f94f985232775794d09f8d9061\"},",
          "2568:     {file = \"simplejson-3.19.1-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6e7c70f19405e5f99168077b785fe15fcb5f9b3c0b70b0b5c2757ce294922c8c\"},",
          "2569:     {file = \"simplejson-3.19.1-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:54fca2b26bcd1c403146fd9461d1da76199442297160721b1d63def2a1b17799\"},",
          "2570:     {file = \"simplejson-3.19.1-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:48600a6e0032bed17c20319d91775f1797d39953ccfd68c27f83c8d7fc3b32cb\"},",
          "2571:     {file = \"simplejson-3.19.1-cp310-cp310-musllinux_1_1_ppc64le.whl\", hash = \"sha256:93f5ac30607157a0b2579af59a065bcfaa7fadeb4875bf927a8f8b6739c8d910\"},",
          "2572:     {file = \"simplejson-3.19.1-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:6b79642a599740603ca86cf9df54f57a2013c47e1dd4dd2ae4769af0a6816900\"},",
          "2573:     {file = \"simplejson-3.19.1-cp310-cp310-win32.whl\", hash = \"sha256:d9f2c27f18a0b94107d57294aab3d06d6046ea843ed4a45cae8bd45756749f3a\"},",
          "2574:     {file = \"simplejson-3.19.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:5673d27806085d2a413b3be5f85fad6fca4b7ffd31cfe510bbe65eea52fff571\"},",
          "2575:     {file = \"simplejson-3.19.1-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:79c748aa61fd8098d0472e776743de20fae2686edb80a24f0f6593a77f74fe86\"},",
          "2576:     {file = \"simplejson-3.19.1-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:390f4a8ca61d90bcf806c3ad644e05fa5890f5b9a72abdd4ca8430cdc1e386fa\"},",
          "2577:     {file = \"simplejson-3.19.1-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:d61482b5d18181e6bb4810b4a6a24c63a490c3a20e9fbd7876639653e2b30a1a\"},",
          "2578:     {file = \"simplejson-3.19.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:2541fdb7467ef9bfad1f55b6c52e8ea52b3ce4a0027d37aff094190a955daa9d\"},",
          "2579:     {file = \"simplejson-3.19.1-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:46133bc7dd45c9953e6ee4852e3de3d5a9a4a03b068bd238935a5c72f0a1ce34\"},",
          "2580:     {file = \"simplejson-3.19.1-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:f96def94576f857abf58e031ce881b5a3fc25cbec64b2bc4824824a8a4367af9\"},",
          "2581:     {file = \"simplejson-3.19.1-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9f14ecca970d825df0d29d5c6736ff27999ee7bdf5510e807f7ad8845f7760ce\"},",
          "2582:     {file = \"simplejson-3.19.1-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:66389b6b6ee46a94a493a933a26008a1bae0cfadeca176933e7ff6556c0ce998\"},",
          "2583:     {file = \"simplejson-3.19.1-cp311-cp311-musllinux_1_1_i686.whl\", hash = \"sha256:22b867205cd258050c2625325fdd9a65f917a5aff22a23387e245ecae4098e78\"},",
          "2584:     {file = \"simplejson-3.19.1-cp311-cp311-musllinux_1_1_ppc64le.whl\", hash = \"sha256:c39fa911e4302eb79c804b221ddec775c3da08833c0a9120041dd322789824de\"},",
          "2585:     {file = \"simplejson-3.19.1-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:65dafe413b15e8895ad42e49210b74a955c9ae65564952b0243a18fb35b986cc\"},",
          "2586:     {file = \"simplejson-3.19.1-cp311-cp311-win32.whl\", hash = \"sha256:f05d05d99fce5537d8f7a0af6417a9afa9af3a6c4bb1ba7359c53b6257625fcb\"},",
          "2587:     {file = \"simplejson-3.19.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:b46aaf0332a8a9c965310058cf3487d705bf672641d2c43a835625b326689cf4\"},",
          "2588:     {file = \"simplejson-3.19.1-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:b438e5eaa474365f4faaeeef1ec3e8d5b4e7030706e3e3d6b5bee6049732e0e6\"},",
          "2589:     {file = \"simplejson-3.19.1-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:aa9d614a612ad02492f704fbac636f666fa89295a5d22b4facf2d665fc3b5ea9\"},",
          "2590:     {file = \"simplejson-3.19.1-cp36-cp36m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:46e89f58e4bed107626edce1cf098da3664a336d01fc78fddcfb1f397f553d44\"},",
          "2591:     {file = \"simplejson-3.19.1-cp36-cp36m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:96ade243fb6f3b57e7bd3b71e90c190cd0f93ec5dce6bf38734a73a2e5fa274f\"},",
          "2592:     {file = \"simplejson-3.19.1-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ed18728b90758d171f0c66c475c24a443ede815cf3f1a91e907b0db0ebc6e508\"},",
          "2593:     {file = \"simplejson-3.19.1-cp36-cp36m-musllinux_1_1_aarch64.whl\", hash = \"sha256:6a561320485017ddfc21bd2ed5de2d70184f754f1c9b1947c55f8e2b0163a268\"},",
          "2594:     {file = \"simplejson-3.19.1-cp36-cp36m-musllinux_1_1_i686.whl\", hash = \"sha256:2098811cd241429c08b7fc5c9e41fcc3f59f27c2e8d1da2ccdcf6c8e340ab507\"},",
          "2595:     {file = \"simplejson-3.19.1-cp36-cp36m-musllinux_1_1_ppc64le.whl\", hash = \"sha256:8f8d179393e6f0cf6c7c950576892ea6acbcea0a320838c61968ac7046f59228\"},",
          "2596:     {file = \"simplejson-3.19.1-cp36-cp36m-musllinux_1_1_x86_64.whl\", hash = \"sha256:eff87c68058374e45225089e4538c26329a13499bc0104b52b77f8428eed36b2\"},",
          "2597:     {file = \"simplejson-3.19.1-cp36-cp36m-win32.whl\", hash = \"sha256:d300773b93eed82f6da138fd1d081dc96fbe53d96000a85e41460fe07c8d8b33\"},",
          "2598:     {file = \"simplejson-3.19.1-cp36-cp36m-win_amd64.whl\", hash = \"sha256:37724c634f93e5caaca04458f267836eb9505d897ab3947b52f33b191bf344f3\"},",
          "2599:     {file = \"simplejson-3.19.1-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:74bf802debe68627227ddb665c067eb8c73aa68b2476369237adf55c1161b728\"},",
          "2600:     {file = \"simplejson-3.19.1-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:70128fb92932524c89f373e17221cf9535d7d0c63794955cc3cd5868e19f5d38\"},",
          "2601:     {file = \"simplejson-3.19.1-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:8090e75653ea7db75bc21fa5f7bcf5f7bdf64ea258cbbac45c7065f6324f1b50\"},",
          "2602:     {file = \"simplejson-3.19.1-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:a755f7bfc8adcb94887710dc70cc12a69a454120c6adcc6f251c3f7b46ee6aac\"},",
          "2603:     {file = \"simplejson-3.19.1-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0ccb2c1877bc9b25bc4f4687169caa925ffda605d7569c40e8e95186e9a5e58b\"},",
          "2604:     {file = \"simplejson-3.19.1-cp37-cp37m-musllinux_1_1_aarch64.whl\", hash = \"sha256:919bc5aa4d8094cf8f1371ea9119e5d952f741dc4162810ab714aec948a23fe5\"},",
          "2605:     {file = \"simplejson-3.19.1-cp37-cp37m-musllinux_1_1_i686.whl\", hash = \"sha256:e333c5b62e93949f5ac27e6758ba53ef6ee4f93e36cc977fe2e3df85c02f6dc4\"},",
          "2606:     {file = \"simplejson-3.19.1-cp37-cp37m-musllinux_1_1_ppc64le.whl\", hash = \"sha256:3a4480e348000d89cf501b5606415f4d328484bbb431146c2971123d49fd8430\"},",
          "2607:     {file = \"simplejson-3.19.1-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:cb502cde018e93e75dc8fc7bb2d93477ce4f3ac10369f48866c61b5e031db1fd\"},",
          "2608:     {file = \"simplejson-3.19.1-cp37-cp37m-win32.whl\", hash = \"sha256:f41915a4e1f059dfad614b187bc06021fefb5fc5255bfe63abf8247d2f7a646a\"},",
          "2609:     {file = \"simplejson-3.19.1-cp37-cp37m-win_amd64.whl\", hash = \"sha256:3844305bc33d52c4975da07f75b480e17af3558c0d13085eaa6cc2f32882ccf7\"},",
          "2610:     {file = \"simplejson-3.19.1-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:1cb19eacb77adc5a9720244d8d0b5507421d117c7ed4f2f9461424a1829e0ceb\"},",
          "2611:     {file = \"simplejson-3.19.1-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:926957b278de22797bfc2f004b15297013843b595b3cd7ecd9e37ccb5fad0b72\"},",
          "2612:     {file = \"simplejson-3.19.1-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:b0e9a5e66969f7a47dc500e3dba8edc3b45d4eb31efb855c8647700a3493dd8a\"},",
          "2613:     {file = \"simplejson-3.19.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:79d46e7e33c3a4ef853a1307b2032cfb7220e1a079d0c65488fbd7118f44935a\"},",
          "2614:     {file = \"simplejson-3.19.1-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:344a5093b71c1b370968d0fbd14d55c9413cb6f0355fdefeb4a322d602d21776\"},",
          "2615:     {file = \"simplejson-3.19.1-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:23fbb7b46d44ed7cbcda689295862851105c7594ae5875dce2a70eeaa498ff86\"},",
          "2616:     {file = \"simplejson-3.19.1-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4d3025e7e9ddb48813aec2974e1a7e68e63eac911dd5e0a9568775de107ac79a\"},",
          "2617:     {file = \"simplejson-3.19.1-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:87b190e6ceec286219bd6b6f13547ca433f977d4600b4e81739e9ac23b5b9ba9\"},",
          "2618:     {file = \"simplejson-3.19.1-cp38-cp38-musllinux_1_1_i686.whl\", hash = \"sha256:dc935d8322ba9bc7b84f99f40f111809b0473df167bf5b93b89fb719d2c4892b\"},",
          "2619:     {file = \"simplejson-3.19.1-cp38-cp38-musllinux_1_1_ppc64le.whl\", hash = \"sha256:3b652579c21af73879d99c8072c31476788c8c26b5565687fd9db154070d852a\"},",
          "2620:     {file = \"simplejson-3.19.1-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:6aa7ca03f25b23b01629b1c7f78e1cd826a66bfb8809f8977a3635be2ec48f1a\"},",
          "2621:     {file = \"simplejson-3.19.1-cp38-cp38-win32.whl\", hash = \"sha256:08be5a241fdf67a8e05ac7edbd49b07b638ebe4846b560673e196b2a25c94b92\"},",
          "2622:     {file = \"simplejson-3.19.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:ca56a6c8c8236d6fe19abb67ef08d76f3c3f46712c49a3b6a5352b6e43e8855f\"},",
          "2623:     {file = \"simplejson-3.19.1-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:6424d8229ba62e5dbbc377908cfee9b2edf25abd63b855c21f12ac596cd18e41\"},",
          "2624:     {file = \"simplejson-3.19.1-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:547ea86ca408a6735335c881a2e6208851027f5bfd678d8f2c92a0f02c7e7330\"},",
          "2625:     {file = \"simplejson-3.19.1-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:889328873c35cb0b2b4c83cbb83ec52efee5a05e75002e2c0c46c4e42790e83c\"},",
          "2626:     {file = \"simplejson-3.19.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:44cdb4e544134f305b033ad79ae5c6b9a32e7c58b46d9f55a64e2a883fbbba01\"},",
          "2627:     {file = \"simplejson-3.19.1-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:dc2b3f06430cbd4fac0dae5b2974d2bf14f71b415fb6de017f498950da8159b1\"},",
          "2628:     {file = \"simplejson-3.19.1-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d125e754d26c0298715bdc3f8a03a0658ecbe72330be247f4b328d229d8cf67f\"},",
          "2629:     {file = \"simplejson-3.19.1-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:476c8033abed7b1fd8db62a7600bf18501ce701c1a71179e4ce04ac92c1c5c3c\"},",
          "2630:     {file = \"simplejson-3.19.1-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:199a0bcd792811c252d71e3eabb3d4a132b3e85e43ebd93bfd053d5b59a7e78b\"},",
          "2631:     {file = \"simplejson-3.19.1-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:a79b439a6a77649bb8e2f2644e6c9cc0adb720fc55bed63546edea86e1d5c6c8\"},",
          "2632:     {file = \"simplejson-3.19.1-cp39-cp39-musllinux_1_1_ppc64le.whl\", hash = \"sha256:203412745fed916fc04566ecef3f2b6c872b52f1e7fb3a6a84451b800fb508c1\"},",
          "2633:     {file = \"simplejson-3.19.1-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:5ca922c61d87b4c38f37aa706520328ffe22d7ac1553ef1cadc73f053a673553\"},",
          "2634:     {file = \"simplejson-3.19.1-cp39-cp39-win32.whl\", hash = \"sha256:3e0902c278243d6f7223ba3e6c5738614c971fd9a887fff8feaa8dcf7249c8d4\"},",
          "2635:     {file = \"simplejson-3.19.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:d396b610e77b0c438846607cd56418bfc194973b9886550a98fd6724e8c6cfec\"},",
          "2636:     {file = \"simplejson-3.19.1-py3-none-any.whl\", hash = \"sha256:4710806eb75e87919b858af0cba4ffedc01b463edc3982ded7b55143f39e41e1\"},",
          "2637:     {file = \"simplejson-3.19.1.tar.gz\", hash = \"sha256:6277f60848a7d8319d27d2be767a7546bc965535b28070e310b3a9af90604a4c\"},",
          "2638: ]",
          "2640: [[package]]",
          "2641: name = \"six\"",
          "2642: version = \"1.16.0\"",
          "2643: description = \"Python 2 and 3 compatibility utilities\"",
          "2644: optional = false",
          "2645: python-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*\"",
          "2646: files = [",
          "2647:     {file = \"six-1.16.0-py2.py3-none-any.whl\", hash = \"sha256:8abb2f1d86890a2dfb989f9a77cfcfd3e47c2a354b01111771326f8aa26e0254\"},",
          "2648:     {file = \"six-1.16.0.tar.gz\", hash = \"sha256:1e61c37477a1626458e36f7b1d82aa5c9b094fa4802892072e49de9c60c4c926\"},",
          "2649: ]",
          "2651: [[package]]",
          "2652: name = \"sortedcontainers\"",
          "2653: version = \"2.4.0\"",
          "2654: description = \"Sorted Containers -- Sorted List, Sorted Dict, Sorted Set\"",
          "2655: optional = false",
          "2656: python-versions = \"*\"",
          "2657: files = [",
          "2658:     {file = \"sortedcontainers-2.4.0-py2.py3-none-any.whl\", hash = \"sha256:a163dcaede0f1c021485e957a39245190e74249897e2ae4b2aa38595db237ee0\"},",
          "2659:     {file = \"sortedcontainers-2.4.0.tar.gz\", hash = \"sha256:25caa5a06cc30b6b83d11423433f65d1f9d76c4c6a0c90e3379eaa43b9bfdb88\"},",
          "2660: ]",
          "2662: [[package]]",
          "2663: name = \"soupsieve\"",
          "2664: version = \"2.4.1\"",
          "2665: description = \"A modern CSS selector implementation for Beautiful Soup.\"",
          "2666: optional = false",
          "2667: python-versions = \">=3.7\"",
          "2668: files = [",
          "2669:     {file = \"soupsieve-2.4.1-py3-none-any.whl\", hash = \"sha256:1c1bfee6819544a3447586c889157365a27e10d88cde3ad3da0cf0ddf646feb8\"},",
          "2670:     {file = \"soupsieve-2.4.1.tar.gz\", hash = \"sha256:89d12b2d5dfcd2c9e8c22326da9d9aa9cb3dfab0a83a024f05704076ee8d35ea\"},",
          "2671: ]",
          "2673: [[package]]",
          "2674: name = \"sqlparse\"",
          "2675: version = \"0.4.4\"",
          "2676: description = \"A non-validating SQL parser.\"",
          "2677: optional = false",
          "2678: python-versions = \">=3.5\"",
          "2679: files = [",
          "2680:     {file = \"sqlparse-0.4.4-py3-none-any.whl\", hash = \"sha256:5430a4fe2ac7d0f93e66f1efc6e1338a41884b7ddf2a350cedd20ccc4d9d28f3\"},",
          "2681:     {file = \"sqlparse-0.4.4.tar.gz\", hash = \"sha256:d446183e84b8349fa3061f0fe7f06ca94ba65b426946ffebe6e3e8295332420c\"},",
          "2682: ]",
          "2684: [package.extras]",
          "2685: dev = [\"build\", \"flake8\"]",
          "2686: doc = [\"sphinx\"]",
          "2687: test = [\"pytest\", \"pytest-cov\"]",
          "2689: [[package]]",
          "2690: name = \"stack-data\"",
          "2691: version = \"0.6.2\"",
          "2692: description = \"Extract data from python stack frames and tracebacks for informative displays\"",
          "2693: optional = false",
          "2694: python-versions = \"*\"",
          "2695: files = [",
          "2696:     {file = \"stack_data-0.6.2-py3-none-any.whl\", hash = \"sha256:cbb2a53eb64e5785878201a97ed7c7b94883f48b87bfb0bbe8b623c74679e4a8\"},",
          "2697:     {file = \"stack_data-0.6.2.tar.gz\", hash = \"sha256:32d2dd0376772d01b6cb9fc996f3c8b57a357089dec328ed4b6553d037eaf815\"},",
          "2698: ]",
          "2700: [package.dependencies]",
          "2701: asttokens = \">=2.1.0\"",
          "2702: executing = \">=1.2.0\"",
          "2703: pure-eval = \"*\"",
          "2705: [package.extras]",
          "2706: tests = [\"cython\", \"littleutils\", \"pygments\", \"pytest\", \"typeguard\"]",
          "2708: [[package]]",
          "2709: name = \"svgutils\"",
          "2710: version = \"0.3.4\"",
          "2711: description = \"Python SVG editor\"",
          "2712: optional = false",
          "2713: python-versions = \"*\"",
          "2714: files = [",
          "2715:     {file = \"svgutils-0.3.4-py3-none-any.whl\", hash = \"sha256:4d08524a08126553c1a9bf2639616cf31290adea6fd235a3eb67d77c748abc00\"},",
          "2716:     {file = \"svgutils-0.3.4.tar.gz\", hash = \"sha256:9ef48f44cb1d460a7747dd02694200fda25eb9faf6dea392118def2695e0e053\"},",
          "2717: ]",
          "2719: [package.dependencies]",
          "2720: lxml = \"*\"",
          "2722: [[package]]",
          "2723: name = \"tenacity\"",
          "2724: version = \"8.2.3\"",
          "2725: description = \"Retry code until it succeeds\"",
          "2726: optional = false",
          "2727: python-versions = \">=3.7\"",
          "2728: files = [",
          "2729:     {file = \"tenacity-8.2.3-py3-none-any.whl\", hash = \"sha256:ce510e327a630c9e1beaf17d42e6ffacc88185044ad85cf74c0a8887c6a0f88c\"},",
          "2730:     {file = \"tenacity-8.2.3.tar.gz\", hash = \"sha256:5398ef0d78e63f40007c1fb4c0bff96e1911394d2fa8d194f77619c05ff6cc8a\"},",
          "2731: ]",
          "2733: [package.extras]",
          "2734: doc = [\"reno\", \"sphinx\", \"tornado (>=4.5)\"]",
          "2736: [[package]]",
          "2737: name = \"tldextract\"",
          "2738: version = \"3.4.4\"",
          "2739: description = \"Accurately separates a URL's subdomain, domain, and public suffix, using the Public Suffix List (PSL). By default, this includes the public ICANN TLDs and their exceptions. You can optionally support the Public Suffix List's private domains as well.\"",
          "2740: optional = false",
          "2741: python-versions = \">=3.7\"",
          "2742: files = [",
          "2743:     {file = \"tldextract-3.4.4-py3-none-any.whl\", hash = \"sha256:581e7dbefc90e7bb857bb6f768d25c811a3c5f0892ed56a9a2999ddb7b1b70c2\"},",
          "2744:     {file = \"tldextract-3.4.4.tar.gz\", hash = \"sha256:5fe3210c577463545191d45ad522d3d5e78d55218ce97215e82004dcae1e1234\"},",
          "2745: ]",
          "2747: [package.dependencies]",
          "2748: filelock = \">=3.0.8\"",
          "2749: idna = \"*\"",
          "2750: requests = \">=2.1.0\"",
          "2751: requests-file = \">=1.4\"",
          "2753: [[package]]",
          "2754: name = \"tornado\"",
          "2755: version = \"6.3.3\"",
          "2756: description = \"Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed.\"",
          "2757: optional = false",
          "2758: python-versions = \">= 3.8\"",
          "2759: files = [",
          "2760:     {file = \"tornado-6.3.3-cp38-abi3-macosx_10_9_universal2.whl\", hash = \"sha256:502fba735c84450974fec147340016ad928d29f1e91f49be168c0a4c18181e1d\"},",
          "2761:     {file = \"tornado-6.3.3-cp38-abi3-macosx_10_9_x86_64.whl\", hash = \"sha256:805d507b1f588320c26f7f097108eb4023bbaa984d63176d1652e184ba24270a\"},",
          "2762:     {file = \"tornado-6.3.3-cp38-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1bd19ca6c16882e4d37368e0152f99c099bad93e0950ce55e71daed74045908f\"},",
          "2763:     {file = \"tornado-6.3.3-cp38-abi3-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:7ac51f42808cca9b3613f51ffe2a965c8525cb1b00b7b2d56828b8045354f76a\"},",
          "2764:     {file = \"tornado-6.3.3-cp38-abi3-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:71a8db65160a3c55d61839b7302a9a400074c9c753040455494e2af74e2501f2\"},",
          "2765:     {file = \"tornado-6.3.3-cp38-abi3-musllinux_1_1_aarch64.whl\", hash = \"sha256:ceb917a50cd35882b57600709dd5421a418c29ddc852da8bcdab1f0db33406b0\"},",
          "2766:     {file = \"tornado-6.3.3-cp38-abi3-musllinux_1_1_i686.whl\", hash = \"sha256:7d01abc57ea0dbb51ddfed477dfe22719d376119844e33c661d873bf9c0e4a16\"},",
          "2767:     {file = \"tornado-6.3.3-cp38-abi3-musllinux_1_1_x86_64.whl\", hash = \"sha256:9dc4444c0defcd3929d5c1eb5706cbe1b116e762ff3e0deca8b715d14bf6ec17\"},",
          "2768:     {file = \"tornado-6.3.3-cp38-abi3-win32.whl\", hash = \"sha256:65ceca9500383fbdf33a98c0087cb975b2ef3bfb874cb35b8de8740cf7f41bd3\"},",
          "2769:     {file = \"tornado-6.3.3-cp38-abi3-win_amd64.whl\", hash = \"sha256:22d3c2fa10b5793da13c807e6fc38ff49a4f6e1e3868b0a6f4164768bb8e20f5\"},",
          "2770:     {file = \"tornado-6.3.3.tar.gz\", hash = \"sha256:e7d8db41c0181c80d76c982aacc442c0783a2c54d6400fe028954201a2e032fe\"},",
          "2771: ]",
          "2773: [[package]]",
          "2774: name = \"tqdm\"",
          "2775: version = \"4.66.1\"",
          "2776: description = \"Fast, Extensible Progress Meter\"",
          "2777: optional = false",
          "2778: python-versions = \">=3.7\"",
          "2779: files = [",
          "2780:     {file = \"tqdm-4.66.1-py3-none-any.whl\", hash = \"sha256:d302b3c5b53d47bce91fea46679d9c3c6508cf6332229aa1e7d8653723793386\"},",
          "2781:     {file = \"tqdm-4.66.1.tar.gz\", hash = \"sha256:d88e651f9db8d8551a62556d3cff9e3034274ca5d66e93197cf2490e2dcb69c7\"},",
          "2782: ]",
          "2784: [package.extras]",
          "2785: dev = [\"pytest (>=6)\", \"pytest-cov\", \"pytest-timeout\", \"pytest-xdist\"]",
          "2786: notebook = [\"ipywidgets (>=6)\"]",
          "2787: slack = [\"slack-sdk\"]",
          "2788: telegram = [\"requests\"]",
          "2790: [[package]]",
          "2791: name = \"traitlets\"",
          "2792: version = \"5.9.0\"",
          "2793: description = \"Traitlets Python configuration system\"",
          "2794: optional = false",
          "2795: python-versions = \">=3.7\"",
          "2796: files = [",
          "2797:     {file = \"traitlets-5.9.0-py3-none-any.whl\", hash = \"sha256:9e6ec080259b9a5940c797d58b613b5e31441c2257b87c2e795c5228ae80d2d8\"},",
          "2798:     {file = \"traitlets-5.9.0.tar.gz\", hash = \"sha256:f6cde21a9c68cf756af02035f72d5a723bf607e862e7be33ece505abf4a3bad9\"},",
          "2799: ]",
          "2801: [package.extras]",
          "2802: docs = [\"myst-parser\", \"pydata-sphinx-theme\", \"sphinx\"]",
          "2803: test = [\"argcomplete (>=2.0)\", \"pre-commit\", \"pytest\", \"pytest-mock\"]",
          "2805: [[package]]",
          "2806: name = \"typing-extensions\"",
          "2807: version = \"4.4.0\"",
          "2808: description = \"Backported and Experimental Type Hints for Python 3.7+\"",
          "2809: optional = false",
          "2810: python-versions = \">=3.7\"",
          "2811: files = [",
          "2812:     {file = \"typing_extensions-4.4.0-py3-none-any.whl\", hash = \"sha256:16fa4864408f655d35ec496218b85f79b3437c829e93320c7c9215ccfd92489e\"},",
          "2813:     {file = \"typing_extensions-4.4.0.tar.gz\", hash = \"sha256:1511434bb92bf8dd198c12b1cc812e800d4181cfcb867674e0f8279cc93087aa\"},",
          "2814: ]",
          "2816: [[package]]",
          "2817: name = \"tzdata\"",
          "2818: version = \"2023.3\"",
          "2819: description = \"Provider of IANA time zone data\"",
          "2820: optional = false",
          "2821: python-versions = \">=2\"",
          "2822: files = [",
          "2823:     {file = \"tzdata-2023.3-py2.py3-none-any.whl\", hash = \"sha256:7e65763eef3120314099b6939b5546db7adce1e7d6f2e179e3df563c70511eda\"},",
          "2824:     {file = \"tzdata-2023.3.tar.gz\", hash = \"sha256:11ef1e08e54acb0d4f95bdb1be05da659673de4acbd21bf9c69e94cc5e907a3a\"},",
          "2825: ]",
          "2827: [[package]]",
          "2828: name = \"ujson\"",
          "2829: version = \"5.8.0\"",
          "2830: description = \"Ultra fast JSON encoder and decoder for Python\"",
          "2831: optional = false",
          "2832: python-versions = \">=3.8\"",
          "2833: files = [",
          "2834:     {file = \"ujson-5.8.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:f4511560d75b15ecb367eef561554959b9d49b6ec3b8d5634212f9fed74a6df1\"},",
          "2835:     {file = \"ujson-5.8.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:9399eaa5d1931a0ead49dce3ffacbea63f3177978588b956036bfe53cdf6af75\"},",
          "2836:     {file = \"ujson-5.8.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c4e7bb7eba0e1963f8b768f9c458ecb193e5bf6977090182e2b4f4408f35ac76\"},",
          "2837:     {file = \"ujson-5.8.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:40931d7c08c4ce99adc4b409ddb1bbb01635a950e81239c2382cfe24251b127a\"},",
          "2838:     {file = \"ujson-5.8.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d53039d39de65360e924b511c7ca1a67b0975c34c015dd468fca492b11caa8f7\"},",
          "2839:     {file = \"ujson-5.8.0-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:bdf04c6af3852161be9613e458a1fb67327910391de8ffedb8332e60800147a2\"},",
          "2840:     {file = \"ujson-5.8.0-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:a70f776bda2e5072a086c02792c7863ba5833d565189e09fabbd04c8b4c3abba\"},",
          "2841:     {file = \"ujson-5.8.0-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:f26629ac531d712f93192c233a74888bc8b8212558bd7d04c349125f10199fcf\"},",
          "2842:     {file = \"ujson-5.8.0-cp310-cp310-win32.whl\", hash = \"sha256:7ecc33b107ae88405aebdb8d82c13d6944be2331ebb04399134c03171509371a\"},",
          "2843:     {file = \"ujson-5.8.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:3b27a8da7a080add559a3b73ec9ebd52e82cc4419f7c6fb7266e62439a055ed0\"},",
          "2844:     {file = \"ujson-5.8.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:193349a998cd821483a25f5df30b44e8f495423840ee11b3b28df092ddfd0f7f\"},",
          "2845:     {file = \"ujson-5.8.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:4ddeabbc78b2aed531f167d1e70387b151900bc856d61e9325fcdfefb2a51ad8\"},",
          "2846:     {file = \"ujson-5.8.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5ce24909a9c25062e60653073dd6d5e6ec9d6ad7ed6e0069450d5b673c854405\"},",
          "2847:     {file = \"ujson-5.8.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:27a2a3c7620ebe43641e926a1062bc04e92dbe90d3501687957d71b4bdddaec4\"},",
          "2848:     {file = \"ujson-5.8.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:2b852bdf920fe9f84e2a2c210cc45f1b64f763b4f7d01468b33f7791698e455e\"},",
          "2849:     {file = \"ujson-5.8.0-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:20768961a6a706170497129960762ded9c89fb1c10db2989c56956b162e2a8a3\"},",
          "2850:     {file = \"ujson-5.8.0-cp311-cp311-musllinux_1_1_i686.whl\", hash = \"sha256:e0147d41e9fb5cd174207c4a2895c5e24813204499fd0839951d4c8784a23bf5\"},",
          "2851:     {file = \"ujson-5.8.0-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:e3673053b036fd161ae7a5a33358ccae6793ee89fd499000204676baafd7b3aa\"},",
          "2852:     {file = \"ujson-5.8.0-cp311-cp311-win32.whl\", hash = \"sha256:a89cf3cd8bf33a37600431b7024a7ccf499db25f9f0b332947fbc79043aad879\"},",
          "2853:     {file = \"ujson-5.8.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:3659deec9ab9eb19e8646932bfe6fe22730757c4addbe9d7d5544e879dc1b721\"},",
          "2854:     {file = \"ujson-5.8.0-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:102bf31c56f59538cccdfec45649780ae00657e86247c07edac434cb14d5388c\"},",
          "2855:     {file = \"ujson-5.8.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:299a312c3e85edee1178cb6453645217ba23b4e3186412677fa48e9a7f986de6\"},",
          "2856:     {file = \"ujson-5.8.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f2e385a7679b9088d7bc43a64811a7713cc7c33d032d020f757c54e7d41931ae\"},",
          "2857:     {file = \"ujson-5.8.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ad24ec130855d4430a682c7a60ca0bc158f8253ec81feed4073801f6b6cb681b\"},",
          "2858:     {file = \"ujson-5.8.0-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:16fde596d5e45bdf0d7de615346a102510ac8c405098e5595625015b0d4b5296\"},",
          "2859:     {file = \"ujson-5.8.0-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:6d230d870d1ce03df915e694dcfa3f4e8714369cce2346686dbe0bc8e3f135e7\"},",
          "2860:     {file = \"ujson-5.8.0-cp312-cp312-musllinux_1_1_i686.whl\", hash = \"sha256:9571de0c53db5cbc265945e08f093f093af2c5a11e14772c72d8e37fceeedd08\"},",
          "2861:     {file = \"ujson-5.8.0-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:7cba16b26efe774c096a5e822e4f27097b7c81ed6fb5264a2b3f5fd8784bab30\"},",
          "2862:     {file = \"ujson-5.8.0-cp312-cp312-win32.whl\", hash = \"sha256:48c7d373ff22366eecfa36a52b9b55b0ee5bd44c2b50e16084aa88b9de038916\"},",
          "2863:     {file = \"ujson-5.8.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:5ac97b1e182d81cf395ded620528c59f4177eee024b4b39a50cdd7b720fdeec6\"},",
          "2864:     {file = \"ujson-5.8.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:2a64cc32bb4a436e5813b83f5aab0889927e5ea1788bf99b930fad853c5625cb\"},",
          "2865:     {file = \"ujson-5.8.0-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:e54578fa8838ddc722539a752adfce9372474114f8c127bb316db5392d942f8b\"},",
          "2866:     {file = \"ujson-5.8.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:9721cd112b5e4687cb4ade12a7b8af8b048d4991227ae8066d9c4b3a6642a582\"},",
          "2867:     {file = \"ujson-5.8.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9d9707e5aacf63fb919f6237d6490c4e0244c7f8d3dc2a0f84d7dec5db7cb54c\"},",
          "2868:     {file = \"ujson-5.8.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:0be81bae295f65a6896b0c9030b55a106fb2dec69ef877253a87bc7c9c5308f7\"},",
          "2869:     {file = \"ujson-5.8.0-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:ae7f4725c344bf437e9b881019c558416fe84ad9c6b67426416c131ad577df67\"},",
          "2870:     {file = \"ujson-5.8.0-cp38-cp38-musllinux_1_1_i686.whl\", hash = \"sha256:9ab282d67ef3097105552bf151438b551cc4bedb3f24d80fada830f2e132aeb9\"},",
          "2871:     {file = \"ujson-5.8.0-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:94c7bd9880fa33fcf7f6d7f4cc032e2371adee3c5dba2922b918987141d1bf07\"},",
          "2872:     {file = \"ujson-5.8.0-cp38-cp38-win32.whl\", hash = \"sha256:bf5737dbcfe0fa0ac8fa599eceafae86b376492c8f1e4b84e3adf765f03fb564\"},",
          "2873:     {file = \"ujson-5.8.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:11da6bed916f9bfacf13f4fc6a9594abd62b2bb115acfb17a77b0f03bee4cfd5\"},",
          "2874:     {file = \"ujson-5.8.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:69b3104a2603bab510497ceabc186ba40fef38ec731c0ccaa662e01ff94a985c\"},",
          "2875:     {file = \"ujson-5.8.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:9249fdefeb021e00b46025e77feed89cd91ffe9b3a49415239103fc1d5d9c29a\"},",
          "2876:     {file = \"ujson-5.8.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:2873d196725a8193f56dde527b322c4bc79ed97cd60f1d087826ac3290cf9207\"},",
          "2877:     {file = \"ujson-5.8.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6a4dafa9010c366589f55afb0fd67084acd8added1a51251008f9ff2c3e44042\"},",
          "2878:     {file = \"ujson-5.8.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:7a42baa647a50fa8bed53d4e242be61023bd37b93577f27f90ffe521ac9dc7a3\"},",
          "2879:     {file = \"ujson-5.8.0-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:f3554eaadffe416c6f543af442066afa6549edbc34fe6a7719818c3e72ebfe95\"},",
          "2880:     {file = \"ujson-5.8.0-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:fb87decf38cc82bcdea1d7511e73629e651bdec3a43ab40985167ab8449b769c\"},",
          "2881:     {file = \"ujson-5.8.0-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:407d60eb942c318482bbfb1e66be093308bb11617d41c613e33b4ce5be789adc\"},",
          "2882:     {file = \"ujson-5.8.0-cp39-cp39-win32.whl\", hash = \"sha256:0fe1b7edaf560ca6ab023f81cbeaf9946a240876a993b8c5a21a1c539171d903\"},",
          "2883:     {file = \"ujson-5.8.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:3f9b63530a5392eb687baff3989d0fb5f45194ae5b1ca8276282fb647f8dcdb3\"},",
          "2884:     {file = \"ujson-5.8.0-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:efeddf950fb15a832376c0c01d8d7713479fbeceaed1eaecb2665aa62c305aec\"},",
          "2885:     {file = \"ujson-5.8.0-pp38-pypy38_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:7d8283ac5d03e65f488530c43d6610134309085b71db4f675e9cf5dff96a8282\"},",
          "2886:     {file = \"ujson-5.8.0-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:eb0142f6f10f57598655340a3b2c70ed4646cbe674191da195eb0985a9813b83\"},",
          "2887:     {file = \"ujson-5.8.0-pp38-pypy38_pp73-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:07d459aca895eb17eb463b00441986b021b9312c6c8cc1d06880925c7f51009c\"},",
          "2888:     {file = \"ujson-5.8.0-pp38-pypy38_pp73-win_amd64.whl\", hash = \"sha256:d524a8c15cfc863705991d70bbec998456a42c405c291d0f84a74ad7f35c5109\"},",
          "2889:     {file = \"ujson-5.8.0-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:d6f84a7a175c75beecde53a624881ff618e9433045a69fcfb5e154b73cdaa377\"},",
          "2890:     {file = \"ujson-5.8.0-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b748797131ac7b29826d1524db1cc366d2722ab7afacc2ce1287cdafccddbf1f\"},",
          "2891:     {file = \"ujson-5.8.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2e72ba76313d48a1a3a42e7dc9d1db32ea93fac782ad8dde6f8b13e35c229130\"},",
          "2892:     {file = \"ujson-5.8.0-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:f504117a39cb98abba4153bf0b46b4954cc5d62f6351a14660201500ba31fe7f\"},",
          "2893:     {file = \"ujson-5.8.0-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:a8c91b6f4bf23f274af9002b128d133b735141e867109487d17e344d38b87d94\"},",
          "2894:     {file = \"ujson-5.8.0.tar.gz\", hash = \"sha256:78e318def4ade898a461b3d92a79f9441e7e0e4d2ad5419abed4336d702c7425\"},",
          "2895: ]",
          "2897: [[package]]",
          "2898: name = \"urllib3\"",
          "2899: version = \"1.26.16\"",
          "2900: description = \"HTTP library with thread-safe connection pooling, file post, and more.\"",
          "2901: optional = false",
          "2902: python-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*\"",
          "2903: files = [",
          "2904:     {file = \"urllib3-1.26.16-py2.py3-none-any.whl\", hash = \"sha256:8d36afa7616d8ab714608411b4a3b13e58f463aee519024578e062e141dce20f\"},",
          "2905:     {file = \"urllib3-1.26.16.tar.gz\", hash = \"sha256:8f135f6502756bde6b2a9b28989df5fbe87c9970cecaa69041edcce7f0589b14\"},",
          "2906: ]",
          "2908: [package.extras]",
          "2909: brotli = [\"brotli (>=1.0.9)\", \"brotlicffi (>=0.8.0)\", \"brotlipy (>=0.6.0)\"]",
          "2910: secure = [\"certifi\", \"cryptography (>=1.3.4)\", \"idna (>=2.0.0)\", \"ipaddress\", \"pyOpenSSL (>=0.14)\", \"urllib3-secure-extra\"]",
          "2911: socks = [\"PySocks (>=1.5.6,!=1.5.7,<2.0)\"]",
          "2913: [[package]]",
          "2914: name = \"urwid\"",
          "2915: version = \"2.1.2\"",
          "2916: description = \"A full-featured console (xterm et al.) user interface library\"",
          "2917: optional = false",
          "2918: python-versions = \"*\"",
          "2919: files = [",
          "2920:     {file = \"urwid-2.1.2.tar.gz\", hash = \"sha256:588bee9c1cb208d0906a9f73c613d2bd32c3ed3702012f51efe318a3f2127eae\"},",
          "2921: ]",
          "2923: [[package]]",
          "2924: name = \"waitress\"",
          "2925: version = \"2.1.2\"",
          "2926: description = \"Waitress WSGI server\"",
          "2927: optional = false",
          "2928: python-versions = \">=3.7.0\"",
          "2929: files = [",
          "2930:     {file = \"waitress-2.1.2-py3-none-any.whl\", hash = \"sha256:7500c9625927c8ec60f54377d590f67b30c8e70ef4b8894214ac6e4cad233d2a\"},",
          "2931:     {file = \"waitress-2.1.2.tar.gz\", hash = \"sha256:780a4082c5fbc0fde6a2fcfe5e26e6efc1e8f425730863c04085769781f51eba\"},",
          "2932: ]",
          "2934: [package.extras]",
          "2935: docs = [\"Sphinx (>=1.8.1)\", \"docutils\", \"pylons-sphinx-themes (>=1.0.9)\"]",
          "2936: testing = [\"coverage (>=5.0)\", \"pytest\", \"pytest-cover\"]",
          "2938: [[package]]",
          "2939: name = \"wcmatch\"",
          "2940: version = \"8.4.1\"",
          "2941: description = \"Wildcard/glob file name matcher.\"",
          "2942: optional = false",
          "2943: python-versions = \">=3.7\"",
          "2944: files = [",
          "2945:     {file = \"wcmatch-8.4.1-py3-none-any.whl\", hash = \"sha256:3476cd107aba7b25ba1d59406938a47dc7eec6cfd0ad09ff77193f21a964dee7\"},",
          "2946:     {file = \"wcmatch-8.4.1.tar.gz\", hash = \"sha256:b1f042a899ea4c458b7321da1b5e3331e3e0ec781583434de1301946ceadb943\"},",
          "2947: ]",
          "2949: [package.dependencies]",
          "2950: bracex = \">=2.1.1\"",
          "2952: [[package]]",
          "2953: name = \"wcwidth\"",
          "2954: version = \"0.2.6\"",
          "2955: description = \"Measures the displayed width of unicode strings in a terminal\"",
          "2956: optional = false",
          "2957: python-versions = \"*\"",
          "2958: files = [",
          "2959:     {file = \"wcwidth-0.2.6-py2.py3-none-any.whl\", hash = \"sha256:795b138f6875577cd91bba52baf9e445cd5118fd32723b460e30a0af30ea230e\"},",
          "2960:     {file = \"wcwidth-0.2.6.tar.gz\", hash = \"sha256:a5220780a404dbe3353789870978e472cfe477761f06ee55077256e509b156d0\"},",
          "2961: ]",
          "2963: [[package]]",
          "2964: name = \"werkzeug\"",
          "2965: version = \"2.1.2\"",
          "2966: description = \"The comprehensive WSGI web application library.\"",
          "2967: optional = false",
          "2968: python-versions = \">=3.7\"",
          "2969: files = [",
          "2970:     {file = \"Werkzeug-2.1.2-py3-none-any.whl\", hash = \"sha256:72a4b735692dd3135217911cbeaa1be5fa3f62bffb8745c5215420a03dc55255\"},",
          "2971:     {file = \"Werkzeug-2.1.2.tar.gz\", hash = \"sha256:1ce08e8093ed67d638d63879fd1ba3735817f7a80de3674d293f5984f25fb6e6\"},",
          "2972: ]",
          "2974: [package.extras]",
          "2975: watchdog = [\"watchdog\"]",
          "2977: [[package]]",
          "2978: name = \"whitenoise\"",
          "2979: version = \"6.5.0\"",
          "2980: description = \"Radically simplified static file serving for WSGI applications\"",
          "2981: optional = false",
          "2982: python-versions = \">=3.7\"",
          "2983: files = [",
          "2984:     {file = \"whitenoise-6.5.0-py3-none-any.whl\", hash = \"sha256:16468e9ad2189f09f4a8c635a9031cc9bb2cdbc8e5e53365407acf99f7ade9ec\"},",
          "2985:     {file = \"whitenoise-6.5.0.tar.gz\", hash = \"sha256:15fe60546ac975b58e357ccaeb165a4ca2d0ab697e48450b8f0307ca368195a8\"},",
          "2986: ]",
          "2988: [package.extras]",
          "2989: brotli = [\"Brotli\"]",
          "2991: [[package]]",
          "2992: name = \"wsproto\"",
          "2993: version = \"1.2.0\"",
          "2994: description = \"WebSockets state-machine based protocol implementation\"",
          "2995: optional = false",
          "2996: python-versions = \">=3.7.0\"",
          "2997: files = [",
          "2998:     {file = \"wsproto-1.2.0-py3-none-any.whl\", hash = \"sha256:b9acddd652b585d75b20477888c56642fdade28bdfd3579aa24a4d2c037dd736\"},",
          "2999:     {file = \"wsproto-1.2.0.tar.gz\", hash = \"sha256:ad565f26ecb92588a3e43bc3d96164de84cd9902482b130d0ddbaa9664a85065\"},",
          "3000: ]",
          "3002: [package.dependencies]",
          "3003: h11 = \">=0.9.0,<1\"",
          "3005: [[package]]",
          "3006: name = \"yara-python-dex\"",
          "3007: version = \"1.0.6\"",
          "3008: description = \"Python interface for YARA\"",
          "3009: optional = false",
          "3010: python-versions = \"*\"",
          "3011: files = [",
          "3012:     {file = \"yara_python_dex-1.0.6-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:f58c5662c2a183cf3f4d74053627a5f887bd29fbda42ae8b12b8c4d3789c2d52\"},",
          "3013:     {file = \"yara_python_dex-1.0.6-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:bff76af1bbc2a689772b455bb087662b1182d7202985a99859c10517e444e97e\"},",
          "3014:     {file = \"yara_python_dex-1.0.6-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:17929a2d3aa97c77ef080861df783d0591a910f1488e90723929bfc288234af3\"},",
          "3015:     {file = \"yara_python_dex-1.0.6-cp310-cp310-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:2d8dbeb56bfbb23b29f44651b36883ba8b90f85f46fa80466debaa01486260fc\"},",
          "3016:     {file = \"yara_python_dex-1.0.6-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:fd5bc12816b9bcb10d8115a34d618e736e952b6b63c2b23061b41fcafea75d0b\"},",
          "3017:     {file = \"yara_python_dex-1.0.6-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:da8e798bbfed132a5895098f37ff762689431477bbd6b663273d43abc6132d17\"},",
          "3018:     {file = \"yara_python_dex-1.0.6-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:030ecee6d83437018d3f5b165439822ab98b59b82ee231fbb65c6de3ff6385da\"},",
          "3019:     {file = \"yara_python_dex-1.0.6-cp310-cp310-win32.whl\", hash = \"sha256:ed51d4f0486c9b7822443b6c7ccadfc818a9a92eae9a55798f5e5814cbf4e6b1\"},",
          "3020:     {file = \"yara_python_dex-1.0.6-cp310-cp310-win_amd64.whl\", hash = \"sha256:f86f728030287dcd7f1ac87d58a4e12f1f80875092f4cff1d5e834f8bc090bc4\"},",
          "3021:     {file = \"yara_python_dex-1.0.6-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:f5b4187ebf90bd477a68974eaea7151b050729c11b97180928a4e19549bf5889\"},",
          "3022:     {file = \"yara_python_dex-1.0.6-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:eef289994867d1407b40b363315b07b949649338b7a8933d268a3a381345caf4\"},",
          "3023:     {file = \"yara_python_dex-1.0.6-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:af6451e98d6272de2dbe305f08441d42ca092f621e16bd0a75d7acd867609012\"},",
          "3024:     {file = \"yara_python_dex-1.0.6-cp311-cp311-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:cd7f819aba638d3d05f37c10f09a02718fb086bfc1e85d282f33ff93a7e715da\"},",
          "3025:     {file = \"yara_python_dex-1.0.6-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bcb2bf352053a8ba288bf8a18151843fc4920369266ddcd379b93ed441c4aa3a\"},",
          "3026:     {file = \"yara_python_dex-1.0.6-cp311-cp311-musllinux_1_1_i686.whl\", hash = \"sha256:c183d789304850838308ec6fec06e1587b566065459d8f82e7ef0027a76becc7\"},",
          "3027:     {file = \"yara_python_dex-1.0.6-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:29d9c64a71ae043b8940fa5e55a01804852a63e339ffd685f4007c035a46e925\"},",
          "3028:     {file = \"yara_python_dex-1.0.6-cp311-cp311-win32.whl\", hash = \"sha256:eb650d9af6104bc27c9dc47ffdef64ecb9c4c62d100832e1707e9a4542c4c743\"},",
          "3029:     {file = \"yara_python_dex-1.0.6-cp311-cp311-win_amd64.whl\", hash = \"sha256:0725a1cbb4ed2ef1498f4abccd6cb414932bee260f1e2581285561712d5745a2\"},",
          "3030:     {file = \"yara_python_dex-1.0.6-cp312-cp312-macosx_10_9_universal2.whl\", hash = \"sha256:b51937c683cc094c41f321fbc28e6191b85c4b45daa24127d304483a7b2e12b2\"},",
          "3031:     {file = \"yara_python_dex-1.0.6-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:ee95badab4a3309baaf0ecf1976fd677a15523de8ed9c151b17eb88f29f92d9b\"},",
          "3032:     {file = \"yara_python_dex-1.0.6-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:97c9aa273c52893d655213ebb965fcbd9bd18506b0d0994b41d74accb22a9133\"},",
          "3033:     {file = \"yara_python_dex-1.0.6-cp312-cp312-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:8be2e6ac69bd07aa7516964391b8695aaa5932cbc41391083ea96d45783636a4\"},",
          "3034:     {file = \"yara_python_dex-1.0.6-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:554e7652128f7ddc2703ec337efc1e84fa087f6efc54a86cd08027a7b6a41f1b\"},",
          "3035:     {file = \"yara_python_dex-1.0.6-cp312-cp312-musllinux_1_1_i686.whl\", hash = \"sha256:f66da654a65914396095c9b3a0a714a270da1adfaa6a4b36fa960ff3d2c38663\"},",
          "3036:     {file = \"yara_python_dex-1.0.6-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:77568582ec8b3436832fb3aa5d2b409516d34659ac1d9d159bdf283733a42122\"},",
          "3037:     {file = \"yara_python_dex-1.0.6-cp312-cp312-win32.whl\", hash = \"sha256:604d5c2475b83709ed548deaa6c4f147a9963164b8a5b029c86a227e57f2bf99\"},",
          "3038:     {file = \"yara_python_dex-1.0.6-cp312-cp312-win_amd64.whl\", hash = \"sha256:e4cf92bdda2a2f34274d3c80973c9db4951abccca5c85f4d6fc0106c039c7c44\"},",
          "3039:     {file = \"yara_python_dex-1.0.6-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:a447448807bfbb08336dcbbd3a179743dbfdf5f51676e15326777b6a51321c3f\"},",
          "3040:     {file = \"yara_python_dex-1.0.6-cp36-cp36m-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ede4d043594be7a7a90df9af8d8e99d87e1d8309ea13060d5c1726b17844850d\"},",
          "3041:     {file = \"yara_python_dex-1.0.6-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ab6b4cef9e1c48baa4ac55e9199a4c0357f835bfebe81c198c0b6d2abf343f6d\"},",
          "3042:     {file = \"yara_python_dex-1.0.6-cp36-cp36m-musllinux_1_1_i686.whl\", hash = \"sha256:aae27bf721cbef9add49d7d55faa55ba89e4cdc34600241bd2e4d93df08a922d\"},",
          "3043:     {file = \"yara_python_dex-1.0.6-cp36-cp36m-musllinux_1_1_x86_64.whl\", hash = \"sha256:e81a544c0fbf025f4d74824003f9cb3662099e2c0aab92c6851efdc9cf656296\"},",
          "3044:     {file = \"yara_python_dex-1.0.6-cp36-cp36m-win32.whl\", hash = \"sha256:daddf685fe0cd42194b58f32aa4c8086881ebf0b0b8e57ba7a10c87fd6f16dc0\"},",
          "3045:     {file = \"yara_python_dex-1.0.6-cp36-cp36m-win_amd64.whl\", hash = \"sha256:4a0fd22e7eccd0972ded42c57665d6103812413c4b3d8d8e015dd3a719070da8\"},",
          "3046:     {file = \"yara_python_dex-1.0.6-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:754c45da489c746f258bb21880e61b048f115d18aed2d88809479da3c21277bb\"},",
          "3047:     {file = \"yara_python_dex-1.0.6-cp37-cp37m-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:825fdec520e0d2210a62d901c965970328dec478f6ea10a3f5eed3ffd3401849\"},",
          "3048:     {file = \"yara_python_dex-1.0.6-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bcff81a70b7b05c79d0a3e8511712356e086769cc9688ed83c7f41b20a31a22e\"},",
          "3049:     {file = \"yara_python_dex-1.0.6-cp37-cp37m-musllinux_1_1_i686.whl\", hash = \"sha256:a881afcb6233c3ae428b696231e78ed867e0a523d6b713e7ef1efb145c7c5ba3\"},",
          "3050:     {file = \"yara_python_dex-1.0.6-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:67f76230e689cf0872c0514909d977d65509b6331e4f5b393c3d2e04abf71757\"},",
          "3051:     {file = \"yara_python_dex-1.0.6-cp37-cp37m-win32.whl\", hash = \"sha256:f9db53aae5b916d1ecf5a67b517f6a184cedd4f72944225563ca36dce4d2301d\"},",
          "3052:     {file = \"yara_python_dex-1.0.6-cp37-cp37m-win_amd64.whl\", hash = \"sha256:c21ade6364425112b37ce67cece990ca933957d18cb557c2056c238d59853a3f\"},",
          "3053:     {file = \"yara_python_dex-1.0.6-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:347394358eb0256eb01c464584961f044b6eaeb89a0fb6da32fe4167563f342e\"},",
          "3054:     {file = \"yara_python_dex-1.0.6-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:26f8cdd9abeb3c8f96977663a6dd2703ede24129a7a2653606731367324cfb84\"},",
          "3055:     {file = \"yara_python_dex-1.0.6-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:753eff068ca6351a443d87b836a87c22e3d209e8725133d30a0b2ea7200c884b\"},",
          "3056:     {file = \"yara_python_dex-1.0.6-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ba7d229d9056238f74e5c754e4a495305598bbd24090290e6f13a8d20da5194b\"},",
          "3057:     {file = \"yara_python_dex-1.0.6-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:845e2404c9c1871d34490f75d755321b29defb452fece3d102ced6b6f7f071c0\"},",
          "3058:     {file = \"yara_python_dex-1.0.6-cp38-cp38-musllinux_1_1_i686.whl\", hash = \"sha256:19ab42baa1a46b545ddfe6ee589e939c0ff308b7a55ab9e83ccd5a22e15e86d4\"},",
          "3059:     {file = \"yara_python_dex-1.0.6-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:a74ee4e5aca1f04a08ec106e2c414db0d202b36d5977b7f7d5d039c2cb96df03\"},",
          "3060:     {file = \"yara_python_dex-1.0.6-cp38-cp38-win32.whl\", hash = \"sha256:89eba8228d4f3ea5fb85e86ecae483f232c38f7a3ed8321dd5a9a8f2c5d562c9\"},",
          "3061:     {file = \"yara_python_dex-1.0.6-cp38-cp38-win_amd64.whl\", hash = \"sha256:f1337c93550873f9efa512ce3686d4049d72c7e50fca801ecefc58bc31132b4f\"},",
          "3062:     {file = \"yara_python_dex-1.0.6-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:e68f926129cdbeb2ec1199bf279482963c050c6793d30bcbd3151165d2710fe4\"},",
          "3063:     {file = \"yara_python_dex-1.0.6-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:6244da132dcd6d9103d680cc51fd651d8aa52848ea53d286634331b61ceed8d5\"},",
          "3064:     {file = \"yara_python_dex-1.0.6-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:4ae7726506f6614043dd3a0f8548b8e7fb791a44ae4e2d1007eebe992478da83\"},",
          "3065:     {file = \"yara_python_dex-1.0.6-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:3faed941e8511d8c45a2374d280efe3c20e4ffc8efd302ea53bd9d1490590d93\"},",
          "3066:     {file = \"yara_python_dex-1.0.6-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d2ca95d177d28cad21bc5042a2bdd5623f8041814e850e77b52477c5adb7e7d2\"},",
          "3067:     {file = \"yara_python_dex-1.0.6-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:dbfe515cd29a01f5f9da803ed188b036c02181260b391610b6a8fff7aab1410b\"},",
          "3068:     {file = \"yara_python_dex-1.0.6-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:7043b90f84e0d17011a0b48516ec1e61846bcc2045193f950c50f295742994a9\"},",
          "3069:     {file = \"yara_python_dex-1.0.6-cp39-cp39-win32.whl\", hash = \"sha256:062dd71d23f0f691621be2626622fa6a9005125ebdeeecff1bd2ee723faa9c00\"},",
          "3070:     {file = \"yara_python_dex-1.0.6-cp39-cp39-win_amd64.whl\", hash = \"sha256:96402fc64781c22cbc55e60050f454a8945e4a8f42451bdfa8fb276e0ff7fd02\"},",
          "3071:     {file = \"yara_python_dex-1.0.6-pp310-pypy310_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:a96ecc124af4af248d7cb0abc048a1b478f4bedcd6bdfe8090d9d91e051d3ed8\"},",
          "3072:     {file = \"yara_python_dex-1.0.6-pp310-pypy310_pp73-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:7c14a759a3bff28df03069a936f0c62be9669c5a050d55b9cce37aaa7eb3437a\"},",
          "3073:     {file = \"yara_python_dex-1.0.6-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:a916c2b58a189327bce4581c0a5230fe567a2c0cf54859e066d03d5575af6373\"},",
          "3074:     {file = \"yara_python_dex-1.0.6-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:8675ef92bcc514a691b472057389a04f632bf5639d8163586ec9f1658896c853\"},",
          "3075:     {file = \"yara_python_dex-1.0.6-pp37-pypy37_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:adac087ad5b5c9ff5bc81f844a12dfe1e8f378e4e8c93e911dabaf045c418a30\"},",
          "3076:     {file = \"yara_python_dex-1.0.6-pp37-pypy37_pp73-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:2c043b77075a29588e2eec3dff97bdf041b8592e1e5f0d64203958cfbf2dbf0b\"},",
          "3077:     {file = \"yara_python_dex-1.0.6-pp37-pypy37_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:159251ff9ba6c00bf87d00559dba5ee2620ba5a79b88cb5b286b38846753c8e1\"},",
          "3078:     {file = \"yara_python_dex-1.0.6-pp37-pypy37_pp73-win_amd64.whl\", hash = \"sha256:6bd30788bfad109062c00828d45ed4c2599435b58d4c07e36bf6bec58b93d54c\"},",
          "3079:     {file = \"yara_python_dex-1.0.6-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:50603c51d4cfa2919b0b096f32c51ade44cf0e966a1987775c31d6ac68e6c81b\"},",
          "3080:     {file = \"yara_python_dex-1.0.6-pp38-pypy38_pp73-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:f08ee6027b2c316aafa59d8104766f94c69e476d13245536fc5359934e25e548\"},",
          "3081:     {file = \"yara_python_dex-1.0.6-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d68f4544770022c619583adedd728c6c127dcd3a86adc3a9623c7c112c8ae939\"},",
          "3082:     {file = \"yara_python_dex-1.0.6-pp38-pypy38_pp73-win_amd64.whl\", hash = \"sha256:ecd2af708808253694abac71f3d4dea0d405c05da9ddc7d3ee5223f091161aa5\"},",
          "3083:     {file = \"yara_python_dex-1.0.6-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:a180ca2b4a14f1a078c08febfba607a4f4d12339cdac94403b70ccb65b9d134b\"},",
          "3084:     {file = \"yara_python_dex-1.0.6-pp39-pypy39_pp73-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:5a28e343d487d505775f928f5544ddeef6f0d699062c144c15a9aab077bd7afc\"},",
          "3085:     {file = \"yara_python_dex-1.0.6-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2cca9d7fbf7fa0fd1105d63fa04dc2381849c4be0ef177957745c775f8ed54cd\"},",
          "3086:     {file = \"yara_python_dex-1.0.6-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:da45cbc03c347f310cbcb9d262ec2d938fb55304c2eec36b779a0e8b9052fbb3\"},",
          "3087: ]",
          "3089: [[package]]",
          "3090: name = \"zipp\"",
          "3091: version = \"3.16.2\"",
          "3092: description = \"Backport of pathlib-compatible object wrapper for zip files\"",
          "3093: optional = false",
          "3094: python-versions = \">=3.8\"",
          "3095: files = [",
          "3096:     {file = \"zipp-3.16.2-py3-none-any.whl\", hash = \"sha256:679e51dd4403591b2d6838a48de3d283f3d188412a9782faadf845f298736ba0\"},",
          "3097:     {file = \"zipp-3.16.2.tar.gz\", hash = \"sha256:ebc15946aa78bd63458992fc81ec3b6f7b1e92d51c35e6de1c3804e73b799147\"},",
          "3098: ]",
          "3100: [package.extras]",
          "3101: docs = [\"furo\", \"jaraco.packaging (>=9.3)\", \"jaraco.tidelift (>=1.4)\", \"rst.linker (>=1.9)\", \"sphinx (>=3.5)\", \"sphinx-lint\"]",
          "3102: testing = [\"big-O\", \"jaraco.functools\", \"jaraco.itertools\", \"more-itertools\", \"pytest (>=6)\", \"pytest-black (>=0.3.7)\", \"pytest-checkdocs (>=2.4)\", \"pytest-cov\", \"pytest-enabler (>=2.2)\", \"pytest-ignore-flaky\", \"pytest-mypy (>=0.9.1)\", \"pytest-ruff\"]",
          "3104: [[package]]",
          "3105: name = \"zstandard\"",
          "3106: version = \"0.19.0\"",
          "3107: description = \"Zstandard bindings for Python\"",
          "3108: optional = false",
          "3109: python-versions = \">=3.6\"",
          "3110: files = [",
          "3111:     {file = \"zstandard-0.19.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:a65e0119ad39e855427520f7829618f78eb2824aa05e63ff19b466080cd99210\"},",
          "3112:     {file = \"zstandard-0.19.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:4fa496d2d674c6e9cffc561639d17009d29adee84a27cf1e12d3c9be14aa8feb\"},",
          "3113:     {file = \"zstandard-0.19.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8f7c68de4f362c1b2f426395fe4e05028c56d0782b2ec3ae18a5416eaf775576\"},",
          "3114:     {file = \"zstandard-0.19.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d1a7a716bb04b1c3c4a707e38e2dee46ac544fff931e66d7ae944f3019fc55b8\"},",
          "3115:     {file = \"zstandard-0.19.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:72758c9f785831d9d744af282d54c3e0f9db34f7eae521c33798695464993da2\"},",
          "3116:     {file = \"zstandard-0.19.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:04c298d381a3b6274b0a8001f0da0ec7819d052ad9c3b0863fe8c7f154061f76\"},",
          "3117:     {file = \"zstandard-0.19.0-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:aef0889417eda2db000d791f9739f5cecb9ccdd45c98f82c6be531bdc67ff0f2\"},",
          "3118:     {file = \"zstandard-0.19.0-cp310-cp310-win32.whl\", hash = \"sha256:9d97c713433087ba5cee61a3e8edb54029753d45a4288ad61a176fa4718033ce\"},",
          "3119:     {file = \"zstandard-0.19.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:81ab21d03e3b0351847a86a0b298b297fde1e152752614138021d6d16a476ea6\"},",
          "3120:     {file = \"zstandard-0.19.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:593f96718ad906e24d6534187fdade28b611f8ed06e27ba972ba48aecec45fc6\"},",
          "3121:     {file = \"zstandard-0.19.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:5e21032efe673b887464667d09406bab6e16d96b09ad87e80859e3a20b6745b6\"},",
          "3122:     {file = \"zstandard-0.19.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:876567136b0359f6581ecd892bdb4ca03a0eead0265db73206c78cff03bcdb0f\"},",
          "3123:     {file = \"zstandard-0.19.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:aa9087571729c968cd853d54b3f6e9d0ec61e45cd2c31e0eb8a0d4bdbbe6da2f\"},",
          "3124:     {file = \"zstandard-0.19.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:8371217dff635cfc0220db2720fc3ce728cd47e72bb7572cca035332823dbdfc\"},",
          "3125:     {file = \"zstandard-0.19.0-cp311-cp311-win32.whl\", hash = \"sha256:126aa8433773efad0871f624339c7984a9c43913952f77d5abeee7f95a0c0860\"},",
          "3126:     {file = \"zstandard-0.19.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:0fde1c56ec118940974e726c2a27e5b54e71e16c6f81d0b4722112b91d2d9009\"},",
          "3127:     {file = \"zstandard-0.19.0-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:898500957ae5e7f31b7271ace4e6f3625b38c0ac84e8cedde8de3a77a7fdae5e\"},",
          "3128:     {file = \"zstandard-0.19.0-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:660b91eca10ee1b44c47843894abe3e6cfd80e50c90dee3123befbf7ca486bd3\"},",
          "3129:     {file = \"zstandard-0.19.0-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:55b3187e0bed004533149882ef8c24e954321f3be81f8a9ceffe35099b82a0d0\"},",
          "3130:     {file = \"zstandard-0.19.0-cp36-cp36m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:6d2182e648e79213b3881998b30225b3f4b1f3e681f1c1eaf4cacf19bde1040d\"},",
          "3131:     {file = \"zstandard-0.19.0-cp36-cp36m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:8ec2c146e10b59c376b6bc0369929647fcd95404a503a7aa0990f21c16462248\"},",
          "3132:     {file = \"zstandard-0.19.0-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:67710d220af405f5ce22712fa741d85e8b3ada7a457ea419b038469ba379837c\"},",
          "3133:     {file = \"zstandard-0.19.0-cp36-cp36m-win32.whl\", hash = \"sha256:f097dda5d4f9b9b01b3c9fa2069f9c02929365f48f341feddf3d6b32510a2f93\"},",
          "3134:     {file = \"zstandard-0.19.0-cp36-cp36m-win_amd64.whl\", hash = \"sha256:f4ebfe03cbae821ef994b2e58e4df6a087470cc522aca502614e82a143365d45\"},",
          "3135:     {file = \"zstandard-0.19.0-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:b80f6f6478f9d4ca26daee6c61584499493bf97950cfaa1a02b16bb5c2c17e70\"},",
          "3136:     {file = \"zstandard-0.19.0-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:909bdd4e19ea437eb9b45d6695d722f6f0fd9d8f493e837d70f92062b9f39faf\"},",
          "3137:     {file = \"zstandard-0.19.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e9c90a44470f2999779057aeaf33461cbd8bb59d8f15e983150d10bb260e16e0\"},",
          "3138:     {file = \"zstandard-0.19.0-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:401508efe02341ae681752a87e8ac9ef76df85ef1a238a7a21786a489d2c983d\"},",
          "3139:     {file = \"zstandard-0.19.0-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:47dfa52bed3097c705451bafd56dac26535545a987b6759fa39da1602349d7ba\"},",
          "3140:     {file = \"zstandard-0.19.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:1a4fb8b4ac6772e4d656103ccaf2e43e45bd16b5da324b963d58ef360d09eb73\"},",
          "3141:     {file = \"zstandard-0.19.0-cp37-cp37m-win32.whl\", hash = \"sha256:d63b04e16df8ea21dfcedbf5a60e11cbba9d835d44cb3cbff233cfd037a916d5\"},",
          "3142:     {file = \"zstandard-0.19.0-cp37-cp37m-win_amd64.whl\", hash = \"sha256:74c2637d12eaacb503b0b06efdf55199a11b1d7c580bd3dd9dfe84cac97ef2f6\"},",
          "3143:     {file = \"zstandard-0.19.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:2e4812720582d0803e84aefa2ac48ce1e1e6e200ca3ce1ae2be6d410c1d637ae\"},",
          "3144:     {file = \"zstandard-0.19.0-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:4514b19abe6dbd36d6c5d75c54faca24b1ceb3999193c5b1f4b685abeabde3d0\"},",
          "3145:     {file = \"zstandard-0.19.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6caed86cd47ae93915d9031dc04be5283c275e1a2af2ceff33932071f3eeff4d\"},",
          "3146:     {file = \"zstandard-0.19.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7ccc4727300f223184520a6064c161a90b5d0283accd72d1455bcd85ec44dd0d\"},",
          "3147:     {file = \"zstandard-0.19.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:879411d04068bd489db57dcf6b82ffad3c5fb2a1fdd30817c566d8b7bedee442\"},",
          "3148:     {file = \"zstandard-0.19.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:8c9ca56345b0c5574db47560603de9d05f63cce5dfeb3a456eb60f3fec737ff2\"},",
          "3149:     {file = \"zstandard-0.19.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:d777d239036815e9b3a093fa9208ad314c040c26d7246617e70e23025b60083a\"},",
          "3150:     {file = \"zstandard-0.19.0-cp38-cp38-win32.whl\", hash = \"sha256:be6329b5ba18ec5d32dc26181e0148e423347ed936dda48bf49fb243895d1566\"},",
          "3151:     {file = \"zstandard-0.19.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:3d5bb598963ac1f1f5b72dd006adb46ca6203e4fb7269a5b6e1f99e85b07ad38\"},",
          "3152:     {file = \"zstandard-0.19.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:619f9bf37cdb4c3dc9d4120d2a1003f5db9446f3618a323219f408f6a9df6725\"},",
          "3153:     {file = \"zstandard-0.19.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:b253d0c53c8ee12c3e53d181fb9ef6ce2cd9c41cbca1c56a535e4fc8ec41e241\"},",
          "3154:     {file = \"zstandard-0.19.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:3c927b6aa682c6d96225e1c797f4a5d0b9f777b327dea912b23471aaf5385376\"},",
          "3155:     {file = \"zstandard-0.19.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2f01b27d0b453f07cbcff01405cdd007e71f5d6410eb01303a16ba19213e58e4\"},",
          "3156:     {file = \"zstandard-0.19.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:c7560f622e3849cc8f3e999791a915addd08fafe80b47fcf3ffbda5b5151047c\"},",
          "3157:     {file = \"zstandard-0.19.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:e892d3177380ec080550b56a7ffeab680af25575d291766bdd875147ba246a91\"},",
          "3158:     {file = \"zstandard-0.19.0-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:60a86b7b2b1c300779167cf595e019e61afcc0e20c4838692983a921db9006ac\"},",
          "3159:     {file = \"zstandard-0.19.0-cp39-cp39-win32.whl\", hash = \"sha256:755020d5aeb1b10bffd93d119e7709a2a7475b6ad79c8d5226cea3f76d152ce0\"},",
          "3160:     {file = \"zstandard-0.19.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:55a513ec67e85abd8b8b83af8813368036f03e2d29a50fc94033504918273980\"},",
          "3161:     {file = \"zstandard-0.19.0.tar.gz\", hash = \"sha256:31d12fcd942dd8dbf52ca5f6b1bbe287f44e5d551a081a983ff3ea2082867863\"},",
          "3162: ]",
          "3164: [package.dependencies]",
          "3165: cffi = {version = \">=1.11\", markers = \"platform_python_implementation == \\\"PyPy\\\"\"}",
          "3167: [package.extras]",
          "3168: cffi = [\"cffi (>=1.11)\"]",
          "3170: [metadata]",
          "3171: lock-version = \"2.0\"",
          "3172: python-versions = \"^3.9\"",
          "3173: content-hash = \"edb27c4ac14d60405740f3e73b0abcf17c4b9018678ef1b3719a5d28bf96bc5f\"",
          "",
          "---------------"
        ],
        "run.bat||run.bat": [
          "File: run.bat -> run.bat",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: :usage",
          "7: SET conf=\"0.0.0.0:8000 [::]:8000\"",
          "8: :run",
          "",
          "[Removed Lines]",
          "9: set venv=.\\venv\\Scripts\\activate",
          "10: set server=.\\venv\\Scripts\\waitress-serve.exe",
          "11: if exist %server% (",
          "12:   echo Running MobSF on %conf%",
          "13:   %venv%",
          "14:   %server% --listen=%conf% --threads=10 --channel-timeout=3600 mobsf.MobSF.wsgi:application",
          "15: ) else (",
          "16:   echo [ERROR] Incomplete setup. Please ensure that setup.bat completes without any errors.",
          "17:   pause",
          "18:   exit /b",
          "19: )",
          "",
          "[Added Lines]",
          "10: poetry run waitress-serve --listen=%conf% --threads=10 --channel-timeout=3600 mobsf.MobSF.wsgi:application",
          "",
          "---------------"
        ],
        "run.sh||run.sh": [
          "File: run.sh -> run.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:     IP='[::]'",
          "46:     PORT='8000'",
          "47: fi",
          "",
          "[Removed Lines]",
          "48: . venv/bin/activate && gunicorn -b ${IP}:${PORT} mobsf.MobSF.wsgi:application --workers=1 --threads=10 --timeout=3600",
          "",
          "[Added Lines]",
          "48: poetry run gunicorn -b ${IP}:${PORT} mobsf.MobSF.wsgi:application --workers=1 --threads=10 --timeout=3600 \\",
          "49:     --log-level=citical --log-file=- --access-logfile=- --error-logfile=- --capture-output",
          "",
          "---------------"
        ],
        "scripts/check_install.py||scripts/check_install.py": [
          "File: scripts/check_install.py -> scripts/check_install.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "scripts/entrypoint.sh||scripts/entrypoint.sh": [
          "File: scripts/entrypoint.sh -> scripts/entrypoint.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: python3 manage.py makemigrations StaticAnalyzer && \\",
          "6: python3 manage.py migrate",
          "",
          "[Removed Lines]",
          "8: gunicorn -b 0.0.0.0:8000 \"mobsf.MobSF.wsgi:application\" --workers=1 --threads=10 --timeout=3600",
          "",
          "[Added Lines]",
          "8: exec gunicorn -b 0.0.0.0:8000 \"mobsf.MobSF.wsgi:application\" --workers=1 --threads=10 --timeout=3600 \\",
          "9:     --worker-tmp-dir=/dev/shm --log-level=citical --log-file=- --access-logfile=- --error-logfile=- --capture-output",
          "",
          "---------------"
        ],
        "scripts/install_java_wkhtmltopdf.sh||scripts/install_java_wkhtmltopdf.sh": [
          "File: scripts/install_java_wkhtmltopdf.sh -> scripts/install_java_wkhtmltopdf.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/bin/bash",
          "2: if [ \"$TARGETPLATFORM\" == \"linux/arm64\" ]",
          "3: then",
          "4:     WKH_FILE=$WKH_FILE_ARM",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: # For apktool",
          "4: mkdir -p /home/mobsf/.local/share/apktool/framework",
          "6: # Install yara-python dex on linux/arm64",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "13: echo \"Target platform identified as $TARGETPLATFORM\"",
          "19: echo \"Installing $WKH_FILE ...\"",
          "20: wget --quiet -O /tmp/${WKH_FILE} \"${WKH_URL}\" && \\",
          "21:     dpkg -i /tmp/${WKH_FILE} && \\",
          "",
          "[Removed Lines]",
          "15: JDK_URL=\"https://download.java.net/java/GA/jdk16.0.1/7147401fd7354114ac51ef3e1328291f/9/GPL/${JDK_FILE}\"",
          "16: WKH_URL=\"https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/${WKH_FILE}\"",
          "18: #Download and install wkhtmltopdf",
          "",
          "[Added Lines]",
          "20: JDK_URL=\"https://download.java.net/java/GA/jdk20.0.2/6e380f22cbe7469fa75fb448bd903d8e/9/GPL/${JDK_FILE}\"",
          "21: WKH_URL=\"https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6.1-2/${WKH_FILE}\"",
          "23: # Download and install wkhtmltopdf",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "23:     ln -s /usr/local/bin/wkhtmltopdf /usr/bin && \\",
          "24:     rm -f /tmp/${WKH_FILE}",
          "27: echo \"Installing $JDK_FILE ...\"",
          "28: wget --quiet \"${JDK_URL}\" && \\",
          "29:     tar zxf \"${JDK_FILE}\" && \\",
          "",
          "[Removed Lines]",
          "26: # Install OpenJDK12",
          "",
          "[Added Lines]",
          "31: # Install OpenJDK",
          "",
          "---------------"
        ],
        "setup.bat||setup.bat": [
          "File: setup.bat -> setup.bat",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: rem Python Check",
          "3: set /a count=0",
          "4: where python >nul 2>&1 && (",
          "6:   :redo",
          "7:   if %count% lss 3 (",
          "8:     set /a count+=1",
          "",
          "[Removed Lines]",
          "5:   echo [INSTALL] Checking for Python version 3.8+",
          "",
          "[Added Lines]",
          "5:   echo [INSTALL] Checking for Python version 3.9+",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "13:   ) else (",
          "14:     exit /b",
          "15:   )",
          "17:   if errorlevel 1 (",
          "18:       if \"%var%\"==\"\" goto redo",
          "20:       exit /b",
          "21:   ) else (",
          "22:       echo [INSTALL] Found %var%",
          "",
          "[Removed Lines]",
          "16:   echo %var%|findstr /R \"[3].[8910]\" >nul",
          "19:       echo [ERROR] MobSF dependencies require Python 3.8-3.10. Your python points to %var%",
          "",
          "[Added Lines]",
          "16:   echo %var%|findstr /R \"[3].[91011]\" >nul",
          "19:       echo [ERROR] MobSF dependencies require Python 3.9-3.11. Your python points to %var%",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "52:     exit /b",
          "53:   )",
          "62:   set LIB=C:\\Program Files\\OpenSSL-Win64\\lib;%LIB%",
          "63:   set INCLUDE=C:\\Program Files\\OpenSSL-Win64\\include;%INCLUDE%",
          "65:   echo [INSTALL] Installing Requirements",
          "69:   echo [INSTALL] Clean Up",
          "70:   call scripts/clean.bat y",
          "72:   echo [INSTALL] Migrating Database",
          "76:   echo Download and Install wkhtmltopdf for PDF Report Generation - https://wkhtmltopdf.org/downloads.html",
          "77:   echo [INSTALL] Installation Complete",
          "79:   exit /b 0",
          "80: ) || (",
          "81:   echo [ERROR] python3 is not installed",
          "",
          "[Removed Lines]",
          "55:   rem Create venv",
          "56:   echo [INSTALL] Creating venv",
          "57:   rmdir \"venv\" /q /s >nul 2>&1",
          "58:   python -m venv ./venv",
          "59:   set venv=.\\venv\\Scripts\\python",
          "60:   %venv% -m pip install --upgrade pip",
          "66:   %venv% -m pip install --no-cache-dir wheel",
          "67:   %venv% -m pip install --no-cache-dir --use-deprecated=legacy-resolver -r requirements.txt",
          "73:   %venv% manage.py makemigrations",
          "74:   %venv% manage.py makemigrations StaticAnalyzer",
          "75:   %venv% manage.py migrate",
          "78:   %venv% scripts/check_install.py",
          "",
          "[Added Lines]",
          "59:   python -m pip install --no-cache-dir wheel poetry==1.6.1",
          "60:   python -m poetry lock",
          "61:   python -m poetry install --only main --no-interaction --no-ansi || python -m poetry install --only main --no-interaction --no-ansi || python -m poetry install --only main --no-interaction --no-ansi",
          "67:   poetry run python manage.py makemigrations",
          "68:   poetry run python manage.py makemigrations StaticAnalyzer",
          "69:   poetry run python manage.py migrate",
          "",
          "---------------"
        ],
        "setup.py||setup.py": [
          "File: setup.py -> setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:         'Development Status :: 4 - Beta',",
          "40:         'Intended Audience :: Developers',",
          "41:         'License :: OSI Approved :: GNU General Public License v3 (GPLv3)',",
          "43:         'Topic :: Security',",
          "44:         'Topic :: Software Development :: Quality Assurance',",
          "45:     ],",
          "",
          "[Removed Lines]",
          "42:         'Programming Language :: Python :: 3.8',",
          "",
          "[Added Lines]",
          "42:         'Programming Language :: Python :: 3.9',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47:         'mobsf', 'mobsf.*',",
          "48:     ]),",
          "49:     include_package_data=True,",
          "51:     entry_points={",
          "52:         'console_scripts': [",
          "53:             'mobsf = mobsf.__main__:main',",
          "",
          "[Removed Lines]",
          "50:     python_requires='>=3.8',",
          "",
          "[Added Lines]",
          "50:     python_requires='>=3.9',",
          "",
          "---------------"
        ],
        "setup.sh||setup.sh": [
          "File: setup.sh -> setup.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: python_version=\"$(python3 --version 2>&1 | awk '{print $2}')\"",
          "12: py_major=$(echo \"$python_version\" | cut -d'.' -f1)",
          "13: py_minor=$(echo \"$python_version\" | cut -d'.' -f2)",
          "15:     echo \"[INSTALL] Found Python ${python_version}\"",
          "16: else",
          "18:     exit 1",
          "19: fi",
          "",
          "[Removed Lines]",
          "14: if [ \"$py_major\" -eq \"3\" ] && [ \"$py_minor\" -gt \"7\" ] && [ \"$py_minor\" -lt \"11\" ]; then",
          "17:     echo \"[ERROR] MobSF dependencies require Python 3.8 - 3.10. You have Python version ${python_version} or python3 points to Python ${python_version}.\"",
          "",
          "[Added Lines]",
          "14: if [ \"$py_major\" -eq \"3\" ] && [ \"$py_minor\" -gt \"8\" ] && [ \"$py_minor\" -lt \"12\" ]; then",
          "17:     echo \"[ERROR] MobSF dependencies require Python 3.9 - 3.11. You have Python version ${python_version} or python3 points to Python ${python_version}.\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:    fi",
          "46: fi",
          "61: echo '[INSTALL] Installing Requirements'",
          "65: echo '[INSTALL] Clean Up'",
          "66: bash scripts/clean.sh y",
          "68: echo '[INSTALL] Migrating Database'",
          "72: wkhtmltopdf -V",
          "73: if ! [ $? -eq 0 ]; then",
          "74:     echo 'Download and Install wkhtmltopdf for PDF Report Generation - https://wkhtmltopdf.org/downloads.html'",
          "75: fi",
          "76: echo '[INSTALL] Installation Complete'",
          "",
          "[Removed Lines]",
          "48: # Install venv",
          "49: echo '[INSTALL] Using python virtualenv'",
          "50: rm -rf ./venv",
          "51: python3 -m venv ./venv",
          "52: if [ $? -eq 0 ]; then",
          "53:     echo '[INSTALL] Activating virtualenv'",
          "54:     source venv/bin/activate",
          "55:     pip install --upgrade pip",
          "56: else",
          "57:     echo '[ERROR] Failed to create virtualenv. Please install MobSF requirements mentioned in Documentation.'",
          "58:     exit 1",
          "59: fi",
          "62: pip install --no-cache-dir wheel",
          "63: pip install --no-cache-dir --use-deprecated=legacy-resolver -r requirements.txt",
          "69: python manage.py makemigrations",
          "70: python manage.py makemigrations StaticAnalyzer",
          "71: python manage.py migrate",
          "77: python scripts/check_install.py",
          "",
          "[Added Lines]",
          "49: python3 -m pip install --no-cache-dir wheel poetry==1.6.1",
          "50: python3 -m poetry install --only main --no-interaction --no-ansi",
          "56: poetry run python manage.py makemigrations",
          "57: poetry run python manage.py makemigrations StaticAnalyzer",
          "58: poetry run python manage.py migrate",
          "",
          "---------------"
        ]
      }
    }
  ]
}