{
  "cve_id": "CVE-2022-0334",
  "cve_desc": "A flaw was found in Moodle in versions 3.11 to 3.11.4, 3.10 to 3.10.8, 3.9 to 3.9.11 and earlier unsupported versions. Insufficient capability checks could lead to users accessing their grade report for courses where they did not have the required gradereport/user:view capability.",
  "repo": "moodle/moodle",
  "patch_hash": "1964d68f8500ea3c7b776fa8a2af6266ed109f84",
  "patch_info": {
    "commit_hash": "1964d68f8500ea3c7b776fa8a2af6266ed109f84",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/1964d68f8500ea3c7b776fa8a2af6266ed109f84",
    "files": [
      "course/user.php",
      "grade/report/overview/lib.php"
    ],
    "message": "MDL-72772 gradereport_overview: access checks for viewing grades.",
    "before_after_code_files": [
      "course/user.php||course/user.php",
      "grade/report/overview/lib.php||grade/report/overview/lib.php"
    ]
  },
  "patch_diff": {
    "course/user.php||course/user.php": [
      "File: course/user.php -> course/user.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "192:         require_once $CFG->dirroot.'/grade/lib.php';",
      "193:         require_once $CFG->dirroot.'/grade/report/'.$CFG->grade_profilereport.'/lib.php';",
      "195:         $functionname = 'grade_report_'.$CFG->grade_profilereport.'_profilereport';",
      "196:         if (function_exists($functionname)) {",
      "197:             $functionname($course, $user, $viewasuser);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "196:         require_capability('gradereport/' . $CFG->grade_profilereport .':view', $coursecontext);",
      "",
      "---------------"
    ],
    "grade/report/overview/lib.php||grade/report/overview/lib.php": [
      "File: grade/report/overview/lib.php -> grade/report/overview/lib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "279:                 $finalgrade = $coursedata['finalgrade'];",
      "280:                 $courseitem = $coursedata['courseitem'];",
      "290:                 }",
      "294:                 if ($this->showrank['any']) {",
      "295:                     if ($this->showrank[$course->id] && !is_null($finalgrade)) {",
      "",
      "[Removed Lines]",
      "282:                 $coursename = format_string(get_course_display_name_for_list($course), true, array('context' => $coursecontext));",
      "284:                 if ($activitylink) {",
      "285:                     $courselink = html_writer::link(new moodle_url('/course/user.php', array('mode' => 'grade', 'id' => $course->id,",
      "286:                         'user' => $this->user->id)), $coursename);",
      "287:                 } else {",
      "288:                     $courselink = html_writer::link(new moodle_url('/grade/report/user/index.php', array('id' => $course->id,",
      "289:                         'userid' => $this->user->id, 'group' => $this->gpr->groupid)), $coursename);",
      "292:                 $data = array($courselink, grade_format_gradevalue($finalgrade, $courseitem, true));",
      "",
      "[Added Lines]",
      "282:                 $coursenamelink = format_string(get_course_display_name_for_list($course), true, ['context' => $coursecontext]);",
      "285:                 if ($activitylink && has_capability('gradereport/' . $CFG->grade_profilereport .':view', $coursecontext)) {",
      "286:                     $coursenamelink = html_writer::link(new moodle_url('/course/user.php', [",
      "287:                         'mode' => 'grade',",
      "288:                         'id' => $course->id,",
      "289:                         'user' => $this->user->id,",
      "290:                     ]), $coursenamelink);",
      "291:                 } else if (!$activitylink && has_capability('gradereport/user:view', $coursecontext)) {",
      "292:                     $coursenamelink = html_writer::link(new moodle_url('/grade/report/user/index.php', [",
      "293:                         'id' => $course->id,",
      "294:                         'userid' => $this->user->id,",
      "295:                         'group' => $this->gpr->groupid,",
      "296:                     ]), $coursenamelink);",
      "299:                 $data = [$coursenamelink, grade_format_gradevalue($finalgrade, $courseitem, true)];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6d18f136ae88ec97e351a723df570816a959ec68",
      "candidate_info": {
        "commit_hash": "6d18f136ae88ec97e351a723df570816a959ec68",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/6d18f136ae88ec97e351a723df570816a959ec68",
        "files": [
          "course/user.php",
          "grade/report/overview/lib.php"
        ],
        "message": "MDL-72772 gradereport_overview: account for users with parent roles.",
        "before_after_code_files": [
          "course/user.php||course/user.php",
          "grade/report/overview/lib.php||grade/report/overview/lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "course/user.php||course/user.php",
            "grade/report/overview/lib.php||grade/report/overview/lib.php"
          ],
          "candidate": [
            "course/user.php||course/user.php",
            "grade/report/overview/lib.php||grade/report/overview/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "course/user.php||course/user.php": [
          "File: course/user.php -> course/user.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "193:         require_once $CFG->dirroot.'/grade/report/'.$CFG->grade_profilereport.'/lib.php';",
          "198:         $functionname = 'grade_report_'.$CFG->grade_profilereport.'_profilereport';",
          "199:         if (function_exists($functionname)) {",
          "",
          "[Removed Lines]",
          "196:         require_capability('gradereport/' . $CFG->grade_profilereport .':view', $coursecontext);",
          "",
          "[Added Lines]",
          "196:         if (!$viewasuser) {",
          "197:             require_capability('gradereport/' . $CFG->grade_profilereport . ':view', $coursecontext);",
          "198:         }",
          "",
          "---------------"
        ],
        "grade/report/overview/lib.php||grade/report/overview/lib.php": [
          "File: grade/report/overview/lib.php -> grade/report/overview/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "272:         if ($this->courses) {",
          "273:             $coursesdata = $this->setup_courses_data($studentcoursesonly);",
          "275:             foreach ($coursesdata as $coursedata) {",
          "277:                 $course = $coursedata['course'];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "276:             $viewasuser = $this->course->showgrades && has_any_capability([",
          "277:                 'moodle/grade:viewall',",
          "278:                 'moodle/user:viewuseractivitiesreport',",
          "279:             ], context_user::instance($this->user->id));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "282:                 $coursenamelink = format_string(get_course_display_name_for_list($course), true, ['context' => $coursecontext]);",
          "286:                     $coursenamelink = html_writer::link(new moodle_url('/course/user.php', [",
          "287:                         'mode' => 'grade',",
          "288:                         'id' => $course->id,",
          "289:                         'user' => $this->user->id,",
          "290:                     ]), $coursenamelink);",
          "292:                     $coursenamelink = html_writer::link(new moodle_url('/grade/report/user/index.php', [",
          "293:                         'id' => $course->id,",
          "294:                         'userid' => $this->user->id,",
          "",
          "[Removed Lines]",
          "285:                 if ($activitylink && has_capability('gradereport/' . $CFG->grade_profilereport .':view', $coursecontext)) {",
          "291:                 } else if (!$activitylink && has_capability('gradereport/user:view', $coursecontext)) {",
          "",
          "[Added Lines]",
          "291:                 if ($activitylink &&",
          "292:                         (has_capability('gradereport/' . $CFG->grade_profilereport .':view', $coursecontext) || $viewasuser)) {",
          "299:                 } else if (!$activitylink && (has_capability('gradereport/user:view', $coursecontext) || $viewasuser)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "311d7ce594a602d177a279a28efb4fd7a0ff4bb0",
      "candidate_info": {
        "commit_hash": "311d7ce594a602d177a279a28efb4fd7a0ff4bb0",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/311d7ce594a602d177a279a28efb4fd7a0ff4bb0",
        "files": [
          "course/user.php",
          "grade/report/overview/lib.php"
        ],
        "message": "MDL-72772 gradereport_overview: access checks for viewing grades.",
        "before_after_code_files": [
          "course/user.php||course/user.php",
          "grade/report/overview/lib.php||grade/report/overview/lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "course/user.php||course/user.php",
            "grade/report/overview/lib.php||grade/report/overview/lib.php"
          ],
          "candidate": [
            "course/user.php||course/user.php",
            "grade/report/overview/lib.php||grade/report/overview/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "course/user.php||course/user.php": [
          "File: course/user.php -> course/user.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "173:         require_once $CFG->dirroot.'/grade/lib.php';",
          "174:         require_once $CFG->dirroot.'/grade/report/'.$CFG->grade_profilereport.'/lib.php';",
          "176:         $functionname = 'grade_report_'.$CFG->grade_profilereport.'_profilereport';",
          "177:         if (function_exists($functionname)) {",
          "178:             $functionname($course, $user, $viewasuser);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "177:         require_capability('gradereport/' . $CFG->grade_profilereport .':view', $coursecontext);",
          "",
          "---------------"
        ],
        "grade/report/overview/lib.php||grade/report/overview/lib.php": [
          "File: grade/report/overview/lib.php -> grade/report/overview/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "279:                 $finalgrade = $coursedata['finalgrade'];",
          "280:                 $courseitem = $coursedata['courseitem'];",
          "290:                 }",
          "294:                 if ($this->showrank['any']) {",
          "295:                     if ($this->showrank[$course->id] && !is_null($finalgrade)) {",
          "",
          "[Removed Lines]",
          "282:                 $coursename = format_string(get_course_display_name_for_list($course), true, array('context' => $coursecontext));",
          "284:                 if ($activitylink) {",
          "285:                     $courselink = html_writer::link(new moodle_url('/course/user.php', array('mode' => 'grade', 'id' => $course->id,",
          "286:                         'user' => $this->user->id)), $coursename);",
          "287:                 } else {",
          "288:                     $courselink = html_writer::link(new moodle_url('/grade/report/user/index.php', array('id' => $course->id,",
          "289:                         'userid' => $this->user->id, 'group' => $this->gpr->groupid)), $coursename);",
          "292:                 $data = array($courselink, grade_format_gradevalue($finalgrade, $courseitem, true));",
          "",
          "[Added Lines]",
          "282:                 $coursenamelink = format_string(get_course_display_name_for_list($course), true, ['context' => $coursecontext]);",
          "285:                 if ($activitylink && has_capability('gradereport/' . $CFG->grade_profilereport .':view', $coursecontext)) {",
          "286:                     $coursenamelink = html_writer::link(new moodle_url('/course/user.php', [",
          "287:                         'mode' => 'grade',",
          "288:                         'id' => $course->id,",
          "289:                         'user' => $this->user->id,",
          "290:                     ]), $coursenamelink);",
          "291:                 } else if (!$activitylink && has_capability('gradereport/user:view', $coursecontext)) {",
          "292:                     $coursenamelink = html_writer::link(new moodle_url('/grade/report/user/index.php', [",
          "293:                         'id' => $course->id,",
          "294:                         'userid' => $this->user->id,",
          "295:                         'group' => $this->gpr->groupid,",
          "296:                     ]), $coursenamelink);",
          "299:                 $data = [$coursenamelink, grade_format_gradevalue($finalgrade, $courseitem, true)];",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b76e65351873d523c3fc59b02ed7d493c1efa1e8",
      "candidate_info": {
        "commit_hash": "b76e65351873d523c3fc59b02ed7d493c1efa1e8",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/b76e65351873d523c3fc59b02ed7d493c1efa1e8",
        "files": [
          "course/user.php",
          "grade/report/overview/lib.php"
        ],
        "message": "MDL-72772 gradereport_overview: access checks for viewing grades.",
        "before_after_code_files": [
          "course/user.php||course/user.php",
          "grade/report/overview/lib.php||grade/report/overview/lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "course/user.php||course/user.php",
            "grade/report/overview/lib.php||grade/report/overview/lib.php"
          ],
          "candidate": [
            "course/user.php||course/user.php",
            "grade/report/overview/lib.php||grade/report/overview/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "course/user.php||course/user.php": [
          "File: course/user.php -> course/user.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "173:         require_once $CFG->dirroot.'/grade/lib.php';",
          "174:         require_once $CFG->dirroot.'/grade/report/'.$CFG->grade_profilereport.'/lib.php';",
          "176:         $functionname = 'grade_report_'.$CFG->grade_profilereport.'_profilereport';",
          "177:         if (function_exists($functionname)) {",
          "178:             $functionname($course, $user, $viewasuser);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "177:         require_capability('gradereport/' . $CFG->grade_profilereport .':view', $coursecontext);",
          "",
          "---------------"
        ],
        "grade/report/overview/lib.php||grade/report/overview/lib.php": [
          "File: grade/report/overview/lib.php -> grade/report/overview/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "279:                 $finalgrade = $coursedata['finalgrade'];",
          "280:                 $courseitem = $coursedata['courseitem'];",
          "290:                 }",
          "294:                 if ($this->showrank['any']) {",
          "295:                     if ($this->showrank[$course->id] && !is_null($finalgrade)) {",
          "",
          "[Removed Lines]",
          "282:                 $coursename = format_string(get_course_display_name_for_list($course), true, array('context' => $coursecontext));",
          "284:                 if ($activitylink) {",
          "285:                     $courselink = html_writer::link(new moodle_url('/course/user.php', array('mode' => 'grade', 'id' => $course->id,",
          "286:                         'user' => $this->user->id)), $coursename);",
          "287:                 } else {",
          "288:                     $courselink = html_writer::link(new moodle_url('/grade/report/user/index.php', array('id' => $course->id,",
          "289:                         'userid' => $this->user->id, 'group' => $this->gpr->groupid)), $coursename);",
          "292:                 $data = array($courselink, grade_format_gradevalue($finalgrade, $courseitem, true));",
          "",
          "[Added Lines]",
          "282:                 $coursenamelink = format_string(get_course_display_name_for_list($course), true, ['context' => $coursecontext]);",
          "285:                 if ($activitylink && has_capability('gradereport/' . $CFG->grade_profilereport .':view', $coursecontext)) {",
          "286:                     $coursenamelink = html_writer::link(new moodle_url('/course/user.php', [",
          "287:                         'mode' => 'grade',",
          "288:                         'id' => $course->id,",
          "289:                         'user' => $this->user->id,",
          "290:                     ]), $coursenamelink);",
          "291:                 } else if (!$activitylink && has_capability('gradereport/user:view', $coursecontext)) {",
          "292:                     $coursenamelink = html_writer::link(new moodle_url('/grade/report/user/index.php', [",
          "293:                         'id' => $course->id,",
          "294:                         'userid' => $this->user->id,",
          "295:                         'group' => $this->gpr->groupid,",
          "296:                     ]), $coursenamelink);",
          "299:                 $data = [$coursenamelink, grade_format_gradevalue($finalgrade, $courseitem, true)];",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e414f5b7719a807ee996312074aee083a4c09367",
      "candidate_info": {
        "commit_hash": "e414f5b7719a807ee996312074aee083a4c09367",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/e414f5b7719a807ee996312074aee083a4c09367",
        "files": [
          "course/user.php",
          "grade/report/overview/lib.php"
        ],
        "message": "MDL-72772 gradereport_overview: access checks for viewing grades.",
        "before_after_code_files": [
          "course/user.php||course/user.php",
          "grade/report/overview/lib.php||grade/report/overview/lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "course/user.php||course/user.php",
            "grade/report/overview/lib.php||grade/report/overview/lib.php"
          ],
          "candidate": [
            "course/user.php||course/user.php",
            "grade/report/overview/lib.php||grade/report/overview/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "course/user.php||course/user.php": [
          "File: course/user.php -> course/user.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "173:         require_once $CFG->dirroot.'/grade/lib.php';",
          "174:         require_once $CFG->dirroot.'/grade/report/'.$CFG->grade_profilereport.'/lib.php';",
          "176:         $functionname = 'grade_report_'.$CFG->grade_profilereport.'_profilereport';",
          "177:         if (function_exists($functionname)) {",
          "178:             $functionname($course, $user, $viewasuser);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "177:         require_capability('gradereport/' . $CFG->grade_profilereport .':view', $coursecontext);",
          "",
          "---------------"
        ],
        "grade/report/overview/lib.php||grade/report/overview/lib.php": [
          "File: grade/report/overview/lib.php -> grade/report/overview/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "279:                 $finalgrade = $coursedata['finalgrade'];",
          "280:                 $courseitem = $coursedata['courseitem'];",
          "290:                 }",
          "294:                 if ($this->showrank['any']) {",
          "295:                     if ($this->showrank[$course->id] && !is_null($finalgrade)) {",
          "",
          "[Removed Lines]",
          "282:                 $coursename = format_string(get_course_display_name_for_list($course), true, array('context' => $coursecontext));",
          "284:                 if ($activitylink) {",
          "285:                     $courselink = html_writer::link(new moodle_url('/course/user.php', array('mode' => 'grade', 'id' => $course->id,",
          "286:                         'user' => $this->user->id)), $coursename);",
          "287:                 } else {",
          "288:                     $courselink = html_writer::link(new moodle_url('/grade/report/user/index.php', array('id' => $course->id,",
          "289:                         'userid' => $this->user->id, 'group' => $this->gpr->groupid)), $coursename);",
          "292:                 $data = array($courselink, grade_format_gradevalue($finalgrade, $courseitem, true));",
          "",
          "[Added Lines]",
          "282:                 $coursenamelink = format_string(get_course_display_name_for_list($course), true, ['context' => $coursecontext]);",
          "285:                 if ($activitylink && has_capability('gradereport/' . $CFG->grade_profilereport .':view', $coursecontext)) {",
          "286:                     $coursenamelink = html_writer::link(new moodle_url('/course/user.php', [",
          "287:                         'mode' => 'grade',",
          "288:                         'id' => $course->id,",
          "289:                         'user' => $this->user->id,",
          "290:                     ]), $coursenamelink);",
          "291:                 } else if (!$activitylink && has_capability('gradereport/user:view', $coursecontext)) {",
          "292:                     $coursenamelink = html_writer::link(new moodle_url('/grade/report/user/index.php', [",
          "293:                         'id' => $course->id,",
          "294:                         'userid' => $this->user->id,",
          "295:                         'group' => $this->gpr->groupid,",
          "296:                     ]), $coursenamelink);",
          "299:                 $data = [$coursenamelink, grade_format_gradevalue($finalgrade, $courseitem, true)];",
          "",
          "---------------"
        ]
      }
    }
  ]
}