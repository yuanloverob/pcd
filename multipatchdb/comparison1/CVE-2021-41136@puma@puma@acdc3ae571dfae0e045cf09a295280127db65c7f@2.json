{
  "cve_id": "CVE-2021-41136",
  "cve_desc": "Puma is a HTTP 1.1 server for Ruby/Rack applications. Prior to versions 5.5.1 and 4.3.9, using `puma` with a proxy which forwards HTTP header values which contain the LF character could allow HTTP request smugggling. A client could smuggle a request through a proxy, causing the proxy to send a response back to another unknown client. The only proxy which has this behavior, as far as the Puma team is aware of, is Apache Traffic Server. If the proxy uses persistent connections and the client adds another request in via HTTP pipelining, the proxy may mistake it as the first request's body. Puma, however, would see it as two requests, and when processing the second request, send back a response that the proxy does not expect. If the proxy has reused the persistent connection to Puma to send another request for a different client, the second response from the first client will be sent to the second client. This vulnerability was patched in Puma 5.5.1 and 4.3.9. As a workaround, do not use Apache Traffic Server with `puma`.",
  "repo": "puma/puma",
  "patch_hash": "acdc3ae571dfae0e045cf09a295280127db65c7f",
  "patch_info": {
    "commit_hash": "acdc3ae571dfae0e045cf09a295280127db65c7f",
    "repo": "puma/puma",
    "commit_url": "https://github.com/puma/puma/commit/acdc3ae571dfae0e045cf09a295280127db65c7f",
    "files": [
      "History.md",
      "ext/puma_http11/http11_parser.c",
      "ext/puma_http11/http11_parser_common.rl",
      "ext/puma_http11/org/jruby/puma/Http11Parser.java",
      "lib/puma/const.rb",
      "test/test_http11.rb"
    ],
    "message": "Merge pull request from GHSA-48w2-rm65-62xx\n\n* Fix HTTP request smuggling vulnerability\n\nSee GHSA-48w2-rm65-62xx or CVE-2021-41136 for more info.\n\n* 4.3.9 release note\n\n* 5.5.1 release note\n\n* 5.5.1",
    "before_after_code_files": [
      "ext/puma_http11/http11_parser.c||ext/puma_http11/http11_parser.c",
      "ext/puma_http11/http11_parser_common.rl||ext/puma_http11/http11_parser_common.rl",
      "ext/puma_http11/org/jruby/puma/Http11Parser.java||ext/puma_http11/org/jruby/puma/Http11Parser.java",
      "lib/puma/const.rb||lib/puma/const.rb",
      "test/test_http11.rb||test/test_http11.rb"
    ]
  },
  "patch_diff": {
    "ext/puma_http11/http11_parser.c||ext/puma_http11/http11_parser.c": [
      "File: ext/puma_http11/http11_parser.c -> ext/puma_http11/http11_parser.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "426: case 18:",
      "427: #line 428 \"ext/puma_http11/http11_parser.c\"",
      "428:  switch( (*p) ) {",
      "429:   case 13: goto tr26;",
      "430:   case 32: goto tr27;",
      "431:  }",
      "433: tr25:",
      "434: #line 46 \"ext/puma_http11/http11_parser.rl\"",
      "435:  { MARK(mark, p); }",
      "",
      "[Removed Lines]",
      "432:  goto tr25;",
      "",
      "[Added Lines]",
      "429:   case 9: goto tr25;",
      "433:  if ( 33 <= (*p) && (*p) <= 126 )",
      "434:   goto tr25;",
      "435:  goto st0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "438:  if ( ++p == pe )",
      "439:   goto _test_eof19;",
      "440: case 19:",
      "445: tr9:",
      "446: #line 53 \"ext/puma_http11/http11_parser.rl\"",
      "447:  {",
      "",
      "[Removed Lines]",
      "441: #line 442 \"ext/puma_http11/http11_parser.c\"",
      "442:  if ( (*p) == 13 )",
      "443:   goto tr29;",
      "444:  goto st19;",
      "",
      "[Added Lines]",
      "444: #line 445 \"ext/puma_http11/http11_parser.c\"",
      "445:  switch( (*p) ) {",
      "446:   case 9: goto st19;",
      "447:   case 13: goto tr29;",
      "448:  }",
      "449:  if ( 32 <= (*p) && (*p) <= 126 )",
      "450:   goto st19;",
      "451:  goto st0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "484:  if ( ++p == pe )",
      "485:   goto _test_eof20;",
      "486: case 20:",
      "488:  switch( (*p) ) {",
      "489:   case 32: goto tr31;",
      "490:   case 60: goto st0;",
      "",
      "[Removed Lines]",
      "487: #line 488 \"ext/puma_http11/http11_parser.c\"",
      "",
      "[Added Lines]",
      "494: #line 495 \"ext/puma_http11/http11_parser.c\"",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "505:  if ( ++p == pe )",
      "506:   goto _test_eof21;",
      "507: case 21:",
      "509:  switch( (*p) ) {",
      "510:   case 32: goto tr33;",
      "511:   case 60: goto st0;",
      "",
      "[Removed Lines]",
      "508: #line 509 \"ext/puma_http11/http11_parser.c\"",
      "",
      "[Added Lines]",
      "515: #line 516 \"ext/puma_http11/http11_parser.c\"",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "526:  if ( ++p == pe )",
      "527:   goto _test_eof22;",
      "528: case 22:",
      "530:  switch( (*p) ) {",
      "531:   case 43: goto st22;",
      "532:   case 58: goto st23;",
      "",
      "[Removed Lines]",
      "529: #line 530 \"ext/puma_http11/http11_parser.c\"",
      "",
      "[Added Lines]",
      "536: #line 537 \"ext/puma_http11/http11_parser.c\"",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "551:  if ( ++p == pe )",
      "552:   goto _test_eof23;",
      "553: case 23:",
      "555:  switch( (*p) ) {",
      "556:   case 32: goto tr8;",
      "557:   case 34: goto st0;",
      "",
      "[Removed Lines]",
      "554: #line 555 \"ext/puma_http11/http11_parser.c\"",
      "",
      "[Added Lines]",
      "561: #line 562 \"ext/puma_http11/http11_parser.c\"",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "571:  if ( ++p == pe )",
      "572:   goto _test_eof24;",
      "573: case 24:",
      "575:  switch( (*p) ) {",
      "576:   case 32: goto tr37;",
      "577:   case 34: goto st0;",
      "",
      "[Removed Lines]",
      "574: #line 575 \"ext/puma_http11/http11_parser.c\"",
      "",
      "[Added Lines]",
      "581: #line 582 \"ext/puma_http11/http11_parser.c\"",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "594:  if ( ++p == pe )",
      "595:   goto _test_eof25;",
      "596: case 25:",
      "598:  switch( (*p) ) {",
      "599:   case 32: goto tr41;",
      "600:   case 34: goto st0;",
      "",
      "[Removed Lines]",
      "597: #line 598 \"ext/puma_http11/http11_parser.c\"",
      "",
      "[Added Lines]",
      "604: #line 605 \"ext/puma_http11/http11_parser.c\"",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "614:  if ( ++p == pe )",
      "615:   goto _test_eof26;",
      "616: case 26:",
      "618:  switch( (*p) ) {",
      "619:   case 32: goto tr44;",
      "620:   case 34: goto st0;",
      "",
      "[Removed Lines]",
      "617: #line 618 \"ext/puma_http11/http11_parser.c\"",
      "",
      "[Added Lines]",
      "624: #line 625 \"ext/puma_http11/http11_parser.c\"",
      "",
      "---------------"
    ],
    "ext/puma_http11/http11_parser_common.rl||ext/puma_http11/http11_parser_common.rl": [
      "File: ext/puma_http11/http11_parser_common.rl -> ext/puma_http11/http11_parser_common.rl",
      "--- Hunk 1 ---",
      "[Context before]",
      "44:   field_name = ( token -- \":\" )+ >start_field $snake_upcase_field %write_field;",
      "48:   message_header = field_name \":\" \" \"* field_value :> CRLF;",
      "",
      "[Removed Lines]",
      "46:   field_value = any* >start_value %write_value;",
      "",
      "[Added Lines]",
      "46:   field_value = ( print | \"\\t\" )* >start_value %write_value;",
      "",
      "---------------"
    ],
    "ext/puma_http11/org/jruby/puma/Http11Parser.java||ext/puma_http11/org/jruby/puma/Http11Parser.java": [
      "File: ext/puma_http11/org/jruby/puma/Http11Parser.java -> ext/puma_http11/org/jruby/puma/Http11Parser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "34: {",
      "35:  return new short [] {",
      "36:      0,    0,    8,   17,   27,   29,   30,   31,   32,   33,   34,   36,",
      "40:  };",
      "41: }",
      "",
      "[Removed Lines]",
      "37:     39,   41,   44,   45,   61,   62,   78,   80,   81,   89,   97,  107,",
      "38:    115,  124,  132,  140,  149,  158,  167,  176,  185,  194,  203,  212,",
      "39:    221,  230,  239,  248,  257,  266,  275,  284,  293,  302,  303",
      "",
      "[Added Lines]",
      "37:     39,   41,   44,   45,   61,   62,   78,   83,   87,   95,  103,  113,",
      "38:    121,  130,  138,  146,  155,  164,  173,  182,  191,  200,  209,  218,",
      "39:    227,  236,  245,  254,  263,  272,  281,  290,  299,  308,  309",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "52:     46,   48,   57,   48,   57,   13,   48,   57,   10,   13,   33,  124,",
      "53:    126,   35,   39,   42,   43,   45,   46,   48,   57,   65,   90,   94,",
      "54:    122,   10,   33,   58,  124,  126,   35,   39,   42,   43,   45,   46,",
      "63:     36,   95,   45,   46,   48,   57,   65,   90,   32,   36,   95,   45,",
      "64:     46,   48,   57,   65,   90,   32,   36,   95,   45,   46,   48,   57,",
      "65:     65,   90,   32,   36,   95,   45,   46,   48,   57,   65,   90,   32,",
      "",
      "[Removed Lines]",
      "55:     48,   57,   65,   90,   94,  122,   13,   32,   13,   32,   60,   62,",
      "56:    127,    0,   31,   34,   35,   32,   60,   62,  127,    0,   31,   34,",
      "57:     35,   43,   58,   45,   46,   48,   57,   65,   90,   97,  122,   32,",
      "58:     34,   35,   60,   62,  127,    0,   31,   32,   34,   35,   60,   62,",
      "59:     63,  127,    0,   31,   32,   34,   35,   60,   62,  127,    0,   31,",
      "60:     32,   34,   35,   60,   62,  127,    0,   31,   32,   36,   95,   45,",
      "61:     46,   48,   57,   65,   90,   32,   36,   95,   45,   46,   48,   57,",
      "62:     65,   90,   32,   36,   95,   45,   46,   48,   57,   65,   90,   32,",
      "",
      "[Added Lines]",
      "55:     48,   57,   65,   90,   94,  122,    9,   13,   32,   33,  126,    9,",
      "56:     13,   32,  126,   32,   60,   62,  127,    0,   31,   34,   35,   32,",
      "57:     60,   62,  127,    0,   31,   34,   35,   43,   58,   45,   46,   48,",
      "58:     57,   65,   90,   97,  122,   32,   34,   35,   60,   62,  127,    0,",
      "59:     31,   32,   34,   35,   60,   62,   63,  127,    0,   31,   32,   34,",
      "60:     35,   60,   62,  127,    0,   31,   32,   34,   35,   60,   62,  127,",
      "61:      0,   31,   32,   36,   95,   45,   46,   48,   57,   65,   90,   32,",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "71:     65,   90,   32,   36,   95,   45,   46,   48,   57,   65,   90,   32,",
      "72:     36,   95,   45,   46,   48,   57,   65,   90,   32,   36,   95,   45,",
      "73:     46,   48,   57,   65,   90,   32,   36,   95,   45,   46,   48,   57,",
      "75:  };",
      "76: }",
      "",
      "[Removed Lines]",
      "74:     65,   90,   32,    0",
      "",
      "[Added Lines]",
      "73:     65,   90,   32,   36,   95,   45,   46,   48,   57,   65,   90,   32,",
      "74:     36,   95,   45,   46,   48,   57,   65,   90,   32,    0",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "82: {",
      "83:  return new byte [] {",
      "84:      0,    2,    3,    4,    2,    1,    1,    1,    1,    1,    0,    1,",
      "86:      7,    6,    6,    3,    3,    3,    3,    3,    3,    3,    3,    3,",
      "87:      3,    3,    3,    3,    3,    3,    3,    3,    3,    1,    0",
      "88:  };",
      "",
      "[Removed Lines]",
      "85:      0,    1,    1,    4,    1,    4,    2,    1,    4,    4,    2,    6,",
      "",
      "[Added Lines]",
      "85:      0,    1,    1,    4,    1,    4,    3,    2,    4,    4,    2,    6,",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "95: {",
      "96:  return new byte [] {",
      "97:      0,    3,    3,    3,    0,    0,    0,    0,    0,    0,    1,    1,",
      "99:      1,    1,    1,    3,    3,    3,    3,    3,    3,    3,    3,    3,",
      "100:      3,    3,    3,    3,    3,    3,    3,    3,    3,    0,    0",
      "101:  };",
      "",
      "[Removed Lines]",
      "98:      1,    1,    0,    6,    0,    6,    0,    0,    2,    2,    4,    1,",
      "",
      "[Added Lines]",
      "98:      1,    1,    0,    6,    0,    6,    1,    1,    2,    2,    4,    1,",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "108: {",
      "109:  return new short [] {",
      "110:      0,    0,    6,   13,   21,   24,   26,   28,   30,   32,   34,   36,",
      "114:  };",
      "115: }",
      "",
      "[Removed Lines]",
      "111:     39,   41,   44,   46,   57,   59,   70,   73,   75,   82,   89,   96,",
      "112:    104,  113,  121,  129,  136,  143,  150,  157,  164,  171,  178,  185,",
      "113:    192,  199,  206,  213,  220,  227,  234,  241,  248,  255,  257",
      "",
      "[Added Lines]",
      "111:     39,   41,   44,   46,   57,   59,   70,   75,   79,   86,   93,  100,",
      "112:    108,  117,  125,  133,  140,  147,  154,  161,  168,  175,  182,  189,",
      "113:    196,  203,  210,  217,  224,  231,  238,  245,  252,  259,  261",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "125:     10,    1,   11,    1,   12,    1,   13,    1,   14,    1,   15,    1,",
      "126:     16,   15,    1,   17,    1,   18,   17,    1,   19,    1,   20,   21,",
      "127:     21,   21,   21,   21,   21,   21,   21,   21,    1,   22,    1,   23,",
      "145:  };",
      "146: }",
      "",
      "[Removed Lines]",
      "128:     24,   23,   23,   23,   23,   23,   23,   23,   23,    1,   26,   27,",
      "129:     25,   29,   28,   30,    1,    1,    1,    1,    1,   31,   32,    1,",
      "130:      1,    1,    1,    1,   33,   34,   35,   34,   34,   34,   34,    1,",
      "131:      8,    1,    9,    1,    1,    1,    1,   35,   36,    1,   38,    1,",
      "132:      1,   39,    1,    1,   37,   40,    1,   42,    1,    1,    1,    1,",
      "133:     41,   43,    1,   45,    1,    1,    1,    1,   44,    2,   46,   46,",
      "134:     46,   46,   46,    1,    2,   47,   47,   47,   47,   47,    1,    2,",
      "135:     48,   48,   48,   48,   48,    1,    2,   49,   49,   49,   49,   49,",
      "136:      1,    2,   50,   50,   50,   50,   50,    1,    2,   51,   51,   51,",
      "137:     51,   51,    1,    2,   52,   52,   52,   52,   52,    1,    2,   53,",
      "138:     53,   53,   53,   53,    1,    2,   54,   54,   54,   54,   54,    1,",
      "139:      2,   55,   55,   55,   55,   55,    1,    2,   56,   56,   56,   56,",
      "140:     56,    1,    2,   57,   57,   57,   57,   57,    1,    2,   58,   58,",
      "141:     58,   58,   58,    1,    2,   59,   59,   59,   59,   59,    1,    2,",
      "142:     60,   60,   60,   60,   60,    1,    2,   61,   61,   61,   61,   61,",
      "143:      1,    2,   62,   62,   62,   62,   62,    1,    2,   63,   63,   63,",
      "144:     63,   63,    1,    2,    1,    1,    0",
      "",
      "[Added Lines]",
      "128:     24,   23,   23,   23,   23,   23,   23,   23,   23,    1,   25,   26,",
      "129:     27,   25,    1,   28,   29,   28,    1,   30,    1,    1,    1,    1,",
      "130:      1,   31,   32,    1,    1,    1,    1,    1,   33,   34,   35,   34,",
      "131:     34,   34,   34,    1,    8,    1,    9,    1,    1,    1,    1,   35,",
      "132:     36,    1,   38,    1,    1,   39,    1,    1,   37,   40,    1,   42,",
      "133:      1,    1,    1,    1,   41,   43,    1,   45,    1,    1,    1,    1,",
      "134:     44,    2,   46,   46,   46,   46,   46,    1,    2,   47,   47,   47,",
      "135:     47,   47,    1,    2,   48,   48,   48,   48,   48,    1,    2,   49,",
      "136:     49,   49,   49,   49,    1,    2,   50,   50,   50,   50,   50,    1,",
      "137:      2,   51,   51,   51,   51,   51,    1,    2,   52,   52,   52,   52,",
      "138:     52,    1,    2,   53,   53,   53,   53,   53,    1,    2,   54,   54,",
      "139:     54,   54,   54,    1,    2,   55,   55,   55,   55,   55,    1,    2,",
      "140:     56,   56,   56,   56,   56,    1,    2,   57,   57,   57,   57,   57,",
      "141:      1,    2,   58,   58,   58,   58,   58,    1,    2,   59,   59,   59,",
      "142:     59,   59,    1,    2,   60,   60,   60,   60,   60,    1,    2,   61,",
      "143:     61,   61,   61,   61,    1,    2,   62,   62,   62,   62,   62,    1,",
      "144:      2,   63,   63,   63,   63,   63,    1,    2,    1,    1,    0",
      "",
      "---------------"
    ],
    "lib/puma/const.rb||lib/puma/const.rb": [
      "File: lib/puma/const.rb -> lib/puma/const.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "100:   # too taxing on performance.",
      "101:   module Const",
      "104:     CODE_NAME = \"Zawgyi\".freeze",
      "106:     PUMA_SERVER_STRING = ['puma', PUMA_VERSION, CODE_NAME].join(' ').freeze",
      "",
      "[Removed Lines]",
      "103:     PUMA_VERSION = VERSION = \"5.5.0\".freeze",
      "",
      "[Added Lines]",
      "103:     PUMA_VERSION = VERSION = \"5.5.1\".freeze",
      "",
      "---------------"
    ],
    "test/test_http11.rb||test/test_http11.rb": [
      "File: test/test_http11.rb -> test/test_http11.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "209:     assert_equal \"Strip This\", req[\"HTTP_X_STRIP_ME\"]",
      "210:   end",
      "211: end",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "212:   def test_newline_smuggler",
      "213:     parser = Puma::HttpParser.new",
      "214:     req = {}",
      "215:     http = \"GET / HTTP/1.1\\r\\nHost: localhost:8080\\r\\nDummy: x\\nDummy2: y\\r\\n\\r\\n\"",
      "217:     parser.execute(req, http, 0) rescue nil # We test the raise elsewhere.",
      "219:     assert parser.error?, \"Parser SHOULD have error\"",
      "220:   end",
      "222:   def test_newline_smuggler_two",
      "223:     parser = Puma::HttpParser.new",
      "224:     req = {}",
      "225:     http = \"GET / HTTP/1.1\\r\\nHost: localhost:8080\\r\\nDummy: x\\r\\nDummy: y\\nDummy2: z\\r\\n\\r\\n\"",
      "227:     parser.execute(req, http, 0) rescue nil",
      "229:     assert parser.error?, \"Parser SHOULD have error\"",
      "230:   end",
      "232:   def test_htab_in_header_val",
      "233:     parser = Puma::HttpParser.new",
      "234:     req = {}",
      "235:     http = \"GET / HTTP/1.1\\r\\nHost: localhost:8080\\r\\nDummy: Valid\\tValue\\r\\n\\r\\n\"",
      "237:     parser.execute(req, http, 0)",
      "239:     assert_equal \"Valid\\tValue\", req['HTTP_DUMMY']",
      "240:   end",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c6340d1fabcd02c4cc5c1d4effaeba393dedb1a8",
      "candidate_info": {
        "commit_hash": "c6340d1fabcd02c4cc5c1d4effaeba393dedb1a8",
        "repo": "puma/puma",
        "commit_url": "https://github.com/puma/puma/commit/c6340d1fabcd02c4cc5c1d4effaeba393dedb1a8",
        "files": [
          "History.md",
          "lib/puma/const.rb",
          "lib/puma/request.rb"
        ],
        "message": "5.6.2 (#2821)\n\n* Ensure `close` is called on the response body no matter what\n\nAnother fallout from https://github.com/puma/puma/pull/2809 is that\nin some cases the `res_body.close` wasn't called because some previous code\nraised.\n\nFor Rails apps it means CurrentAttributes and a few other important\nstates aren't reset properly.\n\nThis is being improved on the Rails side too, but I believe it would\nbe good to harden this on the puma side as well.\n\n* 5.6.2\n\nCo-authored-by: Jean Boussier <jean.boussier@gmail.com>",
        "before_after_code_files": [
          "lib/puma/const.rb||lib/puma/const.rb",
          "lib/puma/request.rb||lib/puma/request.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/puma/const.rb||lib/puma/const.rb"
          ],
          "candidate": [
            "lib/puma/const.rb||lib/puma/const.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/puma/const.rb||lib/puma/const.rb": [
          "File: lib/puma/const.rb -> lib/puma/const.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:   # too taxing on performance.",
          "101:   module Const",
          "104:     CODE_NAME = \"Birdie's Version\".freeze",
          "106:     PUMA_SERVER_STRING = ['puma', PUMA_VERSION, CODE_NAME].join(' ').freeze",
          "",
          "[Removed Lines]",
          "103:     PUMA_VERSION = VERSION = \"5.6.1\".freeze",
          "",
          "[Added Lines]",
          "103:     PUMA_VERSION = VERSION = \"5.6.2\".freeze",
          "",
          "---------------"
        ],
        "lib/puma/request.rb||lib/puma/request.rb": [
          "File: lib/puma/request.rb -> lib/puma/request.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "167:         end",
          "169:       ensure",
          "176:         after_reply.each { |o| o.call }",
          "177:       end",
          "",
          "[Removed Lines]",
          "170:         uncork_socket io",
          "172:         body.close",
          "173:         client.tempfile.unlink if client.tempfile",
          "174:         res_body.close if res_body.respond_to? :close",
          "",
          "[Added Lines]",
          "170:         begin",
          "171:           uncork_socket io",
          "173:           body.close",
          "174:           client.tempfile.unlink if client.tempfile",
          "175:         ensure",
          "176:           # Whatever happens, we MUST call `close` on the response body.",
          "177:           # Otherwise Rack::BodyProxy callbacks may not fire and lead to various state leaks",
          "178:           res_body.close if res_body.respond_to? :close",
          "179:         end",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "50185aec02e4f44967e8bc65035b019d38cf2b1a",
      "candidate_info": {
        "commit_hash": "50185aec02e4f44967e8bc65035b019d38cf2b1a",
        "repo": "puma/puma",
        "commit_url": "https://github.com/puma/puma/commit/50185aec02e4f44967e8bc65035b019d38cf2b1a",
        "files": [
          ".github/workflows/mri.yml",
          ".github/workflows/non_mri.yml",
          "History.md",
          "ext/puma_http11/extconf.rb",
          "ext/puma_http11/http11_parser.c",
          "ext/puma_http11/http11_parser.java.rl",
          "ext/puma_http11/http11_parser.rl",
          "ext/puma_http11/mini_ssl.c",
          "ext/puma_http11/org/jruby/puma/Http11Parser.java"
        ],
        "message": "Fail build if compiling extensions raises warnings (#1953) (#2494)\n\n* Fail build if compiling extensions raises warnings (#1953)\n\nMake warning into errors and also fix all compiler warnings reported in\nmini_ssl source code.\n\n* Fix some compiler warnings and errors reported by checks\n\n* Add MAKE_WARNINGS_INTO_ERRORS env variable\n\nMAKE_WARNINGS_INTO_ERRORS environment variable toggles whether a build should\ntreat all warnings into errors or not.\n\nMove appending WERRORFLAG to cflags after OpenSSL methods verification because\non some specifics builds this causes mkmf to wrongly detect methods in OpenSSL\nheaders.\n\n* Add noentry to write date to avoid unused variables\n\n* Ignore implicit-fallthrough warnings\n\nThose warnings are related to ragel state machine generated code.\n\n* Enforce no warnings on GH Actions\n\n* Update History.md file reflecting latest changes",
        "before_after_code_files": [
          "ext/puma_http11/extconf.rb||ext/puma_http11/extconf.rb",
          "ext/puma_http11/http11_parser.c||ext/puma_http11/http11_parser.c",
          "ext/puma_http11/http11_parser.java.rl||ext/puma_http11/http11_parser.java.rl",
          "ext/puma_http11/http11_parser.rl||ext/puma_http11/http11_parser.rl",
          "ext/puma_http11/mini_ssl.c||ext/puma_http11/mini_ssl.c",
          "ext/puma_http11/org/jruby/puma/Http11Parser.java||ext/puma_http11/org/jruby/puma/Http11Parser.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/puma_http11/http11_parser.c||ext/puma_http11/http11_parser.c",
            "ext/puma_http11/org/jruby/puma/Http11Parser.java||ext/puma_http11/org/jruby/puma/Http11Parser.java"
          ],
          "candidate": [
            "ext/puma_http11/http11_parser.c||ext/puma_http11/http11_parser.c",
            "ext/puma_http11/org/jruby/puma/Http11Parser.java||ext/puma_http11/org/jruby/puma/Http11Parser.java"
          ]
        }
      },
      "candidate_diff": {
        "ext/puma_http11/extconf.rb||ext/puma_http11/extconf.rb": [
          "File: ext/puma_http11/extconf.rb -> ext/puma_http11/extconf.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:   end",
          "26: end",
          "28: create_makefile(\"puma/puma_http11\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: if ENV[\"MAKE_WARNINGS_INTO_ERRORS\"]",
          "29:   # Make all warnings into errors",
          "30:   # Except `implicit-fallthrough` since most failures comes from ragel state machine generated code",
          "31:   if respond_to? :append_cflags",
          "32:     append_cflags config_string 'WERRORFLAG'",
          "33:     append_cflags '-Wno-implicit-fallthrough'",
          "34:   else",
          "35:     $CFLAGS += ' ' << (config_string 'WERRORFLAG') << ' -Wno-implicit-fallthrough'",
          "36:   end",
          "37: end",
          "",
          "---------------"
        ],
        "ext/puma_http11/http11_parser.c||ext/puma_http11/http11_parser.c": [
          "File: ext/puma_http11/http11_parser.c -> ext/puma_http11/http11_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: static const int puma_parser_first_final = 46;",
          "44: static const int puma_parser_error = 0;",
          "49: #line 85 \"ext/puma_http11/http11_parser.rl\"",
          "51: int puma_parser_init(puma_parser *parser)  {",
          "52:   int cs = 0;",
          "55:  {",
          "56:  cs = puma_parser_start;",
          "57:  }",
          "",
          "[Removed Lines]",
          "46: static const int puma_parser_en_main = 1;",
          "54: #line 55 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "52: #line 53 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "85:   assert((size_t) (pe - p) == len - off && \"pointers aren't same distance\");",
          "89:  {",
          "90:  if ( p == pe )",
          "91:   goto _test_eof;",
          "",
          "[Removed Lines]",
          "88: #line 89 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "86: #line 87 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "116:  if ( ++p == pe )",
          "117:   goto _test_eof2;",
          "118: case 2:",
          "120:  switch( (*p) ) {",
          "121:   case 32: goto tr2;",
          "122:   case 36: goto st27;",
          "",
          "[Removed Lines]",
          "119: #line 120 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "117: #line 118 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "141:  if ( ++p == pe )",
          "142:   goto _test_eof3;",
          "143: case 3:",
          "145:  switch( (*p) ) {",
          "146:   case 42: goto tr4;",
          "147:   case 43: goto tr5;",
          "",
          "[Removed Lines]",
          "144: #line 145 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "142: #line 143 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "165:  if ( ++p == pe )",
          "166:   goto _test_eof4;",
          "167: case 4:",
          "169:  switch( (*p) ) {",
          "170:   case 32: goto tr8;",
          "171:   case 35: goto tr9;",
          "",
          "[Removed Lines]",
          "168: #line 169 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "166: #line 167 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "227:  if ( ++p == pe )",
          "228:   goto _test_eof5;",
          "229: case 5:",
          "231:  if ( (*p) == 72 )",
          "232:   goto tr10;",
          "233:  goto st0;",
          "",
          "[Removed Lines]",
          "230: #line 231 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "228: #line 229 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "239:  if ( ++p == pe )",
          "240:   goto _test_eof6;",
          "241: case 6:",
          "243:  if ( (*p) == 84 )",
          "244:   goto st7;",
          "245:  goto st0;",
          "",
          "[Removed Lines]",
          "242: #line 243 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "240: #line 241 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "320:  if ( ++p == pe )",
          "321:   goto _test_eof14;",
          "322: case 14:",
          "324:  if ( (*p) == 10 )",
          "325:   goto st15;",
          "326:  goto st0;",
          "",
          "[Removed Lines]",
          "323: #line 324 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "321: #line 322 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "371:  if ( ++p == pe )",
          "372:   goto _test_eof46;",
          "373: case 46:",
          "375:  goto st0;",
          "376: tr21:",
          "377: #line 40 \"ext/puma_http11/http11_parser.rl\"",
          "",
          "[Removed Lines]",
          "374: #line 375 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "372: #line 373 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "387:  if ( ++p == pe )",
          "388:   goto _test_eof17;",
          "389: case 17:",
          "391:  switch( (*p) ) {",
          "392:   case 33: goto tr23;",
          "393:   case 58: goto tr24;",
          "",
          "[Removed Lines]",
          "390: #line 391 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "388: #line 389 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "426:  if ( ++p == pe )",
          "427:   goto _test_eof18;",
          "428: case 18:",
          "430:  switch( (*p) ) {",
          "431:   case 13: goto tr26;",
          "432:   case 32: goto tr27;",
          "",
          "[Removed Lines]",
          "429: #line 430 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "427: #line 428 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "440:  if ( ++p == pe )",
          "441:   goto _test_eof19;",
          "442: case 19:",
          "444:  if ( (*p) == 13 )",
          "445:   goto tr29;",
          "446:  goto st19;",
          "",
          "[Removed Lines]",
          "443: #line 444 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "441: #line 442 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "486:  if ( ++p == pe )",
          "487:   goto _test_eof20;",
          "488: case 20:",
          "490:  switch( (*p) ) {",
          "491:   case 32: goto tr31;",
          "492:   case 60: goto st0;",
          "",
          "[Removed Lines]",
          "489: #line 490 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "487: #line 488 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "507:  if ( ++p == pe )",
          "508:   goto _test_eof21;",
          "509: case 21:",
          "511:  switch( (*p) ) {",
          "512:   case 32: goto tr33;",
          "513:   case 60: goto st0;",
          "",
          "[Removed Lines]",
          "510: #line 511 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "508: #line 509 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "528:  if ( ++p == pe )",
          "529:   goto _test_eof22;",
          "530: case 22:",
          "532:  switch( (*p) ) {",
          "533:   case 43: goto st22;",
          "534:   case 58: goto st23;",
          "",
          "[Removed Lines]",
          "531: #line 532 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "529: #line 530 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "553:  if ( ++p == pe )",
          "554:   goto _test_eof23;",
          "555: case 23:",
          "557:  switch( (*p) ) {",
          "558:   case 32: goto tr8;",
          "559:   case 34: goto st0;",
          "",
          "[Removed Lines]",
          "556: #line 557 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "554: #line 555 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "573:  if ( ++p == pe )",
          "574:   goto _test_eof24;",
          "575: case 24:",
          "577:  switch( (*p) ) {",
          "578:   case 32: goto tr37;",
          "579:   case 34: goto st0;",
          "",
          "[Removed Lines]",
          "576: #line 577 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "574: #line 575 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "596:  if ( ++p == pe )",
          "597:   goto _test_eof25;",
          "598: case 25:",
          "600:  switch( (*p) ) {",
          "601:   case 32: goto tr41;",
          "602:   case 34: goto st0;",
          "",
          "[Removed Lines]",
          "599: #line 600 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "597: #line 598 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "616:  if ( ++p == pe )",
          "617:   goto _test_eof26;",
          "618: case 26:",
          "620:  switch( (*p) ) {",
          "621:   case 32: goto tr44;",
          "622:   case 34: goto st0;",
          "",
          "[Removed Lines]",
          "619: #line 620 \"ext/puma_http11/http11_parser.c\"",
          "",
          "[Added Lines]",
          "617: #line 618 \"ext/puma_http11/http11_parser.c\"",
          "",
          "---------------"
        ],
        "ext/puma_http11/http11_parser.java.rl||ext/puma_http11/http11_parser.java.rl": [
          "File: ext/puma_http11/http11_parser.java.rl -> ext/puma_http11/http11_parser.java.rl",
          "--- Hunk 1 ---",
          "[Context before]",
          "58: }%%",
          "63:    public static interface ElementCB {",
          "64:      public void call(Ruby runtime, RubyHash data, ByteList buffer, int at, int length);",
          "",
          "[Removed Lines]",
          "61: %% write data;",
          "",
          "[Added Lines]",
          "61: %% write data noentry;",
          "",
          "---------------"
        ],
        "ext/puma_http11/http11_parser.rl||ext/puma_http11/http11_parser.rl": [
          "File: ext/puma_http11/http11_parser.rl -> ext/puma_http11/http11_parser.rl",
          "--- Hunk 1 ---",
          "[Context before]",
          "81: }%%",
          "86: int puma_parser_init(puma_parser *parser)  {",
          "87:   int cs = 0;",
          "",
          "[Removed Lines]",
          "84: %% write data;",
          "",
          "[Added Lines]",
          "84: %% write data noentry;",
          "",
          "---------------"
        ],
        "ext/puma_http11/mini_ssl.c||ext/puma_http11/mini_ssl.c": [
          "File: ext/puma_http11/mini_ssl.c -> ext/puma_http11/mini_ssl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:   static unsigned char dh1024_g[] = { 0x02 };",
          "90:   DH *dh;",
          "91:   dh = DH_new();",
          "93: #if OPENSSL_VERSION_NUMBER < 0x10100005L || defined(LIBRESSL_VERSION_NUMBER)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91: #if !(OPENSSL_VERSION_NUMBER < 0x10100005L || defined(LIBRESSL_VERSION_NUMBER))",
          "92:   BIGNUM *p, *g;",
          "93: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "99:     return NULL;",
          "100:   }",
          "101: #else",
          "103:   p = BN_bin2bn(dh1024_p, sizeof(dh1024_p), NULL);",
          "104:   g = BN_bin2bn(dh1024_g, sizeof(dh1024_g), NULL);",
          "",
          "[Removed Lines]",
          "102:   BIGNUM *p, *g;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "141: }",
          "143: VALUE engine_init_server(VALUE self, VALUE mini_ssl_ctx) {",
          "144:   VALUE obj;",
          "145:   SSL_CTX* ctx;",
          "146:   SSL* ssl;",
          "154:   StringValue(key);",
          "159:   StringValue(cert);",
          "176: #ifdef HAVE_TLS_SERVER_METHOD",
          "177:   ctx = SSL_CTX_new(TLS_server_method());",
          "",
          "[Removed Lines]",
          "147:   int min, ssl_options;",
          "149:   ms_conn* conn = engine_alloc(self, &obj);",
          "151:   ID sym_key = rb_intern(\"key\");",
          "152:   VALUE key = rb_funcall(mini_ssl_ctx, sym_key, 0);",
          "156:   ID sym_cert = rb_intern(\"cert\");",
          "157:   VALUE cert = rb_funcall(mini_ssl_ctx, sym_cert, 0);",
          "161:   ID sym_ca = rb_intern(\"ca\");",
          "162:   VALUE ca = rb_funcall(mini_ssl_ctx, sym_ca, 0);",
          "164:   ID sym_verify_mode = rb_intern(\"verify_mode\");",
          "165:   VALUE verify_mode = rb_funcall(mini_ssl_ctx, sym_verify_mode, 0);",
          "167:   ID sym_ssl_cipher_filter = rb_intern(\"ssl_cipher_filter\");",
          "168:   VALUE ssl_cipher_filter = rb_funcall(mini_ssl_ctx, sym_ssl_cipher_filter, 0);",
          "170:   ID sym_no_tlsv1 = rb_intern(\"no_tlsv1\");",
          "171:   VALUE no_tlsv1 = rb_funcall(mini_ssl_ctx, sym_no_tlsv1, 0);",
          "173:   ID sym_no_tlsv1_1 = rb_intern(\"no_tlsv1_1\");",
          "174:   VALUE no_tlsv1_1 = rb_funcall(mini_ssl_ctx, sym_no_tlsv1_1, 0);",
          "",
          "[Added Lines]",
          "147:   ms_conn* conn;",
          "151: #ifdef HAVE_SSL_CTX_SET_MIN_PROTO_VERSION",
          "152:   int min;",
          "153: #endif",
          "154:   int ssl_options;",
          "155:   ID sym_key, sym_cert, sym_ca, sym_verify_mode, sym_ssl_cipher_filter, sym_no_tlsv1, sym_no_tlsv1_1;",
          "156:   VALUE key, cert, ca, verify_mode, ssl_cipher_filter, no_tlsv1, no_tlsv1_1;",
          "157:   DH *dh;",
          "159: #if OPENSSL_VERSION_NUMBER < 0x10002000L",
          "160:   EC_KEY *ecdh;",
          "161: #endif",
          "163:   conn = engine_alloc(self, &obj);",
          "165:   sym_key = rb_intern(\"key\");",
          "166:   key = rb_funcall(mini_ssl_ctx, sym_key, 0);",
          "170:   sym_cert = rb_intern(\"cert\");",
          "171:   cert = rb_funcall(mini_ssl_ctx, sym_cert, 0);",
          "175:   sym_ca = rb_intern(\"ca\");",
          "176:   ca = rb_funcall(mini_ssl_ctx, sym_ca, 0);",
          "178:   sym_verify_mode = rb_intern(\"verify_mode\");",
          "179:   verify_mode = rb_funcall(mini_ssl_ctx, sym_verify_mode, 0);",
          "181:   sym_ssl_cipher_filter = rb_intern(\"ssl_cipher_filter\");",
          "182:   ssl_cipher_filter = rb_funcall(mini_ssl_ctx, sym_ssl_cipher_filter, 0);",
          "184:   sym_no_tlsv1 = rb_intern(\"no_tlsv1\");",
          "185:   no_tlsv1 = rb_funcall(mini_ssl_ctx, sym_no_tlsv1, 0);",
          "187:   sym_no_tlsv1_1 = rb_intern(\"no_tlsv1_1\");",
          "188:   no_tlsv1_1 = rb_funcall(mini_ssl_ctx, sym_no_tlsv1_1, 0);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "228:     SSL_CTX_set_cipher_list(ctx, \"HIGH:!aNULL@STRENGTH\");",
          "229:   }",
          "232:   SSL_CTX_set_tmp_dh(ctx, dh);",
          "234: #if OPENSSL_VERSION_NUMBER < 0x10002000L",
          "238:   if (ecdh) {",
          "239:     SSL_CTX_set_tmp_ecdh(ctx, ecdh);",
          "240:     EC_KEY_free(ecdh);",
          "",
          "[Removed Lines]",
          "231:   DH *dh = get_dh1024();",
          "237:   EC_KEY *ecdh = EC_KEY_new_by_curve_name(NID_X9_62_prime256v1);",
          "",
          "[Added Lines]",
          "245:   dh = get_dh1024();",
          "251:   ecdh = EC_KEY_new_by_curve_name(NID_X9_62_prime256v1);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "299: static VALUE eError;",
          "301: void raise_error(SSL* ssl, int result) {",
          "302:   char buf[512];",
          "303:   char msg[512];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "315: NORETURN(void raise_error(SSL* ssl, int result));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "320:     } else {",
          "321:       err = (int) ERR_get_error();",
          "322:       ERR_error_string_n(err, buf, sizeof(buf));",
          "325:     }",
          "326:   } else {",
          "327:     snprintf(msg, sizeof(msg), \"Unknown OpenSSL error: %d\", ssl_err);",
          "",
          "[Removed Lines]",
          "323:       int errexp = err & mask;",
          "324:       snprintf(msg, sizeof(msg), \"OpenSSL error: %s - %d\", buf, errexp);",
          "",
          "[Added Lines]",
          "339:       snprintf(msg, sizeof(msg), \"OpenSSL error: %s - %d\", buf, err & mask);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "553: #else",
          "555: VALUE raise_error(VALUE self) {",
          "556:   rb_raise(rb_eStandardError, \"SSL not available in this build\");",
          "558: }",
          "560: void Init_mini_ssl(VALUE puma) {",
          "",
          "[Removed Lines]",
          "557:   return Qnil;",
          "",
          "[Added Lines]",
          "570: NORETURN(VALUE raise_error(VALUE self));",
          "",
          "---------------"
        ],
        "ext/puma_http11/org/jruby/puma/Http11Parser.java||ext/puma_http11/org/jruby/puma/Http11Parser.java": [
          "File: ext/puma_http11/org/jruby/puma/Http11Parser.java -> ext/puma_http11/org/jruby/puma/Http11Parser.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "182: static final int puma_parser_first_final = 46;",
          "183: static final int puma_parser_error = 0;",
          "",
          "[Removed Lines]",
          "185: static final int puma_parser_en_main = 1;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4c1a8398701e8f714490463d8088199c3191c723",
      "candidate_info": {
        "commit_hash": "4c1a8398701e8f714490463d8088199c3191c723",
        "repo": "puma/puma",
        "commit_url": "https://github.com/puma/puma/commit/4c1a8398701e8f714490463d8088199c3191c723",
        "files": [
          "lib/puma/const.rb"
        ],
        "message": "5.6.5",
        "before_after_code_files": [
          "lib/puma/const.rb||lib/puma/const.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/puma/const.rb||lib/puma/const.rb"
          ],
          "candidate": [
            "lib/puma/const.rb||lib/puma/const.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/puma/const.rb||lib/puma/const.rb": [
          "File: lib/puma/const.rb -> lib/puma/const.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:   # too taxing on performance.",
          "101:   module Const",
          "104:     CODE_NAME = \"Birdie's Version\".freeze",
          "106:     PUMA_SERVER_STRING = ['puma', PUMA_VERSION, CODE_NAME].join(' ').freeze",
          "",
          "[Removed Lines]",
          "103:     PUMA_VERSION = VERSION = \"5.6.4\".freeze",
          "",
          "[Added Lines]",
          "103:     PUMA_VERSION = VERSION = \"5.6.5\".freeze",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e0753de846a1651401343687a22bfd52c97bc72a",
      "candidate_info": {
        "commit_hash": "e0753de846a1651401343687a22bfd52c97bc72a",
        "repo": "puma/puma",
        "commit_url": "https://github.com/puma/puma/commit/e0753de846a1651401343687a22bfd52c97bc72a",
        "files": [
          "History.md",
          "lib/puma/const.rb"
        ],
        "message": "2.6.1",
        "before_after_code_files": [
          "lib/puma/const.rb||lib/puma/const.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/puma/const.rb||lib/puma/const.rb"
          ],
          "candidate": [
            "lib/puma/const.rb||lib/puma/const.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/puma/const.rb||lib/puma/const.rb": [
          "File: lib/puma/const.rb -> lib/puma/const.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:   # too taxing on performance.",
          "101:   module Const",
          "104:     CODE_NAME = \"Birdie's Version\".freeze",
          "106:     PUMA_SERVER_STRING = ['puma', PUMA_VERSION, CODE_NAME].join(' ').freeze",
          "",
          "[Removed Lines]",
          "103:     PUMA_VERSION = VERSION = \"5.6.0\".freeze",
          "",
          "[Added Lines]",
          "103:     PUMA_VERSION = VERSION = \"5.6.1\".freeze",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f041b020aad2da0fa99d183c7e8a4147baeea28d",
      "candidate_info": {
        "commit_hash": "f041b020aad2da0fa99d183c7e8a4147baeea28d",
        "repo": "puma/puma",
        "commit_url": "https://github.com/puma/puma/commit/f041b020aad2da0fa99d183c7e8a4147baeea28d",
        "files": [
          "History.md",
          "lib/puma/const.rb"
        ],
        "message": "5.4.0 (#2668)",
        "before_after_code_files": [
          "lib/puma/const.rb||lib/puma/const.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/puma/const.rb||lib/puma/const.rb"
          ],
          "candidate": [
            "lib/puma/const.rb||lib/puma/const.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/puma/const.rb||lib/puma/const.rb": [
          "File: lib/puma/const.rb -> lib/puma/const.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:   # too taxing on performance.",
          "101:   module Const",
          "106:     PUMA_SERVER_STRING = ['puma', PUMA_VERSION, CODE_NAME].join(' ').freeze",
          "",
          "[Removed Lines]",
          "103:     PUMA_VERSION = VERSION = \"5.3.2\".freeze",
          "104:     CODE_NAME = \"Sweetnighter\".freeze",
          "",
          "[Added Lines]",
          "103:     PUMA_VERSION = VERSION = \"5.4.0\".freeze",
          "104:     CODE_NAME = \"Super Flight\".freeze",
          "",
          "---------------"
        ]
      }
    }
  ]
}