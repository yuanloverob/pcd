{
  "cve_id": "CVE-2022-41711",
  "cve_desc": "Badaso version 2.6.0 allows an unauthenticated remote attacker to execute arbitrary code remotely on the server. This is possible because the application does not properly validate the data uploaded by users.",
  "repo": "uasoft-indonesia/badaso",
  "patch_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
  "patch_info": {
    "commit_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
    "repo": "uasoft-indonesia/badaso",
    "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/22250eca7c364d991ce9e0a723941eae4889d6f9",
    "files": [
      "src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue"
    ],
    "message": "Merge pull request #807 from uasoft-indonesia/bugfix/v2/filter-mimeType\n\nBugfix[v2] add filter mimeType",
    "before_after_code_files": [
      "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue"
    ]
  },
  "patch_diff": {
    "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue": [
      "File: src/resources/js/components/BadasoUploadFile.vue -> src/resources/js/components/BadasoUploadFile.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "336:           });",
      "337:           return;",
      "338:         }",
      "340:         this.uploadFile(files[0]);",
      "341:       }",
      "342:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "339:         if (!this.availableMimetypes.file.validMime.includes(files[0].type)) {",
      "340:           this.$vs.notify({",
      "341:             title: this.$t(\"alert.danger\"),",
      "342:             text: \"File type not allowed\",",
      "343:             color: \"danger\",",
      "344:           });",
      "345:           return;",
      "346:         }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadFileMultiple.vue -> src/resources/js/components/BadasoUploadFileMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "367:             });",
      "368:             return;",
      "369:           }",
      "371:           this.uploadFile(file);",
      "372:         }",
      "373:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "370:           if (!this.availableMimetypes.file.validMime.includes(file.type)) {",
      "371:             this.$vs.notify({",
      "372:               title: this.$t(\"alert.danger\"),",
      "373:               text: \"File type not allowed\",",
      "374:               color: \"danger\",",
      "375:             });",
      "376:             return;",
      "377:           }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue": [
      "File: src/resources/js/components/BadasoUploadImage.vue -> src/resources/js/components/BadasoUploadImage.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "380:           });",
      "381:           return;",
      "382:         }",
      "384:         this.uploadImage(files[0]);",
      "385:       }",
      "386:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "383:         if (!this.availableMimetypes.image.validMime.includes(files[0].type)){",
      "384:           this.$vs.notify({",
      "385:             title: this.$t(\"alert.danger\"),",
      "386:             text: \"File type not allowed\",",
      "387:             color: \"danger\",",
      "388:           });",
      "389:           return;",
      "390:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "421:     uploadImage(file) {",
      "422:       const files = new FormData();",
      "423:       files.append(\"upload\", file);",
      "425:       files.append(\"working_dir\", this.getActiveFolder);",
      "426:       this.$api.badasoFile",
      "427:         .uploadUsingLfm(files)",
      "",
      "[Removed Lines]",
      "424:       files.append(\"type\", \"image\");",
      "",
      "[Added Lines]",
      "431:       files.append(\"type\", file.type);",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadImageMultiple.vue -> src/resources/js/components/BadasoUploadImageMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:             });",
      "396:             return;",
      "397:           }",
      "399:           this.uploadImage(file);",
      "400:         }",
      "401:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "398:           if (!this.availableMimetypes.image.validMime.includes(file.type)) {",
      "399:             this.$vs.notify({",
      "400:               title: this.$t(\"alert.danger\"),",
      "401:               text: \"File type not allowed\",",
      "402:               color: \"danger\",",
      "403:             });",
      "404:             return;",
      "405:           }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5a66fa4abc115c1303ffd212110f11f7c722ff99",
      "candidate_info": {
        "commit_hash": "5a66fa4abc115c1303ffd212110f11f7c722ff99",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/5a66fa4abc115c1303ffd212110f11f7c722ff99",
        "files": [
          "src/Helpers/CallHelperTest.php",
          "tests/Feature/BadasoApiCrudManagementTest.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "src/Helpers/CallHelperTest.php||src/Helpers/CallHelperTest.php",
          "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Helpers/CallHelperTest.php||src/Helpers/CallHelperTest.php": [
          "File: src/Helpers/CallHelperTest.php -> src/Helpers/CallHelperTest.php"
        ],
        "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php": [
          "File: tests/Feature/BadasoApiCrudManagementTest.php -> tests/Feature/BadasoApiCrudManagementTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "755:     public function testRelationDataBySlugEntityResultCrudManagement()",
          "756:     {",
          "768:     }",
          "770:     public function testEditCrudManagement()",
          "",
          "[Removed Lines]",
          "759:             $tables = CallHelperTest::getCache($this->KEY_LIST_CREATE_TABLES);",
          "760:             foreach ($tables as $key => $slug) {",
          "761:                 $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/table/relation-data-by-slug'), [",
          "762:                     'slug' => $slug,",
          "763:                 ]);",
          "765:                 $response->assertSuccessful();",
          "766:             }",
          "",
          "[Added Lines]",
          "756:         $tables = CallHelperTest::getCache($this->KEY_LIST_CREATE_TABLES);",
          "757:         foreach ($tables as $key => $slug) {",
          "758:             $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/table/relation-data-by-slug'), [",
          "759:                 'slug' => $slug,",
          "760:             ]);",
          "762:             $response->assertSuccessful();",
          "763:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "55de56643ca53437380a178c5e8f140d8ede3077",
      "candidate_info": {
        "commit_hash": "55de56643ca53437380a178c5e8f140d8ede3077",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/55de56643ca53437380a178c5e8f140d8ede3077",
        "files": [
          "src/ContentManager/FileGenerator.php"
        ],
        "message": "comit",
        "before_after_code_files": [
          "src/ContentManager/FileGenerator.php||src/ContentManager/FileGenerator.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/ContentManager/FileGenerator.php||src/ContentManager/FileGenerator.php": [
          "File: src/ContentManager/FileGenerator.php -> src/ContentManager/FileGenerator.php"
        ]
      }
    },
    {
      "candidate_hash": "7e2e529dc713837b0d8881ac944733307b84cad2",
      "candidate_info": {
        "commit_hash": "7e2e529dc713837b0d8881ac944733307b84cad2",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/7e2e529dc713837b0d8881ac944733307b84cad2",
        "files": [
          "src/Controllers/BadasoMenuController.php",
          "src/Seeder/Configurations/FixedMenuItemSeeder.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "src/Controllers/BadasoMenuController.php||src/Controllers/BadasoMenuController.php",
          "src/Seeder/Configurations/FixedMenuItemSeeder.php||src/Seeder/Configurations/FixedMenuItemSeeder.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Controllers/BadasoMenuController.php||src/Controllers/BadasoMenuController.php": [
          "File: src/Controllers/BadasoMenuController.php -> src/Controllers/BadasoMenuController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "193:                 $data = [];",
          "194:                 foreach ($menus as $index => $menu) {",
          "195:                     $menu_items = $all_menu_items",
          "197:                         ->where('menu_id', $menu->id)->map(function ($item) use ($all_menu_items) {",
          "198:                             $children = array_values($all_menu_items->where('parent_id', $item->id)->toArray());",
          "",
          "[Removed Lines]",
          "196:                         ->where(\"parent_id\", null)",
          "",
          "[Added Lines]",
          "196:                         ->where('parent_id', null)",
          "",
          "---------------"
        ],
        "src/Seeder/Configurations/FixedMenuItemSeeder.php||src/Seeder/Configurations/FixedMenuItemSeeder.php": [
          "File: src/Seeder/Configurations/FixedMenuItemSeeder.php -> src/Seeder/Configurations/FixedMenuItemSeeder.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: namespace Database\\Seeders\\Badaso;",
          "6: use Illuminate\\Database\\Seeder;",
          "8: use Uasoft\\Badaso\\Models\\MenuItem;",
          "10: class FixedMenuItemSeeder extends Seeder",
          "",
          "[Removed Lines]",
          "5: use Uasoft\\Badaso\\Models\\Menu;",
          "7: use Illuminate\\Support\\Facades\\DB;",
          "",
          "[Added Lines]",
          "6: use Uasoft\\Badaso\\Models\\Menu;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "217:                 }",
          "218:             }",
          "219:         } catch (\\Exception $e) {",
          "221:             \\DB::rollBack();",
          "222:         }",
          "",
          "[Removed Lines]",
          "220:             throw new \\Exception('Exception occur ' . $e);",
          "",
          "[Added Lines]",
          "219:             throw new \\Exception('Exception occur '.$e);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "05b6c1286565481ca82d21044c011a27dab2bf53",
      "candidate_info": {
        "commit_hash": "05b6c1286565481ca82d21044c011a27dab2bf53",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/05b6c1286565481ca82d21044c011a27dab2bf53",
        "files": [
          "src/Helpers/CallHelperTest.php"
        ],
        "message": "add function for callhelpertest",
        "before_after_code_files": [
          "src/Helpers/CallHelperTest.php||src/Helpers/CallHelperTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Helpers/CallHelperTest.php||src/Helpers/CallHelperTest.php": [
          "File: src/Helpers/CallHelperTest.php -> src/Helpers/CallHelperTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "118:     {",
          "119:         Cache::store('file')->clear();",
          "120:     }",
          "121: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "122:     public static function login(TestCase $test_case)",
          "123:     {",
          "125:         $login = $test_case->post(CallHelperTest::getApiAuth('login'), [",
          "126:             \"email\" => \"admin@admin.com\",",
          "127:             \"password\" => \"admin\",",
          "128:             \"remember\" => false",
          "129:         ]);",
          "130:         return $login->json(\"data.accessToken\");",
          "131:     }",
          "133:     public static function getApiAuth($path)",
          "134:     {",
          "135:         return \"badaso-api/v1/auth/\" . $path;",
          "136:     }",
          "138:     public static function getApiV1($path)",
          "139:     {",
          "140:         return \"badaso-api/module/post/v1\" . $path;",
          "141:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3949b3c8d58ce9b7f510d88499349b832bdcaabd",
      "candidate_info": {
        "commit_hash": "3949b3c8d58ce9b7f510d88499349b832bdcaabd",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/3949b3c8d58ce9b7f510d88499349b832bdcaabd",
        "files": [
          "src/Controllers/Controller.php",
          "src/resources/js/pages/crud-generated/browse.vue",
          "src/resources/js/pages/crud-generated/edit.vue"
        ],
        "message": "commit",
        "before_after_code_files": [
          "src/Controllers/Controller.php||src/Controllers/Controller.php",
          "src/resources/js/pages/crud-generated/browse.vue||src/resources/js/pages/crud-generated/browse.vue",
          "src/resources/js/pages/crud-generated/edit.vue||src/resources/js/pages/crud-generated/edit.vue"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Controllers/Controller.php||src/Controllers/Controller.php": [
          "File: src/Controllers/Controller.php -> src/Controllers/Controller.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "554:                     ])) {",
          "555:                         $files = explode(',', $model->{$data_row->field});",
          "556:                         foreach ($files as $file) {",
          "557:                             if (is_array($value)) {",
          "558:                                 if (! in_array($file, $value)) {",
          "559:                                     $this->handleDeleteFile($file);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "557:                             dd($file);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "566:                         }",
          "567:                     }",
          "568:                     $new_data[$key] = $this->getContentByType($data_type, $data_row, $value) !== null ? $this->getContentByType($data_type, $data_row, $value) : '';",
          "569:                 }",
          "570:             }",
          "571:             DB::table($data_type->name)->where('id', $id)->update($new_data);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "570:                     dd($model);",
          "",
          "---------------"
        ],
        "src/resources/js/pages/crud-generated/browse.vue||src/resources/js/pages/crud-generated/browse.vue": [
          "File: src/resources/js/pages/crud-generated/browse.vue -> src/resources/js/pages/crud-generated/browse.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "867:         });",
          "868:         this.$closeLoader();",
          "869:         this.data = response.data;",
          "870:         this.records = response.data.data;",
          "871:         this.records.map((record) => {",
          "872:           if (record.createdAt || record.updatedAt) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "870:         console.log(this.data,'data')",
          "",
          "---------------"
        ],
        "src/resources/js/pages/crud-generated/edit.vue||src/resources/js/pages/crud-generated/edit.vue": [
          "File: src/resources/js/pages/crud-generated/edit.vue -> src/resources/js/pages/crud-generated/edit.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:                 <template v-if=\"dataRow.edit && dataRow.type !== 'hidden'\">",
          "27:                   <!-- <input type=\"text\" v-model=\"dataRow.value\"> -->",
          "28:                   <!-- <vs-input type=\"text\" v-model=\"dataRow.value\"></vs-input> -->",
          "29:                   <badaso-text",
          "30:                     v-if=\"dataRow.type == 'text'\"",
          "31:                     :label=\"dataRow.displayName\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:                   {{ dataRow.value }}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "428:         if ((row && row.value) || (row && row.type == \"switch\")) {",
          "429:           dataRows[row.field] = row.value;",
          "430:         }",
          "431:       }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "432:          if ((row && row.value) || (row && row.type == \"upload_file\")) {",
          "433:           dataRows[row.field] = row.value;",
          "434:           console.log(dataRows[row.field],'datarow')",
          "435:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "477:         });",
          "479:         this.$closeLoader();",
          "481:         this.dataType = dataType;",
          "482:         this.record = response.data;",
          "484:         const dataRows = this.dataType.dataRows.map((data) => {",
          "485:           try {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "487:         console.log(this.record,'record')",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "546:             } else {",
          "547:               data.value =",
          "548:                 this.record[this.$caseConvert.stringSnakeToCamel(data.field)];",
          "549:             }",
          "550:           } catch (error) {}",
          "551:           return data;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "554:                 console.log(data.value,'testu')",
          "",
          "---------------"
        ]
      }
    }
  ]
}