{
  "cve_id": "CVE-2022-46170",
  "cve_desc": "CodeIgniter is a PHP full-stack web framework. When an application uses (1) multiple session cookies (e.g., one for user pages and one for admin pages) and (2)  a session handler is set to `DatabaseHandler`, `MemcachedHandler`, or `RedisHandler`, then if an attacker gets one session cookie (e.g., one for user pages), they may be able to access pages that require another session cookie (e.g., for admin pages). This issue has been patched, please upgrade to version 4.2.11 or later. As a workaround, use only one session cookie.",
  "repo": "codeigniter4/CodeIgniter4",
  "patch_hash": "f9fb6574fbeb5a4aa63f7ea87296523e10db9328",
  "patch_info": {
    "commit_hash": "f9fb6574fbeb5a4aa63f7ea87296523e10db9328",
    "repo": "codeigniter4/CodeIgniter4",
    "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/f9fb6574fbeb5a4aa63f7ea87296523e10db9328",
    "files": [
      "system/Session/Handlers/DatabaseHandler.php",
      "system/Session/Handlers/MemcachedHandler.php",
      "system/Session/Handlers/RedisHandler.php",
      "user_guide_src/source/changelogs/v4.2.11.rst",
      "user_guide_src/source/installation/upgrade_4211.rst",
      "user_guide_src/source/libraries/sessions.rst",
      "user_guide_src/source/libraries/sessions/039.php",
      "user_guide_src/source/libraries/sessions/040.php",
      "user_guide_src/source/libraries/sessions/041.php",
      "user_guide_src/source/libraries/sessions/042.php",
      "user_guide_src/source/libraries/sessions/043.php"
    ],
    "message": "Merge pull request from GHSA-6cq5-8cj7-g558\n\nFix session handlers bug",
    "before_after_code_files": [
      "system/Session/Handlers/DatabaseHandler.php||system/Session/Handlers/DatabaseHandler.php",
      "system/Session/Handlers/MemcachedHandler.php||system/Session/Handlers/MemcachedHandler.php",
      "system/Session/Handlers/RedisHandler.php||system/Session/Handlers/RedisHandler.php",
      "user_guide_src/source/libraries/sessions/039.php||user_guide_src/source/libraries/sessions/039.php",
      "user_guide_src/source/libraries/sessions/040.php||user_guide_src/source/libraries/sessions/040.php",
      "user_guide_src/source/libraries/sessions/041.php||user_guide_src/source/libraries/sessions/041.php",
      "user_guide_src/source/libraries/sessions/042.php||user_guide_src/source/libraries/sessions/042.php",
      "user_guide_src/source/libraries/sessions/043.php||user_guide_src/source/libraries/sessions/043.php"
    ]
  },
  "patch_diff": {
    "system/Session/Handlers/DatabaseHandler.php||system/Session/Handlers/DatabaseHandler.php": [
      "File: system/Session/Handlers/DatabaseHandler.php -> system/Session/Handlers/DatabaseHandler.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "61:     protected $rowExists = false;",
      "66:     public function __construct(AppConfig $config, string $ipAddress)",
      "67:     {",
      "68:         parent::__construct($config, $ipAddress);",
      "69:         $this->table = $config->sessionSavePath;",
      "71:         if (empty($this->table)) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "66:     protected string $idPrefix;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "77:         $this->db = Database::connect($this->DBGroup);",
      "79:         $this->platform = $this->db->getPlatform();",
      "80:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "88:         $this->idPrefix = $config->sessionCookieName . ':';",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "115:             $this->sessionID = $id;",
      "116:         }",
      "120:         if ($this->matchIP) {",
      "121:             $builder = $builder->where('ip_address', $this->ipAddress);",
      "",
      "[Removed Lines]",
      "118:         $builder = $this->db->table($this->table)->where('id', $id);",
      "",
      "[Added Lines]",
      "127:         $builder = $this->db->table($this->table)->where('id', $this->idPrefix . $id);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "183:         if ($this->rowExists === false) {",
      "184:             $insertData = [",
      "186:                 'ip_address' => $this->ipAddress,",
      "187:                 'data'       => $this->prepareData($data),",
      "188:             ];",
      "",
      "[Removed Lines]",
      "185:                 'id'         => $id,",
      "",
      "[Added Lines]",
      "194:                 'id'         => $this->idPrefix . $id,",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "197:             return true;",
      "198:         }",
      "202:         if ($this->matchIP) {",
      "203:             $builder = $builder->where('ip_address', $this->ipAddress);",
      "",
      "[Removed Lines]",
      "200:         $builder = $this->db->table($this->table)->where('id', $id);",
      "",
      "[Added Lines]",
      "209:         $builder = $this->db->table($this->table)->where('id', $this->idPrefix . $id);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "242:     public function destroy($id): bool",
      "243:     {",
      "244:         if ($this->lock) {",
      "247:             if ($this->matchIP) {",
      "248:                 $builder = $builder->where('ip_address', $this->ipAddress);",
      "",
      "[Removed Lines]",
      "245:             $builder = $this->db->table($this->table)->where('id', $id);",
      "",
      "[Added Lines]",
      "254:             $builder = $this->db->table($this->table)->where('id', $this->idPrefix . $id);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "276:         $separator = ' ';",
      "277:         $interval  = implode($separator, ['', \"{$max_lifetime} second\", '']);",
      "280:     }",
      "",
      "[Removed Lines]",
      "279:         return $this->db->table($this->table)->where('timestamp <', \"now() - INTERVAL {$interval}\", false)->delete() ? 1 : $this->fail();",
      "",
      "[Added Lines]",
      "288:         return $this->db->table($this->table)->where(",
      "289:             'timestamp <',",
      "290:             \"now() - INTERVAL {$interval}\",",
      "291:             false",
      "292:         )->delete() ? 1 : $this->fail();",
      "",
      "---------------"
    ],
    "system/Session/Handlers/MemcachedHandler.php||system/Session/Handlers/MemcachedHandler.php": [
      "File: system/Session/Handlers/MemcachedHandler.php -> system/Session/Handlers/MemcachedHandler.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "61:             throw SessionException::forEmptySavepath();",
      "62:         }",
      "64:         if ($this->matchIP === true) {",
      "65:             $this->keyPrefix .= $this->ipAddress . ':';",
      "66:         }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "65:         $this->keyPrefix .= $config->sessionCookieName . ':';",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "89:             $serverList[] = $server['host'] . ':' . $server['port'];",
      "90:         }",
      "93:             $this->memcached = null;",
      "94:             $this->logger->error('Session: Invalid Memcached save path format: ' . $this->savePath);",
      "",
      "[Removed Lines]",
      "92:         if (! preg_match_all('#,?([^,:]+)\\:(\\d{1,5})(?:\\:(\\d+))?#', $this->savePath, $matches, PREG_SET_ORDER)) {",
      "",
      "[Added Lines]",
      "95:         if (",
      "96:             ! preg_match_all(",
      "97:                 '#,?([^,:]+)\\:(\\d{1,5})(?:\\:(\\d+))?#',",
      "98:                 $this->savePath,",
      "99:                 $matches,",
      "100:                 PREG_SET_ORDER",
      "101:             )",
      "102:         ) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "99:         foreach ($matches as $match) {",
      "101:             if (in_array($match[1] . ':' . $match[2], $serverList, true)) {",
      "104:                 continue;",
      "105:             }",
      "107:             if (! $this->memcached->addServer($match[1], (int) $match[2], $match[3] ?? 0)) {",
      "109:             } else {",
      "110:                 $serverList[] = $match[1] . ':' . $match[2];",
      "111:             }",
      "",
      "[Removed Lines]",
      "102:                 $this->logger->debug('Session: Memcached server pool already has ' . $match[1] . ':' . $match[2]);",
      "108:                 $this->logger->error('Could not add ' . $match[1] . ':' . $match[2] . ' to Memcached server pool.');",
      "",
      "[Added Lines]",
      "112:                 $this->logger->debug(",
      "113:                     'Session: Memcached server pool already has ' . $match[1] . ':' . $match[2]",
      "114:                 );",
      "120:                 $this->logger->error(",
      "121:                     'Could not add ' . $match[1] . ':' . $match[2] . ' to Memcached server pool.'",
      "122:                 );",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "260:             }",
      "262:             if (! $this->memcached->set($lockKey, Time::now()->getTimestamp(), 300)) {",
      "265:                 return false;",
      "266:             }",
      "",
      "[Removed Lines]",
      "263:                 $this->logger->error('Session: Error while trying to obtain lock for ' . $this->keyPrefix . $sessionID);",
      "",
      "[Added Lines]",
      "277:                 $this->logger->error(",
      "278:                     'Session: Error while trying to obtain lock for ' . $this->keyPrefix . $sessionID",
      "279:                 );",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "270:         } while (++$attempt < 30);",
      "272:         if ($attempt === 30) {",
      "275:             return false;",
      "276:         }",
      "",
      "[Removed Lines]",
      "273:             $this->logger->error('Session: Unable to obtain lock for ' . $this->keyPrefix . $sessionID . ' after 30 attempts, aborting.');",
      "",
      "[Added Lines]",
      "289:             $this->logger->error(",
      "290:                 'Session: Unable to obtain lock for ' . $this->keyPrefix . $sessionID . ' after 30 attempts, aborting.'",
      "291:             );",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "290:                 ! $this->memcached->delete($this->lockKey)",
      "291:                 && $this->memcached->getResultCode() !== Memcached::RES_NOTFOUND",
      "292:             ) {",
      "295:                 return false;",
      "296:             }",
      "",
      "[Removed Lines]",
      "293:                 $this->logger->error('Session: Error while trying to free lock for ' . $this->lockKey);",
      "",
      "[Added Lines]",
      "311:                 $this->logger->error(",
      "312:                     'Session: Error while trying to free lock for ' . $this->lockKey",
      "313:                 );",
      "",
      "---------------"
    ],
    "system/Session/Handlers/RedisHandler.php||system/Session/Handlers/RedisHandler.php": [
      "File: system/Session/Handlers/RedisHandler.php -> system/Session/Handlers/RedisHandler.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "72:         $this->setSavePath();",
      "74:         if ($this->matchIP === true) {",
      "75:             $this->keyPrefix .= $this->ipAddress . ':';",
      "76:         }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "75:         $this->keyPrefix .= $config->sessionCookieName . ':';",
      "",
      "---------------"
    ],
    "user_guide_src/source/libraries/sessions/039.php||user_guide_src/source/libraries/sessions/039.php": [
      "File: user_guide_src/source/libraries/sessions/039.php -> user_guide_src/source/libraries/sessions/039.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "7: class App extends BaseConfig",
      "8: {",
      "10:     public $sessionSavePath = 'ci_sessions';",
      "12: }",
      "",
      "[Removed Lines]",
      "9:     public $sessionDriver   = 'CodeIgniter\\Session\\Handlers\\DatabaseHandler';",
      "",
      "[Added Lines]",
      "10:     public $sessionDriver = 'CodeIgniter\\Session\\Handlers\\DatabaseHandler';",
      "",
      "---------------"
    ],
    "user_guide_src/source/libraries/sessions/040.php||user_guide_src/source/libraries/sessions/040.php": [
      "File: user_guide_src/source/libraries/sessions/040.php -> user_guide_src/source/libraries/sessions/040.php"
    ],
    "user_guide_src/source/libraries/sessions/041.php||user_guide_src/source/libraries/sessions/041.php": [
      "File: user_guide_src/source/libraries/sessions/041.php -> user_guide_src/source/libraries/sessions/041.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "7: class App extends BaseConfig",
      "8: {",
      "10:     public $sessionSavePath = 'tcp://localhost:6379';",
      "12: }",
      "",
      "[Removed Lines]",
      "9:     public $sessionDiver    = 'CodeIgniter\\Session\\Handlers\\RedisHandler';",
      "",
      "[Added Lines]",
      "10:     public $sessionDiver = 'CodeIgniter\\Session\\Handlers\\RedisHandler';",
      "",
      "---------------"
    ],
    "user_guide_src/source/libraries/sessions/042.php||user_guide_src/source/libraries/sessions/042.php": [
      "File: user_guide_src/source/libraries/sessions/042.php -> user_guide_src/source/libraries/sessions/042.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "7: class App extends BaseConfig",
      "8: {",
      "10:     public $sessionSavePath = 'localhost:11211';",
      "12: }",
      "",
      "[Removed Lines]",
      "9:     public $sessionDriver   = 'CodeIgniter\\Session\\Handlers\\MemcachedHandler';",
      "",
      "[Added Lines]",
      "10:     public $sessionDriver = 'CodeIgniter\\Session\\Handlers\\MemcachedHandler';",
      "",
      "---------------"
    ],
    "user_guide_src/source/libraries/sessions/043.php||user_guide_src/source/libraries/sessions/043.php": [
      "File: user_guide_src/source/libraries/sessions/043.php -> user_guide_src/source/libraries/sessions/043.php"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "900bc84f4aecc439f6a853ba32f023e6f6f88972",
      "candidate_info": {
        "commit_hash": "900bc84f4aecc439f6a853ba32f023e6f6f88972",
        "repo": "codeigniter4/CodeIgniter4",
        "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/900bc84f4aecc439f6a853ba32f023e6f6f88972",
        "files": [
          "tests/system/HTTP/IncomingRequestTest.php"
        ],
        "message": "test: fix test names",
        "before_after_code_files": [
          "tests/system/HTTP/IncomingRequestTest.php||tests/system/HTTP/IncomingRequestTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/codeigniter4/CodeIgniter4/pull/7002"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/system/HTTP/IncomingRequestTest.php||tests/system/HTTP/IncomingRequestTest.php": [
          "File: tests/system/HTTP/IncomingRequestTest.php -> tests/system/HTTP/IncomingRequestTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "728:         $this->assertSame($expected, $this->request->getIPAddress());",
          "729:     }",
          "732:     {",
          "733:         $_SERVER['HTTP_X_FORWARDED_FOR'] = '123.456.23.123';",
          "734:         $expected                        = '10.0.1.200';",
          "",
          "[Removed Lines]",
          "731:     public function testGetIPAddressThruProxyInvalid()",
          "",
          "[Added Lines]",
          "731:     public function testGetIPAddressThruProxyInvalidIPAddress()",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "779:         $this->assertSame($expected, $this->request->getIPAddress());",
          "780:     }",
          "783:     {",
          "784:         $expected                        = '192.168.5.21';",
          "785:         $_SERVER['REMOTE_ADDR']          = $expected;",
          "",
          "[Removed Lines]",
          "782:     public function testGetIPAddressThruProxyOutofSubnet()",
          "",
          "[Added Lines]",
          "782:     public function testGetIPAddressThruProxyOutOfSubnet()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cb6d80161fc3f70b8d287064709d658ce8cd4ab3",
      "candidate_info": {
        "commit_hash": "cb6d80161fc3f70b8d287064709d658ce8cd4ab3",
        "repo": "codeigniter4/CodeIgniter4",
        "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/cb6d80161fc3f70b8d287064709d658ce8cd4ab3",
        "files": [
          "app/Config/App.php",
          "phpstan-baseline.neon.dist",
          "system/HTTP/Request.php",
          "system/HTTP/RequestTrait.php",
          "system/Test/Mock/MockAppConfig.php",
          "system/Test/Mock/MockCLIConfig.php",
          "tests/system/HTTP/IncomingRequestTest.php",
          "tests/system/HTTP/RequestTest.php"
        ],
        "message": "fix: format of $proxyIPs\n\nSpecify HTTP header name for security reasons.",
        "before_after_code_files": [
          "app/Config/App.php||app/Config/App.php",
          "phpstan-baseline.neon.dist||phpstan-baseline.neon.dist",
          "system/HTTP/Request.php||system/HTTP/Request.php",
          "system/HTTP/RequestTrait.php||system/HTTP/RequestTrait.php",
          "system/Test/Mock/MockAppConfig.php||system/Test/Mock/MockAppConfig.php",
          "system/Test/Mock/MockCLIConfig.php||system/Test/Mock/MockCLIConfig.php",
          "tests/system/HTTP/IncomingRequestTest.php||tests/system/HTTP/IncomingRequestTest.php",
          "tests/system/HTTP/RequestTest.php||tests/system/HTTP/RequestTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/codeigniter4/CodeIgniter4/pull/7002"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "app/Config/App.php||app/Config/App.php": [
          "File: app/Config/App.php -> app/Config/App.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "346:     public $proxyIPs = '';",
          "",
          "[Added Lines]",
          "349:     public $proxyIPs = [];",
          "",
          "---------------"
        ],
        "phpstan-baseline.neon.dist||phpstan-baseline.neon.dist": [
          "File: phpstan-baseline.neon.dist -> phpstan-baseline.neon.dist",
          "--- Hunk 1 ---",
          "[Context before]",
          "500:    count: 1",
          "501:    path: system/HTTP/RedirectResponse.php",
          "508:   -",
          "509:    message: \"#^Property CodeIgniter\\\\\\\\HTTP\\\\\\\\Request\\\\:\\\\:\\\\$uri \\\\(CodeIgniter\\\\\\\\HTTP\\\\\\\\URI\\\\) in empty\\\\(\\\\) is not falsy\\\\.$#\"",
          "510:    count: 1",
          "",
          "[Removed Lines]",
          "503:   -",
          "504:    message: \"#^Property CodeIgniter\\\\\\\\HTTP\\\\\\\\Request\\\\:\\\\:\\\\$proxyIPs \\\\(array\\\\|string\\\\) on left side of \\\\?\\\\? is not nullable\\\\.$#\"",
          "505:    count: 1",
          "506:    path: system/HTTP/Request.php",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "system/HTTP/Request.php||system/HTTP/Request.php": [
          "File: system/HTTP/Request.php -> system/HTTP/Request.php"
        ],
        "system/HTTP/RequestTrait.php||system/HTTP/RequestTrait.php": [
          "File: system/HTTP/RequestTrait.php -> system/HTTP/RequestTrait.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: namespace CodeIgniter\\HTTP;",
          "14: use CodeIgniter\\Validation\\FormatRules;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14: use CodeIgniter\\Exceptions\\ConfigException;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "62:         $proxyIPs = $this->proxyIPs ?? config('App')->proxyIPs;",
          "65:         }",
          "67:         $this->ipAddress = $this->getServer('REMOTE_ADDR');",
          "69:         if ($proxyIPs) {",
          "87:                 }",
          "112:                     }",
          "131:                     }",
          "151:                     }",
          "152:                 }",
          "153:             }",
          "",
          "[Removed Lines]",
          "63:         if (! empty($proxyIPs) && ! is_array($proxyIPs)) {",
          "64:             $proxyIPs = explode(',', str_replace(' ', '', $proxyIPs));",
          "70:             foreach (['x-forwarded-for', 'client-ip', 'x-client-ip', 'x-cluster-client-ip'] as $header) {",
          "71:                 $spoof     = null;",
          "72:                 $headerObj = $this->header($header);",
          "74:                 if ($headerObj !== null) {",
          "75:                     $spoof = $headerObj->getValue();",
          "80:                     sscanf($spoof, '%[^,]', $spoof);",
          "82:                     if (! $ipValidator($spoof)) {",
          "83:                         $spoof = null;",
          "84:                     } else {",
          "85:                         break;",
          "86:                     }",
          "88:             }",
          "90:             if ($spoof) {",
          "91:                 foreach ($proxyIPs as $proxyIP) {",
          "93:                     if (strpos($proxyIP, '/') === false) {",
          "96:                         if ($proxyIP === $this->ipAddress) {",
          "97:                             $this->ipAddress = $spoof;",
          "98:                             break;",
          "99:                         }",
          "101:                         continue;",
          "102:                     }",
          "105:                     if (! isset($separator)) {",
          "106:                         $separator = $ipValidator($this->ipAddress, 'ipv6') ? ':' : '.';",
          "107:                     }",
          "110:                     if (strpos($proxyIP, $separator) === false) {",
          "111:                         continue;",
          "115:                     if (! isset($ip, $sprintf)) {",
          "116:                         if ($separator === ':') {",
          "118:                             $ip = explode(':', str_replace('::', str_repeat(':', 9 - substr_count($this->ipAddress, ':')), $this->ipAddress));",
          "120:                             for ($j = 0; $j < 8; $j++) {",
          "121:                                 $ip[$j] = intval($ip[$j], 16);",
          "122:                             }",
          "124:                             $sprintf = '%016b%016b%016b%016b%016b%016b%016b%016b';",
          "125:                         } else {",
          "126:                             $ip      = explode('.', $this->ipAddress);",
          "127:                             $sprintf = '%08b%08b%08b%08b';",
          "128:                         }",
          "130:                         $ip = vsprintf($sprintf, $ip);",
          "134:                     sscanf($proxyIP, '%[^/]/%d', $netaddr, $masklen);",
          "137:                     if ($separator === ':') {",
          "138:                         $netaddr = explode(':', str_replace('::', str_repeat(':', 9 - substr_count($netaddr, ':')), $netaddr));",
          "140:                         for ($i = 0; $i < 8; $i++) {",
          "141:                             $netaddr[$i] = intval($netaddr[$i], 16);",
          "142:                         }",
          "143:                     } else {",
          "144:                         $netaddr = explode('.', $netaddr);",
          "145:                     }",
          "148:                     if (strncmp($ip, vsprintf($sprintf, $netaddr), $masklen) === 0) {",
          "149:                         $this->ipAddress = $spoof;",
          "150:                         break;",
          "",
          "[Added Lines]",
          "65:         if (! empty($proxyIPs)) {",
          "67:             if (! is_array($proxyIPs) || is_int(array_keys($proxyIPs)[0])) {",
          "68:                 throw new ConfigException(",
          "69:                     'You must set an array with Proxy IP address key and HTTP header name value in Config\\App::$proxyIPs.'",
          "70:                 );",
          "71:             }",
          "77:             foreach ($proxyIPs as $proxyIP => $header) {",
          "79:                 if (strpos($proxyIP, '/') === false) {",
          "82:                     if ($proxyIP === $this->ipAddress) {",
          "83:                         $spoof     = null;",
          "84:                         $headerObj = $this->header($header);",
          "86:                         if ($headerObj !== null) {",
          "87:                             $spoof = $headerObj->getValue();",
          "92:                             sscanf($spoof, '%[^,]', $spoof);",
          "94:                             if (! $ipValidator($spoof)) {",
          "95:                                 $spoof = null;",
          "96:                             } else {",
          "97:                                 $this->ipAddress = $spoof;",
          "98:                                 break;",
          "99:                             }",
          "100:                         }",
          "101:                     }",
          "103:                     continue;",
          "104:                 }",
          "107:                 if (! isset($separator)) {",
          "108:                     $separator = $ipValidator($this->ipAddress, 'ipv6') ? ':' : '.';",
          "112:                 if (strpos($proxyIP, $separator) === false) {",
          "113:                     continue;",
          "114:                 }",
          "117:                 if (! isset($ip, $sprintf)) {",
          "118:                     if ($separator === ':') {",
          "120:                         $ip = explode(':', str_replace('::', str_repeat(':', 9 - substr_count($this->ipAddress, ':')), $this->ipAddress));",
          "122:                         for ($j = 0; $j < 8; $j++) {",
          "123:                             $ip[$j] = intval($ip[$j], 16);",
          "124:                         }",
          "126:                         $sprintf = '%016b%016b%016b%016b%016b%016b%016b%016b';",
          "127:                     } else {",
          "128:                         $ip      = explode('.', $this->ipAddress);",
          "129:                         $sprintf = '%08b%08b%08b%08b';",
          "132:                     $ip = vsprintf($sprintf, $ip);",
          "133:                 }",
          "136:                 sscanf($proxyIP, '%[^/]/%d', $netaddr, $masklen);",
          "139:                 if ($separator === ':') {",
          "140:                     $netaddr = explode(':', str_replace('::', str_repeat(':', 9 - substr_count($netaddr, ':')), $netaddr));",
          "142:                     for ($i = 0; $i < 8; $i++) {",
          "143:                         $netaddr[$i] = intval($netaddr[$i], 16);",
          "145:                 } else {",
          "146:                     $netaddr = explode('.', $netaddr);",
          "147:                 }",
          "150:                 if (strncmp($ip, vsprintf($sprintf, $netaddr), $masklen) === 0) {",
          "151:                     $spoof     = null;",
          "152:                     $headerObj = $this->header($header);",
          "154:                     if ($headerObj !== null) {",
          "155:                         $spoof = $headerObj->getValue();",
          "160:                         sscanf($spoof, '%[^,]', $spoof);",
          "162:                         if (! $ipValidator($spoof)) {",
          "163:                             $spoof = null;",
          "164:                         } else {",
          "165:                             $this->ipAddress = $spoof;",
          "166:                             break;",
          "167:                         }",
          "",
          "---------------"
        ],
        "system/Test/Mock/MockAppConfig.php||system/Test/Mock/MockAppConfig.php": [
          "File: system/Test/Mock/MockAppConfig.php -> system/Test/Mock/MockAppConfig.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:     public $cookieSecure     = false;",
          "24:     public $cookieHTTPOnly   = false;",
          "25:     public $cookieSameSite   = 'Lax';",
          "27:     public $CSRFTokenName    = 'csrf_test_name';",
          "28:     public $CSRFHeaderName   = 'X-CSRF-TOKEN';",
          "29:     public $CSRFCookieName   = 'csrf_cookie_name';",
          "",
          "[Removed Lines]",
          "26:     public $proxyIPs         = '';",
          "",
          "[Added Lines]",
          "26:     public $proxyIPs         = [];",
          "",
          "---------------"
        ],
        "system/Test/Mock/MockCLIConfig.php||system/Test/Mock/MockCLIConfig.php": [
          "File: system/Test/Mock/MockCLIConfig.php -> system/Test/Mock/MockCLIConfig.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:     public $cookieSecure     = false;",
          "24:     public $cookieHTTPOnly   = false;",
          "25:     public $cookieSameSite   = 'Lax';",
          "27:     public $CSRFTokenName    = 'csrf_test_name';",
          "28:     public $CSRFCookieName   = 'csrf_cookie_name';",
          "29:     public $CSRFExpire       = 7200;",
          "",
          "[Removed Lines]",
          "26:     public $proxyIPs         = '';",
          "",
          "[Added Lines]",
          "26:     public $proxyIPs         = [];",
          "",
          "---------------"
        ],
        "tests/system/HTTP/IncomingRequestTest.php||tests/system/HTTP/IncomingRequestTest.php": [
          "File: tests/system/HTTP/IncomingRequestTest.php -> tests/system/HTTP/IncomingRequestTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "714:         $expected                        = '123.123.123.123';",
          "715:         $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected;",
          "716:         $_SERVER['REMOTE_ADDR']          = '10.0.1.200';",
          "720:         $this->request = new Request($config);",
          "721:         $this->request->populateHeaders();",
          "",
          "[Removed Lines]",
          "717:         $config                          = new App();",
          "718:         $config->proxyIPs                = '10.0.1.200,192.168.5.0/24';",
          "",
          "[Added Lines]",
          "718:         $config           = new App();",
          "719:         $config->proxyIPs = [",
          "720:             '10.0.1.200'     => 'X-Forwarded-For',",
          "721:             '192.168.5.0/24' => 'X-Forwarded-For',",
          "722:         ];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "729:         $_SERVER['HTTP_X_FORWARDED_FOR'] = '123.456.23.123';",
          "730:         $expected                        = '10.0.1.200';",
          "731:         $_SERVER['REMOTE_ADDR']          = $expected;",
          "735:         $this->request = new Request($config);",
          "736:         $this->request->populateHeaders();",
          "",
          "[Removed Lines]",
          "732:         $config                          = new App();",
          "733:         $config->proxyIPs                = '10.0.1.200,192.168.5.0/24';",
          "",
          "[Added Lines]",
          "736:         $config           = new App();",
          "737:         $config->proxyIPs = [",
          "738:             '10.0.1.200'     => 'X-Forwarded-For',",
          "739:             '192.168.5.0/24' => 'X-Forwarded-For',",
          "740:         ];",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "744:         $expected                        = '10.10.1.200';",
          "745:         $_SERVER['REMOTE_ADDR']          = $expected;",
          "746:         $_SERVER['HTTP_X_FORWARDED_FOR'] = '123.456.23.123';",
          "750:         $this->request = new Request($config);",
          "751:         $this->request->populateHeaders();",
          "",
          "[Removed Lines]",
          "747:         $config                          = new App();",
          "748:         $config->proxyIPs                = '10.0.1.200,192.168.5.0/24';",
          "",
          "[Added Lines]",
          "754:         $config           = new App();",
          "755:         $config->proxyIPs = [",
          "756:             '10.0.1.200'     => 'X-Forwarded-For',",
          "757:             '192.168.5.0/24' => 'X-Forwarded-For',",
          "758:         ];",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "759:         $expected                        = '123.123.123.123';",
          "760:         $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected;",
          "761:         $_SERVER['REMOTE_ADDR']          = '192.168.5.21';",
          "766:         $this->request->populateHeaders();",
          "",
          "[Removed Lines]",
          "762:         $config                          = new App();",
          "763:         $config->proxyIPs                = ['192.168.5.0/24'];",
          "765:         $this->request = new Request($config);",
          "",
          "[Added Lines]",
          "772:         $config           = new App();",
          "773:         $config->proxyIPs = ['192.168.5.0/24' => 'X-Forwarded-For'];",
          "774:         $this->request    = new Request($config);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "773:     {",
          "774:         $expected                        = '192.168.5.21';",
          "775:         $_SERVER['REMOTE_ADDR']          = $expected;",
          "778:         $_SERVER['HTTP_X_FORWARDED_FOR'] = '123.123.123.123';",
          "780:         $this->request->populateHeaders();",
          "",
          "[Removed Lines]",
          "776:         $config                          = new App();",
          "777:         $config->proxyIPs                = ['192.168.5.0/28'];",
          "779:         $this->request                   = new Request($config);",
          "",
          "[Added Lines]",
          "787:         $config           = new App();",
          "788:         $config->proxyIPs = ['192.168.5.0/28' => 'X-Forwarded-For'];",
          "789:         $this->request    = new Request($config);",
          "",
          "---------------"
        ],
        "tests/system/HTTP/RequestTest.php||tests/system/HTTP/RequestTest.php": [
          "File: tests/system/HTTP/RequestTest.php -> tests/system/HTTP/RequestTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "609:     {",
          "610:         $expected                        = '123.123.123.123';",
          "611:         $_SERVER['REMOTE_ADDR']          = '10.0.1.200';",
          "614:         $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected;",
          "616:         $this->request->populateHeaders();",
          "",
          "[Removed Lines]",
          "612:         $config                          = new App();",
          "613:         $config->proxyIPs                = '10.0.1.200,192.168.5.0/24';",
          "615:         $this->request                   = new Request($config);",
          "",
          "[Added Lines]",
          "614:         $config           = new App();",
          "615:         $config->proxyIPs = [",
          "616:             '10.0.1.200'     => 'X-Forwarded-For',",
          "617:             '192.168.5.0/24' => 'X-Forwarded-For',",
          "618:         ];",
          "619:         $this->request = new Request($config);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "623:     {",
          "624:         $expected                        = '123.456.23.123';",
          "625:         $_SERVER['REMOTE_ADDR']          = '10.0.1.200';",
          "628:         $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected;",
          "630:         $this->request->populateHeaders();",
          "",
          "[Removed Lines]",
          "626:         $config                          = new App();",
          "627:         $config->proxyIPs                = '10.0.1.200,192.168.5.0/24';",
          "629:         $this->request                   = new Request($config);",
          "",
          "[Added Lines]",
          "631:         $config                          = new App();",
          "632:         $config->proxyIPs                = [",
          "633:             '10.0.1.200'     => 'X-Forwarded-For',",
          "634:             '192.168.5.0/24' => 'X-Forwarded-For',",
          "635:         ];",
          "637:         $this->request = new Request($config);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "637:     {",
          "638:         $expected                        = '123.456.23.123';",
          "639:         $_SERVER['REMOTE_ADDR']          = '10.10.1.200';",
          "642:         $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected;",
          "644:         $this->request->populateHeaders();",
          "",
          "[Removed Lines]",
          "640:         $config                          = new App();",
          "641:         $config->proxyIPs                = '10.0.1.200,192.168.5.0/24';",
          "643:         $this->request                   = new Request($config);",
          "",
          "[Added Lines]",
          "650:         $config           = new App();",
          "651:         $config->proxyIPs = [",
          "652:             '10.0.1.200'     => 'X-Forwarded-For',",
          "653:             '192.168.5.0/24' => 'X-Forwarded-For',",
          "654:         ];",
          "655:         $this->request = new Request($config);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "651:     {",
          "652:         $expected                        = '123.123.123.123';",
          "653:         $_SERVER['REMOTE_ADDR']          = '192.168.5.21';",
          "656:         $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected;",
          "658:         $this->request->populateHeaders();",
          "",
          "[Removed Lines]",
          "654:         $config                          = new App();",
          "655:         $config->proxyIPs                = ['192.168.5.0/24'];",
          "657:         $this->request                   = new Request($config);",
          "",
          "[Added Lines]",
          "668:         $config           = new App();",
          "669:         $config->proxyIPs = ['192.168.5.0/24' => 'X-Forwarded-For'];",
          "670:         $this->request    = new Request($config);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "665:     {",
          "666:         $expected                        = '123.123.123.123';",
          "667:         $_SERVER['REMOTE_ADDR']          = '192.168.5.21';",
          "670:         $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected;",
          "672:         $this->request->populateHeaders();",
          "",
          "[Removed Lines]",
          "668:         $config                          = new App();",
          "669:         $config->proxyIPs                = ['192.168.5.0/28'];",
          "671:         $this->request                   = new Request($config);",
          "",
          "[Added Lines]",
          "683:         $config           = new App();",
          "684:         $config->proxyIPs = ['192.168.5.0/28' => 'X-Forwarded-For'];",
          "685:         $this->request    = new Request($config);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fbc46bb9db67ffbc2fb0a70bb69dd33221b5f6fd",
      "candidate_info": {
        "commit_hash": "fbc46bb9db67ffbc2fb0a70bb69dd33221b5f6fd",
        "repo": "codeigniter4/CodeIgniter4",
        "commit_url": "https://github.com/codeigniter4/CodeIgniter4/commit/fbc46bb9db67ffbc2fb0a70bb69dd33221b5f6fd",
        "files": [
          "system/HTTP/RequestTrait.php"
        ],
        "message": "docs: add doc comment",
        "before_after_code_files": [
          "system/HTTP/RequestTrait.php||system/HTTP/RequestTrait.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/codeigniter4/CodeIgniter4/pull/7002"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "system/HTTP/RequestTrait.php||system/HTTP/RequestTrait.php": [
          "File: system/HTTP/RequestTrait.php -> system/HTTP/RequestTrait.php"
        ]
      }
    }
  ]
}