{
  "cve_id": "CVE-2022-41711",
  "cve_desc": "Badaso version 2.6.0 allows an unauthenticated remote attacker to execute arbitrary code remotely on the server. This is possible because the application does not properly validate the data uploaded by users.",
  "repo": "uasoft-indonesia/badaso",
  "patch_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
  "patch_info": {
    "commit_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
    "repo": "uasoft-indonesia/badaso",
    "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/22250eca7c364d991ce9e0a723941eae4889d6f9",
    "files": [
      "src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue"
    ],
    "message": "Merge pull request #807 from uasoft-indonesia/bugfix/v2/filter-mimeType\n\nBugfix[v2] add filter mimeType",
    "before_after_code_files": [
      "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue"
    ]
  },
  "patch_diff": {
    "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue": [
      "File: src/resources/js/components/BadasoUploadFile.vue -> src/resources/js/components/BadasoUploadFile.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "336:           });",
      "337:           return;",
      "338:         }",
      "340:         this.uploadFile(files[0]);",
      "341:       }",
      "342:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "339:         if (!this.availableMimetypes.file.validMime.includes(files[0].type)) {",
      "340:           this.$vs.notify({",
      "341:             title: this.$t(\"alert.danger\"),",
      "342:             text: \"File type not allowed\",",
      "343:             color: \"danger\",",
      "344:           });",
      "345:           return;",
      "346:         }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadFileMultiple.vue -> src/resources/js/components/BadasoUploadFileMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "367:             });",
      "368:             return;",
      "369:           }",
      "371:           this.uploadFile(file);",
      "372:         }",
      "373:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "370:           if (!this.availableMimetypes.file.validMime.includes(file.type)) {",
      "371:             this.$vs.notify({",
      "372:               title: this.$t(\"alert.danger\"),",
      "373:               text: \"File type not allowed\",",
      "374:               color: \"danger\",",
      "375:             });",
      "376:             return;",
      "377:           }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue": [
      "File: src/resources/js/components/BadasoUploadImage.vue -> src/resources/js/components/BadasoUploadImage.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "380:           });",
      "381:           return;",
      "382:         }",
      "384:         this.uploadImage(files[0]);",
      "385:       }",
      "386:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "383:         if (!this.availableMimetypes.image.validMime.includes(files[0].type)){",
      "384:           this.$vs.notify({",
      "385:             title: this.$t(\"alert.danger\"),",
      "386:             text: \"File type not allowed\",",
      "387:             color: \"danger\",",
      "388:           });",
      "389:           return;",
      "390:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "421:     uploadImage(file) {",
      "422:       const files = new FormData();",
      "423:       files.append(\"upload\", file);",
      "425:       files.append(\"working_dir\", this.getActiveFolder);",
      "426:       this.$api.badasoFile",
      "427:         .uploadUsingLfm(files)",
      "",
      "[Removed Lines]",
      "424:       files.append(\"type\", \"image\");",
      "",
      "[Added Lines]",
      "431:       files.append(\"type\", file.type);",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadImageMultiple.vue -> src/resources/js/components/BadasoUploadImageMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:             });",
      "396:             return;",
      "397:           }",
      "399:           this.uploadImage(file);",
      "400:         }",
      "401:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "398:           if (!this.availableMimetypes.image.validMime.includes(file.type)) {",
      "399:             this.$vs.notify({",
      "400:               title: this.$t(\"alert.danger\"),",
      "401:               text: \"File type not allowed\",",
      "402:               color: \"danger\",",
      "403:             });",
      "404:             return;",
      "405:           }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "03e880c5069aa0c82189717cd2bcd5f9039b9ec5",
      "candidate_info": {
        "commit_hash": "03e880c5069aa0c82189717cd2bcd5f9039b9ec5",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/03e880c5069aa0c82189717cd2bcd5f9039b9ec5",
        "files": [
          "src/resources/js/components/BadasoWidget.vue"
        ],
        "message": "commit",
        "before_after_code_files": [
          "src/resources/js/components/BadasoWidget.vue||src/resources/js/components/BadasoWidget.vue"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/resources/js/components/BadasoWidget.vue||src/resources/js/components/BadasoWidget.vue": [
          "File: src/resources/js/components/BadasoWidget.vue -> src/resources/js/components/BadasoWidget.vue"
        ]
      }
    },
    {
      "candidate_hash": "d453784edf1c7c1ec9bfaeb44edc277b307a4570",
      "candidate_info": {
        "commit_hash": "d453784edf1c7c1ec9bfaeb44edc277b307a4570",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/d453784edf1c7c1ec9bfaeb44edc277b307a4570",
        "files": [
          ".gitpod.yml",
          ".gitpod/AppServiceProvider.php"
        ],
        "message": "update gitpod",
        "before_after_code_files": [
          ".gitpod/AppServiceProvider.php||.gitpod/AppServiceProvider.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".gitpod/AppServiceProvider.php||.gitpod/AppServiceProvider.php": [
          "File: .gitpod/AppServiceProvider.php -> .gitpod/AppServiceProvider.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: namespace App\\Providers;",
          "5: use Illuminate\\Support\\ServiceProvider;",
          "6: use Illuminate\\Support\\Facades\\URL;",
          "8: class AppServiceProvider extends ServiceProvider",
          "9: {",
          "15:     public function register()",
          "16:     {",
          "17:         URL::forceScheme('https');",
          "18:     }",
          "25:     public function boot()",
          "26:     {",
          "28:     }",
          "29: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "67e9bc83004e83b86aab740d052aea48b8b88e2a",
      "candidate_info": {
        "commit_hash": "67e9bc83004e83b86aab740d052aea48b8b88e2a",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/67e9bc83004e83b86aab740d052aea48b8b88e2a",
        "files": [
          "src/resources/js/lang/modules/en.js",
          "src/resources/js/lang/modules/id.js",
          "src/resources/js/pages/database-management/add.vue"
        ],
        "message": "update alert and link docs",
        "before_after_code_files": [
          "src/resources/js/lang/modules/en.js||src/resources/js/lang/modules/en.js",
          "src/resources/js/lang/modules/id.js||src/resources/js/lang/modules/id.js",
          "src/resources/js/pages/database-management/add.vue||src/resources/js/pages/database-management/add.vue"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/resources/js/lang/modules/en.js||src/resources/js/lang/modules/en.js": [
          "File: src/resources/js/lang/modules/en.js -> src/resources/js/lang/modules/en.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1043:         crud:",
          "1044:           \"Make sure the table has not been generated with CRUD Management if you want to edit or drop it.\",",
          "1045:         notAllowed: \"You're not allowed to edit.\",",
          "1047:       },",
          "1048:       error: {",
          "1049:         fieldName: \"Field name is required.\",",
          "",
          "[Removed Lines]",
          "1046:         fieldAttUnsigned: \"Foreign key constraint is incorrectly formed.\",",
          "",
          "[Added Lines]",
          "1046:         fieldAttUnsigned: \"Foreign key constraint is incorrectly formed. {0} to visit docs.\",",
          "1047:         visitDocs: \"Click here\",",
          "",
          "---------------"
        ],
        "src/resources/js/lang/modules/id.js||src/resources/js/lang/modules/id.js": [
          "File: src/resources/js/lang/modules/id.js -> src/resources/js/lang/modules/id.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1040:         crud:",
          "1041:           \"Pastikan tabel belum dibuat dengan CRUD Management jika ingin mengedit atau menghapus tabel.\",",
          "1044:       },",
          "1045:       error: {",
          "1046:         fieldName: \"Field name dibutuhkan.\",",
          "",
          "[Removed Lines]",
          "1043:         fieldAttUnsigned: \"Batasan kunci asing salah dibentuk.\",",
          "",
          "[Added Lines]",
          "1043:         fieldAttUnsigned: \"Batasan kunci asing salah dibentuk. {0} untuk mengunjungi dokumentasi\",",
          "1044:         visitDocs: \"Klik Disini\",",
          "",
          "---------------"
        ],
        "src/resources/js/pages/database-management/add.vue||src/resources/js/pages/database-management/add.vue": [
          "File: src/resources/js/pages/database-management/add.vue -> src/resources/js/pages/database-management/add.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "468: </template>",
          "470: <script>",
          "471: import {",
          "472:   required,",
          "473:   requiredIf,",
          "474:   maxLength,",
          "475:   helpers,",
          "476: } from \"vuelidate/lib/validators\";",
          "477: const alphaNumAndUnderscoreValidator = helpers.regex(",
          "478:   \"alphaNumAndDot\",",
          "479:   /^[a-zA-Z\\d_]*$/i",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "471: import { Link } from \"@inertiajs/inertia-vue\";",
          "478: import { hrefToUrl } from \"@inertiajs/inertia\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "704:             if (error.errors[\"rows.0.fieldType\"]) {",
          "705:               message = error.errors[\"rows.0.fieldType\"][0];",
          "706:             }",
          "708:               this.$vs.notify({",
          "719:             }",
          "720:           });",
          "721:       } else {",
          "",
          "[Removed Lines]",
          "707:              if(error.errors.code.indexOf(\"HY000\") == 0){",
          "709:               title: this.$t(\"alert.danger\"),",
          "710:               text : this.$t('database.edit.warning.fieldAttUnsigned'),",
          "711:               color: \"danger\",",
          "712:             });",
          "713:             }else{",
          "714:             this.$vs.notify({",
          "715:               title: this.$t(\"alert.danger\"),",
          "716:               text : message ? message : this.$t('database.warning.errorOnRequest'),",
          "717:               color: \"danger\",",
          "718:             });",
          "",
          "[Added Lines]",
          "709:             if (error.errors.code.indexOf(\"HY000\") == 0) {",
          "711:                 title: this.$t(\"alert.danger\"),",
          "714:                 text: this.$t(\"database.edit.warning.fieldAttUnsigned\", {",
          "715:                   0: `<a href=\"https://badaso-docs.uatech.co.id/core-concept/database-management#create-relationship-table\" target=\"_blank\"><b>${this.$t(",
          "716:                     \"database.edit.warning.visitDocs\"",
          "717:                   )}<b></a>`,",
          "718:                 }),",
          "719:                 color: \"danger\",",
          "720:               });",
          "721:             } else {",
          "722:               this.$vs.notify({",
          "723:                 title: this.$t(\"alert.danger\"),",
          "724:                 text: message",
          "725:                   ? message",
          "726:                   : this.$t(\"database.warning.errorOnRequest\"),",
          "727:                 color: \"danger\",",
          "728:               });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d3b6b4ca2f2b72dd4736dc6d749ce3a94f1c0110",
      "candidate_info": {
        "commit_hash": "d3b6b4ca2f2b72dd4736dc6d749ce3a94f1c0110",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/d3b6b4ca2f2b72dd4736dc6d749ce3a94f1c0110",
        "files": [
          "src/Controllers/BadasoCRUDController.php",
          "src/Widgets/PermissionWidget.php",
          "src/Widgets/RoleWidget.php",
          "src/Widgets/UserWidget.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "src/Controllers/BadasoCRUDController.php||src/Controllers/BadasoCRUDController.php",
          "src/Widgets/PermissionWidget.php||src/Widgets/PermissionWidget.php",
          "src/Widgets/RoleWidget.php||src/Widgets/RoleWidget.php",
          "src/Widgets/UserWidget.php||src/Widgets/UserWidget.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Controllers/BadasoCRUDController.php||src/Controllers/BadasoCRUDController.php": [
          "File: src/Controllers/BadasoCRUDController.php -> src/Controllers/BadasoCRUDController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "51:             $tables_with_crud_data = [];",
          "52:             foreach ($tables as $key => $value) {",
          "55:                     $config_watch_tables->addWatchTable($key);",
          "",
          "[Removed Lines]",
          "53:                 if (!in_array($key, $protected_tables)) {",
          "",
          "[Added Lines]",
          "53:                 if (! in_array($key, $protected_tables)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "87:             foreach ($table_fields as $key => $column) {",
          "88:                 $field = $key;",
          "89:                 $column = collect($column)->toArray();",
          "91:                     $data_row['data_type_id'] = $data_type->id;",
          "92:                     $data_row['field'] = $key;",
          "93:                     $data_row['type'] = DataTypeToComponent::convert($column['type']);",
          "",
          "[Removed Lines]",
          "90:                 if (!in_array($field, $generated_fields)) {",
          "",
          "[Added Lines]",
          "90:                 if (! in_array($field, $generated_fields)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "149:                     'required',",
          "150:                     \"unique:Uasoft\\Badaso\\Models\\DataType,name,{$request->id}\",",
          "151:                     function ($attribute, $value, $fail) {",
          "153:                             $fail(__('badaso::validation.crud.table_not_found', ['table' => $value]));",
          "154:                         }",
          "155:                     },",
          "",
          "[Removed Lines]",
          "152:                         if (!Schema::hasTable($value)) {",
          "",
          "[Added Lines]",
          "152:                         if (! Schema::hasTable($value)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "158:                 'rows.*.field' => [",
          "159:                     'required',",
          "160:                     function ($attribute, $value, $fail) use ($request) {",
          "162:                             $split_attribute = explode('.', $attribute);",
          "163:                             $split_attribute[2] = 'relation_type';",
          "164:                             $field_to_relation = join('.', $split_attribute);",
          "166:                                 $request->{$attribute} == $value ? $value : $fail(__('badaso::validation.crud.table_column_not_found', ['table_column' => \"$request->name.{$value}\"]));",
          "167:                             }",
          "168:                         } else {",
          "169:                             $table_fields = SchemaManager::describeTable($request->name);",
          "170:                             $field = collect($table_fields)->where('field', $value)->first();",
          "171:                             $row = collect($request->rows)->where('field', $value)->first();",
          "173:                                 $fail(__('badaso::validation.crud.table_column_not_have_default_value', ['table_column' => \"$request->name.{$value}\"]));",
          "174:                             } elseif ($row['field'] != 'id' && $field['key'] == 'PRI') {",
          "175:                                 $fail(__('badaso::validation.crud.id_table_wrong', ['table_column' => \"$request->name.{$value}\"]));",
          "",
          "[Removed Lines]",
          "161:                         if (!Schema::hasColumn($request->name, $value)) {",
          "165:                             if (!$field_to_relation == 'belongs_to_many') {",
          "172:                             if (!$row['add'] && !$field['autoincrement'] && $field['notnull'] && is_null($field['default'])) {",
          "",
          "[Added Lines]",
          "161:                         if (! Schema::hasColumn($request->name, $value)) {",
          "165:                             if (! $field_to_relation == 'belongs_to_many') {",
          "172:                             if (! $row['add'] && ! $field['autoincrement'] && $field['notnull'] && is_null($field['default'])) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "183:                 'notification.*.event' => ['in:onCreate,onRead,onUpdate,onDelete'],",
          "184:                 'create_soft_delete' => ['required', 'boolean', function ($att, $val, $failed) use ($request) {",
          "185:                     if (isset($request->name) && $val) {",
          "187:                             $failed(__('badaso::validation.crud.table_deleted_at_not_exists', [",
          "188:                                 'table_name' => $request->name,",
          "189:                             ]));",
          "",
          "[Removed Lines]",
          "186:                         if (!Schema::hasColumn($request->name, 'deleted_at')) {",
          "",
          "[Added Lines]",
          "186:                         if (! Schema::hasColumn($request->name, 'deleted_at')) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "284:                 ])",
          "285:                 ->performedOn($data_type)",
          "286:                 ->event('updated')",
          "289:             return ApiResponse::success($data_type);",
          "290:         } catch (Exception $e) {",
          "",
          "[Removed Lines]",
          "287:                 ->log('CRUD table ' . $data_type->slug . ' has been updated');",
          "",
          "[Added Lines]",
          "287:                 ->log('CRUD table '.$data_type->slug.' has been updated');",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "306:                     'required',",
          "307:                     'unique:Uasoft\\Badaso\\Models\\DataType',",
          "308:                     function ($attribute, $value, $fail) {",
          "310:                             $fail(__('badaso::validation.crud.table_not_found', ['table' => $value]));",
          "311:                         }",
          "312:                     },",
          "",
          "[Removed Lines]",
          "309:                         if (!Schema::hasTable($value)) {",
          "",
          "[Added Lines]",
          "309:                         if (! Schema::hasTable($value)) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "316:                 'rows.*.field' => [",
          "317:                     'required',",
          "318:                     function ($attribute, $value, $fail) use ($request) {",
          "320:                             $split_attribute = explode('.', $attribute);",
          "321:                             $split_attribute[2] = 'relation_type';",
          "322:                             $field_to_relation = join('.', $split_attribute);",
          "324:                                 $fail(__('badaso::validation.crud.table_column_not_found', ['table_column' => \"$request->name.{$value}\"]));",
          "325:                             }",
          "326:                         } else {",
          "327:                             $table_fields = SchemaManager::describeTable($request->name);",
          "328:                             $field = collect($table_fields)->where('field', $value)->first();",
          "329:                             $row = collect($request->rows)->where('field', $value)->first();",
          "331:                                 $fail(__('badaso::validation.crud.table_column_not_have_default_value', ['table_column' => \"$request->name.{$value}\"]));",
          "332:                             } elseif ($row['field'] != 'id' && $field['key'] == 'PRI') {",
          "333:                                 $fail(__('badaso::validation.crud.id_table_wrong', ['table_column' => \"$request->name.{$value}\"]));",
          "",
          "[Removed Lines]",
          "319:                         if (!Schema::hasColumn($request->name, $value)) {",
          "323:                             if (!$field_to_relation == 'belongs_to_many') {",
          "330:                             if (!$row['add'] && !$field['autoincrement'] && $field['notnull'] && is_null($field['default'])) {",
          "",
          "[Added Lines]",
          "319:                         if (! Schema::hasColumn($request->name, $value)) {",
          "323:                             if (! $field_to_relation == 'belongs_to_many') {",
          "330:                             if (! $row['add'] && ! $field['autoincrement'] && $field['notnull'] && is_null($field['default'])) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "341:                 'notification.*.event' => ['in:onCreate,onRead,onUpdate,onDelete'],",
          "342:                 'create_soft_delete' => ['required', 'boolean', function ($att, $val, $failed) use ($request) {",
          "343:                     if (isset($request->name) && $val) {",
          "345:                             $failed(__('badaso::validation.crud.table_deleted_at_not_exists', [",
          "346:                                 'table_name' => $request->name,",
          "347:                             ]));",
          "",
          "[Removed Lines]",
          "344:                         if (!Schema::hasColumn($request->name, 'deleted_at')) {",
          "",
          "[Added Lines]",
          "344:                         if (! Schema::hasColumn($request->name, 'deleted_at')) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "429:                 ->withProperties(['attributes' => $new_data_type])",
          "430:                 ->performedOn($new_data_type)",
          "431:                 ->event('created')",
          "434:             return ApiResponse::success($new_data_type);",
          "435:         } catch (Exception $e) {",
          "",
          "[Removed Lines]",
          "432:                 ->log('CRUD table ' . $new_data_type->slug . ' has been created');",
          "",
          "[Added Lines]",
          "432:                 ->log('CRUD table '.$new_data_type->slug.' has been created');",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "467:                 ->withProperties(['attributes' => $data_type])",
          "468:                 ->performedOn($data_type)",
          "469:                 ->event('deleted')",
          "472:             return ApiResponse::success();",
          "473:         } catch (Exception $e) {",
          "",
          "[Removed Lines]",
          "470:                 ->log('CRUD table ' . $data_type->slug . ' has been deleted');",
          "",
          "[Added Lines]",
          "470:                 ->log('CRUD table '.$data_type->slug.' has been deleted');",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "481:     {",
          "482:         $menu_key = config('badaso.default_menu');",
          "483:         $menu = Menu::where('key', $menu_key)->first();",
          "486:         if (is_null($menu)) {",
          "487:             $menu = new Menu();",
          "",
          "[Removed Lines]",
          "484:         $url = '/' . $menu_key . '/' . $data_type->slug;",
          "",
          "[Added Lines]",
          "484:         $url = '/'.$menu_key.'/'.$data_type->slug;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "502:             $menu_item->icon_class = $data_type->icon;",
          "503:             $menu_item->color = null;",
          "504:             $menu_item->parent_id = null;",
          "506:             $menu_item->save();",
          "507:         } else {",
          "508:             $menu_item = new MenuItem();",
          "",
          "[Removed Lines]",
          "505:             $menu_item->permissions = $data_type->generate_permissions ? 'browse_' . $data_type->name : null;",
          "",
          "[Added Lines]",
          "505:             $menu_item->permissions = $data_type->generate_permissions ? 'browse_'.$data_type->name : null;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "513:             $menu_item->icon_class = $data_type->icon;",
          "514:             $menu_item->color = null;",
          "515:             $menu_item->parent_id = null;",
          "517:             $menu_item->order = $menu_item->highestOrderMenuItem();",
          "518:             $menu_item->save();",
          "519:         }",
          "",
          "[Removed Lines]",
          "516:             $menu_item->permissions = $data_type->generate_permissions ? 'browse_' . $data_type->name : null;",
          "",
          "[Added Lines]",
          "516:             $menu_item->permissions = $data_type->generate_permissions ? 'browse_'.$data_type->name : null;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "522:     private function deleteMenuItem($data_type)",
          "523:     {",
          "524:         $menu_key = config('badaso.default_menu');",
          "526:         MenuItem::where('url', $url)->delete();",
          "527:     }",
          "",
          "[Removed Lines]",
          "525:         $url = '/' . $menu_key . '/' . $data_type->slug;",
          "",
          "[Added Lines]",
          "525:         $url = '/'.$menu_key.'/'.$data_type->slug;",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "531:         $filesystem = new LaravelFileSystem();",
          "532:         $file_path = ApiDocs::getFilePath($table_name);",
          "533:         $stub = ApiDocs::getStub($table_name, $data_rows, $data_type);",
          "535:             return false;",
          "536:         }",
          "",
          "[Removed Lines]",
          "534:         if (!$filesystem->put($file_path, $stub)) {",
          "",
          "[Added Lines]",
          "534:         if (! $filesystem->put($file_path, $stub)) {",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "568:                         'undeletable' => true,",
          "569:                     ],",
          "570:                     1 => [",
          "573:                         'field_type' => 'bigint',",
          "574:                         'field_length' => null,",
          "575:                         'field_null' => false,",
          "",
          "[Removed Lines]",
          "571:                         'id' => $request['name'] . '_id',",
          "572:                         'field_name' => $request['name'] . '_id',",
          "",
          "[Added Lines]",
          "571:                         'id' => $request['name'].'_id',",
          "572:                         'field_name' => $request['name'].'_id',",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "579:                         'field_default' => null,",
          "580:                     ],",
          "581:                     2 => [",
          "584:                         'field_type' => 'bigint',",
          "585:                         'field_length' => null,",
          "586:                         'field_null' => false,",
          "",
          "[Removed Lines]",
          "582:                         'id' => $value['destination_table'] . '_id',",
          "583:                         'field_name' => $value['destination_table'] . '_id',",
          "",
          "[Added Lines]",
          "582:                         'id' => $value['destination_table'].'_id',",
          "583:                         'field_name' => $value['destination_table'].'_id',",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "615:                 ];",
          "617:                 $relations = [",
          "620:                         'target_table' => $request['name'],",
          "621:                         'target_field' => 'id',",
          "622:                         'on_delete' => 'cascade',",
          "623:                         'on_update' => 'restrict',",
          "624:                     ],",
          "627:                         'target_table' => $value['destination_table'],",
          "628:                         'target_field' => 'id',",
          "629:                         'on_delete' => 'cascade',",
          "630:                         'on_update' => 'restrict',",
          "631:                     ],",
          "632:                 ];",
          "634:                     $this->file_name = $this->file_generator->generateBDOMigrationFile($table, 'create', $rows, $relations);",
          "635:                     $exitCode = Artisan::call('migrate', [",
          "636:                         '--path' => 'database/migrations/badaso/',",
          "",
          "[Removed Lines]",
          "618:                     $request['name'] . '_id' => [",
          "619:                         'source_field' => $request['name'] . '_id',",
          "625:                     $value['destination_table'] . '_id' => [",
          "626:                         'source_field' => $value['destination_table'] . '_id',",
          "633:                 if (!Schema::hasTable($table)) {",
          "",
          "[Added Lines]",
          "618:                     $request['name'].'_id' => [",
          "619:                         'source_field' => $request['name'].'_id',",
          "625:                     $value['destination_table'].'_id' => [",
          "626:                         'source_field' => $value['destination_table'].'_id',",
          "633:                 if (! Schema::hasTable($table)) {",
          "",
          "---------------"
        ],
        "src/Widgets/PermissionWidget.php||src/Widgets/PermissionWidget.php": [
          "File: src/Widgets/PermissionWidget.php -> src/Widgets/PermissionWidget.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:             'icon' => 'lock',",
          "25:             'value' => Permission::count(),",
          "26:             'prefix_value' => '',",
          "28:         ];",
          "29:     }",
          "30: }",
          "",
          "[Removed Lines]",
          "27:             'delimiter' => '.'",
          "",
          "[Added Lines]",
          "27:             'delimiter' => '.',",
          "",
          "---------------"
        ],
        "src/Widgets/RoleWidget.php||src/Widgets/RoleWidget.php": [
          "File: src/Widgets/RoleWidget.php -> src/Widgets/RoleWidget.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:             'icon' => 'accessibility',",
          "25:             'value' => Role::count(),",
          "26:             'prefix_value' => '',",
          "28:         ];",
          "29:     }",
          "30: }",
          "",
          "[Removed Lines]",
          "27:             'delimiter' => '.'",
          "",
          "[Added Lines]",
          "27:             'delimiter' => '.',",
          "",
          "---------------"
        ],
        "src/Widgets/UserWidget.php||src/Widgets/UserWidget.php": [
          "File: src/Widgets/UserWidget.php -> src/Widgets/UserWidget.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:             'icon' => 'person',",
          "25:             'value' => User::count(),",
          "26:             'prefix_value' => '',",
          "28:         ];",
          "29:     }",
          "30: }",
          "",
          "[Removed Lines]",
          "27:             'delimiter' => '.'",
          "",
          "[Added Lines]",
          "27:             'delimiter' => '.',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "142543d66d072e7de2a79d7bbbd16ffdfe45f619",
      "candidate_info": {
        "commit_hash": "142543d66d072e7de2a79d7bbbd16ffdfe45f619",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/142543d66d072e7de2a79d7bbbd16ffdfe45f619",
        "files": [
          "src/Controllers/BadasoBaseController.php",
          "src/Controllers/Controller.php",
          "src/resources/js/pages/crud-generated/add.vue",
          "src/resources/js/pages/crud-generated/edit.vue"
        ],
        "message": "fix value edit upload",
        "before_after_code_files": [
          "src/Controllers/BadasoBaseController.php||src/Controllers/BadasoBaseController.php",
          "src/Controllers/Controller.php||src/Controllers/Controller.php",
          "src/resources/js/pages/crud-generated/add.vue||src/resources/js/pages/crud-generated/add.vue",
          "src/resources/js/pages/crud-generated/edit.vue||src/resources/js/pages/crud-generated/edit.vue"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Controllers/BadasoBaseController.php||src/Controllers/BadasoBaseController.php": [
          "File: src/Controllers/BadasoBaseController.php -> src/Controllers/BadasoBaseController.php"
        ],
        "src/Controllers/Controller.php||src/Controllers/Controller.php": [
          "File: src/Controllers/Controller.php -> src/Controllers/Controller.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "554:                     ])) {",
          "555:                         $files = explode(',', $model->{$data_row->field});",
          "556:                         foreach ($files as $file) {",
          "558:                             if (is_array($value)) {",
          "559:                                 if (! in_array($file, $value)) {",
          "560:                                     $this->handleDeleteFile($file);",
          "",
          "[Removed Lines]",
          "557:                             dd($file);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "567:                         }",
          "568:                     }",
          "569:                     $new_data[$key] = $this->getContentByType($data_type, $data_row, $value) !== null ? $this->getContentByType($data_type, $data_row, $value) : '';",
          "571:                 }",
          "572:             }",
          "573:             DB::table($data_type->name)->where('id', $id)->update($new_data);",
          "",
          "[Removed Lines]",
          "570:                     dd($model);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resources/js/pages/crud-generated/add.vue||src/resources/js/pages/crud-generated/add.vue": [
          "File: src/resources/js/pages/crud-generated/add.vue -> src/resources/js/pages/crud-generated/add.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "227:                     \"",
          "228:                   ></badaso-color-picker>",
          "229:                   <badaso-hidden",
          "232:                           dataRow.type == 'relation'\"",
          "234:                     :label=\"dataRow.displayName\"",
          "",
          "[Removed Lines]",
          "230:                     v-if=\"dataRow.type == 'hidden' ||",
          "231:                           dataRow.type == 'data_identifier' ||",
          "",
          "[Added Lines]",
          "230:                     v-if=\"dataRow.type == 'hidden' ||",
          "231:                           dataRow.type == 'data_identifier' ||",
          "",
          "---------------"
        ],
        "src/resources/js/pages/crud-generated/edit.vue||src/resources/js/pages/crud-generated/edit.vue": [
          "File: src/resources/js/pages/crud-generated/edit.vue -> src/resources/js/pages/crud-generated/edit.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:                 <template v-if=\"dataRow.edit && dataRow.type !== 'hidden'\">",
          "27:                   <!-- <input type=\"text\" v-model=\"dataRow.value\"> -->",
          "28:                   <!-- <vs-input type=\"text\" v-model=\"dataRow.value\"></vs-input> -->",
          "30:                   <badaso-text",
          "31:                     v-if=\"dataRow.type == 'text'\"",
          "32:                     :label=\"dataRow.displayName\"",
          "",
          "[Removed Lines]",
          "29:                   {{ dataRow.value }}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "424:       const dataRows = {};",
          "425:       for (const row of this.dataType.dataRows) {",
          "436:       }",
          "",
          "[Removed Lines]",
          "426:         if ((row && row.value) || (row && row.type == \"textarea\")) {",
          "427:           dataRows[row.field] = row.value;",
          "428:         }",
          "429:         if ((row && row.value) || (row && row.type == \"switch\")) {",
          "430:           dataRows[row.field] = row.value;",
          "431:         }",
          "432:          if ((row && row.value) || (row && row.type == \"upload_file\")) {",
          "433:           dataRows[row.field] = row.value;",
          "434:           console.log(dataRows[row.field],'datarow')",
          "435:         }",
          "",
          "[Added Lines]",
          "425:          dataRows[row.field] = row.value;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "484:         this.$closeLoader();",
          "485:         this.dataType = dataType;",
          "486:         this.record = response.data;",
          "489:         const dataRows = this.dataType.dataRows.map((data) => {",
          "490:           try {",
          "",
          "[Removed Lines]",
          "487:         console.log(this.record,'record')",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "548:               Object.entries(record).filter(function (item, key) {",
          "549:                 return (data.value[key] = item[1][destinationTableId]);",
          "550:               });",
          "552:               data.value =",
          "553:                 this.record[this.$caseConvert.stringSnakeToCamel(data.field)];",
          "555:             }",
          "556:           } catch (error) {}",
          "557:           return data;",
          "",
          "[Removed Lines]",
          "551:             } else {",
          "554:                 console.log(data.value,'testu')",
          "",
          "[Added Lines]",
          "540:             }",
          "541:              else {",
          "",
          "---------------"
        ]
      }
    }
  ]
}