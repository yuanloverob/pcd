{
  "cve_id": "CVE-2019-1003001",
  "cve_desc": "A sandbox bypass vulnerability exists in Pipeline: Groovy Plugin 2.61 and earlier in src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java, src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java that allows attackers with Overall/Read permission to provide a pipeline script to an HTTP endpoint that can result in arbitrary code execution on the Jenkins master JVM.",
  "repo": "jenkinsci/workflow-cps-plugin",
  "patch_hash": "66c3e7aafe7888d4e1fe9995a688bb3fb742d742",
  "patch_info": {
    "commit_hash": "66c3e7aafe7888d4e1fe9995a688bb3fb742d742",
    "repo": "jenkinsci/workflow-cps-plugin",
    "commit_url": "https://github.com/jenkinsci/workflow-cps-plugin/commit/66c3e7aafe7888d4e1fe9995a688bb3fb742d742",
    "files": [
      "pom.xml",
      "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java",
      "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java",
      "src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java",
      "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java",
      "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java"
    ],
    "message": "[SECURITY-1266] Don't execute AST transforms during syntax check or sandbox",
    "before_after_code_files": [
      "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java",
      "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java",
      "src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java||src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java",
      "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java",
      "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java"
    ]
  },
  "patch_diff": {
    "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java": [
      "File: src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java -> src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: import hudson.Extension;",
      "28: import hudson.model.Action;",
      "29: import hudson.model.Item;",
      "30: import hudson.model.Queue;",
      "31: import hudson.model.Run;",
      "32: import hudson.model.TaskListener;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "30: import hudson.model.Job;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "39: import org.jenkinsci.plugins.workflow.flow.FlowDurabilityHint;",
      "40: import org.jenkinsci.plugins.workflow.flow.FlowExecutionOwner;",
      "41: import org.jenkinsci.plugins.workflow.flow.GlobalDefaultFlowDurabilityLevel;",
      "42: import org.kohsuke.stapler.DataBoundConstructor;",
      "44: import java.io.IOException;",
      "45: import java.util.Arrays;",
      "46: import java.util.List;",
      "47: import net.sf.json.JSON;",
      "48: import net.sf.json.JSONArray;",
      "49: import org.codehaus.groovy.control.CompilationFailedException;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "43: import org.kohsuke.stapler.AncestorInPath;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "57: import org.kohsuke.stapler.QueryParameter;",
      "58: import org.kohsuke.stapler.Stapler;",
      "59: import org.kohsuke.stapler.StaplerRequest;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "63: import org.kohsuke.stapler.interceptor.RequirePOST;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "125:             return \"Pipeline script\";",
      "126:         }",
      "128:         public FormValidation doCheckScript(@QueryParameter String value, @QueryParameter boolean sandbox) {",
      "129:             return sandbox ? FormValidation.ok() : ScriptApproval.get().checking(value, GroovyLanguage.get());",
      "130:         }",
      "133:             try {",
      "134:                 CpsGroovyShell trusted = new CpsGroovyShellFactory(null).forTrusted().build();",
      "136:             } catch (CompilationFailedException x) {",
      "137:                 return JSONArray.fromObject(CpsFlowDefinitionValidator.toCheckStatus(x).toArray());",
      "138:             }",
      "",
      "[Removed Lines]",
      "132:         public JSON doCheckScriptCompile(@QueryParameter String value) {",
      "135:                 new CpsGroovyShellFactory(null).withParent(trusted).build().getClassLoader().parseClass(value);",
      "",
      "[Added Lines]",
      "132:         @RequirePOST",
      "137:         @RequirePOST",
      "138:         public JSON doCheckScriptCompile(@AncestorInPath Item job, @QueryParameter String value) {",
      "139:             if (!job.hasPermission(Job.CONFIGURE)) {",
      "140:                 return CpsFlowDefinitionValidator.CheckStatus.SUCCESS.asJSON();",
      "141:             }",
      "144:                 new CpsGroovyShellFactory(null).withParent(trusted).withSandbox(true).build().getClassLoader().parseClass(value);",
      "",
      "---------------"
    ],
    "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java": [
      "File: src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java -> src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "84:     }",
      "86:     private CompilerConfiguration makeConfig() {",
      "89:         cc.addCompilationCustomizers(makeImportCustomizer());",
      "90:         cc.addCompilationCustomizers(makeCpsTransformer());",
      "91:         cc.setScriptBaseClass(CpsScript.class.getName());",
      "93:         for (GroovyShellDecorator d : decorators) {",
      "",
      "[Removed Lines]",
      "87:         CompilerConfiguration cc = new CompilerConfiguration();",
      "",
      "[Added Lines]",
      "87:         CompilerConfiguration cc = sandbox ? GroovySandbox.createBaseCompilerConfiguration() : new CompilerConfiguration();",
      "",
      "---------------"
    ],
    "src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java||src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java": [
      "File: src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java -> src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "73: import org.jenkinsci.plugins.workflow.flow.FlowExecutionOwner;",
      "74: import org.kohsuke.accmod.Restricted;",
      "75: import org.kohsuke.accmod.restrictions.DoNotUse;",
      "76: import org.kohsuke.stapler.QueryParameter;",
      "77: import org.kohsuke.stapler.StaplerRequest;",
      "78: import org.kohsuke.stapler.StaplerResponse;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "76: import org.kohsuke.stapler.AncestorInPath;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "346:     }",
      "349:     public FormValidation doCheckScript() {",
      "350:         return FormValidation.ok();",
      "351:     }",
      "355:     }",
      "357:     public static final Permission REPLAY = new Permission(Run.PERMISSIONS, \"Replay\", Messages._Replay_permission_description(), Item.CONFIGURE, PermissionScope.RUN);",
      "",
      "[Removed Lines]",
      "353:     public JSON doCheckScriptCompile(@QueryParameter String value) {",
      "354:         return Jenkins.getActiveInstance().getDescriptorByType(CpsFlowDefinition.DescriptorImpl.class).doCheckScriptCompile(value);",
      "",
      "[Added Lines]",
      "350:     @RequirePOST",
      "355:     @RequirePOST",
      "356:     public JSON doCheckScriptCompile(@AncestorInPath Item job, @QueryParameter String value) {",
      "357:         return Jenkins.get().getDescriptorByType(CpsFlowDefinition.DescriptorImpl.class).doCheckScriptCompile(job, value);",
      "",
      "---------------"
    ],
    "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java": [
      "File: src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java -> src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "536:         jenkins.assertLogContains(\"Object.finalize()\", b);",
      "537:         jenkins.assertLogNotContains(\"Should never get here\", b);",
      "538:     }",
      "539: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "540:     @Issue(\"SECURITY-266\")",
      "541:     @Test",
      "542:     public void sandboxRejectsASTTransforms() throws Exception {",
      "543:         WorkflowJob p = jenkins.jenkins.createProject(WorkflowJob.class, \"p\");",
      "544:         p.setDefinition(new CpsFlowDefinition(\"import groovy.transform.*\\n\" +",
      "545:                 \"import jenkins.model.Jenkins\\n\" +",
      "546:                 \"import org.jenkinsci.plugins.workflow.job.WorkflowJob\\n\" +",
      "547:                 \"@ASTTest(value={ assert Jenkins.get().createProject(WorkflowJob.class, \\\"should-not-exist\\\") })\\n\" +",
      "548:                 \"@Field int x\\n\" +",
      "549:                 \"echo 'hello'\\n\", true));",
      "550:         WorkflowRun b = jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0));",
      "551:         jenkins.assertLogContains(\"Annotation ASTTest cannot be used in the sandbox\", b);",
      "553:         assertNull(jenkins.jenkins.getItem(\"should-not-exist\"));",
      "554:     }",
      "",
      "---------------"
    ],
    "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java": [
      "File: src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java -> src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: package org.jenkinsci.plugins.workflow.cps;",
      "27: import static org.hamcrest.Matchers.containsString;",
      "28: import org.junit.Test;",
      "29: import static org.junit.Assert.*;",
      "30: import org.junit.Rule;",
      "31: import org.jvnet.hudson.test.JenkinsRule;",
      "33: public class CpsFlowDefinitionValidatorTest {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "29: import hudson.model.Item;",
      "30: import hudson.model.User;",
      "31: import hudson.security.ACL;",
      "32: import hudson.security.ACLContext;",
      "33: import jenkins.model.Jenkins;",
      "34: import org.jenkinsci.plugins.workflow.job.WorkflowJob;",
      "38: import org.jvnet.hudson.test.Issue;",
      "40: import org.jvnet.hudson.test.MockAuthorizationStrategy;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "37:     @Test public void doCheckScriptCompile() throws Exception {",
      "38:         CpsFlowDefinition.DescriptorImpl d = r.jenkins.getDescriptorByType(CpsFlowDefinition.DescriptorImpl.class);",
      "41:     }",
      "43: }",
      "",
      "[Removed Lines]",
      "39:         assertThat(d.doCheckScriptCompile(\"echo 'hello'\").toString(), containsString(\"\\\"success\\\"\"));",
      "40:         assertThat(d.doCheckScriptCompile(\"echo 'hello\").toString(), containsString(\"\\\"fail\\\"\"));",
      "",
      "[Added Lines]",
      "48:         WorkflowJob job = r.jenkins.createProject(WorkflowJob.class, \"w\");",
      "49:         assertThat(d.doCheckScriptCompile(job, \"echo 'hello'\").toString(), containsString(\"\\\"success\\\"\"));",
      "50:         assertThat(d.doCheckScriptCompile(job, \"echo 'hello\").toString(), containsString(\"\\\"fail\\\"\"));",
      "51:     }",
      "53:     @Issue(\"SECURITY-1266\")",
      "54:     @Test",
      "55:     public void blockASTTest() throws Exception {",
      "56:         CpsFlowDefinition.DescriptorImpl d = r.jenkins.getDescriptorByType(CpsFlowDefinition.DescriptorImpl.class);",
      "57:         WorkflowJob job = r.jenkins.createProject(WorkflowJob.class, \"w\");",
      "58:         assertThat(d.doCheckScriptCompile(job, \"import groovy.transform.*\\n\" +",
      "59:                 \"import jenkins.model.Jenkins\\n\" +",
      "60:                 \"import org.jenkinsci.plugins.workflow.job.WorkflowJob\\n\" +",
      "61:                 \"@ASTTest(value={ assert Jenkins.get().createProject(WorkflowJob.class, \\\"should-not-exist\\\") })\\n\" +",
      "62:                 \"@Field int x\\n\" +",
      "63:                 \"echo 'hello'\\n\").toString(), containsString(\"Annotation ASTTest cannot be used in the sandbox\"));",
      "65:         assertNull(r.jenkins.getItem(\"should-not-exist\"));",
      "66:     }",
      "68:     @Issue(\"SECURITY-1266\")",
      "69:     @Test",
      "70:     public void blockGrab() throws Exception {",
      "71:         CpsFlowDefinition.DescriptorImpl d = r.jenkins.getDescriptorByType(CpsFlowDefinition.DescriptorImpl.class);",
      "72:         WorkflowJob job = r.jenkins.createProject(WorkflowJob.class, \"w\");",
      "73:         assertThat(d.doCheckScriptCompile(job, \"@Grab(group='foo', module='bar', version='1.0')\\n\" +",
      "74:                 \"def foo\\n\").toString(), containsString(\"Annotation Grab cannot be used in the sandbox\"));",
      "77:     @Issue(\"SECURITY-1266\")",
      "78:     @Test",
      "79:     public void configureRequired() throws Exception {",
      "80:         CpsFlowDefinition.DescriptorImpl d = r.jenkins.getDescriptorByType(CpsFlowDefinition.DescriptorImpl.class);",
      "82:         r.jenkins.setSecurityRealm(r.createDummySecurityRealm());",
      "84:         r.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().",
      "85:                 grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").",
      "86:                 grant(Jenkins.READ, Item.CONFIGURE).everywhere().to(\"dev1\").",
      "87:                 grant(Jenkins.READ).everywhere().to(\"dev2\"));",
      "88:         WorkflowJob job = r.jenkins.createProject(WorkflowJob.class, \"w\");",
      "90:         try (ACLContext context = ACL.as(User.getById(\"admin\", true))) {",
      "91:             assertThat(d.doCheckScriptCompile(job, \"echo 'hello\").toString(), containsString(\"fail\"));",
      "92:         }",
      "93:         try (ACLContext context = ACL.as(User.getById(\"dev1\", true))) {",
      "94:             assertThat(d.doCheckScriptCompile(job, \"echo 'hello\").toString(), containsString(\"fail\"));",
      "95:         }",
      "96:         try (ACLContext context = ACL.as(User.getById(\"dev2\", true))) {",
      "97:             assertThat(d.doCheckScriptCompile(job, \"echo 'hello\").toString(), containsString(\"success\"));",
      "98:         }",
      "99:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d09583eda7898eafdd15297697abdd939c6ba5b6",
      "candidate_info": {
        "commit_hash": "d09583eda7898eafdd15297697abdd939c6ba5b6",
        "repo": "jenkinsci/workflow-cps-plugin",
        "commit_url": "https://github.com/jenkinsci/workflow-cps-plugin/commit/d09583eda7898eafdd15297697abdd939c6ba5b6",
        "files": [
          "pom.xml",
          "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java",
          "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java",
          "src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java",
          "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java",
          "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java"
        ],
        "message": "[SECURITY-1266] Don't execute AST transforms during syntax check or sandbox",
        "before_after_code_files": [
          "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java",
          "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java",
          "src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java||src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java",
          "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java",
          "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java",
            "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java",
            "src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java||src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java",
            "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java",
            "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java"
          ],
          "candidate": [
            "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java",
            "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java",
            "src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java||src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java",
            "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java",
            "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java"
          ]
        }
      },
      "candidate_diff": {
        "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java": [
          "File: src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java -> src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: import hudson.Extension;",
          "28: import hudson.model.Action;",
          "29: import hudson.model.Item;",
          "30: import hudson.model.Queue;",
          "31: import hudson.model.Run;",
          "32: import hudson.model.TaskListener;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: import hudson.model.Job;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39: import org.jenkinsci.plugins.workflow.flow.FlowDurabilityHint;",
          "40: import org.jenkinsci.plugins.workflow.flow.FlowExecutionOwner;",
          "41: import org.jenkinsci.plugins.workflow.flow.GlobalDefaultFlowDurabilityLevel;",
          "42: import org.kohsuke.stapler.DataBoundConstructor;",
          "44: import java.io.IOException;",
          "45: import java.util.Arrays;",
          "46: import java.util.List;",
          "47: import net.sf.json.JSON;",
          "48: import net.sf.json.JSONArray;",
          "49: import org.codehaus.groovy.control.CompilationFailedException;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43: import org.kohsuke.stapler.AncestorInPath;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "57: import org.kohsuke.stapler.QueryParameter;",
          "58: import org.kohsuke.stapler.Stapler;",
          "59: import org.kohsuke.stapler.StaplerRequest;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63: import org.kohsuke.stapler.interceptor.RequirePOST;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "125:             return \"Pipeline script\";",
          "126:         }",
          "128:         public FormValidation doCheckScript(@QueryParameter String value, @QueryParameter boolean sandbox) {",
          "129:             return sandbox ? FormValidation.ok() : ScriptApproval.get().checking(value, GroovyLanguage.get());",
          "130:         }",
          "133:             try {",
          "134:                 CpsGroovyShell trusted = new CpsGroovyShellFactory(null).forTrusted().build();",
          "136:             } catch (CompilationFailedException x) {",
          "137:                 return JSONArray.fromObject(CpsFlowDefinitionValidator.toCheckStatus(x).toArray());",
          "138:             }",
          "",
          "[Removed Lines]",
          "132:         public JSON doCheckScriptCompile(@QueryParameter String value) {",
          "135:                 new CpsGroovyShellFactory(null).withParent(trusted).build().getClassLoader().parseClass(value);",
          "",
          "[Added Lines]",
          "132:         @RequirePOST",
          "137:         @RequirePOST",
          "138:         public JSON doCheckScriptCompile(@AncestorInPath Item job, @QueryParameter String value) {",
          "139:             if (!job.hasPermission(Job.CONFIGURE)) {",
          "140:                 return CpsFlowDefinitionValidator.CheckStatus.SUCCESS.asJSON();",
          "141:             }",
          "144:                 new CpsGroovyShellFactory(null).withParent(trusted).withSandbox(true).build().getClassLoader().parseClass(value);",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java": [
          "File: src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java -> src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "84:     }",
          "86:     private CompilerConfiguration makeConfig() {",
          "89:         cc.addCompilationCustomizers(makeImportCustomizer());",
          "90:         cc.addCompilationCustomizers(makeCpsTransformer());",
          "91:         cc.setScriptBaseClass(CpsScript.class.getName());",
          "93:         for (GroovyShellDecorator d : decorators) {",
          "",
          "[Removed Lines]",
          "87:         CompilerConfiguration cc = new CompilerConfiguration();",
          "",
          "[Added Lines]",
          "87:         CompilerConfiguration cc = sandbox ? GroovySandbox.createBaseCompilerConfiguration() : new CompilerConfiguration();",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java||src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java": [
          "File: src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java -> src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "73: import org.jenkinsci.plugins.workflow.flow.FlowExecutionOwner;",
          "74: import org.kohsuke.accmod.Restricted;",
          "75: import org.kohsuke.accmod.restrictions.DoNotUse;",
          "76: import org.kohsuke.stapler.QueryParameter;",
          "77: import org.kohsuke.stapler.StaplerRequest;",
          "78: import org.kohsuke.stapler.StaplerResponse;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76: import org.kohsuke.stapler.AncestorInPath;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "346:     }",
          "349:     public FormValidation doCheckScript() {",
          "350:         return FormValidation.ok();",
          "351:     }",
          "355:     }",
          "357:     public static final Permission REPLAY = new Permission(Run.PERMISSIONS, \"Replay\", Messages._Replay_permission_description(), Item.CONFIGURE, PermissionScope.RUN);",
          "",
          "[Removed Lines]",
          "353:     public JSON doCheckScriptCompile(@QueryParameter String value) {",
          "354:         return Jenkins.get().getDescriptorByType(CpsFlowDefinition.DescriptorImpl.class).doCheckScriptCompile(value);",
          "",
          "[Added Lines]",
          "350:     @RequirePOST",
          "355:     @RequirePOST",
          "356:     public JSON doCheckScriptCompile(@AncestorInPath Item job, @QueryParameter String value) {",
          "357:         return Jenkins.get().getDescriptorByType(CpsFlowDefinition.DescriptorImpl.class).doCheckScriptCompile(job, value);",
          "",
          "---------------"
        ],
        "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java": [
          "File: src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java -> src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "534:         jenkins.assertLogContains(\"Object.finalize()\", b);",
          "535:         jenkins.assertLogNotContains(\"Should never get here\", b);",
          "536:     }",
          "537: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "538:     @Issue(\"SECURITY-266\")",
          "539:     @Test",
          "540:     public void sandboxRejectsASTTransforms() throws Exception {",
          "541:         WorkflowJob p = jenkins.jenkins.createProject(WorkflowJob.class, \"p\");",
          "542:         p.setDefinition(new CpsFlowDefinition(\"import groovy.transform.*\\n\" +",
          "543:                 \"import jenkins.model.Jenkins\\n\" +",
          "544:                 \"import org.jenkinsci.plugins.workflow.job.WorkflowJob\\n\" +",
          "545:                 \"@ASTTest(value={ assert Jenkins.get().createProject(WorkflowJob.class, \\\"should-not-exist\\\") })\\n\" +",
          "546:                 \"@Field int x\\n\" +",
          "547:                 \"echo 'hello'\\n\", true));",
          "548:         WorkflowRun b = jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0));",
          "549:         jenkins.assertLogContains(\"Annotation ASTTest cannot be used in the sandbox\", b);",
          "551:         assertNull(jenkins.jenkins.getItem(\"should-not-exist\"));",
          "552:     }",
          "",
          "---------------"
        ],
        "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java": [
          "File: src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java -> src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: package org.jenkinsci.plugins.workflow.cps;",
          "27: import static org.hamcrest.Matchers.containsString;",
          "28: import org.junit.Test;",
          "29: import static org.junit.Assert.*;",
          "30: import org.junit.Rule;",
          "31: import org.jvnet.hudson.test.JenkinsRule;",
          "33: public class CpsFlowDefinitionValidatorTest {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: import hudson.model.Item;",
          "30: import hudson.model.User;",
          "31: import hudson.security.ACL;",
          "32: import hudson.security.ACLContext;",
          "33: import jenkins.model.Jenkins;",
          "34: import org.jenkinsci.plugins.workflow.job.WorkflowJob;",
          "38: import org.jvnet.hudson.test.Issue;",
          "40: import org.jvnet.hudson.test.MockAuthorizationStrategy;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37:     @Test public void doCheckScriptCompile() throws Exception {",
          "38:         CpsFlowDefinition.DescriptorImpl d = r.jenkins.getDescriptorByType(CpsFlowDefinition.DescriptorImpl.class);",
          "41:     }",
          "43: }",
          "",
          "[Removed Lines]",
          "39:         assertThat(d.doCheckScriptCompile(\"echo 'hello'\").toString(), containsString(\"\\\"success\\\"\"));",
          "40:         assertThat(d.doCheckScriptCompile(\"echo 'hello\").toString(), containsString(\"\\\"fail\\\"\"));",
          "",
          "[Added Lines]",
          "48:         WorkflowJob job = r.jenkins.createProject(WorkflowJob.class, \"w\");",
          "49:         assertThat(d.doCheckScriptCompile(job, \"echo 'hello'\").toString(), containsString(\"\\\"success\\\"\"));",
          "50:         assertThat(d.doCheckScriptCompile(job, \"echo 'hello\").toString(), containsString(\"\\\"fail\\\"\"));",
          "51:     }",
          "53:     @Issue(\"SECURITY-1266\")",
          "54:     @Test",
          "55:     public void blockASTTest() throws Exception {",
          "56:         CpsFlowDefinition.DescriptorImpl d = r.jenkins.getDescriptorByType(CpsFlowDefinition.DescriptorImpl.class);",
          "57:         WorkflowJob job = r.jenkins.createProject(WorkflowJob.class, \"w\");",
          "58:         assertThat(d.doCheckScriptCompile(job, \"import groovy.transform.*\\n\" +",
          "59:                 \"import jenkins.model.Jenkins\\n\" +",
          "60:                 \"import org.jenkinsci.plugins.workflow.job.WorkflowJob\\n\" +",
          "61:                 \"@ASTTest(value={ assert Jenkins.get().createProject(WorkflowJob.class, \\\"should-not-exist\\\") })\\n\" +",
          "62:                 \"@Field int x\\n\" +",
          "63:                 \"echo 'hello'\\n\").toString(), containsString(\"Annotation ASTTest cannot be used in the sandbox\"));",
          "65:         assertNull(r.jenkins.getItem(\"should-not-exist\"));",
          "66:     }",
          "68:     @Issue(\"SECURITY-1266\")",
          "69:     @Test",
          "70:     public void blockGrab() throws Exception {",
          "71:         CpsFlowDefinition.DescriptorImpl d = r.jenkins.getDescriptorByType(CpsFlowDefinition.DescriptorImpl.class);",
          "72:         WorkflowJob job = r.jenkins.createProject(WorkflowJob.class, \"w\");",
          "73:         assertThat(d.doCheckScriptCompile(job, \"@Grab(group='foo', module='bar', version='1.0')\\n\" +",
          "74:                 \"def foo\\n\").toString(), containsString(\"Annotation Grab cannot be used in the sandbox\"));",
          "77:     @Issue(\"SECURITY-1266\")",
          "78:     @Test",
          "79:     public void configureRequired() throws Exception {",
          "80:         CpsFlowDefinition.DescriptorImpl d = r.jenkins.getDescriptorByType(CpsFlowDefinition.DescriptorImpl.class);",
          "82:         r.jenkins.setSecurityRealm(r.createDummySecurityRealm());",
          "84:         r.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().",
          "85:                 grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").",
          "86:                 grant(Jenkins.READ, Item.CONFIGURE).everywhere().to(\"dev1\").",
          "87:                 grant(Jenkins.READ).everywhere().to(\"dev2\"));",
          "88:         WorkflowJob job = r.jenkins.createProject(WorkflowJob.class, \"w\");",
          "90:         try (ACLContext context = ACL.as(User.getById(\"admin\", true))) {",
          "91:             assertThat(d.doCheckScriptCompile(job, \"echo 'hello\").toString(), containsString(\"fail\"));",
          "92:         }",
          "93:         try (ACLContext context = ACL.as(User.getById(\"dev1\", true))) {",
          "94:             assertThat(d.doCheckScriptCompile(job, \"echo 'hello\").toString(), containsString(\"fail\"));",
          "95:         }",
          "96:         try (ACLContext context = ACL.as(User.getById(\"dev2\", true))) {",
          "97:             assertThat(d.doCheckScriptCompile(job, \"echo 'hello\").toString(), containsString(\"success\"));",
          "98:         }",
          "99:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "42b99d2184a846e070bde391ced3d096a79702d6",
      "candidate_info": {
        "commit_hash": "42b99d2184a846e070bde391ced3d096a79702d6",
        "repo": "jenkinsci/workflow-cps-plugin",
        "commit_url": "https://github.com/jenkinsci/workflow-cps-plugin/commit/42b99d2184a846e070bde391ced3d096a79702d6",
        "files": [
          "pom.xml",
          "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java",
          "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java",
          "src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java",
          "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java",
          "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java"
        ],
        "message": "[SECURITY-1266] Don't execute AST transforms during syntax check or sandbox",
        "before_after_code_files": [
          "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java",
          "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java",
          "src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java||src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java",
          "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java",
          "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java",
            "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java",
            "src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java||src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java",
            "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java",
            "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java"
          ],
          "candidate": [
            "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java",
            "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java",
            "src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java||src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java",
            "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java",
            "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java"
          ]
        }
      },
      "candidate_diff": {
        "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java": [
          "File: src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java -> src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: import hudson.Extension;",
          "28: import hudson.model.Action;",
          "29: import hudson.model.Item;",
          "30: import hudson.model.Queue;",
          "31: import hudson.model.Run;",
          "32: import hudson.model.TaskListener;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: import hudson.model.Job;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39: import org.jenkinsci.plugins.workflow.flow.FlowDurabilityHint;",
          "40: import org.jenkinsci.plugins.workflow.flow.FlowExecutionOwner;",
          "41: import org.jenkinsci.plugins.workflow.flow.GlobalDefaultFlowDurabilityLevel;",
          "42: import org.kohsuke.stapler.DataBoundConstructor;",
          "44: import java.io.IOException;",
          "45: import java.util.Arrays;",
          "46: import java.util.List;",
          "47: import net.sf.json.JSON;",
          "48: import net.sf.json.JSONArray;",
          "49: import org.codehaus.groovy.control.CompilationFailedException;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43: import org.kohsuke.stapler.AncestorInPath;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "57: import org.kohsuke.stapler.QueryParameter;",
          "58: import org.kohsuke.stapler.Stapler;",
          "59: import org.kohsuke.stapler.StaplerRequest;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63: import org.kohsuke.stapler.interceptor.RequirePOST;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "125:             return \"Pipeline script\";",
          "126:         }",
          "128:         public FormValidation doCheckScript(@QueryParameter String value, @QueryParameter boolean sandbox) {",
          "129:             return sandbox ? FormValidation.ok() : ScriptApproval.get().checking(value, GroovyLanguage.get());",
          "130:         }",
          "133:             try {",
          "134:                 CpsGroovyShell trusted = new CpsGroovyShellFactory(null).forTrusted().build();",
          "136:             } catch (CompilationFailedException x) {",
          "137:                 return JSONArray.fromObject(CpsFlowDefinitionValidator.toCheckStatus(x).toArray());",
          "138:             }",
          "",
          "[Removed Lines]",
          "132:         public JSON doCheckScriptCompile(@QueryParameter String value) {",
          "135:                 new CpsGroovyShellFactory(null).withParent(trusted).build().getClassLoader().parseClass(value);",
          "",
          "[Added Lines]",
          "132:         @RequirePOST",
          "137:         @RequirePOST",
          "138:         public JSON doCheckScriptCompile(@AncestorInPath Item job, @QueryParameter String value) {",
          "139:             if (!job.hasPermission(Job.CONFIGURE)) {",
          "140:                 return CpsFlowDefinitionValidator.CheckStatus.SUCCESS.asJSON();",
          "141:             }",
          "144:                 new CpsGroovyShellFactory(null).withParent(trusted).withSandbox(true).build().getClassLoader().parseClass(value);",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java": [
          "File: src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java -> src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "84:     }",
          "86:     private CompilerConfiguration makeConfig() {",
          "89:         cc.addCompilationCustomizers(makeImportCustomizer());",
          "90:         cc.addCompilationCustomizers(makeCpsTransformer());",
          "91:         cc.setScriptBaseClass(CpsScript.class.getName());",
          "93:         for (GroovyShellDecorator d : decorators) {",
          "",
          "[Removed Lines]",
          "87:         CompilerConfiguration cc = new CompilerConfiguration();",
          "",
          "[Added Lines]",
          "87:         CompilerConfiguration cc = sandbox ? GroovySandbox.createBaseCompilerConfiguration() : new CompilerConfiguration();",
          "",
          "---------------"
        ],
        "src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java||src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java": [
          "File: src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java -> src/main/java/org/jenkinsci/plugins/workflow/cps/replay/ReplayAction.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "73: import org.jenkinsci.plugins.workflow.flow.FlowExecutionOwner;",
          "74: import org.kohsuke.accmod.Restricted;",
          "75: import org.kohsuke.accmod.restrictions.DoNotUse;",
          "76: import org.kohsuke.stapler.QueryParameter;",
          "77: import org.kohsuke.stapler.StaplerRequest;",
          "78: import org.kohsuke.stapler.StaplerResponse;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76: import org.kohsuke.stapler.AncestorInPath;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "346:     }",
          "349:     public FormValidation doCheckScript() {",
          "350:         return FormValidation.ok();",
          "351:     }",
          "355:     }",
          "357:     public static final Permission REPLAY = new Permission(Run.PERMISSIONS, \"Replay\", Messages._Replay_permission_description(), Item.CONFIGURE, PermissionScope.RUN);",
          "",
          "[Removed Lines]",
          "353:     public JSON doCheckScriptCompile(@QueryParameter String value) {",
          "354:         return Jenkins.getActiveInstance().getDescriptorByType(CpsFlowDefinition.DescriptorImpl.class).doCheckScriptCompile(value);",
          "",
          "[Added Lines]",
          "350:     @RequirePOST",
          "355:     @RequirePOST",
          "356:     public JSON doCheckScriptCompile(@AncestorInPath Item job, @QueryParameter String value) {",
          "357:         return Jenkins.getActiveInstance().getDescriptorByType(CpsFlowDefinition.DescriptorImpl.class).doCheckScriptCompile(job, value);",
          "",
          "---------------"
        ],
        "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java": [
          "File: src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java -> src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "536:         jenkins.assertLogContains(\"Object.finalize()\", b);",
          "537:         jenkins.assertLogNotContains(\"Should never get here\", b);",
          "538:     }",
          "539: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "540:     @Issue(\"SECURITY-266\")",
          "541:     @Test",
          "542:     public void sandboxRejectsASTTransforms() throws Exception {",
          "543:         WorkflowJob p = jenkins.jenkins.createProject(WorkflowJob.class, \"p\");",
          "544:         p.setDefinition(new CpsFlowDefinition(\"import groovy.transform.*\\n\" +",
          "545:                 \"import jenkins.model.Jenkins\\n\" +",
          "546:                 \"import org.jenkinsci.plugins.workflow.job.WorkflowJob\\n\" +",
          "547:                 \"@ASTTest(value={ assert Jenkins.get().createProject(WorkflowJob.class, \\\"should-not-exist\\\") })\\n\" +",
          "548:                 \"@Field int x\\n\" +",
          "549:                 \"echo 'hello'\\n\", true));",
          "550:         WorkflowRun b = jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0));",
          "551:         jenkins.assertLogContains(\"Annotation ASTTest cannot be used in the sandbox\", b);",
          "553:         assertNull(jenkins.jenkins.getItem(\"should-not-exist\"));",
          "554:     }",
          "",
          "---------------"
        ],
        "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java": [
          "File: src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java -> src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinitionValidatorTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: package org.jenkinsci.plugins.workflow.cps;",
          "27: import static org.hamcrest.Matchers.containsString;",
          "28: import org.junit.Test;",
          "29: import static org.junit.Assert.*;",
          "30: import org.junit.Rule;",
          "31: import org.jvnet.hudson.test.JenkinsRule;",
          "33: public class CpsFlowDefinitionValidatorTest {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: import hudson.model.Item;",
          "30: import hudson.model.User;",
          "31: import hudson.security.ACL;",
          "32: import hudson.security.ACLContext;",
          "33: import jenkins.model.Jenkins;",
          "34: import org.jenkinsci.plugins.workflow.job.WorkflowJob;",
          "38: import org.jvnet.hudson.test.Issue;",
          "40: import org.jvnet.hudson.test.MockAuthorizationStrategy;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37:     @Test public void doCheckScriptCompile() throws Exception {",
          "38:         CpsFlowDefinition.DescriptorImpl d = r.jenkins.getDescriptorByType(CpsFlowDefinition.DescriptorImpl.class);",
          "41:     }",
          "43: }",
          "",
          "[Removed Lines]",
          "39:         assertThat(d.doCheckScriptCompile(\"echo 'hello'\").toString(), containsString(\"\\\"success\\\"\"));",
          "40:         assertThat(d.doCheckScriptCompile(\"echo 'hello\").toString(), containsString(\"\\\"fail\\\"\"));",
          "",
          "[Added Lines]",
          "48:         WorkflowJob job = r.jenkins.createProject(WorkflowJob.class, \"w\");",
          "49:         assertThat(d.doCheckScriptCompile(job, \"echo 'hello'\").toString(), containsString(\"\\\"success\\\"\"));",
          "50:         assertThat(d.doCheckScriptCompile(job, \"echo 'hello\").toString(), containsString(\"\\\"fail\\\"\"));",
          "51:     }",
          "53:     @Issue(\"SECURITY-1266\")",
          "54:     @Test",
          "55:     public void blockASTTest() throws Exception {",
          "56:         CpsFlowDefinition.DescriptorImpl d = r.jenkins.getDescriptorByType(CpsFlowDefinition.DescriptorImpl.class);",
          "57:         WorkflowJob job = r.jenkins.createProject(WorkflowJob.class, \"w\");",
          "58:         assertThat(d.doCheckScriptCompile(job, \"import groovy.transform.*\\n\" +",
          "59:                 \"import jenkins.model.Jenkins\\n\" +",
          "60:                 \"import org.jenkinsci.plugins.workflow.job.WorkflowJob\\n\" +",
          "61:                 \"@ASTTest(value={ assert Jenkins.get().createProject(WorkflowJob.class, \\\"should-not-exist\\\") })\\n\" +",
          "62:                 \"@Field int x\\n\" +",
          "63:                 \"echo 'hello'\\n\").toString(), containsString(\"Annotation ASTTest cannot be used in the sandbox\"));",
          "65:         assertNull(r.jenkins.getItem(\"should-not-exist\"));",
          "66:     }",
          "68:     @Issue(\"SECURITY-1266\")",
          "69:     @Test",
          "70:     public void blockGrab() throws Exception {",
          "71:         CpsFlowDefinition.DescriptorImpl d = r.jenkins.getDescriptorByType(CpsFlowDefinition.DescriptorImpl.class);",
          "72:         WorkflowJob job = r.jenkins.createProject(WorkflowJob.class, \"w\");",
          "73:         assertThat(d.doCheckScriptCompile(job, \"@Grab(group='foo', module='bar', version='1.0')\\n\" +",
          "74:                 \"def foo\\n\").toString(), containsString(\"Annotation Grab cannot be used in the sandbox\"));",
          "77:     @Issue(\"SECURITY-1266\")",
          "78:     @Test",
          "79:     public void configureRequired() throws Exception {",
          "80:         CpsFlowDefinition.DescriptorImpl d = r.jenkins.getDescriptorByType(CpsFlowDefinition.DescriptorImpl.class);",
          "82:         r.jenkins.setSecurityRealm(r.createDummySecurityRealm());",
          "84:         r.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().",
          "85:                 grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").",
          "86:                 grant(Jenkins.READ, Item.CONFIGURE).everywhere().to(\"dev1\").",
          "87:                 grant(Jenkins.READ).everywhere().to(\"dev2\"));",
          "88:         WorkflowJob job = r.jenkins.createProject(WorkflowJob.class, \"w\");",
          "90:         try (ACLContext context = ACL.as(User.getById(\"admin\", true))) {",
          "91:             assertThat(d.doCheckScriptCompile(job, \"echo 'hello\").toString(), containsString(\"fail\"));",
          "92:         }",
          "93:         try (ACLContext context = ACL.as(User.getById(\"dev1\", true))) {",
          "94:             assertThat(d.doCheckScriptCompile(job, \"echo 'hello\").toString(), containsString(\"fail\"));",
          "95:         }",
          "96:         try (ACLContext context = ACL.as(User.getById(\"dev2\", true))) {",
          "97:             assertThat(d.doCheckScriptCompile(job, \"echo 'hello\").toString(), containsString(\"success\"));",
          "98:         }",
          "99:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}