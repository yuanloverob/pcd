{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "cb9a536ed7ab591f98097cc0556894cf23eecb60",
      "candidate_info": {
        "commit_hash": "cb9a536ed7ab591f98097cc0556894cf23eecb60",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/cb9a536ed7ab591f98097cc0556894cf23eecb60",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java"
        ],
        "message": "PDFBOX-4955: part content stream and ignore Form XObjects if they are not used\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1881656 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: import org.apache.commons.logging.Log;",
          "30: import org.apache.commons.logging.LogFactory;",
          "31: import org.apache.pdfbox.cos.COSArray;",
          "32: import org.apache.pdfbox.cos.COSBase;",
          "33: import org.apache.pdfbox.cos.COSDictionary;",
          "34: import org.apache.pdfbox.cos.COSName;",
          "35: import org.apache.pdfbox.cos.COSNumber;",
          "36: import org.apache.pdfbox.pdmodel.PDDocument;",
          "37: import org.apache.pdfbox.pdmodel.PDPage;",
          "38: import org.apache.pdfbox.pdmodel.PDPageContentStream;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31: import org.apache.pdfbox.contentstream.operator.Operator;",
          "32: import org.apache.pdfbox.contentstream.operator.OperatorName;",
          "38: import org.apache.pdfbox.pdfparser.PDFStreamParser;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "769:             return true;",
          "770:         }",
          "771:         Iterator<COSName> xObjectNames = resources.getXObjectNames().iterator();",
          "772:         while (xObjectNames.hasNext())",
          "773:         {",
          "774:             try",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "775:         List<Object> tokens;",
          "776:         try",
          "777:         {",
          "778:             PDFStreamParser pdfStreamParser = new PDFStreamParser(appearanceStream);",
          "779:             pdfStreamParser.parse();",
          "780:             tokens = pdfStreamParser.getTokens();",
          "781:         }",
          "782:         catch (IOException ex)",
          "783:         {",
          "784:             LOG.debug(\"Couldn't not parse appearance content stream - content might be misplaced\", ex);",
          "785:             return true;",
          "786:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "784:                     float llY = bbox.getLowerLeftY();",
          "785:                     if (Float.compare(llX, 0) != 0 && Float.compare(llY, 0) != 0)",
          "786:                     {",
          "788:                     }",
          "789:                 }",
          "790:             }",
          "",
          "[Removed Lines]",
          "787:                         return false;",
          "",
          "[Added Lines]",
          "803:                         for (int i = 0; i < tokens.size(); ++i)",
          "804:                         {",
          "805:                             if (tokens.get(i).equals(name) && i < tokens.size() - 1 &&",
          "806:                                 tokens.get(i + 1).equals(Operator.getOperator(OperatorName.DRAW_OBJECT)))",
          "807:                             {",
          "808:                                 return false;",
          "809:                             }",
          "810:                         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "42047fad45a4d460b9428ea3f3d37101855dd807",
      "candidate_info": {
        "commit_hash": "42047fad45a4d460b9428ea3f3d37101855dd807",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/42047fad45a4d460b9428ea3f3d37101855dd807",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java"
        ],
        "message": "PDFBOX-4944: treat nbspace like space\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1881716 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "323:         if (getStandard14AFM() != null)",
          "324:         {",
          "325:             String nameInAFM = getEncoding().getName(code);",
          "328:             if (\".notdef\".equals(nameInAFM))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "326:             if (\"nbspace\".equals(nameInAFM))",
          "327:             {",
          "330:                 nameInAFM = \"space\";",
          "331:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f5dfe22753dcee4614f17c26c7490d0210ee2a72",
      "candidate_info": {
        "commit_hash": "f5dfe22753dcee4614f17c26c7490d0210ee2a72",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/f5dfe22753dcee4614f17c26c7490d0210ee2a72",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/io/RandomAccessBuffer.java"
        ],
        "message": "PDFBOX-4892: fix javadoc, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889868 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/io/RandomAccessBuffer.java||pdfbox/src/main/java/org/apache/pdfbox/io/RandomAccessBuffer.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/io/RandomAccessBuffer.java||pdfbox/src/main/java/org/apache/pdfbox/io/RandomAccessBuffer.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/io/RandomAccessBuffer.java -> pdfbox/src/main/java/org/apache/pdfbox/io/RandomAccessBuffer.java"
        ]
      }
    },
    {
      "candidate_hash": "dbaaa2a583c926261319881f052c1ad2893b9854",
      "candidate_info": {
        "commit_hash": "dbaaa2a583c926261319881f052c1ad2893b9854",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/dbaaa2a583c926261319881f052c1ad2893b9854",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java"
        ],
        "message": "PDFBOX-4892: performance improvement, as suggested by valerybokov; comment from CFF specification\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1888768 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java||fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java||fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java -> fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "822:         int gid = 1;",
          "823:         for (int i = 0; i < encoding.nRanges; i++)",
          "824:         {",
          "828:             {",
          "829:                 int sid = charset.getSIDForGID(gid);",
          "830:                 int code = rangeFirst + j;",
          "",
          "[Removed Lines]",
          "825:             int rangeFirst = dataInput.readCard8();",
          "826:             int rangeLeft = dataInput.readCard8();",
          "827:             for (int j = 0; j < 1 + rangeLeft; j++)",
          "",
          "[Added Lines]",
          "825:             int rangeFirst = dataInput.readCard8(); // First code in range",
          "826:             int rangeLeft = dataInput.readCard8(); // Codes left in range (excluding first)",
          "827:             for (int j = 0; j <= rangeLeft; j++)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d9da237ab7ae87672042e5dc36867369728a4c33",
      "candidate_info": {
        "commit_hash": "d9da237ab7ae87672042e5dc36867369728a4c33",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/d9da237ab7ae87672042e5dc36867369728a4c33",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java"
        ],
        "message": "PDFBOX-4892: Sonar fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890724 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1075:             byte[] k = md.digest(input);",
          "1077:             byte[] e = null;",
          "1079:             {",
          "1080:                 byte[] k1;",
          "1081:                 if (userKey != null && userKey.length >= 48)",
          "",
          "[Removed Lines]",
          "1078:             for (int round = 0; round < 64 || ((int)e[e.length-1] & 0xFF) > round - 32; round++)",
          "",
          "[Added Lines]",
          "1078:             for (int round = 0; round < 64 || (e[e.length-1] & 0xFF) > round - 32; round++)",
          "",
          "---------------"
        ]
      }
    }
  ]
}