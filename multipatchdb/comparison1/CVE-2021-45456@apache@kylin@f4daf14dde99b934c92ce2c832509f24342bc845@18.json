{
  "cve_id": "CVE-2021-45456",
  "cve_desc": "Apache kylin checks the legitimacy of the project before executing some commands with the project name passed in by the user. There is a mismatch between what is being checked and what is being used as the shell command argument in DiagnosisService. This may cause an illegal project name to pass the check and perform the following steps, resulting in a command injection vulnerability. This issue affects Apache Kylin 4.0.0.",
  "repo": "apache/kylin",
  "patch_hash": "f4daf14dde99b934c92ce2c832509f24342bc845",
  "patch_info": {
    "commit_hash": "f4daf14dde99b934c92ce2c832509f24342bc845",
    "repo": "apache/kylin",
    "commit_url": "https://github.com/apache/kylin/commit/f4daf14dde99b934c92ce2c832509f24342bc845",
    "files": [
      "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
      "server/src/main/webapp/WEB-INF/web.xml"
    ],
    "message": "test fix",
    "before_after_code_files": [
      "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java"
    ]
  },
  "patch_diff": {
    "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java": [
      "File: core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java -> core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "3403:     public String getKerberosPrincipal() {",
      "3404:         return getOptional(\"kylin.kerberos.principal\");",
      "3405:     }",
      "3406: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3407:     public String getEncryptCipherIvSpec() {",
      "3408:         return getOptional(\"kylin.security.encrypt.cipher.ivSpec\", \"AAAAAAAAAAAAAAAA\");",
      "3409:     }",
      "",
      "---------------"
    ],
    "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java": [
      "File: core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java -> core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: import java.security.NoSuchAlgorithmException;",
      "27: import org.apache.commons.codec.binary.Base64;",
      "29: import javax.crypto.Cipher;",
      "30: import javax.crypto.NoSuchPaddingException;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28: import org.apache.kylin.common.KylinConfig;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "42:             InvalidKeyException, NoSuchPaddingException, NoSuchAlgorithmException, UnsupportedEncodingException {",
      "43:         Cipher cipher = Cipher.getInstance(\"AES/CFB/PKCS5Padding\");",
      "44:         final SecretKeySpec secretKey = new SecretKeySpec(key, \"AES\");",
      "46:         cipher.init(cipherMode, secretKey, ivSpec);",
      "47:         return cipher;",
      "48:     }",
      "",
      "[Removed Lines]",
      "45:         IvParameterSpec ivSpec = new IvParameterSpec(\"AAAAAAAAAAAAAAAA\".getBytes(\"UTF-8\"));",
      "",
      "[Added Lines]",
      "46:         IvParameterSpec ivSpec = new IvParameterSpec(KylinConfig.getInstanceFromEnv().getEncryptCipherIvSpec().getBytes(\"UTF-8\"));",
      "",
      "---------------"
    ],
    "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java": [
      "File: core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java -> core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: package org.apache.kylin.common.util;",
      "21: import org.junit.Assert;",
      "22: import org.junit.Test;",
      "26:     @Test",
      "27:     public void testAESEncrypt(){",
      "",
      "[Removed Lines]",
      "24: public class EncryptUtilTest {",
      "",
      "[Added Lines]",
      "21: import org.junit.After;",
      "23: import org.junit.Before;",
      "26: public class EncryptUtilTest extends LocalFileMetadataTestCase {",
      "27:     @Before",
      "28:     public void setUp() throws Exception {",
      "29:         this.createTestMetadata();",
      "30:     }",
      "32:     @After",
      "33:     public void after() throws Exception {",
      "34:         this.cleanupTestMetadata();",
      "35:     }",
      "",
      "---------------"
    ],
    "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java": [
      "File: server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java -> server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "87:     public String dumpProjectDiagnosisInfo(String project, File exportPath) throws IOException {",
      "88:         Message msg = MsgPicker.getMsg();",
      "89:         ProjectInstance projectInstance =",
      "90:                 ProjectManager.getInstance(KylinConfig.getInstanceFromEnv())",
      "92:         if (null == projectInstance) {",
      "93:             throw new BadRequestException(",
      "95:         }",
      "96:         aclEvaluate.checkProjectOperationPermission(projectInstance);",
      "98:         runDiagnosisCLI(args);",
      "99:         return getDiagnosisPackageName(exportPath);",
      "100:     }",
      "",
      "[Removed Lines]",
      "91:                         .getProject(ValidateUtil.convertStringToBeAlphanumericUnderscore(project));",
      "94:                     String.format(Locale.ROOT, msg.getDIAG_PROJECT_NOT_FOUND(), project));",
      "97:         String[] args = { project, exportPath.getAbsolutePath() };",
      "",
      "[Added Lines]",
      "89:         String projectName = ValidateUtil.convertStringToBeAlphanumericUnderscore(project);",
      "92:                         .getProject(projectName);",
      "95:                     String.format(Locale.ROOT, msg.getDIAG_PROJECT_NOT_FOUND(), projectName));",
      "98:         String[] args = { projectName, exportPath.getAbsolutePath() };",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "21df0af823359e5288dd880a49996d941ad1a25c",
      "candidate_info": {
        "commit_hash": "21df0af823359e5288dd880a49996d941ad1a25c",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/21df0af823359e5288dd880a49996d941ad1a25c",
        "files": [
          "core-metadata/src/main/java/org/apache/kylin/metadata/model/Segments.java"
        ],
        "message": "NPE: refrech segment when there is no segments\n\n(cherry picked from commit 35ffb3cb81a111b72cfd070931892e2d4a472748)",
        "before_after_code_files": [
          "core-metadata/src/main/java/org/apache/kylin/metadata/model/Segments.java||core-metadata/src/main/java/org/apache/kylin/metadata/model/Segments.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "core-metadata/src/main/java/org/apache/kylin/metadata/model/Segments.java||core-metadata/src/main/java/org/apache/kylin/metadata/model/Segments.java": [
          "File: core-metadata/src/main/java/org/apache/kylin/metadata/model/Segments.java -> core-metadata/src/main/java/org/apache/kylin/metadata/model/Segments.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "467:     }",
          "469:     public Pair<Boolean, Boolean> fitInSegments(ISegment newOne) {",
          "473:         ISegment first = this.get(0);",
          "474:         ISegment last = this.get(this.size() - 1);",
          "",
          "[Removed Lines]",
          "470:         if (this.isEmpty())",
          "471:             return null;",
          "",
          "[Added Lines]",
          "470:         if (this.isEmpty()) {",
          "471:           return Pair.newPair(false, false);",
          "472:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "279fbf34b71d00ef71ac8a931e03a50e6f8a078b",
      "candidate_info": {
        "commit_hash": "279fbf34b71d00ef71ac8a931e03a50e6f8a078b",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/279fbf34b71d00ef71ac8a931e03a50e6f8a078b",
        "files": [
          ".gitignore",
          "examples/test_case_data/parquet_test/model_desc/ci_left_join_model.json",
          "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/builder/CreateFlatTable.scala"
        ],
        "message": "KYLIN-4965 Fix the 'can not resolve columns' error when create model and add lookup table column as filter condition",
        "before_after_code_files": [
          "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/builder/CreateFlatTable.scala||kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/builder/CreateFlatTable.scala"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/builder/CreateFlatTable.scala||kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/builder/CreateFlatTable.scala": [
          "File: kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/builder/CreateFlatTable.scala -> kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/builder/CreateFlatTable.scala",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:     val ccCols = seg.allColumns.filter(_.isInstanceOf[ComputedColumnDesc]).toSet",
          "46:     var rootFactDataset = generateTableDataset(seg.factTable, ccCols.toSeq, ss, seg.project)",
          "49:     logInfo(s\"Create flattable need join lookup tables $needJoin, need encode cols $needEncode\")",
          "",
          "[Removed Lines]",
          "47:     rootFactDataset = applyFilterCondition(seg, rootFactDataset)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58:         val allTableDataset = Seq(rootFactDataset) ++ encodedLookupMap.map(_._2)",
          "60:         rootFactDataset = joinFactTableWithLookupTables(rootFactDataset, encodedLookupMap, seg, ss)",
          "61:         rootFactDataset = encodeWithCols(rootFactDataset,",
          "62:           filterCols(allTableDataset, ccCols),",
          "63:           filterCols(allTableDataset, toBuildDictSet),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62:         rootFactDataset = applyFilterCondition(seg, rootFactDataset)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "65:       case (true, false) =>",
          "66:         val lookupTableDatasetMap = generateLookupTableDataset(seg, ccCols.toSeq, ss)",
          "67:         rootFactDataset = joinFactTableWithLookupTables(rootFactDataset, lookupTableDatasetMap, seg, ss)",
          "68:         rootFactDataset = withColumn(rootFactDataset, ccCols)",
          "69:       case (false, true) =>",
          "70:         val (dictCols, encodeCols) = (seg.toBuildDictColumns, seg.allDictColumns)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72:         rootFactDataset = applyFilterCondition(seg, rootFactDataset)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f478294a6dad7523b6496dabd3c91a0d507da866",
      "candidate_info": {
        "commit_hash": "f478294a6dad7523b6496dabd3c91a0d507da866",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/f478294a6dad7523b6496dabd3c91a0d507da866",
        "files": [
          "build-engine/src/main/java/org/apache/kylin/engine/mr/common/JobInfoConverter.java",
          "build/bin/kylin.sh",
          "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "core-job/src/main/java/org/apache/kylin/job/execution/DefaultChainedExecutable.java",
          "server-base/src/main/java/org/apache/kylin/rest/metrics/QueryMetricsFacade.java",
          "server-base/src/main/java/org/apache/kylin/rest/service/CubeService.java",
          "server/src/test/java/org/apache/kylin/rest/metrics/QueryMetricsTest.java"
        ],
        "message": "Some fix for cherry-pick",
        "before_after_code_files": [
          "build-engine/src/main/java/org/apache/kylin/engine/mr/common/JobInfoConverter.java||build-engine/src/main/java/org/apache/kylin/engine/mr/common/JobInfoConverter.java",
          "build/bin/kylin.sh||build/bin/kylin.sh",
          "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "core-job/src/main/java/org/apache/kylin/job/execution/DefaultChainedExecutable.java||core-job/src/main/java/org/apache/kylin/job/execution/DefaultChainedExecutable.java",
          "server-base/src/main/java/org/apache/kylin/rest/metrics/QueryMetricsFacade.java||server-base/src/main/java/org/apache/kylin/rest/metrics/QueryMetricsFacade.java",
          "server-base/src/main/java/org/apache/kylin/rest/service/CubeService.java||server-base/src/main/java/org/apache/kylin/rest/service/CubeService.java",
          "server/src/test/java/org/apache/kylin/rest/metrics/QueryMetricsTest.java||server/src/test/java/org/apache/kylin/rest/metrics/QueryMetricsTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [
            "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java"
          ],
          "candidate": [
            "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java"
          ]
        }
      },
      "candidate_diff": {
        "build-engine/src/main/java/org/apache/kylin/engine/mr/common/JobInfoConverter.java||build-engine/src/main/java/org/apache/kylin/engine/mr/common/JobInfoConverter.java": [
          "File: build-engine/src/main/java/org/apache/kylin/engine/mr/common/JobInfoConverter.java -> build-engine/src/main/java/org/apache/kylin/engine/mr/common/JobInfoConverter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:         }",
          "59:     }",
          "70:     public static JobInstance parseToJobInstance(CubingJob job, Map<String, Output> outputs) {",
          "71:         if (job == null) {",
          "72:             logger.warn(\"job is null.\");",
          "",
          "[Removed Lines]",
          "61:     public static JobInstance parseToJobInstanceQuietly(CheckpointExecutable job, Map<String, Output> outputs) {",
          "62:         try {",
          "63:             return parseToJobInstance(job, outputs);",
          "64:         } catch (Exception e) {",
          "65:             logger.error(\"Failed to parse job instance: uuid={}\", job, e);",
          "66:             return null;",
          "67:         }",
          "68:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "build/bin/kylin.sh||build/bin/kylin.sh": [
          "File: build/bin/kylin.sh -> build/bin/kylin.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "269:     exec $JAVA ${KYLIN_EXTRA_START_OPTS} ${KYLIN_TOOL_OPTS} -classpath ${KYLIN_TOOL_CLASSPATH}  \"$@\"",
          "270: }",
          "277: # start command",
          "280:     if [ -f \"${KYLIN_HOME}/pid\" ]",
          "281:     then",
          "282:         PID=`cat $KYLIN_HOME/pid`",
          "",
          "[Removed Lines]",
          "272: if [ \"$2\" == \"--reload-dependency\" ]",
          "273: then",
          "274:     reload_dependency=1",
          "275: fi",
          "278: if [ \"$1\" == \"start\" ]",
          "279: then",
          "",
          "[Added Lines]",
          "273: function retrieveStartCommand() {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "312:     verbose \"java classpath is ${KYLIN_TOMCAT_CLASSPATH}\"",
          "313:     classpathDebug ${KYLIN_TOMCAT_CLASSPATH}",
          "314:     $JAVA ${KYLIN_EXTRA_START_OPTS} ${KYLIN_TOMCAT_OPTS} -classpath ${KYLIN_TOMCAT_CLASSPATH}  org.apache.catalina.startup.Bootstrap start >> ${KYLIN_HOME}/logs/kylin.out 2>&1 & echo $! > ${KYLIN_HOME}/pid &",
          "331: function retrieveStopCommand() {",
          "332:     if [ -f \"${KYLIN_HOME}/pid\" ]",
          "333:     then",
          "",
          "[Removed Lines]",
          "316:     echo \"\"",
          "317:     echo \"A new Kylin instance is started by $USER. To stop it, run 'kylin.sh stop'\"",
          "318:     echo \"Check the log at ${KYLIN_HOME}/logs/kylin.log\"",
          "319:     echo \"Web UI is at http://${KYLIN_REST_ADDRESS}/kylin\"",
          "320:     exit 0",
          "322: # run command",
          "323: elif [ \"$1\" == \"run\" ]",
          "324: then",
          "325:     retrieveStartCommand",
          "326:     ${start_command}",
          "328: # stop command",
          "329: elif [ \"$1\" == \"stop\" ]",
          "330: then",
          "",
          "[Added Lines]",
          "309: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "385: if [ \"$1\" == \"start\" ]",
          "386: then",
          "387:     retrieveStartCommand",
          "391:     echo \"\"",
          "392:     echo \"A new Kylin instance is started by $USER. To stop it, run 'kylin.sh stop'\"",
          "393:     echo \"Check the log at ${KYLIN_HOME}/logs/kylin.log\"",
          "395:     exit 0",
          "397: # run command",
          "",
          "[Removed Lines]",
          "388:     ${start_command} >> ${KYLIN_HOME}/logs/kylin.out 2>&1 & echo $! > ${KYLIN_HOME}/pid &",
          "389:     rm -f $lockfile",
          "394:     echo \"Web UI is at http://${kylin_rest_address_arr}/kylin\"",
          "",
          "[Added Lines]",
          "372:     echo \"Web UI is at http://${KYLIN_REST_ADDRESS}/kylin\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "399: then",
          "400:     retrieveStartCommand",
          "401:     ${start_command}",
          "404: # stop command",
          "405: elif [ \"$1\" == \"stop\" ]",
          "",
          "[Removed Lines]",
          "402:     rm -f $lockfile",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "424:     fi",
          "425:     echo \"--> Start kylin...\"",
          "426:     retrieveStartCommand",
          "430:     echo \"\"",
          "431:     echo \"A new Kylin instance is started by $USER. To stop it, run 'kylin.sh stop'\"",
          "432:     echo \"Check the log at ${KYLIN_HOME}/logs/kylin.log\"",
          "434:     exit 0",
          "547: elif [ \"$1\" = \"version\" ]",
          "548: then",
          "549:     runTool org.apache.kylin.common.KylinVersion",
          "",
          "[Removed Lines]",
          "427:     ${start_command} >> ${KYLIN_HOME}/logs/kylin.out 2>&1 & echo $! > ${KYLIN_HOME}/pid &",
          "428:     rm -f $lockfile",
          "433:     echo \"Web UI is at http://${kylin_rest_address_arr}/kylin\"",
          "436: # streaming command",
          "437: elif [ \"$1\" == \"streaming\" ]",
          "438: then",
          "439:     if [ $# -lt 2 ]",
          "440:     then",
          "441:         echo \"Invalid input args $@\"",
          "442:         exit -1",
          "443:     fi",
          "444:     if [ \"$2\" == \"start\" ]",
          "445:     then",
          "446:         if [ -f \"${KYLIN_HOME}/streaming_receiver_pid\" ]",
          "447:         then",
          "448:             PID=`cat $KYLIN_HOME/streaming_receiver_pid`",
          "449:             if ps -p $PID > /dev/null",
          "450:             then",
          "451:               echo \"Kylin streaming receiver is running, stop it first\"",
          "452:             exit 1",
          "453:             fi",
          "454:         fi",
          "455:         #retrive $hbase_dependency",
          "456:         metadataUrl=`${dir}/get-properties.sh kylin.metadata.url`",
          "457:         if [[ \"${metadataUrl##*@}\" == \"hbase\" ]]",
          "458:         then",
          "459:             source ${dir}/find-hbase-dependency.sh",
          "460:         fi",
          "461:         #retrive $KYLIN_EXTRA_START_OPTS",
          "462:         if [ -f \"${KYLIN_HOME}/conf/setenv.sh\" ]",
          "463:             then source ${KYLIN_HOME}/conf/setenv.sh",
          "464:         fi",
          "466:         mkdir -p ${KYLIN_HOME}/ext",
          "467:         HBASE_CLASSPATH=`hbase classpath`",
          "468:         #echo \"hbase class path:\"$HBASE_CLASSPATH",
          "469:         STREAM_CLASSPATH=${KYLIN_HOME}/lib/streaming/*:${KYLIN_HOME}/ext/*:${HBASE_CLASSPATH}",
          "471:         # KYLIN_EXTRA_START_OPTS is for customized settings, checkout bin/setenv.sh",
          "472:         $JAVA -cp $STREAM_CLASSPATH ${KYLIN_EXTRA_START_OPTS} \\",
          "473:         -Dlog4j.configuration=stream-receiver-log4j.properties\\",
          "474:         -DKYLIN_HOME=${KYLIN_HOME}\\",
          "475:         -Dkylin.hbase.dependency=${hbase_dependency} \\",
          "476:         org.apache.kylin.stream.server.StreamingReceiver $@ > ${KYLIN_HOME}/logs/streaming_receiver.out 2>&1 & echo $! > ${KYLIN_HOME}/streaming_receiver_pid &",
          "477:         exit 0",
          "478:     elif [ \"$2\" == \"stop\" ]",
          "479:     then",
          "480:         if [ ! -f \"${KYLIN_HOME}/streaming_receiver_pid\" ]",
          "481:         then",
          "482:             echo \"Streaming receiver is not running, please check\"",
          "483:             exit 1",
          "484:         fi",
          "485:         PID=`cat ${KYLIN_HOME}/streaming_receiver_pid`",
          "486:         if [ \"$PID\" = \"\" ]",
          "487:         then",
          "488:             echo \"Streaming receiver is not running, please check\"",
          "489:             exit 1",
          "490:         else",
          "491:             echo \"Stopping streaming receiver: $PID\"",
          "492:             WAIT_TIME=2",
          "493:             LOOP_COUNTER=20",
          "494:             if ps -p $PID > /dev/null",
          "495:             then",
          "496:                 kill $PID",
          "498:                 for ((i=0; i<$LOOP_COUNTER; i++))",
          "499:                 do",
          "500:                     # wait to process stopped",
          "501:                     sleep $WAIT_TIME",
          "502:                     if ps -p $PID > /dev/null ; then",
          "503:                         echo \"Stopping in progress. Will check after $WAIT_TIME secs again...\"",
          "504:                         continue;",
          "505:                     else",
          "506:                         break;",
          "507:                     fi",
          "508:                 done",
          "510:                 # if process is still around, use kill -9",
          "511:                 if ps -p $PID > /dev/null",
          "512:                 then",
          "513:                     echo \"Initial kill failed, getting serious now...\"",
          "514:                     kill -9 $PID",
          "515:                     sleep 1 #give kill -9  sometime to \"kill\"",
          "516:                     if ps -p $PID > /dev/null",
          "517:                     then",
          "518:                        quit \"Warning, even kill -9 failed, giving up! Sorry...\"",
          "519:                     fi",
          "520:                 fi",
          "522:                 # process is killed , remove pid file",
          "523:                 rm -rf ${KYLIN_HOME}/streaming_receiver_pid",
          "524:                 echo \"Kylin streaming receiver with pid ${PID} has been stopped.\"",
          "525:                 exit 0",
          "526:             else",
          "527:                quit \"Kylin streaming receiver with pid ${PID} is not running\"",
          "528:             fi",
          "529:         fi",
          "530:     elif [[ \"$2\" = org.apache.kylin.* ]]",
          "531:     then",
          "532:         source ${KYLIN_HOME}/conf/setenv.sh",
          "533:         HBASE_CLASSPATH=`hbase classpath`",
          "534:         #echo \"hbase class path:\"$HBASE_CLASSPATH",
          "535:         STREAM_CLASSPATH=${KYLIN_HOME}/lib/streaming/*:${KYLIN_HOME}/ext/*:${HBASE_CLASSPATH}",
          "537:         shift",
          "538:         # KYLIN_EXTRA_START_OPTS is for customized settings, checkout bin/setenv.sh",
          "539:         $JAVA -cp $STREAM_CLASSPATH ${KYLIN_EXTRA_START_OPTS} \\",
          "540:         -Dlog4j.configuration=stream-receiver-log4j.properties\\",
          "541:         -DKYLIN_HOME=${KYLIN_HOME}\\",
          "542:         -Dkylin.hbase.dependency=${hbase_dependency} \\",
          "543:         \"$@\"",
          "544:         exit 0",
          "545:     fi",
          "",
          "[Added Lines]",
          "408:     echo \"Web UI is at http://${KYLIN_REST_ADDRESS}/kylin\"",
          "",
          "---------------"
        ],
        "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java": [
          "File: core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java -> core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: import org.apache.kylin.common.util.CliCommandExecutor;",
          "47: import org.apache.kylin.common.util.FileUtils;",
          "48: import org.apache.kylin.common.util.HadoopUtil;",
          "49: import org.slf4j.Logger;",
          "50: import org.slf4j.LoggerFactory;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49: import org.apache.kylin.common.util.StringUtil;",
          "",
          "---------------"
        ],
        "core-job/src/main/java/org/apache/kylin/job/execution/DefaultChainedExecutable.java||core-job/src/main/java/org/apache/kylin/job/execution/DefaultChainedExecutable.java": [
          "File: core-job/src/main/java/org/apache/kylin/job/execution/DefaultChainedExecutable.java -> core-job/src/main/java/org/apache/kylin/job/execution/DefaultChainedExecutable.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:         }",
          "54:     }",
          "56:     public long getMapReduceWaitTime() {",
          "57:         return getExtraInfoAsLong(MetadataConstants.MAP_REDUCE_WAIT_TIME, 0L);",
          "58:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56:     public void setProjectName(String name) {",
          "57:         setParam(MetadataConstants.P_PROJECT_NAME, name);",
          "58:     }",
          "60:     public String getProjectName() {",
          "61:         return getParam(MetadataConstants.P_PROJECT_NAME);",
          "62:     }",
          "",
          "---------------"
        ],
        "server-base/src/main/java/org/apache/kylin/rest/metrics/QueryMetricsFacade.java||server-base/src/main/java/org/apache/kylin/rest/metrics/QueryMetricsFacade.java": [
          "File: server-base/src/main/java/org/apache/kylin/rest/metrics/QueryMetricsFacade.java -> server-base/src/main/java/org/apache/kylin/rest/metrics/QueryMetricsFacade.java"
        ],
        "server-base/src/main/java/org/apache/kylin/rest/service/CubeService.java||server-base/src/main/java/org/apache/kylin/rest/service/CubeService.java": [
          "File: server-base/src/main/java/org/apache/kylin/rest/service/CubeService.java -> server-base/src/main/java/org/apache/kylin/rest/service/CubeService.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "624:             CubeInstance cubeInstance = CubeManager.getInstance(getConfig()).updateCubeDropSegments(cube, toDelete);",
          "628:             return cubeInstance;",
          "629:         } else {",
          "",
          "[Removed Lines]",
          "626:             cleanSegmentStorage(Collections.singletonList(toDelete));",
          "",
          "[Added Lines]",
          "626:             cleanSegmentStorage(cubeInstance, Collections.singletonList(toDelete));",
          "",
          "---------------"
        ],
        "server/src/test/java/org/apache/kylin/rest/metrics/QueryMetricsTest.java||server/src/test/java/org/apache/kylin/rest/metrics/QueryMetricsTest.java": [
          "File: server/src/test/java/org/apache/kylin/rest/metrics/QueryMetricsTest.java -> server/src/test/java/org/apache/kylin/rest/metrics/QueryMetricsTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "82:         QueryMetricsFacade.updateMetrics(\"\", sqlRequest, sqlResponse);",
          "86:         Assert.assertEquals(1L, mBeanServer.getAttribute(objectName, \"QueryCount\"));",
          "87:         Assert.assertEquals(1L, mBeanServer.getAttribute(objectName, \"QuerySuccessCount\"));",
          "",
          "[Removed Lines]",
          "84:         Thread.sleep(2000);",
          "",
          "[Added Lines]",
          "84:         Thread.sleep(10000);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "111:         QueryMetricsFacade.updateMetrics(\"\", sqlRequest, sqlResponse2);",
          "115:         Assert.assertEquals(2L, mBeanServer.getAttribute(objectName, \"QueryCount\"));",
          "116:         Assert.assertEquals(1L, mBeanServer.getAttribute(objectName, \"QuerySuccessCount\"));",
          "",
          "[Removed Lines]",
          "113:         Thread.sleep(2000);",
          "",
          "[Added Lines]",
          "113:         Thread.sleep(10000);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9fa49f324a898d484cc10cb9426b12cd5c9b9ec9",
      "candidate_info": {
        "commit_hash": "9fa49f324a898d484cc10cb9426b12cd5c9b9ec9",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/9fa49f324a898d484cc10cb9426b12cd5c9b9ec9",
        "files": [
          "core-metadata/src/main/java/org/apache/kylin/metadata/model/DataModelDesc.java"
        ],
        "message": "KYLIN-4421 Add table alias field for root fact table in DataModelDesc\n\n(cherry picked from commit c9c723fe7164983476bcd39381ae216ea44f7867)",
        "before_after_code_files": [
          "core-metadata/src/main/java/org/apache/kylin/metadata/model/DataModelDesc.java||core-metadata/src/main/java/org/apache/kylin/metadata/model/DataModelDesc.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "core-metadata/src/main/java/org/apache/kylin/metadata/model/DataModelDesc.java||core-metadata/src/main/java/org/apache/kylin/metadata/model/DataModelDesc.java": [
          "File: core-metadata/src/main/java/org/apache/kylin/metadata/model/DataModelDesc.java -> core-metadata/src/main/java/org/apache/kylin/metadata/model/DataModelDesc.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: import java.util.Queue;",
          "32: import java.util.Set;",
          "34: import org.apache.commons.lang3.ArrayUtils;",
          "35: import org.apache.commons.lang3.StringUtils;",
          "36: import org.apache.kylin.common.KylinConfig;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34: import com.google.common.base.Strings;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82:     @JsonProperty(\"fact_table\")",
          "83:     private String rootFactTable;",
          "85:     @JsonProperty(\"lookups\")",
          "86:     @JsonInclude(JsonInclude.Include.NON_NULL)",
          "87:     private JoinTableDesc[] joinTables;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "86:     @JsonProperty(\"fact_table_alias\")",
          "87:     private String rootFactTableAlias;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "403:             throw new IllegalStateException(\"Root fact table does not exist:\" + rootFactTable);",
          "405:         TableDesc rootDesc = tables.get(rootFactTable);",
          "408:         addAlias(rootFactTableRef);",
          "409:         factTableRefs.add(rootFactTableRef);",
          "",
          "[Removed Lines]",
          "406:         rootFactTableRef = new TableRef(this, rootDesc.getName(), rootDesc, false);",
          "",
          "[Added Lines]",
          "410:         if (Strings.isNullOrEmpty(rootFactTableAlias)) {",
          "411:             rootFactTableAlias = rootDesc.getName();",
          "412:         }",
          "413:         rootFactTableRef = new TableRef(this, rootFactTableAlias, rootDesc, false);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "601:         int orderedIndex = 0;",
          "603:         Queue<JoinTableDesc> joinTableBuff = new ArrayDeque<JoinTableDesc>();",
          "606:         while (!joinTableBuff.isEmpty()) {",
          "607:             JoinTableDesc head = joinTableBuff.poll();",
          "608:             orderedJoinTables[orderedIndex++] = head;",
          "",
          "[Removed Lines]",
          "604:         TableDesc rootDesc = tables.get(rootFactTable);",
          "605:         joinTableBuff.addAll(fkMap.get(rootDesc.getName()));",
          "",
          "[Added Lines]",
          "611:         joinTableBuff.addAll(fkMap.get(rootFactTableAlias));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "795:         copy.owner = orig.owner;",
          "796:         copy.description = orig.description;",
          "797:         copy.rootFactTable = orig.rootFactTable;",
          "798:         copy.joinTables = orig.joinTables;",
          "799:         copy.dimensions = orig.dimensions;",
          "800:         copy.metrics = orig.metrics;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "804:         copy.rootFactTableAlias = orig.rootFactTableAlias;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "72c76651d573635fb74c66f79bebb81d52c2a1be",
      "candidate_info": {
        "commit_hash": "72c76651d573635fb74c66f79bebb81d52c2a1be",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/72c76651d573635fb74c66f79bebb81d52c2a1be",
        "files": [
          "core-cube/src/main/java/org/apache/kylin/cube/CubeInstance.java"
        ],
        "message": "minor fix for KYLIN-5071",
        "before_after_code_files": [
          "core-cube/src/main/java/org/apache/kylin/cube/CubeInstance.java||core-cube/src/main/java/org/apache/kylin/cube/CubeInstance.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "core-cube/src/main/java/org/apache/kylin/cube/CubeInstance.java||core-cube/src/main/java/org/apache/kylin/cube/CubeInstance.java": [
          "File: core-cube/src/main/java/org/apache/kylin/cube/CubeInstance.java -> core-cube/src/main/java/org/apache/kylin/cube/CubeInstance.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "461:     public Set<Long> getCuboidsByMode(CuboidModeEnum cuboidMode) {",
          "462:         Set<Long> currentCuboid = getCuboidScheduler().getAllCuboidIds();",
          "468:             return currentCuboid;",
          "469:         }",
          "470:         Set<Long> cuboidsRecommend = getCuboidsRecommend();",
          "471:         if (cuboidsRecommend == null || cuboidMode == RECOMMEND) {",
          "472:             return cuboidsRecommend;",
          "",
          "[Removed Lines]",
          "463:         if (cuboidMode == null || cuboidMode == CURRENT) {",
          "464:             return currentCuboid;",
          "465:         }",
          "466:         if (cuboidMode == CURRENT_WITH_BASE) {",
          "467:             currentCuboid.add(getCuboidScheduler().getBaseCuboidId());",
          "",
          "[Added Lines]",
          "463:         if (cuboidMode == null || cuboidMode == CURRENT || cuboidMode == CURRENT_WITH_BASE) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}