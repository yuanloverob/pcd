{
  "cve_id": "CVE-2014-0035",
  "cve_desc": "The SymmetricBinding in Apache CXF before 2.6.13 and 2.7.x before 2.7.10, when EncryptBeforeSigning is enabled and the UsernameToken policy is set to an EncryptedSupportingToken, transmits the UsernameToken in cleartext, which allows remote attackers to obtain sensitive information by sniffing the network.",
  "repo": "apache/cxf",
  "patch_hash": "d249721708694cbb0f431c0658166ebdcb02ec15",
  "patch_info": {
    "commit_hash": "d249721708694cbb0f431c0658166ebdcb02ec15",
    "repo": "apache/cxf",
    "commit_url": "https://github.com/apache/cxf/commit/d249721708694cbb0f431c0658166ebdcb02ec15",
    "files": [
      "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/SymmetricBindingHandler.java",
      "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
      "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl",
      "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/client/client.xml",
      "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/server/server.xml"
    ],
    "message": "Another EncryptBeforeSigning fix\n\nConflicts:\n\tsystests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl\n\tsystests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/client.xml\n\tsystests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/server.xml\n\tsystests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/stax-server.xml\n\ngit-svn-id: https://svn.apache.org/repos/asf/cxf/branches/2.7.x-fixes@1564731 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/SymmetricBindingHandler.java||rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/SymmetricBindingHandler.java",
      "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java||systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
      "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl||systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl"
    ]
  },
  "patch_diff": {
    "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/SymmetricBindingHandler.java||rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/SymmetricBindingHandler.java": [
      "File: rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/SymmetricBindingHandler.java -> rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/SymmetricBindingHandler.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "262:                         this.addDerivedKeyElement(secondRefList);",
      "263:                     } else if (!secondEncrParts.isEmpty()) {",
      "266:                         this.addDerivedKeyElement(secondRefList);",
      "267:                     }",
      "268:                 }",
      "",
      "[Removed Lines]",
      "265:                         secondRefList = ((WSSecEncrypt)encr).encryptForRef(null, encrParts);",
      "",
      "[Added Lines]",
      "265:                         secondRefList = ((WSSecEncrypt)encr).encryptForRef(null, secondEncrParts);",
      "",
      "---------------"
    ],
    "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java||systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java": [
      "File: systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java -> systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "442:         bus.shutdown(true);",
      "443:     }",
      "445:     @org.junit.Test",
      "446:     public void testSymmetricProtectTokens() throws Exception {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "445:     @org.junit.Test",
      "446:     public void testSymmetricUsernameToken() throws Exception {",
      "448:         SpringBusFactory bf = new SpringBusFactory();",
      "449:         URL busFile = X509TokenTest.class.getResource(\"client/client.xml\");",
      "451:         Bus bus = bf.createBus(busFile.toString());",
      "452:         SpringBusFactory.setDefaultBus(bus);",
      "453:         SpringBusFactory.setThreadDefaultBus(bus);",
      "455:         URL wsdl = X509TokenTest.class.getResource(\"DoubleItX509.wsdl\");",
      "456:         Service service = Service.create(wsdl, SERVICE_QNAME);",
      "457:         QName portQName = new QName(NAMESPACE, \"DoubleItSymmetricUsernameTokenPort\");",
      "458:         DoubleItPortType x509Port =",
      "459:                 service.getPort(portQName, DoubleItPortType.class);",
      "460:         updateAddressPort(x509Port, PORT);",
      "462:         x509Port.doubleIt(25);",
      "464:         ((java.io.Closeable)x509Port).close();",
      "465:         bus.shutdown(true);",
      "466:     }",
      "",
      "---------------"
    ],
    "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl||systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl": [
      "File: systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl -> systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl",
      "--- Hunk 1 ---",
      "[Context before]",
      "296:             </wsdl:fault>",
      "297:         </wsdl:operation>",
      "298:     </wsdl:binding>",
      "299:     <wsdl:binding name=\"DoubleItSymmetricProtectTokensBinding\" type=\"tns:DoubleItPortType\">",
      "300:         <wsp:PolicyReference URI=\"#DoubleItSymmetricProtectTokensPolicy\" />",
      "301:         <soap:binding style=\"document\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "299:     <wsdl:binding name=\"DoubleItSymmetricUsernameTokenBinding\" type=\"tns:DoubleItPortType\">",
      "300:         <wsp:PolicyReference URI=\"#DoubleItSymmetricUsernameTokenPolicy\"/>",
      "301:         <soap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>",
      "302:         <wsdl:operation name=\"DoubleIt\">",
      "303:             <soap:operation soapAction=\"\"/>",
      "304:             <wsdl:input>",
      "305:                 <soap:body use=\"literal\"/>",
      "306:                 <wsp:PolicyReference URI=\"#DoubleItBinding_DoubleIt_Input_Policy\"/>",
      "307:             </wsdl:input>",
      "308:             <wsdl:output>",
      "309:                 <soap:body use=\"literal\"/>",
      "310:                 <wsp:PolicyReference URI=\"#DoubleItBinding_DoubleIt_Output_Policy\"/>",
      "311:             </wsdl:output>",
      "312:             <wsdl:fault name=\"DoubleItFault\">",
      "313:                 <soap:body use=\"literal\" name=\"DoubleItFault\"/>",
      "314:             </wsdl:fault>",
      "315:         </wsdl:operation>",
      "316:     </wsdl:binding>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "514:                    binding=\"tns:DoubleItAsymmetricUsernameTokenBinding\">",
      "515:             <soap:address location=\"http://localhost:9001/DoubleItX509AsymmetricUsernameToken\" />",
      "516:         </wsdl:port>",
      "517:         <wsdl:port name=\"DoubleItSymmetricProtectTokensPort\"",
      "518:                    binding=\"tns:DoubleItSymmetricProtectTokensBinding\">",
      "519:             <soap:address location=\"http://localhost:9001/DoubleItX509SymmetricProtect\" />",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "535:         <wsdl:port name=\"DoubleItSymmetricUsernameTokenPort\" binding=\"tns:DoubleItSymmetricUsernameTokenBinding\">",
      "536:             <soap:address location=\"http://localhost:9001/DoubleItX509SymmetricUsernameToken\"/>",
      "537:         </wsdl:port>",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1086:       </wsp:ExactlyOne>",
      "1087:     </wsp:Policy>",
      "1089:     <wsp:Policy wsu:Id=\"DoubleItSymmetricProtectTokensPolicy\">",
      "1090:         <wsp:ExactlyOne>",
      "1091:             <wsp:All>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1108:     </wsp:Policy>",
      "1110:     <wsp:Policy wsu:Id=\"DoubleItSymmetricUsernameTokenPolicy\">",
      "1111:         <wsp:ExactlyOne>",
      "1112:             <wsp:All>",
      "1113:                 <sp:SymmetricBinding>",
      "1114:                     <wsp:Policy>",
      "1115:                         <sp:ProtectionToken>",
      "1116:                             <wsp:Policy>",
      "1117:                                 <sp:X509Token sp:IncludeToken=\"http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/Never\">",
      "1118:                                     <wsp:Policy>",
      "1119:                                         <sp:WssX509V3Token11/>",
      "1120:                                         <sp:RequireThumbprintReference/>",
      "1121:                                     </wsp:Policy>",
      "1122:                                 </sp:X509Token>",
      "1123:                             </wsp:Policy>",
      "1124:                         </sp:ProtectionToken>",
      "1125:                         <sp:Layout>",
      "1126:                             <wsp:Policy>",
      "1127:                                 <sp:Lax/>",
      "1128:                             </wsp:Policy>",
      "1129:                         </sp:Layout>",
      "1130:                         <sp:IncludeTimestamp/>",
      "1131:                         <sp:OnlySignEntireHeadersAndBody/>",
      "1132:                         <sp:EncryptBeforeSigning/>",
      "1133:                         <sp:AlgorithmSuite>",
      "1134:                             <wsp:Policy>",
      "1135:                                 <sp:Basic128/>",
      "1136:                             </wsp:Policy>",
      "1137:                         </sp:AlgorithmSuite>",
      "1138:                     </wsp:Policy>",
      "1139:                 </sp:SymmetricBinding>",
      "1140:                 <sp:EncryptedSupportingTokens>",
      "1141:                     <wsp:Policy>",
      "1142:                         <sp:UsernameToken sp:IncludeToken=\"http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient\">",
      "1143:                             <wsp:Policy>",
      "1144:                                 <sp:WssUsernameToken11/>",
      "1145:                             </wsp:Policy>",
      "1146:                         </sp:UsernameToken>",
      "1147:                     </wsp:Policy>",
      "1148:                 </sp:EncryptedSupportingTokens>",
      "1149:             </wsp:All>",
      "1150:         </wsp:ExactlyOne>",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c08d14a742d5c9705d662aa6692fe1c81b95cabe",
      "candidate_info": {
        "commit_hash": "c08d14a742d5c9705d662aa6692fe1c81b95cabe",
        "repo": "apache/cxf",
        "commit_url": "https://github.com/apache/cxf/commit/c08d14a742d5c9705d662aa6692fe1c81b95cabe",
        "files": [
          "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AsymmetricBindingHandler.java",
          "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
          "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl",
          "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/client.xml",
          "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/server.xml"
        ],
        "message": "[CXF-5199] - Using an EncryptBeforeSigning policy with no EncryptedParts/Elements results in no Signature in the request\n\ngit-svn-id: https://svn.apache.org/repos/asf/cxf/trunk@1513496 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AsymmetricBindingHandler.java||rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AsymmetricBindingHandler.java",
          "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java||systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
          "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl||systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java||systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
            "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl||systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl"
          ],
          "candidate": [
            "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java||systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
            "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl||systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl"
          ]
        }
      },
      "candidate_diff": {
        "rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AsymmetricBindingHandler.java||rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AsymmetricBindingHandler.java": [
          "File: rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AsymmetricBindingHandler.java -> rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/AsymmetricBindingHandler.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "276:         if (encryptionToken != null && encrParts.size() > 0) {",
          "278:             handleEncryptedSignedHeaders(encrParts, sigParts);",
          "296:             try {",
          "298:                     doSignature(initiatorWrapper, sigParts, attached);",
          "299:                 } else if (!isRequestor()) {",
          "301:                     if (recipientSignatureToken == null) {",
          "302:                         recipientSignatureToken = abinding.getRecipientToken();",
          "303:                     }",
          "",
          "[Removed Lines]",
          "277:             WSSecBase encrBase = doEncryption(wrapper, encrParts, true);",
          "280:             if (timestampEl != null) {",
          "281:                 WSEncryptionPart timestampPart =",
          "282:                     convertToEncryptionPart(timestampEl.getElement());",
          "283:                 sigParts.add(timestampPart);",
          "284:             }",
          "286:             if (isRequestor()) {",
          "287:                 try {",
          "288:                     addSupportingTokens(sigParts);",
          "289:                 } catch (WSSecurityException ex) {",
          "290:                     policyNotAsserted(encryptionToken, ex);",
          "291:                 }",
          "292:             } else {",
          "293:                 addSignatureConfirmation(sigParts);",
          "294:             }",
          "297:                 if ((sigParts.size() > 0) && initiatorWrapper != null && isRequestor()) {",
          "300:                     AbstractTokenWrapper recipientSignatureToken = abinding.getRecipientSignatureToken();",
          "",
          "[Added Lines]",
          "276:         WSSecBase encrBase = null;",
          "278:             encrBase = doEncryption(wrapper, encrParts, true);",
          "280:         }",
          "282:         if (timestampEl != null) {",
          "283:             WSEncryptionPart timestampPart =",
          "284:                 convertToEncryptionPart(timestampEl.getElement());",
          "285:             sigParts.add(timestampPart);",
          "286:         }",
          "288:         if (isRequestor()) {",
          "290:                 addSupportingTokens(sigParts);",
          "291:             } catch (WSSecurityException ex) {",
          "292:                 policyNotAsserted(encryptionToken, ex);",
          "293:             }",
          "294:         } else {",
          "295:             addSignatureConfirmation(sigParts);",
          "296:         }",
          "298:         try {",
          "299:             if (sigParts.size() > 0) {",
          "300:                 if (initiatorWrapper != null && isRequestor()) {",
          "303:                     AbstractTokenWrapper recipientSignatureToken =",
          "304:                         abinding.getRecipientSignatureToken();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "305:                         doSignature(recipientSignatureToken, sigParts, attached);",
          "306:                     }",
          "307:                 }",
          "312:             }",
          "318:             encryptTokensInSecurityHeader(encryptionToken, encrBase);",
          "319:         }",
          "320:     }",
          "",
          "[Removed Lines]",
          "308:             } catch (WSSecurityException ex) {",
          "309:                 throw new Fault(ex);",
          "310:             } catch (SOAPException ex) {",
          "311:                 throw new Fault(ex);",
          "314:             if (isRequestor()) {",
          "315:                 doEndorse();",
          "316:             }",
          "",
          "[Added Lines]",
          "313:         } catch (WSSecurityException ex) {",
          "314:             throw new Fault(ex);",
          "315:         } catch (SOAPException ex) {",
          "316:             throw new Fault(ex);",
          "317:         }",
          "319:         if (isRequestor()) {",
          "320:             doEndorse();",
          "321:         }",
          "323:         if (encrBase != null) {",
          "",
          "---------------"
        ],
        "systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java||systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java": [
          "File: systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java -> systests/ws-security/src/test/java/org/apache/cxf/systest/ws/x509/X509TokenTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "411:         bus.shutdown(true);",
          "412:     }",
          "414:     @org.junit.Test",
          "415:     public void testAsymmetricEncryptSignature() throws Exception {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "414:     @org.junit.Test",
          "415:     public void testAsymmetricEncryptBeforeSigningNoEnc() throws Exception {",
          "417:         SpringBusFactory bf = new SpringBusFactory();",
          "418:         URL busFile = X509TokenTest.class.getResource(\"client.xml\");",
          "420:         Bus bus = bf.createBus(busFile.toString());",
          "421:         SpringBusFactory.setDefaultBus(bus);",
          "422:         SpringBusFactory.setThreadDefaultBus(bus);",
          "424:         URL wsdl = X509TokenTest.class.getResource(\"DoubleItX509.wsdl\");",
          "425:         Service service = Service.create(wsdl, SERVICE_QNAME);",
          "426:         QName portQName = new QName(NAMESPACE, \"DoubleItAsymmetricEncryptBeforeSigningNoEncPort\");",
          "427:         DoubleItPortType x509Port =",
          "428:                 service.getPort(portQName, DoubleItPortType.class);",
          "429:         updateAddressPort(x509Port, PORT);",
          "432:         x509Port.doubleIt(25);",
          "438:         ((java.io.Closeable)x509Port).close();",
          "439:         bus.shutdown(true);",
          "440:     }",
          "",
          "---------------"
        ],
        "systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl||systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl": [
          "File: systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl -> systests/ws-security/src/test/resources/org/apache/cxf/systest/ws/x509/DoubleItX509.wsdl",
          "--- Hunk 1 ---",
          "[Context before]",
          "220:             </wsdl:fault>",
          "221:         </wsdl:operation>",
          "222:     </wsdl:binding>",
          "223:     <wsdl:binding name=\"DoubleItAsymmetricEncryptSignatureBinding\" type=\"tns:DoubleItPortType\">",
          "224:         <wsp:PolicyReference URI=\"#DoubleItAsymmetricEncryptSignaturePolicy\" />",
          "225:         <soap:binding style=\"document\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "223:     <wsdl:binding name=\"DoubleItAsymmetricEncryptBeforeSigningNoEncBinding\" type=\"tns:DoubleItPortType\">",
          "224:         <wsp:PolicyReference URI=\"#DoubleItAsymmetricEncryptBeforeSigningPolicy\" />",
          "225:         <soap:binding style=\"document\"",
          "226:             transport=\"http://schemas.xmlsoap.org/soap/http\" />",
          "227:         <wsdl:operation name=\"DoubleIt\">",
          "228:             <soap:operation soapAction=\"\" />",
          "229:             <wsdl:input>",
          "230:                 <soap:body use=\"literal\" />",
          "231:                 <wsp:PolicyReference URI=\"#DoubleItBinding_DoubleIt_NoEnc_Policy\"/>",
          "232:             </wsdl:input>",
          "233:             <wsdl:output>",
          "234:                 <soap:body use=\"literal\" />",
          "235:                 <wsp:PolicyReference URI=\"#DoubleItBinding_DoubleIt_NoEnc_Policy\"/>",
          "236:             </wsdl:output>",
          "237:             <wsdl:fault name=\"DoubleItFault\">",
          "238:                 <soap:body use=\"literal\" name=\"DoubleItFault\" />",
          "239:             </wsdl:fault>",
          "240:         </wsdl:operation>",
          "241:     </wsdl:binding>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "480:                    binding=\"tns:DoubleItAsymmetricEncryptBeforeSigningBinding\">",
          "481:             <soap:address location=\"http://localhost:9001/DoubleItX509AsymmetricEncryptBeforeSigning\" />",
          "482:         </wsdl:port>",
          "483:         <wsdl:port name=\"DoubleItAsymmetricEncryptSignaturePort\"",
          "484:                    binding=\"tns:DoubleItAsymmetricEncryptSignatureBinding\">",
          "485:             <soap:address location=\"http://localhost:9001/DoubleItX509AsymmetricEncryptSignature\" />",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "502:         <wsdl:port name=\"DoubleItAsymmetricEncryptBeforeSigningNoEncPort\"",
          "503:                    binding=\"tns:DoubleItAsymmetricEncryptBeforeSigningNoEncBinding\">",
          "504:             <soap:address location=\"http://localhost:9001/DoubleItX509AsymmetricEncryptBeforeSigningNoEnc\" />",
          "505:         </wsdl:port>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1381:          </wsp:All>",
          "1382:       </wsp:ExactlyOne>",
          "1383:    </wsp:Policy>",
          "1384:    <wsp:Policy wsu:Id=\"DoubleItBinding_DoubleIt_Output_Policy\">",
          "1385:       <wsp:ExactlyOne>",
          "1386:          <wsp:All>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1407:    <wsp:Policy wsu:Id=\"DoubleItBinding_DoubleIt_NoEnc_Policy\">",
          "1408:       <wsp:ExactlyOne>",
          "1409:          <wsp:All>",
          "1410:             <sp:SignedParts>",
          "1411:                <sp:Body/>",
          "1412:             </sp:SignedParts>",
          "1413:          </wsp:All>",
          "1414:       </wsp:ExactlyOne>",
          "1415:    </wsp:Policy>",
          "",
          "---------------"
        ]
      }
    }
  ]
}