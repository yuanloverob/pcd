{
  "cve_id": "CVE-2019-10910",
  "cve_desc": "In Symfony before 2.7.51, 2.8.x before 2.8.50, 3.x before 3.4.26, 4.x before 4.1.12, and 4.2.x before 4.2.7, when service ids allow user input, this could allow for SQL Injection and remote code execution. This is related to symfony/dependency-injection.",
  "repo": "symfony/symfony",
  "patch_hash": "d2fb5893923292a1da7985f0b56960b5bb10737b",
  "patch_info": {
    "commit_hash": "d2fb5893923292a1da7985f0b56960b5bb10737b",
    "repo": "symfony/symfony",
    "commit_url": "https://github.com/symfony/symfony/commit/d2fb5893923292a1da7985f0b56960b5bb10737b",
    "files": [
      "src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php",
      "src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
      "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
      "src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php",
      "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php"
    ],
    "message": "[DI] Check service IDs are valid",
    "before_after_code_files": [
      "src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php||src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php",
      "src/Symfony/Component/DependencyInjection/ContainerBuilder.php||src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
      "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
      "src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php||src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php",
      "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php"
    ]
  },
  "patch_diff": {
    "src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php||src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php": [
      "File: src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php -> src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "58:         $instantiation = 'return';",
      "60:         if ($definition->isShared()) {",
      "62:         }",
      "64:         if (null === $factoryCode) {",
      "",
      "[Removed Lines]",
      "61:             $instantiation .= sprintf(' $this->%s[\\'%s\\'] =', \\method_exists(ContainerBuilder::class, 'addClassResource') || ($definition->isPublic() && !$definition->isPrivate()) ? 'services' : 'privates', $id);",
      "",
      "[Added Lines]",
      "61:             $instantiation .= sprintf(' $this->%s[%s] =', \\method_exists(ContainerBuilder::class, 'addClassResource') || ($definition->isPublic() && !$definition->isPrivate()) ? 'services' : 'privates', var_export($id, true));",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/ContainerBuilder.php||src/Symfony/Component/DependencyInjection/ContainerBuilder.php": [
      "File: src/Symfony/Component/DependencyInjection/ContainerBuilder.php -> src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "868:     {",
      "869:         $alias = $this->normalizeId($alias);",
      "871:         if (\\is_string($id)) {",
      "872:             $id = new Alias($this->normalizeId($id));",
      "873:         } elseif (!$id instanceof Alias) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "871:         if ('' === $alias || '\\\\' === substr($alias, -1) || \\strlen($alias) !== strcspn($alias, \"\\0\\r\\n'\")) {",
      "872:             throw new InvalidArgumentException(sprintf('Invalid alias id: \"%s\"', $alias));",
      "873:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1022:         $id = $this->normalizeId($id);",
      "1024:         unset($this->aliasDefinitions[$id], $this->removedIds[$id]);",
      "1026:         return $this->definitions[$id] = $definition;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1028:         if ('' === $id || '\\\\' === substr($id, -1) || \\strlen($id) !== strcspn($id, \"\\0\\r\\n'\")) {",
      "1029:             throw new InvalidArgumentException(sprintf('Invalid service id: \"%s\"', $id));",
      "1030:         }",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php": [
      "File: src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php -> src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "483:         $instantiation = '';",
      "485:         if (!$isProxyCandidate && $definition->isShared()) {",
      "487:         } elseif (!$isSimpleInstance) {",
      "488:             $instantiation = '$instance';",
      "489:         }",
      "",
      "[Removed Lines]",
      "486:             $instantiation = \"\\$this->services['$id'] = \".($isSimpleInstance ? '' : '$instance');",
      "",
      "[Added Lines]",
      "486:             $instantiation = sprintf('$this->services[%s] = %s', $this->doExport($id), $isSimpleInstance ? '' : '$instance');",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "683:     protected function {$methodName}($lazyInitialization)",
      "684:     {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "682: EOF;",
      "683:             $code = str_replace('*/', ' ', $code).<<<EOF",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "694:         if ($this->getProxyDumper()->isProxyCandidate($definition)) {",
      "695:             $factoryCode = $asFile ? \"\\$this->load('%s.php', false)\" : '$this->%s(false)';",
      "697:         }",
      "699:         if ($definition->isDeprecated()) {",
      "",
      "[Removed Lines]",
      "696:             $code .= $this->getProxyDumper()->getProxyFactoryCode($definition, $id, sprintf($factoryCode, $methodName));",
      "",
      "[Added Lines]",
      "699:             $code .= $this->getProxyDumper()->getProxyFactoryCode($definition, $id, sprintf($factoryCode, $methodName, $this->doExport($id)));",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "768:         $code .= sprintf(<<<'EOTXT'",
      "772:         }",
      "774: EOTXT",
      "775:             ,",
      "776:             'services',",
      "778:         );",
      "780:         return $code;",
      "",
      "[Removed Lines]",
      "770:         if (isset($this->%s['%s'])) {",
      "771:             return $this->%1$s['%2$s'];",
      "777:             $id",
      "",
      "[Added Lines]",
      "773:         if (isset($this->%s[%s])) {",
      "774:             return $this->%1$s[%2$s];",
      "780:             $this->doExport($id)",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1530:             if (!$this->container->hasDefinition($service)) {",
      "1531:                 return 'false';",
      "1532:             }",
      "1534:         }",
      "1535:         foreach (ContainerBuilder::getServiceConditionals($value) as $service) {",
      "1536:             if ($this->container->hasDefinition($service) && !$this->container->getDefinition($service)->isPublic()) {",
      "1537:                 continue;",
      "1538:             }",
      "1541:         }",
      "1543:         if (!$conditions) {",
      "",
      "[Removed Lines]",
      "1533:             $conditions[] = sprintf(\"isset(\\$this->services['%s'])\", $service);",
      "1540:             $conditions[] = sprintf(\"\\$this->has('%s')\", $service);",
      "",
      "[Added Lines]",
      "1536:             $conditions[] = sprintf('isset($this->services[%s])', $this->doExport($service));",
      "1543:             $conditions[] = sprintf('$this->has(%s)', $this->doExport($service));",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1777:     private function dumpParameter($name)",
      "1778:     {",
      "1779:         if ($this->container->isCompiled() && $this->container->hasParameter($name)) {",
      "1780:             $value = $this->container->getParameter($name);",
      "1781:             $dumpedValue = $this->dumpValue($value, false);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1782:         $name = (string) $name;",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1785:             }",
      "1787:             if (!preg_match(\"/\\\\\\$this->(?:getEnv\\('(?:\\w++:)*+\\w++'\\)|targetDirs\\[\\d++\\])/\", $dumpedValue)) {",
      "1789:             }",
      "1790:         }",
      "1793:     }",
      "",
      "[Removed Lines]",
      "1788:                 return sprintf(\"\\$this->parameters['%s']\", $name);",
      "1792:         return sprintf(\"\\$this->getParameter('%s')\", $name);",
      "",
      "[Added Lines]",
      "1793:                 return sprintf('$this->parameters[%s]', $this->doExport($name));",
      "1797:         return sprintf('$this->getParameter(%s)', $this->doExport($name));",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1814:         if ($this->container->hasDefinition($id) && $definition = $this->container->getDefinition($id)) {",
      "1815:             if ($definition->isSynthetic()) {",
      "1817:             } elseif (null !== $reference && ContainerInterface::IGNORE_ON_UNINITIALIZED_REFERENCE === $reference->getInvalidBehavior()) {",
      "1818:                 $code = 'null';",
      "1819:                 if (!$definition->isShared()) {",
      "",
      "[Removed Lines]",
      "1816:                 $code = sprintf('$this->get(\\'%s\\'%s)', $id, null !== $reference ? ', '.$reference->getInvalidBehavior() : '');",
      "",
      "[Added Lines]",
      "1821:                 $code = sprintf('$this->get(%s%s)', $this->doExport($id), null !== $reference ? ', '.$reference->getInvalidBehavior() : '');",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1822:             } elseif ($this->isTrivialInstance($definition)) {",
      "1823:                 $code = substr($this->addNewInstance($definition, '', '', $id), 8, -2);",
      "1824:                 if ($definition->isShared()) {",
      "1826:                 }",
      "1827:                 $code = \"($code)\";",
      "1828:             } elseif ($this->asFiles && $definition->isShared() && !$this->isHotPath($definition)) {",
      "",
      "[Removed Lines]",
      "1825:                     $code = sprintf('$this->services[\\'%s\\'] = %s', $id, $code);",
      "",
      "[Added Lines]",
      "1830:                     $code = sprintf('$this->services[%s] = %s', $this->doExport($id), $code);",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1833:         } elseif (null !== $reference && ContainerInterface::IGNORE_ON_UNINITIALIZED_REFERENCE === $reference->getInvalidBehavior()) {",
      "1834:             return 'null';",
      "1835:         } elseif (null !== $reference && ContainerInterface::EXCEPTION_ON_INVALID_REFERENCE !== $reference->getInvalidBehavior()) {",
      "1837:         } else {",
      "1839:         }",
      "1844:     }",
      "",
      "[Removed Lines]",
      "1836:             $code = sprintf('$this->get(\\'%s\\', /* ContainerInterface::NULL_ON_INVALID_REFERENCE */ %d)', $id, ContainerInterface::NULL_ON_INVALID_REFERENCE);",
      "1838:             $code = sprintf('$this->get(\\'%s\\')', $id);",
      "1843:         return \"\\${(\\$_ = isset(\\$this->services['$id']) ? \\$this->services['$id'] : $code) && false ?: '_'}\";",
      "",
      "[Added Lines]",
      "1841:             $code = sprintf('$this->get(%s, /* ContainerInterface::NULL_ON_INVALID_REFERENCE */ %d)', $this->doExport($id), ContainerInterface::NULL_ON_INVALID_REFERENCE);",
      "1843:             $code = sprintf('$this->get(%s)', $this->doExport($id));",
      "1848:         return sprintf(\"\\${(\\$_ = isset(\\$this->services[%s]) ? \\$this->services[%1\\$s] : %s) && false ?: '_'}\", $this->doExport($id), $code);",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php||src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php -> src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "195:         $this->assertNotSame($builder->get('bar'), $builder->get('bar'));",
      "196:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "202:     public function testBadAliasId($id)",
      "203:     {",
      "204:         $builder = new ContainerBuilder();",
      "205:         $builder->setAlias($id, 'foo');",
      "206:     }",
      "212:     public function testBadDefinitionId($id)",
      "213:     {",
      "214:         $builder = new ContainerBuilder();",
      "215:         $builder->setDefinition($id, new Definition('Foo'));",
      "216:     }",
      "218:     public function provideBadId()",
      "219:     {",
      "220:         return [",
      "221:             [''],",
      "222:             [\"\\0\"],",
      "223:             [\"\\r\"],",
      "224:             [\"\\n\"],",
      "225:             [\"'\"],",
      "226:             ['ab\\\\'],",
      "227:         ];",
      "228:     }",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php -> src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "234:     {",
      "235:         $class = 'Symfony_DI_PhpDumper_Test_Unsupported_Characters';",
      "236:         $container = new ContainerBuilder();",
      "237:         $container->register('bar$', 'FooClass')->setPublic(true);",
      "238:         $container->register('bar$!', 'FooClass')->setPublic(true);",
      "239:         $container->compile();",
      "240:         $dumper = new PhpDumper($container);",
      "243:         $this->assertTrue(method_exists($class, 'getBarService'));",
      "244:         $this->assertTrue(method_exists($class, 'getBar2Service'));",
      "245:     }",
      "",
      "[Removed Lines]",
      "241:         eval('?>'.$dumper->dump(['class' => $class]));",
      "",
      "[Added Lines]",
      "237:         $container->setParameter(\"'\", 'oh-no');",
      "238:         $container->register(\"foo*/oh-no\", 'FooClass')->setPublic(true);",
      "244:         $this->assertStringEqualsFile(self::$fixturesPath.'/php/services_unsupported_characters.php', $dumper->dump(['class' => $class]));",
      "246:         require_once self::$fixturesPath.'/php/services_unsupported_characters.php';",
      "248:         $this->assertTrue(method_exists($class, 'getFooOhNoService'));",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "67:     protected function getFooService()",
      "68:     {",
      "70:     }",
      "",
      "[Removed Lines]",
      "69:         return $this->services['Bar\\Foo'] = new \\Bar\\Foo();",
      "",
      "[Added Lines]",
      "69:         return $this->services['Bar\\\\Foo'] = new \\Bar\\Foo();",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "77:     protected function getFoo2Service()",
      "78:     {",
      "80:     }",
      "81: }",
      "",
      "[Removed Lines]",
      "79:         return $this->services['Foo\\Foo'] = new \\Foo\\Foo();",
      "",
      "[Added Lines]",
      "79:         return $this->services['Foo\\\\Foo'] = new \\Foo\\Foo();",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "89:     protected function getBusService()",
      "90:     {",
      "96:         return $instance;",
      "97:     }",
      "",
      "[Removed Lines]",
      "91:         $this->services['App\\Bus'] = $instance = new \\App\\Bus(${($_ = isset($this->services['App\\Db']) ? $this->services['App\\Db'] : $this->getDbService()) && false ?: '_'});",
      "93:         $instance->handler1 = ${($_ = isset($this->services['App\\Handler1']) ? $this->services['App\\Handler1'] : $this->getHandler1Service()) && false ?: '_'};",
      "94:         $instance->handler2 = ${($_ = isset($this->services['App\\Handler2']) ? $this->services['App\\Handler2'] : $this->getHandler2Service()) && false ?: '_'};",
      "",
      "[Added Lines]",
      "91:         $this->services['App\\\\Bus'] = $instance = new \\App\\Bus(${($_ = isset($this->services['App\\\\Db']) ? $this->services['App\\\\Db'] : $this->getDbService()) && false ?: '_'});",
      "93:         $instance->handler1 = ${($_ = isset($this->services['App\\\\Handler1']) ? $this->services['App\\\\Handler1'] : $this->getHandler1Service()) && false ?: '_'};",
      "94:         $instance->handler2 = ${($_ = isset($this->services['App\\\\Handler2']) ? $this->services['App\\\\Handler2'] : $this->getHandler2Service()) && false ?: '_'};",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "104:     protected function getDbService()",
      "105:     {",
      "110:         return $instance;",
      "111:     }",
      "",
      "[Removed Lines]",
      "106:         $this->services['App\\Db'] = $instance = new \\App\\Db();",
      "108:         $instance->schema = ${($_ = isset($this->services['App\\Schema']) ? $this->services['App\\Schema'] : $this->getSchemaService()) && false ?: '_'};",
      "",
      "[Added Lines]",
      "106:         $this->services['App\\\\Db'] = $instance = new \\App\\Db();",
      "108:         $instance->schema = ${($_ = isset($this->services['App\\\\Schema']) ? $this->services['App\\\\Schema'] : $this->getSchemaService()) && false ?: '_'};",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "118:     protected function getHandler1Service()",
      "119:     {",
      "124:         }",
      "127:     }",
      "",
      "[Removed Lines]",
      "120:         $a = ${($_ = isset($this->services['App\\Processor']) ? $this->services['App\\Processor'] : $this->getProcessorService()) && false ?: '_'};",
      "122:         if (isset($this->services['App\\Handler1'])) {",
      "123:             return $this->services['App\\Handler1'];",
      "126:         return $this->services['App\\Handler1'] = new \\App\\Handler1(${($_ = isset($this->services['App\\Db']) ? $this->services['App\\Db'] : $this->getDbService()) && false ?: '_'}, ${($_ = isset($this->services['App\\Schema']) ? $this->services['App\\Schema'] : $this->getSchemaService()) && false ?: '_'}, $a);",
      "",
      "[Added Lines]",
      "120:         $a = ${($_ = isset($this->services['App\\\\Processor']) ? $this->services['App\\\\Processor'] : $this->getProcessorService()) && false ?: '_'};",
      "122:         if (isset($this->services['App\\\\Handler1'])) {",
      "123:             return $this->services['App\\\\Handler1'];",
      "126:         return $this->services['App\\\\Handler1'] = new \\App\\Handler1(${($_ = isset($this->services['App\\\\Db']) ? $this->services['App\\\\Db'] : $this->getDbService()) && false ?: '_'}, ${($_ = isset($this->services['App\\\\Schema']) ? $this->services['App\\\\Schema'] : $this->getSchemaService()) && false ?: '_'}, $a);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "134:     protected function getHandler2Service()",
      "135:     {",
      "140:         }",
      "143:     }",
      "",
      "[Removed Lines]",
      "136:         $a = ${($_ = isset($this->services['App\\Processor']) ? $this->services['App\\Processor'] : $this->getProcessorService()) && false ?: '_'};",
      "138:         if (isset($this->services['App\\Handler2'])) {",
      "139:             return $this->services['App\\Handler2'];",
      "142:         return $this->services['App\\Handler2'] = new \\App\\Handler2(${($_ = isset($this->services['App\\Db']) ? $this->services['App\\Db'] : $this->getDbService()) && false ?: '_'}, ${($_ = isset($this->services['App\\Schema']) ? $this->services['App\\Schema'] : $this->getSchemaService()) && false ?: '_'}, $a);",
      "",
      "[Added Lines]",
      "136:         $a = ${($_ = isset($this->services['App\\\\Processor']) ? $this->services['App\\\\Processor'] : $this->getProcessorService()) && false ?: '_'};",
      "138:         if (isset($this->services['App\\\\Handler2'])) {",
      "139:             return $this->services['App\\\\Handler2'];",
      "142:         return $this->services['App\\\\Handler2'] = new \\App\\Handler2(${($_ = isset($this->services['App\\\\Db']) ? $this->services['App\\\\Db'] : $this->getDbService()) && false ?: '_'}, ${($_ = isset($this->services['App\\\\Schema']) ? $this->services['App\\\\Schema'] : $this->getSchemaService()) && false ?: '_'}, $a);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "150:     protected function getProcessorService()",
      "151:     {",
      "156:         }",
      "159:     }",
      "",
      "[Removed Lines]",
      "152:         $a = ${($_ = isset($this->services['App\\Registry']) ? $this->services['App\\Registry'] : $this->getRegistryService()) && false ?: '_'};",
      "154:         if (isset($this->services['App\\Processor'])) {",
      "155:             return $this->services['App\\Processor'];",
      "158:         return $this->services['App\\Processor'] = new \\App\\Processor($a, ${($_ = isset($this->services['App\\Db']) ? $this->services['App\\Db'] : $this->getDbService()) && false ?: '_'});",
      "",
      "[Added Lines]",
      "152:         $a = ${($_ = isset($this->services['App\\\\Registry']) ? $this->services['App\\\\Registry'] : $this->getRegistryService()) && false ?: '_'};",
      "154:         if (isset($this->services['App\\\\Processor'])) {",
      "155:             return $this->services['App\\\\Processor'];",
      "158:         return $this->services['App\\\\Processor'] = new \\App\\Processor($a, ${($_ = isset($this->services['App\\\\Db']) ? $this->services['App\\\\Db'] : $this->getDbService()) && false ?: '_'});",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "166:     protected function getRegistryService()",
      "167:     {",
      "172:         return $instance;",
      "173:     }",
      "",
      "[Removed Lines]",
      "168:         $this->services['App\\Registry'] = $instance = new \\App\\Registry();",
      "170:         $instance->processor = [0 => ${($_ = isset($this->services['App\\Db']) ? $this->services['App\\Db'] : $this->getDbService()) && false ?: '_'}, 1 => ${($_ = isset($this->services['App\\Bus']) ? $this->services['App\\Bus'] : $this->getBusService()) && false ?: '_'}];",
      "",
      "[Added Lines]",
      "168:         $this->services['App\\\\Registry'] = $instance = new \\App\\Registry();",
      "170:         $instance->processor = [0 => ${($_ = isset($this->services['App\\\\Db']) ? $this->services['App\\\\Db'] : $this->getDbService()) && false ?: '_'}, 1 => ${($_ = isset($this->services['App\\\\Bus']) ? $this->services['App\\\\Bus'] : $this->getBusService()) && false ?: '_'}];",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "180:     protected function getSchemaService()",
      "181:     {",
      "186:         }",
      "189:     }",
      "190: }",
      "",
      "[Removed Lines]",
      "182:         $a = ${($_ = isset($this->services['App\\Db']) ? $this->services['App\\Db'] : $this->getDbService()) && false ?: '_'};",
      "184:         if (isset($this->services['App\\Schema'])) {",
      "185:             return $this->services['App\\Schema'];",
      "188:         return $this->services['App\\Schema'] = new \\App\\Schema($a);",
      "",
      "[Added Lines]",
      "182:         $a = ${($_ = isset($this->services['App\\\\Db']) ? $this->services['App\\\\Db'] : $this->getDbService()) && false ?: '_'};",
      "184:         if (isset($this->services['App\\\\Schema'])) {",
      "185:             return $this->services['App\\\\Schema'];",
      "188:         return $this->services['App\\\\Schema'] = new \\App\\Schema($a);",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "88:     protected function getParentNotExistsService()",
      "89:     {",
      "91:     }",
      "",
      "[Removed Lines]",
      "90:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\ParentNotExists'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\ParentNotExists();",
      "",
      "[Added Lines]",
      "90:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\ParentNotExists'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\ParentNotExists();",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "98:     protected function getC1Service()",
      "99:     {",
      "101:     }",
      "",
      "[Removed Lines]",
      "100:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C1'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C1();",
      "",
      "[Added Lines]",
      "100:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\includes\\\\HotPath\\\\C1'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C1();",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "110:         include_once $this->targetDirs[1].'/includes/HotPath/C2.php';",
      "111:         include_once $this->targetDirs[1].'/includes/HotPath/C3.php';",
      "114:     }",
      "",
      "[Removed Lines]",
      "113:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C2'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C2(${($_ = isset($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3']) ? $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3'] : ($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3())) && false ?: '_'});",
      "",
      "[Added Lines]",
      "113:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\includes\\\\HotPath\\\\C2'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C2(${($_ = isset($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\includes\\\\HotPath\\\\C3']) ? $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\includes\\\\HotPath\\\\C3'] : ($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\includes\\\\HotPath\\\\C3'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3())) && false ?: '_'});",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "122:     {",
      "123:         include_once $this->targetDirs[1].'/includes/HotPath/C3.php';",
      "126:     }",
      "128:     public function getParameter($name)",
      "",
      "[Removed Lines]",
      "125:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3();",
      "",
      "[Added Lines]",
      "125:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\includes\\\\HotPath\\\\C3'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3();",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "69:         $b = new \\App\\Baz($a);",
      "70:         $b->bar = $a;",
      "74:         $a->foo = $instance;",
      "",
      "[Removed Lines]",
      "72:         $this->services['App\\Foo'] = $instance = new \\App\\Foo($b);",
      "",
      "[Added Lines]",
      "72:         $this->services['App\\\\Foo'] = $instance = new \\App\\Foo($b);",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "68:     protected function getRot13EnvVarProcessorService()",
      "69:     {",
      "71:     }",
      "",
      "[Removed Lines]",
      "70:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor();",
      "",
      "[Added Lines]",
      "70:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Dumper\\\\Rot13EnvVarProcessor'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor();",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "78:     protected function getContainer_EnvVarProcessorsLocatorService()",
      "79:     {",
      "80:         return $this->services['container.env_var_processors_locator'] = new \\Symfony\\Component\\DependencyInjection\\ServiceLocator(['rot13' => function () {",
      "82:         }]);",
      "83:     }",
      "",
      "[Removed Lines]",
      "81:             return ${($_ = isset($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor']) ? $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor'] : ($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor())) && false ?: '_'};",
      "",
      "[Added Lines]",
      "81:             return ${($_ = isset($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Dumper\\\\Rot13EnvVarProcessor']) ? $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Dumper\\\\Rot13EnvVarProcessor'] : ($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Dumper\\\\Rot13EnvVarProcessor'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor())) && false ?: '_'};",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "74:     protected function getTestServiceSubscriberService()",
      "75:     {",
      "77:     }",
      "",
      "[Removed Lines]",
      "76:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber();",
      "",
      "[Added Lines]",
      "76:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber();",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "84:     protected function getFooServiceService()",
      "85:     {",
      "86:         return $this->services['foo_service'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber((new \\Symfony\\Component\\DependencyInjection\\ServiceLocator(['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition' => function () {",
      "88:         }, 'Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber' => function () {",
      "90:         }, 'bar' => function () {",
      "92:         }, 'baz' => function () {",
      "94:         }]))->withContext('foo_service', $this));",
      "95:     }",
      "",
      "[Removed Lines]",
      "87:             $f = function (\\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition $v = null) { return $v; }; return $f(${($_ = isset($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition']) ? $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition'] : ($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition())) && false ?: '_'});",
      "89:             $f = function (\\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber $v) { return $v; }; return $f(${($_ = isset($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber']) ? $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber'] : ($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber())) && false ?: '_'});",
      "91:             $f = function (\\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition $v) { return $v; }; return $f(${($_ = isset($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber']) ? $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber'] : ($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber())) && false ?: '_'});",
      "93:             $f = function (\\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition $v = null) { return $v; }; return $f(${($_ = isset($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition']) ? $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition'] : ($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition())) && false ?: '_'});",
      "",
      "[Added Lines]",
      "87:             $f = function (\\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition $v = null) { return $v; }; return $f(${($_ = isset($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition']) ? $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition'] : ($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition())) && false ?: '_'});",
      "89:             $f = function (\\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber $v) { return $v; }; return $f(${($_ = isset($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber']) ? $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber'] : ($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber())) && false ?: '_'});",
      "91:             $f = function (\\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition $v) { return $v; }; return $f(${($_ = isset($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber']) ? $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber'] : ($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber())) && false ?: '_'});",
      "93:             $f = function (\\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition $v = null) { return $v; }; return $f(${($_ = isset($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition']) ? $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition'] : ($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition())) && false ?: '_'});",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "102:     protected function getCustomDefinitionService()",
      "103:     {",
      "105:     }",
      "106: }",
      "",
      "[Removed Lines]",
      "104:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition();",
      "",
      "[Added Lines]",
      "104:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition();",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <?php",
      "3: use Symfony\\Component\\DependencyInjection\\Argument\\RewindableGenerator;",
      "4: use Symfony\\Component\\DependencyInjection\\ContainerInterface;",
      "5: use Symfony\\Component\\DependencyInjection\\Container;",
      "6: use Symfony\\Component\\DependencyInjection\\Exception\\InvalidArgumentException;",
      "7: use Symfony\\Component\\DependencyInjection\\Exception\\LogicException;",
      "8: use Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException;",
      "9: use Symfony\\Component\\DependencyInjection\\ParameterBag\\FrozenParameterBag;",
      "17: class Symfony_DI_PhpDumper_Test_Unsupported_Characters extends Container",
      "18: {",
      "19:     private $parameters;",
      "20:     private $targetDirs = [];",
      "22:     public function __construct()",
      "23:     {",
      "24:         $this->parameters = $this->getDefaultParameters();",
      "26:         $this->services = [];",
      "27:         $this->methodMap = [",
      "28:             'bar$' => 'getBarService',",
      "29:             'bar$!' => 'getBar2Service',",
      "30:             'foo*/oh-no' => 'getFooohnoService',",
      "31:         ];",
      "33:         $this->aliases = [];",
      "34:     }",
      "36:     public function getRemovedIds()",
      "37:     {",
      "38:         return [",
      "39:             'Psr\\\\Container\\\\ContainerInterface' => true,",
      "40:             'Symfony\\\\Component\\\\DependencyInjection\\\\ContainerInterface' => true,",
      "41:         ];",
      "42:     }",
      "44:     public function compile()",
      "45:     {",
      "46:         throw new LogicException('You cannot compile a dumped container that was already compiled.');",
      "47:     }",
      "49:     public function isCompiled()",
      "50:     {",
      "51:         return true;",
      "52:     }",
      "54:     public function isFrozen()",
      "55:     {",
      "56:         @trigger_error(sprintf('The %s() method is deprecated since Symfony 3.3 and will be removed in 4.0. Use the isCompiled() method instead.', __METHOD__), E_USER_DEPRECATED);",
      "58:         return true;",
      "59:     }",
      "66:     protected function getBarService()",
      "67:     {",
      "68:         return $this->services['bar$'] = new \\FooClass();",
      "69:     }",
      "76:     protected function getBar2Service()",
      "77:     {",
      "78:         return $this->services['bar$!'] = new \\FooClass();",
      "79:     }",
      "86:     protected function getFooohnoService()",
      "87:     {",
      "88:         return $this->services['foo*/oh-no'] = new \\FooClass();",
      "89:     }",
      "91:     public function getParameter($name)",
      "92:     {",
      "93:         $name = (string) $name;",
      "94:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
      "95:             $name = $this->normalizeParameterName($name);",
      "97:             if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
      "98:                 throw new InvalidArgumentException(sprintf('The parameter \"%s\" must be defined.', $name));",
      "99:             }",
      "100:         }",
      "101:         if (isset($this->loadedDynamicParameters[$name])) {",
      "102:             return $this->loadedDynamicParameters[$name] ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);",
      "103:         }",
      "105:         return $this->parameters[$name];",
      "106:     }",
      "108:     public function hasParameter($name)",
      "109:     {",
      "110:         $name = (string) $name;",
      "111:         $name = $this->normalizeParameterName($name);",
      "113:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);",
      "114:     }",
      "116:     public function setParameter($name, $value)",
      "117:     {",
      "118:         throw new LogicException('Impossible to call set() on a frozen ParameterBag.');",
      "119:     }",
      "121:     public function getParameterBag()",
      "122:     {",
      "123:         if (null === $this->parameterBag) {",
      "124:             $parameters = $this->parameters;",
      "125:             foreach ($this->loadedDynamicParameters as $name => $loaded) {",
      "126:                 $parameters[$name] = $loaded ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);",
      "127:             }",
      "128:             $this->parameterBag = new FrozenParameterBag($parameters);",
      "129:         }",
      "131:         return $this->parameterBag;",
      "132:     }",
      "134:     private $loadedDynamicParameters = [];",
      "135:     private $dynamicParameters = [];",
      "146:     private function getDynamicParameter($name)",
      "147:     {",
      "148:         throw new InvalidArgumentException(sprintf('The dynamic parameter \"%s\" must be defined.', $name));",
      "149:     }",
      "151:     private $normalizedParameterNames = [];",
      "153:     private function normalizeParameterName($name)",
      "154:     {",
      "155:         if (isset($this->normalizedParameterNames[$normalizedName = strtolower($name)]) || isset($this->parameters[$normalizedName]) || array_key_exists($normalizedName, $this->parameters)) {",
      "156:             $normalizedName = isset($this->normalizedParameterNames[$normalizedName]) ? $this->normalizedParameterNames[$normalizedName] : $normalizedName;",
      "157:             if ((string) $name !== $normalizedName) {",
      "158:                 @trigger_error(sprintf('Parameter names will be made case sensitive in Symfony 4.0. Using \"%s\" instead of \"%s\" is deprecated since Symfony 3.4.', $name, $normalizedName), E_USER_DEPRECATED);",
      "159:             }",
      "160:         } else {",
      "161:             $normalizedName = $this->normalizedParameterNames[$normalizedName] = (string) $name;",
      "162:         }",
      "164:         return $normalizedName;",
      "165:     }",
      "172:     protected function getDefaultParameters()",
      "173:     {",
      "174:         return [",
      "175:             '\\'' => 'oh-no',",
      "176:         ];",
      "177:     }",
      "178: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e5c54053c430c9ead09a0a72fe464aeb98f486c8",
      "candidate_info": {
        "commit_hash": "e5c54053c430c9ead09a0a72fe464aeb98f486c8",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/e5c54053c430c9ead09a0a72fe464aeb98f486c8",
        "files": [
          "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_almost_circular_private.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_almost_circular_public.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_deep_graph.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/yaml/services_deep_graph.yml"
        ],
        "message": "[DI] configure inlined services before injecting them when dumping the container",
        "before_after_code_files": [
          "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_almost_circular_private.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_almost_circular_private.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_almost_circular_public.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_almost_circular_public.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_deep_graph.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_deep_graph.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
            "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php"
          ],
          "candidate": [
            "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
            "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php": [
          "File: src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php -> src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:     private $definitionVariables;",
          "56:     private $referenceVariables;",
          "57:     private $variableCount;",
          "59:     private $expressionLanguage;",
          "60:     private $targetDirRegex;",
          "61:     private $targetDirMaxMatches;",
          "",
          "[Removed Lines]",
          "58:     private $reservedVariables = array('instance', 'class');",
          "",
          "[Added Lines]",
          "58:     private $inlinedDefinitions;",
          "59:     private $serviceCalls;",
          "60:     private $reservedVariables = array('instance', 'class', 'this');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "295:         return $this->proxyDumper;",
          "296:     }",
          "355:     private function analyzeCircularReferences(array $edges, &$checkedNodes, &$currentPath)",
          "356:     {",
          "357:         foreach ($edges as $edge) {",
          "",
          "[Removed Lines]",
          "303:     private function addServiceLocalTempVariables($cId, Definition $definition, \\SplObjectStorage $inlinedDefinitions, array $serviceCalls, $preInstance = false)",
          "304:     {",
          "305:         $calls = array();",
          "307:         foreach ($inlinedDefinitions as $def) {",
          "308:             if ($preInstance && !$inlinedDefinitions[$def][1]) {",
          "309:                 continue;",
          "310:             }",
          "311:             $this->getServiceCallsFromArguments(array($def->getArguments(), $def->getFactory()), $calls, $preInstance, $cId);",
          "312:             if ($def !== $definition) {",
          "313:                 $arguments = array($def->getProperties(), $def->getMethodCalls(), $def->getConfigurator());",
          "314:                 $this->getServiceCallsFromArguments($arguments, $calls, $preInstance && !$this->hasReference($cId, $arguments, true), $cId);",
          "315:             }",
          "316:         }",
          "317:         if (!isset($inlinedDefinitions[$definition])) {",
          "318:             $arguments = array($definition->getProperties(), $definition->getMethodCalls(), $definition->getConfigurator());",
          "319:             $this->getServiceCallsFromArguments($arguments, $calls, false, $cId);",
          "320:         }",
          "322:         $code = '';",
          "323:         foreach ($calls as $id => list($callCount)) {",
          "324:             if ('service_container' === $id || $id === $cId || isset($this->referenceVariables[$id])) {",
          "325:                 continue;",
          "326:             }",
          "327:             if ($callCount <= 1 && $serviceCalls[$id][0] <= 1) {",
          "328:                 continue;",
          "329:             }",
          "331:             $name = $this->getNextVariableName();",
          "332:             $this->referenceVariables[$id] = new Variable($name);",
          "334:             $reference = ContainerInterface::EXCEPTION_ON_INVALID_REFERENCE === $serviceCalls[$id][1] ? new Reference($id, $serviceCalls[$id][1]) : null;",
          "335:             $code .= sprintf(\"        \\$%s = %s;\\n\", $name, $this->getServiceCall($id, $reference));",
          "336:         }",
          "338:         if ('' !== $code) {",
          "339:             if ($preInstance) {",
          "340:                 $code .= <<<EOTXT",
          "342:         if (isset(\\$this->services['$cId'])) {",
          "343:             return \\$this->services['$cId'];",
          "344:         }",
          "346: EOTXT;",
          "347:             }",
          "349:             $code .= \"\\n\";",
          "350:         }",
          "352:         return $code;",
          "353:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "440:     {",
          "441:         $code = '';",
          "443:         if ($this->inlineRequires && !$this->isHotPath($definition)) {",
          "444:             $lineage = array();",
          "446:                 if (!$def->isDeprecated() && \\is_string($class = \\is_array($factory = $def->getFactory()) && \\is_string($factory[0]) ? $factory[0] : $def->getClass())) {",
          "447:                     $this->collectLineage($class, $lineage);",
          "448:                 }",
          "449:             }",
          "452:                 if ('service_container' !== $id && $id !== $cId",
          "453:                     && ContainerInterface::IGNORE_ON_UNINITIALIZED_REFERENCE !== $behavior",
          "454:                     && $this->container->has($id)",
          "",
          "[Removed Lines]",
          "439:     private function addServiceInclude($cId, Definition $definition, \\SplObjectStorage $inlinedDefinitions, array $serviceCalls)",
          "445:             foreach ($inlinedDefinitions as $def) {",
          "451:             foreach ($serviceCalls as $id => list($callCount, $behavior)) {",
          "",
          "[Added Lines]",
          "384:     private function addServiceInclude($cId, Definition $definition)",
          "390:             foreach ($this->inlinedDefinitions as $def) {",
          "396:             foreach ($this->serviceCalls as $id => list($callCount, $behavior)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "464:             }",
          "465:         }",
          "468:             if ($file = $def->getFile()) {",
          "469:                 $code .= sprintf(\"        include_once %s;\\n\", $this->dumpValue($file));",
          "470:             }",
          "",
          "[Removed Lines]",
          "467:         foreach ($inlinedDefinitions as $def) {",
          "",
          "[Added Lines]",
          "412:         foreach ($this->inlinedDefinitions as $def) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "477:         return $code;",
          "478:     }",
          "",
          "[Removed Lines]",
          "488:     private function addServiceInlinedDefinitions($id, Definition $definition, \\SplObjectStorage $inlinedDefinitions, &$isSimpleInstance, $preInstance = false)",
          "489:     {",
          "490:         $code = '';",
          "492:         foreach ($inlinedDefinitions as $def) {",
          "493:             if ($definition === $def || isset($this->definitionVariables[$def])) {",
          "494:                 continue;",
          "495:             }",
          "496:             if ($inlinedDefinitions[$def][0] <= 1 && !$def->getMethodCalls() && !$def->getProperties() && !$def->getConfigurator() && false === strpos($this->dumpValue($def->getClass()), '$')) {",
          "497:                 continue;",
          "498:             }",
          "499:             if ($preInstance && !$inlinedDefinitions[$def][1]) {",
          "500:                 continue;",
          "501:             }",
          "503:             $name = $this->getNextVariableName();",
          "504:             $this->definitionVariables[$def] = new Variable($name);",
          "513:             if (isset($inlinedDefinitions[$definition]) && $this->hasReference($id, array($def->getArguments(), $def->getFactory()))) {",
          "514:                 throw new ServiceCircularReferenceException($id, array($id, '...', $id));",
          "515:             }",
          "517:             $code .= $this->addNewInstance($def, '$'.$name, ' = ', $id);",
          "519:             if (!$this->hasReference($id, array($def->getProperties(), $def->getMethodCalls(), $def->getConfigurator()), true, $inlinedDefinitions)) {",
          "520:                 $code .= $this->addServiceProperties($def, $name);",
          "521:                 $code .= $this->addServiceMethodCalls($def, $name);",
          "522:                 $code .= $this->addServiceConfigurator($def, $name);",
          "523:             } else {",
          "524:                 $isSimpleInstance = false;",
          "525:             }",
          "527:             $code .= \"\\n\";",
          "528:         }",
          "530:         return $code;",
          "531:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "566:             $instantiation .= ' = ';",
          "567:         }",
          "577:     }",
          "",
          "[Removed Lines]",
          "569:         $code = $this->addNewInstance($definition, $return, $instantiation, $id);",
          "570:         $this->referenceVariables[$id] = new Variable('instance');",
          "572:         if (!$isSimpleInstance) {",
          "573:             $code .= \"\\n\";",
          "574:         }",
          "576:         return $code;",
          "",
          "[Added Lines]",
          "461:         return $this->addNewInstance($definition, $return, $instantiation, $id);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "658:         return $code;",
          "659:     }",
          "",
          "[Removed Lines]",
          "668:     private function addServiceInlinedDefinitionsSetup($id, Definition $definition, \\SplObjectStorage $inlinedDefinitions, $isSimpleInstance)",
          "669:     {",
          "670:         $code = '';",
          "671:         foreach ($inlinedDefinitions as $def) {",
          "672:             if ($definition === $def || !$this->hasReference($id, array($def->getProperties(), $def->getMethodCalls(), $def->getConfigurator()), true, $inlinedDefinitions)) {",
          "673:                 continue;",
          "674:             }",
          "678:             if ($isSimpleInstance) {",
          "679:                 throw new ServiceCircularReferenceException($id, array($id, '...', $id));",
          "680:             }",
          "682:             $name = (string) $this->definitionVariables[$def];",
          "683:             $code .= $this->addServiceProperties($def, $name);",
          "684:             $code .= $this->addServiceMethodCalls($def, $name);",
          "685:             $code .= $this->addServiceConfigurator($def, $name);",
          "686:         }",
          "688:         if ('' !== $code && ($definition->getProperties() || $definition->getMethodCalls() || $definition->getConfigurator())) {",
          "689:             $code .= \"\\n\";",
          "690:         }",
          "692:         return $code;",
          "693:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "742:         $this->definitionVariables = new \\SplObjectStorage();",
          "743:         $this->referenceVariables = array();",
          "744:         $this->variableCount = 0;",
          "746:         $return = array();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "596:         $this->definitionVariables[$definition] = $this->referenceVariables[$id] = new Variable('instance');",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "801: EOF;",
          "802:         }",
          "804:         if ($this->getProxyDumper()->isProxyCandidate($definition)) {",
          "805:             $factoryCode = $asFile ? \"\\$this->load('%s.php', false)\" : '$this->%s(false)';",
          "806:             $code .= $this->getProxyDumper()->getProxyFactoryCode($definition, $id, sprintf($factoryCode, $methodName));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "656:         $this->serviceCalls = array();",
          "657:         $this->inlinedDefinitions = $this->getDefinitionsFromArguments(array($definition), null, $this->serviceCalls);",
          "659:         $code .= $this->addServiceInclude($id, $definition);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "810:             $code .= sprintf(\"        @trigger_error(%s, E_USER_DEPRECATED);\\n\\n\", $this->export($definition->getDeprecationMessage($id)));",
          "811:         }",
          "848:         if ($asFile) {",
          "849:             $code = implode(\"\\n\", array_map(function ($line) { return $line ? substr($line, 8) : $line; }, explode(\"\\n\", $code)));",
          "",
          "[Removed Lines]",
          "813:         $inlinedDefinitions = $this->getDefinitionsFromArguments(array($definition));",
          "814:         $constructorDefinitions = $this->getDefinitionsFromArguments(array($definition->getArguments(), $definition->getFactory()));",
          "815:         unset($constructorDefinitions[$definition]); // ensures $definition will be last",
          "816:         $otherDefinitions = new \\SplObjectStorage();",
          "817:         $serviceCalls = array();",
          "819:         foreach ($inlinedDefinitions as $def) {",
          "820:             if ($def === $definition || isset($constructorDefinitions[$def])) {",
          "821:                 $constructorDefinitions[$def] = $inlinedDefinitions[$def];",
          "822:             } else {",
          "823:                 $otherDefinitions[$def] = $inlinedDefinitions[$def];",
          "824:             }",
          "825:             $arguments = array($def->getArguments(), $def->getFactory(), $def->getProperties(), $def->getMethodCalls(), $def->getConfigurator());",
          "826:             $this->getServiceCallsFromArguments($arguments, $serviceCalls, false, $id);",
          "827:         }",
          "829:         $isSimpleInstance = !$definition->getProperties() && !$definition->getMethodCalls() && !$definition->getConfigurator();",
          "830:         $preInstance = isset($this->circularReferences[$id]) && !$this->getProxyDumper()->isProxyCandidate($definition) && $definition->isShared();",
          "832:         $code .=",
          "833:             $this->addServiceInclude($id, $definition, $inlinedDefinitions, $serviceCalls).",
          "834:             $this->addServiceLocalTempVariables($id, $definition, $constructorDefinitions, $serviceCalls, $preInstance).",
          "835:             $this->addServiceInlinedDefinitions($id, $definition, $constructorDefinitions, $isSimpleInstance, $preInstance).",
          "836:             $this->addServiceInstance($id, $definition, $isSimpleInstance).",
          "837:             $this->addServiceLocalTempVariables($id, $definition, $constructorDefinitions->offsetUnset($definition) ?: $constructorDefinitions, $serviceCalls).",
          "838:             $this->addServiceLocalTempVariables($id, $definition, $otherDefinitions, $serviceCalls).",
          "839:             $this->addServiceInlinedDefinitions($id, $definition, $constructorDefinitions, $isSimpleInstance).",
          "840:             $this->addServiceInlinedDefinitions($id, $definition, $otherDefinitions, $isSimpleInstance).",
          "841:             $this->addServiceInlinedDefinitionsSetup($id, $definition, $inlinedDefinitions, $isSimpleInstance).",
          "842:             $this->addServiceProperties($definition).",
          "843:             $this->addServiceMethodCalls($definition).",
          "844:             $this->addServiceConfigurator($definition).",
          "845:             (!$isSimpleInstance ? \"\\n        return \\$instance;\\n\" : '')",
          "846:         ;",
          "",
          "[Added Lines]",
          "670:         $head = $tail = '';",
          "671:         $arguments = array($definition->getArguments(), $definition->getFactory());",
          "672:         $this->addInlineVariables($head, $tail, $id, $arguments, true);",
          "673:         $code .= '' !== $head ? $head.\"\\n\" : '';",
          "675:         if ($arguments = array_filter(array($definition->getProperties(), $definition->getMethodCalls(), $definition->getConfigurator()))) {",
          "676:             $this->addInlineVariables($tail, $tail, $id, $arguments, false);",
          "678:             $tail .= '' !== $tail ? \"\\n\" : '';",
          "679:             $tail .= $this->addServiceProperties($definition);",
          "680:             $tail .= $this->addServiceMethodCalls($definition);",
          "681:             $tail .= $this->addServiceConfigurator($definition);",
          "682:         }",
          "684:         $code .= $this->addServiceInstance($id, $definition, '' === $tail)",
          "685:             .('' !== $tail ? \"\\n\".$tail.\"\\n        return \\$instance;\\n\" : '');",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "851:             $code .= \"    }\\n\";",
          "852:         }",
          "857:         return $code;",
          "858:     }",
          "",
          "[Removed Lines]",
          "854:         $this->definitionVariables = null;",
          "855:         $this->referenceVariables = null;",
          "",
          "[Added Lines]",
          "693:         $this->definitionVariables = $this->inlinedDefinitions = null;",
          "694:         $this->referenceVariables = $this->serviceCalls = null;",
          "699:     private function addInlineVariables(&$head, &$tail, $id, array $arguments, $forConstructor)",
          "700:     {",
          "701:         $hasSelfRef = false;",
          "703:         foreach ($arguments as $argument) {",
          "704:             if (\\is_array($argument)) {",
          "705:                 $hasSelfRef = $this->addInlineVariables($head, $tail, $id, $argument, $forConstructor) || $hasSelfRef;",
          "706:             } elseif ($argument instanceof Reference) {",
          "707:                 $hasSelfRef = $this->addInlineReference($head, $tail, $id, $this->container->normalizeId($argument), $forConstructor) || $hasSelfRef;",
          "708:             } elseif ($argument instanceof Definition) {",
          "709:                 $hasSelfRef = $this->addInlineService($head, $tail, $id, $argument, $forConstructor) || $hasSelfRef;",
          "710:             }",
          "711:         }",
          "713:         return $hasSelfRef;",
          "714:     }",
          "716:     private function addInlineReference(&$head, &$tail, $id, $targetId, $forConstructor)",
          "717:     {",
          "718:         if ('service_container' === $targetId || isset($this->referenceVariables[$targetId])) {",
          "719:             return isset($this->circularReferences[$id][$targetId]);",
          "720:         }",
          "722:         list($callCount, $behavior) = $this->serviceCalls[$targetId];",
          "724:         if (2 > $callCount && (!$forConstructor || !isset($this->circularReferences[$id][$targetId]))) {",
          "725:             return isset($this->circularReferences[$id][$targetId]);",
          "726:         }",
          "728:         $name = $this->getNextVariableName();",
          "729:         $this->referenceVariables[$targetId] = new Variable($name);",
          "731:         $reference = ContainerInterface::EXCEPTION_ON_INVALID_REFERENCE >= $behavior ? new Reference($targetId, $behavior) : null;",
          "732:         $code = sprintf(\"        \\$%s = %s;\\n\", $name, $this->getServiceCall($targetId, $reference));",
          "734:         if (!isset($this->circularReferences[$id][$targetId])) {",
          "735:             $head .= $code;",
          "737:             return false;",
          "738:         }",
          "740:         if (!$forConstructor) {",
          "741:             $tail .= $code;",
          "743:             return true;",
          "744:         }",
          "746:         $head .= $code.sprintf(<<<'EOTXT'",
          "748:         if (isset($this->%s['%s'])) {",
          "749:             return $this->%1$s['%2$s'];",
          "750:         }",
          "752: EOTXT",
          "753:             ,",
          "754:             $this->container->getDefinition($id)->isPublic() ? 'services' : 'privates',",
          "755:             $id",
          "756:         );",
          "758:         return false;",
          "759:     }",
          "761:     private function addInlineService(&$head, &$tail, $id, Definition $definition, $forConstructor)",
          "762:     {",
          "763:         if (isset($this->definitionVariables[$definition])) {",
          "764:             return false;",
          "765:         }",
          "767:         $arguments = array($definition->getArguments(), $definition->getFactory());",
          "769:         if (2 > $this->inlinedDefinitions[$definition] && !$definition->getMethodCalls() && !$definition->getProperties() && !$definition->getConfigurator() && false === strpos($this->dumpValue($definition->getClass()), '$')) {",
          "770:             return $this->addInlineVariables($head, $tail, $id, $arguments, $forConstructor);",
          "771:         }",
          "773:         $name = $this->getNextVariableName();",
          "774:         $this->definitionVariables[$definition] = new Variable($name);",
          "776:         $code = '';",
          "777:         $hasSelfRef = $this->addInlineVariables($code, $tail, $id, $arguments, $forConstructor);",
          "778:         $code .= $this->addNewInstance($definition, '$'.$name, ' = ', $id);",
          "779:         $hasSelfRef ? $tail .= ('' !== $tail ? \"\\n\" : '').$code : $head .= ('' !== $head ? \"\\n\" : '').$code;",
          "781:         $code = '';",
          "782:         $arguments = array($definition->getProperties(), $definition->getMethodCalls(), $definition->getConfigurator());",
          "783:         $hasSelfRef = $this->addInlineVariables($code, $tail, $id, $arguments, false) || $hasSelfRef;",
          "785:         $code .= $this->addServiceProperties($definition, $name);",
          "786:         $code .= $this->addServiceMethodCalls($definition, $name);",
          "787:         $code .= $this->addServiceConfigurator($definition, $name);",
          "788:         if ('' !== $code) {",
          "789:             $hasSelfRef ? $tail .= ('' !== $tail ? \"\\n\" : '').$code : $head .= $code;",
          "790:         }",
          "792:         return $hasSelfRef;",
          "793:     }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1574:         return implode(' && ', $conditions);",
          "1575:     }",
          "1583:     {",
          "1584:         foreach ($arguments as $argument) {",
          "1585:             if (\\is_array($argument)) {",
          "1587:             } elseif ($argument instanceof Reference) {",
          "1588:                 $id = $this->container->normalizeId($argument);",
          "1590:                 if (!isset($calls[$id])) {",
          "1592:                 } else {",
          "1593:                     $calls[$id][1] = min($calls[$id][1], $argument->getInvalidBehavior());",
          "1594:                 }",
          "1596:                 ++$calls[$id][0];",
          "1610:             } elseif (!$argument instanceof Definition) {",
          "1612:             } elseif (isset($definitions[$argument])) {",
          "1615:             } else {",
          "1626:             }",
          "1627:         }",
          "1629:         return $definitions;",
          "1630:     }",
          "",
          "[Removed Lines]",
          "1582:     private function getServiceCallsFromArguments(array $arguments, array &$calls, $preInstance, $callerId)",
          "1586:                 $this->getServiceCallsFromArguments($argument, $calls, $preInstance, $callerId);",
          "1591:                     $calls[$id] = array((int) ($preInstance && isset($this->circularReferences[$callerId][$id])), $argument->getInvalidBehavior());",
          "1597:             }",
          "1598:         }",
          "1599:     }",
          "1601:     private function getDefinitionsFromArguments(array $arguments, $isConstructorArgument = true, \\SplObjectStorage $definitions = null)",
          "1602:     {",
          "1603:         if (null === $definitions) {",
          "1604:             $definitions = new \\SplObjectStorage();",
          "1605:         }",
          "1607:         foreach ($arguments as $argument) {",
          "1608:             if (\\is_array($argument)) {",
          "1609:                 $this->getDefinitionsFromArguments($argument, $isConstructorArgument, $definitions);",
          "1613:                 $def = $definitions[$argument];",
          "1614:                 $definitions[$argument] = array(1 + $def[0], $isConstructorArgument || $def[1]);",
          "1616:                 $definitions[$argument] = array(1, $isConstructorArgument);",
          "1617:                 $this->getDefinitionsFromArguments($argument->getArguments(), $isConstructorArgument, $definitions);",
          "1618:                 $this->getDefinitionsFromArguments(array($argument->getFactory()), $isConstructorArgument, $definitions);",
          "1619:                 $this->getDefinitionsFromArguments($argument->getProperties(), false, $definitions);",
          "1620:                 $this->getDefinitionsFromArguments($argument->getMethodCalls(), false, $definitions);",
          "1621:                 $this->getDefinitionsFromArguments(array($argument->getConfigurator()), false, $definitions);",
          "1623:                 $def = $definitions[$argument];",
          "1624:                 unset($definitions[$argument]);",
          "1625:                 $definitions[$argument] = $def;",
          "1642:     private function hasReference($id, array $arguments, $deep = false, \\SplObjectStorage $inlinedDefinitions = null, array &$visited = array())",
          "1643:     {",
          "1644:         if (!isset($this->circularReferences[$id])) {",
          "1645:             return false;",
          "1646:         }",
          "1648:         foreach ($arguments as $argument) {",
          "1649:             if (\\is_array($argument)) {",
          "1650:                 if ($this->hasReference($id, $argument, $deep, $inlinedDefinitions, $visited)) {",
          "1651:                     return true;",
          "1652:                 }",
          "1654:                 continue;",
          "1655:             } elseif ($argument instanceof Reference) {",
          "1656:                 $argumentId = $this->container->normalizeId($argument);",
          "1657:                 if ($id === $argumentId) {",
          "1658:                     return true;",
          "1659:                 }",
          "1661:                 if (!$deep || isset($visited[$argumentId]) || !isset($this->circularReferences[$argumentId])) {",
          "1662:                     continue;",
          "1663:                 }",
          "1665:                 $visited[$argumentId] = true;",
          "1667:                 $service = $this->container->getDefinition($argumentId);",
          "1668:             } elseif ($argument instanceof Definition) {",
          "1669:                 if (isset($inlinedDefinitions[$argument])) {",
          "1670:                     return true;",
          "1671:                 }",
          "1672:                 $service = $argument;",
          "1673:             } else {",
          "1674:                 continue;",
          "1675:             }",
          "1679:             if ($service->isLazy() && !$this->getProxyDumper() instanceof NullDumper) {",
          "1680:                 continue;",
          "1681:             }",
          "1683:             if ($this->hasReference($id, array($service->getArguments(), $service->getFactory(), $service->getProperties(), $service->getMethodCalls(), $service->getConfigurator()), $deep, $inlinedDefinitions, $visited)) {",
          "1684:                 return true;",
          "1685:             }",
          "1686:         }",
          "1688:         return false;",
          "1689:     }",
          "",
          "[Added Lines]",
          "1512:     private function getDefinitionsFromArguments(array $arguments, \\SplObjectStorage $definitions = null, array &$calls = array())",
          "1514:         if (null === $definitions) {",
          "1515:             $definitions = new \\SplObjectStorage();",
          "1516:         }",
          "1520:                 $this->getDefinitionsFromArguments($argument, $definitions, $calls);",
          "1525:                     $calls[$id] = array(0, $argument->getInvalidBehavior());",
          "1534:                 $definitions[$argument] = 1 + $definitions[$argument];",
          "1536:                 $definitions[$argument] = 1;",
          "1537:                 $arguments = array($argument->getArguments(), $argument->getFactory(), $argument->getProperties(), $argument->getMethodCalls(), $argument->getConfigurator());",
          "1538:                 $this->getDefinitionsFromArguments($arguments, $definitions, $calls);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1712:             return sprintf('array(%s)', implode(', ', $code));",
          "1713:         } elseif ($value instanceof ArgumentInterface) {",
          "1715:             $this->definitionVariables = $this->referenceVariables = null;",
          "1717:             try {",
          "",
          "[Removed Lines]",
          "1714:             $scope = array($this->definitionVariables, $this->referenceVariables, $this->variableCount);",
          "",
          "[Added Lines]",
          "1568:             $scope = array($this->definitionVariables, $this->referenceVariables);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1758:                     return implode(\"\\n\", $code);",
          "1759:                 }",
          "1760:             } finally {",
          "1762:             }",
          "1763:         } elseif ($value instanceof Definition) {",
          "1764:             if (null !== $this->definitionVariables && $this->definitionVariables->contains($value)) {",
          "",
          "[Removed Lines]",
          "1761:                 list($this->definitionVariables, $this->referenceVariables, $this->variableCount) = $scope;",
          "",
          "[Added Lines]",
          "1615:                 list($this->definitionVariables, $this->referenceVariables) = $scope;",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php -> src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "850:         $dumper = new PhpDumper($container);",
          "851:         $dumper->dump();",
          "854:     }",
          "856:     public function testHotPathOptimizations()",
          "",
          "[Removed Lines]",
          "853:         $this->assertStringEqualsFile(self::$fixturesPath.'/php/services_deep_graph.php', $dumper->dump());",
          "",
          "[Added Lines]",
          "853:         $this->assertStringEqualsFile(self::$fixturesPath.'/php/services_deep_graph.php', $dumper->dump(array('class' => 'Symfony_DI_PhpDumper_Test_Deep_Graph')));",
          "855:         require self::$fixturesPath.'/php/services_deep_graph.php';",
          "857:         $container = new \\Symfony_DI_PhpDumper_Test_Deep_Graph();",
          "859:         $this->assertInstanceOf(FooForDeepGraph::class, $container->get('foo'));",
          "860:         $this->assertEquals((object) array('p2' => (object) array('p3' => (object) array())), $container->get('foo')->bClone);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1077:         return array('rot13' => 'string');",
          "1078:     }",
          "1079: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1088: class FooForDeepGraph",
          "1089: {",
          "1090:     public $bClone;",
          "1092:     public function __construct(\\stdClass $a, \\stdClass $b)",
          "1093:     {",
          "1095:         $this->bClone = clone $b;",
          "1096:     }",
          "1097: }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_almost_circular_private.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_almost_circular_private.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_almost_circular_private.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_almost_circular_private.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "135:     {",
          "136:         $a = new \\stdClass();",
          "144:         $d = new \\stdClass($instance);",
          "150:         return $instance;",
          "151:     }",
          "",
          "[Removed Lines]",
          "138:         $b = new \\stdClass();",
          "140:         $this->services['connection2'] = $instance = new \\stdClass($a, $b);",
          "142:         $c = ${($_ = isset($this->services['manager2']) ? $this->services['manager2'] : $this->getManager2Service()) && false ?: '_'};",
          "146:         $a->subscriber2 = new \\stdClass($c);",
          "147:         $d->handler2 = new \\stdClass($c);",
          "148:         $b->logger2 = $d;",
          "",
          "[Added Lines]",
          "139:         $c = new \\stdClass();",
          "141:         $this->services['connection2'] = $instance = new \\stdClass($a, $c);",
          "143:         $b = ${($_ = isset($this->services['manager2']) ? $this->services['manager2'] : $this->getManager2Service()) && false ?: '_'};",
          "145:         $a->subscriber2 = new \\stdClass($b);",
          "149:         $d->handler2 = new \\stdClass($b);",
          "151:         $c->logger2 = $d;",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_almost_circular_public.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_almost_circular_public.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_almost_circular_public.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_almost_circular_public.php"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_deep_graph.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_deep_graph.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_deep_graph.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_deep_graph.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: {",
          "19:     private $parameters;",
          "20:     private $targetDirs = array();",
          "",
          "[Removed Lines]",
          "17: class ProjectServiceContainer extends Container",
          "",
          "[Added Lines]",
          "17: class Symfony_DI_PhpDumper_Test_Deep_Graph extends Container",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:     protected function getBarService()",
          "64:     {",
          "69:         return $instance;",
          "70:     }",
          "",
          "[Removed Lines]",
          "65:         $this->services['bar'] = $instance = new \\c5();",
          "67:         $instance->p5 = new \\c6(${($_ = isset($this->services['foo']) ? $this->services['foo'] : $this->getFooService()) && false ?: '_'});",
          "",
          "[Added Lines]",
          "65:         $this->services['bar'] = $instance = new \\stdClass();",
          "67:         $instance->p5 = new \\stdClass(${($_ = isset($this->services['foo']) ? $this->services['foo'] : $this->getFooService()) && false ?: '_'});",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "82:             return $this->services['foo'];",
          "83:         }",
          "92:         $b->p2 = $c;",
          "95:     }",
          "96: }",
          "",
          "[Removed Lines]",
          "85:         $b = new \\c2();",
          "87:         $this->services['foo'] = $instance = new \\c1($a, $b);",
          "89:         $c = new \\c3();",
          "91:         $c->p3 = new \\c4();",
          "94:         return $instance;",
          "",
          "[Added Lines]",
          "85:         $b = new \\stdClass();",
          "86:         $c = new \\stdClass();",
          "87:         $c->p3 = new \\stdClass();",
          "90:         return $this->services['foo'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\FooForDeepGraph($a, $b);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6c6f76f217ca200149ae1630799a43ce2bc27545",
      "candidate_info": {
        "commit_hash": "6c6f76f217ca200149ae1630799a43ce2bc27545",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/6c6f76f217ca200149ae1630799a43ce2bc27545",
        "files": [
          "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
          "src/Symfony/Component/Form/FormInterface.php"
        ],
        "message": "fixed CS",
        "before_after_code_files": [
          "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
          "src/Symfony/Component/Form/FormInterface.php||src/Symfony/Component/Form/FormInterface.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php"
          ],
          "candidate": [
            "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php -> src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "235:         $class = 'Symfony_DI_PhpDumper_Test_Unsupported_Characters';",
          "236:         $container = new ContainerBuilder();",
          "237:         $container->setParameter(\"'\", 'oh-no');",
          "239:         $container->register('bar$', 'FooClass')->setPublic(true);",
          "240:         $container->register('bar$!', 'FooClass')->setPublic(true);",
          "241:         $container->compile();",
          "",
          "[Removed Lines]",
          "238:         $container->register(\"foo*/oh-no\", 'FooClass')->setPublic(true);",
          "",
          "[Added Lines]",
          "238:         $container->register('foo*/oh-no', 'FooClass')->setPublic(true);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Form/FormInterface.php||src/Symfony/Component/Form/FormInterface.php": [
          "File: src/Symfony/Component/Form/FormInterface.php -> src/Symfony/Component/Form/FormInterface.php"
        ]
      }
    },
    {
      "candidate_hash": "3fd01abf11d3b5bb3ad59b06639d6331cca9406b",
      "candidate_info": {
        "commit_hash": "3fd01abf11d3b5bb3ad59b06639d6331cca9406b",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/3fd01abf11d3b5bb3ad59b06639d6331cca9406b",
        "files": [
          "src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php",
          "src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
          "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php"
        ],
        "message": "Merge branch '3.4' into 4.2\n\n* 3.4:\n  [DI] Check service IDs are valid",
        "before_after_code_files": [
          "src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php||src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php",
          "src/Symfony/Component/DependencyInjection/ContainerBuilder.php||src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
          "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php||src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php||src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php",
            "src/Symfony/Component/DependencyInjection/ContainerBuilder.php||src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
            "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
            "src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php||src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php",
            "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php"
          ],
          "candidate": [
            "src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php||src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php",
            "src/Symfony/Component/DependencyInjection/ContainerBuilder.php||src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
            "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
            "src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php||src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php",
            "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php||src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php": [
          "File: src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php -> src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:         $instantiation = 'return';",
          "55:         if ($definition->isShared()) {",
          "57:         }",
          "59:         if (null === $factoryCode) {",
          "",
          "[Removed Lines]",
          "56:             $instantiation .= sprintf(' $this->%s[\\'%s\\'] =', $definition->isPublic() && !$definition->isPrivate() ? 'services' : 'privates', $id);",
          "",
          "[Added Lines]",
          "56:             $instantiation .= sprintf(' $this->%s[%s] =', $definition->isPublic() && !$definition->isPrivate() ? 'services' : 'privates', var_export($id, true));",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/ContainerBuilder.php||src/Symfony/Component/DependencyInjection/ContainerBuilder.php": [
          "File: src/Symfony/Component/DependencyInjection/ContainerBuilder.php -> src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "828:     {",
          "829:         $alias = (string) $alias;",
          "831:         if (\\is_string($id)) {",
          "832:             $id = new Alias($id);",
          "833:         } elseif (!$id instanceof Alias) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "831:         if ('' === $alias || '\\\\' === $alias[-1] || \\strlen($alias) !== strcspn($alias, \"\\0\\r\\n'\")) {",
          "832:             throw new InvalidArgumentException(sprintf('Invalid alias id: \"%s\"', $alias));",
          "833:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "982:         $id = (string) $id;",
          "984:         unset($this->aliasDefinitions[$id], $this->removedIds[$id]);",
          "986:         return $this->definitions[$id] = $definition;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "988:         if ('' === $id || '\\\\' === $id[-1] || \\strlen($id) !== strcspn($id, \"\\0\\r\\n'\")) {",
          "989:             throw new InvalidArgumentException(sprintf('Invalid service id: \"%s\"', $id));",
          "990:         }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php": [
          "File: src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php -> src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "506:         $instantiation = '';",
          "508:         if (!$isProxyCandidate && $definition->isShared() && !isset($this->singleUsePrivateIds[$id])) {",
          "510:         } elseif (!$isSimpleInstance) {",
          "511:             $instantiation = '$instance';",
          "512:         }",
          "",
          "[Removed Lines]",
          "509:             $instantiation = sprintf('$this->%s[\\'%s\\'] = %s', $this->container->getDefinition($id)->isPublic() ? 'services' : 'privates', $id, $isSimpleInstance ? '' : '$instance');",
          "",
          "[Added Lines]",
          "509:             $instantiation = sprintf('$this->%s[%s] = %s', $this->container->getDefinition($id)->isPublic() ? 'services' : 'privates', $this->doExport($id), $isSimpleInstance ? '' : '$instance');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "678:     protected function {$methodName}($lazyInitialization)",
          "679:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "677: EOF;",
          "678:             $code = str_replace('*/', ' ', $code).<<<EOF",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "687:         $code .= $this->addServiceInclude($id, $definition);",
          "689:         if ($this->getProxyDumper()->isProxyCandidate($definition)) {",
          "692:         }",
          "694:         if ($definition->isDeprecated()) {",
          "",
          "[Removed Lines]",
          "690:             $factoryCode = $asFile ? ($definition->isShared() ? \"\\$this->load('%s.php', false)\" : \"\\$this->factories['%2$s'](false)\") : '$this->%s(false)';",
          "691:             $code .= $this->getProxyDumper()->getProxyFactoryCode($definition, $id, sprintf($factoryCode, $methodName, $this->export($id)));",
          "",
          "[Added Lines]",
          "693:             $factoryCode = $asFile ? ($definition->isShared() ? \"\\$this->load('%s.php', false)\" : \"\\$this->factories[%2\\$s](false)\") : '$this->%s(false)';",
          "694:             $code .= $this->getProxyDumper()->getProxyFactoryCode($definition, $id, sprintf($factoryCode, $methodName, $this->doExport($id)));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "763:         $code .= sprintf(<<<'EOTXT'",
          "767:         }",
          "769: EOTXT",
          "770:             ,",
          "771:             $this->container->getDefinition($id)->isPublic() ? 'services' : 'privates',",
          "773:         );",
          "775:         return $code;",
          "",
          "[Removed Lines]",
          "765:         if (isset($this->%s['%s'])) {",
          "766:             return $this->%1$s['%2$s'];",
          "772:             $id",
          "",
          "[Added Lines]",
          "768:         if (isset($this->%s[%s])) {",
          "769:             return $this->%1$s[%2$s];",
          "775:             $this->doExport($id)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "861:                         $code = [\"\\n\", $code];",
          "862:                     }",
          "863:                     $code[1] = implode(\"\\n\", array_map(function ($line) { return $line ? '    '.$line : $line; }, explode(\"\\n\", $code[1])));",
          "865:                     $lazyloadInitialization = $definition->isLazy() ? '$lazyLoad = true' : '';",
          "867:                     $code[1] = sprintf(\"%s = function (%s) {\\n%s};\\n\\nreturn %1\\$s();\\n\", $factory, $lazyloadInitialization, $code[1]);",
          "",
          "[Removed Lines]",
          "864:                     $factory = sprintf('$this->factories%s[\\'%s\\']', $definition->isPublic() ? '' : \"['service_container']\", $id);",
          "",
          "[Added Lines]",
          "867:                     $factory = sprintf('$this->factories%s[%s]', $definition->isPublic() ? '' : \"['service_container']\", $this->doExport($id));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1383:             if (!$this->container->hasDefinition($service)) {",
          "1384:                 return 'false';",
          "1385:             }",
          "1387:         }",
          "1388:         foreach (ContainerBuilder::getServiceConditionals($value) as $service) {",
          "1389:             if ($this->container->hasDefinition($service) && !$this->container->getDefinition($service)->isPublic()) {",
          "1390:                 continue;",
          "1391:             }",
          "1394:         }",
          "1396:         if (!$conditions) {",
          "",
          "[Removed Lines]",
          "1386:             $conditions[] = sprintf(\"isset(\\$this->%s['%s'])\", $this->container->getDefinition($service)->isPublic() ? 'services' : 'privates', $service);",
          "1393:             $conditions[] = sprintf(\"\\$this->has('%s')\", $service);",
          "",
          "[Added Lines]",
          "1389:             $conditions[] = sprintf(\"isset(\\$this->%s[%s])\", $this->container->getDefinition($service)->isPublic() ? 'services' : 'privates', $this->doExport($service));",
          "1396:             $conditions[] = sprintf(\"\\$this->has(%s)\", $this->doExport($service));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1508:                         $serviceMap .= sprintf(\"\\n            %s => [%s, %s, %s, %s],\",",
          "1509:                             $this->export($k),",
          "1510:                             $this->export($definition->isShared() ? ($definition->isPublic() ? 'services' : 'privates') : false),",
          "1512:                             $this->export(ContainerInterface::IGNORE_ON_UNINITIALIZED_REFERENCE !== $v->getInvalidBehavior() && !\\is_string($load) ? $this->generateMethodName($id).($load ? '.php' : '') : null),",
          "1513:                             $this->export($load)",
          "1514:                         );",
          "",
          "[Removed Lines]",
          "1511:                             $this->export($id),",
          "",
          "[Added Lines]",
          "1514:                             $this->doExport($id),",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1605:             }",
          "1607:             if (!preg_match(\"/\\\\\\$this->(?:getEnv\\('(?:\\w++:)*+\\w++'\\)|targetDirs\\[\\d++\\])/\", $dumpedValue)) {",
          "1609:             }",
          "1610:         }",
          "1613:     }",
          "1615:     private function getServiceCall(string $id, Reference $reference = null): string",
          "",
          "[Removed Lines]",
          "1608:                 return sprintf(\"\\$this->parameters['%s']\", $name);",
          "1612:         return sprintf(\"\\$this->getParameter('%s')\", $name);",
          "",
          "[Added Lines]",
          "1611:                 return sprintf('$this->parameters[%s]', $this->doExport($name));",
          "1615:         return sprintf('$this->getParameter(%s)', $this->doExport($name));",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1625:         if ($this->container->hasDefinition($id) && $definition = $this->container->getDefinition($id)) {",
          "1626:             if ($definition->isSynthetic()) {",
          "1628:             } elseif (null !== $reference && ContainerInterface::IGNORE_ON_UNINITIALIZED_REFERENCE === $reference->getInvalidBehavior()) {",
          "1629:                 $code = 'null';",
          "1630:                 if (!$definition->isShared()) {",
          "",
          "[Removed Lines]",
          "1627:                 $code = sprintf('$this->get(\\'%s\\'%s)', $id, null !== $reference ? ', '.$reference->getInvalidBehavior() : '');",
          "",
          "[Added Lines]",
          "1630:                 $code = sprintf('$this->get(%s%s)', $this->doExport($id), null !== $reference ? ', '.$reference->getInvalidBehavior() : '');",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1638:                 }",
          "1639:                 $code = $this->addNewInstance($definition, '', $id);",
          "1640:                 if ($definition->isShared() && !isset($this->singleUsePrivateIds[$id])) {",
          "1642:                 }",
          "1643:                 $code = \"($code)\";",
          "1644:             } elseif ($this->asFiles && !$this->isHotPath($definition)) {",
          "1645:                 $code = sprintf(\"\\$this->load('%s.php')\", $this->generateMethodName($id));",
          "1646:                 if (!$definition->isShared()) {",
          "1648:                     $code = sprintf('(isset(%s) ? %1$s() : %s)', $factory, $code);",
          "1649:                 }",
          "1650:             } else {",
          "1651:                 $code = sprintf('$this->%s()', $this->generateMethodName($id));",
          "1652:             }",
          "1653:             if ($definition->isShared() && !isset($this->singleUsePrivateIds[$id])) {",
          "1655:             }",
          "1657:             return $code;",
          "",
          "[Removed Lines]",
          "1641:                     $code = sprintf('$this->%s[\\'%s\\'] = %s', $definition->isPublic() ? 'services' : 'privates', $id, $code);",
          "1647:                     $factory = sprintf('$this->factories%s[\\'%s\\']', $definition->isPublic() ? '' : \"['service_container']\", $id);",
          "1654:                 $code = sprintf('($this->%s[\\'%s\\'] ?? %s)', $definition->isPublic() ? 'services' : 'privates', $id, $code);",
          "",
          "[Added Lines]",
          "1644:                     $code = sprintf('$this->%s[%s] = %s', $definition->isPublic() ? 'services' : 'privates', $this->doExport($id), $code);",
          "1650:                     $factory = sprintf('$this->factories%s[%s]', $definition->isPublic() ? '' : \"['service_container']\", $this->doExport($id));",
          "1657:                 $code = sprintf('($this->%s[%s] ?? %s)', $definition->isPublic() ? 'services' : 'privates', $this->doExport($id), $code);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1660:             return 'null';",
          "1661:         }",
          "1662:         if (null !== $reference && ContainerInterface::EXCEPTION_ON_INVALID_REFERENCE < $reference->getInvalidBehavior()) {",
          "1664:         } else {",
          "1666:         }",
          "1669:     }",
          "",
          "[Removed Lines]",
          "1663:             $code = sprintf('$this->get(\\'%s\\', /* ContainerInterface::NULL_ON_INVALID_REFERENCE */ %d)', $id, ContainerInterface::NULL_ON_INVALID_REFERENCE);",
          "1665:             $code = sprintf('$this->get(\\'%s\\')', $id);",
          "1668:         return sprintf('($this->services[\\'%s\\'] ?? %s)', $id, $code);",
          "",
          "[Added Lines]",
          "1666:             $code = sprintf('$this->get(%s, /* ContainerInterface::NULL_ON_INVALID_REFERENCE */ %d)', $this->doExport($id), ContainerInterface::NULL_ON_INVALID_REFERENCE);",
          "1668:             $code = sprintf('$this->get(%s)', $this->doExport($id));",
          "1671:         return sprintf('($this->services[%s] ?? %s)', $this->doExport($id), $code);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php||src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php -> src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "195:         $this->assertNotSame($builder->get('bar'), $builder->get('bar'));",
          "196:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "202:     public function testBadAliasId($id)",
          "203:     {",
          "204:         $builder = new ContainerBuilder();",
          "205:         $builder->setAlias($id, 'foo');",
          "206:     }",
          "212:     public function testBadDefinitionId($id)",
          "213:     {",
          "214:         $builder = new ContainerBuilder();",
          "215:         $builder->setDefinition($id, new Definition('Foo'));",
          "216:     }",
          "218:     public function provideBadId()",
          "219:     {",
          "220:         return [",
          "221:             [''],",
          "222:             [\"\\0\"],",
          "223:             [\"\\r\"],",
          "224:             [\"\\n\"],",
          "225:             [\"'\"],",
          "226:             ['ab\\\\'],",
          "227:         ];",
          "228:     }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php -> src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "261:     {",
          "262:         $class = 'Symfony_DI_PhpDumper_Test_Unsupported_Characters';",
          "263:         $container = new ContainerBuilder();",
          "264:         $container->register('bar$', 'FooClass')->setPublic(true);",
          "265:         $container->register('bar$!', 'FooClass')->setPublic(true);",
          "266:         $container->compile();",
          "267:         $dumper = new PhpDumper($container);",
          "270:         $this->assertTrue(method_exists($class, 'getBarService'));",
          "271:         $this->assertTrue(method_exists($class, 'getBar2Service'));",
          "272:     }",
          "",
          "[Removed Lines]",
          "268:         eval('?>'.$dumper->dump(['class' => $class]));",
          "",
          "[Added Lines]",
          "264:         $container->setParameter(\"'\", 'oh-no');",
          "265:         $container->register(\"foo*/oh-no\", 'FooClass')->setPublic(true);",
          "271:         $this->assertStringEqualsFile(self::$fixturesPath.'/php/services_unsupported_characters.php', $dumper->dump(['class' => $class]));",
          "273:         require_once self::$fixturesPath.'/php/services_unsupported_characters.php';",
          "275:         $this->assertTrue(method_exists($class, 'getFooOhNoService'));",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "56:     protected function getFooService()",
          "57:     {",
          "59:     }",
          "",
          "[Removed Lines]",
          "58:         return $this->services['Bar\\Foo'] = new \\Bar\\Foo();",
          "",
          "[Added Lines]",
          "58:         return $this->services['Bar\\\\Foo'] = new \\Bar\\Foo();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "66:     protected function getFoo2Service()",
          "67:     {",
          "69:     }",
          "70: }",
          "",
          "[Removed Lines]",
          "68:         return $this->services['Foo\\Foo'] = new \\Foo\\Foo();",
          "",
          "[Added Lines]",
          "68:         return $this->services['Foo\\\\Foo'] = new \\Foo\\Foo();",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:     protected function getBusService()",
          "62:     {",
          "68:         $c = new \\App\\Registry();",
          "69:         $c->processor = [0 => $a, 1 => $instance];",
          "",
          "[Removed Lines]",
          "63:         $a = ($this->services['App\\Db'] ?? $this->getDbService());",
          "65:         $this->services['App\\Bus'] = $instance = new \\App\\Bus($a);",
          "67:         $b = ($this->privates['App\\Schema'] ?? $this->getSchemaService());",
          "",
          "[Added Lines]",
          "63:         $a = ($this->services['App\\\\Db'] ?? $this->getDbService());",
          "65:         $this->services['App\\\\Bus'] = $instance = new \\App\\Bus($a);",
          "67:         $b = ($this->privates['App\\\\Schema'] ?? $this->getSchemaService());",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "84:     protected function getDbService()",
          "85:     {",
          "90:         return $instance;",
          "91:     }",
          "",
          "[Removed Lines]",
          "86:         $this->services['App\\Db'] = $instance = new \\App\\Db();",
          "88:         $instance->schema = ($this->privates['App\\Schema'] ?? $this->getSchemaService());",
          "",
          "[Added Lines]",
          "86:         $this->services['App\\\\Db'] = $instance = new \\App\\Db();",
          "88:         $instance->schema = ($this->privates['App\\\\Schema'] ?? $this->getSchemaService());",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "98:     protected function getSchemaService()",
          "99:     {",
          "104:         }",
          "107:     }",
          "108: }",
          "",
          "[Removed Lines]",
          "100:         $a = ($this->services['App\\Db'] ?? $this->getDbService());",
          "102:         if (isset($this->privates['App\\Schema'])) {",
          "103:             return $this->privates['App\\Schema'];",
          "106:         return $this->privates['App\\Schema'] = new \\App\\Schema($a);",
          "",
          "[Added Lines]",
          "100:         $a = ($this->services['App\\\\Db'] ?? $this->getDbService());",
          "102:         if (isset($this->privates['App\\\\Schema'])) {",
          "103:             return $this->privates['App\\\\Schema'];",
          "106:         return $this->privates['App\\\\Schema'] = new \\App\\Schema($a);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:     protected function getParentNotExistsService()",
          "72:     {",
          "74:     }",
          "",
          "[Removed Lines]",
          "73:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\ParentNotExists'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\ParentNotExists();",
          "",
          "[Added Lines]",
          "73:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\ParentNotExists'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\ParentNotExists();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81:     protected function getC1Service()",
          "82:     {",
          "84:     }",
          "",
          "[Removed Lines]",
          "83:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C1'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C1();",
          "",
          "[Added Lines]",
          "83:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\includes\\\\HotPath\\\\C1'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C1();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "93:         include_once $this->targetDirs[1].'/includes/HotPath/C2.php';",
          "94:         include_once $this->targetDirs[1].'/includes/HotPath/C3.php';",
          "97:     }",
          "99:     public function getParameter($name)",
          "",
          "[Removed Lines]",
          "96:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C2'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C2(new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3());",
          "",
          "[Added Lines]",
          "96:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\includes\\\\HotPath\\\\C2'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C2(new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3());",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:         $b = new \\App\\Baz($a);",
          "60:         $b->bar = $a;",
          "64:         $a->foo = $instance;",
          "",
          "[Removed Lines]",
          "62:         $this->services['App\\Foo'] = $instance = new \\App\\Foo($b);",
          "",
          "[Added Lines]",
          "62:         $this->services['App\\\\Foo'] = $instance = new \\App\\Foo($b);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:     protected function getRot13EnvVarProcessorService()",
          "62:     {",
          "64:     }",
          "",
          "[Removed Lines]",
          "63:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor();",
          "",
          "[Added Lines]",
          "63:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Dumper\\\\Rot13EnvVarProcessor'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor();",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:     protected function getTestServiceSubscriberService()",
          "62:     {",
          "64:     }",
          "",
          "[Removed Lines]",
          "63:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber();",
          "",
          "[Added Lines]",
          "63:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "86:     protected function getCustomDefinitionService()",
          "87:     {",
          "89:     }",
          "90: }",
          "",
          "[Removed Lines]",
          "88:         return $this->privates['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition();",
          "",
          "[Added Lines]",
          "88:         return $this->privates['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition();",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: use Symfony\\Component\\DependencyInjection\\Argument\\RewindableGenerator;",
          "4: use Symfony\\Component\\DependencyInjection\\ContainerInterface;",
          "5: use Symfony\\Component\\DependencyInjection\\Container;",
          "6: use Symfony\\Component\\DependencyInjection\\Exception\\InvalidArgumentException;",
          "7: use Symfony\\Component\\DependencyInjection\\Exception\\LogicException;",
          "8: use Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException;",
          "9: use Symfony\\Component\\DependencyInjection\\ParameterBag\\FrozenParameterBag;",
          "17: class Symfony_DI_PhpDumper_Test_Unsupported_Characters extends Container",
          "18: {",
          "19:     private $parameters;",
          "20:     private $targetDirs = [];",
          "22:     public function __construct()",
          "23:     {",
          "24:         $this->parameters = $this->getDefaultParameters();",
          "26:         $this->services = $this->privates = [];",
          "27:         $this->methodMap = [",
          "28:             'bar$' => 'getBarService',",
          "29:             'bar$!' => 'getBar2Service',",
          "30:             'foo*/oh-no' => 'getFooohnoService',",
          "31:         ];",
          "33:         $this->aliases = [];",
          "34:     }",
          "36:     public function compile()",
          "37:     {",
          "38:         throw new LogicException('You cannot compile a dumped container that was already compiled.');",
          "39:     }",
          "41:     public function isCompiled()",
          "42:     {",
          "43:         return true;",
          "44:     }",
          "46:     public function getRemovedIds()",
          "47:     {",
          "48:         return [",
          "49:             'Psr\\\\Container\\\\ContainerInterface' => true,",
          "50:             'Symfony\\\\Component\\\\DependencyInjection\\\\ContainerInterface' => true,",
          "51:         ];",
          "52:     }",
          "59:     protected function getBarService()",
          "60:     {",
          "61:         return $this->services['bar$'] = new \\FooClass();",
          "62:     }",
          "69:     protected function getBar2Service()",
          "70:     {",
          "71:         return $this->services['bar$!'] = new \\FooClass();",
          "72:     }",
          "79:     protected function getFooohnoService()",
          "80:     {",
          "81:         return $this->services['foo*/oh-no'] = new \\FooClass();",
          "82:     }",
          "84:     public function getParameter($name)",
          "85:     {",
          "86:         $name = (string) $name;",
          "88:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
          "89:             throw new InvalidArgumentException(sprintf('The parameter \"%s\" must be defined.', $name));",
          "90:         }",
          "91:         if (isset($this->loadedDynamicParameters[$name])) {",
          "92:             return $this->loadedDynamicParameters[$name] ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);",
          "93:         }",
          "95:         return $this->parameters[$name];",
          "96:     }",
          "98:     public function hasParameter($name)",
          "99:     {",
          "100:         $name = (string) $name;",
          "102:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);",
          "103:     }",
          "105:     public function setParameter($name, $value)",
          "106:     {",
          "107:         throw new LogicException('Impossible to call set() on a frozen ParameterBag.');",
          "108:     }",
          "110:     public function getParameterBag()",
          "111:     {",
          "112:         if (null === $this->parameterBag) {",
          "113:             $parameters = $this->parameters;",
          "114:             foreach ($this->loadedDynamicParameters as $name => $loaded) {",
          "115:                 $parameters[$name] = $loaded ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);",
          "116:             }",
          "117:             $this->parameterBag = new FrozenParameterBag($parameters);",
          "118:         }",
          "120:         return $this->parameterBag;",
          "121:     }",
          "123:     private $loadedDynamicParameters = [];",
          "124:     private $dynamicParameters = [];",
          "135:     private function getDynamicParameter($name)",
          "136:     {",
          "137:         throw new InvalidArgumentException(sprintf('The dynamic parameter \"%s\" must be defined.', $name));",
          "138:     }",
          "145:     protected function getDefaultParameters()",
          "146:     {",
          "147:         return [",
          "148:             '\\'' => 'oh-no',",
          "149:         ];",
          "150:     }",
          "151: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "67d7623e72178a769df923d6b8df58bd6c780553",
      "candidate_info": {
        "commit_hash": "67d7623e72178a769df923d6b8df58bd6c780553",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/67d7623e72178a769df923d6b8df58bd6c780553",
        "files": [
          "src/Symfony/Component/DependencyInjection/Compiler/AnalyzeServiceReferencesPass.php",
          "src/Symfony/Component/DependencyInjection/Compiler/ServiceReferenceGraph.php",
          "src/Symfony/Component/DependencyInjection/Compiler/ServiceReferenceGraphEdge.php",
          "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_almost_circular_public.php"
        ],
        "message": "[DI] fix taking lazy services into account when dumping the container",
        "before_after_code_files": [
          "src/Symfony/Component/DependencyInjection/Compiler/AnalyzeServiceReferencesPass.php||src/Symfony/Component/DependencyInjection/Compiler/AnalyzeServiceReferencesPass.php",
          "src/Symfony/Component/DependencyInjection/Compiler/ServiceReferenceGraph.php||src/Symfony/Component/DependencyInjection/Compiler/ServiceReferenceGraph.php",
          "src/Symfony/Component/DependencyInjection/Compiler/ServiceReferenceGraphEdge.php||src/Symfony/Component/DependencyInjection/Compiler/ServiceReferenceGraphEdge.php",
          "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_almost_circular_public.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_almost_circular_public.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php"
          ],
          "candidate": [
            "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Component/DependencyInjection/Compiler/AnalyzeServiceReferencesPass.php||src/Symfony/Component/DependencyInjection/Compiler/AnalyzeServiceReferencesPass.php": [
          "File: src/Symfony/Component/DependencyInjection/Compiler/AnalyzeServiceReferencesPass.php -> src/Symfony/Component/DependencyInjection/Compiler/AnalyzeServiceReferencesPass.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:     private $hasProxyDumper;",
          "38:     private $lazy;",
          "39:     private $expressionLanguage;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:     private $byConstructor;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "64:         $this->graph = $container->getCompiler()->getServiceReferenceGraph();",
          "65:         $this->graph->clear();",
          "66:         $this->lazy = false;",
          "68:         foreach ($container->getAliases() as $id => $alias) {",
          "69:             $targetId = $this->getDefinitionId((string) $alias);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68:         $this->byConstructor = false;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "100:                 $targetDefinition,",
          "101:                 $value,",
          "102:                 $this->lazy || ($this->hasProxyDumper && $targetDefinition && $targetDefinition->isLazy()),",
          "104:             );",
          "106:             return $value;",
          "",
          "[Removed Lines]",
          "103:                 ContainerInterface::IGNORE_ON_UNINITIALIZED_REFERENCE === $value->getInvalidBehavior()",
          "",
          "[Added Lines]",
          "105:                 ContainerInterface::IGNORE_ON_UNINITIALIZED_REFERENCE === $value->getInvalidBehavior(),",
          "106:                 $this->byConstructor",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "118:         }",
          "119:         $this->lazy = false;",
          "121:         $this->processValue($value->getFactory());",
          "122:         $this->processValue($value->getArguments());",
          "124:         if (!$this->onlyConstructorArguments) {",
          "125:             $this->processValue($value->getProperties());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "124:         $byConstructor = $this->byConstructor;",
          "125:         $this->byConstructor = true;",
          "128:         $this->byConstructor = $byConstructor;",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Compiler/ServiceReferenceGraph.php||src/Symfony/Component/DependencyInjection/Compiler/ServiceReferenceGraph.php": [
          "File: src/Symfony/Component/DependencyInjection/Compiler/ServiceReferenceGraph.php -> src/Symfony/Component/DependencyInjection/Compiler/ServiceReferenceGraph.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:     {",
          "97:         $lazy = \\func_num_args() >= 6 ? func_get_arg(5) : false;",
          "98:         $weak = \\func_num_args() >= 7 ? func_get_arg(6) : false;",
          "100:         if (null === $sourceId || null === $destId) {",
          "101:             return;",
          "",
          "[Removed Lines]",
          "95:     public function connect($sourceId, $sourceValue, $destId, $destValue = null, $reference = null/*, bool $lazy = false, bool $weak = false*/)",
          "",
          "[Added Lines]",
          "96:     public function connect($sourceId, $sourceValue, $destId, $destValue = null, $reference = null/*, bool $lazy = false, bool $weak = false, bool $byConstructor = false*/)",
          "100:         $byConstructor = \\func_num_args() >= 8 ? func_get_arg(7) : false;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "104:         $sourceNode = $this->createNode($sourceId, $sourceValue);",
          "105:         $destNode = $this->createNode($destId, $destValue);",
          "108:         $sourceNode->addOutEdge($edge);",
          "109:         $destNode->addInEdge($edge);",
          "",
          "[Removed Lines]",
          "106:         $edge = new ServiceReferenceGraphEdge($sourceNode, $destNode, $reference, $lazy, $weak);",
          "",
          "[Added Lines]",
          "108:         $edge = new ServiceReferenceGraphEdge($sourceNode, $destNode, $reference, $lazy, $weak, $byConstructor);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Compiler/ServiceReferenceGraphEdge.php||src/Symfony/Component/DependencyInjection/Compiler/ServiceReferenceGraphEdge.php": [
          "File: src/Symfony/Component/DependencyInjection/Compiler/ServiceReferenceGraphEdge.php -> src/Symfony/Component/DependencyInjection/Compiler/ServiceReferenceGraphEdge.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:     private $value;",
          "26:     private $lazy;",
          "27:     private $weak;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28:     private $byConstructor;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37:     {",
          "38:         $this->sourceNode = $sourceNode;",
          "39:         $this->destNode = $destNode;",
          "40:         $this->value = $value;",
          "41:         $this->lazy = $lazy;",
          "42:         $this->weak = $weak;",
          "43:     }",
          "",
          "[Removed Lines]",
          "36:     public function __construct(ServiceReferenceGraphNode $sourceNode, ServiceReferenceGraphNode $destNode, $value = null, $lazy = false, $weak = false)",
          "",
          "[Added Lines]",
          "38:     public function __construct(ServiceReferenceGraphNode $sourceNode, ServiceReferenceGraphNode $destNode, $value = null, $lazy = false, $weak = false, $byConstructor = false)",
          "45:         $this->byConstructor = $byConstructor;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "91:     {",
          "92:         return $this->weak;",
          "93:     }",
          "94: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103:     public function isReferencedByConstructor()",
          "104:     {",
          "105:         return $this->byConstructor;",
          "106:     }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php": [
          "File: src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php -> src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "154:             }",
          "155:         }",
          "158:         $this->circularReferences = array();",
          "163:         }",
          "164:         $this->container->getCompiler()->getServiceReferenceGraph()->clear();",
          "",
          "[Removed Lines]",
          "157:         (new AnalyzeServiceReferencesPass(false))->process($this->container);",
          "159:         $checkedNodes = array();",
          "160:         foreach ($this->container->getCompiler()->getServiceReferenceGraph()->getNodes() as $id => $node) {",
          "161:             $currentPath = array($id => $id);",
          "162:             $this->analyzeCircularReferences($node->getOutEdges(), $checkedNodes, $currentPath);",
          "",
          "[Added Lines]",
          "157:         (new AnalyzeServiceReferencesPass(false, !$this->getProxyDumper() instanceof NullDumper))->process($this->container);",
          "159:         foreach (array(true, false) as $byConstructor) {",
          "160:             foreach ($this->container->getCompiler()->getServiceReferenceGraph()->getNodes() as $id => $node) {",
          "161:                 if (!$node->getValue() instanceof Definition) {",
          "162:                     continue;",
          "163:                 }",
          "164:                 $currentPath = array($id => true);",
          "165:                 $this->analyzeCircularReferences($node->getOutEdges(), $currentPath, $id, $byConstructor);",
          "166:             }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "297:         return $this->proxyDumper;",
          "298:     }",
          "301:     {",
          "302:         foreach ($edges as $edge) {",
          "303:             $node = $edge->getDestNode();",
          "304:             $id = $node->getId();",
          "308:             } elseif (isset($currentPath[$id])) {",
          "309:                 $currentId = $id;",
          "310:                 foreach (array_reverse($currentPath) as $parentId) {",
          "312:                     if ($parentId === $id) {",
          "313:                         break;",
          "314:                     }",
          "315:                     $currentId = $parentId;",
          "316:                 }",
          "319:                 $currentPath[$id] = $id;",
          "321:                 unset($currentPath[$id]);",
          "322:             }",
          "323:         }",
          "",
          "[Removed Lines]",
          "300:     private function analyzeCircularReferences(array $edges, &$checkedNodes, &$currentPath)",
          "306:             if ($node->getValue() && ($edge->isLazy() || $edge->isWeak())) {",
          "311:                     $this->circularReferences[$parentId][$currentId] = $currentId;",
          "317:             } elseif (!isset($checkedNodes[$id])) {",
          "318:                 $checkedNodes[$id] = true;",
          "320:                 $this->analyzeCircularReferences($node->getOutEdges(), $checkedNodes, $currentPath);",
          "",
          "[Added Lines]",
          "304:     private function analyzeCircularReferences(array $edges, &$currentPath, $sourceId, $byConstructor)",
          "307:             if ($byConstructor && !$edge->isReferencedByConstructor()) {",
          "308:                 continue;",
          "309:             }",
          "313:             if (!$node->getValue() instanceof Definition || $sourceId === $id || $edge->isLazy() || $edge->isWeak()) {",
          "318:                     if (!isset($this->circularReferences[$parentId][$currentId])) {",
          "319:                         $this->circularReferences[$parentId][$currentId] = $byConstructor;",
          "320:                     }",
          "326:             } else {",
          "328:                 $this->analyzeCircularReferences($node->getOutEdges(), $currentPath, $id, $byConstructor);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "701:     private function addInlineReference($id, Definition $definition, $targetId, $forConstructor)",
          "702:     {",
          "703:         if ($id === $targetId) {",
          "705:         }",
          "707:         if ('service_container' === $targetId || isset($this->referenceVariables[$targetId])) {",
          "",
          "[Removed Lines]",
          "704:             return $this->addInlineService($id, $definition, $definition, $forConstructor);",
          "",
          "[Added Lines]",
          "711:         list($callCount, $behavior) = $this->serviceCalls[$targetId];",
          "713:         while ($this->container->hasAlias($targetId)) {",
          "714:             $targetId = (string) $this->container->getAlias($targetId);",
          "715:         }",
          "718:             return $this->addInlineService($id, $definition, $definition);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "711:         $hasSelfRef = isset($this->circularReferences[$id][$targetId]);",
          "712:         $forConstructor = $forConstructor && !isset($this->definitionVariables[$definition]);",
          "717:         if (isset($this->referenceVariables[$targetId]) || (2 > $callCount && (!$hasSelfRef || !$forConstructor))) {",
          "718:             return $code;",
          "",
          "[Removed Lines]",
          "713:         list($callCount, $behavior) = $this->serviceCalls[$targetId];",
          "715:         $code = $hasSelfRef && !$forConstructor ? $this->addInlineService($id, $definition, $definition, $forConstructor) : '';",
          "",
          "[Added Lines]",
          "727:         $code = $hasSelfRef && $this->circularReferences[$id][$targetId] && !$forConstructor ? $this->addInlineService($id, $definition, $definition) : '';",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "134:     protected function getHandler2Service()",
          "135:     {",
          "137:     }",
          "",
          "[Removed Lines]",
          "136:         return $this->services['App\\Handler2'] = new \\App\\Handler2(${($_ = isset($this->services['App\\Db']) ? $this->services['App\\Db'] : $this->getDbService()) && false ?: '_'}, ${($_ = isset($this->services['App\\Schema']) ? $this->services['App\\Schema'] : $this->getSchemaService()) && false ?: '_'}, ${($_ = isset($this->services['App\\Processor']) ? $this->services['App\\Processor'] : $this->getProcessorService()) && false ?: '_'});",
          "",
          "[Added Lines]",
          "136:         $a = ${($_ = isset($this->services['App\\Processor']) ? $this->services['App\\Processor'] : $this->getProcessorService()) && false ?: '_'};",
          "138:         if (isset($this->services['App\\Handler2'])) {",
          "139:             return $this->services['App\\Handler2'];",
          "140:         }",
          "142:         return $this->services['App\\Handler2'] = new \\App\\Handler2(${($_ = isset($this->services['App\\Db']) ? $this->services['App\\Db'] : $this->getDbService()) && false ?: '_'}, ${($_ = isset($this->services['App\\Schema']) ? $this->services['App\\Schema'] : $this->getSchemaService()) && false ?: '_'}, $a);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_almost_circular_public.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_almost_circular_public.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_almost_circular_public.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_almost_circular_public.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "175:     protected function getConnectionService()",
          "176:     {",
          "183:         return $instance;",
          "184:     }",
          "",
          "[Removed Lines]",
          "177:         $a = new \\stdClass();",
          "179:         $this->services['connection'] = $instance = new \\stdClass(${($_ = isset($this->services['dispatcher']) ? $this->services['dispatcher'] : $this->getDispatcherService()) && false ?: '_'}, $a);",
          "181:         $a->logger = ${($_ = isset($this->services['logger']) ? $this->services['logger'] : $this->getLoggerService()) && false ?: '_'};",
          "",
          "[Added Lines]",
          "177:         $a = ${($_ = isset($this->services['dispatcher']) ? $this->services['dispatcher'] : $this->getDispatcherService()) && false ?: '_'};",
          "179:         if (isset($this->services['connection'])) {",
          "180:             return $this->services['connection'];",
          "181:         }",
          "182:         $b = new \\stdClass();",
          "184:         $this->services['connection'] = $instance = new \\stdClass($a, $b);",
          "186:         $b->logger = ${($_ = isset($this->services['logger']) ? $this->services['logger'] : $this->getLoggerService()) && false ?: '_'};",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "191:     protected function getConnection2Service()",
          "192:     {",
          "202:         return $instance;",
          "203:     }",
          "",
          "[Removed Lines]",
          "193:         $a = new \\stdClass();",
          "195:         $this->services['connection2'] = $instance = new \\stdClass(${($_ = isset($this->services['dispatcher2']) ? $this->services['dispatcher2'] : $this->getDispatcher2Service()) && false ?: '_'}, $a);",
          "197:         $b = new \\stdClass($instance);",
          "198:         $b->handler2 = new \\stdClass(${($_ = isset($this->services['manager2']) ? $this->services['manager2'] : $this->getManager2Service()) && false ?: '_'});",
          "200:         $a->logger2 = $b;",
          "",
          "[Added Lines]",
          "198:         $a = ${($_ = isset($this->services['dispatcher2']) ? $this->services['dispatcher2'] : $this->getDispatcher2Service()) && false ?: '_'};",
          "200:         if (isset($this->services['connection2'])) {",
          "201:             return $this->services['connection2'];",
          "202:         }",
          "203:         $b = new \\stdClass();",
          "205:         $this->services['connection2'] = $instance = new \\stdClass($a, $b);",
          "207:         $c = new \\stdClass($instance);",
          "208:         $c->handler2 = new \\stdClass(${($_ = isset($this->services['manager2']) ? $this->services['manager2'] : $this->getManager2Service()) && false ?: '_'});",
          "210:         $b->logger2 = $c;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "432:     protected function getSubscriberService()",
          "433:     {",
          "435:     }",
          "",
          "[Removed Lines]",
          "434:         return $this->services['subscriber'] = new \\stdClass(${($_ = isset($this->services['manager']) ? $this->services['manager'] : $this->getManagerService()) && false ?: '_'});",
          "",
          "[Added Lines]",
          "444:         $a = ${($_ = isset($this->services['manager']) ? $this->services['manager'] : $this->getManagerService()) && false ?: '_'};",
          "446:         if (isset($this->services['subscriber'])) {",
          "447:             return $this->services['subscriber'];",
          "448:         }",
          "450:         return $this->services['subscriber'] = new \\stdClass($a);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4f642ad624c4ce4c029f7b5939989a88468513b5",
      "candidate_info": {
        "commit_hash": "4f642ad624c4ce4c029f7b5939989a88468513b5",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/4f642ad624c4ce4c029f7b5939989a88468513b5",
        "files": [
          "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services10.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services12.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services19.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services26.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services8.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services9_as_files.txt",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services9_compiled.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services9_inlined_factories.txt",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services9_lazy_inlined_factories.txt",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_array_params.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_base64_env.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_csv_env.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_default_env.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_env_in_id.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_errored_definition.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_json_env.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_query_string_env.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_url_env.php"
        ],
        "message": "[DependencyInjection][PhpDumper] Dump root namespace array_key_exists",
        "before_after_code_files": [
          "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services10.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services10.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services12.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services12.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services19.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services19.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services26.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services26.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services8.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services8.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services9_compiled.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services9_compiled.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_array_params.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_array_params.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_base64_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_base64_env.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_csv_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_csv_env.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_default_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_default_env.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_env_in_id.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_env_in_id.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_errored_definition.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_errored_definition.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_json_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_json_env.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_query_string_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_query_string_env.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_url_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_url_env.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php"
          ],
          "candidate": [
            "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php": [
          "File: src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php -> src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1391:             return $this->buildParameters[$name];",
          "1392:         }",
          "1395:             throw new InvalidArgumentException(sprintf('The parameter \"%s\" must be defined.', $name));",
          "1396:         }",
          "1397:         if (isset($this->loadedDynamicParameters[$name])) {",
          "",
          "[Removed Lines]",
          "1394:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
          "",
          "[Added Lines]",
          "1394:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters))) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1407:             return true;",
          "1408:         }",
          "1411:     }",
          "1413:     public function setParameter(string $name, $value): void",
          "",
          "[Removed Lines]",
          "1410:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);",
          "",
          "[Added Lines]",
          "1410:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services10.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services10.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services10.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services10.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:     public function getParameter(string $name)",
          "63:     {",
          "65:             throw new InvalidArgumentException(sprintf('The parameter \"%s\" must be defined.', $name));",
          "66:         }",
          "67:         if (isset($this->loadedDynamicParameters[$name])) {",
          "",
          "[Removed Lines]",
          "64:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
          "",
          "[Added Lines]",
          "64:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters))) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "74:     public function hasParameter(string $name): bool",
          "75:     {",
          "77:     }",
          "79:     public function setParameter(string $name, $value): void",
          "",
          "[Removed Lines]",
          "76:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);",
          "",
          "[Added Lines]",
          "76:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services12.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services12.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services12.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services12.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:     public function getParameter(string $name)",
          "63:     {",
          "65:             throw new InvalidArgumentException(sprintf('The parameter \"%s\" must be defined.', $name));",
          "66:         }",
          "67:         if (isset($this->loadedDynamicParameters[$name])) {",
          "",
          "[Removed Lines]",
          "64:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
          "",
          "[Added Lines]",
          "64:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters))) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "74:     public function hasParameter(string $name): bool",
          "75:     {",
          "77:     }",
          "79:     public function setParameter(string $name, $value): void",
          "",
          "[Removed Lines]",
          "76:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);",
          "",
          "[Added Lines]",
          "76:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services19.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services19.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services19.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services19.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:     public function getParameter(string $name)",
          "78:     {",
          "80:             throw new InvalidArgumentException(sprintf('The parameter \"%s\" must be defined.', $name));",
          "81:         }",
          "82:         if (isset($this->loadedDynamicParameters[$name])) {",
          "",
          "[Removed Lines]",
          "79:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
          "",
          "[Added Lines]",
          "79:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters))) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "89:     public function hasParameter(string $name): bool",
          "90:     {",
          "92:     }",
          "94:     public function setParameter(string $name, $value): void",
          "",
          "[Removed Lines]",
          "91:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);",
          "",
          "[Added Lines]",
          "91:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services26.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services26.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services26.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services26.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:     public function getParameter(string $name)",
          "74:     {",
          "76:             throw new InvalidArgumentException(sprintf('The parameter \"%s\" must be defined.', $name));",
          "77:         }",
          "78:         if (isset($this->loadedDynamicParameters[$name])) {",
          "",
          "[Removed Lines]",
          "75:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
          "",
          "[Added Lines]",
          "75:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters))) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "85:     public function hasParameter(string $name): bool",
          "86:     {",
          "88:     }",
          "90:     public function setParameter(string $name, $value): void",
          "",
          "[Removed Lines]",
          "87:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);",
          "",
          "[Added Lines]",
          "87:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services8.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services8.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services8.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services8.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:     public function getParameter(string $name)",
          "50:     {",
          "52:             throw new InvalidArgumentException(sprintf('The parameter \"%s\" must be defined.', $name));",
          "53:         }",
          "54:         if (isset($this->loadedDynamicParameters[$name])) {",
          "",
          "[Removed Lines]",
          "51:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
          "",
          "[Added Lines]",
          "51:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters))) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61:     public function hasParameter(string $name): bool",
          "62:     {",
          "64:     }",
          "66:     public function setParameter(string $name, $value): void",
          "",
          "[Removed Lines]",
          "63:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);",
          "",
          "[Added Lines]",
          "63:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services9_compiled.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services9_compiled.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services9_compiled.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services9_compiled.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "412:     public function getParameter(string $name)",
          "413:     {",
          "415:             throw new InvalidArgumentException(sprintf('The parameter \"%s\" must be defined.', $name));",
          "416:         }",
          "417:         if (isset($this->loadedDynamicParameters[$name])) {",
          "",
          "[Removed Lines]",
          "414:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
          "",
          "[Added Lines]",
          "414:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters))) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "424:     public function hasParameter(string $name): bool",
          "425:     {",
          "427:     }",
          "429:     public function setParameter(string $name, $value): void",
          "",
          "[Removed Lines]",
          "426:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);",
          "",
          "[Added Lines]",
          "426:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_array_params.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_array_params.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_array_params.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_array_params.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:     public function getParameter(string $name)",
          "67:     {",
          "69:             throw new InvalidArgumentException(sprintf('The parameter \"%s\" must be defined.', $name));",
          "70:         }",
          "71:         if (isset($this->loadedDynamicParameters[$name])) {",
          "",
          "[Removed Lines]",
          "68:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
          "",
          "[Added Lines]",
          "68:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters))) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "78:     public function hasParameter(string $name): bool",
          "79:     {",
          "81:     }",
          "83:     public function setParameter(string $name, $value): void",
          "",
          "[Removed Lines]",
          "80:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);",
          "",
          "[Added Lines]",
          "80:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_base64_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_base64_env.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_base64_env.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_base64_env.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:     public function getParameter(string $name)",
          "50:     {",
          "52:             throw new InvalidArgumentException(sprintf('The parameter \"%s\" must be defined.', $name));",
          "53:         }",
          "54:         if (isset($this->loadedDynamicParameters[$name])) {",
          "",
          "[Removed Lines]",
          "51:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
          "",
          "[Added Lines]",
          "51:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters))) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61:     public function hasParameter(string $name): bool",
          "62:     {",
          "64:     }",
          "66:     public function setParameter(string $name, $value): void",
          "",
          "[Removed Lines]",
          "63:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);",
          "",
          "[Added Lines]",
          "63:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_csv_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_csv_env.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_csv_env.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_csv_env.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:     public function getParameter(string $name)",
          "50:     {",
          "52:             throw new InvalidArgumentException(sprintf('The parameter \"%s\" must be defined.', $name));",
          "53:         }",
          "54:         if (isset($this->loadedDynamicParameters[$name])) {",
          "",
          "[Removed Lines]",
          "51:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
          "",
          "[Added Lines]",
          "51:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters))) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61:     public function hasParameter(string $name): bool",
          "62:     {",
          "64:     }",
          "66:     public function setParameter(string $name, $value): void",
          "",
          "[Removed Lines]",
          "63:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);",
          "",
          "[Added Lines]",
          "63:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_default_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_default_env.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_default_env.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_default_env.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:     public function getParameter(string $name)",
          "50:     {",
          "52:             throw new InvalidArgumentException(sprintf('The parameter \"%s\" must be defined.', $name));",
          "53:         }",
          "54:         if (isset($this->loadedDynamicParameters[$name])) {",
          "",
          "[Removed Lines]",
          "51:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
          "",
          "[Added Lines]",
          "51:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters))) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61:     public function hasParameter(string $name): bool",
          "62:     {",
          "64:     }",
          "66:     public function setParameter(string $name, $value): void",
          "",
          "[Removed Lines]",
          "63:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);",
          "",
          "[Added Lines]",
          "63:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_env_in_id.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_env_in_id.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_env_in_id.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_env_in_id.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "75:     public function getParameter(string $name)",
          "76:     {",
          "78:             throw new InvalidArgumentException(sprintf('The parameter \"%s\" must be defined.', $name));",
          "79:         }",
          "80:         if (isset($this->loadedDynamicParameters[$name])) {",
          "",
          "[Removed Lines]",
          "77:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
          "",
          "[Added Lines]",
          "77:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters))) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "87:     public function hasParameter(string $name): bool",
          "88:     {",
          "90:     }",
          "92:     public function setParameter(string $name, $value): void",
          "",
          "[Removed Lines]",
          "89:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);",
          "",
          "[Added Lines]",
          "89:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_errored_definition.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_errored_definition.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_errored_definition.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_errored_definition.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "412:     public function getParameter(string $name)",
          "413:     {",
          "415:             throw new InvalidArgumentException(sprintf('The parameter \"%s\" must be defined.', $name));",
          "416:         }",
          "417:         if (isset($this->loadedDynamicParameters[$name])) {",
          "",
          "[Removed Lines]",
          "414:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
          "",
          "[Added Lines]",
          "414:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters))) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "424:     public function hasParameter(string $name): bool",
          "425:     {",
          "427:     }",
          "429:     public function setParameter(string $name, $value): void",
          "",
          "[Removed Lines]",
          "426:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);",
          "",
          "[Added Lines]",
          "426:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "95:     public function getParameter(string $name)",
          "96:     {",
          "98:             throw new InvalidArgumentException(sprintf('The parameter \"%s\" must be defined.', $name));",
          "99:         }",
          "100:         if (isset($this->loadedDynamicParameters[$name])) {",
          "",
          "[Removed Lines]",
          "97:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
          "",
          "[Added Lines]",
          "97:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters))) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "107:     public function hasParameter(string $name): bool",
          "108:     {",
          "110:     }",
          "112:     public function setParameter(string $name, $value): void",
          "",
          "[Removed Lines]",
          "109:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);",
          "",
          "[Added Lines]",
          "109:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_json_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_json_env.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_json_env.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_json_env.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:     public function getParameter(string $name)",
          "50:     {",
          "52:             throw new InvalidArgumentException(sprintf('The parameter \"%s\" must be defined.', $name));",
          "53:         }",
          "54:         if (isset($this->loadedDynamicParameters[$name])) {",
          "",
          "[Removed Lines]",
          "51:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
          "",
          "[Added Lines]",
          "51:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters))) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61:     public function hasParameter(string $name): bool",
          "62:     {",
          "64:     }",
          "66:     public function setParameter(string $name, $value): void",
          "",
          "[Removed Lines]",
          "63:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);",
          "",
          "[Added Lines]",
          "63:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_query_string_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_query_string_env.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_query_string_env.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_query_string_env.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:     public function getParameter(string $name)",
          "50:     {",
          "52:             throw new InvalidArgumentException(sprintf('The parameter \"%s\" must be defined.', $name));",
          "53:         }",
          "54:         if (isset($this->loadedDynamicParameters[$name])) {",
          "",
          "[Removed Lines]",
          "51:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
          "",
          "[Added Lines]",
          "51:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters))) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61:     public function hasParameter(string $name): bool",
          "62:     {",
          "64:     }",
          "66:     public function setParameter(string $name, $value): void",
          "",
          "[Removed Lines]",
          "63:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);",
          "",
          "[Added Lines]",
          "63:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:     public function getParameter(string $name)",
          "81:     {",
          "83:             throw new InvalidArgumentException(sprintf('The parameter \"%s\" must be defined.', $name));",
          "84:         }",
          "85:         if (isset($this->loadedDynamicParameters[$name])) {",
          "",
          "[Removed Lines]",
          "82:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
          "",
          "[Added Lines]",
          "82:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters))) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "92:     public function hasParameter(string $name): bool",
          "93:     {",
          "95:     }",
          "97:     public function setParameter(string $name, $value): void",
          "",
          "[Removed Lines]",
          "94:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);",
          "",
          "[Added Lines]",
          "94:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "84:     public function getParameter(string $name)",
          "85:     {",
          "87:             throw new InvalidArgumentException(sprintf('The parameter \"%s\" must be defined.', $name));",
          "88:         }",
          "89:         if (isset($this->loadedDynamicParameters[$name])) {",
          "",
          "[Removed Lines]",
          "86:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
          "",
          "[Added Lines]",
          "86:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters))) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "96:     public function hasParameter(string $name): bool",
          "97:     {",
          "99:     }",
          "101:     public function setParameter(string $name, $value): void",
          "",
          "[Removed Lines]",
          "98:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);",
          "",
          "[Added Lines]",
          "98:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_url_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_url_env.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_url_env.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_url_env.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:     public function getParameter(string $name)",
          "50:     {",
          "52:             throw new InvalidArgumentException(sprintf('The parameter \"%s\" must be defined.', $name));",
          "53:         }",
          "54:         if (isset($this->loadedDynamicParameters[$name])) {",
          "",
          "[Removed Lines]",
          "51:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
          "",
          "[Added Lines]",
          "51:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters))) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61:     public function hasParameter(string $name): bool",
          "62:     {",
          "64:     }",
          "66:     public function setParameter(string $name, $value): void",
          "",
          "[Removed Lines]",
          "63:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);",
          "",
          "[Added Lines]",
          "63:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \\array_key_exists($name, $this->parameters);",
          "",
          "---------------"
        ]
      }
    }
  ]
}