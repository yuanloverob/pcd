{
  "cve_id": "CVE-2024-45812",
  "cve_desc": "Vite a frontend build tooling framework for javascript. Affected versions of vite were discovered to contain a DOM Clobbering vulnerability when building scripts to `cjs`/`iife`/`umd` output format. The DOM Clobbering gadget in the module can lead to cross-site scripting (XSS) in web pages where scriptless attacker-controlled HTML elements (e.g., an img tag with an unsanitized name attribute) are present. DOM Clobbering is a type of code-reuse attack where the attacker first embeds a piece of non-script, seemingly benign HTML markups in the webpage (e.g. through a post or comment) and leverages the gadgets (pieces of js code) living in the existing javascript code to transform it into executable code. We have identified a DOM Clobbering vulnerability in Vite bundled scripts, particularly when the scripts dynamically import other scripts from the assets folder and the developer sets the build output format to `cjs`, `iife`, or `umd`. In such cases, Vite replaces relative paths starting with `__VITE_ASSET__` using the URL retrieved from `document.currentScript`. However, this implementation is vulnerable to a DOM Clobbering attack. The `document.currentScript` lookup can be shadowed by an attacker via the browser's named DOM tree element access mechanism. This manipulation allows an attacker to replace the intended script element with a malicious HTML element. When this happens, the src attribute of the attacker-controlled element is used as the URL for importing scripts, potentially leading to the dynamic loading of scripts from an attacker-controlled server. This vulnerability can result in cross-site scripting (XSS) attacks on websites that include Vite-bundled files (configured with an output format of `cjs`, `iife`, or `umd`) and allow users to inject certain scriptless HTML tags without properly sanitizing the name or id attributes. This issue has been patched in versions 5.4.6, 5.3.6, 5.2.14, 4.5.5, and 3.2.11. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
  "repo": "vitejs/vite",
  "patch_hash": "2691bb3ff6b073b41fb9046909e1e03a74e36675",
  "patch_info": {
    "commit_hash": "2691bb3ff6b073b41fb9046909e1e03a74e36675",
    "repo": "vitejs/vite",
    "commit_url": "https://github.com/vitejs/vite/commit/2691bb3ff6b073b41fb9046909e1e03a74e36675",
    "files": [
      "packages/vite/src/node/build.ts"
    ],
    "message": "fix: avoid DOM Clobbering gadget in `getRelativeUrlFromDocument` (#18115)",
    "before_after_code_files": [
      "packages/vite/src/node/build.ts||packages/vite/src/node/build.ts"
    ]
  },
  "patch_diff": {
    "packages/vite/src/node/build.ts||packages/vite/src/node/build.ts": [
      "File: packages/vite/src/node/build.ts -> packages/vite/src/node/build.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "1133:   getResolveUrl(",
      "1134:     `'${escapeId(partialEncodeURIPath(relativePath))}', ${",
      "1135:       umd ? `typeof document === 'undefined' ? location.href : ` : ''",
      "1137:   )",
      "1139: const getFileUrlFromFullPath = (path: string) =>",
      "",
      "[Removed Lines]",
      "1136:     }document.currentScript && document.currentScript.src || document.baseURI`,",
      "",
      "[Added Lines]",
      "1136:     }document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT' && document.currentScript.src || document.baseURI`,",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4573a6fd6f1b097fb7296a3e135e0646b996b249",
      "candidate_info": {
        "commit_hash": "4573a6fd6f1b097fb7296a3e135e0646b996b249",
        "repo": "vitejs/vite",
        "commit_url": "https://github.com/vitejs/vite/commit/4573a6fd6f1b097fb7296a3e135e0646b996b249",
        "files": [
          "packages/vite/src/node/server/middlewares/static.ts",
          "packages/vite/src/node/server/middlewares/transform.ts",
          "playground/fs-serve/__tests__/fs-serve.spec.ts",
          "playground/fs-serve/root/src/index.html"
        ],
        "message": "fix: fs raw query (#18112)",
        "before_after_code_files": [
          "packages/vite/src/node/server/middlewares/static.ts||packages/vite/src/node/server/middlewares/static.ts",
          "packages/vite/src/node/server/middlewares/transform.ts||packages/vite/src/node/server/middlewares/transform.ts",
          "playground/fs-serve/__tests__/fs-serve.spec.ts||playground/fs-serve/__tests__/fs-serve.spec.ts",
          "playground/fs-serve/root/src/index.html||playground/fs-serve/root/src/index.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/vitejs/vite/pull/18122"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/vite/src/node/server/middlewares/static.ts||packages/vite/src/node/server/middlewares/static.ts": [
          "File: packages/vite/src/node/server/middlewares/static.ts -> packages/vite/src/node/server/middlewares/static.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "229:   return false",
          "230: }",
          "233:   url: string,",
          "234:   server: ViteDevServer,",
          "235:   res: ServerResponse,",
          "",
          "[Removed Lines]",
          "232: function ensureServingAccess(",
          "",
          "[Added Lines]",
          "232: export function ensureServingAccess(",
          "",
          "---------------"
        ],
        "packages/vite/src/node/server/middlewares/transform.ts||packages/vite/src/node/server/middlewares/transform.ts": [
          "File: packages/vite/src/node/server/middlewares/transform.ts -> packages/vite/src/node/server/middlewares/transform.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:   isJSRequest,",
          "13:   normalizePath,",
          "14:   prettifyUrl,",
          "15:   removeImportQuery,",
          "16:   removeTimestampQuery,",
          "17:   urlRE,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15:   rawRE,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "35: import { getDepsOptimizer } from '../../optimizer'",
          "36: import { cleanUrl, unwrapId, withTrailingSlash } from '../../../shared/utils'",
          "37: import { NULL_BYTE_PLACEHOLDER } from '../../../shared/constants'",
          "39: const debugCache = createDebugger('vite:cache')",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39: import { ensureServingAccess } from './static'",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "158:         warnAboutExplicitPublicPathInUrl(url)",
          "159:       }",
          "161:       if (",
          "162:         isJSRequest(url) ||",
          "163:         isImportRequest(url) ||",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "163:       if (",
          "164:         (rawRE.test(url) || urlRE.test(url)) &&",
          "165:         !ensureServingAccess(url, server, res, next)",
          "166:       ) {",
          "167:         return",
          "168:       }",
          "",
          "---------------"
        ],
        "playground/fs-serve/__tests__/fs-serve.spec.ts||playground/fs-serve/__tests__/fs-serve.spec.ts": [
          "File: playground/fs-serve/__tests__/fs-serve.spec.ts -> playground/fs-serve/__tests__/fs-serve.spec.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:     expect(await page.textContent('.unsafe-fs-fetch-status')).toBe('403')",
          "78:   })",
          "80:   test('unsafe fs fetch with special characters (#8498)', async () => {",
          "81:     expect(await page.textContent('.unsafe-fs-fetch-8498')).toBe('')",
          "82:     expect(await page.textContent('.unsafe-fs-fetch-8498-status')).toBe('404')",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "80:   test('unsafe fs fetch', async () => {",
          "81:     expect(await page.textContent('.unsafe-fs-fetch-raw')).toBe('')",
          "82:     expect(await page.textContent('.unsafe-fs-fetch-raw-status')).toBe('403')",
          "83:   })",
          "",
          "---------------"
        ],
        "playground/fs-serve/root/src/index.html||playground/fs-serve/root/src/index.html": [
          "File: playground/fs-serve/root/src/index.html -> playground/fs-serve/root/src/index.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: <h2>Unsafe /@fs/ Fetch</h2>",
          "36: <pre class=\"unsafe-fs-fetch-status\"></pre>",
          "37: <pre class=\"unsafe-fs-fetch\"></pre>",
          "38: <pre class=\"unsafe-fs-fetch-8498-status\"></pre>",
          "39: <pre class=\"unsafe-fs-fetch-8498\"></pre>",
          "40: <pre class=\"unsafe-fs-fetch-8498-2-status\"></pre>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38: <pre class=\"unsafe-fs-fetch-raw-status\"></pre>",
          "39: <pre class=\"unsafe-fs-fetch-raw\"></pre>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "188:       console.error(e)",
          "189:     })",
          "192:   fetch(",
          "193:     joinUrlSegments(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "194:   fetch(",
          "195:     joinUrlSegments(",
          "196:       base,",
          "197:       joinUrlSegments('/@fs/', ROOT) + '/unsafe.json?import&raw',",
          "198:     ),",
          "199:   )",
          "200:     .then((r) => {",
          "201:       text('.unsafe-fs-fetch-raw-status', r.status)",
          "202:       return r.json()",
          "203:     })",
          "204:     .then((data) => {",
          "205:       text('.unsafe-fs-fetch-raw', JSON.stringify(data))",
          "206:     })",
          "207:     .catch((e) => {",
          "208:       console.error(e)",
          "209:     })",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ebb94c5b3bf41950f45562595adec117a4d0ba5e",
      "candidate_info": {
        "commit_hash": "ebb94c5b3bf41950f45562595adec117a4d0ba5e",
        "repo": "vitejs/vite",
        "commit_url": "https://github.com/vitejs/vite/commit/ebb94c5b3bf41950f45562595adec117a4d0ba5e",
        "files": [
          "packages/vite/src/node/build.ts"
        ],
        "message": "fix: avoid DOM Clobbering gadget in `getRelativeUrlFromDocument` (#18115)",
        "before_after_code_files": [
          "packages/vite/src/node/build.ts||packages/vite/src/node/build.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "packages/vite/src/node/build.ts||packages/vite/src/node/build.ts"
          ],
          "candidate": [
            "packages/vite/src/node/build.ts||packages/vite/src/node/build.ts"
          ]
        }
      },
      "candidate_diff": {
        "packages/vite/src/node/build.ts||packages/vite/src/node/build.ts": [
          "File: packages/vite/src/node/build.ts -> packages/vite/src/node/build.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1131:   getResolveUrl(",
          "1132:     `'${escapeId(partialEncodeURIPath(relativePath))}', ${",
          "1133:       umd ? `typeof document === 'undefined' ? location.href : ` : ''",
          "1135:   )",
          "1137: const getFileUrlFromFullPath = (path: string) =>",
          "",
          "[Removed Lines]",
          "1134:     }document.currentScript && document.currentScript.src || document.baseURI`,",
          "",
          "[Added Lines]",
          "1134:     }document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT' && document.currentScript.src || document.baseURI`,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "179b17773cf35c73ddb041f9e6c703fd9f3126af",
      "candidate_info": {
        "commit_hash": "179b17773cf35c73ddb041f9e6c703fd9f3126af",
        "repo": "vitejs/vite",
        "commit_url": "https://github.com/vitejs/vite/commit/179b17773cf35c73ddb041f9e6c703fd9f3126af",
        "files": [
          "packages/vite/src/node/build.ts"
        ],
        "message": "fix: avoid DOM Clobbering gadget in `getRelativeUrlFromDocument` (#18115)",
        "before_after_code_files": [
          "packages/vite/src/node/build.ts||packages/vite/src/node/build.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "packages/vite/src/node/build.ts||packages/vite/src/node/build.ts"
          ],
          "candidate": [
            "packages/vite/src/node/build.ts||packages/vite/src/node/build.ts"
          ]
        }
      },
      "candidate_diff": {
        "packages/vite/src/node/build.ts||packages/vite/src/node/build.ts": [
          "File: packages/vite/src/node/build.ts -> packages/vite/src/node/build.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1133:   getResolveUrl(",
          "1134:     `'${escapeId(partialEncodeURIPath(relativePath))}', ${",
          "1135:       umd ? `typeof document === 'undefined' ? location.href : ` : ''",
          "1137:   )",
          "1139: const getFileUrlFromFullPath = (path: string) =>",
          "",
          "[Removed Lines]",
          "1136:     }document.currentScript && document.currentScript.src || document.baseURI`,",
          "",
          "[Added Lines]",
          "1136:     }document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT' && document.currentScript.src || document.baseURI`,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5caa08f069883b39230b8071eb268ee226c5911c",
      "candidate_info": {
        "commit_hash": "5caa08f069883b39230b8071eb268ee226c5911c",
        "repo": "vitejs/vite",
        "commit_url": "https://github.com/vitejs/vite/commit/5caa08f069883b39230b8071eb268ee226c5911c",
        "files": [
          "packages/vite/src/node/build.ts"
        ],
        "message": "fix: avoid DOM Clobbering gadget in `getRelativeUrlFromDocument` (#18115)",
        "before_after_code_files": [
          "packages/vite/src/node/build.ts||packages/vite/src/node/build.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "packages/vite/src/node/build.ts||packages/vite/src/node/build.ts"
          ],
          "candidate": [
            "packages/vite/src/node/build.ts||packages/vite/src/node/build.ts"
          ]
        }
      },
      "candidate_diff": {
        "packages/vite/src/node/build.ts||packages/vite/src/node/build.ts": [
          "File: packages/vite/src/node/build.ts -> packages/vite/src/node/build.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1094:   getResolveUrl(",
          "1095:     `'${escapeId(relativePath)}', ${",
          "1096:       umd ? `typeof document === 'undefined' ? location.href : ` : ''",
          "1098:   )",
          "1100: const getFileUrlFromFullPath = (path: string) =>",
          "",
          "[Removed Lines]",
          "1097:     }document.currentScript && document.currentScript.src || document.baseURI`,",
          "",
          "[Added Lines]",
          "1097:     }document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT' && document.currentScript.src || document.baseURI`,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e8127166979e7ace6eeaa2c3b733c8994caa31f3",
      "candidate_info": {
        "commit_hash": "e8127166979e7ace6eeaa2c3b733c8994caa31f3",
        "repo": "vitejs/vite",
        "commit_url": "https://github.com/vitejs/vite/commit/e8127166979e7ace6eeaa2c3b733c8994caa31f3",
        "files": [
          "packages/vite/src/node/build.ts"
        ],
        "message": "fix: avoid DOM Clobbering gadget in `getRelativeUrlFromDocument` (#18115)",
        "before_after_code_files": [
          "packages/vite/src/node/build.ts||packages/vite/src/node/build.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "packages/vite/src/node/build.ts||packages/vite/src/node/build.ts"
          ],
          "candidate": [
            "packages/vite/src/node/build.ts||packages/vite/src/node/build.ts"
          ]
        }
      },
      "candidate_diff": {
        "packages/vite/src/node/build.ts||packages/vite/src/node/build.ts": [
          "File: packages/vite/src/node/build.ts -> packages/vite/src/node/build.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1100:   getResolveUrl(",
          "1101:     `'${escapeId(relativePath)}', ${",
          "1102:       umd ? `typeof document === 'undefined' ? location.href : ` : ''",
          "1104:   )",
          "1106: const getFileUrlFromFullPath = (path: string) =>",
          "",
          "[Removed Lines]",
          "1103:     }document.currentScript && document.currentScript.src || document.baseURI`,",
          "",
          "[Added Lines]",
          "1103:     }document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT' && document.currentScript.src || document.baseURI`,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2ddd8541ec3b2d2e5b698749e0f2362ef28056bd",
      "candidate_info": {
        "commit_hash": "2ddd8541ec3b2d2e5b698749e0f2362ef28056bd",
        "repo": "vitejs/vite",
        "commit_url": "https://github.com/vitejs/vite/commit/2ddd8541ec3b2d2e5b698749e0f2362ef28056bd",
        "files": [
          "packages/vite/src/node/build.ts"
        ],
        "message": "fix: backport #18115, DOM Clobbering in",
        "before_after_code_files": [
          "packages/vite/src/node/build.ts||packages/vite/src/node/build.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "packages/vite/src/node/build.ts||packages/vite/src/node/build.ts"
          ],
          "candidate": [
            "packages/vite/src/node/build.ts||packages/vite/src/node/build.ts"
          ]
        }
      },
      "candidate_diff": {
        "packages/vite/src/node/build.ts||packages/vite/src/node/build.ts": [
          "File: packages/vite/src/node/build.ts -> packages/vite/src/node/build.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1005:   getResolveUrl(",
          "1006:     `'${relativePath}', ${",
          "1007:       umd ? `typeof document === 'undefined' ? location.href : ` : ''",
          "1009:   )",
          "1011: const relativeUrlMechanisms: Record<",
          "",
          "[Removed Lines]",
          "1008:     }document.currentScript && document.currentScript.src || document.baseURI`",
          "",
          "[Added Lines]",
          "1008:     }document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT' && document.currentScript.src || document.baseURI`",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ade1d89660e17eedfd35652165b0c26905259fad",
      "candidate_info": {
        "commit_hash": "ade1d89660e17eedfd35652165b0c26905259fad",
        "repo": "vitejs/vite",
        "commit_url": "https://github.com/vitejs/vite/commit/ade1d89660e17eedfd35652165b0c26905259fad",
        "files": [
          "packages/vite/src/node/build.ts"
        ],
        "message": "fix: avoid DOM Clobbering gadget in `getRelativeUrlFromDocument` (#18115)",
        "before_after_code_files": [
          "packages/vite/src/node/build.ts||packages/vite/src/node/build.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "packages/vite/src/node/build.ts||packages/vite/src/node/build.ts"
          ],
          "candidate": [
            "packages/vite/src/node/build.ts||packages/vite/src/node/build.ts"
          ]
        }
      },
      "candidate_diff": {
        "packages/vite/src/node/build.ts||packages/vite/src/node/build.ts": [
          "File: packages/vite/src/node/build.ts -> packages/vite/src/node/build.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1297:   getResolveUrl(",
          "1298:     `'${escapeId(partialEncodeURIPath(relativePath))}', ${",
          "1299:       umd ? `typeof document === 'undefined' ? location.href : ` : ''",
          "1301:   )",
          "1303: const getFileUrlFromFullPath = (path: string) =>",
          "",
          "[Removed Lines]",
          "1300:     }document.currentScript && document.currentScript.src || document.baseURI`,",
          "",
          "[Added Lines]",
          "1300:     }document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT' && document.currentScript.src || document.baseURI`,",
          "",
          "---------------"
        ]
      }
    }
  ]
}