{
  "cve_id": "CVE-2022-24877",
  "cve_desc": "Flux is an open and extensible continuous delivery solution for Kubernetes. Path Traversal in the kustomize-controller via a malicious `kustomization.yaml` allows an attacker to expose sensitive data from the controller\u2019s pod filesystem and possibly privilege escalation in multi-tenancy deployments. Workarounds include automated tooling in the user's CI/CD pipeline to validate `kustomization.yaml` files conform with specific policies. This vulnerability is fixed in kustomize-controller v0.24.0 and included in flux2 v0.29.0.",
  "repo": "fluxcd/kustomize-controller",
  "patch_hash": "f4528fb25d611da94e491346bea056d5c5c3611f",
  "patch_info": {
    "commit_hash": "f4528fb25d611da94e491346bea056d5c5c3611f",
    "repo": "fluxcd/kustomize-controller",
    "commit_url": "https://github.com/fluxcd/kustomize-controller/commit/f4528fb25d611da94e491346bea056d5c5c3611f",
    "files": [
      "controllers/kustomization_controller.go",
      "controllers/kustomization_decryptor.go",
      "controllers/kustomization_generator.go",
      "go.mod",
      "go.sum"
    ],
    "message": "controllers: use own Kustomize FS implementation\n\nFor details, see: https://github.com/fluxcd/pkg/pull/262\n\nSigned-off-by: Hidde Beydals <hello@hidde.co>",
    "before_after_code_files": [
      "controllers/kustomization_controller.go||controllers/kustomization_controller.go",
      "controllers/kustomization_decryptor.go||controllers/kustomization_decryptor.go",
      "controllers/kustomization_generator.go||controllers/kustomization_generator.go",
      "go.mod||go.mod",
      "go.sum||go.sum"
    ]
  },
  "patch_diff": {
    "controllers/kustomization_controller.go||controllers/kustomization_controller.go": [
      "File: controllers/kustomization_controller.go -> controllers/kustomization_controller.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "52:  \"sigs.k8s.io/controller-runtime/pkg/predicate\"",
      "53:  \"sigs.k8s.io/controller-runtime/pkg/reconcile\"",
      "54:  \"sigs.k8s.io/controller-runtime/pkg/source\"",
      "57:  apiacl \"github.com/fluxcd/pkg/apis/acl\"",
      "58:  \"github.com/fluxcd/pkg/apis/meta\"",
      "",
      "[Removed Lines]",
      "55:  \"sigs.k8s.io/kustomize/kyaml/filesys\"",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "357:  }",
      "361:  if err != nil {",
      "362:   return kustomizev1.KustomizationNotReady(",
      "363:    kustomization,",
      "",
      "[Removed Lines]",
      "360:  err = r.generate(kustomization, dirPath)",
      "",
      "[Added Lines]",
      "359:  err = r.generate(kustomization, tmpDir, dirPath)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "629:  return source, nil",
      "630: }",
      "634:  return gen.WriteFile(dirPath)",
      "635: }",
      "",
      "[Removed Lines]",
      "632: func (r *KustomizationReconciler) generate(kustomization kustomizev1.Kustomization, dirPath string) error {",
      "633:  gen := NewGenerator(kustomization)",
      "",
      "[Added Lines]",
      "631: func (r *KustomizationReconciler) generate(kustomization kustomizev1.Kustomization, workDir string, dirPath string) error {",
      "632:  gen := NewGenerator(workDir, kustomization)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "641:  }",
      "642:  defer cleanup()",
      "645:  if err := dec.ImportKeys(ctx); err != nil {",
      "646:   return nil, err",
      "647:  }",
      "655:  }",
      "657:  if err != nil {",
      "658:   return nil, fmt.Errorf(\"kustomize build failed: %w\", err)",
      "659:  }",
      "",
      "[Removed Lines]",
      "649:  fs := filesys.MakeFsOnDisk()",
      "651:  if kustomization.Spec.Decryption != nil {",
      "652:   if err = dec.DecryptEnvSources(dirPath); err != nil {",
      "653:    return nil, fmt.Errorf(\"error decrypting .env file: %w\", err)",
      "654:   }",
      "656:  m, err := buildKustomization(fs, dirPath)",
      "",
      "[Added Lines]",
      "649:  if err = dec.DecryptEnvSources(dirPath); err != nil {",
      "650:   return nil, fmt.Errorf(\"error decrypting env sources: %w\", err)",
      "653:  m, err := secureBuildKustomization(workDir, dirPath)",
      "",
      "---------------"
    ],
    "controllers/kustomization_decryptor.go||controllers/kustomization_decryptor.go": [
      "File: controllers/kustomization_decryptor.go -> controllers/kustomization_decryptor.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "360: func (d *KustomizeDecryptor) DecryptEnvSources(path string) error {",
      "362:   return nil",
      "363:  }",
      "",
      "[Removed Lines]",
      "361:  if d.kustomization.Spec.Decryption.Provider != DecryptionProviderSOPS {",
      "",
      "[Added Lines]",
      "361:  if d.kustomization.Spec.Decryption == nil || d.kustomization.Spec.Decryption.Provider != DecryptionProviderSOPS {",
      "",
      "---------------"
    ],
    "controllers/kustomization_generator.go||controllers/kustomization_generator.go": [
      "File: controllers/kustomization_generator.go -> controllers/kustomization_generator.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "29:  \"sigs.k8s.io/kustomize/api/provider\"",
      "30:  \"sigs.k8s.io/kustomize/api/resmap\"",
      "31:  kustypes \"sigs.k8s.io/kustomize/api/types\"",
      "33:  \"sigs.k8s.io/yaml\"",
      "36:  \"github.com/fluxcd/pkg/apis/kustomize\"",
      "37: )",
      "39: type KustomizeGenerator struct {",
      "40:  kustomization kustomizev1.Kustomization",
      "41: }",
      "44:  return &KustomizeGenerator{",
      "45:   kustomization: kustomization,",
      "46:  }",
      "47: }",
      "",
      "[Removed Lines]",
      "32:  \"sigs.k8s.io/kustomize/kyaml/filesys\"",
      "35:  kustomizev1 \"github.com/fluxcd/kustomize-controller/api/v1beta2\"",
      "43: func NewGenerator(kustomization kustomizev1.Kustomization) *KustomizeGenerator {",
      "",
      "[Added Lines]",
      "35:  securefs \"github.com/fluxcd/pkg/kustomize/filesys\"",
      "37:  kustomizev1 \"github.com/fluxcd/kustomize-controller/api/v1beta2\"",
      "41:  root          string",
      "45: func NewGenerator(root string, kustomization kustomizev1.Kustomization) *KustomizeGenerator {",
      "47:   root:          root,",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "127: }",
      "129: func (kg *KustomizeGenerator) generateKustomization(dirPath string) error {",
      "",
      "[Removed Lines]",
      "130:  fs := filesys.MakeFsOnDisk()",
      "",
      "[Added Lines]",
      "133:  fs, err := securefs.MakeFsOnDiskSecure(kg.root)",
      "134:  if err != nil {",
      "135:   return err",
      "136:  }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "235: var kustomizeBuildMutex sync.Mutex",
      "243:  kustomizeBuildMutex.Lock()",
      "244:  defer kustomizeBuildMutex.Unlock()",
      "",
      "[Removed Lines]",
      "240: func buildKustomization(fs filesys.FileSystem, dirPath string) (resmap.ResMap, error) {",
      "",
      "[Added Lines]",
      "248: func secureBuildKustomization(root, dirPath string) (resmap.ResMap, error) {",
      "250:  fs, err := securefs.MakeFsOnDiskSecure(root)",
      "251:  if err != nil {",
      "252:   return nil, err",
      "253:  }",
      "",
      "---------------"
    ],
    "go.mod||go.mod": [
      "File: go.mod -> go.mod",
      "--- Hunk 1 ---",
      "[Context before]",
      "16:  github.com/fluxcd/pkg/apis/acl v0.0.3",
      "17:  github.com/fluxcd/pkg/apis/kustomize v0.3.2",
      "18:  github.com/fluxcd/pkg/apis/meta v0.12.1",
      "19:  github.com/fluxcd/pkg/runtime v0.13.3",
      "20:  github.com/fluxcd/pkg/ssa v0.15.1",
      "21:  github.com/fluxcd/pkg/testserver v0.2.0",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "19:  github.com/fluxcd/pkg/kustomize v0.2.0",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "29:  go.mozilla.org/sops/v3 v3.7.2",
      "30:  golang.org/x/net v0.0.0-20220225172249-27dd8689420f",
      "31:  google.golang.org/grpc v1.45.0",
      "36:  sigs.k8s.io/cli-utils v0.29.3",
      "38:  sigs.k8s.io/kustomize/api v0.11.4",
      "40:  sigs.k8s.io/yaml v1.3.0",
      "41: )",
      "",
      "[Removed Lines]",
      "32:  k8s.io/api v0.23.4",
      "33:  k8s.io/apiextensions-apiserver v0.23.4",
      "34:  k8s.io/apimachinery v0.23.4",
      "35:  k8s.io/client-go v0.23.4",
      "37:  sigs.k8s.io/controller-runtime v0.11.1",
      "39:  sigs.k8s.io/kustomize/kyaml v0.13.6",
      "",
      "[Added Lines]",
      "33:  k8s.io/api v0.23.5",
      "34:  k8s.io/apiextensions-apiserver v0.23.5",
      "35:  k8s.io/apimachinery v0.23.5",
      "36:  k8s.io/client-go v0.23.5",
      "38:  sigs.k8s.io/controller-runtime v0.11.2",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "199:  gopkg.in/yaml.v2 v2.4.0 // indirect",
      "200:  gopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b // indirect",
      "201:  k8s.io/cli-runtime v0.23.2 // indirect",
      "203:  k8s.io/klog/v2 v2.50.0 // indirect",
      "204:  k8s.io/kube-openapi v0.0.0-20211115234752-e816edb12b65 // indirect",
      "205:  k8s.io/kubectl v0.23.2 // indirect",
      "206:  k8s.io/utils v0.0.0-20220210201930-3a6ce19ff2f9 // indirect",
      "207:  sigs.k8s.io/json v0.0.0-20211208200746-9f7c6b3444d2 // indirect",
      "208:  sigs.k8s.io/structured-merge-diff/v4 v4.2.1 // indirect",
      "209: )",
      "",
      "[Removed Lines]",
      "202:  k8s.io/component-base v0.23.4 // indirect",
      "",
      "[Added Lines]",
      "202:  k8s.io/component-base v0.23.5 // indirect",
      "208:  sigs.k8s.io/kustomize/kyaml v0.13.6 // indirect",
      "",
      "---------------"
    ],
    "go.sum||go.sum": [
      "File: go.sum -> go.sum",
      "--- Hunk 1 ---",
      "[Context before]",
      "276: github.com/fluxcd/pkg/apis/kustomize v0.3.2/go.mod h1:p8iAH5TeqMBnnxkkpCNNDvWYfKlNRx89a6WKOo+hJHA=",
      "277: github.com/fluxcd/pkg/apis/meta v0.12.1 h1:m5PfKAqbqWBvGp9+JRj1sv+xNkGsHwUVf+3rJ8wm6SE=",
      "278: github.com/fluxcd/pkg/apis/meta v0.12.1/go.mod h1:f8YVt70/KAhqzZ7xxhjvqyzKubOYx2pAbakb/FfCEg8=",
      "279: github.com/fluxcd/pkg/runtime v0.13.3 h1:k0Xun+RoEC/F6iuAPTA6rQb+I4B4oecBx6pOcodX11A=",
      "280: github.com/fluxcd/pkg/runtime v0.13.3/go.mod h1:dzWNKqFzFXeittbpFcJzR3cdC9CWlbzw+pNOgaVvF/0=",
      "281: github.com/fluxcd/pkg/ssa v0.15.1 h1:HXAT+K6c9Yy8Evxdyk3DU0KTk3yZ+fwgTEEzU1W/1V8=",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "279: github.com/fluxcd/pkg/kustomize v0.2.0 h1:twiGAFJctt2tyH8vHxL1uqb6BlU3B9ZqG8uSlluuioM=",
      "280: github.com/fluxcd/pkg/kustomize v0.2.0/go.mod h1:Qczvl7vNY9NJBpyaFrldsxfGjj6uaMcMmKGsSJ6hcxc=",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1440: honnef.co/go/tools v0.0.1-2020.1.3/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=",
      "1441: honnef.co/go/tools v0.0.1-2020.1.4/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=",
      "1442: k8s.io/api v0.23.2/go.mod h1:sYuDb3flCtRPI8ghn6qFrcK5ZBu2mhbElxRE95qpwlI=",
      "1447: k8s.io/apimachinery v0.23.2/go.mod h1:zDqeV0AK62LbCI0CI7KbWCAYdLg+E+8UXJ0rIz5gmS8=",
      "1451: k8s.io/cli-runtime v0.23.2 h1:4zOZX78mFSakwe4gef81XDBu94Yu0th6bfveTOx8ZQk=",
      "1452: k8s.io/cli-runtime v0.23.2/go.mod h1:Ag70akCDvwux4HxY+nH2J3UqE2e6iwSSdG1HE6p1VTU=",
      "1453: k8s.io/client-go v0.23.2/go.mod h1:k3YbsWg6GWdHF1THHTQP88X9RhB1DWPo3Dq7KfU/D1c=",
      "1456: k8s.io/code-generator v0.23.2/go.mod h1:S0Q1JVA+kSzTI1oUvbKAxZY/DYbA/ZUb4Uknog12ETk=",
      "1458: k8s.io/component-base v0.23.2/go.mod h1:wS9Z03MO3oJ0RU8bB/dbXTiluGju+SC/F5i660gxB8c=",
      "1461: k8s.io/component-helpers v0.23.2/go.mod h1:J6CMwiaf0izLoNwiLl2OymB4+rGTsTpWp6PL/AqOM4U=",
      "1462: k8s.io/gengo v0.0.0-20200413195148-3a45101e95ac/go.mod h1:ezvh/TsK7cY6rbqRK0oQQ8IAqLxYwwyPxAX1Pzy0ii0=",
      "1463: k8s.io/gengo v0.0.0-20210813121822-485abfe95c7c/go.mod h1:FiNAH4ZV3gBg2Kwh89tzAEV2be7d5xI0vBa/VySYy3E=",
      "",
      "[Removed Lines]",
      "1443: k8s.io/api v0.23.4 h1:85gnfXQOWbJa1SiWGpE9EEtHs0UVvDyIsSMpEtl2D4E=",
      "1444: k8s.io/api v0.23.4/go.mod h1:i77F4JfyNNrhOjZF7OwwNJS5Y1S9dpwvb9iYRYRczfI=",
      "1445: k8s.io/apiextensions-apiserver v0.23.4 h1:AFDUEu/yEf0YnuZhqhIFhPLPhhcQQVuR1u3WCh0rveU=",
      "1446: k8s.io/apiextensions-apiserver v0.23.4/go.mod h1:TWYAKymJx7nLMxWCgWm2RYGXHrGlVZnxIlGnvtfYu+g=",
      "1448: k8s.io/apimachinery v0.23.4 h1:fhnuMd/xUL3Cjfl64j5ULKZ1/J9n8NuQEgNL+WXWfdM=",
      "1449: k8s.io/apimachinery v0.23.4/go.mod h1:BEuFMMBaIbcOqVIJqNZJXGFTP4W6AycEpb5+m/97hrM=",
      "1450: k8s.io/apiserver v0.23.4/go.mod h1:A6l/ZcNtxGfPSqbFDoxxOjEjSKBaQmE+UTveOmMkpNc=",
      "1454: k8s.io/client-go v0.23.4 h1:YVWvPeerA2gpUudLelvsolzH7c2sFoXXR5wM/sWqNFU=",
      "1455: k8s.io/client-go v0.23.4/go.mod h1:PKnIL4pqLuvYUK1WU7RLTMYKPiIh7MYShLshtRY9cj0=",
      "1457: k8s.io/code-generator v0.23.4/go.mod h1:S0Q1JVA+kSzTI1oUvbKAxZY/DYbA/ZUb4Uknog12ETk=",
      "1459: k8s.io/component-base v0.23.4 h1:SziYh48+QKxK+ykJ3Ejqd98XdZIseVBG7sBaNLPqy6M=",
      "1460: k8s.io/component-base v0.23.4/go.mod h1:8o3Gg8i2vnUXGPOwciiYlkSaZT+p+7gA9Scoz8y4W4E=",
      "",
      "[Added Lines]",
      "1445: k8s.io/api v0.23.5 h1:zno3LUiMubxD/V1Zw3ijyKO3wxrhbUF1Ck+VjBvfaoA=",
      "1446: k8s.io/api v0.23.5/go.mod h1:Na4XuKng8PXJ2JsploYYrivXrINeTaycCGcYgF91Xm8=",
      "1447: k8s.io/apiextensions-apiserver v0.23.5 h1:5SKzdXyvIJKu+zbfPc3kCbWpbxi+O+zdmAJBm26UJqI=",
      "1448: k8s.io/apiextensions-apiserver v0.23.5/go.mod h1:ntcPWNXS8ZPKN+zTXuzYMeg731CP0heCTl6gYBxLcuQ=",
      "1450: k8s.io/apimachinery v0.23.5 h1:Va7dwhp8wgkUPWsEXk6XglXWU4IKYLKNlv8VkX7SDM0=",
      "1451: k8s.io/apimachinery v0.23.5/go.mod h1:BEuFMMBaIbcOqVIJqNZJXGFTP4W6AycEpb5+m/97hrM=",
      "1452: k8s.io/apiserver v0.23.5/go.mod h1:7wvMtGJ42VRxzgVI7jkbKvMbuCbVbgsWFT7RyXiRNTw=",
      "1456: k8s.io/client-go v0.23.5 h1:zUXHmEuqx0RY4+CsnkOn5l0GU+skkRXKGJrhmE2SLd8=",
      "1457: k8s.io/client-go v0.23.5/go.mod h1:flkeinTO1CirYgzMPRWxUCnV0G4Fbu2vLhYCObnt/r4=",
      "1459: k8s.io/code-generator v0.23.5/go.mod h1:S0Q1JVA+kSzTI1oUvbKAxZY/DYbA/ZUb4Uknog12ETk=",
      "1461: k8s.io/component-base v0.23.5 h1:8qgP5R6jG1BBSXmRYW+dsmitIrpk8F/fPEvgDenMCCE=",
      "1462: k8s.io/component-base v0.23.5/go.mod h1:c5Nq44KZyt1aLl0IpHX82fhsn84Sb0jjzwjpcA42bY0=",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1480: rsc.io/binaryregexp v0.2.0/go.mod h1:qTv7/COck+e2FymRvadv62gMdZztPaShugOCi3I+8D8=",
      "1481: rsc.io/quote/v3 v3.1.0/go.mod h1:yEA65RcK8LyAZtP9Kv3t0HmxON59tX3rD+tICJqUlj0=",
      "1482: rsc.io/sampler v1.3.0/go.mod h1:T1hPZKmBbMNahiBKFy5HrXp6adAjACjK9JXDnKaTXpA=",
      "1484: sigs.k8s.io/cli-utils v0.29.3 h1:4QRB9ayCd5pd9M/D3q2KQgr+nYrvRaw3suW+rcOutvk=",
      "1485: sigs.k8s.io/cli-utils v0.29.3/go.mod h1:WDVRa5/eQBKntG++uyKdyT+xU7MLdCR4XsgseqL5uX4=",
      "1488: sigs.k8s.io/json v0.0.0-20211020170558-c049b76a60c6/go.mod h1:p4QtZmO4uMYipTQNzagwnNoseA6OxSUutVw05NhYDRs=",
      "1489: sigs.k8s.io/json v0.0.0-20211208200746-9f7c6b3444d2 h1:kDi4JBNAsJWfz1aEXhO8Jg87JJaPNLh5tIzYHgStQ9Y=",
      "1490: sigs.k8s.io/json v0.0.0-20211208200746-9f7c6b3444d2/go.mod h1:B+TnT182UBxE84DiCz4CVE26eOSDAeYCpfDnC2kdKMY=",
      "",
      "[Removed Lines]",
      "1483: sigs.k8s.io/apiserver-network-proxy/konnectivity-client v0.0.27/go.mod h1:tq2nT0Kx7W+/f2JVE+zxYtUhdjuELJkVpNz+x/QN5R4=",
      "1486: sigs.k8s.io/controller-runtime v0.11.1 h1:7YIHT2QnHJArj/dk9aUkYhfqfK5cIxPOX5gPECfdZLU=",
      "1487: sigs.k8s.io/controller-runtime v0.11.1/go.mod h1:KKwLiTooNGu+JmLZGn9Sl3Gjmfj66eMbCQznLP5zcqA=",
      "",
      "[Added Lines]",
      "1485: sigs.k8s.io/apiserver-network-proxy/konnectivity-client v0.0.30/go.mod h1:fEO7lRTdivWO2qYVCVG7dEADOMo/MLDCVr8So2g88Uw=",
      "1488: sigs.k8s.io/controller-runtime v0.11.2 h1:H5GTxQl0Mc9UjRJhORusqfJCIjBO8UtUxGggCwL1rLA=",
      "1489: sigs.k8s.io/controller-runtime v0.11.2/go.mod h1:P6QCzrEjLaZGqHsfd+os7JQ+WFZhvB8MRFsn4dWF7O4=",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7a26305dc80c366f247c0e1a0ce13ff8760161ea",
      "candidate_info": {
        "commit_hash": "7a26305dc80c366f247c0e1a0ce13ff8760161ea",
        "repo": "fluxcd/kustomize-controller",
        "commit_url": "https://github.com/fluxcd/kustomize-controller/commit/7a26305dc80c366f247c0e1a0ce13ff8760161ea",
        "files": [
          "config/testdata/impersonation/test.yaml",
          "controllers/kustomization_controller.go",
          "controllers/kustomization_inventory.go",
          "go.mod",
          "go.sum"
        ],
        "message": "Fix cluster scope detection of applied objects\n\nSigned-off-by: Stefan Prodan <stefan.prodan@gmail.com>",
        "before_after_code_files": [
          "controllers/kustomization_controller.go||controllers/kustomization_controller.go",
          "controllers/kustomization_inventory.go||controllers/kustomization_inventory.go",
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "controllers/kustomization_controller.go||controllers/kustomization_controller.go",
            "go.mod||go.mod",
            "go.sum||go.sum"
          ],
          "candidate": [
            "controllers/kustomization_controller.go||controllers/kustomization_controller.go",
            "go.mod||go.mod",
            "go.sum||go.sum"
          ]
        }
      },
      "candidate_diff": {
        "controllers/kustomization_controller.go||controllers/kustomization_controller.go": [
          "File: controllers/kustomization_controller.go -> controllers/kustomization_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:  kuberecorder \"k8s.io/client-go/tools/record\"",
          "41:  \"k8s.io/client-go/tools/reference\"",
          "42:  \"sigs.k8s.io/cli-utils/pkg/kstatus/polling\"",
          "43:  ctrl \"sigs.k8s.io/controller-runtime\"",
          "44:  \"sigs.k8s.io/controller-runtime/pkg/builder\"",
          "45:  \"sigs.k8s.io/controller-runtime/pkg/client\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43:  \"sigs.k8s.io/cli-utils/pkg/object\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "370:   ), err",
          "371:  }",
          "373:  resourceManager := ssa.NewResourceManager(kubeClient, statusPoller, ssa.Owner{",
          "374:   Field: r.ControllerName,",
          "375:   Group: kustomizev1.GroupVersion.Group,",
          "376:  })",
          "377:  resourceManager.SetOwnerLabels(objects, kustomization.GetName(), kustomization.GetNamespace())",
          "380:  newInventory := NewInventory()",
          "382:  if err != nil {",
          "383:   return kustomizev1.KustomizationNotReady(",
          "384:    kustomization,",
          "385:    revision,",
          "387:    err.Error(),",
          "388:   ), err",
          "389:  }",
          "392:  var staleObjects []*unstructured.Unstructured",
          "396:   if err != nil {",
          "397:    return kustomizev1.KustomizationNotReady(",
          "398:     kustomization,",
          "",
          "[Removed Lines]",
          "381:  err = AddObjectsToInventory(newInventory, objects)",
          "386:    kustomizev1.BuildFailedReason,",
          "393:  oldInventory := kustomization.Status.Inventory",
          "394:  if oldInventory != nil {",
          "395:   staleObjects, err = DiffInventory(oldInventory, newInventory)",
          "",
          "[Added Lines]",
          "376:  oldStatus := kustomization.Status.DeepCopy()",
          "386:  drifted, changeSet, err := r.apply(ctx, resourceManager, kustomization, revision, objects)",
          "387:  if err != nil {",
          "388:   return kustomizev1.KustomizationNotReady(",
          "389:    kustomization,",
          "390:    revision,",
          "391:    meta.ReconciliationFailedReason,",
          "392:    err.Error(),",
          "393:   ), err",
          "394:  }",
          "398:  err = AddObjectsToInventory(newInventory, changeSet)",
          "403:    meta.ReconciliationFailedReason,",
          "410:  if oldStatus.Inventory != nil {",
          "411:   diffObjects, err := DiffInventory(oldStatus.Inventory, newInventory)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "401:     err.Error(),",
          "402:    ), err",
          "403:   }",
          "415:  }",
          "",
          "[Removed Lines]",
          "404:  }",
          "407:  drifted, err := r.apply(ctx, resourceManager, kustomization, revision, objects)",
          "408:  if err != nil {",
          "409:   return kustomizev1.KustomizationNotReady(",
          "410:    kustomization,",
          "411:    revision,",
          "412:    meta.ReconciliationFailedReason,",
          "413:    err.Error(),",
          "414:   ), err",
          "",
          "[Added Lines]",
          "424:   newObjects, _ := ListObjectsInInventory(newInventory)",
          "425:   for _, obj := range diffObjects {",
          "426:    preserve := false",
          "427:    if obj.GetNamespace() != \"\" {",
          "428:     for _, newObj := range newObjects {",
          "429:      if newObj.GetNamespace() == \"\" &&",
          "430:       obj.GetKind() == newObj.GetKind() &&",
          "431:       obj.GetAPIVersion() == newObj.GetAPIVersion() &&",
          "432:       obj.GetName() == newObj.GetName() {",
          "433:       preserve = true",
          "434:       break",
          "435:      }",
          "436:     }",
          "437:    }",
          "438:    if !preserve {",
          "439:     staleObjects = append(staleObjects, obj)",
          "440:    }",
          "441:   }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "426:  }",
          "430:   return kustomizev1.KustomizationNotReadyInventory(",
          "431:    kustomization,",
          "432:    newInventory,",
          "",
          "[Removed Lines]",
          "429:  if err := r.checkHealth(ctx, resourceManager, kustomization, revision, drifted, objects); err != nil {",
          "",
          "[Added Lines]",
          "456:  if err := r.checkHealth(ctx, resourceManager, kustomization, revision, drifted, changeSet.ToObjMetadataSet()); err != nil {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "614:  return resources, nil",
          "615: }",
          "618:  log := logr.FromContext(ctx)",
          "620:  if err := ssa.SetNativeKindsDefaults(objects); err != nil {",
          "622:  }",
          "",
          "[Removed Lines]",
          "617: func (r *KustomizationReconciler) apply(ctx context.Context, manager *ssa.ResourceManager, kustomization kustomizev1.Kustomization, revision string, objects []*unstructured.Unstructured) (bool, error) {",
          "621:   return false, err",
          "",
          "[Added Lines]",
          "644: func (r *KustomizationReconciler) apply(ctx context.Context, manager *ssa.ResourceManager, kustomization kustomizev1.Kustomization, revision string, objects []*unstructured.Unstructured) (bool, *ssa.ChangeSet, error) {",
          "648:   return false, nil, err",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "628:  var stageTwo []*unstructured.Unstructured",
          "630:  for _, u := range objects {",
          "631:   if ssa.IsClusterDefinition(u) {",
          "632:    stageOne = append(stageOne, u)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "658:  resultSet := ssa.NewChangeSet()",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "641:  if len(stageOne) > 0 {",
          "642:   changeSet, err := manager.ApplyAll(ctx, stageOne, kustomization.Spec.Force)",
          "643:   if err != nil {",
          "645:   }",
          "647:   if changeSet != nil && len(changeSet.Entries) > 0 {",
          "648:    log.Info(\"server-side apply completed\", \"output\", changeSet.ToMap())",
          "",
          "[Removed Lines]",
          "644:    return false, err",
          "",
          "[Added Lines]",
          "674:    return false, nil, err",
          "676:   resultSet.Append(changeSet.Entries)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "654:   }",
          "656:   if err := manager.Wait(stageOne, 2*time.Second, kustomization.GetTimeout()); err != nil {",
          "658:   }",
          "659:  }",
          "",
          "[Removed Lines]",
          "657:    return false, err",
          "",
          "[Added Lines]",
          "688:    return false, nil, err",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "663:  if len(stageTwo) > 0 {",
          "664:   changeSet, err := manager.ApplyAll(ctx, stageTwo, kustomization.Spec.Force)",
          "665:   if err != nil {",
          "667:   }",
          "669:   if changeSet != nil && len(changeSet.Entries) > 0 {",
          "670:    log.Info(\"server-side apply completed\", \"output\", changeSet.ToMap())",
          "",
          "[Removed Lines]",
          "666:    return false, fmt.Errorf(\"%w\\n%s\", err, changeSetLog.String())",
          "",
          "[Added Lines]",
          "697:    return false, nil, fmt.Errorf(\"%w\\n%s\", err, changeSetLog.String())",
          "699:   resultSet.Append(changeSet.Entries)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "682:   r.event(ctx, kustomization, revision, events.EventSeverityInfo, applyLog, nil)",
          "683:  }",
          "686: }",
          "689:  if len(kustomization.Spec.HealthChecks) == 0 && !kustomization.Spec.Wait {",
          "690:   return nil",
          "691:  }",
          "",
          "[Removed Lines]",
          "685:  return applyLog != \"\", nil",
          "688: func (r *KustomizationReconciler) checkHealth(ctx context.Context, manager *ssa.ResourceManager, kustomization kustomizev1.Kustomization, revision string, drifted bool, objects []*unstructured.Unstructured) error {",
          "",
          "[Added Lines]",
          "717:  return applyLog != \"\", resultSet, nil",
          "720: func (r *KustomizationReconciler) checkHealth(ctx context.Context, manager *ssa.ResourceManager, kustomization kustomizev1.Kustomization, revision string, drifted bool, objects object.ObjMetadataSet) error {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "693:  checkStart := time.Now()",
          "694:  var err error",
          "695:  if !kustomization.Spec.Wait {",
          "697:   if err != nil {",
          "698:    return err",
          "699:   }",
          "",
          "[Removed Lines]",
          "696:   objects, err = referenceToUnstructured(kustomization.Spec.HealthChecks)",
          "",
          "[Added Lines]",
          "728:   objects, err = referenceToObjMetadataSet(kustomization.Spec.HealthChecks)",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "704:  }",
          "708:  for _, object := range objects {",
          "712:    continue",
          "713:   }",
          "714:   toCheck = append(toCheck, object)",
          "",
          "[Removed Lines]",
          "707:  var toCheck []*unstructured.Unstructured",
          "709:   if object.GetKind() == kustomizev1.KustomizationKind &&",
          "710:    object.GetName() == kustomization.GetName() &&",
          "711:    object.GetNamespace() == kustomization.GetNamespace() {",
          "",
          "[Added Lines]",
          "739:  var toCheck []object.ObjMetadata",
          "741:   if object.GroupKind.Kind == kustomizev1.KustomizationKind &&",
          "742:    object.Name == kustomization.GetName() &&",
          "743:    object.Namespace == kustomization.GetNamespace() {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "726:  }",
          "730:   return fmt.Errorf(\"Health check failed after %s, %w\", time.Now().Sub(checkStart).String(), err)",
          "731:  }",
          "",
          "[Removed Lines]",
          "729:  if err := manager.Wait(toCheck, time.Second, kustomization.GetTimeout()); err != nil {",
          "",
          "[Added Lines]",
          "761:  if err := manager.WaitForSet(toCheck, time.Second, kustomization.GetTimeout()); err != nil {",
          "",
          "---------------"
        ],
        "controllers/kustomization_inventory.go||controllers/kustomization_inventory.go": [
          "File: controllers/kustomization_inventory.go -> controllers/kustomization_inventory.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: }",
          "47:   inv.Entries = append(inv.Entries, kustomizev1.ResourceRef{",
          "50:   })",
          "51:  }",
          "",
          "[Removed Lines]",
          "38: func AddObjectsToInventory(inv *kustomizev1.ResourceInventory, objects []*unstructured.Unstructured) error {",
          "39:  sort.Sort(ssa.SortableUnstructureds(objects))",
          "40:  for _, om := range objects {",
          "41:   objMetadata := object.UnstructuredToObjMeta(om)",
          "42:   gv, err := schema.ParseGroupVersion(om.GetAPIVersion())",
          "43:   if err != nil {",
          "44:    return err",
          "45:   }",
          "48:    ID:      objMetadata.String(),",
          "49:    Version: gv.Version,",
          "",
          "[Added Lines]",
          "38: func AddObjectsToInventory(inv *kustomizev1.ResourceInventory, set *ssa.ChangeSet) error {",
          "39:  if set == nil {",
          "40:   return nil",
          "41:  }",
          "43:  for _, entry := range set.Entries {",
          "45:    ID:      entry.ObjMetadata.String(),",
          "46:    Version: entry.GroupVersion,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "83: }",
          "87:  var metas []object.ObjMetadata",
          "88:  for _, e := range inv.Entries {",
          "89:   m, err := object.ParseObjMetadata(e.ID)",
          "",
          "[Removed Lines]",
          "86: func ListMetaInInventory(inv *kustomizev1.ResourceInventory) ([]object.ObjMetadata, error) {",
          "",
          "[Added Lines]",
          "83: func ListMetaInInventory(inv *kustomizev1.ResourceInventory) (object.ObjMetadataSet, error) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "118:   return nil, err",
          "119:  }",
          "122:  if len(list) == 0 {",
          "123:   return objects, nil",
          "124:  }",
          "",
          "[Removed Lines]",
          "121:  list := object.SetDiff(aList, bList)",
          "",
          "[Added Lines]",
          "118:  list := aList.Diff(bList)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "139:  return objects, nil",
          "140: }",
          "145:  for _, c := range cr {",
          "",
          "[Removed Lines]",
          "142: func referenceToUnstructured(cr []meta.NamespacedObjectKindReference) ([]*unstructured.Unstructured, error) {",
          "143:  var objects []*unstructured.Unstructured",
          "",
          "[Added Lines]",
          "139: func referenceToObjMetadataSet(cr []meta.NamespacedObjectKindReference) (object.ObjMetadataSet, error) {",
          "140:  var objects []object.ObjMetadata",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "160:    Version: gv.Version,",
          "161:   })",
          "162:   u.SetName(c.Name)",
          "166:  }",
          "",
          "[Removed Lines]",
          "163:   u.SetNamespace(c.Namespace)",
          "164:   objects = append(objects, u)",
          "",
          "[Added Lines]",
          "160:   if c.Namespace != \"\" {",
          "161:    u.SetNamespace(c.Namespace)",
          "162:   }",
          "164:   om, err := object.UnstructuredToObjMeta(u)",
          "165:   if err != nil {",
          "166:    return nil, err",
          "167:   }",
          "168:   objects = append(objects, om)",
          "",
          "---------------"
        ],
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:  github.com/fluxcd/pkg/apis/kustomize v0.2.0",
          "13:  github.com/fluxcd/pkg/apis/meta v0.10.1",
          "14:  github.com/fluxcd/pkg/runtime v0.12.2",
          "16:  github.com/fluxcd/pkg/testserver v0.1.0",
          "17:  github.com/fluxcd/pkg/untar v0.1.0",
          "18:  github.com/fluxcd/source-controller/api v0.16.0",
          "19:  github.com/go-logr/logr v0.4.0",
          "20:  github.com/hashicorp/go-retryablehttp v0.6.8",
          "21:  github.com/howeyc/gopass v0.0.0-20170109162249-bf9dde6d0d2c",
          "",
          "[Removed Lines]",
          "15:  github.com/fluxcd/pkg/ssa v0.1.0",
          "",
          "[Added Lines]",
          "15:  github.com/fluxcd/pkg/ssa v0.2.0",
          "19:  github.com/go-errors/errors v1.4.0 // indirect",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30:  k8s.io/apiextensions-apiserver v0.22.2",
          "31:  k8s.io/apimachinery v0.22.2",
          "32:  k8s.io/client-go v0.22.2",
          "34:  sigs.k8s.io/controller-runtime v0.10.2",
          "35:  sigs.k8s.io/kustomize/api v0.10.0",
          "36:  sigs.k8s.io/yaml v1.3.0",
          "",
          "[Removed Lines]",
          "33:  sigs.k8s.io/cli-utils v0.25.1-0.20210608181808-f3974341173a",
          "",
          "[Added Lines]",
          "34:  sigs.k8s.io/cli-utils v0.26.0",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "74: github.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=",
          "75: github.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=",
          "76: github.com/Knetic/govaluate v3.0.1-0.20171022003610-9aa49832a739+incompatible/go.mod h1:r7JcOSlj0wfOMncg0iLm8Leh48TZaKVeNIfJntJ2wa0=",
          "77: github.com/MakeNowJust/heredoc v0.0.0-20170808103936-bb23615498cd/go.mod h1:64YHyfSL2R96J44Nlwm39UHepQbyR5q10x7iYa1ks2E=",
          "78: github.com/Microsoft/go-winio v0.4.14 h1:+hMXMk01us9KgxGb7ftKQt2Xpf5hH/yky+TDA+qxleU=",
          "79: github.com/Microsoft/go-winio v0.4.14/go.mod h1:qXqCSQ3Xa7+6tgxaGTIe4Kpcdsi+P8jBhyzoq1bpyYA=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77: github.com/MakeNowJust/heredoc v0.0.0-20170808103936-bb23615498cd h1:sjQovDkwrZp8u+gxLtPgKGjk5hCxuy2hrRejBTA9xFU=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "204: github.com/evanphx/json-patch v4.9.0+incompatible/go.mod h1:50XU6AFN0ol/bzJsmQLiYLvXMP4fmwYFNcr97nuDLSk=",
          "205: github.com/evanphx/json-patch v4.11.0+incompatible h1:glyUF9yIYtMHzn8xaKw5rMhdWcwsYV8dZHIq5567/xs=",
          "206: github.com/evanphx/json-patch v4.11.0+incompatible/go.mod h1:50XU6AFN0ol/bzJsmQLiYLvXMP4fmwYFNcr97nuDLSk=",
          "207: github.com/exponent-io/jsonpath v0.0.0-20151013193312-d6023ce2651d/go.mod h1:ZZMPRZwes7CROmyNKgQzC3XPs6L/G2EJLHddWejkmf4=",
          "208: github.com/fatih/camelcase v1.0.0/go.mod h1:yN2Sb0lFhZJUdVvtELVWefmrXpuZESvPmqwoZc+/fpc=",
          "209: github.com/fatih/color v1.7.0 h1:DkWD4oS2D8LGGgTQ6IvwJJXSL5Vp2ffcQg58nFV38Ys=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "208: github.com/exponent-io/jsonpath v0.0.0-20151013193312-d6023ce2651d h1:105gxyaGwCFad8crR9dcMQWvV9Hvulu6hwUh4tWPJnM=",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "218: github.com/fluxcd/pkg/runtime v0.12.0/go.mod h1:EyaTR2TOYcjL5U//C4yH3bt2tvTgIOSXpVRbWxUn/C4=",
          "219: github.com/fluxcd/pkg/runtime v0.12.2 h1:4iOpx2j/w15kNemDOnZrF6ugJ/rhSmRu7aI+xn23+BI=",
          "220: github.com/fluxcd/pkg/runtime v0.12.2/go.mod h1:tuWdqpWPhgjQvYrSnojdZ4plyU8DRU1NDzsfOhnzl2g=",
          "223: github.com/fluxcd/pkg/testserver v0.1.0 h1:nOYgM1HYFZNNSUFykuWDmrsxj4jQxUCvmLHWOQeqmyA=",
          "224: github.com/fluxcd/pkg/testserver v0.1.0/go.mod h1:fvt8BHhXw6c1+CLw1QFZxcQprlcXzsrL4rzXaiGM+Iw=",
          "225: github.com/fluxcd/pkg/untar v0.1.0 h1:k97V/xV5hFrAkIkVPuv5AVhyxh1ZzzAKba/lbDfGo6o=",
          "",
          "[Removed Lines]",
          "221: github.com/fluxcd/pkg/ssa v0.1.0 h1:JqKuujOpH/L+WlNJx7wdLhLOPzA7EnQl2oMAGKzIAss=",
          "222: github.com/fluxcd/pkg/ssa v0.1.0/go.mod h1:B/6V2gF3zq3P6EstM/qTmOEUf3YgOh1ybFfAAmG4Shw=",
          "",
          "[Added Lines]",
          "223: github.com/fluxcd/pkg/ssa v0.2.0 h1:5GTBnnWJhiSIKI1TZQ20ioWjTPNkEof2V2uN0ZHUxDs=",
          "224: github.com/fluxcd/pkg/ssa v0.2.0/go.mod h1:rFhWBX9/TfNwSFR+5NHOGnpl9OsWdaQrG5CggN+74EQ=",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "267: github.com/go-openapi/jsonreference v0.19.5 h1:1WJP/wi4OjB4iV8KVbH73rQaoialJrqv8gitZLxGLtM=",
          "268: github.com/go-openapi/jsonreference v0.19.5/go.mod h1:RdybgQwPxbL4UEjuAruzK1x3nE69AqPYEJeo/TWfEeg=",
          "269: github.com/go-openapi/spec v0.19.3/go.mod h1:FpwSN1ksY1eteniUU7X0N/BgJ7a4WvBFVA8Lj9mJglo=",
          "270: github.com/go-openapi/spec v0.19.5/go.mod h1:Hm2Jr4jv8G1ciIAo+frC/Ft+rR2kQDh8JHKHb3gWUSk=",
          "271: github.com/go-openapi/swag v0.19.2/go.mod h1:POnQmlKehdgb5mhVOsnJFsivZCEZ/vjK9gh66Z9tfKk=",
          "272: github.com/go-openapi/swag v0.19.5/go.mod h1:POnQmlKehdgb5mhVOsnJFsivZCEZ/vjK9gh66Z9tfKk=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "272: github.com/go-openapi/spec v0.19.5 h1:Xm0Ao53uqnk9QE/LlYV5DEU09UAgpliA85QoT9LzqPw=",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "320: github.com/golangplus/testing v0.0.0-20180327235837-af21d9c3145e/go.mod h1:0AA//k/eakGydO4jKRoRL2j92ZKSzTgj9tclaCrvXHk=",
          "321: github.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=",
          "322: github.com/google/btree v1.0.0/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=",
          "323: github.com/google/btree v1.0.1/go.mod h1:xXMiIv4Fb/0kKde4SpL7qlzvu5cMJDRkFDxJfI9uaxA=",
          "324: github.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=",
          "325: github.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "326: github.com/google/btree v1.0.1 h1:gK4Kx5IaGY9CD5sPJ36FHiBJ6ZXl0kilRiiCj+jdYp4=",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "367: github.com/gotestyourself/gotestyourself v2.2.0+incompatible/go.mod h1:zZKM6oeNM8k+FRljX1mnzVYeS8wiGgQyvST1/GafPbY=",
          "368: github.com/goware/prefixer v0.0.0-20160118172347-395022866408 h1:Y9iQJfEqnN3/Nce9cOegemcy/9Ai5k3huT6E80F3zaw=",
          "369: github.com/goware/prefixer v0.0.0-20160118172347-395022866408/go.mod h1:PE1ycukgRPJ7bJ9a1fdfQ9j8i/cEcRAoLZzbxYpNB/s=",
          "370: github.com/gregjones/httpcache v0.0.0-20180305231024-9cad4c3443a7/go.mod h1:FecbI9+v66THATjSRHfNgh1IVFe/9kFxbXtjV0ctIMA=",
          "371: github.com/grpc-ecosystem/go-grpc-middleware v1.0.0/go.mod h1:FiyG127CGDf3tlThmgyCl78X/SZQqEOJBCDaAfeWzPs=",
          "372: github.com/grpc-ecosystem/go-grpc-middleware v1.0.1-0.20190118093823-f849b5445de4/go.mod h1:FiyG127CGDf3tlThmgyCl78X/SZQqEOJBCDaAfeWzPs=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "374: github.com/gregjones/httpcache v0.0.0-20180305231024-9cad4c3443a7 h1:pdN6V1QBWetyv/0+wjACpqVH+eVULgEjkurDLq3goeM=",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "432: github.com/imdario/mergo v0.3.5/go.mod h1:2EnlNZ0deacrJVfApfmtdGgDfMuh/nq6Ok1EcJh5FfA=",
          "433: github.com/imdario/mergo v0.3.12 h1:b6R2BslTbIEToALKP7LxUvijTsNI9TAe80pLWN2g/HU=",
          "434: github.com/imdario/mergo v0.3.12/go.mod h1:jmQim1M+e3UYxmgPu/WyfjB3N3VflVyUjjjwH0dnCYA=",
          "435: github.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=",
          "436: github.com/influxdata/influxdb1-client v0.0.0-20191209144304-8bf82d3c094d/go.mod h1:qj24IKcXYK6Iy9ceXlo3Tc+vtHo9lIhSX5JddghvEPo=",
          "437: github.com/jessevdk/go-flags v1.4.0/go.mod h1:4FA24M0QyGHXBuZZK/XkWh8h0e1EYbRYJSGM75WSRxI=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "440: github.com/inconshreveable/mousetrap v1.0.0 h1:Z8tu5sraLXCXIcARxBp/8cbvlwVa7Z1NHg9XEKhtSvM=",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "474: github.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=",
          "475: github.com/lib/pq v1.2.0 h1:LXpIM/LZ5xGFhOpXAQUIMM1HdyqzVYM13zNdjCEEcA0=",
          "476: github.com/lib/pq v1.2.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=",
          "477: github.com/liggitt/tabwriter v0.0.0-20181228230101-89fcab3d43de/go.mod h1:zAbeS9B/r2mtpb6U+EI2rYA5OAXxsYw6wTamcNW+zcE=",
          "478: github.com/lightstep/lightstep-tracer-common/golang/gogo v0.0.0-20190605223551-bc2310a04743/go.mod h1:qklhhLq1aX+mtWk9cPHPzaBjWImj5ULL6C7HFJtXQMM=",
          "479: github.com/lightstep/lightstep-tracer-go v0.18.1/go.mod h1:jlF1pusYV4pidLvZ+XD0UBX0ZE6WURAspgAczcDHrL4=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "483: github.com/liggitt/tabwriter v0.0.0-20181228230101-89fcab3d43de h1:9TO3cAIGXtEhnIaL+V+BEER86oLrvS+kWobKpbJuye0=",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "512: github.com/mitchellh/mapstructure v1.1.2 h1:fmNYVwqnSfB9mZU6OS2O6GsXM+wcskZDuKQzvN1EDeE=",
          "513: github.com/mitchellh/mapstructure v1.1.2/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=",
          "514: github.com/mitchellh/reflectwalk v1.0.0/go.mod h1:mSTlrgnPZtwu0c4WaC2kGObEpuNDbx0jmZXqmk4esnw=",
          "515: github.com/moby/spdystream v0.2.0/go.mod h1:f7i0iNDQJ059oMTcWxx8MA/zKFIuD/lY+0GqbN2Wy8c=",
          "516: github.com/moby/sys/mountinfo v0.4.1/go.mod h1:rEr8tzG/lsIZHBtN/JjGG+LMYx9eXgW2JI+6q0qou+A=",
          "517: github.com/moby/term v0.0.0-20201216013528-df9cb8a40635/go.mod h1:FBS0z0QWA44HXygs7VXDUOGoN/1TV3RuWkLO04am3wc=",
          "518: github.com/moby/term v0.0.0-20210610120745-9d4ed1856297/go.mod h1:vgPCkQMyxTZ7IDy8SXRufE172gr8+K/JE/7hHFxHW3A=",
          "519: github.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=",
          "520: github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "522: github.com/moby/spdystream v0.2.0 h1:cjW1zVyyoiM0T7b6UoySUFqzXMoqRckQtXwGPiBhOM8=",
          "526: github.com/moby/term v0.0.0-20210610120745-9d4ed1856297 h1:yH0SvLzcbZxcJXho2yh7CqdENGMQe73Cw3woZBpPli0=",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "592: github.com/pborman/uuid v1.2.0/go.mod h1:X/NO0urCmaxf9VXbdlT7C2Yzkj2IKimNn4k+gtPdI/k=",
          "593: github.com/pelletier/go-toml v1.2.0/go.mod h1:5z9KED0ma1S8pY6P1sdut58dfprrGBbd/94hg7ilaic=",
          "594: github.com/performancecopilot/speed v3.0.0+incompatible/go.mod h1:/CLtqpZ5gBg1M9iaPbIdPPGyKcA8hKdoy6hAWba7Yac=",
          "595: github.com/peterbourgon/diskv v2.0.1+incompatible/go.mod h1:uqqh8zWWbv1HBMNONnaR/tNboyR3/BZd58JJSHlUSCU=",
          "596: github.com/pierrec/lz4 v1.0.2-0.20190131084431-473cd7ce01a1/go.mod h1:3/3N9NVKO0jef7pBehbT1qWhCMrIgbYNnFAZCqQ5LRc=",
          "597: github.com/pierrec/lz4 v2.0.5+incompatible h1:2xWsjqPFWcplujydGg4WmhC/6fZqK42wMM8aXeqhl0I=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "604: github.com/peterbourgon/diskv v2.0.1+incompatible h1:UBdAOUP5p4RWqPBg048CAvpKN+vxiaj6gdUUzhl4XmI=",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "644: github.com/rogpeppe/fastuuid v0.0.0-20150106093220-6724a57986af/go.mod h1:XWv6SoW27p1b0cqNHllgS5HIMJraePCO15w5zCzIWYg=",
          "645: github.com/rogpeppe/fastuuid v1.2.0/go.mod h1:jVj6XXZzXRy/MSR5jhDC/2q6DgLz+nrA6LYCDYWNEvQ=",
          "646: github.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=",
          "647: github.com/russross/blackfriday v1.5.2/go.mod h1:JO/DiYxRf+HjHt06OyowR9PTA263kcR/rfWxYHBV53g=",
          "648: github.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=",
          "649: github.com/ryanuber/columnize v0.0.0-20160712163229-9b3edd62028f/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "657: github.com/russross/blackfriday v1.5.2 h1:HyvC0ARfnZBqnXwABFeSZHpKvJHJJfPz81GNueLj0oo=",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "678: github.com/spf13/cobra v0.0.3/go.mod h1:1l0Ry5zgKvJasoi3XT1TypsSe7PqH0Sj9dhYf7v3XqQ=",
          "679: github.com/spf13/cobra v1.0.0/go.mod h1:/6GTrnGXV9HjY+aR4k0oJ5tcvakLuG6EuKReYlHNrgE=",
          "680: github.com/spf13/cobra v1.1.1/go.mod h1:WnodtKOvamDL/PwE2M4iKs8aMDBZ5Q5klgD3qfVJQMI=",
          "681: github.com/spf13/cobra v1.1.3/go.mod h1:pGADOWyqRD/YMrPZigI/zbliZ2wVD/23d+is3pSWzOo=",
          "682: github.com/spf13/jwalterweatherman v1.0.0/go.mod h1:cQK4TGJAtQXfYWX+Ddv3mKDzgVb68N+wFjFa4jdeBTo=",
          "683: github.com/spf13/pflag v0.0.0-20170130214245-9ff6c6923cff/go.mod h1:DYY7MBk1bdzusC3SYhjObp+wFpr4gzcvqqNjLnInEg4=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "692: github.com/spf13/cobra v1.1.3 h1:xghbfqPkxzxP3C/f3n5DdpAbdKLj4ZE4BWQI362l53M=",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "687: github.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=",
          "688: github.com/spf13/viper v1.4.0/go.mod h1:PTJ7Z/lr49W6bUbkmS1V3by4uWynFiR9p7+dSq/yZzE=",
          "689: github.com/spf13/viper v1.7.0/go.mod h1:8WkrPz2fc9jxqZNCJI/76HCieCp4Q8HaLFoCha5qpdg=",
          "690: github.com/stoewer/go-strcase v1.2.0/go.mod h1:IBiWB2sKIp3wVVQ3Y035++gc+knqhUQag1KpM8ahLw8=",
          "691: github.com/streadway/amqp v0.0.0-20190404075320-75d898a42a94/go.mod h1:AZpEONHx3DKn8O/DFsRAY58/XVQiIPMTMB1SddzLXVw=",
          "692: github.com/streadway/amqp v0.0.0-20190827072141-edfb9018d271/go.mod h1:AZpEONHx3DKn8O/DFsRAY58/XVQiIPMTMB1SddzLXVw=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "702: github.com/spyzhov/ajson v0.4.2/go.mod h1:63V+CGM6f1Bu/p4nLIN8885ojBdt88TbLoSFzyqMuVA=",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1151: gopkg.in/yaml.v3 v3.0.0-20210107172259-749611fa9fcc/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=",
          "1152: gopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b h1:h8qDotaEPuJATrMmW04NCwg7v22aHH28wwpauUhK9Oo=",
          "1153: gopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=",
          "1155: gotest.tools v2.2.0+incompatible/go.mod h1:DsYFclhRJ6vuDpmuTbkuFWG+y2sxOXAzmJt81HFBacw=",
          "1156: gotest.tools/v3 v3.0.2/go.mod h1:3SzNCllyD9/Y+b5r9JIKQ474KzkZyqLqEfYqMsX94Bk=",
          "1157: gotest.tools/v3 v3.0.3/go.mod h1:Z7Lb0S5l+klDB31fvDQX8ss/FlKDxtlFlw3Oa8Ymbl8=",
          "",
          "[Removed Lines]",
          "1154: gotest.tools v2.2.0+incompatible h1:VsBPFP1AI068pPrMxtb/S8Zkgf9xEmTLJjfM+P5UIEo=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1202: k8s.io/kube-openapi v0.0.0-20210305001622-591a79e4bda7/go.mod h1:wXW5VT87nVfh/iLV8FpR2uDvrFyomxbtb1KivDbvPTE=",
          "1203: k8s.io/kube-openapi v0.0.0-20210421082810-95288971da7e h1:KLHHjkdQFomZy8+06csTWZ0m1343QqxZhR2LJ1OxCYM=",
          "1204: k8s.io/kube-openapi v0.0.0-20210421082810-95288971da7e/go.mod h1:vHXdDvt9+2spS2Rx9ql3I8tycm3H9FDfdUoIuKCefvw=",
          "1205: k8s.io/kubectl v0.21.1/go.mod h1:PMYR88MqESuysBM/MX+Vu4JbX/50nY4d4kny+SPEI2U=",
          "1206: k8s.io/metrics v0.21.1/go.mod h1:pyDVLsLe++FIGDBFU80NcW4xMFsuiVTWL8Zfi7+PpNo=",
          "1207: k8s.io/utils v0.0.0-20201110183641-67b214c5f920/go.mod h1:jPW/WVKK9YHAvNhRxK0md/EJ228hCsBRufyofKtW8HA=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1217: k8s.io/kubectl v0.21.1 h1:ySEusoeSgSDSiSBncDMsNrthSa3OSlXqT4R2rf1VFTw=",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1216: sigs.k8s.io/apiserver-network-proxy/konnectivity-client v0.0.15/go.mod h1:LEScyzhFmoF5pso/YSeBstl57mOzx9xlU9n85RGrDQg=",
          "1217: sigs.k8s.io/apiserver-network-proxy/konnectivity-client v0.0.19/go.mod h1:LEScyzhFmoF5pso/YSeBstl57mOzx9xlU9n85RGrDQg=",
          "1218: sigs.k8s.io/apiserver-network-proxy/konnectivity-client v0.0.22/go.mod h1:LEScyzhFmoF5pso/YSeBstl57mOzx9xlU9n85RGrDQg=",
          "1221: sigs.k8s.io/controller-runtime v0.9.0-beta.5.0.20210524185538-7181f1162e79/go.mod h1:rgf+cBz72pYlKXDRNhI1WFQv/S86EMUV4/ySmsEYgHk=",
          "1222: sigs.k8s.io/controller-runtime v0.9.0/go.mod h1:TgkfvrhhEw3PlI0BRL/5xM+89y3/yc0ZDfdbTl84si8=",
          "1223: sigs.k8s.io/controller-runtime v0.9.5/go.mod h1:q6PpkM5vqQubEKUKOM6qr06oXGzOBcCby1DA9FbyZeA=",
          "",
          "[Removed Lines]",
          "1219: sigs.k8s.io/cli-utils v0.25.1-0.20210608181808-f3974341173a h1:S17+FPWGsOonXim+GcadLcSblEwL131Y9fKLfifSYkY=",
          "1220: sigs.k8s.io/cli-utils v0.25.1-0.20210608181808-f3974341173a/go.mod h1:I4jgHr6uRfX0CkOMECwSgg2J48rNzZE1+kDXj9SnJBc=",
          "",
          "[Added Lines]",
          "1232: sigs.k8s.io/cli-utils v0.26.0 h1:N1X1NVN19+daTihVimkSVNMgiVPIHG9OO3SJPh6SBQI=",
          "1233: sigs.k8s.io/cli-utils v0.26.0/go.mod h1:myCFn83XMe7vC1ZX5CEJJIY2cqsl6IxYI727mLW1mfE=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "105ebd9f477093a395b7c6ee65e5b998a92b4dfc",
      "candidate_info": {
        "commit_hash": "105ebd9f477093a395b7c6ee65e5b998a92b4dfc",
        "repo": "fluxcd/kustomize-controller",
        "commit_url": "https://github.com/fluxcd/kustomize-controller/commit/105ebd9f477093a395b7c6ee65e5b998a92b4dfc",
        "files": [
          "controllers/kustomization_controller.go",
          "controllers/kustomization_decryptor.go",
          "controllers/kustomization_decryptor_test.go"
        ],
        "message": "controllers: improve decryptor and add tests\n\n- Refactored recursion while iterating over Kustomization files.\n  References of files that have been visited are cached, and not\n  visited again. In addition, symlinks are confirmed to not traverse\n  outside the working directory.\n- Optimized various bits around (un)marshalling (encrypted) data, and\n  YAML -> JSON -> YAML roundtrips are prevented where not required.\n- Added support for decrypting INI Kustomize EnvSource references using\n  the dedicated SOPS store for the format.\n- Introduced support for decrypting Kustomize FileSources:\n  https://pkg.go.dev/sigs.k8s.io/kustomize@v1.0.2/pkg/types#DataSources\n\nSigned-off-by: Hidde Beydals <hello@hidde.co>",
        "before_after_code_files": [
          "controllers/kustomization_controller.go||controllers/kustomization_controller.go",
          "controllers/kustomization_decryptor.go||controllers/kustomization_decryptor.go",
          "controllers/kustomization_decryptor_test.go||controllers/kustomization_decryptor_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "controllers/kustomization_controller.go||controllers/kustomization_controller.go",
            "controllers/kustomization_decryptor.go||controllers/kustomization_decryptor.go"
          ],
          "candidate": [
            "controllers/kustomization_controller.go||controllers/kustomization_controller.go",
            "controllers/kustomization_decryptor.go||controllers/kustomization_decryptor.go"
          ]
        }
      },
      "candidate_diff": {
        "controllers/kustomization_controller.go||controllers/kustomization_controller.go": [
          "File: controllers/kustomization_controller.go -> controllers/kustomization_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "368:  }",
          "372:  if err != nil {",
          "373:   return kustomizev1.KustomizationNotReady(",
          "374:    kustomization,",
          "",
          "[Removed Lines]",
          "371:  resources, err := r.build(ctx, kustomization, dirPath)",
          "",
          "[Added Lines]",
          "371:  resources, err := r.build(ctx, tmpDir, kustomization, dirPath)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "634:  return gen.WriteFile(dirPath)",
          "635: }",
          "639:  if err != nil {",
          "640:   return nil, err",
          "641:  }",
          "",
          "[Removed Lines]",
          "637: func (r *KustomizationReconciler) build(ctx context.Context, kustomization kustomizev1.Kustomization, dirPath string) ([]byte, error) {",
          "638:  dec, cleanup, err := NewTempDecryptor(r.Client, kustomization)",
          "",
          "[Added Lines]",
          "637: func (r *KustomizationReconciler) build(ctx context.Context, workDir string, kustomization kustomizev1.Kustomization, dirPath string) ([]byte, error) {",
          "638:  dec, cleanup, err := NewTempDecryptor(workDir, r.Client, kustomization)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "649:  fs := filesys.MakeFsOnDisk()",
          "651:  if kustomization.Spec.Decryption != nil {",
          "653:    return nil, fmt.Errorf(\"error decrypting .env file: %w\", err)",
          "654:   }",
          "655:  }",
          "",
          "[Removed Lines]",
          "652:   if err = dec.decryptDotEnvFiles(dirPath); err != nil {",
          "",
          "[Added Lines]",
          "652:   if err = dec.DecryptEnvSources(dirPath); err != nil {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "668:   if kustomization.Spec.Decryption != nil {",
          "670:    if err != nil {",
          "671:     return nil, fmt.Errorf(\"decryption failed for '%s': %w\", res.GetName(), err)",
          "672:    }",
          "",
          "[Removed Lines]",
          "669:    outRes, err := dec.Decrypt(res)",
          "",
          "[Added Lines]",
          "669:    outRes, err := dec.DecryptResource(res)",
          "",
          "---------------"
        ],
        "controllers/kustomization_decryptor.go||controllers/kustomization_decryptor.go": [
          "File: controllers/kustomization_decryptor.go -> controllers/kustomization_decryptor.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:  \"bytes\"",
          "21:  \"context\"",
          "22:  \"encoding/base64\"",
          "23:  \"fmt\"",
          "24:  \"os\"",
          "25:  \"path/filepath\"",
          "26:  \"strings\"",
          "28:  \"go.mozilla.org/sops/v3\"",
          "29:  \"go.mozilla.org/sops/v3/aes\"",
          "30:  \"go.mozilla.org/sops/v3/cmd/sops/common\"",
          "31:  \"go.mozilla.org/sops/v3/cmd/sops/formats\"",
          "32:  \"go.mozilla.org/sops/v3/keyservice\"",
          "33:  corev1 \"k8s.io/api/core/v1\"",
          "34:  \"k8s.io/apimachinery/pkg/apis/meta/v1/unstructured\"",
          "35:  \"k8s.io/apimachinery/pkg/types\"",
          "36:  \"sigs.k8s.io/controller-runtime/pkg/client\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23:  \"errors\"",
          "25:  \"io/fs\"",
          "29:  \"sync\"",
          "30:  \"time\"",
          "32:  securejoin \"github.com/cyphar/filepath-securejoin\"",
          "39:  apierrors \"k8s.io/apimachinery/pkg/api/errors\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47: )",
          "49: const (",
          "51:  DecryptionProviderSOPS = \"sops\"",
          "53:  DecryptionVaultTokenFileName = \"sops.vault-token\"",
          "55:  DecryptionAzureAuthFile = \"sops.azure-kv\"",
          "56: )",
          "61:  kustomization kustomizev1.Kustomization",
          "63:  ageIdentities age.ParsedIdentities",
          "66: }",
          "70:  return &KustomizeDecryptor{",
          "72:   kustomization: kustomization,",
          "73:   gnuPGHome:     pgp.GnuPGHome(gnuPGHome),",
          "74:  }",
          "75: }",
          "79:  gnuPGHome, err := pgp.NewGnuPGHome()",
          "80:  if err != nil {",
          "81:   return nil, nil, fmt.Errorf(\"cannot create decryptor: %w\", err)",
          "82:  }",
          "85: }",
          "137:   }",
          "138:  }",
          "140: }",
          "144:   secretName := types.NamespacedName{",
          "147:   }",
          "149:   var secret corev1.Secret",
          "152:   }",
          "154:   var err error",
          "155:   for name, value := range secret.Data {",
          "156:    switch filepath.Ext(name) {",
          "160:     }",
          "164:     }",
          "165:    case filepath.Ext(DecryptionVaultTokenFileName):",
          "167:     if name == DecryptionVaultTokenFileName {",
          "168:      token := string(value)",
          "169:      token = strings.Trim(strings.TrimSpace(token), \"\\n\")",
          "171:     }",
          "172:    case filepath.Ext(DecryptionAzureAuthFile):",
          "174:     if name == DecryptionAzureAuthFile {",
          "175:      conf := azkv.AADConfig{}",
          "176:      if err = azkv.LoadAADConfigFromBytes(value, &conf); err != nil {",
          "178:      }",
          "181:      }",
          "182:     }",
          "183:    }",
          "184:   }",
          "185:  }",
          "187:  return nil",
          "188: }",
          "193:  if err != nil {",
          "195:  }",
          "202:  }",
          "206:  }",
          "214:    if err != nil {",
          "217:    }",
          "218:   }",
          "219:  }",
          "228:    }",
          "232:    if err != nil {",
          "233:     return err",
          "234:    }",
          "239:      return err",
          "240:     }",
          "245:     }",
          "246:    }",
          "247:   }",
          "248:  }",
          "250:  return nil",
          "251: }",
          "254:  store := common.StoreForFormat(inputFormat)",
          "257:  if err != nil {",
          "259:  }",
          "261:  serverOpts := []intkeyservice.ServerOption{",
          "265:  }",
          "268:  }",
          "273:   },",
          "275:  if err != nil {",
          "280:  }",
          "285:  }",
          "290:  if err != nil {",
          "292:  }",
          "295: }",
          "299:  if err != nil {",
          "301:  }",
          "304: }",
          "312:  }",
          "314: }",
          "",
          "[Removed Lines]",
          "58: type KustomizeDecryptor struct {",
          "59:  client.Client",
          "62:  gnuPGHome     pgp.GnuPGHome",
          "64:  vaultToken    string",
          "65:  azureToken    *azkv.Token",
          "68: func NewDecryptor(kubeClient client.Client,",
          "69:  kustomization kustomizev1.Kustomization, gnuPGHome string) *KustomizeDecryptor {",
          "71:   Client:        kubeClient,",
          "77: func NewTempDecryptor(kubeClient client.Client,",
          "78:  kustomization kustomizev1.Kustomization) (*KustomizeDecryptor, func(), error) {",
          "83:  cleanup := func() { os.RemoveAll(gnuPGHome.String()) }",
          "84:  return NewDecryptor(kubeClient, kustomization, gnuPGHome.String()), cleanup, nil",
          "87: func (kd *KustomizeDecryptor) Decrypt(res *resource.Resource) (*resource.Resource, error) {",
          "88:  out, err := res.AsYAML()",
          "89:  if err != nil {",
          "90:   return nil, err",
          "91:  }",
          "93:  if kd.kustomization.Spec.Decryption != nil && kd.kustomization.Spec.Decryption.Provider == DecryptionProviderSOPS {",
          "94:   if bytes.Contains(out, []byte(\"sops:\")) && bytes.Contains(out, []byte(\"mac: ENC[\")) {",
          "95:    data, err := kd.DataWithFormat(out, formats.Yaml, formats.Yaml)",
          "96:    if err != nil {",
          "97:     return nil, fmt.Errorf(\"DataWithFormat: %w\", err)",
          "98:    }",
          "100:    jsonData, err := yaml.YAMLToJSON(data)",
          "101:    if err != nil {",
          "102:     return nil, fmt.Errorf(\"YAMLToJSON: %w\", err)",
          "103:    }",
          "105:    err = res.UnmarshalJSON(jsonData)",
          "106:    if err != nil {",
          "107:     return nil, fmt.Errorf(\"UnmarshalJSON: %w\", err)",
          "108:    }",
          "109:    return res, nil",
          "111:   } else if res.GetKind() == \"Secret\" {",
          "113:    dataMap := res.GetDataMap()",
          "115:    for key, value := range dataMap {",
          "117:     data, err := base64.StdEncoding.DecodeString(value)",
          "118:     if err != nil {",
          "119:      return nil, fmt.Errorf(\"Base64 Decode: %w\", err)",
          "120:     }",
          "122:     if bytes.Contains(data, []byte(\"sops\")) && bytes.Contains(data, []byte(\"ENC[\")) {",
          "123:      outputFormat := formats.FormatForPath(key)",
          "124:      out, err := kd.DataWithFormat(data, formats.Yaml, outputFormat)",
          "125:      if err != nil {",
          "126:       return nil, fmt.Errorf(\"DataWithFormat: %w\", err)",
          "127:      }",
          "129:      dataMap[key] = base64.StdEncoding.EncodeToString(out)",
          "130:     }",
          "131:    }",
          "133:    res.SetDataMap(dataMap)",
          "135:    return res, nil",
          "139:  return nil, nil",
          "142: func (kd *KustomizeDecryptor) ImportKeys(ctx context.Context) error {",
          "143:  if kd.kustomization.Spec.Decryption != nil && kd.kustomization.Spec.Decryption.SecretRef != nil {",
          "145:    Namespace: kd.kustomization.GetNamespace(),",
          "146:    Name:      kd.kustomization.Spec.Decryption.SecretRef.Name,",
          "150:   if err := kd.Get(ctx, secretName, &secret); err != nil {",
          "151:    return fmt.Errorf(\"decryption secret error: %w\", err)",
          "157:    case \".asc\":",
          "158:     if err = kd.gnuPGHome.Import(value); err != nil {",
          "159:      return fmt.Errorf(\"failed to import '%s' data from Secret '%s': %w\", name, secretName, err)",
          "161:    case \".agekey\":",
          "162:     if err = kd.ageIdentities.Import(string(value)); err != nil {",
          "163:      return fmt.Errorf(\"failed to import '%s' data from Secret '%s': %w\", name, secretName, err)",
          "170:      kd.vaultToken = token",
          "177:       return fmt.Errorf(\"failed to import '%s' data from Secret '%s': %w\", name, secretName, err)",
          "179:      if kd.azureToken, err = azkv.TokenFromAADConfig(conf); err != nil {",
          "180:       return fmt.Errorf(\"failed to import '%s' data from Secret '%s': %w\", name, secretName, err)",
          "190: func (kd *KustomizeDecryptor) decryptDotEnvFiles(dirpath string) error {",
          "191:  kustomizePath := filepath.Join(dirpath, konfig.DefaultKustomizationFileName())",
          "192:  ksData, err := os.ReadFile(kustomizePath)",
          "194:   return nil",
          "197:  kus := kustypes.Kustomization{",
          "198:   TypeMeta: kustypes.TypeMeta{",
          "199:    APIVersion: kustypes.KustomizationVersion,",
          "200:    Kind:       kustypes.KustomizationKind,",
          "201:   },",
          "204:  if err := yaml.Unmarshal(ksData, &kus); err != nil {",
          "205:   return err",
          "209:  for _, rsrc := range kus.Resources {",
          "210:   rsrcPath := filepath.Join(dirpath, rsrc)",
          "211:   isDir, err := isDir(rsrcPath)",
          "212:   if err == nil && isDir {",
          "213:    err := kd.decryptDotEnvFiles(rsrcPath)",
          "215:     return fmt.Errorf(\"error decrypting .env files in dir '%s': %w\",",
          "216:      rsrcPath, err)",
          "221:  secretGens := kus.SecretGenerator",
          "222:  for _, gen := range secretGens {",
          "223:   for _, envFile := range gen.EnvSources {",
          "225:    envFileParts := strings.Split(envFile, \"=\")",
          "226:    if len(envFileParts) > 1 {",
          "227:     envFile = envFileParts[1]",
          "230:    envPath := filepath.Join(dirpath, envFile)",
          "231:    data, err := os.ReadFile(envPath)",
          "236:    if bytes.Contains(data, []byte(\"sops_mac=ENC[\")) {",
          "237:     out, err := kd.DataWithFormat(data, formats.Dotenv, formats.Dotenv)",
          "238:     if err != nil {",
          "242:     err = os.WriteFile(envPath, out, 0644)",
          "243:     if err != nil {",
          "244:      return fmt.Errorf(\"error writing to file: %w\", err)",
          "253: func (kd KustomizeDecryptor) DataWithFormat(data []byte, inputFormat, outputFormat formats.Format) ([]byte, error) {",
          "256:  tree, err := store.LoadEncryptedFile(data)",
          "258:   return nil, fmt.Errorf(\"LoadEncryptedFile: %w\", err)",
          "262:   intkeyservice.WithGnuPGHome(kd.gnuPGHome),",
          "263:   intkeyservice.WithVaultToken(kd.vaultToken),",
          "264:   intkeyservice.WithAgeIdentities(kd.ageIdentities),",
          "266:  if kd.azureToken != nil {",
          "267:   serverOpts = append(serverOpts, intkeyservice.WithAzureToken{Token: kd.azureToken})",
          "270:  metadataKey, err := tree.Metadata.GetDataKeyWithKeyServices(",
          "271:   []keyservice.KeyServiceClient{",
          "272:    intkeyservice.NewLocalClient(intkeyservice.NewServer(serverOpts...)),",
          "274:  )",
          "276:   if userErr, ok := err.(sops.UserError); ok {",
          "277:    err = fmt.Errorf(userErr.UserError())",
          "278:   }",
          "279:   return nil, fmt.Errorf(\"GetDataKey: %w\", err)",
          "282:  cipher := aes.NewCipher()",
          "283:  if _, err := tree.Decrypt(metadataKey, cipher); err != nil {",
          "284:   return nil, fmt.Errorf(\"AES decrypt: %w\", err)",
          "287:  outputStore := common.StoreForFormat(outputFormat)",
          "289:  out, err := outputStore.EmitPlainFile(tree.Branches)",
          "291:   return nil, fmt.Errorf(\"EmitPlainFile: %w\", err)",
          "294:  return out, err",
          "297: func isDir(path string) (bool, error) {",
          "298:  fileInfo, err := os.Stat(path)",
          "300:   return false, err",
          "303:  return fileInfo.IsDir(), nil",
          "307: func IsEncryptedSecret(object *unstructured.Unstructured) bool {",
          "308:  if object.GetKind() == \"Secret\" && object.GetAPIVersion() == \"v1\" {",
          "309:   if _, found, _ := unstructured.NestedFieldNoCopy(object.Object, \"sops\"); found {",
          "310:    return true",
          "311:   }",
          "313:  return false",
          "",
          "[Added Lines]",
          "60:  DecryptionPGPExt = \".asc\"",
          "63:  DecryptionAgeExt = \".agekey\"",
          "72: var (",
          "75:  maxEncryptedFileSize int64 = 5 << 20",
          "78:  sopsFormatToString = map[formats.Format]string{",
          "79:   formats.Binary: \"binary\",",
          "80:   formats.Dotenv: \"dotenv\",",
          "81:   formats.Ini:    \"INI\",",
          "82:   formats.Json:   \"JSON\",",
          "83:   formats.Yaml:   \"YAML\",",
          "84:  }",
          "87:  sopsFormatToMarkerBytes = map[formats.Format][]byte{",
          "89:   formats.Binary: []byte(\"\\\"mac\\\": \\\"ENC[\"),",
          "90:   formats.Dotenv: []byte(\"sops_mac=ENC[\"),",
          "91:   formats.Ini:    []byte(\"[sops]\"),",
          "92:   formats.Json:   []byte(\"\\\"mac\\\": \\\"ENC[\"),",
          "93:   formats.Yaml:   []byte(\"mac: ENC[\"),",
          "94:  }",
          "95: )",
          "101: type KustomizeDecryptor struct {",
          "104:  root string",
          "106:  client client.Client",
          "112:  maxFileSize int64",
          "117:  checkSopsMac bool",
          "122:  gnuPGHome pgp.GnuPGHome",
          "127:  vaultToken string",
          "130:  azureToken *azkv.Token",
          "134:  keyServices      []keyservice.KeyServiceClient",
          "135:  localServiceOnce sync.Once",
          "140: func NewDecryptor(root string, client client.Client, kustomization kustomizev1.Kustomization, maxFileSize int64, gnuPGHome string) *KustomizeDecryptor {",
          "142:   root:          root,",
          "143:   client:        client,",
          "145:   maxFileSize:   maxFileSize,",
          "152: func NewTempDecryptor(root string, client client.Client, kustomization kustomizev1.Kustomization) (*KustomizeDecryptor, func(), error) {",
          "157:  cleanup := func() { _ = os.RemoveAll(gnuPGHome.String()) }",
          "158:  return NewDecryptor(root, client, kustomization, maxEncryptedFileSize, gnuPGHome.String()), cleanup, nil",
          "163: func IsEncryptedSecret(object *unstructured.Unstructured) bool {",
          "164:  if object.GetKind() == \"Secret\" && object.GetAPIVersion() == \"v1\" {",
          "165:   if _, found, _ := unstructured.NestedFieldNoCopy(object.Object, \"sops\"); found {",
          "166:    return true",
          "169:  return false",
          "180: func (d *KustomizeDecryptor) ImportKeys(ctx context.Context) error {",
          "181:  if d.kustomization.Spec.Decryption == nil || d.kustomization.Spec.Decryption.SecretRef == nil {",
          "182:   return nil",
          "183:  }",
          "185:  provider := d.kustomization.Spec.Decryption.Provider",
          "186:  switch provider {",
          "187:  case DecryptionProviderSOPS:",
          "189:    Namespace: d.kustomization.GetNamespace(),",
          "190:    Name:      d.kustomization.Spec.Decryption.SecretRef.Name,",
          "194:   if err := d.client.Get(ctx, secretName, &secret); err != nil {",
          "195:    if apierrors.IsNotFound(err) {",
          "196:     return err",
          "197:    }",
          "198:    return fmt.Errorf(\"cannot get %s decryption Secret '%s': %w\", provider, secretName, err)",
          "204:    case DecryptionPGPExt:",
          "205:     if err = d.gnuPGHome.Import(value); err != nil {",
          "206:      return fmt.Errorf(\"failed to import '%s' data from %s decryption Secret '%s': %w\", name, provider, secretName, err)",
          "208:    case DecryptionAgeExt:",
          "209:     if err = d.ageIdentities.Import(string(value)); err != nil {",
          "210:      return fmt.Errorf(\"failed to import '%s' data from %s decryption Secret '%s': %w\", name, provider, secretName, err)",
          "217:      d.vaultToken = token",
          "224:       return fmt.Errorf(\"failed to import '%s' data from %s decryption Secret '%s': %w\", name, provider, secretName, err)",
          "226:      if d.azureToken, err = azkv.TokenFromAADConfig(conf); err != nil {",
          "227:       return fmt.Errorf(\"failed to import '%s' data from %s decryption Secret '%s': %w\", name, provider, secretName, err)",
          "240: func (d *KustomizeDecryptor) SopsDecryptWithFormat(data []byte, inputFormat, outputFormat formats.Format) ([]byte, error) {",
          "241:  store := common.StoreForFormat(inputFormat)",
          "243:  tree, err := store.LoadEncryptedFile(data)",
          "245:   return nil, sopsUserErr(fmt.Sprintf(\"failed to load encrypted %s data\", sopsFormatToString[inputFormat]), err)",
          "248:  metadataKey, err := tree.Metadata.GetDataKeyWithKeyServices(d.keyServiceServer())",
          "249:  if err != nil {",
          "250:   return nil, sopsUserErr(\"cannot get sops data key\", err)",
          "253:  cipher := aes.NewCipher()",
          "254:  mac, err := tree.Decrypt(metadataKey, cipher)",
          "255:  if err != nil {",
          "256:   return nil, sopsUserErr(\"error decrypting sops tree\", err)",
          "257:  }",
          "259:  if d.checkSopsMac {",
          "264:   originalMac, err := cipher.Decrypt(",
          "265:    tree.Metadata.MessageAuthenticationCode,",
          "266:    metadataKey,",
          "267:    tree.Metadata.LastModified.Format(time.RFC3339),",
          "268:   )",
          "269:   if err != nil {",
          "270:    return nil, sopsUserErr(\"failed to verify sops data integrity\", err)",
          "271:   }",
          "272:   if originalMac != mac {",
          "274:    if originalMac == \"\" {",
          "275:     originalMac = \"no MAC\"",
          "276:    }",
          "277:    return nil, fmt.Errorf(\"failed to verify sops data integrity: expected mac '%s', got '%s'\", originalMac, mac)",
          "278:   }",
          "279:  }",
          "281:  outputStore := common.StoreForFormat(outputFormat)",
          "282:  out, err := outputStore.EmitPlainFile(tree.Branches)",
          "283:  if err != nil {",
          "284:   return nil, sopsUserErr(fmt.Sprintf(\"failed to emit encrypted %s file as decrypted %s\",",
          "285:    sopsFormatToString[inputFormat], sopsFormatToString[outputFormat]), err)",
          "286:  }",
          "287:  return out, err",
          "288: }",
          "296: func (d *KustomizeDecryptor) DecryptResource(res *resource.Resource) (*resource.Resource, error) {",
          "297:  if res == nil || d.kustomization.Spec.Decryption == nil || d.kustomization.Spec.Decryption.Provider == \"\" {",
          "298:   return nil, nil",
          "301:  switch d.kustomization.Spec.Decryption.Provider {",
          "302:  case DecryptionProviderSOPS:",
          "303:   switch {",
          "304:   case isSOPSEncryptedResource(res):",
          "309:    out, err := res.MarshalJSON()",
          "310:    if err != nil {",
          "311:     return nil, err",
          "312:    }",
          "314:    data, err := d.SopsDecryptWithFormat(out, formats.Json, formats.Json)",
          "315:    if err != nil {",
          "316:     return nil, fmt.Errorf(\"failed to decrypt and format '%s/%s' %s data: %w\",",
          "317:      res.GetNamespace(), res.GetName(), res.GetKind(), err)",
          "318:    }",
          "320:    err = res.UnmarshalJSON(data)",
          "322:     return nil, fmt.Errorf(\"failed to unmarshal decrypted '%s/%s' %s to JSON: %w\",",
          "323:      res.GetNamespace(), res.GetName(), res.GetKind(), err)",
          "325:    return res, nil",
          "326:   case res.GetKind() == \"Secret\":",
          "327:    dataMap := res.GetDataMap()",
          "328:    for key, value := range dataMap {",
          "329:     data, err := base64.StdEncoding.DecodeString(value)",
          "330:     if err != nil {",
          "334:      continue",
          "335:     }",
          "337:     if bytes.Contains(data, sopsFormatToMarkerBytes[formats.Yaml]) || bytes.Contains(data, sopsFormatToMarkerBytes[formats.Json]) {",
          "338:      outF := formats.FormatForPath(key)",
          "339:      out, err := d.SopsDecryptWithFormat(data, formats.Yaml, outF)",
          "340:      if err != nil {",
          "341:       return nil, fmt.Errorf(\"failed to decrypt and format '%s/%s' Secret field '%s': %w\",",
          "342:        res.GetNamespace(), res.GetName(), key, err)",
          "343:      }",
          "344:      dataMap[key] = base64.StdEncoding.EncodeToString(out)",
          "345:     }",
          "346:    }",
          "347:    res.SetDataMap(dataMap)",
          "348:    return res, nil",
          "351:  return nil, nil",
          "352: }",
          "360: func (d *KustomizeDecryptor) DecryptEnvSources(path string) error {",
          "361:  if d.kustomization.Spec.Decryption.Provider != DecryptionProviderSOPS {",
          "362:   return nil",
          "363:  }",
          "365:  decrypted, visited := make(map[string]struct{}, 0), make(map[string]struct{}, 0)",
          "366:  visit := d.decryptKustomizationEnvSources(decrypted)",
          "367:  return recurseKustomizationFiles(d.root, path, visit, visited)",
          "368: }",
          "375: func (d *KustomizeDecryptor) decryptKustomizationEnvSources(visited map[string]struct{}) visitKustomization {",
          "376:  return func(root, path string, kus *kustypes.Kustomization) error {",
          "377:   visitRef := func(ref string, format formats.Format) error {",
          "378:    refParts := strings.Split(ref, \"=\")",
          "379:    if len(refParts) > 1 {",
          "380:     ref = refParts[1]",
          "381:    }",
          "382:    if !filepath.IsAbs(ref) {",
          "383:     ref = filepath.Join(path, ref)",
          "386:    absRef, _, err := securePaths(root, ref)",
          "390:    if _, ok := visited[absRef]; ok {",
          "391:     return nil",
          "392:    }",
          "394:    if err := d.sopsDecryptFile(absRef, format, format); err != nil {",
          "395:     return securePathErr(root, err)",
          "396:    }",
          "400:    visited[absRef] = struct{}{}",
          "401:    return nil",
          "402:   }",
          "404:   for _, gen := range kus.SecretGenerator {",
          "405:    for _, fileSrc := range gen.FileSources {",
          "406:     if err := visitRef(fileSrc, formats.FormatForPath(fileSrc)); err != nil {",
          "409:    }",
          "410:    for _, envFile := range gen.EnvSources {",
          "411:     format := formats.FormatForPath(envFile)",
          "412:     if formats.FormatForPath(envFile) == formats.Binary {",
          "414:      format = formats.Dotenv",
          "415:     }",
          "416:     if err := visitRef(envFile, format); err != nil {",
          "417:      return err",
          "421:   return nil",
          "422:  }",
          "423: }",
          "434: func (d *KustomizeDecryptor) sopsDecryptFile(path string, inputFormat, outputFormat formats.Format) error {",
          "435:  fi, err := os.Lstat(path)",
          "436:  if err != nil {",
          "437:   return err",
          "438:  }",
          "440:  if !fi.Mode().IsRegular() {",
          "441:   return fmt.Errorf(\"cannot decrypt irregular file as it has file mode type bits set\")",
          "442:  }",
          "443:  if fileSize := fi.Size(); d.maxFileSize > 0 && fileSize > d.maxFileSize {",
          "444:   return fmt.Errorf(\"cannot decrypt file with size (%d bytes) exceeding limit (%d)\", fileSize, d.maxFileSize)",
          "445:  }",
          "447:  data, err := os.ReadFile(path)",
          "448:  if err != nil {",
          "449:   return err",
          "452:  if !bytes.Contains(data, sopsFormatToMarkerBytes[inputFormat]) {",
          "453:   return nil",
          "454:  }",
          "456:  out, err := d.SopsDecryptWithFormat(data, inputFormat, outputFormat)",
          "457:  if err != nil {",
          "458:   return err",
          "459:  }",
          "460:  err = os.WriteFile(path, out, 0o644)",
          "461:  if err != nil {",
          "462:   return fmt.Errorf(\"error writing sops decrypted %s data to %s file: %w\",",
          "463:    sopsFormatToString[inputFormat], sopsFormatToString[outputFormat], err)",
          "464:  }",
          "472: func (d *KustomizeDecryptor) sopsEncryptWithFormat(metadata sops.Metadata, data []byte, inputFormat, outputFormat formats.Format) ([]byte, error) {",
          "475:  branches, err := store.LoadPlainFile(data)",
          "476:  if err != nil {",
          "477:   return nil, err",
          "478:  }",
          "480:  tree := sops.Tree{",
          "481:   Branches: branches,",
          "482:   Metadata: metadata,",
          "483:  }",
          "484:  dataKey, errs := tree.GenerateDataKeyWithKeyServices(d.keyServiceServer())",
          "485:  if len(errs) > 0 {",
          "486:   return nil, sopsUserErr(\"could not generate data key\", fmt.Errorf(\"%s\", errs))",
          "487:  }",
          "489:  cipher := aes.NewCipher()",
          "490:  unencryptedMac, err := tree.Encrypt(dataKey, cipher)",
          "491:  if err != nil {",
          "492:   return nil, sopsUserErr(\"error encrypting sops tree\", err)",
          "493:  }",
          "494:  tree.Metadata.LastModified = time.Now().UTC()",
          "495:  tree.Metadata.MessageAuthenticationCode, err = cipher.Encrypt(unencryptedMac, dataKey, tree.Metadata.LastModified.Format(time.RFC3339))",
          "496:  if err != nil {",
          "497:   return nil, sopsUserErr(\"cannot encrypt sops data tree\", err)",
          "498:  }",
          "500:  outStore := common.StoreForFormat(outputFormat)",
          "501:  out, err := outStore.EmitEncryptedFile(tree)",
          "503:   return nil, sopsUserErr(\"failed to emit sops encrypted file\", err)",
          "505:  return out, nil",
          "506: }",
          "511: func (d *KustomizeDecryptor) keyServiceServer() []keyservice.KeyServiceClient {",
          "512:  d.localServiceOnce.Do(func() {",
          "513:   d.loadKeyServiceServers()",
          "514:  })",
          "515:  return d.keyServices",
          "516: }",
          "521: func (d *KustomizeDecryptor) loadKeyServiceServers() {",
          "523:   intkeyservice.WithGnuPGHome(d.gnuPGHome),",
          "524:   intkeyservice.WithVaultToken(d.vaultToken),",
          "525:   intkeyservice.WithAgeIdentities(d.ageIdentities),",
          "526:  }",
          "527:  if d.azureToken != nil {",
          "528:   serverOpts = append(serverOpts, intkeyservice.WithAzureToken{Token: d.azureToken})",
          "529:  }",
          "530:  server := intkeyservice.NewServer(serverOpts...)",
          "531:  d.keyServices = append(make([]keyservice.KeyServiceClient, 0), intkeyservice.NewLocalClient(server))",
          "532: }",
          "538: func secureLoadKustomizationFile(root, path string) (*kustypes.Kustomization, error) {",
          "539:  if !filepath.IsAbs(root) {",
          "540:   return nil, fmt.Errorf(\"root '%s' must be absolute\", root)",
          "541:  }",
          "542:  if filepath.IsAbs(path) {",
          "543:   return nil, fmt.Errorf(\"path '%s' must be relative\", path)",
          "544:  }",
          "546:  var loadPath string",
          "547:  for _, fName := range konfig.RecognizedKustomizationFileNames() {",
          "548:   fPath, err := securejoin.SecureJoin(root, filepath.Join(path, fName))",
          "549:   if err != nil {",
          "550:    return nil, fmt.Errorf(\"failed to secure join %s: %w\", fName, err)",
          "551:   }",
          "552:   fi, err := os.Lstat(fPath)",
          "553:   if err != nil {",
          "554:    if errors.Is(err, fs.ErrNotExist) {",
          "555:     continue",
          "556:    }",
          "557:    return nil, fmt.Errorf(\"failed to lstat %s: %w\", fName, securePathErr(root, err))",
          "558:   }",
          "560:   if !fi.Mode().IsRegular() {",
          "561:    return nil, fmt.Errorf(\"expected %s to be a regular file\", fName)",
          "562:   }",
          "563:   if loadPath != \"\" {",
          "564:    return nil, fmt.Errorf(\"found multiple kustomization files\")",
          "565:   }",
          "566:   loadPath = fPath",
          "567:  }",
          "568:  if loadPath == \"\" {",
          "569:   return nil, fmt.Errorf(\"no kustomization file found\")",
          "572:  data, err := os.ReadFile(loadPath)",
          "573:  if err != nil {",
          "574:   return nil, fmt.Errorf(\"failed to read kustomization file: %w\", securePathErr(root, err))",
          "577:  kus := kustypes.Kustomization{",
          "578:   TypeMeta: kustypes.TypeMeta{",
          "579:    APIVersion: kustypes.KustomizationVersion,",
          "580:    Kind:       kustypes.KustomizationKind,",
          "582:  }",
          "583:  if err := yaml.Unmarshal(data, &kus); err != nil {",
          "584:   return nil, fmt.Errorf(\"failed to unmarshal kustomization file: %w\", err)",
          "585:  }",
          "586:  return &kus, nil",
          "587: }",
          "591: type visitKustomization func(root, path string, kus *kustypes.Kustomization) error",
          "596: type errRecurseIgnore struct {",
          "597:  Err error",
          "598: }",
          "601: func (e *errRecurseIgnore) Unwrap() error {",
          "602:  return e.Err",
          "603: }",
          "606: func (e *errRecurseIgnore) Error() string {",
          "607:  if err := e.Err; err != nil {",
          "608:   return e.Err.Error()",
          "609:  }",
          "610:  return \"recurse ignore\"",
          "611: }",
          "617: func recurseKustomizationFiles(root, path string, visit visitKustomization, visited map[string]struct{}) error {",
          "619:  absPath, relPath, err := securePaths(root, path)",
          "621:   return err",
          "624:  if _, ok := visited[absPath]; ok {",
          "626:   return nil",
          "628:  visited[absPath] = struct{}{}",
          "631:  fi, err := os.Lstat(absPath)",
          "632:  if err != nil {",
          "633:   err = securePathErr(root, err)",
          "634:   if errors.Is(err, fs.ErrNotExist) {",
          "635:    err = &errRecurseIgnore{Err: err}",
          "636:   }",
          "637:   return err",
          "638:  }",
          "639:  if !fi.IsDir() {",
          "640:   return &errRecurseIgnore{Err: fmt.Errorf(\"not a directory\")}",
          "641:  }",
          "644:  kus, err := secureLoadKustomizationFile(root, relPath)",
          "646:   return err",
          "650:  if err = visit(root, path, kus); err != nil {",
          "651:   return err",
          "652:  }",
          "656:  for _, res := range kus.Resources {",
          "657:   if !filepath.IsAbs(res) {",
          "658:    res = filepath.Join(path, res)",
          "659:   }",
          "660:   if err = recurseKustomizationFiles(root, res, visit, visited); err != nil {",
          "667:    if _, ok := err.(*errRecurseIgnore); !ok {",
          "668:     return err",
          "669:    }",
          "670:   }",
          "671:  }",
          "672:  return nil",
          "673: }",
          "677: func isSOPSEncryptedResource(res *resource.Resource) bool {",
          "678:  if res == nil {",
          "679:   return false",
          "680:  }",
          "681:  sopsField := res.Field(\"sops\")",
          "682:  if sopsField.IsNilOrEmpty() {",
          "683:   return false",
          "684:  }",
          "685:  macField := sopsField.Value.Field(\"mac\")",
          "686:  return !macField.IsNilOrEmpty()",
          "693: func securePaths(root, path string) (string, string, error) {",
          "694:  if filepath.IsAbs(path) {",
          "695:   path = stripRoot(root, path)",
          "696:  }",
          "697:  secureAbsPath, err := securejoin.SecureJoin(root, path)",
          "699:   return \"\", \"\", err",
          "701:  return secureAbsPath, stripRoot(root, secureAbsPath), nil",
          "702: }",
          "704: func stripRoot(root, path string) string {",
          "705:  sepStr := string(filepath.Separator)",
          "706:  root, path = filepath.Clean(sepStr+root), filepath.Clean(sepStr+path)",
          "707:  switch {",
          "708:  case path == root:",
          "709:   path = sepStr",
          "710:  case root == sepStr:",
          "712:  case strings.HasPrefix(path, root+sepStr):",
          "713:   path = strings.TrimPrefix(path, root+sepStr)",
          "714:  }",
          "715:  return filepath.Clean(filepath.Join(\".\"+sepStr, path))",
          "718: func sopsUserErr(msg string, err error) error {",
          "719:  if userErr, ok := err.(sops.UserError); ok {",
          "720:   err = fmt.Errorf(userErr.UserError())",
          "722:  return fmt.Errorf(\"%s: %w\", msg, err)",
          "723: }",
          "725: func securePathErr(root string, err error) error {",
          "726:  if pathErr := new(fs.PathError); errors.As(err, &pathErr) {",
          "727:   err = &fs.PathError{Op: pathErr.Op, Path: stripRoot(root, pathErr.Path), Err: pathErr.Err}",
          "728:  }",
          "729:  return err",
          "",
          "---------------"
        ],
        "controllers/kustomization_decryptor_test.go||controllers/kustomization_decryptor_test.go": [
          "File: controllers/kustomization_decryptor_test.go -> controllers/kustomization_decryptor_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: package controllers",
          "19: import (",
          "20:  \"context\"",
          "21:  \"fmt\"",
          "22:  \"os\"",
          "23:  \"os/exec\"",
          "24:  \"testing\"",
          "25:  \"time\"",
          "29:  sourcev1 \"github.com/fluxcd/source-controller/api/v1beta2\"",
          "30:  \"github.com/hashicorp/vault/api\"",
          "31:  . \"github.com/onsi/gomega\"",
          "32:  corev1 \"k8s.io/api/core/v1\"",
          "33:  metav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"",
          "34:  \"k8s.io/apimachinery/pkg/types\"",
          "35:  \"sigs.k8s.io/controller-runtime/pkg/client\"",
          "36: )",
          "38: func TestKustomizationReconciler_Decryptor(t *testing.T) {",
          "",
          "[Removed Lines]",
          "27:  kustomizev1 \"github.com/fluxcd/kustomize-controller/api/v1beta2\"",
          "28:  \"github.com/fluxcd/pkg/apis/meta\"",
          "",
          "[Added Lines]",
          "20:  \"bytes\"",
          "22:  \"encoding/base64\"",
          "24:  \"io/fs\"",
          "27:  \"path/filepath\"",
          "28:  \"regexp\"",
          "29:  \"strings\"",
          "33:  extage \"filippo.io/age\"",
          "37:  gt \"github.com/onsi/gomega/types\"",
          "38:  \"go.mozilla.org/sops/v3\"",
          "39:  sopsage \"go.mozilla.org/sops/v3/age\"",
          "40:  \"go.mozilla.org/sops/v3/cmd/sops/formats\"",
          "43:  \"k8s.io/apimachinery/pkg/apis/meta/v1/unstructured\"",
          "46:  \"sigs.k8s.io/controller-runtime/pkg/client/fake\"",
          "47:  \"sigs.k8s.io/kustomize/api/konfig\"",
          "48:  \"sigs.k8s.io/kustomize/api/provider\"",
          "49:  \"sigs.k8s.io/kustomize/api/resource\"",
          "50:  kustypes \"sigs.k8s.io/kustomize/api/types\"",
          "51:  \"sigs.k8s.io/yaml\"",
          "53:  kustomizev1 \"github.com/fluxcd/kustomize-controller/api/v1beta2\"",
          "54:  \"github.com/fluxcd/kustomize-controller/internal/sops/age\"",
          "55:  \"github.com/fluxcd/pkg/apis/meta\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "169:  }, timeout, time.Second).Should(BeTrue())",
          "171:  t.Run(\"decrypts SOPS secrets\", func(t *testing.T) {",
          "172:   var pgpSecret corev1.Secret",
          "173:   g.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"sops-pgp\", Namespace: id}, &pgpSecret)).To(Succeed())",
          "174:   g.Expect(pgpSecret.Data[\"secret\"]).To(Equal([]byte(`my-sops-pgp-secret`)))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "192:   g := NewWithT(t)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "207:  })",
          "209:  t.Run(\"does not emit change events for identical secrets\", func(t *testing.T) {",
          "210:   resultK := &kustomizev1.Kustomization{}",
          "211:   revision := \"v2.0.0\"",
          "212:   err = applyGitRepository(repositoryName, artifactName, revision)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "232:   g := NewWithT(t)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "223:   g.Expect(events[0].Message).ShouldNot(ContainSubstring(\"configured\"))",
          "224:  })",
          "225: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "251: func TestIsEncryptedSecret(t *testing.T) {",
          "252:  tests := []struct {",
          "253:   name   string",
          "254:   object []byte",
          "255:   want   gt.GomegaMatcher",
          "256:  }{",
          "257:   {name: \"encrypted secret\", object: []byte(\"apiVersion: v1\\nkind: Secret\\nsops: true\\n\"), want: BeTrue()},",
          "258:   {name: \"decrypted secret\", object: []byte(\"apiVersion: v1\\nkind: Secret\\n\"), want: BeFalse()},",
          "259:   {name: \"other resource\", object: []byte(\"apiVersion: v1\\nkind: Deployment\\n\"), want: BeFalse()},",
          "260:  }",
          "261:  for _, tt := range tests {",
          "262:   t.Run(tt.name, func(t *testing.T) {",
          "263:    g := NewWithT(t)",
          "265:    u := &unstructured.Unstructured{}",
          "266:    g.Expect(yaml.Unmarshal(tt.object, u)).To(Succeed())",
          "267:    g.Expect(IsEncryptedSecret(u)).To(tt.want)",
          "268:   })",
          "269:  }",
          "270: }",
          "272: func TestKustomizeDecryptor_ImportKeys(t *testing.T) {",
          "273:  g := NewWithT(t)",
          "275:  const provider = \"sops\"",
          "277:  pgpKey, err := os.ReadFile(\"testdata/sops/pgp.asc\")",
          "278:  g.Expect(err).ToNot(HaveOccurred())",
          "279:  ageKey, err := os.ReadFile(\"testdata/sops/age.txt\")",
          "280:  g.Expect(err).ToNot(HaveOccurred())",
          "282:  tests := []struct {",
          "283:   name        string",
          "284:   decryption  *kustomizev1.Decryption",
          "285:   secret      *corev1.Secret",
          "286:   wantErr     bool",
          "287:   inspectFunc func(g *GomegaWithT, decryptor *KustomizeDecryptor)",
          "288:  }{",
          "289:   {",
          "290:    name: \"PGP key\",",
          "291:    decryption: &kustomizev1.Decryption{",
          "292:     Provider: provider,",
          "293:     SecretRef: &meta.LocalObjectReference{",
          "294:      Name: \"pgp-secret\",",
          "295:     },",
          "296:    },",
          "297:    secret: &corev1.Secret{",
          "298:     ObjectMeta: metav1.ObjectMeta{",
          "299:      Name:      \"pgp-secret\",",
          "300:      Namespace: provider,",
          "301:     },",
          "302:     Data: map[string][]byte{",
          "303:      \"pgp\" + DecryptionPGPExt: pgpKey,",
          "304:     },",
          "305:    },",
          "306:   },",
          "307:   {",
          "308:    name: \"PGP key import error\",",
          "309:    decryption: &kustomizev1.Decryption{",
          "310:     Provider: provider,",
          "311:     SecretRef: &meta.LocalObjectReference{",
          "312:      Name: \"pgp-secret\",",
          "313:     },",
          "314:    },",
          "315:    secret: &corev1.Secret{",
          "316:     ObjectMeta: metav1.ObjectMeta{",
          "317:      Name:      \"pgp-secret\",",
          "318:      Namespace: provider,",
          "319:     },",
          "320:     Data: map[string][]byte{",
          "321:      \"pgp\" + DecryptionPGPExt: []byte(\"not-a-valid-armored-key\"),",
          "322:     },",
          "323:    },",
          "324:    wantErr: true,",
          "325:   },",
          "326:   {",
          "327:    name: \"age key\",",
          "328:    decryption: &kustomizev1.Decryption{",
          "329:     Provider: provider,",
          "330:     SecretRef: &meta.LocalObjectReference{",
          "331:      Name: \"age-secret\",",
          "332:     },",
          "333:    },",
          "334:    secret: &corev1.Secret{",
          "335:     ObjectMeta: metav1.ObjectMeta{",
          "336:      Name:      \"age-secret\",",
          "337:      Namespace: provider,",
          "338:     },",
          "339:     Data: map[string][]byte{",
          "340:      \"age\" + DecryptionAgeExt: ageKey,",
          "341:     },",
          "342:    },",
          "343:    inspectFunc: func(g *GomegaWithT, decryptor *KustomizeDecryptor) {",
          "344:     g.Expect(decryptor.ageIdentities).To(HaveLen(1))",
          "345:    },",
          "346:   },",
          "347:   {",
          "348:    name: \"age key import error\",",
          "349:    decryption: &kustomizev1.Decryption{",
          "350:     Provider: provider,",
          "351:     SecretRef: &meta.LocalObjectReference{",
          "352:      Name: \"age-secret\",",
          "353:     },",
          "354:    },",
          "355:    secret: &corev1.Secret{",
          "356:     ObjectMeta: metav1.ObjectMeta{",
          "357:      Name:      \"age-secret\",",
          "358:      Namespace: provider,",
          "359:     },",
          "360:     Data: map[string][]byte{",
          "361:      \"age\" + DecryptionAgeExt: []byte(\"not-a-valid-key\"),",
          "362:     },",
          "363:    },",
          "364:    wantErr: true,",
          "365:    inspectFunc: func(g *GomegaWithT, decryptor *KustomizeDecryptor) {",
          "366:     g.Expect(decryptor.ageIdentities).To(HaveLen(0))",
          "367:    },",
          "368:   },",
          "369:   {",
          "370:    name: \"HC Vault token\",",
          "371:    decryption: &kustomizev1.Decryption{",
          "372:     Provider: provider,",
          "373:     SecretRef: &meta.LocalObjectReference{",
          "374:      Name: \"hcvault-secret\",",
          "375:     },",
          "376:    },",
          "377:    secret: &corev1.Secret{",
          "378:     ObjectMeta: metav1.ObjectMeta{",
          "379:      Name:      \"hcvault-secret\",",
          "380:      Namespace: provider,",
          "381:     },",
          "382:     Data: map[string][]byte{",
          "383:      DecryptionVaultTokenFileName: []byte(\"some-hcvault-token\"),",
          "384:     },",
          "385:    },",
          "386:    inspectFunc: func(g *GomegaWithT, decryptor *KustomizeDecryptor) {",
          "387:     g.Expect(decryptor.vaultToken).To(Equal(\"some-hcvault-token\"))",
          "388:    },",
          "389:   },",
          "390:   {",
          "391:    name: \"Azure Key Vault token\",",
          "392:    decryption: &kustomizev1.Decryption{",
          "393:     Provider: provider,",
          "394:     SecretRef: &meta.LocalObjectReference{",
          "395:      Name: \"azkv-secret\",",
          "396:     },",
          "397:    },",
          "398:    secret: &corev1.Secret{",
          "399:     ObjectMeta: metav1.ObjectMeta{",
          "400:      Name:      \"azkv-secret\",",
          "401:      Namespace: provider,",
          "402:     },",
          "403:     Data: map[string][]byte{",
          "404:      DecryptionAzureAuthFile: []byte(`tenantId: some-tenant-id",
          "405: clientId: some-client-id",
          "406: clientSecret: some-client-secret`),",
          "407:     },",
          "408:    },",
          "409:    inspectFunc: func(g *GomegaWithT, decryptor *KustomizeDecryptor) {",
          "410:     g.Expect(decryptor.azureToken).ToNot(BeNil())",
          "411:    },",
          "412:   },",
          "413:   {",
          "414:    name: \"Azure Key Vault token load config error\",",
          "415:    decryption: &kustomizev1.Decryption{",
          "416:     Provider: provider,",
          "417:     SecretRef: &meta.LocalObjectReference{",
          "418:      Name: \"azkv-secret\",",
          "419:     },",
          "420:    },",
          "421:    secret: &corev1.Secret{",
          "422:     ObjectMeta: metav1.ObjectMeta{",
          "423:      Name:      \"azkv-secret\",",
          "424:      Namespace: provider,",
          "425:     },",
          "426:     Data: map[string][]byte{",
          "427:      DecryptionAzureAuthFile: []byte(`{\"malformed\\: JSON\"}`),",
          "428:     },",
          "429:    },",
          "430:    wantErr: true,",
          "431:    inspectFunc: func(g *GomegaWithT, decryptor *KustomizeDecryptor) {",
          "432:     g.Expect(decryptor.azureToken).To(BeNil())",
          "433:    },",
          "434:   },",
          "435:   {",
          "436:    name: \"Azure Key Vault unsupported config\",",
          "437:    decryption: &kustomizev1.Decryption{",
          "438:     Provider: provider,",
          "439:     SecretRef: &meta.LocalObjectReference{",
          "440:      Name: \"azkv-secret\",",
          "441:     },",
          "442:    },",
          "443:    secret: &corev1.Secret{",
          "444:     ObjectMeta: metav1.ObjectMeta{",
          "445:      Name:      \"azkv-secret\",",
          "446:      Namespace: provider,",
          "447:     },",
          "448:     Data: map[string][]byte{",
          "449:      DecryptionAzureAuthFile: []byte(`tenantId: incomplete`),",
          "450:     },",
          "451:    },",
          "452:    wantErr: true,",
          "453:    inspectFunc: func(g *GomegaWithT, decryptor *KustomizeDecryptor) {",
          "454:     g.Expect(decryptor.azureToken).To(BeNil())",
          "455:    },",
          "456:   },",
          "457:   {",
          "458:    name: \"multiple Secret data entries\",",
          "459:    decryption: &kustomizev1.Decryption{",
          "460:     Provider: provider,",
          "461:     SecretRef: &meta.LocalObjectReference{",
          "462:      Name: \"multiple-secret\",",
          "463:     },",
          "464:    },",
          "465:    secret: &corev1.Secret{",
          "466:     ObjectMeta: metav1.ObjectMeta{",
          "467:      Name:      \"multiple-secret\",",
          "468:      Namespace: provider,",
          "469:     },",
          "470:     Data: map[string][]byte{",
          "471:      \"age\" + DecryptionAgeExt:     ageKey,",
          "472:      DecryptionVaultTokenFileName: []byte(\"some-hcvault-token\"),",
          "473:     },",
          "474:    },",
          "475:    inspectFunc: func(g *GomegaWithT, decryptor *KustomizeDecryptor) {",
          "476:     g.Expect(decryptor.vaultToken).ToNot(BeEmpty())",
          "477:     g.Expect(decryptor.ageIdentities).To(HaveLen(1))",
          "478:    },",
          "479:   },",
          "480:   {",
          "481:    name:       \"no Decryption spec\",",
          "482:    decryption: nil,",
          "483:    wantErr:    false,",
          "484:   },",
          "485:   {",
          "486:    name: \"no Decryption Secret\",",
          "487:    decryption: &kustomizev1.Decryption{",
          "488:     Provider: DecryptionProviderSOPS,",
          "489:    },",
          "490:    wantErr: false,",
          "491:   },",
          "492:   {",
          "493:    name: \"non-existing Decryption Secret\",",
          "494:    decryption: &kustomizev1.Decryption{",
          "495:     Provider: DecryptionProviderSOPS,",
          "496:     SecretRef: &meta.LocalObjectReference{",
          "497:      Name: \"does-not-exist\",",
          "498:     },",
          "499:    },",
          "500:    wantErr: true,",
          "501:   },",
          "502:   {",
          "503:    name: \"unimplemented Decryption Provider\",",
          "504:    decryption: &kustomizev1.Decryption{",
          "505:     Provider: \"not-supported\",",
          "506:    },",
          "507:    wantErr: false,",
          "508:   },",
          "509:  }",
          "510:  for _, tt := range tests {",
          "511:   t.Run(tt.name, func(t *testing.T) {",
          "512:    g := NewWithT(t)",
          "514:    cb := fake.NewClientBuilder()",
          "515:    if tt.secret != nil {",
          "516:     cb.WithObjects(tt.secret)",
          "517:    }",
          "518:    kustomization := kustomizev1.Kustomization{",
          "519:     ObjectMeta: metav1.ObjectMeta{",
          "520:      Name:      provider + \"-\" + tt.name,",
          "521:      Namespace: provider,",
          "522:     },",
          "523:     Spec: kustomizev1.KustomizationSpec{",
          "524:      Interval:   metav1.Duration{Duration: 2 * time.Minute},",
          "525:      Path:       \"./\",",
          "526:      Decryption: tt.decryption,",
          "527:     },",
          "528:    }",
          "530:    d, cleanup, err := NewTempDecryptor(\"\", cb.Build(), kustomization)",
          "531:    g.Expect(err).ToNot(HaveOccurred())",
          "532:    t.Cleanup(cleanup)",
          "534:    match := Succeed()",
          "535:    if tt.wantErr {",
          "536:     match = HaveOccurred()",
          "537:    }",
          "538:    g.Expect(d.ImportKeys(context.TODO())).To(match)",
          "540:    if tt.inspectFunc != nil {",
          "541:     tt.inspectFunc(g, d)",
          "542:    }",
          "543:   })",
          "544:  }",
          "545: }",
          "547: func TestKustomizeDecryptor_SopsDecryptWithFormat(t *testing.T) {",
          "548:  t.Run(\"decrypt INI to INI\", func(t *testing.T) {",
          "549:   g := NewWithT(t)",
          "551:   ageID, err := extage.GenerateX25519Identity()",
          "552:   g.Expect(err).ToNot(HaveOccurred())",
          "554:   kd := &KustomizeDecryptor{",
          "555:    checkSopsMac:  true,",
          "556:    ageIdentities: age.ParsedIdentities{ageID},",
          "557:   }",
          "559:   format := formats.Ini",
          "560:   data := []byte(\"[config]\\nkey = value\\n\\n\")",
          "561:   encData, err := kd.sopsEncryptWithFormat(sops.Metadata{",
          "562:    KeyGroups: []sops.KeyGroup{",
          "563:     {&sopsage.MasterKey{Recipient: ageID.Recipient().String()}},",
          "564:    },",
          "565:   }, data, format, format)",
          "566:   g.Expect(err).ToNot(HaveOccurred())",
          "567:   g.Expect(bytes.Contains(encData, sopsFormatToMarkerBytes[format])).To(BeTrue())",
          "568:   g.Expect(encData).ToNot(Equal(data))",
          "570:   out, err := kd.SopsDecryptWithFormat(encData, format, format)",
          "571:   g.Expect(err).ToNot(HaveOccurred())",
          "572:   g.Expect(out).To(Equal(data))",
          "573:  })",
          "575:  t.Run(\"decrypt JSON to YAML\", func(t *testing.T) {",
          "576:   g := NewWithT(t)",
          "578:   ageID, err := extage.GenerateX25519Identity()",
          "579:   g.Expect(err).ToNot(HaveOccurred())",
          "581:   kd := &KustomizeDecryptor{",
          "582:    checkSopsMac:  true,",
          "583:    ageIdentities: age.ParsedIdentities{ageID},",
          "584:   }",
          "586:   inputFormat, outputFormat := formats.Json, formats.Yaml",
          "587:   data := []byte(\"{\\\"key\\\": \\\"value\\\"}\\n\")",
          "588:   encData, err := kd.sopsEncryptWithFormat(sops.Metadata{",
          "589:    KeyGroups: []sops.KeyGroup{",
          "590:     {&sopsage.MasterKey{Recipient: ageID.Recipient().String()}},",
          "591:    },",
          "592:   }, data, inputFormat, inputFormat)",
          "593:   g.Expect(err).ToNot(HaveOccurred())",
          "594:   g.Expect(bytes.Contains(encData, sopsFormatToMarkerBytes[inputFormat])).To(BeTrue())",
          "596:   out, err := kd.SopsDecryptWithFormat(encData, inputFormat, outputFormat)",
          "597:   t.Logf(\"%s\", out)",
          "598:   g.Expect(err).ToNot(HaveOccurred())",
          "599:   g.Expect(out).To(Equal([]byte(\"key: value\\n\")))",
          "600:  })",
          "602:  t.Run(\"invalid JSON data\", func(t *testing.T) {",
          "603:   g := NewWithT(t)",
          "605:   format := formats.Json",
          "606:   data, err := (&KustomizeDecryptor{}).SopsDecryptWithFormat([]byte(\"invalid json\"), format, format)",
          "607:   g.Expect(err).To(HaveOccurred())",
          "608:   g.Expect(err.Error()).To(ContainSubstring(\"failed to load encrypted JSON data\"))",
          "609:   g.Expect(data).To(BeNil())",
          "610:  })",
          "612:  t.Run(\"no data key\", func(t *testing.T) {",
          "613:   g := NewWithT(t)",
          "615:   ageID, err := extage.GenerateX25519Identity()",
          "616:   g.Expect(err).ToNot(HaveOccurred())",
          "618:   kd := &KustomizeDecryptor{}",
          "620:   format := formats.Binary",
          "621:   encData, err := kd.sopsEncryptWithFormat(sops.Metadata{",
          "622:    KeyGroups: []sops.KeyGroup{",
          "623:     {&sopsage.MasterKey{Recipient: ageID.Recipient().String()}},",
          "624:    },",
          "625:   }, []byte(\"foo bar\"), format, format)",
          "626:   g.Expect(err).ToNot(HaveOccurred())",
          "627:   g.Expect(bytes.Contains(encData, sopsFormatToMarkerBytes[format])).To(BeTrue())",
          "629:   data, err := kd.SopsDecryptWithFormat(encData, format, format)",
          "630:   g.Expect(err).To(HaveOccurred())",
          "631:   g.Expect(err.Error()).To(ContainSubstring(\"cannot get sops data key\"))",
          "632:   g.Expect(data).To(BeNil())",
          "633:  })",
          "635:  t.Run(\"with mac check\", func(t *testing.T) {",
          "636:   g := NewWithT(t)",
          "638:   ageID, err := extage.GenerateX25519Identity()",
          "639:   g.Expect(err).ToNot(HaveOccurred())",
          "641:   kd := &KustomizeDecryptor{",
          "642:    checkSopsMac:  true,",
          "643:    ageIdentities: age.ParsedIdentities{ageID},",
          "644:   }",
          "646:   format := formats.Dotenv",
          "647:   data := []byte(\"key=value\\n\")",
          "648:   encData, err := kd.sopsEncryptWithFormat(sops.Metadata{",
          "649:    KeyGroups: []sops.KeyGroup{",
          "650:     {&sopsage.MasterKey{Recipient: ageID.Recipient().String()}},",
          "651:    },",
          "652:   }, data, format, format)",
          "653:   g.Expect(err).ToNot(HaveOccurred())",
          "654:   g.Expect(bytes.Contains(encData, sopsFormatToMarkerBytes[format])).To(BeTrue())",
          "656:   out, err := kd.SopsDecryptWithFormat(encData, format, format)",
          "657:   g.Expect(err).ToNot(HaveOccurred())",
          "658:   g.Expect(out).To(Equal(data))",
          "660:   badMAC := regexp.MustCompile(\"(?m)[\\r\\n]+^.*sops_mac=.*$\")",
          "661:   badMACData := badMAC.ReplaceAll(encData, []byte(\"\\nsops_mac=\\n\"))",
          "662:   out, err = kd.SopsDecryptWithFormat(badMACData, format, format)",
          "663:   g.Expect(err).To(HaveOccurred())",
          "664:   g.Expect(err.Error()).To(ContainSubstring(\"failed to verify sops data integrity: expected mac 'no MAC'\"))",
          "665:   g.Expect(out).To(BeNil())",
          "666:  })",
          "667: }",
          "669: func TestKustomizeDecryptor_DecryptResource(t *testing.T) {",
          "670:  var (",
          "671:   resourceFactory = provider.NewDefaultDepProvider().GetResourceFactory()",
          "672:   emptyResource   = resourceFactory.FromMap(map[string]interface{}{})",
          "673:  )",
          "675:  newSecretResource := func(namespace, name string, data map[string]interface{}) *resource.Resource {",
          "676:   return resourceFactory.FromMap(map[string]interface{}{",
          "677:    \"apiVersion\": \"v1\",",
          "678:    \"kind\":       \"Secret\",",
          "679:    \"metadata\": map[string]interface{}{",
          "680:     \"name\":      \"secret\",",
          "681:     \"namespace\": \"test\",",
          "682:    },",
          "683:    \"data\": data,",
          "684:   })",
          "685:  }",
          "687:  kustomization := kustomizev1.Kustomization{",
          "688:   ObjectMeta: metav1.ObjectMeta{",
          "689:    Name:      \"decrypt\",",
          "690:    Namespace: \"decrypt\",",
          "691:   },",
          "692:   Spec: kustomizev1.KustomizationSpec{",
          "693:    Interval: metav1.Duration{Duration: 2 * time.Minute},",
          "694:    Path:     \"./\",",
          "695:   },",
          "696:  }",
          "698:  t.Run(\"SOPS encrypted resource\", func(t *testing.T) {",
          "699:   g := NewWithT(t)",
          "701:   kus := kustomization.DeepCopy()",
          "702:   kus.Spec.Decryption = &kustomizev1.Decryption{",
          "703:    Provider: DecryptionProviderSOPS,",
          "704:   }",
          "706:   d, cleanup, err := NewTempDecryptor(\"\", fake.NewClientBuilder().Build(), *kus)",
          "707:   g.Expect(err).ToNot(HaveOccurred())",
          "708:   t.Cleanup(cleanup)",
          "710:   ageID, err := extage.GenerateX25519Identity()",
          "711:   g.Expect(err).ToNot(HaveOccurred())",
          "712:   d.ageIdentities = append(d.ageIdentities, ageID)",
          "714:   secret := newSecretResource(\"test\", \"secret\", map[string]interface{}{",
          "715:    \"key\": \"value\",",
          "716:   })",
          "717:   g.Expect(isSOPSEncryptedResource(secret)).To(BeFalse())",
          "719:   secretData, err := secret.MarshalJSON()",
          "720:   g.Expect(err).ToNot(HaveOccurred())",
          "722:   encData, err := d.sopsEncryptWithFormat(sops.Metadata{",
          "723:    EncryptedRegex: \"^(data|stringData)$\",",
          "724:    KeyGroups: []sops.KeyGroup{",
          "725:     {&sopsage.MasterKey{Recipient: ageID.Recipient().String()}},",
          "726:    },",
          "727:   }, secretData, formats.Json, formats.Json)",
          "728:   g.Expect(err).ToNot(HaveOccurred())",
          "730:   g.Expect(secret.UnmarshalJSON(encData)).To(Succeed())",
          "731:   g.Expect(isSOPSEncryptedResource(secret)).To(BeTrue())",
          "733:   got, err := d.DecryptResource(secret)",
          "734:   g.Expect(err).ToNot(HaveOccurred())",
          "735:   g.Expect(got).ToNot(BeNil())",
          "736:   g.Expect(got.MarshalJSON()).To(Equal(secretData))",
          "737:  })",
          "739:  t.Run(\"SOPS encrypted binary Secret data field\", func(t *testing.T) {",
          "740:   g := NewWithT(t)",
          "742:   kus := kustomization.DeepCopy()",
          "743:   kus.Spec.Decryption = &kustomizev1.Decryption{",
          "744:    Provider: DecryptionProviderSOPS,",
          "745:   }",
          "747:   d, cleanup, err := NewTempDecryptor(\"\", fake.NewClientBuilder().Build(), *kus)",
          "748:   g.Expect(err).ToNot(HaveOccurred())",
          "749:   t.Cleanup(cleanup)",
          "751:   ageID, err := extage.GenerateX25519Identity()",
          "752:   g.Expect(err).ToNot(HaveOccurred())",
          "753:   d.ageIdentities = append(d.ageIdentities, ageID)",
          "755:   plainData := []byte(\"[config]\\napp = secret\\n\\n\")",
          "756:   encData, err := d.sopsEncryptWithFormat(sops.Metadata{",
          "757:    KeyGroups: []sops.KeyGroup{",
          "758:     {&sopsage.MasterKey{Recipient: ageID.Recipient().String()}},",
          "759:    },",
          "760:   }, plainData, formats.Ini, formats.Yaml)",
          "761:   g.Expect(err).ToNot(HaveOccurred())",
          "763:   secret := newSecretResource(\"test\", \"secret-data\", map[string]interface{}{",
          "764:    \"file.ini\": base64.StdEncoding.EncodeToString(encData),",
          "765:   })",
          "766:   g.Expect(isSOPSEncryptedResource(secret)).To(BeFalse())",
          "768:   got, err := d.DecryptResource(secret)",
          "769:   g.Expect(err).ToNot(HaveOccurred())",
          "770:   g.Expect(got).ToNot(BeNil())",
          "771:   g.Expect(got.GetDataMap()).To(HaveKeyWithValue(\"file.ini\", base64.StdEncoding.EncodeToString(plainData)))",
          "772:  })",
          "774:  t.Run(\"SOPS encrypted YAML Secret data field\", func(t *testing.T) {",
          "775:   g := NewWithT(t)",
          "777:   kus := kustomization.DeepCopy()",
          "778:   kus.Spec.Decryption = &kustomizev1.Decryption{",
          "779:    Provider: DecryptionProviderSOPS,",
          "780:   }",
          "782:   d, cleanup, err := NewTempDecryptor(\"\", fake.NewClientBuilder().Build(), *kus)",
          "783:   g.Expect(err).ToNot(HaveOccurred())",
          "784:   t.Cleanup(cleanup)",
          "786:   ageID, err := extage.GenerateX25519Identity()",
          "787:   g.Expect(err).ToNot(HaveOccurred())",
          "788:   d.ageIdentities = append(d.ageIdentities, ageID)",
          "790:   plainData := []byte(\"structured:\\n    data:\\n        key: value\\n\")",
          "791:   encData, err := d.sopsEncryptWithFormat(sops.Metadata{",
          "792:    KeyGroups: []sops.KeyGroup{",
          "793:     {&sopsage.MasterKey{Recipient: ageID.Recipient().String()}},",
          "794:    },",
          "795:   }, plainData, formats.Yaml, formats.Yaml)",
          "796:   g.Expect(err).ToNot(HaveOccurred())",
          "798:   secret := newSecretResource(\"test\", \"secret-data\", map[string]interface{}{",
          "799:    \"key.yaml\": base64.StdEncoding.EncodeToString(encData),",
          "800:   })",
          "801:   g.Expect(isSOPSEncryptedResource(secret)).To(BeFalse())",
          "803:   got, err := d.DecryptResource(secret)",
          "804:   g.Expect(err).ToNot(HaveOccurred())",
          "805:   g.Expect(got).ToNot(BeNil())",
          "806:   g.Expect(got.GetDataMap()).To(HaveKeyWithValue(\"key.yaml\", base64.StdEncoding.EncodeToString(plainData)))",
          "807:  })",
          "809:  t.Run(\"nil resource\", func(t *testing.T) {",
          "810:   g := NewWithT(t)",
          "812:   d, cleanup, err := NewTempDecryptor(\"\", fake.NewClientBuilder().Build(), *kustomization.DeepCopy())",
          "813:   g.Expect(err).ToNot(HaveOccurred())",
          "814:   t.Cleanup(cleanup)",
          "816:   got, err := d.DecryptResource(nil)",
          "817:   g.Expect(err).ToNot(HaveOccurred())",
          "818:   g.Expect(got).To(BeNil())",
          "819:  })",
          "821:  t.Run(\"no decryption spec\", func(t *testing.T) {",
          "822:   g := NewWithT(t)",
          "824:   d, cleanup, err := NewTempDecryptor(\"\", fake.NewClientBuilder().Build(), *kustomization.DeepCopy())",
          "825:   g.Expect(err).ToNot(HaveOccurred())",
          "826:   t.Cleanup(cleanup)",
          "828:   got, err := d.DecryptResource(emptyResource.DeepCopy())",
          "829:   g.Expect(err).ToNot(HaveOccurred())",
          "830:   g.Expect(got).To(BeNil())",
          "831:  })",
          "833:  t.Run(\"unimplemented decryption provider\", func(t *testing.T) {",
          "834:   g := NewWithT(t)",
          "836:   kus := kustomization.DeepCopy()",
          "837:   kus.Spec.Decryption = &kustomizev1.Decryption{",
          "838:    Provider: \"not-supported\",",
          "839:   }",
          "840:   d, cleanup, err := NewTempDecryptor(\"\", fake.NewClientBuilder().Build(), *kus)",
          "841:   g.Expect(err).ToNot(HaveOccurred())",
          "842:   t.Cleanup(cleanup)",
          "844:   got, err := d.DecryptResource(emptyResource.DeepCopy())",
          "845:   g.Expect(err).ToNot(HaveOccurred())",
          "846:   g.Expect(got).To(BeNil())",
          "847:  })",
          "848: }",
          "850: func TestKustomizeDecryptor_decryptKustomizationEnvSources(t *testing.T) {",
          "851:  type file struct {",
          "852:   name       string",
          "853:   symlink    string",
          "854:   data       []byte",
          "855:   encrypt    bool",
          "856:   expectData bool",
          "857:  }",
          "858:  tests := []struct {",
          "859:   name            string",
          "860:   wordirSuffix    string",
          "861:   path            string",
          "862:   files           []file",
          "863:   secretGenerator []kustypes.SecretArgs",
          "864:   expectVisited   []string",
          "865:   wantErr         error",
          "866:  }{",
          "867:   {",
          "868:    name: \"decrypt env sources\",",
          "869:    path: \"subdir\",",
          "870:    files: []file{",
          "871:     {name: \"subdir/app.env\", data: []byte(\"var1=value1\\n\"), encrypt: true, expectData: true},",
          "872:     {name: \"subdir/file.txt\", data: []byte(\"file\"), encrypt: true, expectData: true},",
          "873:     {name: \"secret.env\", data: []byte(\"var2=value2\\n\"), encrypt: true, expectData: true},",
          "874:    },",
          "875:    secretGenerator: []kustypes.SecretArgs{",
          "876:     {",
          "877:      GeneratorArgs: kustypes.GeneratorArgs{",
          "878:       Name: \"envSecret\",",
          "879:       KvPairSources: kustypes.KvPairSources{",
          "880:        FileSources: []string{\"file.txt\"},",
          "881:        EnvSources:  []string{\"app.env\", \"key=../secret.env\"},",
          "882:       },",
          "883:      },",
          "884:     },",
          "885:    },",
          "886:    expectVisited: []string{\"subdir/app.env\", \"subdir/file.txt\", \"secret.env\"},",
          "887:   },",
          "888:   {",
          "889:    name:  \"decryption error\",",
          "890:    files: []file{},",
          "891:    secretGenerator: []kustypes.SecretArgs{",
          "892:     {",
          "893:      GeneratorArgs: kustypes.GeneratorArgs{",
          "894:       Name: \"envSecret\",",
          "895:       KvPairSources: kustypes.KvPairSources{",
          "896:        EnvSources: []string{\"file.txt\"},",
          "897:       },",
          "898:      },",
          "899:     },",
          "900:    },",
          "901:    expectVisited: []string{},",
          "902:    wantErr:       &fs.PathError{Op: \"lstat\", Path: \"file.txt\", Err: fmt.Errorf(\"\")},",
          "903:   },",
          "904:   {",
          "905:    name: \"follows relative symlink within root\",",
          "906:    path: \"subdir\",",
          "907:    files: []file{",
          "908:     {name: \"subdir/symlink\", symlink: \"../otherdir/data.env\"},",
          "909:     {name: \"otherdir/data.env\", data: []byte(\"key=value\\n\"), encrypt: true, expectData: true},",
          "910:    },",
          "911:    secretGenerator: []kustypes.SecretArgs{",
          "912:     {",
          "913:      GeneratorArgs: kustypes.GeneratorArgs{",
          "914:       Name: \"envSecret\",",
          "915:       KvPairSources: kustypes.KvPairSources{",
          "916:        EnvSources: []string{\"symlink\"},",
          "917:       },",
          "918:      },",
          "919:     },",
          "920:    },",
          "921:    expectVisited: []string{\"otherdir/data.env\"},",
          "922:   },",
          "923:   {",
          "924:    name:         \"error on symlink outside root\",",
          "925:    wordirSuffix: \"subdir\",",
          "926:    path:         \"./\",",
          "927:    files: []file{",
          "928:     {name: \"subdir/symlink\", symlink: \"../otherdir/data.env\"},",
          "929:     {name: \"otherdir/data.env\", data: []byte(\"key=value\\n\"), encrypt: true, expectData: false},",
          "930:    },",
          "931:    secretGenerator: []kustypes.SecretArgs{",
          "932:     {",
          "933:      GeneratorArgs: kustypes.GeneratorArgs{",
          "934:       Name: \"envSecret\",",
          "935:       KvPairSources: kustypes.KvPairSources{",
          "936:        EnvSources: []string{\"symlink\"},",
          "937:       },",
          "938:      },",
          "939:     },",
          "940:    },",
          "941:    wantErr:       &fs.PathError{Op: \"lstat\", Path: \"otherdir/data.env\", Err: fmt.Errorf(\"\")},",
          "942:    expectVisited: []string{},",
          "943:   },",
          "944:   {",
          "945:    name:         \"error on reference outside root\",",
          "946:    wordirSuffix: \"subdir\",",
          "947:    path:         \"./\",",
          "948:    files: []file{",
          "949:     {name: \"data.env\", data: []byte(\"key=value\\n\"), encrypt: true, expectData: false},",
          "950:    },",
          "951:    secretGenerator: []kustypes.SecretArgs{",
          "952:     {",
          "953:      GeneratorArgs: kustypes.GeneratorArgs{",
          "954:       Name: \"envSecret\",",
          "955:       KvPairSources: kustypes.KvPairSources{",
          "956:        EnvSources: []string{\"../data.env\"},",
          "957:       },",
          "958:      },",
          "959:     },",
          "960:    },",
          "961:    wantErr:       &fs.PathError{Op: \"lstat\", Path: \"data.env\", Err: fmt.Errorf(\"\")},",
          "962:    expectVisited: []string{},",
          "963:   },",
          "964:  }",
          "965:  for _, tt := range tests {",
          "966:   t.Run(tt.name, func(t *testing.T) {",
          "967:    g := NewWithT(t)",
          "969:    tmpDir := t.TempDir()",
          "970:    root := filepath.Join(tmpDir, tt.wordirSuffix)",
          "972:    id, err := extage.GenerateX25519Identity()",
          "973:    g.Expect(err).ToNot(HaveOccurred())",
          "974:    ageIdentities := age.ParsedIdentities{id}",
          "976:    d := &KustomizeDecryptor{",
          "977:     root:          root,",
          "978:     ageIdentities: ageIdentities,",
          "979:    }",
          "981:    for _, f := range tt.files {",
          "982:     fPath := filepath.Join(tmpDir, f.name)",
          "983:     g.Expect(os.MkdirAll(filepath.Dir(fPath), 0o700)).To(Succeed())",
          "984:     if f.symlink != \"\" {",
          "985:      g.Expect(os.Symlink(f.symlink, fPath)).To(Succeed())",
          "986:      continue",
          "987:     }",
          "988:     data := f.data",
          "989:     if f.encrypt {",
          "990:      format := formats.FormatForPath(f.name)",
          "991:      data, err = d.sopsEncryptWithFormat(sops.Metadata{",
          "992:       KeyGroups: []sops.KeyGroup{",
          "993:        {&sopsage.MasterKey{Recipient: id.Recipient().String()}},",
          "994:       },",
          "995:      }, f.data, format, format)",
          "996:      g.Expect(err).ToNot(HaveOccurred())",
          "997:      g.Expect(data).ToNot(Equal(f.data))",
          "998:     }",
          "999:     g.Expect(os.WriteFile(fPath, data, 0o644)).To(Succeed())",
          "1000:    }",
          "1002:    visited := make(map[string]struct{}, 0)",
          "1003:    visit := d.decryptKustomizationEnvSources(visited)",
          "1004:    kus := &kustypes.Kustomization{SecretGenerator: tt.secretGenerator}",
          "1006:    err = visit(root, tt.path, kus)",
          "1007:    if tt.wantErr == nil {",
          "1008:     g.Expect(err).ToNot(HaveOccurred())",
          "1009:    } else {",
          "1010:     g.Expect(err).To(HaveOccurred())",
          "1011:     g.Expect(err).To(BeAssignableToTypeOf(tt.wantErr))",
          "1012:     g.Expect(err.Error()).To(ContainSubstring(tt.wantErr.Error()))",
          "1013:    }",
          "1015:    for _, f := range tt.files {",
          "1016:     if f.symlink != \"\" {",
          "1017:      continue",
          "1018:     }",
          "1020:     b, err := os.ReadFile(filepath.Join(tmpDir, f.name))",
          "1021:     g.Expect(err).ToNot(HaveOccurred())",
          "1022:     if f.expectData {",
          "1023:      g.Expect(b).To(Equal(f.data))",
          "1024:     } else {",
          "1025:      g.Expect(b).ToNot(Equal(f.data))",
          "1026:     }",
          "1027:    }",
          "1029:    absVisited := make(map[string]struct{}, 0)",
          "1030:    for _, v := range tt.expectVisited {",
          "1031:     absVisited[filepath.Join(tmpDir, v)] = struct{}{}",
          "1032:    }",
          "1033:    g.Expect(visited).To(Equal(absVisited))",
          "1034:   })",
          "1035:  }",
          "1036: }",
          "1038: func TestKustomizeDecryptor_decryptSopsFile(t *testing.T) {",
          "1039:  g := NewWithT(t)",
          "1041:  id, err := extage.GenerateX25519Identity()",
          "1042:  g.Expect(err).ToNot(HaveOccurred())",
          "1043:  ageIdentities := age.ParsedIdentities{id}",
          "1045:  type file struct {",
          "1046:   name       string",
          "1047:   symlink    string",
          "1048:   data       []byte",
          "1049:   encrypt    bool",
          "1050:   format     formats.Format",
          "1051:   expectData bool",
          "1052:  }",
          "1053:  tests := []struct {",
          "1054:   name          string",
          "1055:   ageIdentities age.ParsedIdentities",
          "1056:   maxFileSize   int64",
          "1057:   files         []file",
          "1058:   path          string",
          "1059:   format        formats.Format",
          "1060:   wantErr       error",
          "1061:  }{",
          "1062:   {",
          "1063:    name:          \"decrypt dotenv file\",",
          "1064:    ageIdentities: age.ParsedIdentities{id},",
          "1065:    files: []file{",
          "1066:     {name: \"app.env\", data: []byte(\"app=key\\n\"), encrypt: true, format: formats.Dotenv, expectData: true},",
          "1067:    },",
          "1068:    path:   \"app.env\",",
          "1069:    format: formats.Dotenv,",
          "1070:   },",
          "1071:   {",
          "1072:    name:          \"decrypt YAML file\",",
          "1073:    ageIdentities: age.ParsedIdentities{id},",
          "1074:    files: []file{",
          "1075:     {name: \"app.yaml\", data: []byte(\"app: key\\n\"), encrypt: true, format: formats.Yaml, expectData: true},",
          "1076:    },",
          "1077:    path:   \"app.yaml\",",
          "1078:    format: formats.Yaml,",
          "1079:   },",
          "1080:   {",
          "1081:    name:    \"irregular file\",",
          "1082:    files:   []file{},",
          "1083:    wantErr: fmt.Errorf(\"cannot decrypt irregular file as it has file mode type bits set\"),",
          "1084:   },",
          "1085:   {",
          "1086:    name:        \"file exceeds max size\",",
          "1087:    maxFileSize: 5,",
          "1088:    files: []file{",
          "1089:     {name: \"app.env\", data: []byte(\"app=key\\n\"), encrypt: true, format: formats.Dotenv, expectData: false},",
          "1090:    },",
          "1091:    path:    \"app.env\",",
          "1092:    wantErr: fmt.Errorf(\"cannot decrypt file with size (972 bytes) exceeding limit (5)\"),",
          "1093:   },",
          "1094:   {",
          "1095:    name: \"wrong file format\",",
          "1096:    files: []file{",
          "1097:     {name: \"app.ini\", data: []byte(\"[app]\\nkey = value\"), encrypt: true, format: formats.Ini, expectData: false},",
          "1098:    },",
          "1099:    path: \"app.ini\",",
          "1100:   },",
          "1101:   {",
          "1102:    name: \"does not follow symlink\",",
          "1103:    files: []file{",
          "1104:     {name: \"link\", symlink: \"../\"},",
          "1105:    },",
          "1106:    path:    \"link\",",
          "1107:    wantErr: fmt.Errorf(\"cannot decrypt irregular file as it has file mode type bits set\"),",
          "1108:   },",
          "1109:  }",
          "1110:  for _, tt := range tests {",
          "1111:   t.Run(tt.name, func(t *testing.T) {",
          "1112:    g := NewWithT(t)",
          "1114:    tmpDir := t.TempDir()",
          "1116:    d := &KustomizeDecryptor{",
          "1117:     root:          tmpDir,",
          "1118:     maxFileSize:   maxEncryptedFileSize,",
          "1119:     ageIdentities: ageIdentities,",
          "1120:    }",
          "1121:    if tt.maxFileSize != 0 {",
          "1122:     d.maxFileSize = tt.maxFileSize",
          "1123:    }",
          "1125:    for _, f := range tt.files {",
          "1126:     fPath := filepath.Join(tmpDir, f.name)",
          "1127:     if f.symlink != \"\" {",
          "1128:      g.Expect(os.Symlink(f.symlink, fPath)).To(Succeed())",
          "1129:      continue",
          "1130:     }",
          "1131:     data := f.data",
          "1132:     if f.encrypt {",
          "1133:      b, err := d.sopsEncryptWithFormat(sops.Metadata{",
          "1134:       KeyGroups: []sops.KeyGroup{",
          "1135:        {&sopsage.MasterKey{Recipient: id.Recipient().String()}},",
          "1136:       },",
          "1137:      }, data, f.format, f.format)",
          "1138:      g.Expect(err).ToNot(HaveOccurred())",
          "1139:      g.Expect(b).ToNot(Equal(f.data))",
          "1140:      data = b",
          "1141:     }",
          "1142:     g.Expect(os.MkdirAll(filepath.Dir(fPath), 0o700)).To(Succeed())",
          "1143:     g.Expect(os.WriteFile(fPath, data, 0o644)).To(Succeed())",
          "1144:    }",
          "1146:    path := filepath.Join(tmpDir, tt.path)",
          "1147:    err := d.sopsDecryptFile(path, tt.format, tt.format)",
          "1148:    if tt.wantErr != nil {",
          "1149:     g.Expect(err).To(HaveOccurred())",
          "1150:     g.Expect(err).To(BeAssignableToTypeOf(tt.wantErr))",
          "1151:     g.Expect(err.Error()).To(ContainSubstring(tt.wantErr.Error()))",
          "1152:    } else {",
          "1153:     g.Expect(err).ToNot(HaveOccurred())",
          "1154:    }",
          "1155:    for _, f := range tt.files {",
          "1156:     if f.symlink != \"\" {",
          "1157:      continue",
          "1158:     }",
          "1160:     b, err := os.ReadFile(filepath.Join(tmpDir, f.name))",
          "1161:     g.Expect(err).ToNot(HaveOccurred())",
          "1162:     g.Expect(bytes.Compare(f.data, b) == 0).To(Equal(f.expectData))",
          "1163:    }",
          "1164:   })",
          "1165:  }",
          "1166: }",
          "1168: func Test_secureLoadKustomizationFile(t *testing.T) {",
          "1169:  kusType := kustypes.TypeMeta{",
          "1170:   APIVersion: kustypes.KustomizationVersion,",
          "1171:   Kind:       kustypes.KustomizationKind,",
          "1172:  }",
          "1173:  type file struct {",
          "1174:   name    string",
          "1175:   symlink string",
          "1176:   data    []byte",
          "1177:  }",
          "1178:  tests := []struct {",
          "1179:   name       string",
          "1180:   rootSuffix string",
          "1181:   files      []file",
          "1182:   path       string",
          "1183:   want       *kustypes.Kustomization",
          "1184:   wantErr    error",
          "1185:  }{",
          "1186:   {",
          "1187:    name: \"loads default kustomization file\",",
          "1188:    files: []file{",
          "1189:     {name: konfig.DefaultKustomizationFileName(), data: []byte(\"resources:\\n- resource.yaml\")},",
          "1190:    },",
          "1191:    path: \"./\",",
          "1192:    want: &kustypes.Kustomization{",
          "1193:     TypeMeta:  kusType,",
          "1194:     Resources: []string{\"resource.yaml\"},",
          "1195:    },",
          "1196:   },",
          "1197:   {",
          "1198:    name: \"loads recognized kustomization file\",",
          "1199:    files: []file{",
          "1200:     {name: konfig.RecognizedKustomizationFileNames()[1], data: []byte(\"resources:\\n- resource.yaml\")},",
          "1201:    },",
          "1202:    path: \"./\",",
          "1203:    want: &kustypes.Kustomization{",
          "1204:     TypeMeta:  kusType,",
          "1205:     Resources: []string{\"resource.yaml\"},",
          "1206:    },",
          "1207:   },",
          "1208:   {",
          "1209:    name: \"error on ambitious file match\",",
          "1210:    files: []file{",
          "1211:     {name: konfig.RecognizedKustomizationFileNames()[0], data: []byte(\"resources:\\n- resource.yaml\")},",
          "1212:     {name: konfig.RecognizedKustomizationFileNames()[1], data: []byte(\"resources:\\n- resource.yaml\")},",
          "1213:    },",
          "1214:    path:    \"./\",",
          "1215:    wantErr: fmt.Errorf(\"found multiple kustomization files\"),",
          "1216:   },",
          "1217:   {",
          "1218:    name:    \"error on no file found\",",
          "1219:    files:   []file{},",
          "1220:    path:    \"./\",",
          "1221:    wantErr: fmt.Errorf(\"no kustomization file found\"),",
          "1222:   },",
          "1223:   {",
          "1224:    name:       \"error on symlink outside root\",",
          "1225:    rootSuffix: \"subdir\",",
          "1226:    files: []file{",
          "1227:     {name: konfig.DefaultKustomizationFileName(), data: []byte(\"resources:\\n- resource.yaml\")},",
          "1228:     {name: \"subdir/\" + konfig.DefaultKustomizationFileName(), symlink: \"../kustomization.yaml\"},",
          "1229:    },",
          "1230:    wantErr: fmt.Errorf(\"no kustomization file found\"),",
          "1231:   },",
          "1232:   {",
          "1233:    name: \"error on invalid file\",",
          "1234:    files: []file{",
          "1235:     {name: konfig.DefaultKustomizationFileName(), data: []byte(\"resources\")},",
          "1236:    },",
          "1237:    wantErr: fmt.Errorf(\"failed to unmarshal kustomization file\"),",
          "1238:   },",
          "1239:   {",
          "1240:    name:    \"error on absolute path\",",
          "1241:    path:    \"/absolute/\",",
          "1242:    wantErr: fmt.Errorf(\"path '/absolute/' must be relative\"),",
          "1243:   },",
          "1244:  }",
          "1245:  for _, tt := range tests {",
          "1246:   t.Run(tt.name, func(t *testing.T) {",
          "1247:    g := NewWithT(t)",
          "1249:    tmpDir := t.TempDir()",
          "1250:    for _, f := range tt.files {",
          "1251:     fPath := filepath.Join(tmpDir, f.name)",
          "1252:     if f.symlink != \"\" {",
          "1253:      g.Expect(os.Symlink(f.symlink, fPath))",
          "1254:      continue",
          "1255:     }",
          "1256:     g.Expect(os.MkdirAll(filepath.Dir(fPath), 0o700)).To(Succeed())",
          "1257:     g.Expect(os.WriteFile(fPath, f.data, 0o644)).To(Succeed())",
          "1258:    }",
          "1260:    root := filepath.Join(tmpDir, tt.rootSuffix)",
          "1261:    got, err := secureLoadKustomizationFile(root, tt.path)",
          "1262:    if wantErr := tt.wantErr; wantErr != nil {",
          "1263:     g.Expect(err).To(HaveOccurred())",
          "1264:     g.Expect(err.Error()).To(ContainSubstring(wantErr.Error()))",
          "1265:     g.Expect(got).To(BeNil())",
          "1266:     return",
          "1267:    }",
          "1269:    g.Expect(err).ToNot(HaveOccurred())",
          "1270:    g.Expect(got).To(Equal(tt.want))",
          "1271:   })",
          "1272:  }",
          "1273: }",
          "1275: func Test_recurseKustomizationFiles(t *testing.T) {",
          "1276:  type kusNode struct {",
          "1277:   path          string",
          "1278:   symlink       string",
          "1279:   resources     []string",
          "1280:   visitErr      error",
          "1281:   visited       int",
          "1282:   expectVisited int",
          "1283:   expectCached  bool",
          "1284:  }",
          "1285:  tests := []struct {",
          "1286:   name         string",
          "1287:   wordirSuffix string",
          "1288:   path         string",
          "1289:   nodes        []*kusNode",
          "1290:   wantErr      error",
          "1291:   wantErrStr   string",
          "1292:  }{",
          "1293:   {",
          "1294:    name:         \"recurse on resources\",",
          "1295:    wordirSuffix: \"foo\",",
          "1296:    path:         \"bar\",",
          "1297:    nodes: []*kusNode{",
          "1298:     {",
          "1299:      path:          \"foo/bar/kustomization.yaml\",",
          "1300:      resources:     []string{\"../baz\"},",
          "1301:      expectVisited: 1,",
          "1302:      expectCached:  true,",
          "1303:     },",
          "1304:     {",
          "1305:      path:          \"foo/baz/kustomization.yaml\",",
          "1306:      resources:     []string{\"<tmpdir>/foo/bar/baz\"},",
          "1307:      expectVisited: 1,",
          "1308:      expectCached:  true,",
          "1309:     },",
          "1310:     {",
          "1311:      path:          \"foo/bar/baz/kustomization.yaml\",",
          "1312:      resources:     []string{},",
          "1313:      expectVisited: 1,",
          "1314:      expectCached:  true,",
          "1315:     },",
          "1316:    },",
          "1317:   },",
          "1318:   {",
          "1319:    name:         \"recursive loop\",",
          "1320:    wordirSuffix: \"foo\",",
          "1321:    path:         \"bar\",",
          "1322:    nodes: []*kusNode{",
          "1323:     {",
          "1324:      path:          \"foo/bar/kustomization.yaml\",",
          "1325:      resources:     []string{\"../baz\"},",
          "1326:      expectVisited: 1,",
          "1327:      expectCached:  true,",
          "1328:     },",
          "1329:     {",
          "1330:      path:          \"foo/baz/kustomization.yaml\",",
          "1331:      resources:     []string{\"../foobar\"},",
          "1332:      expectVisited: 1,",
          "1333:      expectCached:  true,",
          "1334:     },",
          "1335:     {",
          "1336:      path:          \"foo/foobar/kustomization.yaml\",",
          "1337:      resources:     []string{\"../bar\"},",
          "1338:      expectVisited: 1,",
          "1339:      expectCached:  true,",
          "1340:     },",
          "1341:    },",
          "1342:   },",
          "1343:   {",
          "1344:    name: \"absolute symlink\",",
          "1345:    path: \"bar\",",
          "1346:    nodes: []*kusNode{",
          "1347:     {",
          "1348:      path:          \"bar/baz/kustomization.yaml\",",
          "1349:      resources:     []string{\"../bar/absolute\"},",
          "1350:      expectVisited: 1,",
          "1351:      expectCached:  true,",
          "1352:     },",
          "1353:     {",
          "1354:      path:    \"bar/absolute\",",
          "1355:      symlink: \"<tmpdir>/bar/foo/\",",
          "1356:     },",
          "1357:     {",
          "1358:      path:          \"bar/foo/kustomization.yaml\",",
          "1359:      expectVisited: 1,",
          "1360:      expectCached:  true,",
          "1361:     },",
          "1362:    },",
          "1363:   },",
          "1364:   {",
          "1365:    name: \"relative symlink\",",
          "1366:    path: \"bar\",",
          "1367:    nodes: []*kusNode{",
          "1368:     {",
          "1369:      path:          \"bar/baz/kustomization.yaml\",",
          "1370:      resources:     []string{\"../bar/relative\"},",
          "1371:      expectVisited: 1,",
          "1372:      expectCached:  true,",
          "1373:     },",
          "1374:     {",
          "1375:      path:    \"bar/relative\",",
          "1376:      symlink: \"../foo/\",",
          "1377:     },",
          "1378:     {",
          "1379:      path:          \"bar/foo/kustomization.yaml\",",
          "1380:      expectVisited: 1,",
          "1381:      expectCached:  true,",
          "1382:     },",
          "1383:    },",
          "1384:   },",
          "1385:   {",
          "1386:    name: \"recognized kustomization names\",",
          "1387:    path: \"./\",",
          "1388:    nodes: []*kusNode{",
          "1389:     {",
          "1390:      path:          konfig.RecognizedKustomizationFileNames()[1],",
          "1391:      resources:     []string{\"bar\"},",
          "1392:      expectVisited: 1,",
          "1393:      expectCached:  true,",
          "1394:     },",
          "1395:     {",
          "1396:      path:          filepath.Join(\"bar\", konfig.RecognizedKustomizationFileNames()[0]),",
          "1397:      resources:     []string{\"../baz\"},",
          "1398:      expectVisited: 1,",
          "1399:      expectCached:  true,",
          "1400:     },",
          "1401:     {",
          "1402:      path:          filepath.Join(\"baz\", konfig.RecognizedKustomizationFileNames()[2]),",
          "1403:      expectVisited: 1,",
          "1404:      expectCached:  true,",
          "1405:     },",
          "1406:    },",
          "1407:   },",
          "1408:   {",
          "1409:    name:       \"path does not exist\",",
          "1410:    path:       \"./invalid\",",
          "1411:    wantErr:    &errRecurseIgnore{Err: fs.ErrNotExist},",
          "1412:    wantErrStr: \"lstat invalid\",",
          "1413:   },",
          "1414:   {",
          "1415:    name: \"path is not a directory\",",
          "1416:    path: \"./file.txt\",",
          "1417:    nodes: []*kusNode{",
          "1418:     {",
          "1419:      path: \"file.txt\",",
          "1420:     },",
          "1421:    },",
          "1422:    wantErr:    &errRecurseIgnore{Err: fmt.Errorf(\"not a directory\")},",
          "1423:    wantErrStr: \"not a directory\",",
          "1424:   },",
          "1425:   {",
          "1426:    name: \"recurse error is returned\",",
          "1427:    path: \"/foo\",",
          "1428:    nodes: []*kusNode{",
          "1429:     {",
          "1430:      path:          \"foo/kustomization.yaml\",",
          "1431:      resources:     []string{\"../baz\"},",
          "1432:      expectVisited: 1,",
          "1433:      expectCached:  true,",
          "1434:     },",
          "1435:     {",
          "1436:      path:          \"baz/wrongfile.yaml\",",
          "1437:      expectVisited: 0,",
          "1438:      expectCached:  false,",
          "1439:     },",
          "1440:    },",
          "1441:    wantErr: fmt.Errorf(\"no kustomization file found\"),",
          "1442:   },",
          "1443:   {",
          "1444:    name: \"recurse ignores errRecurseIgnore\",",
          "1445:    path: \"/foo\",",
          "1446:    nodes: []*kusNode{",
          "1447:     {",
          "1448:      path:          \"foo/kustomization.yaml\",",
          "1449:      resources:     []string{\"../baz\"},",
          "1450:      expectVisited: 1,",
          "1451:      expectCached:  true,",
          "1452:     },",
          "1453:     {",
          "1454:      path:          \"baz\",",
          "1455:      expectVisited: 0,",
          "1456:      expectCached:  false,",
          "1457:     },",
          "1458:    },",
          "1459:   },",
          "1460:   {",
          "1461:    name: \"remote build references are ignored\",",
          "1462:    path: \"/foo\",",
          "1463:    nodes: []*kusNode{",
          "1464:     {",
          "1465:      path: \"foo/kustomization.yaml\",",
          "1466:      resources: []string{",
          "1467:       \"../baz\",",
          "1468:       \"https://github.com/kubernetes-sigs/kustomize//examples/multibases/dev/?ref=v1.0.6\",",
          "1469:      },",
          "1470:      expectVisited: 1,",
          "1471:      expectCached:  true,",
          "1472:     },",
          "1473:     {",
          "1474:      path: \"baz/kustomization.yaml\",",
          "1475:      resources: []string{",
          "1476:       \"github.com/Liujingfang1/mysql?ref=test\",",
          "1477:      },",
          "1478:      expectVisited: 1,",
          "1479:      expectCached:  true,",
          "1480:     },",
          "1481:    },",
          "1482:   },",
          "1483:   {",
          "1484:    name: \"visit error is returned\",",
          "1485:    path: \"/\",",
          "1486:    nodes: []*kusNode{",
          "1487:     {",
          "1488:      path: \"kustomization.yaml\",",
          "1489:      resources: []string{",
          "1490:       \"baz\",",
          "1491:      },",
          "1492:      expectVisited: 1,",
          "1493:      expectCached:  true,",
          "1494:     },",
          "1495:     {",
          "1496:      path:          \"baz/kustomization.yaml\",",
          "1497:      visitErr:      fmt.Errorf(\"visit error\"),",
          "1498:      expectVisited: 1,",
          "1499:      expectCached:  true,",
          "1500:     },",
          "1501:    },",
          "1502:    wantErr:    fmt.Errorf(\"visit error\"),",
          "1503:    wantErrStr: \"visit error\",",
          "1504:   },",
          "1505:  }",
          "1506:  for _, tt := range tests {",
          "1507:   t.Run(tt.name, func(t *testing.T) {",
          "1508:    g := NewWithT(t)",
          "1510:    tmpDir := t.TempDir()",
          "1512:    for _, n := range tt.nodes {",
          "1513:     path := filepath.Join(tmpDir, n.path)",
          "1514:     if n.symlink != \"\" {",
          "1515:      g.Expect(os.Symlink(strings.Replace(n.symlink, \"<tmpdir>\", tmpDir, 1), path)).To(Succeed())",
          "1516:      return",
          "1517:     }",
          "1518:     kus := kustypes.Kustomization{",
          "1519:      TypeMeta: kustypes.TypeMeta{",
          "1520:       APIVersion: kustypes.KustomizationVersion,",
          "1521:       Kind:       kustypes.KustomizationKind,",
          "1522:      },",
          "1523:     }",
          "1524:     for _, res := range n.resources {",
          "1525:      res = strings.Replace(res, \"<tmpdir>\", tmpDir, 1)",
          "1526:      kus.Resources = append(kus.Resources, res)",
          "1527:     }",
          "1528:     b, err := yaml.Marshal(kus)",
          "1529:     g.Expect(err).ToNot(HaveOccurred())",
          "1530:     g.Expect(os.MkdirAll(filepath.Dir(path), 0o700)).To(Succeed())",
          "1531:     g.Expect(os.WriteFile(path, b, 0o644))",
          "1532:    }",
          "1534:    visit := func(root, path string, kus *kustypes.Kustomization) error {",
          "1535:     if filepath.IsAbs(path) {",
          "1536:      path = stripRoot(root, path)",
          "1537:     }",
          "1538:     for _, n := range tt.nodes {",
          "1539:      if dir := filepath.Dir(n.path); filepath.Join(tt.wordirSuffix, path) != dir {",
          "1540:       continue",
          "1541:      }",
          "1542:      n.visited++",
          "1543:      if n.visitErr != nil {",
          "1544:       return n.visitErr",
          "1545:      }",
          "1546:     }",
          "1547:     return nil",
          "1548:    }",
          "1550:    visited := make(map[string]struct{}, 0)",
          "1551:    err := recurseKustomizationFiles(filepath.Join(tmpDir, tt.wordirSuffix), tt.path, visit, visited)",
          "1552:    if tt.wantErr != nil {",
          "1553:     g.Expect(err).To(HaveOccurred())",
          "1554:     g.Expect(err).To(BeAssignableToTypeOf(tt.wantErr))",
          "1555:     if tt.wantErrStr != \"\" {",
          "1556:      g.Expect(err.Error()).To(ContainSubstring(tt.wantErrStr))",
          "1557:     }",
          "1558:     return",
          "1559:    }",
          "1561:    g.Expect(err).ToNot(HaveOccurred())",
          "1562:    for _, n := range tt.nodes {",
          "1563:     g.Expect(n.visited).To(Equal(n.expectVisited), n.path)",
          "1565:     haveCache := HaveKey(filepath.Dir(filepath.Join(tmpDir, n.path)))",
          "1566:     if n.expectCached {",
          "1567:      g.Expect(visited).To(haveCache)",
          "1568:     } else {",
          "1569:      g.Expect(visited).ToNot(haveCache)",
          "1570:     }",
          "1571:    }",
          "1572:   })",
          "1573:  }",
          "1574: }",
          "1576: func Test_isSOPSEncryptedResource(t *testing.T) {",
          "1577:  g := NewWithT(t)",
          "1579:  resourceFactory := provider.NewDefaultDepProvider().GetResourceFactory()",
          "1580:  encrypted := resourceFactory.FromMap(map[string]interface{}{",
          "1581:   \"sops\": map[string]string{",
          "1582:    \"mac\": \"some mac value\",",
          "1583:   },",
          "1584:  })",
          "1585:  empty := resourceFactory.FromMap(map[string]interface{}{})",
          "1587:  g.Expect(isSOPSEncryptedResource(encrypted)).To(BeTrue())",
          "1588:  g.Expect(isSOPSEncryptedResource(empty)).To(BeFalse())",
          "1589: }",
          "1591: func Test_secureAbsPath(t *testing.T) {",
          "1592:  tests := []struct {",
          "1593:   name    string",
          "1594:   root    string",
          "1595:   path    string",
          "1596:   wantAbs string",
          "1597:   wantRel string",
          "1598:   wantErr bool",
          "1599:  }{",
          "1600:   {",
          "1601:    name:    \"absolute to root\",",
          "1602:    root:    \"/wordir/\",",
          "1603:    path:    \"/wordir/foo/\",",
          "1604:    wantAbs: \"/wordir/foo\",",
          "1605:    wantRel: \"foo\",",
          "1606:   },",
          "1607:   {",
          "1608:    name:    \"relative to root\",",
          "1609:    root:    \"/wordir\",",
          "1610:    path:    \"./foo\",",
          "1611:    wantAbs: \"/wordir/foo\",",
          "1612:    wantRel: \"foo\",",
          "1613:   },",
          "1614:   {",
          "1615:    name:    \"illegal traverse\",",
          "1616:    root:    \"/wordir/foo\",",
          "1617:    path:    \"../../bar\",",
          "1618:    wantAbs: \"/wordir/foo/bar\",",
          "1619:    wantRel: \"bar\",",
          "1620:   },",
          "1621:  }",
          "1622:  for _, tt := range tests {",
          "1623:   t.Run(tt.name, func(t *testing.T) {",
          "1624:    g := NewWithT(t)",
          "1626:    gotAbs, gotRel, err := securePaths(tt.root, tt.path)",
          "1627:    if tt.wantErr {",
          "1628:     g.Expect(err).To(HaveOccurred())",
          "1629:     g.Expect(gotAbs).To(BeEmpty())",
          "1630:     g.Expect(gotRel).To(BeEmpty())",
          "1631:     return",
          "1632:    }",
          "1633:    g.Expect(err).ToNot(HaveOccurred())",
          "1634:    g.Expect(gotAbs).To(Equal(tt.wantAbs))",
          "1635:    g.Expect(gotRel).To(Equal(tt.wantRel))",
          "1636:   })",
          "1637:  }",
          "1638: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ff7848a2e5f84d4201eea211dc9bb0425050e747",
      "candidate_info": {
        "commit_hash": "ff7848a2e5f84d4201eea211dc9bb0425050e747",
        "repo": "fluxcd/kustomize-controller",
        "commit_url": "https://github.com/fluxcd/kustomize-controller/commit/ff7848a2e5f84d4201eea211dc9bb0425050e747",
        "files": [
          "Makefile",
          "api/go.sum",
          "go.sum"
        ],
        "message": "Run tidy compat before Go test\n\nSigned-off-by: Stefan Prodan <stefan.prodan@gmail.com>",
        "before_after_code_files": [
          "api/go.sum||api/go.sum",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.sum||go.sum"
          ],
          "candidate": [
            "go.sum||go.sum"
          ]
        }
      },
      "candidate_diff": {
        "api/go.sum||api/go.sum": [
          "File: api/go.sum -> api/go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "117: github.com/envoyproxy/go-control-plane v0.9.9-0.20210217033140-668b12f5399d/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=",
          "118: github.com/envoyproxy/go-control-plane v0.9.9-0.20210512163311-63b5d3c536b0/go.mod h1:hliV/p42l8fGbc6Y9bQ70uLwIvmJyVE5k4iMKlh8wCQ=",
          "119: github.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=",
          "121: github.com/evanphx/json-patch v4.12.0+incompatible/go.mod h1:50XU6AFN0ol/bzJsmQLiYLvXMP4fmwYFNcr97nuDLSk=",
          "122: github.com/fatih/color v1.7.0/go.mod h1:Zm6kSWBoL9eyXnKyktHP6abPY2pDugNf5KwzbycvMj4=",
          "123: github.com/felixge/httpsnoop v1.0.1/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=",
          "",
          "[Removed Lines]",
          "120: github.com/evanphx/json-patch v0.5.2/go.mod h1:ZWS5hhDbVDyob71nXKNL0+PWn6ToqBHMikGIFbs31qQ=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "130: github.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=",
          "131: github.com/fsnotify/fsnotify v1.4.9/go.mod h1:znqG4EE+3YCdAaPaxE2ZRY/06pZUdp0tY4IgpuI1SZQ=",
          "132: github.com/fsnotify/fsnotify v1.5.1 h1:mZcQUHVQUQWoPXXtuf9yuEXKudkV2sx1E06UadKWpgI=",
          "134: github.com/getkin/kin-openapi v0.76.0/go.mod h1:660oXbgy5JFMKreazJaQTw7o+X00qeSyhcnluiMv+Xg=",
          "135: github.com/getsentry/raven-go v0.2.0/go.mod h1:KungGk8q33+aIAZUIVWZDr2OfAEBsO49PX4NzFV5kcQ=",
          "136: github.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=",
          "",
          "[Removed Lines]",
          "133: github.com/fsnotify/fsnotify v1.5.1/go.mod h1:T3375wBYaZdLLcVNkcVbzGHY7f1l/uK5T5Ai1i3InKU=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "211: github.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=",
          "212: github.com/google/go-cmp v0.5.4/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=",
          "213: github.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=",
          "215: github.com/google/go-cmp v0.5.7 h1:81/ik6ipDQS2aGcBfIN5dHDB36BwrStyeAQquSYCV4o=",
          "216: github.com/google/go-cmp v0.5.7/go.mod h1:n+brtR0CgQNWTVd5ZUFpTBC8YFBDLK/h/bpaJ8/DtOE=",
          "217: github.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=",
          "",
          "[Removed Lines]",
          "214: github.com/google/go-cmp v0.5.6/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "272: github.com/ianlancetaylor/demangle v0.0.0-20181102032728-5e5cf60278f6/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=",
          "273: github.com/ianlancetaylor/demangle v0.0.0-20200824232613-28f6c0f3b639/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=",
          "274: github.com/imdario/mergo v0.3.5/go.mod h1:2EnlNZ0deacrJVfApfmtdGgDfMuh/nq6Ok1EcJh5FfA=",
          "276: github.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=",
          "278: github.com/jonboulle/clockwork v0.1.0/go.mod h1:Ii8DK3G1RaLaWxj9trq07+26W01tbo22gdxWY5EU2bo=",
          "279: github.com/jonboulle/clockwork v0.2.2/go.mod h1:Pkfl5aHPm1nk2H9h0bjmnJD/BcgbGXUBGnn1kMkgxc8=",
          "280: github.com/josharian/intern v1.0.0/go.mod h1:5DoeVV0s6jJacbCEi61lwdGj/aVlrQvzHFFd8Hwg//Y=",
          "",
          "[Removed Lines]",
          "275: github.com/imdario/mergo v0.3.12/go.mod h1:jmQim1M+e3UYxmgPu/WyfjB3N3VflVyUjjjwH0dnCYA=",
          "277: github.com/jessevdk/go-flags v1.4.0/go.mod h1:4FA24M0QyGHXBuZZK/XkWh8h0e1EYbRYJSGM75WSRxI=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "349: github.com/onsi/ginkgo v1.14.0/go.mod h1:iSB4RoI2tjJc9BBv4NKIKWKya62Rps+oPG/Lv9klQyY=",
          "350: github.com/onsi/ginkgo v1.16.4/go.mod h1:dX+/inL/fNMqNlz0e9LfyB9TswhZpCVdJM/Z6Vvnwo0=",
          "351: github.com/onsi/ginkgo v1.16.5 h1:8xi0RTUf59SOSfEtZMvwTvXYMzG4gV23XVHOZiXNtnE=",
          "353: github.com/onsi/ginkgo/v2 v2.0.0/go.mod h1:vw5CSIxN1JObi/U8gcbwft7ZxR2dgaR70JSE3/PpL4c=",
          "354: github.com/onsi/gomega v0.0.0-20170829124025-dcabb60a477c/go.mod h1:C1qb7wdrVGGVU+Z6iS04AVkA3Q65CEZX59MT0QO5uiA=",
          "355: github.com/onsi/gomega v1.7.1/go.mod h1:XdKZgCCFLUoM/7CFJVPcG8C1xQ1AJ0vpAezJrB7JYyY=",
          "",
          "[Removed Lines]",
          "352: github.com/onsi/ginkgo v1.16.5/go.mod h1:+E8gABHa3K6zRBolWtd+ROzc/U5bkGt0FwiG042wbpU=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "474: go.uber.org/atomic v1.4.0/go.mod h1:gD2HeocX3+yG+ygLZcrzQJaqmWj9AIm7n08wl/qW/PE=",
          "475: go.uber.org/atomic v1.7.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=",
          "476: go.uber.org/goleak v1.1.10/go.mod h1:8a7PlsEVH3e/a/GLqe5IIrQx6GzcnRmZEufDUTk4A7A=",
          "479: go.uber.org/multierr v1.1.0/go.mod h1:wR5kodmAFQ0UK8QlbwjlSNy0Z68gJhDJUG5sjR94q/0=",
          "480: go.uber.org/multierr v1.6.0/go.mod h1:cdWPpRnG4AhwMwsgIHip0KRBQjJy5kYEpYjJxpXp9iU=",
          "481: go.uber.org/zap v1.10.0/go.mod h1:vwi/ZaCAaUcBkycHslxD9B2zi4UTXhF60s6SWpuDF0Q=",
          "482: go.uber.org/zap v1.17.0/go.mod h1:MXVU+bhUf/A7Xi2HNOnopQOrmycQ5Ih87HtOu4q5SSo=",
          "483: go.uber.org/zap v1.19.0/go.mod h1:xg/QME4nWcxGxrpdeYfq7UvYrLh66cuVKdrbD1XF/NI=",
          "485: golang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=",
          "486: golang.org/x/crypto v0.0.0-20181029021203-45a5f77698d3/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=",
          "487: golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=",
          "",
          "[Removed Lines]",
          "477: go.uber.org/goleak v1.1.11-0.20210813005559-691160354723/go.mod h1:cwTWslyiVhfpKIDGSZEM2HlOvcqm+tG4zioyIeLoqMQ=",
          "478: go.uber.org/goleak v1.1.12/go.mod h1:cwTWslyiVhfpKIDGSZEM2HlOvcqm+tG4zioyIeLoqMQ=",
          "484: go.uber.org/zap v1.19.1/go.mod h1:j3DNczoxDZroyBnOT1L/Q79cfUMGZxlv/9dzN7SM1rI=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "575: golang.org/x/net v0.0.0-20210805182204-aaa1db679c0d/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "576: golang.org/x/net v0.0.0-20210825183410-e898025ed96a/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "577: golang.org/x/net v0.0.0-20211209124913-491a49abca63/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "579: golang.org/x/net v0.0.0-20211216030914-fe4d6282115f h1:hEYJvxw1lSnWIl8X9ofsYMklzaDs90JI2az5YMd4fPM=",
          "580: golang.org/x/net v0.0.0-20211216030914-fe4d6282115f/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "581: golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=",
          "",
          "[Removed Lines]",
          "578: golang.org/x/net v0.0.0-20211215060638-4ddde0e984e9/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "664: golang.org/x/sys v0.0.0-20210603081109-ebe580a85c40/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "665: golang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "666: golang.org/x/sys v0.0.0-20210616094352-59db8d763f22/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "668: golang.org/x/sys v0.0.0-20210809222454-d867a43fc93e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "669: golang.org/x/sys v0.0.0-20210831042530-f4d43177bf5e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "671: golang.org/x/sys v0.0.0-20211216021012-1d35b9e2eb4e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "672: golang.org/x/sys v0.0.0-20220114195835-da31bd327af9 h1:XfKQ4OlFl8okEOr5UvAqFRVj8pY/4yfcXrddB8qAbU0=",
          "673: golang.org/x/sys v0.0.0-20220114195835-da31bd327af9/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "",
          "[Removed Lines]",
          "667: golang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "670: golang.org/x/sys v0.0.0-20211029165221-6e7872819dc8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "752: golang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "753: golang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1 h1:go1bK/D/BFZV2I8cIQd1NKEZ+0owSTG1fDTci4IqFcE=",
          "754: golang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "756: google.golang.org/api v0.4.0/go.mod h1:8k5glujaEP+g9n7WNsDg8QP6cUVNI86fCNMcbazEtwE=",
          "757: google.golang.org/api v0.7.0/go.mod h1:WtwebWUNSVBH/HAw79HIFXZNqEvBhG+Ra+ax0hx3E3M=",
          "758: google.golang.org/api v0.8.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=",
          "",
          "[Removed Lines]",
          "755: gomodules.xyz/jsonpatch/v2 v2.2.0/go.mod h1:WXp+iVDkoLQqPudfQ9GBlwB2eZ5DKOnjQZCYdOS8GPY=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "903: honnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=",
          "904: honnef.co/go/tools v0.0.1-2020.1.3/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=",
          "905: honnef.co/go/tools v0.0.1-2020.1.4/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=",
          "907: k8s.io/api v0.23.4 h1:85gnfXQOWbJa1SiWGpE9EEtHs0UVvDyIsSMpEtl2D4E=",
          "908: k8s.io/api v0.23.4/go.mod h1:i77F4JfyNNrhOjZF7OwwNJS5Y1S9dpwvb9iYRYRczfI=",
          "910: k8s.io/apiextensions-apiserver v0.23.4 h1:AFDUEu/yEf0YnuZhqhIFhPLPhhcQQVuR1u3WCh0rveU=",
          "911: k8s.io/apiextensions-apiserver v0.23.4/go.mod h1:TWYAKymJx7nLMxWCgWm2RYGXHrGlVZnxIlGnvtfYu+g=",
          "913: k8s.io/apimachinery v0.23.4 h1:fhnuMd/xUL3Cjfl64j5ULKZ1/J9n8NuQEgNL+WXWfdM=",
          "914: k8s.io/apimachinery v0.23.4/go.mod h1:BEuFMMBaIbcOqVIJqNZJXGFTP4W6AycEpb5+m/97hrM=",
          "916: k8s.io/apiserver v0.23.4/go.mod h1:A6l/ZcNtxGfPSqbFDoxxOjEjSKBaQmE+UTveOmMkpNc=",
          "918: k8s.io/client-go v0.23.4/go.mod h1:PKnIL4pqLuvYUK1WU7RLTMYKPiIh7MYShLshtRY9cj0=",
          "920: k8s.io/code-generator v0.23.4/go.mod h1:S0Q1JVA+kSzTI1oUvbKAxZY/DYbA/ZUb4Uknog12ETk=",
          "922: k8s.io/component-base v0.23.4/go.mod h1:8o3Gg8i2vnUXGPOwciiYlkSaZT+p+7gA9Scoz8y4W4E=",
          "923: k8s.io/gengo v0.0.0-20210813121822-485abfe95c7c/go.mod h1:FiNAH4ZV3gBg2Kwh89tzAEV2be7d5xI0vBa/VySYy3E=",
          "924: k8s.io/klog/v2 v2.0.0/go.mod h1:PBfzABfn139FHAV07az/IF9Wp1bkk3vpT2XSJ76fSDE=",
          "",
          "[Removed Lines]",
          "906: k8s.io/api v0.23.0/go.mod h1:8wmDdLBHBNxtOIytwLstXt5E9PddnZb0GaMcqsvDBpg=",
          "909: k8s.io/apiextensions-apiserver v0.23.0/go.mod h1:xIFAEEDlAZgpVBl/1VSjGDmLoXAWRG40+GsWhKhAxY4=",
          "912: k8s.io/apimachinery v0.23.0/go.mod h1:fFCTTBKvKcwTPFzjlcxp91uPFZr+JA0FubU4fLzzFYc=",
          "915: k8s.io/apiserver v0.23.0/go.mod h1:Cec35u/9zAepDPPFyT+UMrgqOCjgJ5qtfVJDxjZYmt4=",
          "917: k8s.io/client-go v0.23.0/go.mod h1:hrDnpnK1mSr65lHHcUuIZIXDgEbzc7/683c6hyG4jTA=",
          "919: k8s.io/code-generator v0.23.0/go.mod h1:vQvOhDXhuzqiVfM/YHp+dmg10WDZCchJVObc9MvowsE=",
          "921: k8s.io/component-base v0.23.0/go.mod h1:DHH5uiFvLC1edCpvcTDV++NKULdYYU6pR9Tt3HIKMKI=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "928: k8s.io/klog/v2 v2.50.0/go.mod h1:N3kgBtsFxMb4nQ0eBDgbHEt/dtxBuTkSFQ+7K5OUoz4=",
          "929: k8s.io/kube-openapi v0.0.0-20211115234752-e816edb12b65/go.mod h1:sX9MT8g7NVZM5lVL/j8QyCCJe8YSMW30QvGZWaCIDIk=",
          "930: k8s.io/utils v0.0.0-20210802155522-efc7438f0176/go.mod h1:jPW/WVKK9YHAvNhRxK0md/EJ228hCsBRufyofKtW8HA=",
          "932: k8s.io/utils v0.0.0-20211116205334-6203023598ed/go.mod h1:jPW/WVKK9YHAvNhRxK0md/EJ228hCsBRufyofKtW8HA=",
          "934: k8s.io/utils v0.0.0-20220210201930-3a6ce19ff2f9 h1:HNSDgDCrr/6Ly3WEGKZftiE7IY19Vz2GdbOCyI4qqhc=",
          "935: k8s.io/utils v0.0.0-20220210201930-3a6ce19ff2f9/go.mod h1:jPW/WVKK9YHAvNhRxK0md/EJ228hCsBRufyofKtW8HA=",
          "936: rsc.io/binaryregexp v0.2.0/go.mod h1:qTv7/COck+e2FymRvadv62gMdZztPaShugOCi3I+8D8=",
          "937: rsc.io/quote/v3 v3.1.0/go.mod h1:yEA65RcK8LyAZtP9Kv3t0HmxON59tX3rD+tICJqUlj0=",
          "938: rsc.io/sampler v1.3.0/go.mod h1:T1hPZKmBbMNahiBKFy5HrXp6adAjACjK9JXDnKaTXpA=",
          "940: sigs.k8s.io/apiserver-network-proxy/konnectivity-client v0.0.27/go.mod h1:tq2nT0Kx7W+/f2JVE+zxYtUhdjuELJkVpNz+x/QN5R4=",
          "941: sigs.k8s.io/controller-runtime v0.11.1 h1:7YIHT2QnHJArj/dk9aUkYhfqfK5cIxPOX5gPECfdZLU=",
          "942: sigs.k8s.io/controller-runtime v0.11.1/go.mod h1:KKwLiTooNGu+JmLZGn9Sl3Gjmfj66eMbCQznLP5zcqA=",
          "",
          "[Removed Lines]",
          "931: k8s.io/utils v0.0.0-20210930125809-cb0fa318a74b/go.mod h1:jPW/WVKK9YHAvNhRxK0md/EJ228hCsBRufyofKtW8HA=",
          "933: k8s.io/utils v0.0.0-20211208161948-7d6a63dca704/go.mod h1:jPW/WVKK9YHAvNhRxK0md/EJ228hCsBRufyofKtW8HA=",
          "939: sigs.k8s.io/apiserver-network-proxy/konnectivity-client v0.0.25/go.mod h1:Mlj9PNLmG9bZ6BHFwFKDo5afkpWyUISkb9Me0GnK66I=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "944: sigs.k8s.io/json v0.0.0-20211208200746-9f7c6b3444d2 h1:kDi4JBNAsJWfz1aEXhO8Jg87JJaPNLh5tIzYHgStQ9Y=",
          "945: sigs.k8s.io/json v0.0.0-20211208200746-9f7c6b3444d2/go.mod h1:B+TnT182UBxE84DiCz4CVE26eOSDAeYCpfDnC2kdKMY=",
          "946: sigs.k8s.io/structured-merge-diff/v4 v4.0.2/go.mod h1:bJZC9H9iH24zzfZ/41RGcq60oK1F7G282QMXDPYydCw=",
          "949: sigs.k8s.io/structured-merge-diff/v4 v4.2.1 h1:bKCqE9GvQ5tiVHn5rfn1r+yao3aLQEaLzkkmAkf+A6Y=",
          "950: sigs.k8s.io/structured-merge-diff/v4 v4.2.1/go.mod h1:j/nl6xW8vLS49O8YvXW1ocPhZawJtm+Yrr7PPRQ0Vg4=",
          "951: sigs.k8s.io/yaml v1.2.0/go.mod h1:yfXDCHCao9+ENCvLSE62v9VSji2MKu5jeNfTrofGhJc=",
          "",
          "[Removed Lines]",
          "947: sigs.k8s.io/structured-merge-diff/v4 v4.1.2/go.mod h1:j/nl6xW8vLS49O8YvXW1ocPhZawJtm+Yrr7PPRQ0Vg4=",
          "948: sigs.k8s.io/structured-merge-diff/v4 v4.2.0/go.mod h1:j/nl6xW8vLS49O8YvXW1ocPhZawJtm+Yrr7PPRQ0Vg4=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=",
          "2: cloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=",
          "3: cloud.google.com/go v0.38.0/go.mod h1:990N+gfupTy94rShfmMCWGDn0LpTmnzTp2qbd1dvSRU=",
          "5: cloud.google.com/go v0.44.1/go.mod h1:iSa0KzasP4Uvy3f1mN/7PiObzGgflwredwwASm/v6AU=",
          "6: cloud.google.com/go v0.44.2/go.mod h1:60680Gw3Yr4ikxnPRS/oxxkBccT6SA1yMk63TGekxKY=",
          "7: cloud.google.com/go v0.45.1/go.mod h1:RpBamKRgapWJb87xiFSdk4g1CME7QZg3uwTez+TSTjc=",
          "",
          "[Removed Lines]",
          "4: cloud.google.com/go v0.43.0/go.mod h1:BOSR3VbTLkk6FDC/TcffxP4NF/FFBGA5ku+jvKOP7pg=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50: cloud.google.com/go/storage v1.10.0/go.mod h1:FLPqc6j+Ki4BU591ie1oL6qBQGu2Bl/tZ9ullr3+Kg0=",
          "51: contrib.go.opencensus.io/exporter/ocagent v0.4.12/go.mod h1:450APlNTSR6FrvC3CTRqYosuDstRB9un7SOx2k/9ckA=",
          "52: dmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=",
          "54: filippo.io/age v1.0.0 h1:V6q14n0mqYU3qKFkZ6oOaF9oXneOviS3ubXsSVBRSzc=",
          "55: filippo.io/age v1.0.0/go.mod h1:PaX+Si/Sd5G8LgfCwldsSba3H1DDQZhIhFGkhbHaBq8=",
          "58: github.com/Azure/azure-sdk-for-go v31.2.0+incompatible h1:kZFnTLmdQYNGfakatSivKHUfUnDZhqNdchHD4oIhp5k=",
          "59: github.com/Azure/azure-sdk-for-go v31.2.0+incompatible/go.mod h1:9XXNKU+eRnpl9moKnB4QOLf1HestfXbmab5FXxiDBjc=",
          "60: github.com/Azure/azure-sdk-for-go/sdk/azcore v0.20.0/go.mod h1:ZPW/Z0kLCTdDZaDbYTetxc9Cxl/2lNqxYHYNOF2bti0=",
          "",
          "[Removed Lines]",
          "53: filippo.io/age v1.0.0-beta7/go.mod h1:chAuTrTb0FTTmKtvs6fQTGhYTvH9AigjN1uEUsvLdZ0=",
          "56: filippo.io/edwards25519 v1.0.0-alpha.2/go.mod h1:X+pm78QAUPtFLi1z9PYIlS/bdDnvbCOGKtZ+ACWEf7o=",
          "57: filippo.io/edwards25519 v1.0.0-rc.1/go.mod h1:N1IkdkCkiLB6tki+MYJoSx2JTY9NUlxZE7eHn5EwJns=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "72: github.com/Azure/azure-sdk-for-go/sdk/keyvault/azkeys v0.4.0/go.mod h1:LxYa4KH5ni+OMT8DJBAP6FVYg3YFW3ACTJluqpnTDBg=",
          "73: github.com/Azure/azure-sdk-for-go/sdk/keyvault/internal v0.2.1 h1:lirjIOHv5RrmDbZXw9lUz/fY68uU05qR4uIef58WMvQ=",
          "74: github.com/Azure/azure-sdk-for-go/sdk/keyvault/internal v0.2.1/go.mod h1:j1J9XXIo/eXD7YSrr73sYZTEY/AQ0+/Q6Aa96z1e2j8=",
          "76: github.com/Azure/go-ansiterm v0.0.0-20210608223527-2377c96fe795/go.mod h1:LmzpDX56iTiv29bbRTIsUNlaFfuhWRQBWjQdVyAevI8=",
          "77: github.com/Azure/go-ansiterm v0.0.0-20210617225240-d185dfc1b5a1 h1:UQHMgLO+TxOElx5B5HZ4hJQsoJ/PvUvKRhJHDQXO8P8=",
          "78: github.com/Azure/go-ansiterm v0.0.0-20210617225240-d185dfc1b5a1/go.mod h1:xomTg63KZ2rFqZQzSB4Vz2SUXa1BpHTVz9L5PTmPC4E=",
          "",
          "[Removed Lines]",
          "75: github.com/Azure/go-ansiterm v0.0.0-20170929234023-d6e3b3328b78/go.mod h1:LmzpDX56iTiv29bbRTIsUNlaFfuhWRQBWjQdVyAevI8=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "176: github.com/census-instrumentation/opencensus-proto v0.3.0/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=",
          "177: github.com/certifi/gocertifi v0.0.0-20191021191039-0944d244cd40/go.mod h1:sGbDF6GwGcLpkNXPUTkMRoywsNa/ol15pxFe6ERfguA=",
          "178: github.com/certifi/gocertifi v0.0.0-20200922220541-2c3bb06c6054/go.mod h1:sGbDF6GwGcLpkNXPUTkMRoywsNa/ol15pxFe6ERfguA=",
          "180: github.com/cespare/xxhash v1.1.0/go.mod h1:XrSqR1VqqWfGrhpAt58auRo0WTKS1nRRg3ghfAqPWnc=",
          "181: github.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=",
          "182: github.com/cespare/xxhash/v2 v2.1.2 h1:YRXhKfTDauu4ajMg1TPgFO5jnlC2HCbmLXMcTG5cbYE=",
          "",
          "[Removed Lines]",
          "179: github.com/cespare/xxhash v1.1.0 h1:a6HrQnmkObjyL+Gs60czilIUGqrzKutQD6XZog3p+ko=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "282: github.com/fluxcd/pkg/apis/acl v0.0.3/go.mod h1:XPts6lRJ9C9fIF9xVWofmQwftvhY25n1ps7W9xw0XLU=",
          "283: github.com/fluxcd/pkg/apis/kustomize v0.3.2 h1:ULoAwOOekHf5cy6mYIwL+K6v8/cfcNVVbwfIPgWjdjg=",
          "284: github.com/fluxcd/pkg/apis/kustomize v0.3.2/go.mod h1:p8iAH5TeqMBnnxkkpCNNDvWYfKlNRx89a6WKOo+hJHA=",
          "286: github.com/fluxcd/pkg/apis/meta v0.12.1 h1:m5PfKAqbqWBvGp9+JRj1sv+xNkGsHwUVf+3rJ8wm6SE=",
          "287: github.com/fluxcd/pkg/apis/meta v0.12.1/go.mod h1:f8YVt70/KAhqzZ7xxhjvqyzKubOYx2pAbakb/FfCEg8=",
          "288: github.com/fluxcd/pkg/runtime v0.13.2 h1:6jkQQUbp17WxHsbozlJFCvHmOS4JIB+yB20CdCd8duE=",
          "",
          "[Removed Lines]",
          "285: github.com/fluxcd/pkg/apis/meta v0.12.0/go.mod h1:SPrSWMwDK7Ls2/4GadzhjDjPFbKrzzgzuZ0oDO3jzso=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "319: github.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=",
          "320: github.com/go-kit/kit v0.9.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=",
          "321: github.com/go-kit/log v0.1.0/go.mod h1:zbhenjAZHb184qTLMA9ZjW7ThYL0H2mk7Q6pNt4vbaY=",
          "323: github.com/go-ldap/ldap/v3 v3.1.10/go.mod h1:5Zun81jBTabRaI8lzN7E1JjyEl1g6zI6u9pd8luAK4Q=",
          "324: github.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=",
          "325: github.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=",
          "",
          "[Removed Lines]",
          "322: github.com/go-ldap/ldap v3.0.2+incompatible/go.mod h1:qfd9rJvER9Q0/D/Sqn1DfHRoBp40uXYvFoEVrNEPqRc=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "342: github.com/go-openapi/swag v0.19.14/go.mod h1:QYRuS/SOXUCsnplDa677K7+DxSOj6IPNl/eQntq43wQ=",
          "343: github.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=",
          "344: github.com/go-task/slim-sprig v0.0.0-20210107165309-348f09dbbbc0/go.mod h1:fyg7847qk6SyHyPtNmDHnmrv/HOrqktSC+C9fM+CJOE=",
          "346: github.com/go-test/deep v1.0.2 h1:onZX1rnHT3Wv6cqNgYyFOOlgVKJrksuCMCRvJStbMYw=",
          "347: github.com/go-test/deep v1.0.2/go.mod h1:wGDj63lr65AM2AQyKZd/NYHGb0R+1RLqB8NKt3aSFNA=",
          "348: github.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=",
          "",
          "[Removed Lines]",
          "345: github.com/go-test/deep v1.0.2-0.20181118220953-042da051cf31/go.mod h1:wGDj63lr65AM2AQyKZd/NYHGb0R+1RLqB8NKt3aSFNA=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "392: github.com/golang/protobuf v1.5.2 h1:ROPKBNFfQgOUMifHyP+KYbvpjbdoFNs+aK7DXlji0Tw=",
          "393: github.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=",
          "394: github.com/golang/snappy v0.0.0-20180518054509-2e65f85255db/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=",
          "396: github.com/golang/snappy v0.0.3/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=",
          "397: github.com/golang/snappy v0.0.4 h1:yAGX7huGHXlcLOEtBnF4w7FQwA26wojNCwOYAEhLjQM=",
          "398: github.com/golang/snappy v0.0.4/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=",
          "",
          "[Removed Lines]",
          "395: github.com/golang/snappy v0.0.1/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "441: github.com/google/pprof v0.0.0-20210609004039-a478d1d731e9/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=",
          "442: github.com/google/pprof v0.0.0-20210720184732-4bb14d4b1be1/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=",
          "443: github.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=",
          "445: github.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510 h1:El6M4kTTCOh6aBiKaUGG7oYTSPP8MxqL4YI3kZKwcP4=",
          "446: github.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510/go.mod h1:pupxD2MaaD3pAXIBCelhxNneeOaAeabZDe5s4K6zSpQ=",
          "447: github.com/google/uuid v1.1.1/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=",
          "448: github.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=",
          "450: github.com/google/uuid v1.3.0 h1:t6JiXgmwXMjEs8VusXIJk2BXHsn+wx8BZdTaoZ5fu7I=",
          "451: github.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=",
          "452: github.com/googleapis/gax-go/v2 v2.0.4/go.mod h1:0Wqv26UfaUD9n4G6kQubkQ+KchISgw+vpHVxEJEs9eg=",
          "",
          "[Removed Lines]",
          "444: github.com/google/shlex v0.0.0-20181106134648-c34317bd91bf/go.mod h1:RpwtwJQFrIEPstU94h88MWPXP2ektJZ8cZ0YntAmXiE=",
          "449: github.com/google/uuid v1.2.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "464: github.com/gorilla/websocket v1.4.0/go.mod h1:E7qHFY5m1UJ88s3WnNqhKjPHQ0heANvMoAMk2YaljkQ=",
          "465: github.com/gorilla/websocket v1.4.2/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=",
          "466: github.com/gotestyourself/gotestyourself v2.2.0+incompatible h1:AQwinXlbQR2HvPjQZOmDhRqsv5mZf+Jb1RnSLxcqZcI=",
          "468: github.com/goware/prefixer v0.0.0-20160118172347-395022866408 h1:Y9iQJfEqnN3/Nce9cOegemcy/9Ai5k3huT6E80F3zaw=",
          "469: github.com/goware/prefixer v0.0.0-20160118172347-395022866408/go.mod h1:PE1ycukgRPJ7bJ9a1fdfQ9j8i/cEcRAoLZzbxYpNB/s=",
          "470: github.com/gregjones/httpcache v0.0.0-20180305231024-9cad4c3443a7 h1:pdN6V1QBWetyv/0+wjACpqVH+eVULgEjkurDLq3goeM=",
          "",
          "[Removed Lines]",
          "467: github.com/gotestyourself/gotestyourself v2.2.0+incompatible/go.mod h1:zZKM6oeNM8k+FRljX1mnzVYeS8wiGgQyvST1/GafPbY=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "486: github.com/hashicorp/go-cleanhttp v0.5.1/go.mod h1:JpRdi6/HCYpAwUzNwuwqhbovhLtngrth3wmdIIUrZ80=",
          "487: github.com/hashicorp/go-cleanhttp v0.5.2 h1:035FKYIWjmULyFRBKPs8TBQoi0x6d9G4xc9neXJWAZQ=",
          "488: github.com/hashicorp/go-cleanhttp v0.5.2/go.mod h1:kO/YDlP8L1346E6Sodw+PrpBSV4/SoxCXGY6BqNFT48=",
          "491: github.com/hashicorp/go-hclog v0.9.2/go.mod h1:5CU+agLiy3J7N7QjHK5d05KxGsuXiQLrjA0H7acj2lQ=",
          "492: github.com/hashicorp/go-hclog v0.12.0/go.mod h1:whpDNt7SSdeAju8AWKIWsul05p54N/39EeqMAyrmvFQ=",
          "493: github.com/hashicorp/go-hclog v0.14.1/go.mod h1:whpDNt7SSdeAju8AWKIWsul05p54N/39EeqMAyrmvFQ=",
          "",
          "[Removed Lines]",
          "489: github.com/hashicorp/go-hclog v0.0.0-20180709165350-ff2cf002a8dd/go.mod h1:9bjs9uLqI8l75knNv3lV1kA55veR+WUPSiKIWcQHudI=",
          "490: github.com/hashicorp/go-hclog v0.8.0/go.mod h1:5CU+agLiy3J7N7QjHK5d05KxGsuXiQLrjA0H7acj2lQ=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "503: github.com/hashicorp/go-multierror v1.1.0/go.mod h1:spPvp8C1qA32ftKqdAHm4hHTbPw+vmowP0z+KUhOZdA=",
          "504: github.com/hashicorp/go-multierror v1.1.1 h1:H5DkEtf6CXdFp0N0Em5UCwQpXMWke8IA0+lD48awMYo=",
          "505: github.com/hashicorp/go-multierror v1.1.1/go.mod h1:iw975J/qwKPdAO1clOe2L8331t/9/fmwbPZ6JB6eMoM=",
          "507: github.com/hashicorp/go-plugin v1.4.3 h1:DXmvivbWD5qdiBts9TpBC7BYL1Aia5sxbRgQB+v6UZM=",
          "508: github.com/hashicorp/go-plugin v1.4.3/go.mod h1:5fGEH17QVwTTcR0zV7yhDPLLmFX9YSZ38b18Udy6vYQ=",
          "509: github.com/hashicorp/go-retryablehttp v0.5.3/go.mod h1:9B5zBasrRhHXnJnui7y6sL7es7NDiJgTc6Er0maI1Xs=",
          "511: github.com/hashicorp/go-retryablehttp v0.6.6/go.mod h1:vAew36LZh98gCBJNLH42IQ1ER/9wtLZZ8meHqQvEYWY=",
          "512: github.com/hashicorp/go-retryablehttp v0.7.0 h1:eu1EI/mbirUgP5C8hVsTNaGZreBDlYiwC1FZWkvQPQ4=",
          "513: github.com/hashicorp/go-retryablehttp v0.7.0/go.mod h1:vAew36LZh98gCBJNLH42IQ1ER/9wtLZZ8meHqQvEYWY=",
          "514: github.com/hashicorp/go-rootcerts v1.0.0/go.mod h1:K6zTfqpRlCUIjkwsN4Z+hiSfzSTQa6eBIzfwKfwNnHU=",
          "516: github.com/hashicorp/go-rootcerts v1.0.2 h1:jzhAVGtqPKbwpyCPELlgNWhE1znq+qwJtW5Oi2viEzc=",
          "517: github.com/hashicorp/go-rootcerts v1.0.2/go.mod h1:pqUvnprVnM5bf7AOirdbb01K4ccR319Vf4pU3K5EGc8=",
          "518: github.com/hashicorp/go-secure-stdlib/base62 v0.1.1/go.mod h1:EdWO6czbmthiwZ3/PUsDV+UD1D5IRU4ActiaWGwt0Yw=",
          "",
          "[Removed Lines]",
          "506: github.com/hashicorp/go-plugin v1.0.1/go.mod h1:++UyYGoz3o5w9ZzAdZxtQKrWWP+iqPBn3cQptSMzBuY=",
          "510: github.com/hashicorp/go-retryablehttp v0.5.4/go.mod h1:9B5zBasrRhHXnJnui7y6sL7es7NDiJgTc6Er0maI1Xs=",
          "515: github.com/hashicorp/go-rootcerts v1.0.1/go.mod h1:pqUvnprVnM5bf7AOirdbb01K4ccR319Vf4pU3K5EGc8=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "532: github.com/hashicorp/go-uuid v1.0.1/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=",
          "533: github.com/hashicorp/go-uuid v1.0.2 h1:cfejS+Tpcp13yd5nYHWDI6qVCny6wyX2Mt5SGur2IGE=",
          "534: github.com/hashicorp/go-uuid v1.0.2/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=",
          "536: github.com/hashicorp/go-version v1.2.0 h1:3vNe/fWF5CBgRIguda1meWhsZHy3m8gCJ5wx+dIzX/E=",
          "537: github.com/hashicorp/go-version v1.2.0/go.mod h1:fltr4n8CU8Ke44wwGCBoEymUuxUHl09ZGVZPK5anwXA=",
          "538: github.com/hashicorp/go.net v0.0.1/go.mod h1:hjKkEWcCURg++eb33jQU7oqQcI9XDCnUzHA0oac0k90=",
          "",
          "[Removed Lines]",
          "535: github.com/hashicorp/go-version v1.1.0/go.mod h1:fltr4n8CU8Ke44wwGCBoEymUuxUHl09ZGVZPK5anwXA=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "552: github.com/hashicorp/serf v0.8.2/go.mod h1:6hOLApaqBFA1NXqRQAsxw9QxuDEvNxSQRwA/JwenrHc=",
          "553: github.com/hashicorp/serf v0.9.5/go.mod h1:UWDWwZeL5cuWDJdl0C6wrvrUwEqtQ4ZKBKKENpqIUyk=",
          "554: github.com/hashicorp/serf v0.9.6/go.mod h1:TXZNMjZQijwlDvp+r0b63xZ45H7JmCmgg4gpTwn9UV4=",
          "556: github.com/hashicorp/vault/api v1.4.1 h1:mWLfPT0RhxBitjKr6swieCEP2v5pp/M//t70S3kMLRo=",
          "557: github.com/hashicorp/vault/api v1.4.1/go.mod h1:LkMdrZnWNrFaQyYYazWVn7KshilfDidgVBq6YiTq/bM=",
          "559: github.com/hashicorp/vault/sdk v0.4.1 h1:3SaHOJY687jY1fnB61PtL0cOkKItphrbLmux7T92HBo=",
          "560: github.com/hashicorp/vault/sdk v0.4.1/go.mod h1:aZ3fNuL5VNydQk8GcLJ2TV8YCRVvyaakYkhZRoVuhj0=",
          "561: github.com/hashicorp/yamux v0.0.0-20180604194846-3520598351bb/go.mod h1:+NfK9FKeTrX5uv1uIXGdwYDTeHna2qgaIlx54MXqjAM=",
          "",
          "[Removed Lines]",
          "555: github.com/hashicorp/vault/api v1.0.4/go.mod h1:gDcqh3WGcR1cpF5AJz/B1UFheUEneMoIospckxBxk6Q=",
          "558: github.com/hashicorp/vault/sdk v0.1.13/go.mod h1:B+hVj7TpuQY1Y/GPbCpffmgd+tSEwvhkWnjtSYCaS2M=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "706: github.com/onsi/ginkgo v1.14.0/go.mod h1:iSB4RoI2tjJc9BBv4NKIKWKya62Rps+oPG/Lv9klQyY=",
          "707: github.com/onsi/ginkgo v1.16.4/go.mod h1:dX+/inL/fNMqNlz0e9LfyB9TswhZpCVdJM/Z6Vvnwo0=",
          "708: github.com/onsi/ginkgo v1.16.5 h1:8xi0RTUf59SOSfEtZMvwTvXYMzG4gV23XVHOZiXNtnE=",
          "710: github.com/onsi/ginkgo/v2 v2.0.0 h1:CcuG/HvWNkkaqCUpJifQY8z7qEMBJya6aLPx6ftGyjQ=",
          "711: github.com/onsi/ginkgo/v2 v2.0.0/go.mod h1:vw5CSIxN1JObi/U8gcbwft7ZxR2dgaR70JSE3/PpL4c=",
          "712: github.com/onsi/gomega v0.0.0-20170829124025-dcabb60a477c/go.mod h1:C1qb7wdrVGGVU+Z6iS04AVkA3Q65CEZX59MT0QO5uiA=",
          "",
          "[Removed Lines]",
          "709: github.com/onsi/ginkgo v1.16.5/go.mod h1:+E8gABHa3K6zRBolWtd+ROzc/U5bkGt0FwiG042wbpU=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "716: github.com/onsi/gomega v1.17.0/go.mod h1:HnhC7FXeEQY45zxNK3PPoIUhzk/80Xly9PcubAlGdZY=",
          "717: github.com/onsi/gomega v1.18.1 h1:M1GfJqGRrBrrGGsbxzV5dqM2U2ApXefZCQpkukxYRLE=",
          "718: github.com/onsi/gomega v1.18.1/go.mod h1:0q+aL8jAiMXy9hbwj2mr5GziHiwhAIQpFmmtT5hitRs=",
          "720: github.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=",
          "721: github.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=",
          "722: github.com/opencontainers/image-spec v1.0.2 h1:9yCKha/T5XdGtO0q9Q9a6T5NUCsTn/DrBg0D7ufOcFM=",
          "",
          "[Removed Lines]",
          "719: github.com/opencontainers/go-digest v1.0.0-rc1/go.mod h1:cMLVZDEM3+U2I4VmLI6N8jQYUd2OVphdqWwCJHrFt2s=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "727: github.com/opencontainers/selinux v1.8.2/go.mod h1:MUIHuUEvKB1wtJjQdOyYRgOnLD2xAPP8dBsCoU0KuF8=",
          "728: github.com/opentracing/opentracing-go v1.1.0/go.mod h1:UkNAQd3GIcIGf0SeVgPpRdFStlNbqXla1AfSYxPUl2o=",
          "729: github.com/openzipkin/zipkin-go v0.1.6/go.mod h1:QgAqvLzwWbR/WpD4A3cGpPtJrZXNIiJc5AZX7/PBEpw=",
          "731: github.com/ory/dockertest v3.3.5+incompatible h1:iLLK6SQwIhcbrG783Dghaaa3WPzGc+4Emza6EbVUUGA=",
          "732: github.com/ory/dockertest v3.3.5+incompatible/go.mod h1:1vX4m9wsvi00u5bseYwXaSnhNrne+V0E6LAcBILJdPs=",
          "733: github.com/pascaldekloe/goe v0.0.0-20180627143212-57f6aae5913c/go.mod h1:lzWF7FIEvWOWxwDKqyGYQf6ZUaNfKdP144TG7ZOy1lc=",
          "",
          "[Removed Lines]",
          "730: github.com/ory/dockertest v3.3.4+incompatible/go.mod h1:1vX4m9wsvi00u5bseYwXaSnhNrne+V0E6LAcBILJdPs=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "814: github.com/sirupsen/logrus v1.8.1 h1:dJKuHgqk1NNQlqoA6BTlM1Wf9DOH3NBjQyu0h9+AZZE=",
          "815: github.com/sirupsen/logrus v1.8.1/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=",
          "816: github.com/smartystreets/assertions v0.0.0-20180927180507-b2de0cb4f26d/go.mod h1:OnSkiWE9lh6wB0YB77sQom3nweQdgAjqCqsofrRNTgc=",
          "818: github.com/smartystreets/goconvey v1.6.4/go.mod h1:syvi0/a8iFYH4r/RixwvyeAJjdLS9QV7WQ/tjFTllLA=",
          "819: github.com/soheilhy/cmux v0.1.4/go.mod h1:IM3LyeVVIOuxMH7sFAkER9+bJ4dT7Ms6E4xg4kGIyLM=",
          "820: github.com/soheilhy/cmux v0.1.5/go.mod h1:T7TcVDs9LWfQgPlPsdngu6I6QIoyIFZDDC6sNE1GqG0=",
          "",
          "[Removed Lines]",
          "817: github.com/smartystreets/goconvey v0.0.0-20190710185942-9d28bd7c0945/go.mod h1:syvi0/a8iFYH4r/RixwvyeAJjdLS9QV7WQ/tjFTllLA=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "841: github.com/spf13/viper v1.7.0/go.mod h1:8WkrPz2fc9jxqZNCJI/76HCieCp4Q8HaLFoCha5qpdg=",
          "842: github.com/spf13/viper v1.8.1/go.mod h1:o0Pch8wJ9BVSWGQMbra6iw0oQ5oktSIBaujf1rJH9Ns=",
          "843: github.com/spf13/viper v1.10.0/go.mod h1:SoyBPwAtKDzypXNDFKN5kzH7ppppbGZtls1UpIy5AsM=",
          "845: github.com/stoewer/go-strcase v1.2.0/go.mod h1:IBiWB2sKIp3wVVQ3Y035++gc+knqhUQag1KpM8ahLw8=",
          "846: github.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=",
          "847: github.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=",
          "",
          "[Removed Lines]",
          "844: github.com/spyzhov/ajson v0.4.2/go.mod h1:63V+CGM6f1Bu/p4nLIN8885ojBdt88TbLoSFzyqMuVA=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "919: go.uber.org/atomic v1.9.0 h1:ECmE8Bn/WFTYwEW/bpKD3M8VtR/zQVbavAoalC1PYyE=",
          "920: go.uber.org/atomic v1.9.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=",
          "921: go.uber.org/goleak v1.1.10/go.mod h1:8a7PlsEVH3e/a/GLqe5IIrQx6GzcnRmZEufDUTk4A7A=",
          "923: go.uber.org/goleak v1.1.11/go.mod h1:cwTWslyiVhfpKIDGSZEM2HlOvcqm+tG4zioyIeLoqMQ=",
          "924: go.uber.org/goleak v1.1.12 h1:gZAh5/EyT/HQwlpkCy6wTpqfH9H8Lz8zbm3dZh+OyzA=",
          "926: go.uber.org/multierr v1.1.0/go.mod h1:wR5kodmAFQ0UK8QlbwjlSNy0Z68gJhDJUG5sjR94q/0=",
          "927: go.uber.org/multierr v1.6.0 h1:y6IPFStTAIT5Ytl7/XYmHvzXQ7S3g/IeZW9hyZ5thw4=",
          "928: go.uber.org/multierr v1.6.0/go.mod h1:cdWPpRnG4AhwMwsgIHip0KRBQjJy5kYEpYjJxpXp9iU=",
          "929: go.uber.org/zap v1.10.0/go.mod h1:vwi/ZaCAaUcBkycHslxD9B2zi4UTXhF60s6SWpuDF0Q=",
          "930: go.uber.org/zap v1.17.0/go.mod h1:MXVU+bhUf/A7Xi2HNOnopQOrmycQ5Ih87HtOu4q5SSo=",
          "931: go.uber.org/zap v1.19.0/go.mod h1:xg/QME4nWcxGxrpdeYfq7UvYrLh66cuVKdrbD1XF/NI=",
          "933: go.uber.org/zap v1.21.0 h1:WefMeulhovoZ2sYXz7st6K0sLj7bBhpiFaud4r4zST8=",
          "934: go.uber.org/zap v1.21.0/go.mod h1:wjWOCqI0f2ZZrJF/UufIOkiC8ii6tm1iqIsLo76RfJw=",
          "935: golang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=",
          "",
          "[Removed Lines]",
          "922: go.uber.org/goleak v1.1.11-0.20210813005559-691160354723/go.mod h1:cwTWslyiVhfpKIDGSZEM2HlOvcqm+tG4zioyIeLoqMQ=",
          "925: go.uber.org/goleak v1.1.12/go.mod h1:cwTWslyiVhfpKIDGSZEM2HlOvcqm+tG4zioyIeLoqMQ=",
          "932: go.uber.org/zap v1.19.1/go.mod h1:j3DNczoxDZroyBnOT1L/Q79cfUMGZxlv/9dzN7SM1rI=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "941: golang.org/x/crypto v0.0.0-20190820162420-60c769a6c586/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=",
          "942: golang.org/x/crypto v0.0.0-20190923035154-9ee001bba392/go.mod h1:/lpIB1dKB+9EgE3H3cr1v9wB50oz8l4C4h62xy7jSTY=",
          "943: golang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=",
          "945: golang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=",
          "946: golang.org/x/crypto v0.0.0-20201002170205-7f63de1d35b0/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=",
          "947: golang.org/x/crypto v0.0.0-20201016220609-9e8e0b390897/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=",
          "949: golang.org/x/crypto v0.0.0-20210322153248-0c34fe9e7dc2/go.mod h1:T9bdIzuCu7OtxOm1hfPfRQxPLYneinmdGuTeoZ9dtd4=",
          "950: golang.org/x/crypto v0.0.0-20210711020723-a769d52b0f97/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "951: golang.org/x/crypto v0.0.0-20210817164053-32db794688a5/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "",
          "[Removed Lines]",
          "944: golang.org/x/crypto v0.0.0-20200323165209-0ec3e9974c59/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=",
          "948: golang.org/x/crypto v0.0.0-20210220033148-5ea612d1eb83/go.mod h1:jdWPYTVW3xRLrWPugEBEK3UY2ZEsg3UU495nc5E+M+I=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1046: golang.org/x/net v0.0.0-20210825183410-e898025ed96a/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "1047: golang.org/x/net v0.0.0-20211015210444-4f30a5c0130f/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "1048: golang.org/x/net v0.0.0-20211209124913-491a49abca63/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "1051: golang.org/x/net v0.0.0-20220225172249-27dd8689420f h1:oA4XRj0qtSt8Yo1Zms0CUlsT3KG69V2UGQWPBxujDmc=",
          "1052: golang.org/x/net v0.0.0-20220225172249-27dd8689420f/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=",
          "1053: golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=",
          "",
          "[Removed Lines]",
          "1049: golang.org/x/net v0.0.0-20211215060638-4ddde0e984e9/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "1050: golang.org/x/net v0.0.0-20211216030914-fe4d6282115f/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1088: golang.org/x/sys v0.0.0-20181107165924-66b7b1311ac8/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "1089: golang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "1090: golang.org/x/sys v0.0.0-20181122145206-62eef0e2fa9b/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "1092: golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "1093: golang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "1094: golang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "",
          "[Removed Lines]",
          "1091: golang.org/x/sys v0.0.0-20190129075346-302c3dd5f1cc/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1164: golang.org/x/sys v0.0.0-20210816183151-1e6c022a8912/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "1165: golang.org/x/sys v0.0.0-20210823070655-63515b42dcdf/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "1166: golang.org/x/sys v0.0.0-20210831042530-f4d43177bf5e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "1168: golang.org/x/sys v0.0.0-20210908233432-aa78b53d3365/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "1169: golang.org/x/sys v0.0.0-20210927094055-39ccf1dd6fa6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "1170: golang.org/x/sys v0.0.0-20211007075335-d3039528d8ac/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "1171: golang.org/x/sys v0.0.0-20211019181941-9d821ace8654/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "1173: golang.org/x/sys v0.0.0-20211124211545-fe61309f8881/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "1174: golang.org/x/sys v0.0.0-20211205182925-97ca703d548d/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "1175: golang.org/x/sys v0.0.0-20211216021012-1d35b9e2eb4e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "1176: golang.org/x/sys v0.0.0-20220114195835-da31bd327af9 h1:XfKQ4OlFl8okEOr5UvAqFRVj8pY/4yfcXrddB8qAbU0=",
          "1177: golang.org/x/sys v0.0.0-20220114195835-da31bd327af9/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "1179: golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=",
          "1180: golang.org/x/term v0.0.0-20210615171337-6886f2dfbf5b/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=",
          "1181: golang.org/x/term v0.0.0-20210927222741-03fcf44c2211 h1:JGgROgKl9N8DuW20oFS5gxc+lE67/N3FcwmBPMe7ArY=",
          "",
          "[Removed Lines]",
          "1167: golang.org/x/sys v0.0.0-20210903071746-97244b99971b/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "1172: golang.org/x/sys v0.0.0-20211029165221-6e7872819dc8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "1178: golang.org/x/term v0.0.0-20201117132131-f5c789dd3221/go.mod h1:Nr5EML6q2oocZ2LXRh80K7BxOlk5/8JxuGnuhpl+muw=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1183: golang.org/x/text v0.0.0-20170915032832-14c0d48ead0c/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=",
          "1184: golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=",
          "1185: golang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=",
          "1187: golang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=",
          "1188: golang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=",
          "1189: golang.org/x/text v0.3.4/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=",
          "",
          "[Removed Lines]",
          "1186: golang.org/x/text v0.3.1-0.20181227161524-e6919f6577db/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1315: google.golang.org/genproto v0.0.0-20170818010345-ee236bd376b0/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=",
          "1316: google.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=",
          "1317: google.golang.org/genproto v0.0.0-20190307195333-5fe7a883aa19/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=",
          "1319: google.golang.org/genproto v0.0.0-20190418145605-e7d98fc518a7/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=",
          "1320: google.golang.org/genproto v0.0.0-20190425155659-357c62f0e4bb/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=",
          "1321: google.golang.org/genproto v0.0.0-20190502173448-54afdca5d873/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=",
          "1323: google.golang.org/genproto v0.0.0-20190801165951-fa694d86fc64/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=",
          "1324: google.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=",
          "1325: google.golang.org/genproto v0.0.0-20190911173649-1774047e7e51/go.mod h1:IbNlFCBrqXvoKpeg0TB2l7cyZUmoaFKYIwrEpbDKLA8=",
          "",
          "[Removed Lines]",
          "1318: google.golang.org/genproto v0.0.0-20190404172233-64821d5d2107/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=",
          "1322: google.golang.org/genproto v0.0.0-20190716160619-c506a9f90610/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1383: google.golang.org/genproto v0.0.0-20211208223120-3a66f561d7aa h1:I0YcKz0I7OAhddo7ya8kMnvprhcWM045PmkBdMO9zN0=",
          "1384: google.golang.org/genproto v0.0.0-20211208223120-3a66f561d7aa/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=",
          "1385: google.golang.org/grpc v1.8.0/go.mod h1:yo6s7OP7yaDglbqo1J04qKzAhqBH6lvTonzMVmEdcZw=",
          "1387: google.golang.org/grpc v1.17.0/go.mod h1:6QZJwpn2B+Zp71q/5VxRsJ6NXXVCE5NRUHRo+f3cWCs=",
          "1388: google.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=",
          "1389: google.golang.org/grpc v1.19.1/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=",
          "1390: google.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=",
          "1391: google.golang.org/grpc v1.21.0/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=",
          "1392: google.golang.org/grpc v1.21.1/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=",
          "1394: google.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=",
          "1395: google.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=",
          "1396: google.golang.org/grpc v1.26.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=",
          "",
          "[Removed Lines]",
          "1386: google.golang.org/grpc v1.14.0/go.mod h1:yo6s7OP7yaDglbqo1J04qKzAhqBH6lvTonzMVmEdcZw=",
          "1393: google.golang.org/grpc v1.22.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1434: google.golang.org/protobuf v1.27.1 h1:SnqbnDw1V7RiZcXPx5MEeqPv2s79L9i7BJUlG/+RurQ=",
          "1435: google.golang.org/protobuf v1.27.1/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=",
          "1436: gopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=",
          "1438: gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "1439: gopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "1440: gopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "1441: gopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "1442: gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=",
          "1444: gopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=",
          "1445: gopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=",
          "1446: gopkg.in/inf.v0 v0.9.1 h1:73M5CoZyi3ZLMOyDlQh031Cx6N9NDJ2Vvfl76EDAgDc=",
          "1447: gopkg.in/inf.v0 v0.9.1/go.mod h1:cWUDdTG/fYaXco+Dcufb5Vnc6Gp2YChqWtbxRZE0mXw=",
          "1449: gopkg.in/ini.v1 v1.51.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=",
          "1450: gopkg.in/ini.v1 v1.62.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=",
          "1451: gopkg.in/ini.v1 v1.66.2 h1:XfR1dOYubytKy4Shzc2LHrrGhU0lDCfDGG1yLPmpgsI=",
          "",
          "[Removed Lines]",
          "1437: gopkg.in/asn1-ber.v1 v1.0.0-20181015200546-f715ec2f112d/go.mod h1:cuepJuh7vyXfUyUwEgHQXw849cJrilpS5NeIjOWESAw=",
          "1443: gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=",
          "1448: gopkg.in/ini.v1 v1.44.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "1453: gopkg.in/natefinch/lumberjack.v2 v2.0.0/go.mod h1:l0ndWWf7gzL7RNwBG7wST/UCcT4T24xpD6X8LsfU/+k=",
          "1454: gopkg.in/resty.v1 v1.12.0/go.mod h1:mDo4pnntr5jdWRML875a/NmxYqAlA73dVijT2AXvQQo=",
          "1455: gopkg.in/square/go-jose.v2 v2.2.2/go.mod h1:M9dMgbHiYLoDGQrXy7OpJDJWiKiU//h+vD76mk0e1AI=",
          "1457: gopkg.in/square/go-jose.v2 v2.5.1 h1:7odma5RETjNHWJnR32wx8t+Io4djHE1PqxCFx3iiZ2w=",
          "1458: gopkg.in/square/go-jose.v2 v2.5.1/go.mod h1:M9dMgbHiYLoDGQrXy7OpJDJWiKiU//h+vD76mk0e1AI=",
          "1459: gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 h1:uRGJdciOHaEIrze2W8Q3AKkepLTh2hOroT7a+7czfdQ=",
          "",
          "[Removed Lines]",
          "1456: gopkg.in/square/go-jose.v2 v2.3.1/go.mod h1:M9dMgbHiYLoDGQrXy7OpJDJWiKiU//h+vD76mk0e1AI=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "1472: gopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=",
          "1473: gopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=",
          "1474: gopkg.in/yaml.v3 v3.0.0-20200615113413-eeeca48fe776/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=",
          "1476: gopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b h1:h8qDotaEPuJATrMmW04NCwg7v22aHH28wwpauUhK9Oo=",
          "1477: gopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=",
          "1478: gotest.tools v2.2.0+incompatible h1:VsBPFP1AI068pPrMxtb/S8Zkgf9xEmTLJjfM+P5UIEo=",
          "1480: gotest.tools/v3 v3.0.2/go.mod h1:3SzNCllyD9/Y+b5r9JIKQ474KzkZyqLqEfYqMsX94Bk=",
          "1481: gotest.tools/v3 v3.0.3 h1:4AuOwCGf4lLR9u3YOe2awrHygurzhO/HeQ6laiA6Sx0=",
          "1482: gotest.tools/v3 v3.0.3/go.mod h1:Z7Lb0S5l+klDB31fvDQX8ss/FlKDxtlFlw3Oa8Ymbl8=",
          "",
          "[Removed Lines]",
          "1475: gopkg.in/yaml.v3 v3.0.0-20210107172259-749611fa9fcc/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=",
          "1479: gotest.tools v2.2.0+incompatible/go.mod h1:DsYFclhRJ6vuDpmuTbkuFWG+y2sxOXAzmJt81HFBacw=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "1488: honnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=",
          "1489: honnef.co/go/tools v0.0.1-2020.1.3/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=",
          "1490: honnef.co/go/tools v0.0.1-2020.1.4/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=",
          "1492: k8s.io/api v0.23.2/go.mod h1:sYuDb3flCtRPI8ghn6qFrcK5ZBu2mhbElxRE95qpwlI=",
          "1493: k8s.io/api v0.23.4 h1:85gnfXQOWbJa1SiWGpE9EEtHs0UVvDyIsSMpEtl2D4E=",
          "1494: k8s.io/api v0.23.4/go.mod h1:i77F4JfyNNrhOjZF7OwwNJS5Y1S9dpwvb9iYRYRczfI=",
          "1496: k8s.io/apiextensions-apiserver v0.23.4 h1:AFDUEu/yEf0YnuZhqhIFhPLPhhcQQVuR1u3WCh0rveU=",
          "1497: k8s.io/apiextensions-apiserver v0.23.4/go.mod h1:TWYAKymJx7nLMxWCgWm2RYGXHrGlVZnxIlGnvtfYu+g=",
          "1499: k8s.io/apimachinery v0.23.2/go.mod h1:zDqeV0AK62LbCI0CI7KbWCAYdLg+E+8UXJ0rIz5gmS8=",
          "1500: k8s.io/apimachinery v0.23.4 h1:fhnuMd/xUL3Cjfl64j5ULKZ1/J9n8NuQEgNL+WXWfdM=",
          "1501: k8s.io/apimachinery v0.23.4/go.mod h1:BEuFMMBaIbcOqVIJqNZJXGFTP4W6AycEpb5+m/97hrM=",
          "1503: k8s.io/apiserver v0.23.4/go.mod h1:A6l/ZcNtxGfPSqbFDoxxOjEjSKBaQmE+UTveOmMkpNc=",
          "1504: k8s.io/cli-runtime v0.23.2 h1:4zOZX78mFSakwe4gef81XDBu94Yu0th6bfveTOx8ZQk=",
          "1505: k8s.io/cli-runtime v0.23.2/go.mod h1:Ag70akCDvwux4HxY+nH2J3UqE2e6iwSSdG1HE6p1VTU=",
          "1507: k8s.io/client-go v0.23.2/go.mod h1:k3YbsWg6GWdHF1THHTQP88X9RhB1DWPo3Dq7KfU/D1c=",
          "1508: k8s.io/client-go v0.23.4 h1:YVWvPeerA2gpUudLelvsolzH7c2sFoXXR5wM/sWqNFU=",
          "1509: k8s.io/client-go v0.23.4/go.mod h1:PKnIL4pqLuvYUK1WU7RLTMYKPiIh7MYShLshtRY9cj0=",
          "1511: k8s.io/code-generator v0.23.2/go.mod h1:S0Q1JVA+kSzTI1oUvbKAxZY/DYbA/ZUb4Uknog12ETk=",
          "1512: k8s.io/code-generator v0.23.4/go.mod h1:S0Q1JVA+kSzTI1oUvbKAxZY/DYbA/ZUb4Uknog12ETk=",
          "1514: k8s.io/component-base v0.23.2/go.mod h1:wS9Z03MO3oJ0RU8bB/dbXTiluGju+SC/F5i660gxB8c=",
          "1515: k8s.io/component-base v0.23.4 h1:SziYh48+QKxK+ykJ3Ejqd98XdZIseVBG7sBaNLPqy6M=",
          "1516: k8s.io/component-base v0.23.4/go.mod h1:8o3Gg8i2vnUXGPOwciiYlkSaZT+p+7gA9Scoz8y4W4E=",
          "",
          "[Removed Lines]",
          "1491: k8s.io/api v0.23.0/go.mod h1:8wmDdLBHBNxtOIytwLstXt5E9PddnZb0GaMcqsvDBpg=",
          "1495: k8s.io/apiextensions-apiserver v0.23.0/go.mod h1:xIFAEEDlAZgpVBl/1VSjGDmLoXAWRG40+GsWhKhAxY4=",
          "1498: k8s.io/apimachinery v0.23.0/go.mod h1:fFCTTBKvKcwTPFzjlcxp91uPFZr+JA0FubU4fLzzFYc=",
          "1502: k8s.io/apiserver v0.23.0/go.mod h1:Cec35u/9zAepDPPFyT+UMrgqOCjgJ5qtfVJDxjZYmt4=",
          "1506: k8s.io/client-go v0.23.0/go.mod h1:hrDnpnK1mSr65lHHcUuIZIXDgEbzc7/683c6hyG4jTA=",
          "1510: k8s.io/code-generator v0.23.0/go.mod h1:vQvOhDXhuzqiVfM/YHp+dmg10WDZCchJVObc9MvowsE=",
          "1513: k8s.io/component-base v0.23.0/go.mod h1:DHH5uiFvLC1edCpvcTDV++NKULdYYU6pR9Tt3HIKMKI=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "1531: k8s.io/utils v0.0.0-20210802155522-efc7438f0176/go.mod h1:jPW/WVKK9YHAvNhRxK0md/EJ228hCsBRufyofKtW8HA=",
          "1532: k8s.io/utils v0.0.0-20210930125809-cb0fa318a74b/go.mod h1:jPW/WVKK9YHAvNhRxK0md/EJ228hCsBRufyofKtW8HA=",
          "1533: k8s.io/utils v0.0.0-20211116205334-6203023598ed/go.mod h1:jPW/WVKK9YHAvNhRxK0md/EJ228hCsBRufyofKtW8HA=",
          "1535: k8s.io/utils v0.0.0-20220210201930-3a6ce19ff2f9 h1:HNSDgDCrr/6Ly3WEGKZftiE7IY19Vz2GdbOCyI4qqhc=",
          "1536: k8s.io/utils v0.0.0-20220210201930-3a6ce19ff2f9/go.mod h1:jPW/WVKK9YHAvNhRxK0md/EJ228hCsBRufyofKtW8HA=",
          "1537: rsc.io/binaryregexp v0.2.0/go.mod h1:qTv7/COck+e2FymRvadv62gMdZztPaShugOCi3I+8D8=",
          "1538: rsc.io/quote/v3 v3.1.0/go.mod h1:yEA65RcK8LyAZtP9Kv3t0HmxON59tX3rD+tICJqUlj0=",
          "1539: rsc.io/sampler v1.3.0/go.mod h1:T1hPZKmBbMNahiBKFy5HrXp6adAjACjK9JXDnKaTXpA=",
          "1541: sigs.k8s.io/apiserver-network-proxy/konnectivity-client v0.0.27/go.mod h1:tq2nT0Kx7W+/f2JVE+zxYtUhdjuELJkVpNz+x/QN5R4=",
          "1542: sigs.k8s.io/cli-utils v0.29.3 h1:4QRB9ayCd5pd9M/D3q2KQgr+nYrvRaw3suW+rcOutvk=",
          "1543: sigs.k8s.io/cli-utils v0.29.3/go.mod h1:WDVRa5/eQBKntG++uyKdyT+xU7MLdCR4XsgseqL5uX4=",
          "1545: sigs.k8s.io/controller-runtime v0.11.1 h1:7YIHT2QnHJArj/dk9aUkYhfqfK5cIxPOX5gPECfdZLU=",
          "1546: sigs.k8s.io/controller-runtime v0.11.1/go.mod h1:KKwLiTooNGu+JmLZGn9Sl3Gjmfj66eMbCQznLP5zcqA=",
          "1547: sigs.k8s.io/json v0.0.0-20211020170558-c049b76a60c6/go.mod h1:p4QtZmO4uMYipTQNzagwnNoseA6OxSUutVw05NhYDRs=",
          "",
          "[Removed Lines]",
          "1534: k8s.io/utils v0.0.0-20211208161948-7d6a63dca704/go.mod h1:jPW/WVKK9YHAvNhRxK0md/EJ228hCsBRufyofKtW8HA=",
          "1540: sigs.k8s.io/apiserver-network-proxy/konnectivity-client v0.0.25/go.mod h1:Mlj9PNLmG9bZ6BHFwFKDo5afkpWyUISkb9Me0GnK66I=",
          "1544: sigs.k8s.io/controller-runtime v0.11.0/go.mod h1:KKwLiTooNGu+JmLZGn9Sl3Gjmfj66eMbCQznLP5zcqA=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1554: sigs.k8s.io/kustomize/kyaml v0.13.0 h1:9c+ETyNfSrVhxvphs+K2dzT3dh5oVPPEqPOE/cUpScY=",
          "1555: sigs.k8s.io/kustomize/kyaml v0.13.0/go.mod h1:FTJxEZ86ScK184NpGSAQcfEqee0nul8oLCK30D47m4E=",
          "1556: sigs.k8s.io/structured-merge-diff/v4 v4.0.2/go.mod h1:bJZC9H9iH24zzfZ/41RGcq60oK1F7G282QMXDPYydCw=",
          "1559: sigs.k8s.io/structured-merge-diff/v4 v4.2.1 h1:bKCqE9GvQ5tiVHn5rfn1r+yao3aLQEaLzkkmAkf+A6Y=",
          "1560: sigs.k8s.io/structured-merge-diff/v4 v4.2.1/go.mod h1:j/nl6xW8vLS49O8YvXW1ocPhZawJtm+Yrr7PPRQ0Vg4=",
          "1561: sigs.k8s.io/yaml v1.2.0/go.mod h1:yfXDCHCao9+ENCvLSE62v9VSji2MKu5jeNfTrofGhJc=",
          "",
          "[Removed Lines]",
          "1557: sigs.k8s.io/structured-merge-diff/v4 v4.1.2/go.mod h1:j/nl6xW8vLS49O8YvXW1ocPhZawJtm+Yrr7PPRQ0Vg4=",
          "1558: sigs.k8s.io/structured-merge-diff/v4 v4.2.0/go.mod h1:j/nl6xW8vLS49O8YvXW1ocPhZawJtm+Yrr7PPRQ0Vg4=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "69edf6e1a7b756606cf23fb09346f2cad23b6e38",
      "candidate_info": {
        "commit_hash": "69edf6e1a7b756606cf23fb09346f2cad23b6e38",
        "repo": "fluxcd/kustomize-controller",
        "commit_url": "https://github.com/fluxcd/kustomize-controller/commit/69edf6e1a7b756606cf23fb09346f2cad23b6e38",
        "files": [
          "CHANGELOG.md",
          "config/manager/kustomization.yaml",
          "go.mod",
          "go.sum"
        ],
        "message": "Release v1.0.0-rc.1\n\nSigned-off-by: Stefan Prodan <stefan.prodan@gmail.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  github.com/aws/aws-sdk-go-v2/service/sts v1.18.7",
          "24:  github.com/cyphar/filepath-securejoin v0.2.3",
          "25:  github.com/dimchansky/utfbom v1.1.1",
          "27:  github.com/fluxcd/pkg/apis/acl v0.1.0",
          "28:  github.com/fluxcd/pkg/apis/event v0.4.1",
          "29:  github.com/fluxcd/pkg/apis/kustomize v1.0.0",
          "30:  github.com/fluxcd/pkg/apis/meta v1.0.0",
          "31:  github.com/fluxcd/pkg/http/fetch v0.4.0",
          "33:  github.com/fluxcd/pkg/runtime v0.35.0",
          "34:  github.com/fluxcd/pkg/ssa v0.27.0",
          "35:  github.com/fluxcd/pkg/tar v0.2.0",
          "",
          "[Removed Lines]",
          "26:  github.com/fluxcd/kustomize-controller/api v0.35.1",
          "32:  github.com/fluxcd/pkg/kustomize v0.14.0",
          "",
          "[Added Lines]",
          "26:  github.com/fluxcd/kustomize-controller/api v1.0.0-rc.1",
          "32:  github.com/fluxcd/pkg/kustomize v1.1.0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "86:  github.com/MakeNowJust/heredoc v1.0.0 // indirect",
          "87:  github.com/Microsoft/go-winio v0.5.2 // indirect",
          "88:  github.com/Nvveen/Gotty v0.0.0-20120604004816-cd527374f1e5 // indirect",
          "90:  github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.13.1 // indirect",
          "91:  github.com/aws/aws-sdk-go-v2/internal/configsources v1.1.31 // indirect",
          "92:  github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.4.25 // indirect",
          "",
          "[Removed Lines]",
          "89:  github.com/ProtonMail/go-crypto v0.0.0-20220407094043-a94812496cf5 // indirect",
          "",
          "[Added Lines]",
          "89:  github.com/ProtonMail/go-crypto v0.0.0-20221026131551-cf6655e29de4 // indirect",
          "90:  github.com/acomagu/bufpipe v1.0.3 // indirect",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "101:  github.com/cenkalti/backoff/v4 v4.1.3 // indirect",
          "102:  github.com/cespare/xxhash/v2 v2.2.0 // indirect",
          "103:  github.com/chai2010/gettext-go v1.0.2 // indirect",
          "104:  github.com/containerd/continuity v0.3.0 // indirect",
          "105:  github.com/davecgh/go-spew v1.1.1 // indirect",
          "106:  github.com/docker/cli v20.10.14+incompatible // indirect",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "105:  github.com/cloudflare/circl v1.1.0 // indirect",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "113:  github.com/evanphx/json-patch/v5 v5.6.0 // indirect",
          "114:  github.com/exponent-io/jsonpath v0.0.0-20210407135951-1de76d718b3f // indirect",
          "115:  github.com/fatih/color v1.13.0 // indirect",
          "116:  github.com/fsnotify/fsnotify v1.6.0 // indirect",
          "117:  github.com/go-errors/errors v1.4.2 // indirect",
          "118:  github.com/go-logr/logr v1.2.3 // indirect",
          "119:  github.com/go-logr/zapr v1.2.3 // indirect",
          "120:  github.com/go-openapi/jsonpointer v0.19.6 // indirect",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "118:  github.com/fluxcd/go-git/v5 v5.0.0-20221219190809-2e5c9d01cfc4 // indirect",
          "119:  github.com/fluxcd/pkg/sourceignore v0.3.3 // indirect",
          "122:  github.com/go-git/gcfg v1.5.0 // indirect",
          "123:  github.com/go-git/go-billy/v5 v5.3.1 // indirect",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "146:  github.com/howeyc/gopass v0.0.0-20210920133722-c8aef6fb66ef // indirect",
          "147:  github.com/imdario/mergo v0.3.13 // indirect",
          "148:  github.com/inconshreveable/mousetrap v1.0.1 // indirect",
          "149:  github.com/jmespath/go-jmespath v0.4.0 // indirect",
          "150:  github.com/josharian/intern v1.0.0 // indirect",
          "151:  github.com/json-iterator/go v1.1.12 // indirect",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "155:  github.com/jbenet/go-context v0.0.0-20150711004518-d14ea06fba99 // indirect",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "202:  gopkg.in/ini.v1 v1.66.4 // indirect",
          "203:  gopkg.in/square/go-jose.v2 v2.6.0 // indirect",
          "204:  gopkg.in/urfave/cli.v1 v1.20.0 // indirect",
          "205:  gopkg.in/yaml.v2 v2.4.0 // indirect",
          "206:  gopkg.in/yaml.v3 v3.0.1 // indirect",
          "207:  k8s.io/apiextensions-apiserver v0.26.3 // indirect",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "212:  gopkg.in/warnings.v0 v0.1.2 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "95: github.com/Nvveen/Gotty v0.0.0-20120604004816-cd527374f1e5 h1:TngWCqHvy9oXAN6lEVMRuU21PR1EtLVZJmdB18Gu3Rw=",
          "96: github.com/Nvveen/Gotty v0.0.0-20120604004816-cd527374f1e5/go.mod h1:lmUJ/7eu/Q8D7ML55dXQrVaamCz2vxCfdQBasLZfHKk=",
          "97: github.com/OneOfOne/xxhash v1.2.2/go.mod h1:HSdplMjZKSmBqAxg5vPj2TmRDmfkzw+cTzAElWljhcU=",
          "100: github.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=",
          "101: github.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=",
          "102: github.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=",
          "103: github.com/alecthomas/units v0.0.0-20190717042225-c3de453c63f4/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=",
          "104: github.com/alecthomas/units v0.0.0-20190924025748-f65c72e2690d/go.mod h1:rBZYJk541a8SKzHPHnH3zbiI+7dagKZ0cgpgrD7Fyho=",
          "105: github.com/antihax/optional v1.0.0/go.mod h1:uupD/76wgC+ih3iEmQUL+0Ugr19nfwCT1kdvxnR2qWY=",
          "106: github.com/armon/go-radix v0.0.0-20180808171621-7fddfc383310/go.mod h1:ufUuZ+zHj4x4TnLV4JWEpy2hxWSpsRywHrMgIH9cCH8=",
          "107: github.com/armon/go-socks5 v0.0.0-20160902184237-e75332964ef5 h1:0CwZNZbxp69SHPdPJAN/hZIm0C4OItdklCFmMRWYpio=",
          "108: github.com/aws/aws-sdk-go v1.44.231 h1:wH/ihcZzBv8F443PyRoUogWnEdDp1KYtSew7ji9LNIY=",
          "109: github.com/aws/aws-sdk-go v1.44.231/go.mod h1:aVsgQcEevwlmQ7qHE9I3h+dtQgpqhFB+i8Phjh7fkwI=",
          "110: github.com/aws/aws-sdk-go-v2 v1.17.7 h1:CLSjnhJSTSogvqUGhIC6LqFKATMRexcxLZ0i/Nzk9Eg=",
          "",
          "[Removed Lines]",
          "98: github.com/ProtonMail/go-crypto v0.0.0-20220407094043-a94812496cf5 h1:cSHEbLj0GZeHM1mWG84qEnGFojNEQ83W7cwaPRjcwXU=",
          "99: github.com/ProtonMail/go-crypto v0.0.0-20220407094043-a94812496cf5/go.mod h1:z4/9nQmJSSwwds7ejkxaJwO37dru3geImFUdJlaLzQo=",
          "",
          "[Added Lines]",
          "98: github.com/ProtonMail/go-crypto v0.0.0-20221026131551-cf6655e29de4 h1:ra2OtmuW0AE5csawV4YXMNGNQQXvLRps3z2Z59OPO+I=",
          "99: github.com/ProtonMail/go-crypto v0.0.0-20221026131551-cf6655e29de4/go.mod h1:UBYPn8k0D56RtnR8RFQMjmh4KrZzWJ5o7Z9SYjossQ8=",
          "100: github.com/acomagu/bufpipe v1.0.3 h1:fxAGrHZTgQ9w5QqVItgzwj235/uYZYgbXitB+dLupOk=",
          "101: github.com/acomagu/bufpipe v1.0.3/go.mod h1:mxdxdup/WdsKVreO5GpW4+M/1CE2sMG4jeGJ2sYmHc4=",
          "107: github.com/anmitsu/go-shlex v0.0.0-20200514113438-38f4b401e2be/go.mod h1:ySMOLuWl6zY27l47sB3qLNK6tF2fkHG55UZxx8oIVo4=",
          "111: github.com/armon/go-socks5 v0.0.0-20160902184237-e75332964ef5/go.mod h1:wHh0iHkYZB8zMSxRWpUBQtwG5a7fFgvEO+odwuTv2gs=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "143: github.com/blang/semver v3.5.1+incompatible h1:cQNTCjp13qL8KC3Nbxr/y2Bqb63oX6wdnnjpJbkM4JQ=",
          "144: github.com/blang/semver v3.5.1+incompatible/go.mod h1:kRBLl5iJ+tD4TcOOxsy/0fnwebNt5EWlYSAyrTnjyyk=",
          "145: github.com/buger/jsonparser v1.1.1/go.mod h1:6RYKKt7H4d4+iWqouImQ9R2FZql3VbhNgx27UK13J/0=",
          "146: github.com/cenkalti/backoff v2.2.1+incompatible h1:tNowT99t7UNflLxfYYSlKYsBpXdEet03Pg2g16Swow4=",
          "147: github.com/cenkalti/backoff/v3 v3.2.2 h1:cfUAAO3yvKMYKPrvhDuHSwQnhZNk/RMHKdZqKTxfm6M=",
          "148: github.com/cenkalti/backoff/v3 v3.2.2/go.mod h1:cIeZDE3IrqwwJl6VUwCN6trj1oXrTS4rc0ij+ULvLYs=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "150: github.com/bwesterb/go-ristretto v1.2.0/go.mod h1:fUIoIZaG73pV5biE2Blr2xEzDoMj7NFEuV9ekS419A0=",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "162: github.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=",
          "163: github.com/cilium/ebpf v0.7.0/go.mod h1:/oI2+1shJiTGAMgl6/RgJr36Eo1jzrRcAWbcXO2usCA=",
          "164: github.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=",
          "165: github.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=",
          "166: github.com/cncf/udpa/go v0.0.0-20201120205902-5459f2c99403/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=",
          "167: github.com/cncf/xds/go v0.0.0-20210312221358-fbca930ec8ed/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "170: github.com/cloudflare/circl v1.1.0 h1:bZgT/A+cikZnKIwn7xL2OBj012Bmvho/o6RpRvv3GKY=",
          "171: github.com/cloudflare/circl v1.1.0/go.mod h1:prBCrKB9DV4poKZY1l9zBXg2QJY7mvgRvtMxxK7fi4I=",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "195: github.com/elazarl/goproxy v0.0.0-20180725130230-947c36da3153 h1:yUdfgN0XgIJw7foRItutHYUIhlcKzcSf5vDpdhQAKTc=",
          "196: github.com/emicklei/go-restful/v3 v3.10.0 h1:X4gma4HM7hFm6WMeAsTfqA0GOfdNoCzBIkHGoRLGXuM=",
          "197: github.com/emicklei/go-restful/v3 v3.10.0/go.mod h1:6n3XBCmQQb25CM2LCACGz8ukIrRry+4bhvbpWn3mrbc=",
          "198: github.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=",
          "199: github.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=",
          "200: github.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "205: github.com/emirpasic/gods v1.18.1/go.mod h1:8tpGGwCnJ5H4r6BWwaV6OrWmMoPhUl5jm/FMNAnJvWQ=",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "212: github.com/fatih/color v1.13.0 h1:8LOYc1KYPPmyKMuN8QV2DNRWNbLo6LZ0iLs8+mlH53w=",
          "213: github.com/fatih/color v1.13.0/go.mod h1:kLAiJbzzSOZDVNGyDpeOxJ47H46qBXwg5ILebYFFOfk=",
          "214: github.com/flowstack/go-jsonschema v0.1.1/go.mod h1:yL7fNggx1o8rm9RlgXv7hTBWxdBM0rVwpMwimd3F3N0=",
          "215: github.com/fluxcd/pkg/apis/acl v0.1.0 h1:EoAl377hDQYL3WqanWCdifauXqXbMyFuK82NnX6pH4Q=",
          "216: github.com/fluxcd/pkg/apis/acl v0.1.0/go.mod h1:zfEZzz169Oap034EsDhmCAGgnWlcWmIObZjYMusoXS8=",
          "217: github.com/fluxcd/pkg/apis/event v0.4.1 h1:63wP8NM/uA4680F4Ft8q8/0rJivX90i7FmMkRvUI8Is=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "223: github.com/fluxcd/go-git/v5 v5.0.0-20221219190809-2e5c9d01cfc4 h1:Gm5sGGk+/Wq6RhX4xpCZ2IqjDp5XkjlhENaAuAlpdKc=",
          "224: github.com/fluxcd/go-git/v5 v5.0.0-20221219190809-2e5c9d01cfc4/go.mod h1:raWgfUV7lDQVXp4QXUaeNNJkRVKz97UQuF+0kdY7Vmo=",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "222: github.com/fluxcd/pkg/apis/meta v1.0.0/go.mod h1:04ZdpZYm1x+aL93K4daNHW1UX6E8K7Gyf5za9OhrE+U=",
          "223: github.com/fluxcd/pkg/http/fetch v0.4.0 h1:76g9F7iFCdFQ9tvNKjYUtbNfw+bDEp5riwWvobTFOjM=",
          "224: github.com/fluxcd/pkg/http/fetch v0.4.0/go.mod h1:LmdHmevj0wBSQkKMuIObUyK/4akQi4KMhavm3GA0XEc=",
          "227: github.com/fluxcd/pkg/runtime v0.35.0 h1:9PYLcul8qdfLYQArcYpHe/QuMqyhAGGFN9F7uY/QVX4=",
          "228: github.com/fluxcd/pkg/runtime v0.35.0/go.mod h1:sAaSTH8RHj3Y99xj0AtAndDTe5cv0DP4enyLV62EO78=",
          "229: github.com/fluxcd/pkg/ssa v0.27.0 h1:BJnWDy3xDtYD2U+sVZPkoh6PfnQKoXsklO0pzojU8XU=",
          "230: github.com/fluxcd/pkg/ssa v0.27.0/go.mod h1:fxvmVf4FxodJi5lTglMcL8JsF6hfJLG99C56/CgchH0=",
          "231: github.com/fluxcd/pkg/tar v0.2.0 h1:HEUHgONQYsJGeZZ4x6h5nQU9Aox1I4T3bOp1faWTqf8=",
          "",
          "[Removed Lines]",
          "225: github.com/fluxcd/pkg/kustomize v0.14.0 h1:XsvGTRsTMlW5u3+ciNChzp3c755SXG5PiCozjyLQYX0=",
          "226: github.com/fluxcd/pkg/kustomize v0.14.0/go.mod h1:1PmtFOgx3Rn7uoB5C1NVbb0DxXPdY3v0lBX3L9ozCZw=",
          "",
          "[Added Lines]",
          "235: github.com/fluxcd/pkg/kustomize v1.1.0 h1:4qoTJBCtlg9RbO6YUwTNV3SttvXRIZxkjRRJE+jbsKk=",
          "236: github.com/fluxcd/pkg/kustomize v1.1.0/go.mod h1:i+Z9iPAoSz28oH0FmDI73iqZ3oXZxQR2O3HfhdsWhfo=",
          "239: github.com/fluxcd/pkg/sourceignore v0.3.3 h1:Ue29JAuPECEYdvIqdpXpQaDxpeySn7amarLArp7XoIs=",
          "240: github.com/fluxcd/pkg/sourceignore v0.3.3/go.mod h1:yuJzKggph0Bdbk9LgXjJQhvJZSTJV/1vS7mJuB7mPa0=",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "238: github.com/fsnotify/fsnotify v1.6.0 h1:n+5WquG0fcWoWp6xPWfHdbskMCQaFnG6PfBrh1Ky4HY=",
          "239: github.com/fsnotify/fsnotify v1.6.0/go.mod h1:sl3t1tCWJFWoRz9R8WJCbQihKKwmorjAbSClcnxKAGw=",
          "240: github.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=",
          "241: github.com/go-errors/errors v1.4.2 h1:J6MZopCL4uSllY1OfXM374weqZFFItUbrImctkmUxIA=",
          "242: github.com/go-errors/errors v1.4.2/go.mod h1:sIVyrIiJhuEF+Pj9Ebtd6P/rEYROXFi3BopGUQ5a5Og=",
          "243: github.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1/go.mod h1:vR7hzQXu2zJy9AVAgeJqvqgH9Q5CA+iKCZ2gyEVpxRU=",
          "244: github.com/go-gl/glfw/v3.3/glfw v0.0.0-20191125211704-12ad95a8df72/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=",
          "245: github.com/go-gl/glfw/v3.3/glfw v0.0.0-20200222043503-6f7a984d4dc4/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "253: github.com/gliderlabs/ssh v0.3.5/go.mod h1:8XB4KraRrX39qHhT6yxPsHedjA08I/uBVwj4xC+/+z4=",
          "256: github.com/go-git/gcfg v1.5.0 h1:Q5ViNfGF8zFgyJWPqYwA7qGFoMTEiBmdlkcfRmpIMa4=",
          "257: github.com/go-git/gcfg v1.5.0/go.mod h1:5m20vg6GwYabIxaOonVkTdrILxQMpEShl1xiMF4ua+E=",
          "258: github.com/go-git/go-billy/v5 v5.3.1 h1:CPiOUAzKtMRvolEKw+bG1PLRpT7D3LIs3/3ey4Aiu34=",
          "259: github.com/go-git/go-billy/v5 v5.3.1/go.mod h1:pmpqyWchKfYfrkb/UVH4otLvyi/5gJlGI4Hb3ZqZ3W0=",
          "260: github.com/go-git/go-git-fixtures/v4 v4.3.1/go.mod h1:8LHG1a3SRW71ettAD/jW13h8c6AqjVSeL11RAdgaqpo=",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "391: github.com/imdario/mergo v0.3.13/go.mod h1:4lJ1jqUDcsbIECGy0RUJAXNIhg+6ocWgb1ALK2O4oXg=",
          "392: github.com/inconshreveable/mousetrap v1.0.1 h1:U3uMjPSQEBMNp1lFxmllqCPM6P5u/Xq7Pgzkat/bFNc=",
          "393: github.com/inconshreveable/mousetrap v1.0.1/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=",
          "394: github.com/jessevdk/go-flags v1.4.0/go.mod h1:4FA24M0QyGHXBuZZK/XkWh8h0e1EYbRYJSGM75WSRxI=",
          "395: github.com/jmespath/go-jmespath v0.4.0 h1:BEgLn5cpjn8UN1mAw4NjwDrS35OdebyEtFe+9YPoQUg=",
          "396: github.com/jmespath/go-jmespath v0.4.0/go.mod h1:T8mJZnbsbmF+m6zOOFylbeCJqk5+pHWvzYPziyZiYoo=",
          "397: github.com/jmespath/go-jmespath/internal/testify v1.5.1 h1:shLQSRRSCCPj3f2gpwzGwWFoC7ycTf1rcQZHOlsJ6N8=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "412: github.com/jbenet/go-context v0.0.0-20150711004518-d14ea06fba99 h1:BQSFePA1RWJOlocH6Fxy8MmwDt+yVQYULKfN0RoTN8A=",
          "413: github.com/jbenet/go-context v0.0.0-20150711004518-d14ea06fba99/go.mod h1:1lJo3i6rXxKeerYnT8Nvf0QmHCRC1n8sfWVwXF2Frvo=",
          "415: github.com/jessevdk/go-flags v1.5.0/go.mod h1:Fw0T6WPc1dYxT4mKEZRfG5kJhaTDP9pj1c2EWnYs/m4=",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "408: github.com/jstemmer/go-junit-report v0.9.1/go.mod h1:Brl9GWCQeLvo8nXZwPNNblvFj/XSXhF0NWZEnDohbsk=",
          "409: github.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=",
          "410: github.com/julienschmidt/httprouter v1.3.0/go.mod h1:JR6WtHb+2LUe8TCKY3cZOxFyyO8IZAc4RVcycCCAKdM=",
          "411: github.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=",
          "412: github.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=",
          "413: github.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "432: github.com/kevinburke/ssh_config v1.2.0/go.mod h1:CT57kijsi8u/K/BOFA39wgDQJ9CxiF4nAY/ojJ6r6mM=",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "429: github.com/liggitt/tabwriter v0.0.0-20181228230101-89fcab3d43de/go.mod h1:zAbeS9B/r2mtpb6U+EI2rYA5OAXxsYw6wTamcNW+zcE=",
          "430: github.com/mailru/easyjson v0.7.7 h1:UGYAvKxe3sBsEDzO8ZeWOSlIQfWFlxbzLZe7hwFURr0=",
          "431: github.com/mailru/easyjson v0.7.7/go.mod h1:xzfreul335JAWq5oZzymOObrkdz5UnU4kGfJJLY9Nlc=",
          "432: github.com/mattn/go-colorable v0.0.9/go.mod h1:9vuHe8Xs5qXnSaW/c/ABM9alt+Vo+STaOChaDxuIBZU=",
          "433: github.com/mattn/go-colorable v0.1.9/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=",
          "434: github.com/mattn/go-colorable v0.1.12 h1:jF+Du6AlPIjs2BiUiQlKOX0rt3SujHxPnksPKZbaA40=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "454: github.com/matryer/is v1.2.0 h1:92UTHpy8CDwaJ08GqLDzhhuixiBUUD1p3AU6PHddz4A=",
          "455: github.com/matryer/is v1.2.0/go.mod h1:2fLPjFQM9rhQ15aVEtbuwhJinnOqrmgXPNdZsdwlWXA=",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "468: github.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=",
          "469: github.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=",
          "470: github.com/mwitkow/go-conntrack v0.0.0-20190716064945-2f068394615f/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=",
          "471: github.com/onsi/ginkgo/v2 v2.9.2 h1:BA2GMJOtfGAfagzYtrAlufIP0lq6QERkFmHLMLPwFSU=",
          "472: github.com/onsi/gomega v1.27.5 h1:T/X6I0RNFw/kTqgfkZPcQ5KU6vCnWNBGdtrIx2dpGeQ=",
          "473: github.com/onsi/gomega v1.27.5/go.mod h1:PIQNjfQwkP3aQAH7lf7j87O/5FiNr+ZR8+ipb+qQlhg=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "495: github.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e/go.mod h1:zD1mROLANZcx1PVRCS0qkT7pwLkGfwJo4zjcN/Tysno=",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "487: github.com/otiai10/copy v1.9.0 h1:7KFNiCgZ91Ru4qW4CWPf/7jqtxLagGRmIxWldPP9VY4=",
          "488: github.com/peterbourgon/diskv v2.0.1+incompatible h1:UBdAOUP5p4RWqPBg048CAvpKN+vxiaj6gdUUzhl4XmI=",
          "489: github.com/peterbourgon/diskv v2.0.1+incompatible/go.mod h1:uqqh8zWWbv1HBMNONnaR/tNboyR3/BZd58JJSHlUSCU=",
          "490: github.com/pkg/browser v0.0.0-20210911075715-681adbf594b8 h1:KoWmjvw+nsYOo29YJK9vDA65RGE3NrOnUtO7a+RF9HU=",
          "491: github.com/pkg/browser v0.0.0-20210911075715-681adbf594b8/go.mod h1:HKlIX3XHQyzLZPlr7++PzdhaXEj94dEiJgZDTsxEqUI=",
          "492: github.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "515: github.com/pjbgf/sha1cd v0.2.3/go.mod h1:HOK9QrgzdHpbc2Kzip0Q1yi3M2MFGPADtR6HjG65m5M=",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "533: github.com/ryanuber/go-glob v1.0.0/go.mod h1:807d1WSdnB0XRJzKNil9Om6lcp/3a0v4qIHxIXzX/Yc=",
          "534: github.com/seccomp/libseccomp-golang v0.9.2-0.20220502022130-f33da4d89646/go.mod h1:JA8cRccbGaA1s33RQf7Y1+q9gHmZX1yB/z9WDN1C6fg=",
          "535: github.com/sergi/go-diff v1.1.0 h1:we8PVUC3FE2uYfodKH/nBHMSetSfHDR6scGdBi+erh0=",
          "536: github.com/shurcooL/sanitized_anchor_name v1.0.0/go.mod h1:1NzhyTcUVG4SuEtjjoZeVRXNmyL/1OwPU0+IJeTBvfc=",
          "537: github.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=",
          "538: github.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "562: github.com/sergi/go-diff v1.1.0/go.mod h1:STckp+ISIX8hZLjrqAeVduY0gWCT9IjLuqbuNXdaHfM=",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "541: github.com/sirupsen/logrus v1.8.1/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=",
          "542: github.com/sirupsen/logrus v1.9.0 h1:trlNQbNUG3OdDrDil03MCb1H2o9nJ1x4/5LYw7byDE0=",
          "543: github.com/sirupsen/logrus v1.9.0/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=",
          "544: github.com/spaolacci/murmur3 v0.0.0-20180118202830-f09979ecbc72/go.mod h1:JwIasOWyU6f++ZhiEuf87xNszmSA2myDM2Kzu9HwQUA=",
          "545: github.com/spf13/cobra v1.6.1 h1:o94oiPyS4KD1mPy2fmcYYHHfCxLqYjJOhGsCHFZtEzA=",
          "546: github.com/spf13/cobra v1.6.1/go.mod h1:IOw/AERYS7UzyrGinqmz6HLUo219MORXGxhbaJUqzrY=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "571: github.com/skeema/knownhosts v1.1.0/go.mod h1:sKFq3RD6/TKZkSWn8boUbDC7Qkgcv+8XXijpFO6roag=",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "566: github.com/urfave/cli v1.22.1/go.mod h1:Gos4lmkARVdJ6EkW0WaNv/tZAAMe9V7XWyB60NtXRu0=",
          "567: github.com/vishvananda/netlink v1.1.0/go.mod h1:cTgwzPIzzgDAYoQrMm0EdrjRUBkTqKYppBueQtXaqoE=",
          "568: github.com/vishvananda/netns v0.0.0-20191106174202-0a2b9b5464df/go.mod h1:JP3t17pCcGlemwknint6hfoeCVQrEMVwxRLRjXpq+BU=",
          "569: github.com/xeipuuv/gojsonpointer v0.0.0-20180127040702-4e3ac2762d5f h1:J9EGpcZtP0E/raorCMxlFGSTBrsSlaDGf3jU/qvAE2c=",
          "570: github.com/xeipuuv/gojsonpointer v0.0.0-20180127040702-4e3ac2762d5f/go.mod h1:N2zxlSyiKSe5eX1tZViRH5QA0qijqEDrYZiPEAiq3wU=",
          "571: github.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415 h1:EzJWgHovont7NscjpAxXsDA8S8BMYve8Y5+7cuRE7R0=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "597: github.com/xanzy/ssh-agent v0.3.2/go.mod h1:6dzNDKs0J9rVPHPhaGCukekBHKqfl+L3KghI1Bc68Uw=",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "616: golang.org/x/crypto v0.0.0-20190605123033-f99c8df09eb5/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=",
          "617: golang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=",
          "618: golang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=",
          "620: golang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "621: golang.org/x/crypto v0.0.0-20211215153901-e495a2d5b3d3/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=",
          "622: golang.org/x/crypto v0.6.0 h1:qfktjS5LUO+fFKeJXZ+ikTRijMmljikvG68fpMMruSc=",
          "623: golang.org/x/crypto v0.6.0/go.mod h1:OFC/31mSvZgRz0V1QTNCzfAI1aIRzbiufJtkMIlEp58=",
          "624: golang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=",
          "",
          "[Removed Lines]",
          "619: golang.org/x/crypto v0.0.0-20210322153248-0c34fe9e7dc2/go.mod h1:T9bdIzuCu7OtxOm1hfPfRQxPLYneinmdGuTeoZ9dtd4=",
          "",
          "[Added Lines]",
          "650: golang.org/x/crypto v0.0.0-20220525230936-793ad666bf5e/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=",
          "651: golang.org/x/crypto v0.0.0-20220622213112-05595931fe9d/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=",
          "652: golang.org/x/crypto v0.0.0-20220826181053-bd7e27e6170d/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=",
          "653: golang.org/x/crypto v0.1.0/go.mod h1:RecgLatLF4+eUMCP1PoPZQb+cVrJcOPbHkTkbkB9sbw=",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "691: golang.org/x/net v0.0.0-20220127200216-cd36cc0744dd/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=",
          "692: golang.org/x/net v0.0.0-20220225172249-27dd8689420f/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=",
          "693: golang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=",
          "694: golang.org/x/net v0.1.0/go.mod h1:Cx3nUiGt4eDBEyega/BKRp+/AlGL8hYe7U9odMt2Cco=",
          "695: golang.org/x/net v0.8.0 h1:Zrh2ngAOFYneWTAIAPethzeaQLuHwhuBkuV6ZiRnUaQ=",
          "696: golang.org/x/net v0.8.0/go.mod h1:QVkue5JL9kW//ek3r6jTKnTFis1tRmNAW2P1shuFdJc=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "726: golang.org/x/net v0.0.0-20220826154423-83b083e8dc8b/go.mod h1:YDH+HFinaLZZlnHAfSS6ZXJJ9M9t4Dl22yv3iI2vPwk=",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "754: golang.org/x/sys v0.0.0-20201014080544-cc95f250f6bc/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "755: golang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "756: golang.org/x/sys v0.0.0-20210124154548-22da62e12c0c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "757: golang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "758: golang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "759: golang.org/x/sys v0.0.0-20210510120138-977fb7262007/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "790: golang.org/x/sys v0.0.0-20210320140829-1e4c9ba3b0c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "764: golang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "765: golang.org/x/sys v0.0.0-20210906170528-6f6e22806c34/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "766: golang.org/x/sys v0.0.0-20210927094055-39ccf1dd6fa6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "767: golang.org/x/sys v0.0.0-20211025201205-69cdffdb9359/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "768: golang.org/x/sys v0.0.0-20211116061358-0a5406a5449c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "769: golang.org/x/sys v0.0.0-20211216021012-1d35b9e2eb4e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "801: golang.org/x/sys v0.0.0-20211007075335-d3039528d8ac/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "771: golang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "772: golang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "773: golang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "774: golang.org/x/sys v0.0.0-20220908164124-27713097b956/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "775: golang.org/x/sys v0.1.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "776: golang.org/x/sys v0.6.0 h1:MVltZSvRTcU2ljQOhs94SXPftV6DCNnZViHeQps87pQ=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "809: golang.org/x/sys v0.0.0-20220728004956-3c1f35247d10/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "810: golang.org/x/sys v0.0.0-20220825204002-c680a09ffe64/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "778: golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=",
          "779: golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=",
          "780: golang.org/x/term v0.0.0-20220526004731-065cf7ba2467/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=",
          "781: golang.org/x/term v0.1.0/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=",
          "782: golang.org/x/term v0.6.0 h1:clScbb1cHjoCkyRbWwBEUZ5H/tIFu5TAXIqaZD0Gcjw=",
          "783: golang.org/x/term v0.6.0/go.mod h1:m6U89DPEgQRMq3DNkDClhWw02AUbt2daBVO4cn4Hv9U=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "818: golang.org/x/term v0.0.0-20220722155259-a9ba230a4035/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "944: gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "945: gopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "946: gopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "947: gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=",
          "948: gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=",
          "949: gopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "985: gopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "955: gopkg.in/square/go-jose.v2 v2.6.0/go.mod h1:M9dMgbHiYLoDGQrXy7OpJDJWiKiU//h+vD76mk0e1AI=",
          "956: gopkg.in/urfave/cli.v1 v1.20.0 h1:NdAVW6RYxDif9DhDHaAortIu956m2c0v+09AZBPTbE0=",
          "957: gopkg.in/urfave/cli.v1 v1.20.0/go.mod h1:vuBzUtMdQeixQj8LVd+/98pzhxNGQoyuPBlsXHOQNO0=",
          "958: gopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=",
          "959: gopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=",
          "960: gopkg.in/yaml.v2 v2.2.3/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "997: gopkg.in/warnings.v0 v0.1.2 h1:wFXVbFY8DY5/xOe1ECiWdKCzZlxgshcYVNkBHstARME=",
          "998: gopkg.in/warnings.v0 v0.1.2/go.mod h1:jksf8JmL6Qr/oQM2OXTHunEvvTAsrWBLb6OOjuVWRNI=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3708bc74ac3260d0693686164f30063273a25072",
      "candidate_info": {
        "commit_hash": "3708bc74ac3260d0693686164f30063273a25072",
        "repo": "fluxcd/kustomize-controller",
        "commit_url": "https://github.com/fluxcd/kustomize-controller/commit/3708bc74ac3260d0693686164f30063273a25072",
        "files": [
          "api/go.mod",
          "api/go.sum",
          "go.mod",
          "go.sum"
        ],
        "message": "Update dependencies - k8s.io/* v0.24.3 - github.com/aws/aws-sdk-go v1.44.70 - sigs.k8s.io/cli-utils v0.32.0 - sigs.k8s.io/kustomize/api v0.12.1\n\nSigned-off-by: Stefan Prodan <stefan.prodan@gmail.com>",
        "before_after_code_files": [
          "api/go.mod||api/go.mod",
          "api/go.sum||api/go.sum",
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ]
        }
      },
      "candidate_diff": {
        "api/go.mod||api/go.mod": [
          "File: api/go.mod -> api/go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: require (",
          "6:  github.com/fluxcd/pkg/apis/kustomize v0.4.2",
          "7:  github.com/fluxcd/pkg/apis/meta v0.14.2",
          "10:  sigs.k8s.io/controller-runtime v0.11.2",
          "11: )",
          "",
          "[Removed Lines]",
          "8:  k8s.io/apiextensions-apiserver v0.24.1",
          "9:  k8s.io/apimachinery v0.24.1",
          "",
          "[Added Lines]",
          "8:  k8s.io/apiextensions-apiserver v0.24.3",
          "9:  k8s.io/apimachinery v0.24.3",
          "",
          "---------------"
        ],
        "api/go.sum||api/go.sum": [
          "File: api/go.sum -> api/go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "889: honnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=",
          "890: honnef.co/go/tools v0.0.1-2020.1.3/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=",
          "891: honnef.co/go/tools v0.0.1-2020.1.4/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=",
          "902: k8s.io/gengo v0.0.0-20210813121822-485abfe95c7c/go.mod h1:FiNAH4ZV3gBg2Kwh89tzAEV2be7d5xI0vBa/VySYy3E=",
          "903: k8s.io/gengo v0.0.0-20211129171323-c02415ce4185/go.mod h1:FiNAH4ZV3gBg2Kwh89tzAEV2be7d5xI0vBa/VySYy3E=",
          "904: k8s.io/klog/v2 v2.0.0/go.mod h1:PBfzABfn139FHAV07az/IF9Wp1bkk3vpT2XSJ76fSDE=",
          "",
          "[Removed Lines]",
          "892: k8s.io/api v0.24.1 h1:BjCMRDcyEYz03joa3K1+rbshwh1Ay6oB53+iUx2H8UY=",
          "893: k8s.io/api v0.24.1/go.mod h1:JhoOvNiLXKTPQ60zh2g0ewpA+bnEYf5q44Flhquh4vQ=",
          "894: k8s.io/apiextensions-apiserver v0.24.1 h1:5yBh9+ueTq/kfnHQZa0MAo6uNcPrtxPMpNQgorBaKS0=",
          "895: k8s.io/apiextensions-apiserver v0.24.1/go.mod h1:A6MHfaLDGfjOc/We2nM7uewD5Oa/FnEbZ6cD7g2ca4Q=",
          "896: k8s.io/apimachinery v0.24.1 h1:ShD4aDxTQKN5zNf8K1RQ2u98ELLdIW7jEnlO9uAMX/I=",
          "897: k8s.io/apimachinery v0.24.1/go.mod h1:82Bi4sCzVBdpYjyI4jY6aHX+YCUchUIrZrXKedjd2UM=",
          "898: k8s.io/apiserver v0.24.1/go.mod h1:dQWNMx15S8NqJMp0gpYfssyvhYnkilc1LpExd/dkLh0=",
          "899: k8s.io/client-go v0.24.1/go.mod h1:f1kIDqcEYmwXS/vTbbhopMUbhKp2JhOeVTfxgaCIlF8=",
          "900: k8s.io/code-generator v0.24.1/go.mod h1:dpVhs00hTuTdTY6jvVxvTFCk6gSMrtfRydbhZwHI15w=",
          "901: k8s.io/component-base v0.24.1/go.mod h1:DW5vQGYVCog8WYpNob3PMmmsY8A3L9QZNg4j/dV3s38=",
          "",
          "[Added Lines]",
          "892: k8s.io/api v0.24.3 h1:tt55QEmKd6L2k5DP6G/ZzdMQKvG5ro4H4teClqm0sTY=",
          "893: k8s.io/api v0.24.3/go.mod h1:elGR/XSZrS7z7cSZPzVWaycpJuGIw57j9b95/1PdJNI=",
          "894: k8s.io/apiextensions-apiserver v0.24.3 h1:kyx+Tmro1qEsTUr07ZGQOfvTsF61yn+AxnxytBWq8As=",
          "895: k8s.io/apiextensions-apiserver v0.24.3/go.mod h1:cL0xkmUefpYM4f6IuOau+6NMFEIh6/7wXe/O4vPVJ8A=",
          "896: k8s.io/apimachinery v0.24.3 h1:hrFiNSA2cBZqllakVYyH/VyEh4B581bQRmqATJSeQTg=",
          "897: k8s.io/apimachinery v0.24.3/go.mod h1:82Bi4sCzVBdpYjyI4jY6aHX+YCUchUIrZrXKedjd2UM=",
          "898: k8s.io/apiserver v0.24.3/go.mod h1:aXfwtIn4U27B7lYs5f2BKgz6DRbgWy+HJeYReN1jLJ8=",
          "899: k8s.io/client-go v0.24.3/go.mod h1:AAovolf5Z9bY1wIg2FZ8LPQlEdKHjLI7ZD4rw920BJw=",
          "900: k8s.io/code-generator v0.24.3/go.mod h1:dpVhs00hTuTdTY6jvVxvTFCk6gSMrtfRydbhZwHI15w=",
          "901: k8s.io/component-base v0.24.3/go.mod h1:bqom2IWN9Lj+vwAkPNOv2TflsP1PeVDIwIN0lRthxYY=",
          "",
          "---------------"
        ],
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:  github.com/Azure/azure-sdk-for-go/sdk/azcore v0.22.0",
          "11:  github.com/Azure/azure-sdk-for-go/sdk/azidentity v0.13.2",
          "12:  github.com/Azure/azure-sdk-for-go/sdk/keyvault/azkeys v0.4.0",
          "19:  github.com/cyphar/filepath-securejoin v0.2.3",
          "20:  github.com/dimchansky/utfbom v1.1.1",
          "21:  github.com/drone/envsubst v1.0.3",
          "",
          "[Removed Lines]",
          "13:  github.com/aws/aws-sdk-go v1.44.53",
          "14:  github.com/aws/aws-sdk-go-v2 v1.16.7",
          "15:  github.com/aws/aws-sdk-go-v2/config v1.15.14",
          "16:  github.com/aws/aws-sdk-go-v2/credentials v1.12.9",
          "17:  github.com/aws/aws-sdk-go-v2/service/kms v1.17.5",
          "18:  github.com/aws/aws-sdk-go-v2/service/sts v1.16.9",
          "",
          "[Added Lines]",
          "13:  github.com/aws/aws-sdk-go v1.44.70",
          "14:  github.com/aws/aws-sdk-go-v2 v1.16.8",
          "15:  github.com/aws/aws-sdk-go-v2/config v1.15.15",
          "16:  github.com/aws/aws-sdk-go-v2/credentials v1.12.10",
          "17:  github.com/aws/aws-sdk-go-v2/service/kms v1.18.1",
          "18:  github.com/aws/aws-sdk-go-v2/service/sts v1.16.10",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "23:  github.com/fluxcd/pkg/apis/acl v0.0.3",
          "24:  github.com/fluxcd/pkg/apis/kustomize v0.4.2",
          "25:  github.com/fluxcd/pkg/apis/meta v0.14.2",
          "27:  github.com/fluxcd/pkg/runtime v0.16.2",
          "28:  github.com/fluxcd/pkg/ssa v0.17.0",
          "29:  github.com/fluxcd/pkg/testserver v0.2.0",
          "",
          "[Removed Lines]",
          "26:  github.com/fluxcd/pkg/kustomize v0.5.2",
          "",
          "[Added Lines]",
          "26:  github.com/fluxcd/pkg/kustomize v0.5.3",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "31:  github.com/fluxcd/source-controller/api v0.26.0",
          "32:  github.com/hashicorp/go-retryablehttp v0.7.1",
          "33:  github.com/hashicorp/vault/api v1.7.2",
          "35:  github.com/ory/dockertest v3.3.5+incompatible",
          "36:  github.com/spf13/pflag v1.0.5",
          "37:  go.mozilla.org/sops/v3 v3.7.3",
          "41:  google.golang.org/grpc v1.48.0",
          "48:  sigs.k8s.io/controller-runtime v0.11.2",
          "50:  sigs.k8s.io/yaml v1.3.0",
          "51: )",
          "54: replace (",
          "57: )",
          "",
          "[Removed Lines]",
          "34:  github.com/onsi/gomega v1.19.0",
          "38:  golang.org/x/net v0.0.0-20220708220712-1185a9018129",
          "39:  google.golang.org/api v0.87.0",
          "40:  google.golang.org/genproto v0.0.0-20220712132514-bdd2acd4974d",
          "42:  google.golang.org/protobuf v1.28.0",
          "43:  k8s.io/api v0.24.1",
          "44:  k8s.io/apiextensions-apiserver v0.24.1",
          "45:  k8s.io/apimachinery v0.24.1",
          "46:  k8s.io/client-go v0.24.1",
          "47:  sigs.k8s.io/cli-utils v0.31.2",
          "49:  sigs.k8s.io/kustomize/api v0.12.0",
          "55:  sigs.k8s.io/kustomize/api => sigs.k8s.io/kustomize/api v0.12.0",
          "56:  sigs.k8s.io/kustomize/kyaml => sigs.k8s.io/kustomize/kyaml v0.13.8",
          "",
          "[Added Lines]",
          "34:  github.com/onsi/gomega v1.20.0",
          "38:  golang.org/x/net v0.0.0-20220805013720-a33c5aa5df48",
          "39:  google.golang.org/api v0.91.0",
          "40:  google.golang.org/genproto v0.0.0-20220808145710-bf34ca4dd83a",
          "42:  google.golang.org/protobuf v1.28.1",
          "43:  k8s.io/api v0.24.3",
          "44:  k8s.io/apiextensions-apiserver v0.24.3",
          "45:  k8s.io/apimachinery v0.24.3",
          "46:  k8s.io/client-go v0.24.3",
          "47:  sigs.k8s.io/cli-utils v0.32.0",
          "49:  sigs.k8s.io/kustomize/api v0.12.1",
          "55:  sigs.k8s.io/kustomize/api => sigs.k8s.io/kustomize/api v0.12.1",
          "56:  sigs.k8s.io/kustomize/kyaml => sigs.k8s.io/kustomize/kyaml v0.13.9",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "95:  github.com/PuerkitoBio/urlesc v0.0.0-20170810143723-de5bf2ad4578 // indirect",
          "96:  github.com/armon/go-metrics v0.3.10 // indirect",
          "97:  github.com/armon/go-radix v1.0.0 // indirect",
          "104:  github.com/aws/smithy-go v1.12.0 // indirect",
          "105:  github.com/beorn7/perks v1.0.1 // indirect",
          "106:  github.com/blang/semver v3.5.1+incompatible // indirect",
          "",
          "[Removed Lines]",
          "98:  github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.12.8 // indirect",
          "99:  github.com/aws/aws-sdk-go-v2/internal/configsources v1.1.14 // indirect",
          "100:  github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.4.8 // indirect",
          "101:  github.com/aws/aws-sdk-go-v2/internal/ini v1.3.15 // indirect",
          "102:  github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.9.8 // indirect",
          "103:  github.com/aws/aws-sdk-go-v2/service/sso v1.11.12 // indirect",
          "",
          "[Added Lines]",
          "98:  github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.12.9 // indirect",
          "99:  github.com/aws/aws-sdk-go-v2/internal/configsources v1.1.15 // indirect",
          "100:  github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.4.9 // indirect",
          "101:  github.com/aws/aws-sdk-go-v2/internal/ini v1.3.16 // indirect",
          "102:  github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.9.9 // indirect",
          "103:  github.com/aws/aws-sdk-go-v2/service/sso v1.11.13 // indirect",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "189:  github.com/pierrec/lz4 v2.6.1+incompatible // indirect",
          "190:  github.com/pkg/browser v0.0.0-20210115035449-ce105d075bb4 // indirect",
          "191:  github.com/pkg/errors v0.9.1 // indirect",
          "193:  github.com/prometheus/client_golang v1.12.1 // indirect",
          "194:  github.com/prometheus/client_model v0.2.0 // indirect",
          "195:  github.com/prometheus/common v0.32.1 // indirect",
          "",
          "[Removed Lines]",
          "192:  github.com/pmezard/go-difflib v1.0.0 // indirect",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "198:  github.com/ryanuber/go-glob v1.0.0 // indirect",
          "199:  github.com/sirupsen/logrus v1.8.1 // indirect",
          "200:  github.com/spf13/cobra v1.4.0 // indirect",
          "202:  github.com/xlab/treeprint v1.1.0 // indirect",
          "203:  go.mozilla.org/gopgagent v0.0.0-20170926210634-4d7ea76ff71a // indirect",
          "204:  go.opencensus.io v0.23.0 // indirect",
          "",
          "[Removed Lines]",
          "201:  github.com/stretchr/testify v1.7.1 // indirect",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "208:  go.uber.org/zap v1.21.0 // indirect",
          "209:  golang.org/x/crypto v0.0.0-20220411220226-7b82a4e95df4 // indirect",
          "210:  golang.org/x/oauth2 v0.0.0-20220622183110-fd043fe589d2 // indirect",
          "212:  golang.org/x/term v0.0.0-20210927222741-03fcf44c2211 // indirect",
          "213:  golang.org/x/text v0.3.7 // indirect",
          "214:  golang.org/x/time v0.0.0-20220224211638-0e9765cccd65 // indirect",
          "",
          "[Removed Lines]",
          "211:  golang.org/x/sys v0.0.0-20220624220833-87e55d714810 // indirect",
          "",
          "[Added Lines]",
          "209:  golang.org/x/sys v0.0.0-20220728004956-3c1f35247d10 // indirect",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "219:  gopkg.in/square/go-jose.v2 v2.6.0 // indirect",
          "220:  gopkg.in/urfave/cli.v1 v1.20.0 // indirect",
          "221:  gopkg.in/yaml.v2 v2.4.0 // indirect",
          "223:  k8s.io/cli-runtime v0.24.0 // indirect",
          "225:  k8s.io/klog/v2 v2.60.1 // indirect",
          "226:  k8s.io/kube-openapi v0.0.0-20220401212409-b28bf2818661 // indirect",
          "227:  k8s.io/kubectl v0.24.0 // indirect",
          "228:  k8s.io/utils v0.0.0-20220210201930-3a6ce19ff2f9 // indirect",
          "229:  sigs.k8s.io/json v0.0.0-20211208200746-9f7c6b3444d2 // indirect",
          "231:  sigs.k8s.io/structured-merge-diff/v4 v4.2.1 // indirect",
          "232: )",
          "",
          "[Removed Lines]",
          "222:  gopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b // indirect",
          "224:  k8s.io/component-base v0.24.1 // indirect",
          "230:  sigs.k8s.io/kustomize/kyaml v0.13.8 // indirect",
          "",
          "[Added Lines]",
          "220:  gopkg.in/yaml.v3 v3.0.1 // indirect",
          "222:  k8s.io/component-base v0.24.3 // indirect",
          "228:  sigs.k8s.io/kustomize/kyaml v0.13.9 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "149: github.com/armon/go-socks5 v0.0.0-20160902184237-e75332964ef5 h1:0CwZNZbxp69SHPdPJAN/hZIm0C4OItdklCFmMRWYpio=",
          "150: github.com/armon/go-socks5 v0.0.0-20160902184237-e75332964ef5/go.mod h1:wHh0iHkYZB8zMSxRWpUBQtwG5a7fFgvEO+odwuTv2gs=",
          "151: github.com/asaskevich/govalidator v0.0.0-20190424111038-f61b66f89f4a/go.mod h1:lB+ZfQJz7igIIfQNfa7Ml4HSf2uFQQRzpGGRXenZAgY=",
          "176: github.com/aws/smithy-go v1.12.0 h1:gXpeZel/jPoWQ7OEmLIgCUnhkFftqNfwWUwAHSlp1v0=",
          "177: github.com/aws/smithy-go v1.12.0/go.mod h1:Tg+OJXh4MB2R/uN61Ko2f6hTZwB/ZYGOtib8J3gBHzA=",
          "178: github.com/benbjohnson/clock v1.0.3/go.mod h1:bGMdMPoPVvcYyt1gHDf4J2KE153Yf9BuiUKYMaxlTDM=",
          "",
          "[Removed Lines]",
          "152: github.com/aws/aws-sdk-go v1.44.53 h1:2MErE8gRyBLuE1fuH2Sqlj1xoN3S6/jXb0aO/A1jGfk=",
          "153: github.com/aws/aws-sdk-go v1.44.53/go.mod h1:y4AeaBuwd2Lk+GepC1E9v0qOiTws0MIWAX4oIKwKHZo=",
          "154: github.com/aws/aws-sdk-go-v2 v1.16.7 h1:zfBwXus3u14OszRxGcqCDS4MfMCv10e8SMJ2r8Xm0Ns=",
          "155: github.com/aws/aws-sdk-go-v2 v1.16.7/go.mod h1:6CpKuLXg2w7If3ABZCl/qZ6rEgwtjZTn4eAf4RcEyuw=",
          "156: github.com/aws/aws-sdk-go-v2/config v1.15.14 h1:+BqpqlydTq4c2et9Daury7gE+o67P4lbk7eybiCBNc4=",
          "157: github.com/aws/aws-sdk-go-v2/config v1.15.14/go.mod h1:CQBv+VVv8rR5z2xE+Chdh5m+rFfsqeY4k0veEZeq6QM=",
          "158: github.com/aws/aws-sdk-go-v2/credentials v1.12.9 h1:DloAJr0/jbvm0iVRFDFh8GlWxrOd9XKyX82U+dfVeZs=",
          "159: github.com/aws/aws-sdk-go-v2/credentials v1.12.9/go.mod h1:2Vavxl1qqQXJ8MUcQZTsIEW8cwenFCWYXtLRPba3L/o=",
          "160: github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.12.8 h1:VfBdn2AxwMbFyJN/lF/xuT3SakomJ86PZu3rCxb5K0s=",
          "161: github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.12.8/go.mod h1:oL1Q3KuCq1D4NykQnIvtRiBGLUXhcpY5pl6QZB2XEPU=",
          "162: github.com/aws/aws-sdk-go-v2/internal/configsources v1.1.14 h1:2C0pYHcUBmdzPj+EKNC4qj97oK6yjrUhc1KoSodglvk=",
          "163: github.com/aws/aws-sdk-go-v2/internal/configsources v1.1.14/go.mod h1:kdjrMwHwrC3+FsKhNcCMJ7tUVj/8uSD5CZXeQ4wV6fM=",
          "164: github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.4.8 h1:2J+jdlBJWEmTyAwC82Ym68xCykIvnSnIN18b8xHGlcc=",
          "165: github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.4.8/go.mod h1:ZIV8GYoC6WLBW5KGs+o4rsc65/ozd+eQ0L31XF5VDwk=",
          "166: github.com/aws/aws-sdk-go-v2/internal/ini v1.3.15 h1:QquxR7NH3ULBsKC+NoTpilzbKKS+5AELfNREInbhvas=",
          "167: github.com/aws/aws-sdk-go-v2/internal/ini v1.3.15/go.mod h1:Tkrthp/0sNBShQQsamR7j/zY4p19tVTAs+nnqhH6R3c=",
          "168: github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.9.8 h1:oKnAXxSF2FUvfgw8uzU/v9OTYorJJZ8eBmWhr9TWVVQ=",
          "169: github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.9.8/go.mod h1:rDVhIMAX9N2r8nWxDUlbubvvaFMnfsm+3jAV7q+rpM4=",
          "170: github.com/aws/aws-sdk-go-v2/service/kms v1.17.5 h1:DkubF+BSEy0uX59+pYySzWFReN3fCcXobIO8L5Phh24=",
          "171: github.com/aws/aws-sdk-go-v2/service/kms v1.17.5/go.mod h1:ubAtMGRUMVv5kX8lpbeDguxZ64pR4kXTGApY4sCM0io=",
          "172: github.com/aws/aws-sdk-go-v2/service/sso v1.11.12 h1:760bUnTX/+d693FT6T6Oa7PZHfEQT9XMFZeM5IQIB0A=",
          "173: github.com/aws/aws-sdk-go-v2/service/sso v1.11.12/go.mod h1:MO4qguFjs3wPGcCSpQ7kOFTwRvb+eu+fn+1vKleGHUk=",
          "174: github.com/aws/aws-sdk-go-v2/service/sts v1.16.9 h1:yOfILxyjmtr2ubRkRJldlHDFBhf5vw4CzhbwWIBmimQ=",
          "175: github.com/aws/aws-sdk-go-v2/service/sts v1.16.9/go.mod h1:O1IvkYxr+39hRf960Us6j0x1P8pDqhTX+oXM5kQNl/Y=",
          "",
          "[Added Lines]",
          "152: github.com/aws/aws-sdk-go v1.44.70 h1:wrwAbqJqf+ncEK1F/bXTYpgO6zXIgQXi/2ppBgmYI9g=",
          "153: github.com/aws/aws-sdk-go v1.44.70/go.mod h1:y4AeaBuwd2Lk+GepC1E9v0qOiTws0MIWAX4oIKwKHZo=",
          "154: github.com/aws/aws-sdk-go-v2 v1.16.8 h1:gOe9UPR98XSf7oEJCcojYg+N2/jCRm4DdeIsP85pIyQ=",
          "155: github.com/aws/aws-sdk-go-v2 v1.16.8/go.mod h1:6CpKuLXg2w7If3ABZCl/qZ6rEgwtjZTn4eAf4RcEyuw=",
          "156: github.com/aws/aws-sdk-go-v2/config v1.15.15 h1:yBV+J7Au5KZwOIrIYhYkTGJbifZPCkAnCFSvGsF3ui8=",
          "157: github.com/aws/aws-sdk-go-v2/config v1.15.15/go.mod h1:A1Lzyy/o21I5/s2FbyX5AevQfSVXpvvIDCoVFD0BC4E=",
          "158: github.com/aws/aws-sdk-go-v2/credentials v1.12.10 h1:7gGcMQePejwiKoDWjB9cWnpfVdnz/e5JwJFuT6OrroI=",
          "159: github.com/aws/aws-sdk-go-v2/credentials v1.12.10/go.mod h1:g5eIM5XRs/OzIIK81QMBl+dAuDyoLN0VYaLP+tBqEOk=",
          "160: github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.12.9 h1:hz8tc+OW17YqxyFFPSkvfSikbqWcyyHRyPVSTzC0+aI=",
          "161: github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.12.9/go.mod h1:KDCCm4ONIdHtUloDcFvK2+vshZvx4Zmj7UMDfusuz5s=",
          "162: github.com/aws/aws-sdk-go-v2/internal/configsources v1.1.15 h1:bx5F2mr6H6FC7zNIQoDoUr8wEKnvmwRncujT3FYRtic=",
          "163: github.com/aws/aws-sdk-go-v2/internal/configsources v1.1.15/go.mod h1:pWrr2OoHlT7M/Pd2y4HV3gJyPb3qj5qMmnPkKSNPYK4=",
          "164: github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.4.9 h1:5sbyznZC2TeFpa4fvtpvpcGbzeXEEs1l1Jo51ynUNsQ=",
          "165: github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.4.9/go.mod h1:08tUpeSGN33QKSO7fwxXczNfiwCpbj+GxK6XKwqWVv0=",
          "166: github.com/aws/aws-sdk-go-v2/internal/ini v1.3.16 h1:f0ySVcmQhwmzn7zQozd8wBM3yuGBfzdpsOaKQ0/Epzw=",
          "167: github.com/aws/aws-sdk-go-v2/internal/ini v1.3.16/go.mod h1:CYmI+7x03jjJih8kBEEFKRQc40UjUokT0k7GbvrhhTc=",
          "168: github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.9.9 h1:sHfDuhbOuuWSIAEDd3pma6p0JgUcR2iePxtCE8gfCxQ=",
          "169: github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.9.9/go.mod h1:yQowTpvdZkFVuHrLBXmczat4W+WJKg/PafBZnGBLga0=",
          "170: github.com/aws/aws-sdk-go-v2/service/kms v1.18.1 h1:y07kzPdcjuuyDVYWf1CCsQQ6kcAWMbFy+yIJ71xQBS0=",
          "171: github.com/aws/aws-sdk-go-v2/service/kms v1.18.1/go.mod h1:4PZMUkc9rXHWGVB5J9vKaZy3D7Nai79ORworQ3ASMiM=",
          "172: github.com/aws/aws-sdk-go-v2/service/sso v1.11.13 h1:DQpf+al+aWozOEmVEdml67qkVZ6vdtGUi71BZZWw40k=",
          "173: github.com/aws/aws-sdk-go-v2/service/sso v1.11.13/go.mod h1:d7ptRksDDgvXaUvxyHZ9SYh+iMDymm94JbVcgvSYSzU=",
          "174: github.com/aws/aws-sdk-go-v2/service/sts v1.16.10 h1:7tquJrhjYz2EsCBvA9VTl+sBAAh1bv7h/sGASdZOGGo=",
          "175: github.com/aws/aws-sdk-go-v2/service/sts v1.16.10/go.mod h1:cftkHYN6tCDNfkSasAmclSfl4l7cySoay8vz7p/ce0E=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "292: github.com/fluxcd/pkg/apis/kustomize v0.4.2/go.mod h1:y/TpJvnhR08BRt3E7oLpDPvx0/J/2AS8tOiAFJpctu8=",
          "293: github.com/fluxcd/pkg/apis/meta v0.14.2 h1:/Hf7I/Vz01vv3m7Qx7DtQvrzAL1oVt0MJcLb/I1Y1HE=",
          "294: github.com/fluxcd/pkg/apis/meta v0.14.2/go.mod h1:ijZ61VG/8T3U17gj0aFL3fdtZL+mulD6V8VrLLUCAgM=",
          "297: github.com/fluxcd/pkg/runtime v0.16.2 h1:CexfMmJK+r12sHTvKWyAax0pcPomjd6VnaHXcxjUrRY=",
          "298: github.com/fluxcd/pkg/runtime v0.16.2/go.mod h1:OHSKsrO+T+Ym8WZRS2oidrnauWRARuE2nfm8ewevm7M=",
          "299: github.com/fluxcd/pkg/ssa v0.17.0 h1:iO4EQ+/xIbd79VKrh+8fvsAvq3RlmgAdWtnzOAUxD5s=",
          "",
          "[Removed Lines]",
          "295: github.com/fluxcd/pkg/kustomize v0.5.2 h1:Nhaw/Tqwt588Cp4PYa83nj45t3mGgojMl23zhq/t/fM=",
          "296: github.com/fluxcd/pkg/kustomize v0.5.2/go.mod h1:X3Uls1l13giFPwig1NDoXvrF53yyXUemSyR3nYGw28s=",
          "",
          "[Added Lines]",
          "295: github.com/fluxcd/pkg/kustomize v0.5.3 h1:WpxNOV/Yklp0p7Qv85VwBegq9fABuLR9qSWaAVa3+yc=",
          "296: github.com/fluxcd/pkg/kustomize v0.5.3/go.mod h1:zy1FLxkEDADUykCnrXqq6rVN48t3uMhAb3ao+zv0rFE=",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "677: github.com/onsi/ginkgo v1.12.1/go.mod h1:zj2OWP4+oCPe1qIXoGWkgMRwljMUYCdkwsT2108oapk=",
          "678: github.com/onsi/ginkgo v1.14.0/go.mod h1:iSB4RoI2tjJc9BBv4NKIKWKya62Rps+oPG/Lv9klQyY=",
          "679: github.com/onsi/ginkgo v1.16.5 h1:8xi0RTUf59SOSfEtZMvwTvXYMzG4gV23XVHOZiXNtnE=",
          "681: github.com/onsi/gomega v0.0.0-20170829124025-dcabb60a477c/go.mod h1:C1qb7wdrVGGVU+Z6iS04AVkA3Q65CEZX59MT0QO5uiA=",
          "682: github.com/onsi/gomega v1.7.1/go.mod h1:XdKZgCCFLUoM/7CFJVPcG8C1xQ1AJ0vpAezJrB7JYyY=",
          "683: github.com/onsi/gomega v1.10.1/go.mod h1:iN09h71vgCQne3DLsj+A5owkum+a2tYe+TOCB1ybHNo=",
          "686: github.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=",
          "687: github.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=",
          "688: github.com/opencontainers/image-spec v1.0.2 h1:9yCKha/T5XdGtO0q9Q9a6T5NUCsTn/DrBg0D7ufOcFM=",
          "",
          "[Removed Lines]",
          "680: github.com/onsi/ginkgo/v2 v2.1.3 h1:e/3Cwtogj0HA+25nMP1jCMDIf8RtRYbGwGGuBIFztkc=",
          "684: github.com/onsi/gomega v1.19.0 h1:4ieX6qQjPP/BfC3mpsAtIGGlxTWPeA3Inl/7DtXw1tw=",
          "685: github.com/onsi/gomega v1.19.0/go.mod h1:LY+I3pBVzYsTBU1AnDwOSxaYi9WoWiqgwooUqq9yPro=",
          "",
          "[Added Lines]",
          "680: github.com/onsi/ginkgo/v2 v2.1.4 h1:GNapqRSid3zijZ9H77KrgVG4/8KqiyRsxcSxe+7ApXY=",
          "684: github.com/onsi/gomega v1.20.0 h1:8W0cWlwFkflGPLltQvLRB7ZVD5HuP6ng320w2IS245Q=",
          "685: github.com/onsi/gomega v1.20.0/go.mod h1:DtrZpjmvpn2mPm4YWQa0/ALMDj9v4YxLgojwPeREyVo=",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "802: github.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=",
          "803: github.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=",
          "804: github.com/stretchr/testify v1.7.1 h1:5TQK59W5E3v0r2duFAb7P95B6hEeOyEnHRa8MjYSMTY=",
          "806: github.com/subosito/gotenv v1.2.0/go.mod h1:N0PQaV/YGNqwC0u51sEeR/aUtSLEXKX9iv69rRypqCw=",
          "807: github.com/syndtr/gocapability v0.0.0-20200815063812-42c35b437635/go.mod h1:hkRG7XYTFWNJGYcbNJQlaLq0fg1yr4J4t/NcTQtrfww=",
          "808: github.com/tmc/grpc-websocket-proxy v0.0.0-20190109142713-0ad062ec5ee5/go.mod h1:ncp9v5uamzpCO7NfCPTXjqaC+bZgJeR0sMTm6dMHP7U=",
          "",
          "[Removed Lines]",
          "805: github.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "973: golang.org/x/net v0.0.0-20220425223048-2871e0cb64e4/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=",
          "974: golang.org/x/net v0.0.0-20220607020251-c690dde0001d/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=",
          "975: golang.org/x/net v0.0.0-20220624214902-1bab6f366d9e/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=",
          "978: golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=",
          "979: golang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=",
          "980: golang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=",
          "",
          "[Removed Lines]",
          "976: golang.org/x/net v0.0.0-20220708220712-1185a9018129 h1:vucSRfWwTsoXro7P+3Cjlr6flUMtzCwzlvkxEQtHHB0=",
          "977: golang.org/x/net v0.0.0-20220708220712-1185a9018129/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=",
          "",
          "[Added Lines]",
          "975: golang.org/x/net v0.0.0-20220805013720-a33c5aa5df48 h1:N9Vc/rorQUDes6B9CNdIxAn5jODGj2wzfrei2x4wNj4=",
          "976: golang.org/x/net v0.0.0-20220805013720-a33c5aa5df48/go.mod h1:YDH+HFinaLZZlnHAfSS6ZXJJ9M9t4Dl22yv3iI2vPwk=",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1101: golang.org/x/sys v0.0.0-20220503163025-988cb79eb6c6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "1102: golang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "1103: golang.org/x/sys v0.0.0-20220610221304-9f5ed59c137d/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "1105: golang.org/x/sys v0.0.0-20220624220833-87e55d714810/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "1106: golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=",
          "1107: golang.org/x/term v0.0.0-20210927222741-03fcf44c2211 h1:JGgROgKl9N8DuW20oFS5gxc+lE67/N3FcwmBPMe7ArY=",
          "1108: golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=",
          "",
          "[Removed Lines]",
          "1104: golang.org/x/sys v0.0.0-20220624220833-87e55d714810 h1:rHZQSjJdAI4Xf5Qzeh2bBc5YJIkPFVM6oDtMFYmgws0=",
          "",
          "[Added Lines]",
          "1104: golang.org/x/sys v0.0.0-20220728004956-3c1f35247d10 h1:WIoqL4EROvwiPdUtaip4VcDdpZ4kha7wBWZrbVKCIZg=",
          "1105: golang.org/x/sys v0.0.0-20220728004956-3c1f35247d10/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1234: google.golang.org/api v0.78.0/go.mod h1:1Sg78yoMLOhlQTeF+ARBoytAcH1NNyyl390YMy6rKmw=",
          "1235: google.golang.org/api v0.80.0/go.mod h1:xY3nI94gbvBrE0J6NHXhxOmW97HG7Khjkku6AFB3Hyg=",
          "1236: google.golang.org/api v0.84.0/go.mod h1:NTsGnUFJMYROtiquksZHBWtHfeMC7iYthki7Eq3pa8o=",
          "1239: google.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=",
          "1240: google.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=",
          "1241: google.golang.org/appengine v1.5.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=",
          "",
          "[Removed Lines]",
          "1237: google.golang.org/api v0.87.0 h1:pUQVF/F+X7Tl1lo4LJoJf5BOpjtmINU80p9XpYTU2p4=",
          "1238: google.golang.org/api v0.87.0/go.mod h1:+Sem1dnrKlrXMR/X0bPnMWyluQe4RsNoYfmNLhOIkzw=",
          "",
          "[Added Lines]",
          "1237: google.golang.org/api v0.91.0 h1:731+JzuwaJoZXRQGmPoBiV+SrsAfUaIkdMCWTcQNPyA=",
          "1238: google.golang.org/api v0.91.0/go.mod h1:+Sem1dnrKlrXMR/X0bPnMWyluQe4RsNoYfmNLhOIkzw=",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1328: google.golang.org/genproto v0.0.0-20220608133413-ed9918b62aac/go.mod h1:KEWEmljWE5zPzLBa/oHl6DaEt9LmfH6WtH1OHIvleBA=",
          "1329: google.golang.org/genproto v0.0.0-20220616135557-88e70c0c3a90/go.mod h1:KEWEmljWE5zPzLBa/oHl6DaEt9LmfH6WtH1OHIvleBA=",
          "1330: google.golang.org/genproto v0.0.0-20220624142145-8cd45d7dbd1f/go.mod h1:KEWEmljWE5zPzLBa/oHl6DaEt9LmfH6WtH1OHIvleBA=",
          "1333: google.golang.org/grpc v1.8.0/go.mod h1:yo6s7OP7yaDglbqo1J04qKzAhqBH6lvTonzMVmEdcZw=",
          "1334: google.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=",
          "1335: google.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=",
          "",
          "[Removed Lines]",
          "1331: google.golang.org/genproto v0.0.0-20220712132514-bdd2acd4974d h1:YbuF5+kdiC516xIP60RvlHeFbY9sRDR73QsAGHpkeVw=",
          "1332: google.golang.org/genproto v0.0.0-20220712132514-bdd2acd4974d/go.mod h1:KEWEmljWE5zPzLBa/oHl6DaEt9LmfH6WtH1OHIvleBA=",
          "",
          "[Added Lines]",
          "1331: google.golang.org/genproto v0.0.0-20220808145710-bf34ca4dd83a h1:FX/Y0fehmt5BT/GcKqm2u8l/Y1d0EQwAkI0vbXytJ60=",
          "1332: google.golang.org/genproto v0.0.0-20220808145710-bf34ca4dd83a/go.mod h1:dbqgFATTzChvnt+ujMdZwITVAJHFtfyN1qUhDqEiIlk=",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1379: google.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=",
          "1380: google.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=",
          "1381: google.golang.org/protobuf v1.27.1/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=",
          "1383: google.golang.org/protobuf v1.28.0/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=",
          "1384: gopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=",
          "1385: gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "1386: gopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "",
          "[Removed Lines]",
          "1382: google.golang.org/protobuf v1.28.0 h1:w43yiav+6bVFTBQFZX0r7ipe9JQ1QsbMgHwbBziscLw=",
          "",
          "[Added Lines]",
          "1383: google.golang.org/protobuf v1.28.1 h1:d0NfwRgPtno5B1Wa6L2DAG+KivqkdutMf1UhdNx175w=",
          "1384: google.golang.org/protobuf v1.28.1/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1428: honnef.co/go/tools v0.0.1-2020.1.3/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=",
          "1429: honnef.co/go/tools v0.0.1-2020.1.4/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=",
          "1430: k8s.io/api v0.24.0/go.mod h1:5Jl90IUrJHUJYEMANRURMiVvJ0g7Ax7r3R1bqO8zx8I=",
          "1435: k8s.io/apimachinery v0.24.0/go.mod h1:82Bi4sCzVBdpYjyI4jY6aHX+YCUchUIrZrXKedjd2UM=",
          "1439: k8s.io/cli-runtime v0.24.0 h1:ot3Qf49T852uEyNApABO1UHHpFIckKK/NqpheZYN2gM=",
          "1440: k8s.io/cli-runtime v0.24.0/go.mod h1:9XxoZDsEkRFUThnwqNviqzljtT/LdHtNWvcNFrAXl0A=",
          "1441: k8s.io/client-go v0.24.0/go.mod h1:VFPQET+cAFpYxh6Bq6f4xyMY80G6jKKktU6G0m00VDw=",
          "1444: k8s.io/code-generator v0.24.0/go.mod h1:dpVhs00hTuTdTY6jvVxvTFCk6gSMrtfRydbhZwHI15w=",
          "1446: k8s.io/component-base v0.24.0/go.mod h1:Dgazgon0i7KYUsS8krG8muGiMVtUZxG037l1MKyXgrA=",
          "1449: k8s.io/component-helpers v0.24.0/go.mod h1:Q2SlLm4h6g6lPTC9GMMfzdywfLSvJT2f1hOnnjaWD8c=",
          "1450: k8s.io/gengo v0.0.0-20200413195148-3a45101e95ac/go.mod h1:ezvh/TsK7cY6rbqRK0oQQ8IAqLxYwwyPxAX1Pzy0ii0=",
          "1451: k8s.io/gengo v0.0.0-20210813121822-485abfe95c7c/go.mod h1:FiNAH4ZV3gBg2Kwh89tzAEV2be7d5xI0vBa/VySYy3E=",
          "",
          "[Removed Lines]",
          "1431: k8s.io/api v0.24.1 h1:BjCMRDcyEYz03joa3K1+rbshwh1Ay6oB53+iUx2H8UY=",
          "1432: k8s.io/api v0.24.1/go.mod h1:JhoOvNiLXKTPQ60zh2g0ewpA+bnEYf5q44Flhquh4vQ=",
          "1433: k8s.io/apiextensions-apiserver v0.24.1 h1:5yBh9+ueTq/kfnHQZa0MAo6uNcPrtxPMpNQgorBaKS0=",
          "1434: k8s.io/apiextensions-apiserver v0.24.1/go.mod h1:A6MHfaLDGfjOc/We2nM7uewD5Oa/FnEbZ6cD7g2ca4Q=",
          "1436: k8s.io/apimachinery v0.24.1 h1:ShD4aDxTQKN5zNf8K1RQ2u98ELLdIW7jEnlO9uAMX/I=",
          "1437: k8s.io/apimachinery v0.24.1/go.mod h1:82Bi4sCzVBdpYjyI4jY6aHX+YCUchUIrZrXKedjd2UM=",
          "1438: k8s.io/apiserver v0.24.1/go.mod h1:dQWNMx15S8NqJMp0gpYfssyvhYnkilc1LpExd/dkLh0=",
          "1442: k8s.io/client-go v0.24.1 h1:w1hNdI9PFrzu3OlovVeTnf4oHDt+FJLd9Ndluvnb42E=",
          "1443: k8s.io/client-go v0.24.1/go.mod h1:f1kIDqcEYmwXS/vTbbhopMUbhKp2JhOeVTfxgaCIlF8=",
          "1445: k8s.io/code-generator v0.24.1/go.mod h1:dpVhs00hTuTdTY6jvVxvTFCk6gSMrtfRydbhZwHI15w=",
          "1447: k8s.io/component-base v0.24.1 h1:APv6W/YmfOWZfo+XJ1mZwep/f7g7Tpwvdbo9CQLDuts=",
          "1448: k8s.io/component-base v0.24.1/go.mod h1:DW5vQGYVCog8WYpNob3PMmmsY8A3L9QZNg4j/dV3s38=",
          "",
          "[Added Lines]",
          "1432: k8s.io/api v0.24.3 h1:tt55QEmKd6L2k5DP6G/ZzdMQKvG5ro4H4teClqm0sTY=",
          "1433: k8s.io/api v0.24.3/go.mod h1:elGR/XSZrS7z7cSZPzVWaycpJuGIw57j9b95/1PdJNI=",
          "1434: k8s.io/apiextensions-apiserver v0.24.3 h1:kyx+Tmro1qEsTUr07ZGQOfvTsF61yn+AxnxytBWq8As=",
          "1435: k8s.io/apiextensions-apiserver v0.24.3/go.mod h1:cL0xkmUefpYM4f6IuOau+6NMFEIh6/7wXe/O4vPVJ8A=",
          "1437: k8s.io/apimachinery v0.24.3 h1:hrFiNSA2cBZqllakVYyH/VyEh4B581bQRmqATJSeQTg=",
          "1438: k8s.io/apimachinery v0.24.3/go.mod h1:82Bi4sCzVBdpYjyI4jY6aHX+YCUchUIrZrXKedjd2UM=",
          "1439: k8s.io/apiserver v0.24.3/go.mod h1:aXfwtIn4U27B7lYs5f2BKgz6DRbgWy+HJeYReN1jLJ8=",
          "1443: k8s.io/client-go v0.24.3 h1:Nl1840+6p4JqkFWEW2LnMKU667BUxw03REfLAVhuKQY=",
          "1444: k8s.io/client-go v0.24.3/go.mod h1:AAovolf5Z9bY1wIg2FZ8LPQlEdKHjLI7ZD4rw920BJw=",
          "1446: k8s.io/code-generator v0.24.3/go.mod h1:dpVhs00hTuTdTY6jvVxvTFCk6gSMrtfRydbhZwHI15w=",
          "1448: k8s.io/component-base v0.24.3 h1:u99WjuHYCRJjS1xeLOx72DdRaghuDnuMgueiGMFy1ec=",
          "1449: k8s.io/component-base v0.24.3/go.mod h1:bqom2IWN9Lj+vwAkPNOv2TflsP1PeVDIwIN0lRthxYY=",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1468: rsc.io/quote/v3 v3.1.0/go.mod h1:yEA65RcK8LyAZtP9Kv3t0HmxON59tX3rD+tICJqUlj0=",
          "1469: rsc.io/sampler v1.3.0/go.mod h1:T1hPZKmBbMNahiBKFy5HrXp6adAjACjK9JXDnKaTXpA=",
          "1470: sigs.k8s.io/apiserver-network-proxy/konnectivity-client v0.0.30/go.mod h1:fEO7lRTdivWO2qYVCVG7dEADOMo/MLDCVr8So2g88Uw=",
          "1473: sigs.k8s.io/controller-runtime v0.11.2 h1:H5GTxQl0Mc9UjRJhORusqfJCIjBO8UtUxGggCwL1rLA=",
          "1474: sigs.k8s.io/controller-runtime v0.11.2/go.mod h1:P6QCzrEjLaZGqHsfd+os7JQ+WFZhvB8MRFsn4dWF7O4=",
          "1475: sigs.k8s.io/json v0.0.0-20211208200746-9f7c6b3444d2 h1:kDi4JBNAsJWfz1aEXhO8Jg87JJaPNLh5tIzYHgStQ9Y=",
          "1476: sigs.k8s.io/json v0.0.0-20211208200746-9f7c6b3444d2/go.mod h1:B+TnT182UBxE84DiCz4CVE26eOSDAeYCpfDnC2kdKMY=",
          "1479: sigs.k8s.io/kustomize/cmd/config v0.10.6/go.mod h1:/S4A4nUANUa4bZJ/Edt7ZQTyKOY9WCER0uBS1SW2Rco=",
          "1480: sigs.k8s.io/kustomize/kustomize/v4 v4.5.4/go.mod h1:Zo/Xc5FKD6sHl0lilbrieeGeZHVYCA4BzxeAaLI05Bg=",
          "1483: sigs.k8s.io/structured-merge-diff/v4 v4.0.2/go.mod h1:bJZC9H9iH24zzfZ/41RGcq60oK1F7G282QMXDPYydCw=",
          "1484: sigs.k8s.io/structured-merge-diff/v4 v4.2.1 h1:bKCqE9GvQ5tiVHn5rfn1r+yao3aLQEaLzkkmAkf+A6Y=",
          "1485: sigs.k8s.io/structured-merge-diff/v4 v4.2.1/go.mod h1:j/nl6xW8vLS49O8YvXW1ocPhZawJtm+Yrr7PPRQ0Vg4=",
          "",
          "[Removed Lines]",
          "1471: sigs.k8s.io/cli-utils v0.31.2 h1:0yX0GPyvbc+yAEWwWlhgHlPF7JtvlLco6HjolSWewt4=",
          "1472: sigs.k8s.io/cli-utils v0.31.2/go.mod h1:g/zB9hJ5eUN7zIEBIxrO0CwhXU4YISJ+BkLJzvWwlEs=",
          "1477: sigs.k8s.io/kustomize/api v0.12.0 h1:9kDUe94bgFaTJwPaHC3mdlcw/PfWupSKov1iGcKSlSw=",
          "1478: sigs.k8s.io/kustomize/api v0.12.0/go.mod h1:x/VlfVNU8ey7rqGuWFKJH2mx4zmAgcjNLSLIwqLZKmQ=",
          "1481: sigs.k8s.io/kustomize/kyaml v0.13.8 h1:L4dSaDb6dL5mzv0UWSrUw8bskcEW+EnNtIObT5BoRsU=",
          "1482: sigs.k8s.io/kustomize/kyaml v0.13.8/go.mod h1:QsRbD0/KcU+wdk0/L0fIp2KLnohkVzs6fQ85/nOXac4=",
          "",
          "[Added Lines]",
          "1472: sigs.k8s.io/cli-utils v0.32.0 h1:776y8z6gbBFTxfJ78lkHK6tbzK+MZTH6+ycP1gh16aw=",
          "1473: sigs.k8s.io/cli-utils v0.32.0/go.mod h1:g/zB9hJ5eUN7zIEBIxrO0CwhXU4YISJ+BkLJzvWwlEs=",
          "1478: sigs.k8s.io/kustomize/api v0.12.1 h1:7YM7gW3kYBwtKvoY216ZzY+8hM+lV53LUayghNRJ0vM=",
          "1479: sigs.k8s.io/kustomize/api v0.12.1/go.mod h1:y3JUhimkZkR6sbLNwfJHxvo1TCLwuwm14sCYnkH6S1s=",
          "1482: sigs.k8s.io/kustomize/kyaml v0.13.9 h1:Qz53EAaFFANyNgyOEJbT/yoIHygK40/ZcvU3rgry2Tk=",
          "1483: sigs.k8s.io/kustomize/kyaml v0.13.9/go.mod h1:QsRbD0/KcU+wdk0/L0fIp2KLnohkVzs6fQ85/nOXac4=",
          "",
          "---------------"
        ]
      }
    }
  ]
}