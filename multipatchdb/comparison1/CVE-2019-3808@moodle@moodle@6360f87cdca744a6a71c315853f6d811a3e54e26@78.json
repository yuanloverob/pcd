{
  "cve_id": "CVE-2019-3808",
  "cve_desc": "A flaw was found in Moodle versions 3.6 to 3.6.1, 3.5 to 3.5.3, 3.4 to 3.4.6, 3.1 to 3.1.15 and earlier unsupported versions. The 'manage groups' capability did not have the 'XSS risk' flag assigned to it, but does have that access in certain places. Note that the capability is intended for use by trusted users, and is only assigned to teachers and managers by default.",
  "repo": "moodle/moodle",
  "patch_hash": "6360f87cdca744a6a71c315853f6d811a3e54e26",
  "patch_info": {
    "commit_hash": "6360f87cdca744a6a71c315853f6d811a3e54e26",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/6360f87cdca744a6a71c315853f6d811a3e54e26",
    "files": [
      "lib/db/access.php",
      "version.php"
    ],
    "message": "MDL-64395 groups: Added XSS Risk to the manage groups capability",
    "before_after_code_files": [
      "lib/db/access.php||lib/db/access.php",
      "version.php||version.php"
    ]
  },
  "patch_diff": {
    "lib/db/access.php||lib/db/access.php": [
      "File: lib/db/access.php -> lib/db/access.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "1123:     ),",
      "1125:     'moodle/course:managegroups' => array(",
      "1127:         'captype' => 'write',",
      "1128:         'contextlevel' => CONTEXT_COURSE,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1126:         'riskbitmask' => RISK_XSS,",
      "",
      "---------------"
    ],
    "version.php||version.php": [
      "File: version.php -> version.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "30: defined('MOODLE_INTERNAL') || die();",
      "",
      "[Removed Lines]",
      "32: $version  = 2018122000.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
      "",
      "[Added Lines]",
      "32: $version  = 2018122000.02;              // YYYYMMDD      = weekly release date of this DEV branch.",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f34c8e86e770e3abdacf530f1b40bd4b0cde0ed8",
      "candidate_info": {
        "commit_hash": "f34c8e86e770e3abdacf530f1b40bd4b0cde0ed8",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/f34c8e86e770e3abdacf530f1b40bd4b0cde0ed8",
        "files": [
          "h5p/classes/autoloader.php",
          "h5p/classes/core.php",
          "h5p/tests/generator/lib.php",
          "h5p/tests/h5p_core_test.php",
          "lang/en/admin.php",
          "lang/en/h5p.php",
          "lib/classes/task/h5p_get_content_types_task.php",
          "lib/db/tasks.php",
          "lib/tests/h5p_get_content_types_task_test.php",
          "version.php"
        ],
        "message": "Merge branch 'MDL-67058-master' of git://github.com/vmdef/moodle",
        "before_after_code_files": [
          "h5p/classes/autoloader.php||h5p/classes/autoloader.php",
          "h5p/classes/core.php||h5p/classes/core.php",
          "h5p/tests/generator/lib.php||h5p/tests/generator/lib.php",
          "h5p/tests/h5p_core_test.php||h5p/tests/h5p_core_test.php",
          "lang/en/admin.php||lang/en/admin.php",
          "lang/en/h5p.php||lang/en/h5p.php",
          "lib/classes/task/h5p_get_content_types_task.php||lib/classes/task/h5p_get_content_types_task.php",
          "lib/db/tasks.php||lib/db/tasks.php",
          "lib/tests/h5p_get_content_types_task_test.php||lib/tests/h5p_get_content_types_task_test.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "h5p/classes/autoloader.php||h5p/classes/autoloader.php": [
          "File: h5p/classes/autoloader.php -> h5p/classes/autoloader.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "44:         $classes = [",
          "45:             'H5PCore' => '/lib/h5p/h5p.classes.php',",
          "46:             'H5PFrameworkInterface' => '/lib/h5p/h5p.classes.php',",
          "47:             'H5PContentValidator' => 'lib/h5p/h5p.classes.php',",
          "48:             'H5PValidator' => '/lib/h5p/h5p.classes.php',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46:             'H5PHubEndpoints' => '/lib/h5p/h5p.classes.php',",
          "",
          "---------------"
        ],
        "h5p/classes/core.php||h5p/classes/core.php": [
          "File: h5p/classes/core.php -> h5p/classes/core.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: namespace core_h5p;",
          "27: use H5PCore;",
          "28: use H5PFrameworkInterface;",
          "29: use stdClass;",
          "30: use moodle_url;",
          "",
          "[Removed Lines]",
          "32: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Added Lines]",
          "27: defined('MOODLE_INTERNAL') || die();",
          "29: require_once(\"$CFG->libdir/filelib.php\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "154:         return $urls;",
          "155:     }",
          "156: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "164:     public function fetch_latest_content_types(): ?\\stdClass {",
          "166:         $contenttypes = self::get_latest_content_types();",
          "167:         if (!empty($contenttypes->error)) {",
          "168:             return $contenttypes;",
          "169:         }",
          "171:         $typesinstalled = [];",
          "173:         foreach ($contenttypes->contentTypes as $type) {",
          "174:             $library = [",
          "175:                 'machineName' => $type->id,",
          "176:                 'majorVersion' => $type->version->major,",
          "177:                 'minorVersion' => $type->version->minor,",
          "178:                 'patchVersion' => $type->version->patch,",
          "179:             ];",
          "181:             $factory = new \\core_h5p\\factory();",
          "182:             $framework = $factory->get_framework();",
          "184:             $shoulddownload = true;",
          "185:             if ($framework->getLibraryId($type->id, $type->version->major, $type->version->minor)) {",
          "186:                 if (!$framework->isPatchedLibrary($library)) {",
          "187:                     $shoulddownload = false;",
          "188:                 }",
          "189:             }",
          "191:             if ($shoulddownload) {",
          "192:                 $installed['id'] = $this->fetch_content_type($library);",
          "193:                 if ($installed['id']) {",
          "194:                     $installed['name'] = $librarykey = \\H5PCore::libraryToString($library);",
          "195:                     $typesinstalled[] = $installed;",
          "196:                 }",
          "197:             }",
          "198:         }",
          "200:         $result = new stdClass();",
          "201:         $result->error = '';",
          "202:         $result->typesinstalled = $typesinstalled;",
          "204:         return $result;",
          "205:     }",
          "213:     public function fetch_content_type(array $library): ?int {",
          "215:         $factory = new \\core_h5p\\factory();",
          "216:         $framework = $factory->get_framework();",
          "219:         $temppath = make_request_directory();",
          "220:         $tempfile = \"{$temppath}/\" . $library['machineName'] . \".h5p\";",
          "223:         $endpoint = $this->get_api_endpoint($library['machineName']);",
          "224:         $result = download_file_content(",
          "225:             $endpoint,",
          "226:             null,",
          "227:             null,",
          "228:             true,",
          "229:             300,",
          "230:             20,",
          "231:             false,",
          "232:             $tempfile",
          "233:         );",
          "235:         if (!empty($result->error) || $result->status == '404') {",
          "236:             return null;",
          "237:         }",
          "239:         $framework->getUploadedH5pPath($tempfile);",
          "240:         $framework->getUploadedH5pFolderPath($temppath);",
          "242:         $validator = $factory->get_validator();",
          "245:         if ($validator->isValidPackage(false, false)) {",
          "246:             $h5pstorage = $factory->get_storage();",
          "247:             $h5pstorage->savePackage([], null, true);",
          "248:             $librarykey = \\H5PCore::libraryToString($library);",
          "249:             return $h5pstorage->h5pC->librariesJsonData[$librarykey][\"libraryId\"];",
          "250:         }",
          "252:         return null;",
          "253:     }",
          "264:     public function get_api_endpoint(?string $library): moodle_url {",
          "265:         $h5purl = \\H5PHubEndpoints::createURL(\\H5PHubEndpoints::CONTENT_TYPES ) . $library;",
          "266:         return new moodle_url($h5purl);",
          "267:     }",
          "276:     public function get_latest_content_types(): \\stdClass {",
          "278:         $postdata = ['uuid' => 'foo'];",
          "279:         $endpoint = $this->get_api_endpoint(null);",
          "280:         $request = download_file_content($endpoint, null, $postdata, true);",
          "282:         if (!empty($request->error) || $request->status != '200' || empty($request->results)) {",
          "283:             if (empty($request->error)) {",
          "284:                 $request->error = get_string('fetchtypesfailure', 'core_h5p');",
          "285:             }",
          "286:             return $request;",
          "287:         }",
          "289:         $contenttypes = json_decode($request->results);",
          "290:         $contenttypes->error = '';",
          "292:         return $contenttypes;",
          "293:     }",
          "",
          "---------------"
        ],
        "h5p/tests/generator/lib.php||h5p/tests/generator/lib.php": [
          "File: h5p/tests/generator/lib.php -> h5p/tests/generator/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: use core_h5p\\factory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "339:             )",
          "340:         );",
          "341:     }",
          "342: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "351:     public function create_content_types(int $pending): array {",
          "352:         global $DB;",
          "354:         $factory = new factory();",
          "355:         $core = $factory->get_core();",
          "358:         $contenttypes = $core->get_latest_content_types()->contentTypes;",
          "360:         $size = count($contenttypes) - $pending;",
          "363:         $chunks = array_chunk($contenttypes, $size);",
          "365:         $contenttypes = $chunks[0];",
          "366:         $pendingtypes = $chunks[1];",
          "369:         foreach ($contenttypes as $contenttype) {",
          "370:             $library = [",
          "371:                 'machinename' => $contenttype->id,",
          "372:                 'majorversion' => $contenttype->version->major,",
          "373:                 'minorversion' => $contenttype->version->minor,",
          "374:                 'patchversion' => $contenttype->version->patch,",
          "375:                 'runnable' => 1",
          "376:             ];",
          "377:             $DB->insert_record('h5p_libraries', (object) $library);",
          "378:         }",
          "380:         return [$contenttypes, $pendingtypes];",
          "381:     }",
          "",
          "---------------"
        ],
        "h5p/tests/h5p_core_test.php||h5p/tests/h5p_core_test.php": [
          "File: h5p/tests/h5p_core_test.php -> h5p/tests/h5p_core_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "26: namespace core_h5p\\local\\tests;",
          "28: use core_h5p\\factory;",
          "30: defined('MOODLE_INTERNAL') || die();",
          "41: class h5p_core_test extends \\advanced_testcase {",
          "43:     protected function setup() {",
          "44:         parent::setUp();",
          "46:         $factory = new factory();",
          "47:         $this->core = $factory->get_core();",
          "48:     }",
          "60:     public function test_fetch_content_type(): void {",
          "61:         global $DB;",
          "63:         $this->resetAfterTest(true);",
          "65:         if (!defined('PHPUNIT_LONGTEST')) {",
          "66:             $this->markTestSkipped('PHPUNIT_LONGTEST is not defined');",
          "67:         }",
          "69:         $library = [",
          "70:                 'machineName' => 'H5P.Accordion',",
          "71:                 'majorVersion' => 1,",
          "72:                 'minorVersion' => 0,",
          "73:                 'patchVersion' => 0,",
          "74:         ];",
          "76:         $sql = 'SELECT count(id)",
          "77:                   FROM {files}",
          "78:                  WHERE ' . $DB->sql_like('filepath', ':filepath');",
          "79:         $params['filepath'] = \"/{$library['machineName']}-%\";",
          "81:         $contentfiles = $DB->count_records_sql($sql, $params);",
          "83:         $this->assertEquals(0, $contentfiles);",
          "85:         $this->core->fetch_content_type($library);",
          "87:         $contentfiles = $DB->count_records_sql($sql, $params);",
          "88:         $this->assertGreaterThan(0, $contentfiles);",
          "89:     }",
          "101:     public function test_fetch_latest_content_types(): void {",
          "102:         global $DB;",
          "104:         $this->resetAfterTest(true);",
          "106:         if (!defined('PHPUNIT_LONGTEST')) {",
          "107:             $this->markTestSkipped('PHPUNIT_LONGTEST is not defined');",
          "108:         }",
          "110:         $contentfiles = $DB->count_records('h5p_libraries');",
          "113:         $this->assertEquals(0, $contentfiles);",
          "116:         $generator = \\testing_util::get_data_generator();",
          "117:         $h5pgenerator = $generator->get_plugin_generator('core_h5p');",
          "120:         [$contenttypes, $contenttoinstall] = $h5pgenerator->create_content_types(1);",
          "122:         $numcontenttypes = count($contenttypes) + count($contenttoinstall);",
          "124:         $contenttoinstall = $contenttoinstall[0];",
          "127:         $conditions = ['runnable' => 1];",
          "128:         $contentfiles = $DB->get_records('h5p_libraries', $conditions, '', 'machinename');",
          "131:         $this->assertEquals($numcontenttypes - 1, count($contentfiles));",
          "132:         $this->assertArrayNotHasKey($contenttoinstall->id, $contentfiles);",
          "134:         $result = $this->core->fetch_latest_content_types();",
          "136:         $contentfiles = $DB->get_records('h5p_libraries', $conditions, '', 'machinename');",
          "139:         $this->assertCount($numcontenttypes, $contentfiles);",
          "140:         $this->assertArrayHasKey($contenttoinstall->id, $contentfiles);",
          "141:         $this->assertCount(1, $result->typesinstalled);",
          "142:         $this->assertStringStartsWith($contenttoinstall->id, $result->typesinstalled[0]['name']);",
          "145:         $result = $this->core->fetch_latest_content_types();",
          "147:         $contentfiles = $DB->get_records('h5p_libraries', $conditions, '', 'machinename');",
          "149:         $this->assertEquals($numcontenttypes, count($contentfiles));",
          "150:         $this->assertCount(0, $result->typesinstalled);",
          "151:     }",
          "152: }",
          "",
          "---------------"
        ],
        "lang/en/admin.php||lang/en/admin.php": [
          "File: lang/en/admin.php -> lang/en/admin.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "647: $string['checkboxno'] = 'No';",
          "648: $string['checkboxyes'] = 'Yes';",
          "649: $string['choosefiletoedit'] = 'Choose file to edit';",
          "650: $string['iconvrequired'] = 'Installing ICONV extension is required.';",
          "651: $string['ignore'] = 'Ignore';",
          "652: $string['includemoduleuserdata'] = 'Include module user data';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "650: $string['h5pgetcontenttypestask'] = 'Download available H5P content types from h5p.org';",
          "",
          "---------------"
        ],
        "lang/en/h5p.php||lang/en/h5p.php": [
          "File: lang/en/h5p.php -> lang/en/h5p.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "71: $string['editor'] = 'Editor';",
          "72: $string['embed'] = 'Embed';",
          "73: $string['embedtitle'] = 'View the embed code for this content.';",
          "74: $string['fileExceedsMaxSize'] = 'One of the files inside the package exceeds the maximum file size allowed. ({$a->%file} {$a->%used} > {$a->%max})';",
          "75: $string['fullscreen'] = 'Fullscreen';",
          "76: $string['gpl'] = 'General Public License v3';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74: $string['fetchtypesfailure'] = 'No information could be obtained on the H5P content types available. H5P repository connection failure';",
          "",
          "---------------"
        ],
        "lib/classes/task/h5p_get_content_types_task.php||lib/classes/task/h5p_get_content_types_task.php": [
          "File: lib/classes/task/h5p_get_content_types_task.php -> lib/classes/task/h5p_get_content_types_task.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "24: namespace core\\task;",
          "26: use core_h5p\\factory;",
          "28: defined('MOODLE_INTERNAL') || die();",
          "36: class h5p_get_content_types_task extends scheduled_task {",
          "43:     public function get_name() {",
          "44:         return get_string('h5pgetcontenttypestask', 'admin');",
          "45:     }",
          "50:     public function execute() {",
          "52:         $factory = new factory();",
          "53:         $core = $factory->get_core();",
          "55:         $result = $core->fetch_latest_content_types();",
          "57:         if (!empty($result->error)) {",
          "58:             mtrace($result->error);",
          "59:         } else {",
          "60:             $numtypesinstalled = count($result->typesinstalled);",
          "61:             mtrace(\"{$numtypesinstalled} new content types installed\");",
          "62:         }",
          "63:     }",
          "64: }",
          "",
          "---------------"
        ],
        "lib/db/tasks.php||lib/db/tasks.php": [
          "File: lib/db/tasks.php -> lib/db/tasks.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "392:         'dayofweek' => '*',",
          "393:         'month' => '*'",
          "394:     ),",
          "395: );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "395:     array(",
          "396:         'classname' => 'core\\task\\h5p_get_content_types_task',",
          "397:         'blocking' => 0,",
          "398:         'minute' => 'R',",
          "399:         'hour' => 'R',",
          "400:         'day' => '1',",
          "401:         'dayofweek' => '*',",
          "402:         'month' => '*'",
          "403:     ),",
          "",
          "---------------"
        ],
        "lib/tests/h5p_get_content_types_task_test.php||lib/tests/h5p_get_content_types_task_test.php": [
          "File: lib/tests/h5p_get_content_types_task_test.php -> lib/tests/h5p_get_content_types_task_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "25: defined('MOODLE_INTERNAL') || die();",
          "36: class h5p_get_content_types_task_test extends advanced_testcase {",
          "47:     public function test_task_execution(): void {",
          "49:         if (!defined('PHPUNIT_LONGTEST')) {",
          "50:             $this->markTestSkipped('PHPUNIT_LONGTEST is not defined');",
          "51:         }",
          "53:         $this->resetAfterTest();",
          "56:         $generator = \\testing_util::get_data_generator();",
          "57:         $h5pgenerator = $generator->get_plugin_generator('core_h5p');",
          "59:         $h5pgenerator->create_content_types(2);",
          "61:         $task = new \\core\\task\\h5p_get_content_types_task();",
          "62:         $task->execute();",
          "63:         $this->expectOutputRegex('/2 new content types/');",
          "64:     }",
          "65: }",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2019110500.02;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2019110500.03;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f4da3acc61294b1b59dd15308c73d2ad8bc8d98c",
      "candidate_info": {
        "commit_hash": "f4da3acc61294b1b59dd15308c73d2ad8bc8d98c",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/f4da3acc61294b1b59dd15308c73d2ad8bc8d98c",
        "files": [
          "lib/adminlib.php",
          "lib/db/upgrade.php",
          "version.php"
        ],
        "message": "MDL-57342 admin: confightml will check if returned data is empty",
        "before_after_code_files": [
          "lib/adminlib.php||lib/adminlib.php",
          "lib/db/upgrade.php||lib/db/upgrade.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/adminlib.php||lib/adminlib.php": [
          "File: lib/adminlib.php -> lib/adminlib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2574:         $editor->use_editor($this->get_id(), array('noclean'=>true));",
          "2575:         return parent::output_html($data, $query);",
          "2576:     }",
          "2577: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2584:     public function write_setting($data) {",
          "2585:         if (trim(html_to_text($data)) === '') {",
          "2586:             $data = '';",
          "2587:         }",
          "2588:         return parent::write_setting($data);",
          "2589:     }",
          "",
          "---------------"
        ],
        "lib/db/upgrade.php||lib/db/upgrade.php": [
          "File: lib/db/upgrade.php -> lib/db/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3381:     return true;",
          "3382: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3381:     if ($oldversion < 2019052001.03) {",
          "3383:         $instructions = get_config('core', 'auth_instructions');",
          "3385:         if (trim(html_to_text($instructions)) === '') {",
          "3386:             set_config('auth_instructions', '');",
          "3387:         }",
          "3390:         upgrade_main_savepoint(true, 2019052001.03);",
          "3391:     }",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2019052001.02;              // 20190520      = branching date YYYYMMDD - do not modify!",
          "",
          "[Added Lines]",
          "32: $version  = 2019052001.03;              // 20190520      = branching date YYYYMMDD - do not modify!",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "42afb6c2ac7b70cc8c9a4e1ab5001f2ff64549d7",
      "candidate_info": {
        "commit_hash": "42afb6c2ac7b70cc8c9a4e1ab5001f2ff64549d7",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/42afb6c2ac7b70cc8c9a4e1ab5001f2ff64549d7",
        "files": [
          "version.php"
        ],
        "message": "MDL-52811 version: Bump to update system capabilities and lang str",
        "before_after_code_files": [
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2018020600.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2018020600.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7ce941a4556e81cd4b142065979ed4842d6f403e",
      "candidate_info": {
        "commit_hash": "7ce941a4556e81cd4b142065979ed4842d6f403e",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/7ce941a4556e81cd4b142065979ed4842d6f403e",
        "files": [
          "blocks/participants/block_participants.php",
          "blocks/participants/classes/privacy/provider.php",
          "blocks/participants/db/access.php",
          "blocks/participants/lang/en/block_participants.php",
          "blocks/participants/tests/behat/block_participants_course.feature",
          "blocks/participants/tests/behat/block_participants_frontpage.feature",
          "blocks/participants/version.php",
          "blocks/upgrade.txt",
          "lib/classes/plugin_manager.php",
          "lib/db/upgrade.php",
          "version.php"
        ],
        "message": "MDL-66753 blocks: Remove block_participants from core",
        "before_after_code_files": [
          "blocks/participants/block_participants.php||blocks/participants/block_participants.php",
          "blocks/participants/classes/privacy/provider.php||blocks/participants/classes/privacy/provider.php",
          "blocks/participants/db/access.php||blocks/participants/db/access.php",
          "blocks/participants/lang/en/block_participants.php||blocks/participants/lang/en/block_participants.php",
          "blocks/participants/tests/behat/block_participants_course.feature||blocks/participants/tests/behat/block_participants_course.feature",
          "blocks/participants/tests/behat/block_participants_frontpage.feature||blocks/participants/tests/behat/block_participants_frontpage.feature",
          "blocks/participants/version.php||blocks/participants/version.php",
          "lib/classes/plugin_manager.php||lib/classes/plugin_manager.php",
          "lib/db/upgrade.php||lib/db/upgrade.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "blocks/participants/block_participants.php||blocks/participants/block_participants.php": [
          "File: blocks/participants/block_participants.php -> blocks/participants/block_participants.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "blocks/participants/classes/privacy/provider.php||blocks/participants/classes/privacy/provider.php": [
          "File: blocks/participants/classes/privacy/provider.php -> blocks/participants/classes/privacy/provider.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "blocks/participants/db/access.php||blocks/participants/db/access.php": [
          "File: blocks/participants/db/access.php -> blocks/participants/db/access.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "blocks/participants/lang/en/block_participants.php||blocks/participants/lang/en/block_participants.php": [
          "File: blocks/participants/lang/en/block_participants.php -> blocks/participants/lang/en/block_participants.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "blocks/participants/tests/behat/block_participants_course.feature||blocks/participants/tests/behat/block_participants_course.feature": [
          "File: blocks/participants/tests/behat/block_participants_course.feature -> blocks/participants/tests/behat/block_participants_course.feature",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "blocks/participants/tests/behat/block_participants_frontpage.feature||blocks/participants/tests/behat/block_participants_frontpage.feature": [
          "File: blocks/participants/tests/behat/block_participants_frontpage.feature -> blocks/participants/tests/behat/block_participants_frontpage.feature",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "blocks/participants/version.php||blocks/participants/version.php": [
          "File: blocks/participants/version.php -> blocks/participants/version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/classes/plugin_manager.php||lib/classes/plugin_manager.php": [
          "File: lib/classes/plugin_manager.php -> lib/classes/plugin_manager.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1647:         $plugins = array(",
          "1648:             'qformat' => array('blackboard', 'learnwise'),",
          "1649:             'auth' => array('radius', 'fc', 'nntp', 'pam', 'pop3', 'imap'),",
          "1651:             'cachestore' => array('memcache'),",
          "1652:             'enrol' => array('authorize'),",
          "1653:             'report' => array('search'),",
          "",
          "[Removed Lines]",
          "1650:             'block' => array('course_overview', 'messages', 'community'),",
          "",
          "[Added Lines]",
          "1650:             'block' => array('course_overview', 'messages', 'community', 'participants'),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1718:                 'completionstatus', 'course_list', 'course_summary',",
          "1719:                 'feedback', 'globalsearch', 'glossary_random', 'html',",
          "1720:                 'login', 'lp', 'mentees', 'mnet_hosts', 'myoverview', 'myprofile',",
          "1722:                 'private_files', 'quiz_results', 'recent_activity', 'recentlyaccesseditems',",
          "1723:                 'recentlyaccessedcourses', 'rss_client', 'search_forums', 'section_links',",
          "1724:                 'selfcompletion', 'settings', 'site_main_menu',",
          "",
          "[Removed Lines]",
          "1721:                 'navigation', 'news_items', 'online_users', 'participants',",
          "",
          "[Added Lines]",
          "1721:                 'navigation', 'news_items', 'online_users',",
          "",
          "---------------"
        ],
        "lib/db/upgrade.php||lib/db/upgrade.php": [
          "File: lib/db/upgrade.php -> lib/db/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3556:         upgrade_main_savepoint(true, 2019092700.01);",
          "3557:     }",
          "3559:     return true;",
          "3560: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3559:     if ($oldversion < 2019100400.01) {",
          "3561:         if (!file_exists($CFG->dirroot . '/blocks/participants/block_participants.php')) {",
          "3563:             $instances = $DB->get_records_list('block_instances', 'blockname', ['participants']);",
          "3564:             $instanceids = array_keys($instances);",
          "3566:             if (!empty($instanceids)) {",
          "3567:                 $DB->delete_records_list('block_positions', 'blockinstanceid', $instanceids);",
          "3568:                 $DB->delete_records_list('block_instances', 'id', $instanceids);",
          "3569:                 list($sql, $params) = $DB->get_in_or_equal($instanceids, SQL_PARAMS_NAMED);",
          "3570:                 $params['contextlevel'] = CONTEXT_BLOCK;",
          "3571:                 $DB->delete_records_select('context', \"contextlevel=:contextlevel AND instanceid \" . $sql, $params);",
          "3573:                 $preferences = array();",
          "3574:                 foreach ($instances as $instanceid => $instance) {",
          "3575:                     $preferences[] = 'block' . $instanceid . 'hidden';",
          "3576:                     $preferences[] = 'docked_block_instance_' . $instanceid;",
          "3577:                 }",
          "3578:                 $DB->delete_records_list('user_preferences', 'name', $preferences);",
          "3579:             }",
          "3582:             $DB->delete_records('block', array('name' => 'participants'));",
          "3585:             capabilities_cleanup('block_participants');",
          "3588:             unset_all_config_for_plugin('block_participants');",
          "3589:         }",
          "3591:         upgrade_main_savepoint(true, 2019100400.01);",
          "3592:     }",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2019100400.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2019100400.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "280cfdf05c46e1e90526ff7f4b0b2ef158cd4a65",
      "candidate_info": {
        "commit_hash": "280cfdf05c46e1e90526ff7f4b0b2ef158cd4a65",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/280cfdf05c46e1e90526ff7f4b0b2ef158cd4a65",
        "files": [
          "version.php"
        ],
        "message": "on-demand release 3.7dev+",
        "before_after_code_files": [
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "38: $branch   = '37';                       // This version's branch.",
          "39: $maturity = MATURITY_ALPHA;             // This version's maturity level.",
          "",
          "[Removed Lines]",
          "32: $version  = 2019032900.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "36: $release  = '3.7dev (Build: 20190328)'; // Human-friendly version name",
          "",
          "[Added Lines]",
          "32: $version  = 2019040200.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "36: $release  = '3.7dev+ (Build: 20190402)'; // Human-friendly version name",
          "",
          "---------------"
        ]
      }
    }
  ]
}