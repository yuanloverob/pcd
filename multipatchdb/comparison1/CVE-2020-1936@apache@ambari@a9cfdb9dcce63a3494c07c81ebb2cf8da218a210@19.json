{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "814a21252543543712007fa51ee0108a5bd04dac",
      "candidate_info": {
        "commit_hash": "814a21252543543712007fa51ee0108a5bd04dac",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/814a21252543543712007fa51ee0108a5bd04dac",
        "files": [
          "ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py"
        ],
        "message": "AMBARI-24270. Agent Status Command Are Randomly Failing With Empty stderr (aonishuk)",
        "before_after_code_files": [
          "ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py||ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py||ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py": [
          "File: ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py -> ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: import ambari_simplejson as json",
          "26: import sys",
          "28: from ambari_agent.models.commands import AgentCommand",
          "29: from ambari_commons import shell",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: import uuid",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "89:     self.exec_tmp_dir = AGENT_TMP_DIR",
          "90:     self.file_cache = initializer_module.file_cache",
          "91:     self.status_commands_stdout = os.path.join(self.tmp_dir,",
          "93:     self.status_commands_stderr = os.path.join(self.tmp_dir,",
          "96:     # Construct the hadoop credential lib JARs path",
          "97:     self.credential_shell_lib_path = os.path.join(self.config.get('security', 'credential_lib_dir',",
          "",
          "[Removed Lines]",
          "92:                                                'status_command_stdout.txt')",
          "94:                                                'status_command_stderr.txt')",
          "",
          "[Added Lines]",
          "93:                                                'status_command_stdout_{0}.txt')",
          "95:                                                'status_command_stderr_{0}.txt')",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "100:     self.credential_conf_dir = self.config.get('security', 'credential_conf_dir', self.DEFAULT_CREDENTIAL_CONF_DIR)",
          "102:     self.credential_shell_cmd = self.config.get('security', 'credential_shell_cmd', self.DEFAULT_CREDENTIAL_SHELL_CMD)",
          "110:     self.commands_in_progress_lock = threading.RLock()",
          "111:     self.commands_in_progress = {}",
          "",
          "[Removed Lines]",
          "104:     # Clean up old status command files if any",
          "105:     try:",
          "106:       os.unlink(self.status_commands_stdout)",
          "107:       os.unlink(self.status_commands_stderr)",
          "108:     except OSError:",
          "109:       pass # Ignore fail",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "464:         self.commands_for_component_in_progress[cluster_id][command['role']] -= 1",
          "466:       if json_path:",
          "469:     return ret",
          "",
          "[Removed Lines]",
          "467:         self.conditionally_remove_command_file(json_path, ret)",
          "",
          "[Added Lines]",
          "461:         if is_status_command:",
          "462:           try:",
          "463:             os.unlink(json_path)",
          "464:           except OSError:",
          "465:             pass  # Ignore failure",
          "466:         else:",
          "467:           self.conditionally_remove_command_file(json_path, ret)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "518:     if logger.level == logging.DEBUG:",
          "519:       override_output_files = False",
          "524:     return res",
          "526:   def resolve_script_path(self, base_dir, script):",
          "",
          "[Removed Lines]",
          "521:     res = self.runCommand(command_header, self.status_commands_stdout,",
          "522:                           self.status_commands_stderr, self.COMMAND_NAME_STATUS,",
          "523:                           override_output_files=override_output_files, is_status_command=True)",
          "",
          "[Added Lines]",
          "521:     # make sure status commands that run in parallel don't use the same files",
          "522:     status_commands_stdout = self.status_commands_stdout.format(uuid.uuid4())",
          "523:     status_commands_stderr = self.status_commands_stderr.format(uuid.uuid4())",
          "525:     try:",
          "526:       res = self.runCommand(command_header, status_commands_stdout,",
          "527:                             status_commands_stderr, self.COMMAND_NAME_STATUS,",
          "528:                             override_output_files=override_output_files, is_status_command=True)",
          "529:     finally:",
          "530:       try:",
          "531:         os.unlink(status_commands_stdout)",
          "532:         os.unlink(status_commands_stderr)",
          "533:       except OSError:",
          "534:         pass # Ignore failure",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "541:     command_type = command['commandType']",
          "543:     if command_type == AgentCommand.status:",
          "547:     else:",
          "548:       task_id = command['taskId']",
          "549:       file_path = os.path.join(self.tmp_dir, \"command-{0}.json\".format(task_id))",
          "",
          "[Removed Lines]",
          "544:       # These files are frequently created, that's why we don't",
          "545:       # store them all, but only the latest one",
          "546:       file_path = os.path.join(self.tmp_dir, \"status_command.json\")",
          "",
          "[Added Lines]",
          "556:       # make sure status commands that run in parallel don't use the same files",
          "557:       file_path = os.path.join(self.tmp_dir, \"status_command_{0}.json\".format(uuid.uuid4()))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "844e02af49dad88905e304f73e5eb3a0d7c0e5c3",
      "candidate_info": {
        "commit_hash": "844e02af49dad88905e304f73e5eb3a0d7c0e5c3",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/844e02af49dad88905e304f73e5eb3a0d7c0e5c3",
        "files": [
          "ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/InputConfigGson.java",
          "ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/MapFieldCopyDescriptorImpl.java",
          "ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/MapFieldNameDescriptorImpl.java",
          "ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/MapFieldValueDescriptorImpl.java",
          "ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/PostMapValuesAdapter.java",
          "ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/domain/StoryDataRegistry.java",
          "ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/domain/WebClient.java",
          "ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/steps/LogSearchApiSteps.java",
          "ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/steps/LogSearchConfigApiSteps.java",
          "ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/story/LogSearchBackendStories.java",
          "ambari-logsearch/ambari-logsearch-it/src/test/resources/stories/backend/log_search_cofig_api_tests.story",
          "ambari-logsearch/ambari-logsearch-logfeeder/src/main/resources/alias_config.json",
          "ambari-logsearch/ambari-logsearch-logfeeder/src/main/resources/filters.config.json",
          "ambari-logsearch/ambari-logsearch-logfeeder/src/test/resources/samples/config/config_audit.json",
          "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerMapFieldCopy.java",
          "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerMapFieldName.java",
          "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerMapFieldValue.java",
          "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerPostMapValuesListDeserializer.java",
          "ambari-logsearch/ambari-logsearch-web/src/mockdata/mock-data-get.ts",
          "ambari-logsearch/docker/test-config/logfeeder/shipper-conf/input.config-ambari.json",
          "ambari-logsearch/docker/test-config/logfeeder/shipper-conf/input.config-hdfs.json",
          "ambari-logsearch/docker/test-config/logfeeder/shipper-conf/input.config-hst.json",
          "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/input.config-hive.json.j2",
          "ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/input.config-ambari.json.j2",
          "ambari-server/src/main/resources/common-services/SPARK/1.2.1/package/templates/input.config-spark.json.j2",
          "ambari-server/src/main/resources/common-services/SPARK2/2.0.0/package/templates/input.config-spark2.json.j2"
        ],
        "message": "AMBARI-24230. [Logsearch] Update hdfs configuration from Configuration Editor fails with 400 Error (#1666)",
        "before_after_code_files": [
          "ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/InputConfigGson.java||ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/InputConfigGson.java",
          "ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/MapFieldCopyDescriptorImpl.java||ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/MapFieldCopyDescriptorImpl.java",
          "ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/MapFieldNameDescriptorImpl.java||ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/MapFieldNameDescriptorImpl.java",
          "ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/MapFieldValueDescriptorImpl.java||ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/MapFieldValueDescriptorImpl.java",
          "ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/PostMapValuesAdapter.java||ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/PostMapValuesAdapter.java",
          "ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/domain/StoryDataRegistry.java||ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/domain/StoryDataRegistry.java",
          "ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/domain/WebClient.java||ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/domain/WebClient.java",
          "ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/steps/LogSearchApiSteps.java||ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/steps/LogSearchApiSteps.java",
          "ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/steps/LogSearchConfigApiSteps.java||ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/steps/LogSearchConfigApiSteps.java",
          "ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/story/LogSearchBackendStories.java||ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/story/LogSearchBackendStories.java",
          "ambari-logsearch/ambari-logsearch-it/src/test/resources/stories/backend/log_search_cofig_api_tests.story||ambari-logsearch/ambari-logsearch-it/src/test/resources/stories/backend/log_search_cofig_api_tests.story",
          "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerMapFieldCopy.java||ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerMapFieldCopy.java",
          "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerMapFieldName.java||ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerMapFieldName.java",
          "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerMapFieldValue.java||ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerMapFieldValue.java",
          "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerPostMapValuesListDeserializer.java||ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerPostMapValuesListDeserializer.java",
          "ambari-logsearch/ambari-logsearch-web/src/mockdata/mock-data-get.ts||ambari-logsearch/ambari-logsearch-web/src/mockdata/mock-data-get.ts",
          "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/input.config-hive.json.j2||ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/input.config-hive.json.j2",
          "ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/input.config-ambari.json.j2||ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/input.config-ambari.json.j2",
          "ambari-server/src/main/resources/common-services/SPARK/1.2.1/package/templates/input.config-spark.json.j2||ambari-server/src/main/resources/common-services/SPARK/1.2.1/package/templates/input.config-spark.json.j2",
          "ambari-server/src/main/resources/common-services/SPARK2/2.0.0/package/templates/input.config-spark2.json.j2||ambari-server/src/main/resources/common-services/SPARK2/2.0.0/package/templates/input.config-spark2.json.j2"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/InputConfigGson.java||ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/InputConfigGson.java": [
          "File: ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/InputConfigGson.java -> ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/InputConfigGson.java"
        ],
        "ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/MapFieldCopyDescriptorImpl.java||ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/MapFieldCopyDescriptorImpl.java": [
          "File: ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/MapFieldCopyDescriptorImpl.java -> ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/MapFieldCopyDescriptorImpl.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: public class MapFieldCopyDescriptorImpl extends MapFieldDescriptorImpl implements MapFieldCopyDescriptor {",
          "34:   @Override",
          "35:   public String getJsonName() {",
          "37:   }",
          "39:   @ShipperConfigElementDescription(",
          "",
          "[Removed Lines]",
          "36:     return \"map_fieldcopy\";",
          "",
          "[Added Lines]",
          "36:     return \"map_field_copy\";",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/MapFieldNameDescriptorImpl.java||ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/MapFieldNameDescriptorImpl.java": [
          "File: ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/MapFieldNameDescriptorImpl.java -> ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/MapFieldNameDescriptorImpl.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: @ShipperConfigTypeDescription(",
          "30:     name = \"Map Field Name\",",
          "32: )",
          "33: public class MapFieldNameDescriptorImpl extends MapFieldDescriptorImpl implements MapFieldNameDescriptor {",
          "34:   @Override",
          "35:   public String getJsonName() {",
          "37:   }",
          "39:   @ShipperConfigElementDescription(",
          "41:     type = \"string\",",
          "42:     description = \"The name of the renamed field\",",
          "43:     examples = {\"new_name\"}",
          "44:   )",
          "45:   @Expose",
          "47:   private String newFieldName;",
          "49:   @Override",
          "",
          "[Removed Lines]",
          "31:     description = \"The name of the mapping element should be map_fieldname. The value json element should contain the following parameter:\"",
          "36:     return \"map_fieldname\";",
          "40:     path = \"/filter/[]/post_map_values/{field_name}/[]/map_fieldname/new_field_name\",",
          "46:   @SerializedName(\"new_fieldname\")",
          "",
          "[Added Lines]",
          "31:     description = \"The name of the mapping element should be map_field_name. The value json element should contain the following parameter:\"",
          "36:     return \"map_field_name\";",
          "40:     path = \"/filter/[]/post_map_values/{field_name}/[]/map_field_name/new_field_name\",",
          "46:   @SerializedName(\"new_field_name\")",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/MapFieldValueDescriptorImpl.java||ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/MapFieldValueDescriptorImpl.java": [
          "File: ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/MapFieldValueDescriptorImpl.java -> ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/MapFieldValueDescriptorImpl.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: @ShipperConfigTypeDescription(",
          "30:     name = \"Map Field Value\",",
          "32: )",
          "33: public class MapFieldValueDescriptorImpl extends MapFieldDescriptorImpl implements MapFieldValueDescriptor {",
          "34:   @Override",
          "35:   public String getJsonName() {",
          "37:   }",
          "39:   @ShipperConfigElementDescription(",
          "41:     type = \"string\",",
          "42:     description = \"The value that the field must match (ignoring case) to be mapped\",",
          "43:     examples = {\"old_value\"}",
          "",
          "[Removed Lines]",
          "31:     description = \"The name of the mapping element should be map_fieldvalue. The value json element should contain the following parameter:\"",
          "36:     return \"map_fieldvalue\";",
          "40:     path = \"/filter/[]/post_map_values/{field_name}/[]/map_fieldvalue/pre_value\",",
          "",
          "[Added Lines]",
          "31:     description = \"The name of the mapping element should be map_field_value. The value json element should contain the following parameter:\"",
          "36:     return \"map_field_value\";",
          "40:     path = \"/filter/[]/post_map_values/{field_name}/[]/map_field_value/pre_value\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47:   private String preValue;",
          "49:   @ShipperConfigElementDescription(",
          "51:       type = \"string\",",
          "52:       description = \"The value to which the field is modified to\",",
          "53:       examples = {\"new_value\"}",
          "",
          "[Removed Lines]",
          "50:       path = \"/filter/[]/post_map_values/{field_name}/[]/map_fieldvalue/post_value\",",
          "",
          "[Added Lines]",
          "50:       path = \"/filter/[]/post_map_values/{field_name}/[]/map_field_value/post_value\",",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/PostMapValuesAdapter.java||ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/PostMapValuesAdapter.java": [
          "File: ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/PostMapValuesAdapter.java -> ambari-logsearch/ambari-logsearch-config-zookeeper/src/main/java/org/apache/ambari/logsearch/config/zookeeper/model/inputconfig/impl/PostMapValuesAdapter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:         case \"map_date\":",
          "58:           mappers.add(context.deserialize(m.getValue(), MapDateDescriptorImpl.class));",
          "59:           break;",
          "61:           mappers.add(context.deserialize(m.getValue(), MapFieldCopyDescriptorImpl.class));",
          "62:           break;",
          "64:           mappers.add(context.deserialize(m.getValue(), MapFieldNameDescriptorImpl.class));",
          "65:           break;",
          "67:           mappers.add(context.deserialize(m.getValue(), MapFieldValueDescriptorImpl.class));",
          "68:           break;",
          "69:         case \"map_anonymize\":",
          "",
          "[Removed Lines]",
          "60:         case \"map_fieldcopy\":",
          "63:         case \"map_fieldname\":",
          "66:         case \"map_fieldvalue\":",
          "",
          "[Added Lines]",
          "60:         case \"map_field_copy\":",
          "63:         case \"map_field_name\":",
          "66:         case \"map_field_value\":",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "97:   private JsonElement createMapperObject(PostMapValuesImpl postMapValues, JsonSerializationContext context) {",
          "98:     JsonObject jsonObject = new JsonObject();",
          "99:     for (MapFieldDescriptor m : postMapValues.getMappers()) {",
          "101:     }",
          "102:     return jsonObject;",
          "103:   }",
          "",
          "[Removed Lines]",
          "100:       jsonObject.add(((MapFieldDescriptorImpl)m).getJsonName(), context.serialize(m));",
          "",
          "[Added Lines]",
          "100:       jsonObject.add(m.getJsonName(), context.serialize(m));",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/domain/StoryDataRegistry.java||ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/domain/StoryDataRegistry.java": [
          "File: ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/domain/StoryDataRegistry.java -> ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/domain/StoryDataRegistry.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: package org.apache.ambari.logsearch.domain;",
          "21: import org.apache.solr.client.solrj.SolrClient;",
          "22: import org.jbehave.web.selenium.WebDriverProvider;",
          "24: public class StoryDataRegistry {",
          "25:   public static final StoryDataRegistry INSTANCE = new StoryDataRegistry();",
          "27:   private SolrClient solrClient;",
          "28:   private boolean logsearchContainerStarted = false;",
          "29:   private String dockerHost;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: import org.apache.ambari.logsearch.config.zookeeper.model.inputconfig.impl.InputAdapter;",
          "25: import com.google.gson.JsonElement;",
          "26: import com.google.gson.JsonParser;",
          "31:   public static final String CLUSTER = \"cl1\";",
          "32:   public static final String LOGSEARCH_GLOBAL_CONFIG = \"[\\n\" +",
          "33:           \"    {\\n\" +",
          "34:           \"      \\\"add_fields\\\": {\\n\" +",
          "35:           \"        \\\"cluster\\\": \\\"\"+ CLUSTER +\"\\\"\\n\" +",
          "36:           \"      },\\n\" +",
          "37:           \"      \\\"source\\\": \\\"file\\\",\\n\" +",
          "38:           \"      \\\"tail\\\": \\\"true\\\",\\n\" +",
          "39:           \"      \\\"gen_event_md5\\\": \\\"true\\\"\\n\" +",
          "40:           \"    }\\n\" +",
          "41:           \"]\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38:   private WebDriverProvider webDriverProvider;",
          "40:   private StoryDataRegistry() {",
          "41:   }",
          "43:   public String getDockerHost() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58:     JsonParser jsonParser = new JsonParser();",
          "59:     JsonElement globalConfigJsonElement = jsonParser.parse(LOGSEARCH_GLOBAL_CONFIG);",
          "60:     InputAdapter.setGlobalConfigs(globalConfigJsonElement.getAsJsonArray());",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "115:   public void setShellScriptFolder(String shellScriptFolder) {",
          "116:     this.shellScriptFolder = shellScriptFolder;",
          "117:   }",
          "118: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "139:   public WebClient logsearchClient() {",
          "140:     return new WebClient(dockerHost, logsearchPort);",
          "141:   }",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/domain/WebClient.java||ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/domain/WebClient.java": [
          "File: ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/domain/WebClient.java -> ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/domain/WebClient.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: package org.apache.ambari.logsearch.domain;",
          "21: import javax.ws.rs.client.Entity;",
          "22: import javax.ws.rs.client.Invocation;",
          "23: import javax.ws.rs.client.WebTarget;",
          "24: import javax.ws.rs.core.MediaType;",
          "26: import org.glassfish.jersey.client.JerseyClient;",
          "27: import org.glassfish.jersey.client.JerseyClientBuilder;",
          "28: import org.glassfish.jersey.client.authentication.HttpAuthenticationFeature;",
          "29: import org.slf4j.Logger;",
          "30: import org.slf4j.LoggerFactory;",
          "32: public class WebClient {",
          "33:   private static Logger LOG = LoggerFactory.getLogger(WebClient.class);",
          "35:   private final String host;",
          "36:   private final int port;",
          "38:   public WebClient(String host, int port) {",
          "39:     this.host = host;",
          "40:     this.port = port;",
          "41:   }",
          "43:   public String get(String path) {",
          "44:     JerseyClient jerseyClient = JerseyClientBuilder.createClient();",
          "45:     HttpAuthenticationFeature authFeature = HttpAuthenticationFeature.basicBuilder()",
          "46:             .credentials(\"admin\", \"admin\")",
          "47:             .build();",
          "48:     jerseyClient.register(authFeature);",
          "50:     String url = String.format(\"http://%s:%d%s\", host, port, path);",
          "52:     LOG.info(\"Url: {}\", url);",
          "54:     WebTarget target = jerseyClient.target(url);",
          "55:     Invocation.Builder invocationBuilder =  target.request(MediaType.APPLICATION_JSON_TYPE);",
          "56:     return invocationBuilder.get().readEntity(String.class);",
          "57:   }",
          "59:   public String put(String path, String requestBody) {",
          "60:     JerseyClient jerseyClient = JerseyClientBuilder.createClient();",
          "61:     HttpAuthenticationFeature authFeature = HttpAuthenticationFeature.basicBuilder()",
          "62:             .credentials(\"admin\", \"admin\")",
          "63:             .build();",
          "64:     jerseyClient.register(authFeature);",
          "66:     String url = String.format(\"http://%s:%d%s\", host, port, path);",
          "68:     LOG.info(\"Url: {}\", url);",
          "70:     WebTarget target = jerseyClient.target(url);",
          "71:     Invocation.Builder invocationBuilder =  target.request(MediaType.APPLICATION_JSON_TYPE);",
          "72:     String response = invocationBuilder.put(Entity.entity(requestBody, MediaType.APPLICATION_JSON_TYPE)).readEntity(String.class);",
          "74:     LOG.info(\"Response: {}\", response);",
          "76:     return response;",
          "77:   }",
          "79: }",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/steps/LogSearchApiSteps.java||ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/steps/LogSearchApiSteps.java": [
          "File: ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/steps/LogSearchApiSteps.java -> ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/steps/LogSearchApiSteps.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: package org.apache.ambari.logsearch.steps;",
          "25: import org.apache.ambari.logsearch.domain.StoryDataRegistry;",
          "29: import org.jbehave.core.annotations.Named;",
          "30: import org.jbehave.core.annotations.Then;",
          "31: import org.jbehave.core.annotations.When;",
          "",
          "[Removed Lines]",
          "21: import com.fasterxml.jackson.databind.JsonNode;",
          "22: import com.fasterxml.jackson.databind.ObjectMapper;",
          "23: import com.flipkart.zjsonpatch.JsonDiff;",
          "24: import com.google.common.io.Resources;",
          "26: import org.glassfish.jersey.client.JerseyClient;",
          "27: import org.glassfish.jersey.client.JerseyClientBuilder;",
          "28: import org.glassfish.jersey.client.authentication.HttpAuthenticationFeature;",
          "",
          "[Added Lines]",
          "21: import java.io.File;",
          "22: import java.io.IOException;",
          "23: import java.net.URISyntaxException;",
          "24: import java.nio.file.Files;",
          "25: import java.nio.file.Path;",
          "26: import java.util.List;",
          "27: import java.util.Map;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33: import org.slf4j.Logger;",
          "34: import org.slf4j.LoggerFactory;",
          "47: public class LogSearchApiSteps {",
          "",
          "[Removed Lines]",
          "36: import javax.ws.rs.client.Invocation;",
          "37: import javax.ws.rs.client.WebTarget;",
          "38: import javax.ws.rs.core.MediaType;",
          "39: import java.io.File;",
          "40: import java.io.IOException;",
          "41: import java.net.URISyntaxException;",
          "42: import java.nio.file.Files;",
          "43: import java.nio.file.Path;",
          "44: import java.util.List;",
          "45: import java.util.Map;",
          "",
          "[Added Lines]",
          "37: import com.fasterxml.jackson.databind.JsonNode;",
          "38: import com.fasterxml.jackson.databind.ObjectMapper;",
          "39: import com.flipkart.zjsonpatch.JsonDiff;",
          "40: import com.google.common.io.Resources;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "53:   @When(\"LogSearch api query sent: <apiQuery>\")",
          "54:   public void sendApiQuery(@Named(\"apiQuery\") String apiQuery) {",
          "71:   }",
          "",
          "[Removed Lines]",
          "55:     JerseyClient jerseyClient = JerseyClientBuilder.createClient();",
          "56:     HttpAuthenticationFeature authFeature = HttpAuthenticationFeature.basicBuilder()",
          "57:       .credentials(\"admin\", \"admin\")",
          "58:       .build();",
          "59:     jerseyClient.register(authFeature);",
          "61:     String logsearchUrl = String.format(\"http://%s:%d%s\",",
          "62:       StoryDataRegistry.INSTANCE.getDockerHost(),",
          "63:       StoryDataRegistry.INSTANCE.getLogsearchPort(),",
          "64:       apiQuery);",
          "66:     LOG.info(\"Url: {}\", logsearchUrl);",
          "68:     WebTarget target = jerseyClient.target(logsearchUrl);",
          "69:     Invocation.Builder invocationBuilder =  target.request(MediaType.APPLICATION_JSON_TYPE);",
          "70:     response = invocationBuilder.get().readEntity(String.class);",
          "",
          "[Added Lines]",
          "50:     response = StoryDataRegistry.INSTANCE.logsearchClient().get(apiQuery);",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/steps/LogSearchConfigApiSteps.java||ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/steps/LogSearchConfigApiSteps.java": [
          "File: ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/steps/LogSearchConfigApiSteps.java -> ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/steps/LogSearchConfigApiSteps.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: package org.apache.ambari.logsearch.steps;",
          "21: import static org.hamcrest.CoreMatchers.is;",
          "22: import static org.hamcrest.MatcherAssert.assertThat;",
          "23: import static org.hamcrest.Matchers.hasSize;",
          "24: import static org.hamcrest.Matchers.not;",
          "26: import org.apache.ambari.logsearch.config.api.model.inputconfig.InputConfig;",
          "27: import org.apache.ambari.logsearch.config.zookeeper.model.inputconfig.impl.InputConfigGson;",
          "28: import org.apache.ambari.logsearch.config.zookeeper.model.inputconfig.impl.InputConfigImpl;",
          "29: import org.apache.ambari.logsearch.domain.StoryDataRegistry;",
          "30: import org.hamcrest.Matchers;",
          "31: import org.jbehave.core.annotations.Then;",
          "32: import org.jbehave.core.annotations.When;",
          "34: public class LogSearchConfigApiSteps {",
          "35:   private String response;",
          "36:   private InputConfig inputConfig;",
          "38:   @When(\"LogSearch api request sent: $url\")",
          "39:   public String sendApiRequest(String url) {",
          "40:     response = StoryDataRegistry.INSTANCE.logsearchClient().get(url);",
          "41:     return response;",
          "42:   }",
          "44:   @Then(\"Result is an input.config of $inputConfigType with log file path $logFilePath\")",
          "45:   public void checkInputConfig(String inputConfigType, String logFilePath) {",
          "46:     checkInputConfig(response, inputConfigType, logFilePath);",
          "47:   }",
          "49:   public void checkInputConfig(String result, String type, String path) {",
          "50:     inputConfig = InputConfigGson.gson.fromJson(response, InputConfigImpl.class);",
          "51:     assertThat(inputConfig.getInput(), is(not(Matchers.nullValue())));",
          "52:     assertThat(inputConfig.getInput(), hasSize(1));",
          "53:     assertThat(inputConfig.getInput().get(0).getType(), is(type));",
          "54:     assertThat(inputConfig.getInput().get(0).getPath(), is(path));",
          "55:   }",
          "57:   @When(\"Update input config of $inputConfigType path to $logFilePath at $url\")",
          "58:   public void changeAndPut(String inputConfigType, String logFilePath, String url) {",
          "59:     String putRequest = response.replace(inputConfig.getInput().get(0).getPath(), logFilePath);",
          "60:     String putResponse = StoryDataRegistry.INSTANCE.logsearchClient().put(",
          "61:             url, putRequest);",
          "62:     assertThat(putResponse, is(\"\"));",
          "64:     String getResponse = sendApiRequest(url);",
          "65:     checkInputConfig(getResponse, inputConfigType, logFilePath);",
          "66:   }",
          "67: }",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/story/LogSearchBackendStories.java||ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/story/LogSearchBackendStories.java": [
          "File: ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/story/LogSearchBackendStories.java -> ambari-logsearch/ambari-logsearch-it/src/test/java/org/apache/ambari/logsearch/story/LogSearchBackendStories.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: package org.apache.ambari.logsearch.story;",
          "24: import org.apache.ambari.logsearch.steps.LogSearchApiSteps;",
          "26: import org.apache.ambari.logsearch.steps.LogSearchDockerSteps;",
          "27: import org.jbehave.core.configuration.Configuration;",
          "28: import org.jbehave.core.configuration.MostUsefulConfiguration;",
          "29: import org.jbehave.core.junit.JUnitStories;",
          "",
          "[Removed Lines]",
          "21: import com.google.common.base.Predicate;",
          "22: import com.google.common.collect.Collections2;",
          "23: import com.google.common.collect.Lists;",
          "25: import org.apache.ambari.logsearch.steps.SolrSteps;",
          "",
          "[Added Lines]",
          "21: import java.util.List;",
          "24: import org.apache.ambari.logsearch.steps.LogSearchConfigApiSteps;",
          "26: import org.apache.ambari.logsearch.steps.SolrSteps;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33: import org.jbehave.core.steps.InstanceStepsFactory;",
          "34: import org.junit.Test;",
          "38: public class LogSearchBackendStories extends JUnitStories {",
          "",
          "[Removed Lines]",
          "36: import java.util.List;",
          "",
          "[Added Lines]",
          "36: import com.google.common.base.Predicate;",
          "37: import com.google.common.collect.Collections2;",
          "38: import com.google.common.collect.Lists;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "53:     return new InstanceStepsFactory(configuration(),",
          "54:       new LogSearchDockerSteps(),",
          "55:       new SolrSteps(),",
          "57:   }",
          "59:   @Test",
          "",
          "[Removed Lines]",
          "56:       new LogSearchApiSteps());",
          "",
          "[Added Lines]",
          "58:       new LogSearchApiSteps(),",
          "59:       new LogSearchConfigApiSteps());",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-it/src/test/resources/stories/backend/log_search_cofig_api_tests.story||ambari-logsearch/ambari-logsearch-it/src/test/resources/stories/backend/log_search_cofig_api_tests.story": [
          "File: ambari-logsearch/ambari-logsearch-it/src/test/resources/stories/backend/log_search_cofig_api_tests.story -> ambari-logsearch/ambari-logsearch-it/src/test/resources/stories/backend/log_search_cofig_api_tests.story",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: Scenario: scenario description",
          "3: Given logsearch docker container",
          "4: When LogSearch api request sent: /api/v1/shipper/input/cl1/services/ambari",
          "5: Then Result is an input.config of ambari_audit with log file path /root/test-logs/ambari-server/ambari-audit.log",
          "7: Given logsearch docker container",
          "8: When Update input config of ambari_audit path to /root/test-logs/ambari-server/ambari-audit.log.1 at /api/v1/shipper/input/cl1/services/ambari",
          "9: Then Result is an input.config of ambari_audit with log file path /root/test-logs/ambari-server/ambari-audit.log.1",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerMapFieldCopy.java||ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerMapFieldCopy.java": [
          "File: ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerMapFieldCopy.java -> ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerMapFieldCopy.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: public class LSServerMapFieldCopy extends LSServerMapField {",
          "32:   @Override",
          "33:   public String getName() {",
          "35:   }",
          "37:   @NotNull",
          "",
          "[Removed Lines]",
          "34:     return \"map_fieldcopy\";",
          "",
          "[Added Lines]",
          "34:     return \"map_field_copy\";",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerMapFieldName.java||ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerMapFieldName.java": [
          "File: ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerMapFieldName.java -> ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerMapFieldName.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: public class LSServerMapFieldName extends LSServerMapField {",
          "32:   @Override",
          "33:   public String getName() {",
          "35:   }",
          "37:   @NotNull",
          "",
          "[Removed Lines]",
          "34:     return \"map_fieldname\";",
          "",
          "[Added Lines]",
          "34:     return \"map_field_name\";",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerMapFieldValue.java||ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerMapFieldValue.java": [
          "File: ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerMapFieldValue.java -> ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerMapFieldValue.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: public class LSServerMapFieldValue extends LSServerMapField {",
          "32:   @Override",
          "33:   public String getName() {",
          "35:   }",
          "37:   @NotNull",
          "",
          "[Removed Lines]",
          "34:     return \"map_fieldvalue\";",
          "",
          "[Added Lines]",
          "34:     return \"map_field_value\";",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerPostMapValuesListDeserializer.java||ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerPostMapValuesListDeserializer.java": [
          "File: ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerPostMapValuesListDeserializer.java -> ambari-logsearch/ambari-logsearch-server/src/main/java/org/apache/ambari/logsearch/model/common/LSServerPostMapValuesListDeserializer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: public class LSServerPostMapValuesListDeserializer extends JsonDeserializer<LSServerPostMapValuesList> {",
          "37:   @Override",
          "38:   public LSServerPostMapValuesList deserialize(JsonParser jp, DeserializationContext ctxt)",
          "40:     ObjectCodec oc = jp.getCodec();",
          "41:     JsonNode node = oc.readTree(jp);",
          "",
          "[Removed Lines]",
          "39:       throws IOException, JsonProcessingException {",
          "",
          "[Added Lines]",
          "39:       throws IOException {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:         JsonNode mapperProperties = mapperData.getValue();",
          "50:         switch (mapperType) {",
          "51:           case \"map_date\" :",
          "53:             mappers.add(mapDate);",
          "54:             break;",
          "57:             mappers.add(mapFieldName);",
          "58:             break;",
          "61:             mappers.add(mapFieldValue);",
          "62:             break;",
          "65:             mappers.add(mapFieldCopy);",
          "66:             break;",
          "67:           case \"map_anonymize\" :",
          "70:             break;",
          "71:         }",
          "72:       }",
          "",
          "[Removed Lines]",
          "52:             LSServerMapDate mapDate = oc.treeToValue((TreeNode)mapperProperties, LSServerMapDate.class);",
          "55:           case \"map_fieldname\" :",
          "56:             LSServerMapFieldName mapFieldName = oc.treeToValue((TreeNode)mapperProperties, LSServerMapFieldName.class);",
          "59:           case \"map_fieldvalue\" :",
          "60:             LSServerMapFieldValue mapFieldValue = oc.treeToValue((TreeNode)mapperProperties, LSServerMapFieldValue.class);",
          "63:           case \"map_fieldcopy\" :",
          "64:             LSServerMapFieldCopy mapFieldCopy = oc.treeToValue((TreeNode)mapperProperties, LSServerMapFieldCopy.class);",
          "68:             LSServerMapFieldAnonymize mapAnonyimize = oc.treeToValue((TreeNode)mapperProperties, LSServerMapFieldAnonymize.class);",
          "69:             mappers.add(mapAnonyimize);",
          "",
          "[Added Lines]",
          "52:             LSServerMapDate mapDate = oc.treeToValue(mapperProperties, LSServerMapDate.class);",
          "55:           case \"map_field_name\" :",
          "56:             LSServerMapFieldName mapFieldName = oc.treeToValue(mapperProperties, LSServerMapFieldName.class);",
          "59:           case \"map_field_value\" :",
          "60:             LSServerMapFieldValue mapFieldValue = oc.treeToValue(mapperProperties, LSServerMapFieldValue.class);",
          "63:           case \"map_field_copy\" :",
          "64:             LSServerMapFieldCopy mapFieldCopy = oc.treeToValue(mapperProperties, LSServerMapFieldCopy.class);",
          "68:             LSServerMapFieldAnonymize mapAnonymize = oc.treeToValue(mapperProperties, LSServerMapFieldAnonymize.class);",
          "69:             mappers.add(mapAnonymize);",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-web/src/mockdata/mock-data-get.ts||ambari-logsearch/ambari-logsearch-web/src/mockdata/mock-data-get.ts": [
          "File: ambari-logsearch/ambari-logsearch-web/src/mockdata/mock-data-get.ts -> ambari-logsearch/ambari-logsearch-web/src/mockdata/mock-data-get.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1954:         'post_map_values': {",
          "1955:           'callerContext': [",
          "1956:             {",
          "1958:                 'new_field_name': 'req_caller_id'",
          "1959:               }",
          "1960:             }",
          "1961:           ],",
          "1962:           'src': [",
          "1963:             {",
          "1965:                 'new_field_name': 'resource'",
          "1966:               }",
          "1967:             }",
          "1968:           ],",
          "1969:           'allowed': [",
          "1970:             {",
          "1972:                 'pre_value': 'true',",
          "1973:                 'post_value': '1'",
          "1974:               }",
          "1975:             },",
          "1976:             {",
          "1978:                 'pre_value': 'false',",
          "1979:                 'post_value': '0'",
          "1980:               }",
          "1981:             },",
          "1982:             {",
          "1984:                 'new_field_name': 'result'",
          "1985:               }",
          "1986:             }",
          "1987:           ],",
          "1988:           'ip': [",
          "1989:             {",
          "1991:                 'new_field_name': 'cliIP'",
          "1992:               }",
          "1993:             }",
          "1994:           ],",
          "1995:           'proto': [",
          "1996:             {",
          "1998:                 'new_field_name': 'cliType'",
          "1999:               }",
          "2000:             }",
          "2001:           ],",
          "2002:           'cmd': [",
          "2003:             {",
          "2005:                 'new_field_name': 'action'",
          "2006:               }",
          "2007:             }",
          "",
          "[Removed Lines]",
          "1957:               'map_fieldname': {",
          "1964:               'map_fieldname': {",
          "1971:               'map_fieldvalue': {",
          "1977:               'map_fieldvalue': {",
          "1983:               'map_fieldname': {",
          "1990:               'map_fieldname': {",
          "1997:               'map_fieldname': {",
          "2004:               'map_fieldname': {",
          "",
          "[Added Lines]",
          "1957:               'map_field_name': {",
          "1964:               'map_field_name': {",
          "1971:               'map_field_value': {",
          "1977:               'map_field_value': {",
          "1983:               'map_field_name': {",
          "1990:               'map_field_name': {",
          "1997:               'map_field_name': {",
          "2004:               'map_field_name': {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2025:         'post_map_values': {",
          "2026:           'k_authType': [",
          "2027:             {",
          "2029:                 'new_field_name': 'proxyAuthType'",
          "2030:               }",
          "2031:             }",
          "2032:           ],",
          "2033:           'p_authType': [",
          "2034:             {",
          "2036:                 'new_field_name': 'authType'",
          "2037:               }",
          "2038:             }",
          "2039:           ],",
          "2040:           'x_user': [",
          "2041:             {",
          "2043:                 'new_field_name': 'reqUser'",
          "2044:               }",
          "2045:             }",
          "2046:           ],",
          "2047:           'k_user': [",
          "2048:             {",
          "2050:                 'new_field_name': 'proxyUsers'",
          "2051:               }",
          "2052:             }",
          "2053:           ],",
          "2054:           'p_user': [",
          "2055:             {",
          "2057:                 'new_field_name': 'reqUser'",
          "2058:               }",
          "2059:             }",
          "2060:           ],",
          "2061:           'user': [",
          "2062:             {",
          "2064:                 'new_field_name': 'reqUser'",
          "2065:               }",
          "2066:             }",
          "",
          "[Removed Lines]",
          "2028:               'map_fieldname': {",
          "2035:               'map_fieldname': {",
          "2042:               'map_fieldname': {",
          "2049:               'map_fieldname': {",
          "2056:               'map_fieldname': {",
          "2063:               'map_fieldname': {",
          "",
          "[Added Lines]",
          "2028:               'map_field_name': {",
          "2035:               'map_field_name': {",
          "2042:               'map_field_name': {",
          "2049:               'map_field_name': {",
          "2056:               'map_field_name': {",
          "2063:               'map_field_name': {",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/input.config-hive.json.j2||ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/input.config-hive.json.j2": [
          "File: ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/input.config-hive.json.j2 -> ambari-server/src/main/resources/common-services/HIVE/0.12.0.2.0/package/templates/input.config-hive.json.j2",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:           }",
          "75:         },",
          "76:         \"level\":{",
          "78:             \"pre_value\":\"WARNING\",",
          "79:             \"post_value\":\"WARN\"",
          "80:           }",
          "",
          "[Removed Lines]",
          "77:           \"map_fieldvalue\":{",
          "",
          "[Added Lines]",
          "77:           \"map_field_value\":{",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/input.config-ambari.json.j2||ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/input.config-ambari.json.j2": [
          "File: ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/input.config-ambari.json.j2 -> ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/input.config-ambari.json.j2",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:         },",
          "89:         \"level\":{",
          "91:             \"pre_value\":\"WARNING\",",
          "92:             \"post_value\":\"WARN\"",
          "93:           }",
          "",
          "[Removed Lines]",
          "90:           \"map_fieldvalue\":{",
          "",
          "[Added Lines]",
          "90:           \"map_field_value\":{",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "194:         },",
          "195:         \"level\":[",
          "196:           {",
          "198:               \"pre_value\":\"Severe\",",
          "199:               \"post_value\":\"ERROR\"",
          "200:             }",
          "201:           },",
          "202:           {",
          "204:               \"pre_value\":\"Warning\",",
          "205:               \"post_value\":\"WARN\"",
          "206:             }",
          "207:           },",
          "208:           {",
          "210:               \"pre_value\":\"Finer\",",
          "211:               \"post_value\":\"WARN\"",
          "212:             }",
          "213:           },",
          "214:           {",
          "216:               \"pre_value\":\"Info\",",
          "217:               \"post_value\":\"INFO\"",
          "218:             }",
          "219:           },",
          "220:           {",
          "222:               \"pre_value\":\"Config\",",
          "223:               \"post_value\":\"INFO\"",
          "224:             }",
          "225:           },",
          "226:           {",
          "228:               \"pre_value\":\"Fine\",",
          "229:               \"post_value\":\"DEBUG\"",
          "230:             }",
          "231:           },",
          "232:           {",
          "234:               \"pre_value\":\"Finest\",",
          "235:               \"post_value\":\"TRACE\"",
          "236:             }",
          "237:           },",
          "238:           {",
          "240:               \"pre_value\":\"All\",",
          "241:               \"post_value\":\"TRACE\"",
          "242:             }",
          "",
          "[Removed Lines]",
          "197:             \"map_fieldvalue\":{",
          "203:             \"map_fieldvalue\":{",
          "209:             \"map_fieldvalue\":{",
          "215:             \"map_fieldvalue\":{",
          "221:             \"map_fieldvalue\":{",
          "227:             \"map_fieldvalue\":{",
          "233:             \"map_fieldvalue\":{",
          "239:             \"map_fieldvalue\":{",
          "",
          "[Added Lines]",
          "197:             \"map_field_value\":{",
          "203:             \"map_field_value\":{",
          "209:             \"map_field_value\":{",
          "215:             \"map_field_value\":{",
          "221:             \"map_field_value\":{",
          "227:             \"map_field_value\":{",
          "233:             \"map_field_value\":{",
          "239:             \"map_field_value\":{",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "311:       \"value_borders\":\"()\",",
          "312:       \"post_map_values\":{",
          "313:         \"User\":{",
          "315:             \"pre_value\":\"null\",",
          "316:             \"post_value\":\"unknown\"",
          "317:           },",
          "320:           }",
          "321:         },",
          "322:         \"Hostname\":{",
          "325:           }",
          "326:         },",
          "327:         \"Host name\":{",
          "330:           }",
          "331:         },",
          "332:         \"RemoteIp\":{",
          "335:           }",
          "336:         },",
          "337:         \"RequestType\":{",
          "340:           }",
          "341:         },",
          "342:         \"TaskId\":{",
          "345:           }",
          "346:         },",
          "347:         \"Operation\":{",
          "350:           }",
          "351:         },",
          "352:         \"Service\":{",
          "355:           }",
          "356:         },",
          "357:         \"url\":{",
          "360:           }",
          "361:         },",
          "362:         \"ResourcePath\":{",
          "365:           }",
          "366:         },",
          "367:         \"Cluster name\":{",
          "370:           }",
          "371:         },",
          "372:         \"Old name\":{",
          "375:           }",
          "376:         },",
          "377:         \"New name\":{",
          "380:           }",
          "381:         },",
          "382:         \"Reason\":{",
          "385:           }",
          "386:         },",
          "387:         \"Base URL\":{",
          "390:           }",
          "391:         },",
          "392:         \"Base url\":{",
          "395:           }",
          "396:         },",
          "397:         \"Command\":{",
          "399:             \"pre_value\":\"null\",",
          "400:             \"post_value\":\"unknown\"",
          "401:           },",
          "404:           }",
          "405:         },",
          "406:         \"Component\":{",
          "409:           }",
          "410:         },",
          "411:         \"Type\":{",
          "414:           }",
          "415:         },",
          "416:         \"Consecutive failures\": {",
          "419:           }",
          "420:         },",
          "421:         \"Created Username\": {",
          "424:           }",
          "425:         },",
          "426:         \"Affected username\": {",
          "429:           }",
          "430:         },",
          "431:         \"Deleted Username\": {",
          "434:           }",
          "435:         },",
          "436:         \"Alert group name\": {",
          "439:           }",
          "440:         },",
          "441:         \"Alert group ID\": {",
          "444:           }",
          "445:         },",
          "446:         \"Definition IDs\": {",
          "449:           }",
          "450:         },",
          "451:         \"Notification ID\": {",
          "454:           }",
          "455:         },",
          "456:         \"Notification IDs\": {",
          "459:           }",
          "460:         },",
          "461:         \"Notification name\": {",
          "464:           }",
          "465:         },",
          "466:         \"Notification type\": {",
          "469:           }",
          "470:         },",
          "471:         \"Members\": {",
          "474:           }",
          "475:         },",
          "476:         \"Description\": {",
          "479:           }",
          "480:         },",
          "481:         \"Email from\": {",
          "484:           }",
          "485:         },",
          "486:         \"Email to\": {",
          "489:           }",
          "490:         },",
          "491:         \"Group\": {",
          "494:           }",
          "495:         },",
          "496:         \"Group IDs\": {",
          "499:           }",
          "500:         },",
          "501:         \"Alert states\": {",
          "504:           }",
          "505:         },",
          "506:         \"Blueprint\": {",
          "509:           }",
          "510:         },",
          "511:         \"Blueprint name\": {",
          "514:           }",
          "515:         },",
          "516:         \"State\": {",
          "519:           }",
          "520:         },",
          "521:         \"Principal\": {",
          "524:           }",
          "525:         },",
          "526:         \"Alias\": {",
          "529:           }",
          "530:         },",
          "531:         \"Keytab file\": {",
          "534:           }",
          "535:         },",
          "536:         \"Upgrade type\":{",
          "539:           }",
          "540:         },",
          "541:         \"Details\":{",
          "544:           }",
          "545:         },",
          "546:         \"Name\":{",
          "549:           }",
          "550:         },",
          "551:         \"Display name\":{",
          "553:             \"pre_value\":\"null\",",
          "554:             \"post_value\":\"unknown\"",
          "555:           },",
          "558:           }",
          "559:         },",
          "560:         \"OS\":{",
          "563:           }",
          "564:         },",
          "565:         \"Repo id\":{",
          "568:           }",
          "569:         },",
          "570:         \"Repo version\":{",
          "572:             \"pre_value\":\"null\",",
          "573:             \"post_value\":\"unknown\"",
          "574:           },",
          "577:           }",
          "578:         },",
          "579:         \"Repo version ID\":{",
          "582:           }",
          "583:         },",
          "584:         \"Repositories\":{",
          "587:           }",
          "588:         },",
          "589:         \"RequestId\":{",
          "592:           }",
          "593:         },",
          "594:         \"Request id\":{",
          "597:           }",
          "598:         },",
          "599:         \"Repository ID\":{",
          "602:           }",
          "603:         },",
          "604:         \"Repository name\":{",
          "607:           }",
          "608:         },",
          "609:         \"Roles\":{",
          "612:           }",
          "613:         },",
          "614:         \"Permissions\":{",
          "617:           }",
          "618:         },",
          "619:         \"Stack\":{",
          "622:           }",
          "623:         },",
          "624:         \"Stack version\":{",
          "627:           }",
          "628:         },",
          "629:         \"Stage id\":{",
          "632:           }",
          "633:         },",
          "634:         \"Administrator\":{",
          "636:             \"pre_value\":\"yes\",",
          "637:             \"post_value\":\"1\"",
          "638:           },",
          "640:             \"pre_value\":\"no\",",
          "641:             \"post_value\":\"0\"",
          "642:           },",
          "645:           }",
          "646:         },",
          "647:         \"Active\":{",
          "649:             \"pre_value\":\"y\",",
          "650:             \"post_value\":\"1\"",
          "651:           },",
          "653:             \"pre_value\":\"n\",",
          "654:             \"post_value\":\"0\"",
          "655:           },",
          "658:           }",
          "659:         },",
          "660:         \"Version\":{",
          "663:           }",
          "664:         },",
          "665:         \"VersionNote\":{",
          "667:             \"pre_value\":\"null\",",
          "668:             \"post_value\":\"unknown\"",
          "669:           },",
          "672:           }",
          "673:         },",
          "674:         \"VersionNumber\":{",
          "676:             \"pre_value\":\"Vnull\",",
          "677:             \"post_value\":\"unknown\"",
          "678:           },",
          "681:           }",
          "682:         },",
          "683:         \"Status\":[",
          "684:           {",
          "686:               \"copy_name\": \"ws_status\"",
          "687:             }",
          "688:           },",
          "689:           {",
          "691:               \"pre_value\":\"Success\",",
          "692:               \"post_value\":\"1\"",
          "693:             }",
          "694:           },",
          "695:           {",
          "697:               \"pre_value\":\"Successfully queued\",",
          "698:               \"post_value\":\"1\"",
          "699:             }",
          "700:           },",
          "701:           {",
          "703:               \"pre_value\":\"QUEUED\",",
          "704:               \"post_value\":\"1\"",
          "705:             }",
          "706:           },",
          "707:           {",
          "709:               \"pre_value\":\"PENDING\",",
          "710:               \"post_value\":\"1\"",
          "711:             }",
          "712:           },",
          "713:           {",
          "715:               \"pre_value\":\"COMPLETED\",",
          "716:               \"post_value\":\"1\"",
          "717:             }",
          "718:           },",
          "719:           {",
          "721:               \"pre_value\":\"IN_PROGRESS\",",
          "722:               \"post_value\":\"1\"",
          "723:             }",
          "724:           },",
          "725:           {",
          "727:               \"pre_value\":\"Failed\",",
          "728:               \"post_value\":\"0\"",
          "729:             }",
          "730:           },",
          "731:           {",
          "733:               \"pre_value\":\"Failed to queue\",",
          "734:               \"post_value\":\"0\"",
          "735:             }",
          "736:           },",
          "737:           {",
          "739:               \"pre_value\":\"HOLDING\",",
          "740:               \"post_value\":\"0\"",
          "741:             }",
          "742:           },",
          "743:           {",
          "745:               \"pre_value\":\"HOLDING_FAILED\",",
          "746:               \"post_value\":\"0\"",
          "747:             }",
          "748:           },",
          "749:           {",
          "751:               \"pre_value\":\"HOLDING_TIMEDOUT\",",
          "752:               \"post_value\":\"0\"",
          "753:             }",
          "754:           },",
          "755:           {",
          "757:               \"pre_value\":\"FAILED\",",
          "758:               \"post_value\":\"0\"",
          "759:             }",
          "760:           },",
          "761:           {",
          "763:               \"pre_value\":\"TIMEDOUT\",",
          "764:               \"post_value\":\"0\"",
          "765:             }",
          "766:           },",
          "767:           {",
          "769:               \"pre_value\":\"ABORTED\",",
          "770:               \"post_value\":\"0\"",
          "771:             }",
          "772:           },",
          "773:           {",
          "775:               \"pre_value\":\"SKIPPED_FAILED\",",
          "776:               \"post_value\":\"0\"",
          "777:             }",
          "778:           },",
          "779:           {",
          "782:             }",
          "783:           }",
          "784:         ],",
          "785:         \"ResultStatus\":[",
          "786:           {",
          "788:               \"copy_name\": \"ws_result_status\"",
          "789:             }",
          "790:           },",
          "791:           {",
          "793:               \"pre_value\":\"200 OK\",",
          "794:               \"post_value\":\"1\"",
          "795:             }",
          "796:           },",
          "797:           {",
          "799:               \"pre_value\":\"201 Created\",",
          "800:               \"post_value\":\"1\"",
          "801:             }",
          "802:           },",
          "803:           {",
          "805:               \"pre_value\":\"202 Accepted\",",
          "806:               \"post_value\":\"1\"",
          "807:             }",
          "808:           },",
          "809:           {",
          "811:               \"pre_value\":\"400 Bad Request\",",
          "812:               \"post_value\":\"0\"",
          "813:             }",
          "814:           },",
          "815:           {",
          "817:               \"pre_value\":\"401 Unauthorized\",",
          "818:               \"post_value\":\"0\"",
          "819:             }",
          "820:           },",
          "821:           {",
          "823:               \"pre_value\":\"403 Forbidden\",",
          "824:               \"post_value\":\"0\"",
          "825:             }",
          "826:           },",
          "827:           {",
          "829:               \"pre_value\":\"404 Not Found\",",
          "830:               \"post_value\":\"0\"",
          "831:             }",
          "832:           },",
          "833:           {",
          "835:               \"pre_value\":\"409 Resource Conflict\",",
          "836:               \"post_value\":\"0\"",
          "837:             }",
          "838:           },",
          "839:           {",
          "841:               \"pre_value\":\"500 Internal Server Error\",",
          "842:               \"post_value\":\"0\"",
          "843:             }",
          "844:           },",
          "845:           {",
          "848:             }",
          "849:           }",
          "850:         ]",
          "",
          "[Removed Lines]",
          "314:           \"map_fieldvalue\":{",
          "318:           \"map_fieldname\":{",
          "319:             \"new_fieldname\":\"reqUser\"",
          "323:           \"map_fieldname\":{",
          "324:             \"new_fieldname\":\"host\"",
          "328:           \"map_fieldname\":{",
          "329:             \"new_fieldname\":\"host\"",
          "333:           \"map_fieldname\":{",
          "334:             \"new_fieldname\":\"cliIP\"",
          "338:           \"map_fieldname\":{",
          "339:             \"new_fieldname\":\"cliType\"",
          "343:           \"map_fieldname\":{",
          "344:             \"new_fieldname\":\"task_id\"",
          "348:           \"map_fieldname\":{",
          "349:             \"new_fieldname\":\"action\"",
          "353:           \"map_fieldname\":{",
          "354:             \"new_fieldname\":\"ws_service\"",
          "358:           \"map_fieldname\":{",
          "359:             \"new_fieldname\":\"resource\"",
          "363:           \"map_fieldname\":{",
          "364:             \"new_fieldname\":\"resource\"",
          "368:           \"map_fieldname\":{",
          "369:             \"new_fieldname\":\"cluster\"",
          "373:           \"map_fieldname\":{",
          "374:             \"new_fieldname\":\"ws_old_name\"",
          "378:           \"map_fieldname\":{",
          "379:             \"new_fieldname\":\"ws_new_name\"",
          "383:           \"map_fieldname\":{",
          "384:             \"new_fieldname\":\"reason\"",
          "388:           \"map_fieldname\":{",
          "389:             \"new_fieldname\":\"ws_base_url\"",
          "393:           \"map_fieldname\":{",
          "394:             \"new_fieldname\":\"ws_base_url\"",
          "398:           \"map_fieldvalue\":{",
          "402:           \"map_fieldname\":{",
          "403:             \"new_fieldname\":\"ws_command\"",
          "407:           \"map_fieldname\":{",
          "408:             \"new_fieldname\":\"ws_component\"",
          "412:           \"map_fieldname\":{",
          "413:             \"new_fieldname\":\"ws_type\"",
          "417:           \"map_fieldname\":{",
          "418:             \"new_fieldname\":\"ws_consecutive_failures\"",
          "422:           \"map_fieldname\":{",
          "423:             \"new_fieldname\":\"ws_username\"",
          "427:           \"map_fieldname\":{",
          "428:             \"new_fieldname\":\"ws_username\"",
          "432:           \"map_fieldname\":{",
          "433:             \"new_fieldname\":\"ws_username\"",
          "437:           \"map_fieldname\":{",
          "438:             \"new_fieldname\":\"ws_alert_group_name\"",
          "442:           \"map_fieldname\":{",
          "443:             \"new_fieldname\":\"ws_alert_group_id\"",
          "447:           \"map_fieldname\":{",
          "448:             \"new_fieldname\":\"std_alert_definition_ids\"",
          "452:           \"map_fieldname\":{",
          "453:             \"new_fieldname\":\"ws_alert_notification_id\"",
          "457:           \"map_fieldname\":{",
          "458:             \"new_fieldname\":\"std_alert_notification_ids\"",
          "462:           \"map_fieldname\":{",
          "463:             \"new_fieldname\":\"ws_alert_notification_name\"",
          "467:           \"map_fieldname\":{",
          "468:             \"new_fieldname\":\"ws_alert_notification_type\"",
          "472:           \"map_fieldname\":{",
          "473:             \"new_fieldname\":\"std_members\"",
          "477:           \"map_fieldname\":{",
          "478:             \"new_fieldname\":\"ws_description\"",
          "482:           \"map_fieldname\":{",
          "483:             \"new_fieldname\":\"ws_alert_email_from\"",
          "487:           \"map_fieldname\":{",
          "488:             \"new_fieldname\":\"ws_alert_email_to\"",
          "492:           \"map_fieldname\":{",
          "493:             \"new_fieldname\":\"ws_group\"",
          "497:           \"map_fieldname\":{",
          "498:             \"new_fieldname\":\"std_alert_group_ids\"",
          "502:           \"map_fieldname\":{",
          "503:             \"new_fieldname\":\"std_alert_states\"",
          "507:           \"map_fieldname\":{",
          "508:             \"new_fieldname\":\"ws_blueprint\"",
          "512:           \"map_fieldname\":{",
          "513:             \"new_fieldname\":\"ws_blueprint_name\"",
          "517:           \"map_fieldname\":{",
          "518:             \"new_fieldname\":\"ws_state\"",
          "522:           \"map_fieldname\":{",
          "523:             \"new_fieldname\":\"ws_principal\"",
          "527:           \"map_fieldname\":{",
          "528:             \"new_fieldname\":\"ws_alias\"",
          "532:           \"map_fieldname\":{",
          "533:             \"new_fieldname\":\"ws_keytab_file\"",
          "537:           \"map_fieldname\":{",
          "538:             \"new_fieldname\":\"ws_upgrade_type\"",
          "542:           \"map_fieldname\":{",
          "543:             \"new_fieldname\":\"ws_details\"",
          "547:           \"map_fieldname\":{",
          "548:             \"new_fieldname\":\"ws_name\"",
          "552:           \"map_fieldvalue\":{",
          "556:           \"map_fieldname\":{",
          "557:             \"new_fieldname\":\"ws_display_name\"",
          "561:           \"map_fieldname\":{",
          "562:             \"new_fieldname\":\"ws_os\"",
          "566:           \"map_fieldname\":{",
          "567:             \"new_fieldname\":\"ws_repo_id\"",
          "571:           \"map_fieldvalue\":{",
          "575:           \"map_fieldname\":{",
          "576:             \"new_fieldname\":\"ws_repo_version\"",
          "580:           \"map_fieldname\":{",
          "581:             \"new_fieldname\":\"ws_repo_version_id\"",
          "585:           \"map_fieldname\":{",
          "586:             \"new_fieldname\":\"ws_repositories\"",
          "590:           \"map_fieldname\":{",
          "591:             \"new_fieldname\":\"ws_request_id\"",
          "595:           \"map_fieldname\":{",
          "596:             \"new_fieldname\":\"ws_request_id\"",
          "600:           \"map_fieldname\":{",
          "601:             \"new_fieldname\":\"ws_repo_id\"",
          "605:           \"map_fieldname\":{",
          "606:             \"new_fieldname\":\"ws_repo_name\"",
          "610:           \"map_fieldname\":{",
          "611:             \"new_fieldname\":\"ws_roles\"",
          "615:           \"map_fieldname\":{",
          "616:             \"new_fieldname\":\"std_permissions\"",
          "620:           \"map_fieldname\":{",
          "621:             \"new_fieldname\":\"ws_stack\"",
          "625:           \"map_fieldname\":{",
          "626:             \"new_fieldname\":\"ws_stack_version\"",
          "630:           \"map_fieldname\":{",
          "631:             \"new_fieldname\":\"ws_stage_id\"",
          "635:           \"map_fieldvalue\":{",
          "639:           \"map_fieldvalue\":{",
          "643:           \"map_fieldname\":{",
          "644:             \"new_fieldname\":\"ws_admin\"",
          "648:           \"map_fieldvalue\":{",
          "652:           \"map_fieldvalue\":{",
          "656:           \"map_fieldname\":{",
          "657:             \"new_fieldname\":\"ws_active\"",
          "661:           \"map_fieldname\":{",
          "662:             \"new_fieldname\":\"ws_version\"",
          "666:           \"map_fieldvalue\":{",
          "670:           \"map_fieldname\":{",
          "671:             \"new_fieldname\":\"ws_version_note\"",
          "675:           \"map_fieldvalue\":{",
          "679:           \"map_fieldname\":{",
          "680:             \"new_fieldname\":\"ws_version_number\"",
          "685:             \"map_fieldcopy\":{",
          "690:             \"map_fieldvalue\":{",
          "696:             \"map_fieldvalue\":{",
          "702:             \"map_fieldvalue\":{",
          "708:             \"map_fieldvalue\":{",
          "714:             \"map_fieldvalue\":{",
          "720:             \"map_fieldvalue\":{",
          "726:             \"map_fieldvalue\":{",
          "732:             \"map_fieldvalue\":{",
          "738:             \"map_fieldvalue\":{",
          "744:             \"map_fieldvalue\":{",
          "750:             \"map_fieldvalue\":{",
          "756:             \"map_fieldvalue\":{",
          "762:             \"map_fieldvalue\":{",
          "768:             \"map_fieldvalue\":{",
          "774:             \"map_fieldvalue\":{",
          "780:             \"map_fieldname\":{",
          "781:               \"new_fieldname\":\"result\"",
          "787:             \"map_fieldcopy\":{",
          "792:             \"map_fieldvalue\":{",
          "798:             \"map_fieldvalue\":{",
          "804:             \"map_fieldvalue\":{",
          "810:             \"map_fieldvalue\":{",
          "816:             \"map_fieldvalue\":{",
          "822:             \"map_fieldvalue\":{",
          "828:             \"map_fieldvalue\":{",
          "834:             \"map_fieldvalue\":{",
          "840:             \"map_fieldvalue\":{",
          "846:             \"map_fieldname\":{",
          "847:               \"new_fieldname\":\"result\"",
          "",
          "[Added Lines]",
          "314:           \"map_field_value\":{",
          "318:           \"map_field_name\":{",
          "319:             \"new_field_name\":\"reqUser\"",
          "323:           \"map_field_name\":{",
          "324:             \"new_field_name\":\"host\"",
          "328:           \"map_field_name\":{",
          "329:             \"new_field_name\":\"host\"",
          "333:           \"map_field_name\":{",
          "334:             \"new_field_name\":\"cliIP\"",
          "338:           \"map_field_name\":{",
          "339:             \"new_field_name\":\"cliType\"",
          "343:           \"map_field_name\":{",
          "344:             \"new_field_name\":\"task_id\"",
          "348:           \"map_field_name\":{",
          "349:             \"new_field_name\":\"action\"",
          "353:           \"map_field_name\":{",
          "354:             \"new_field_name\":\"ws_service\"",
          "358:           \"map_field_name\":{",
          "359:             \"new_field_name\":\"resource\"",
          "363:           \"map_field_name\":{",
          "364:             \"new_field_name\":\"resource\"",
          "368:           \"map_field_name\":{",
          "369:             \"new_field_name\":\"cluster\"",
          "373:           \"map_field_name\":{",
          "374:             \"new_field_name\":\"ws_old_name\"",
          "378:           \"map_field_name\":{",
          "379:             \"new_field_name\":\"ws_new_name\"",
          "383:           \"map_field_name\":{",
          "384:             \"new_field_name\":\"reason\"",
          "388:           \"map_field_name\":{",
          "389:             \"new_field_name\":\"ws_base_url\"",
          "393:           \"map_field_name\":{",
          "394:             \"new_field_name\":\"ws_base_url\"",
          "398:           \"map_field_value\":{",
          "402:           \"map_field_name\":{",
          "403:             \"new_field_name\":\"ws_command\"",
          "407:           \"map_field_name\":{",
          "408:             \"new_field_name\":\"ws_component\"",
          "412:           \"map_field_name\":{",
          "413:             \"new_field_name\":\"ws_type\"",
          "417:           \"map_field_name\":{",
          "418:             \"new_field_name\":\"ws_consecutive_failures\"",
          "422:           \"map_field_name\":{",
          "423:             \"new_field_name\":\"ws_username\"",
          "427:           \"map_field_name\":{",
          "428:             \"new_field_name\":\"ws_username\"",
          "432:           \"map_field_name\":{",
          "433:             \"new_field_name\":\"ws_username\"",
          "437:           \"map_field_name\":{",
          "438:             \"new_field_name\":\"ws_alert_group_name\"",
          "442:           \"map_field_name\":{",
          "443:             \"new_field_name\":\"ws_alert_group_id\"",
          "447:           \"map_field_name\":{",
          "448:             \"new_field_name\":\"std_alert_definition_ids\"",
          "452:           \"map_field_name\":{",
          "453:             \"new_field_name\":\"ws_alert_notification_id\"",
          "457:           \"map_field_name\":{",
          "458:             \"new_field_name\":\"std_alert_notification_ids\"",
          "462:           \"map_field_name\":{",
          "463:             \"new_field_name\":\"ws_alert_notification_name\"",
          "467:           \"map_field_name\":{",
          "468:             \"new_field_name\":\"ws_alert_notification_type\"",
          "472:           \"map_field_name\":{",
          "473:             \"new_field_name\":\"std_members\"",
          "477:           \"map_field_name\":{",
          "478:             \"new_field_name\":\"ws_description\"",
          "482:           \"map_field_name\":{",
          "483:             \"new_field_name\":\"ws_alert_email_from\"",
          "487:           \"map_field_name\":{",
          "488:             \"new_field_name\":\"ws_alert_email_to\"",
          "492:           \"map_field_name\":{",
          "493:             \"new_field_name\":\"ws_group\"",
          "497:           \"map_field_name\":{",
          "498:             \"new_field_name\":\"std_alert_group_ids\"",
          "502:           \"map_field_name\":{",
          "503:             \"new_field_name\":\"std_alert_states\"",
          "507:           \"map_field_name\":{",
          "508:             \"new_field_name\":\"ws_blueprint\"",
          "512:           \"map_field_name\":{",
          "513:             \"new_field_name\":\"ws_blueprint_name\"",
          "517:           \"map_field_name\":{",
          "518:             \"new_field_name\":\"ws_state\"",
          "522:           \"map_field_name\":{",
          "523:             \"new_field_name\":\"ws_principal\"",
          "527:           \"map_field_name\":{",
          "528:             \"new_field_name\":\"ws_alias\"",
          "532:           \"map_field_name\":{",
          "533:             \"new_field_name\":\"ws_keytab_file\"",
          "537:           \"map_field_name\":{",
          "538:             \"new_field_name\":\"ws_upgrade_type\"",
          "542:           \"map_field_name\":{",
          "543:             \"new_field_name\":\"ws_details\"",
          "547:           \"map_field_name\":{",
          "548:             \"new_field_name\":\"ws_name\"",
          "552:           \"map_field_value\":{",
          "556:           \"map_field_name\":{",
          "557:             \"new_field_name\":\"ws_display_name\"",
          "561:           \"map_field_name\":{",
          "562:             \"new_field_name\":\"ws_os\"",
          "566:           \"map_field_name\":{",
          "567:             \"new_field_name\":\"ws_repo_id\"",
          "571:           \"map_field_value\":{",
          "575:           \"map_field_name\":{",
          "576:             \"new_field_name\":\"ws_repo_version\"",
          "580:           \"map_field_name\":{",
          "581:             \"new_field_name\":\"ws_repo_version_id\"",
          "585:           \"map_field_name\":{",
          "586:             \"new_field_name\":\"ws_repositories\"",
          "590:           \"map_field_name\":{",
          "591:             \"new_field_name\":\"ws_request_id\"",
          "595:           \"map_field_name\":{",
          "596:             \"new_field_name\":\"ws_request_id\"",
          "600:           \"map_field_name\":{",
          "601:             \"new_field_name\":\"ws_repo_id\"",
          "605:           \"map_field_name\":{",
          "606:             \"new_field_name\":\"ws_repo_name\"",
          "610:           \"map_field_name\":{",
          "611:             \"new_field_name\":\"ws_roles\"",
          "615:           \"map_field_name\":{",
          "616:             \"new_field_name\":\"std_permissions\"",
          "620:           \"map_field_name\":{",
          "621:             \"new_field_name\":\"ws_stack\"",
          "625:           \"map_field_name\":{",
          "626:             \"new_field_name\":\"ws_stack_version\"",
          "630:           \"map_field_name\":{",
          "631:             \"new_field_name\":\"ws_stage_id\"",
          "635:           \"map_field_value\":{",
          "639:           \"map_field_value\":{",
          "643:           \"map_field_name\":{",
          "644:             \"new_field_name\":\"ws_admin\"",
          "648:           \"map_field_value\":{",
          "652:           \"map_field_value\":{",
          "656:           \"map_field_name\":{",
          "657:             \"new_field_name\":\"ws_active\"",
          "661:           \"map_field_name\":{",
          "662:             \"new_field_name\":\"ws_version\"",
          "666:           \"map_field_value\":{",
          "670:           \"map_field_name\":{",
          "671:             \"new_field_name\":\"ws_version_note\"",
          "675:           \"map_field_value\":{",
          "679:           \"map_field_name\":{",
          "680:             \"new_field_name\":\"ws_version_number\"",
          "685:             \"map_field_copy\":{",
          "690:             \"map_field_value\":{",
          "696:             \"map_field_value\":{",
          "702:             \"map_field_value\":{",
          "708:             \"map_field_value\":{",
          "714:             \"map_field_value\":{",
          "720:             \"map_field_value\":{",
          "726:             \"map_field_value\":{",
          "732:             \"map_field_value\":{",
          "738:             \"map_field_value\":{",
          "744:             \"map_field_value\":{",
          "750:             \"map_field_value\":{",
          "756:             \"map_field_value\":{",
          "762:             \"map_field_value\":{",
          "768:             \"map_field_value\":{",
          "774:             \"map_field_value\":{",
          "780:             \"map_field_name\":{",
          "781:               \"new_field_name\":\"result\"",
          "787:             \"map_field_copy\":{",
          "792:             \"map_field_value\":{",
          "798:             \"map_field_value\":{",
          "804:             \"map_field_value\":{",
          "810:             \"map_field_value\":{",
          "816:             \"map_field_value\":{",
          "822:             \"map_field_value\":{",
          "828:             \"map_field_value\":{",
          "834:             \"map_field_value\":{",
          "840:             \"map_field_value\":{",
          "846:             \"map_field_name\":{",
          "847:               \"new_field_name\":\"result\"",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/SPARK/1.2.1/package/templates/input.config-spark.json.j2||ambari-server/src/main/resources/common-services/SPARK/1.2.1/package/templates/input.config-spark.json.j2": [
          "File: ambari-server/src/main/resources/common-services/SPARK/1.2.1/package/templates/input.config-spark.json.j2 -> ambari-server/src/main/resources/common-services/SPARK/1.2.1/package/templates/input.config-spark.json.j2",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:           }",
          "56:         },",
          "57:         \"level\":{",
          "59:             \"pre_value\":\"WARNING\",",
          "60:             \"post_value\":\"WARN\"",
          "61:           }",
          "",
          "[Removed Lines]",
          "58:           \"map_fieldvalue\":{",
          "",
          "[Added Lines]",
          "58:           \"map_field_value\":{",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/SPARK2/2.0.0/package/templates/input.config-spark2.json.j2||ambari-server/src/main/resources/common-services/SPARK2/2.0.0/package/templates/input.config-spark2.json.j2": [
          "File: ambari-server/src/main/resources/common-services/SPARK2/2.0.0/package/templates/input.config-spark2.json.j2 -> ambari-server/src/main/resources/common-services/SPARK2/2.0.0/package/templates/input.config-spark2.json.j2",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:           }",
          "56:         },",
          "57:         \"level\":{",
          "59:             \"pre_value\":\"WARNING\",",
          "60:             \"post_value\":\"WARN\"",
          "61:           }",
          "",
          "[Removed Lines]",
          "58:           \"map_fieldvalue\":{",
          "",
          "[Added Lines]",
          "58:           \"map_field_value\":{",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5f0f7febff107b79755e4797b94de5144e9a7ec0",
      "candidate_info": {
        "commit_hash": "5f0f7febff107b79755e4797b94de5144e9a7ec0",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/5f0f7febff107b79755e4797b94de5144e9a7ec0",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ClusterPrivilegeChangeRequestAuditEvent.java",
          "ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ViewPrivilegeChangeRequestAuditEvent.java"
        ],
        "message": "[AMBARI-25124] ambari-audit.log entries span multiple lines (apappu)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ClusterPrivilegeChangeRequestAuditEvent.java||ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ClusterPrivilegeChangeRequestAuditEvent.java",
          "ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ViewPrivilegeChangeRequestAuditEvent.java||ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ViewPrivilegeChangeRequestAuditEvent.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ClusterPrivilegeChangeRequestAuditEvent.java||ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ClusterPrivilegeChangeRequestAuditEvent.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ClusterPrivilegeChangeRequestAuditEvent.java -> ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ClusterPrivilegeChangeRequestAuditEvent.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:       List<String> lines = new LinkedList<>();",
          "89:       for (String role : roleSet) {",
          "91:         lines.add(role + \": [\");",
          "92:         if (users.get(role) != null && !users.get(role).isEmpty()) {",
          "93:           tmpLines.add(\"Users: \" + StringUtils.join(users.get(role), \", \"));",
          "",
          "[Removed Lines]",
          "86:       List<String> tmpLines = null;",
          "90:         tmpLines = new LinkedList<>();",
          "",
          "[Added Lines]",
          "88:         List<String>  tmpLines = new LinkedList<>();",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ViewPrivilegeChangeRequestAuditEvent.java||ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ViewPrivilegeChangeRequestAuditEvent.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ViewPrivilegeChangeRequestAuditEvent.java -> ambari-server/src/main/java/org/apache/ambari/server/audit/event/request/ViewPrivilegeChangeRequestAuditEvent.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "103:       builder.append(\", Permissions(\");",
          "105:       List<String> lines = new LinkedList<>();",
          "108:       for (String role : roleSet) {",
          "110:         lines.add(role + \": [\");",
          "111:         if (users.get(role) != null && !users.get(role).isEmpty()) {",
          "112:           tmpLines.add(\"Users: \" + StringUtils.join(users.get(role), \", \"));",
          "",
          "[Removed Lines]",
          "106:       List<String> tmpLines = null;",
          "109:         tmpLines = new LinkedList<>();",
          "",
          "[Added Lines]",
          "108:         List<String>  tmpLines = new LinkedList<>();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aba27761b4f383e218c80b996512355e7deaa61e",
      "candidate_info": {
        "commit_hash": "aba27761b4f383e218c80b996512355e7deaa61e",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/aba27761b4f383e218c80b996512355e7deaa61e",
        "files": [
          "ambari-logsearch/ambari-logsearch-web/src/app/classes/components/graph/time-graph.component.ts",
          "ambari-logsearch/ambari-logsearch-web/src/index.html"
        ],
        "message": "[AMBARI-24490] [Log Search UI] Time Histogram Chart keep invert grey selection area when no selection happened (#2096)\n\n(cherry picked from commit 8611589b53ea0d8dc882ed8a743d6a246e323389)",
        "before_after_code_files": [
          "ambari-logsearch/ambari-logsearch-web/src/app/classes/components/graph/time-graph.component.ts||ambari-logsearch/ambari-logsearch-web/src/app/classes/components/graph/time-graph.component.ts",
          "ambari-logsearch/ambari-logsearch-web/src/index.html||ambari-logsearch/ambari-logsearch-web/src/index.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-logsearch/ambari-logsearch-web/src/app/classes/components/graph/time-graph.component.ts||ambari-logsearch/ambari-logsearch-web/src/app/classes/components/graph/time-graph.component.ts": [
          "File: ambari-logsearch/ambari-logsearch-web/src/app/classes/components/graph/time-graph.component.ts -> ambari-logsearch/ambari-logsearch-web/src/app/classes/components/graph/time-graph.component.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "250:           const dateRange: [number, number] = this.getTimeRangeByXRanges(startX, endX);",
          "251:           this.selectArea.emit(dateRange);",
          "252:           this.dragArea.remove();",
          "254:           this.setChartTimeGap(new Date(dateRange[0]), new Date(dateRange[1]));",
          "255:         }",
          "256:       })",
          "257:     );",
          "258:     d3.selectAll(`svg#${this.svgId} .value, svg#${this.svgId} .axis`).call(d3.drag().on('start', (): void => {",
          "",
          "[Removed Lines]",
          "253:           this.clearInvertDragArea();",
          "",
          "[Added Lines]",
          "255:         this.clearInvertDragArea();",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-web/src/index.html||ambari-logsearch/ambari-logsearch-web/src/index.html": [
          "File: ambari-logsearch/ambari-logsearch-web/src/index.html -> ambari-logsearch/ambari-logsearch-web/src/index.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:   <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">",
          "26:   <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">",
          "27:   <style>",
          "28:     .spinner {",
          "29:       width: 40px;",
          "30:       height: 40px;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28:     body {",
          "29:       background-color: #ECECEC;",
          "30:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "10cb163d3dd4888a7f60a2653a7150e16e792cc4",
      "candidate_info": {
        "commit_hash": "10cb163d3dd4888a7f60a2653a7150e16e792cc4",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/10cb163d3dd4888a7f60a2653a7150e16e792cc4",
        "files": [
          "ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/properties/solr-log4j.properties.j2",
          "ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/audit_logs-solrconfig.xml.j2",
          "ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/service_logs-solrconfig.xml.j2"
        ],
        "message": "AMBARI-24480. ADDENDUM: Upgrade Infra Solr (from Solr 7.3.1 to Solr 7.4.0) (#2082)",
        "before_after_code_files": [
          "ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/properties/solr-log4j.properties.j2||ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/properties/solr-log4j.properties.j2",
          "ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/audit_logs-solrconfig.xml.j2||ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/audit_logs-solrconfig.xml.j2",
          "ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/service_logs-solrconfig.xml.j2||ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/service_logs-solrconfig.xml.j2"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/properties/solr-log4j.properties.j2||ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/properties/solr-log4j.properties.j2": [
          "File: ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/properties/solr-log4j.properties.j2 -> ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/properties/solr-log4j.properties.j2",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/audit_logs-solrconfig.xml.j2||ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/audit_logs-solrconfig.xml.j2": [
          "File: ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/audit_logs-solrconfig.xml.j2 -> ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/audit_logs-solrconfig.xml.j2",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:   that you fully re-index after changing this setting as it can",
          "36:   affect both how text is indexed and queried.",
          "37:   -->",
          "40:   <!-- <lib/> directives can be used to instruct Solr to load any Jars",
          "41:   identified and use them to resolve any \"plugins\" specified in",
          "",
          "[Removed Lines]",
          "38:   <luceneMatchVersion>7.3.1</luceneMatchVersion>",
          "",
          "[Added Lines]",
          "38:   <luceneMatchVersion>7.4.0</luceneMatchVersion>",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/service_logs-solrconfig.xml.j2||ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/service_logs-solrconfig.xml.j2": [
          "File: ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/service_logs-solrconfig.xml.j2 -> ambari-server/src/main/resources/common-services/LOGSEARCH/0.5.0/properties/service_logs-solrconfig.xml.j2",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:   that you fully re-index after changing this setting as it can",
          "36:   affect both how text is indexed and queried.",
          "37:   -->",
          "40:   <!-- <lib/> directives can be used to instruct Solr to load any Jars",
          "41:   identified and use them to resolve any \"plugins\" specified in",
          "",
          "[Removed Lines]",
          "38:   <luceneMatchVersion>7.3.1</luceneMatchVersion>",
          "",
          "[Added Lines]",
          "38:   <luceneMatchVersion>7.4.0</luceneMatchVersion>",
          "",
          "---------------"
        ]
      }
    }
  ]
}