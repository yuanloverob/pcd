{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c28cee010963900081666cf0a35df2c07a4f40fa",
      "candidate_info": {
        "commit_hash": "c28cee010963900081666cf0a35df2c07a4f40fa",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/c28cee010963900081666cf0a35df2c07a4f40fa",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java"
        ],
        "message": "AMBARI-24249 - Ambari Upgrade Loads All Alerts When Renaming SOLR (#1688)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java||ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java||ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java -> ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "39: import java.util.stream.Stream;",
          "41: import javax.persistence.EntityManager;",
          "43: import org.apache.ambari.server.AmbariException;",
          "44: import org.apache.ambari.server.actionmanager.HostRoleCommand;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42: import javax.persistence.TypedQuery;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53: import org.apache.ambari.server.controller.KerberosHelper;",
          "54: import org.apache.ambari.server.controller.internal.CalculatedStatus;",
          "55: import org.apache.ambari.server.orm.DBAccessor;",
          "59: import org.apache.ambari.server.orm.dao.AmbariConfigurationDAO;",
          "60: import org.apache.ambari.server.orm.dao.ArtifactDAO;",
          "61: import org.apache.ambari.server.orm.dao.DaoUtils;",
          "62: import org.apache.ambari.server.orm.dao.HostComponentStateDAO;",
          "63: import org.apache.ambari.server.orm.dao.RequestDAO;",
          "65: import org.apache.ambari.server.orm.entities.AlertDefinitionEntity;",
          "66: import org.apache.ambari.server.orm.entities.AlertGroupEntity;",
          "67: import org.apache.ambari.server.orm.entities.AlertHistoryEntity;",
          "",
          "[Removed Lines]",
          "56: import org.apache.ambari.server.orm.dao.AlertDefinitionDAO;",
          "57: import org.apache.ambari.server.orm.dao.AlertDispatchDAO;",
          "58: import org.apache.ambari.server.orm.dao.AlertsDAO;",
          "64: import org.apache.ambari.server.orm.dao.ServiceConfigDAO;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1091:     if (MapUtils.isEmpty(clusterMap))",
          "1092:       return;",
          "1099:       }",
          "1128:     getEntityManagerProvider().get().getEntityManagerFactory().getCache().evictAll();",
          "",
          "[Removed Lines]",
          "1094:     ServiceConfigDAO serviceConfigDAO = injector.getInstance(ServiceConfigDAO.class);",
          "1095:     for (ServiceConfigEntity serviceConfigEntity : serviceConfigDAO.findAll()) {",
          "1096:       if (AMBARI_INFRA_OLD_NAME.equals(serviceConfigEntity.getServiceName())) {",
          "1097:         serviceConfigEntity.setServiceName(AMBARI_INFRA_NEW_NAME);",
          "1098:         serviceConfigDAO.merge(serviceConfigEntity);",
          "1100:     }",
          "1102:     AlertDefinitionDAO alertDefinitionDAO = injector.getInstance(AlertDefinitionDAO.class);",
          "1103:     for (final Cluster cluster : clusterMap.values()) {",
          "1104:       for (AlertDefinitionEntity alertDefinitionEntity : alertDefinitionDAO.findByService(cluster.getClusterId(), AMBARI_INFRA_OLD_NAME)) {",
          "1105:         alertDefinitionEntity.setServiceName(AMBARI_INFRA_NEW_NAME);",
          "1106:         alertDefinitionDAO.merge(alertDefinitionEntity);",
          "1107:       }",
          "1108:     }",
          "1110:     AlertDispatchDAO alertDispatchDAO = injector.getInstance(AlertDispatchDAO.class);",
          "1111:     for (AlertGroupEntity alertGroupEntity : alertDispatchDAO.findAllGroups()) {",
          "1112:       if (AMBARI_INFRA_OLD_NAME.equals(alertGroupEntity.getServiceName())) {",
          "1113:         alertGroupEntity.setServiceName(AMBARI_INFRA_NEW_NAME);",
          "1114:         alertGroupEntity.setGroupName(AMBARI_INFRA_NEW_NAME);",
          "1115:         alertDispatchDAO.merge(alertGroupEntity);",
          "1116:       }",
          "1117:     }",
          "1119:     AlertsDAO alertsDAO = injector.getInstance(AlertsDAO.class);",
          "1120:     for (AlertHistoryEntity alertHistoryEntity : alertsDAO.findAll()) {",
          "1121:       if (AMBARI_INFRA_OLD_NAME.equals(alertHistoryEntity.getServiceName())) {",
          "1122:         alertHistoryEntity.setServiceName(AMBARI_INFRA_NEW_NAME);",
          "1123:         alertsDAO.merge(alertHistoryEntity);",
          "1124:       }",
          "1125:     }",
          "",
          "[Added Lines]",
          "1091:     executeInTransaction(() -> {",
          "1092:       TypedQuery<ServiceConfigEntity> serviceConfigUpdate = getEntityManagerProvider().get().createQuery(",
          "1093:               \"UPDATE ServiceConfigEntity SET serviceName = :newServiceName WHERE serviceName = :oldServiceName\", ServiceConfigEntity.class);",
          "1094:       serviceConfigUpdate.setParameter(\"newServiceName\", AMBARI_INFRA_NEW_NAME);",
          "1095:       serviceConfigUpdate.setParameter(\"oldServiceName\", AMBARI_INFRA_OLD_NAME);",
          "1096:       serviceConfigUpdate.executeUpdate();",
          "1097:     });",
          "1099:     executeInTransaction(() -> {",
          "1100:       for (final Cluster cluster : clusterMap.values()) {",
          "1101:         TypedQuery<AlertDefinitionEntity> alertDefinitionUpdate = getEntityManagerProvider().get().createQuery(",
          "1102:                 \"UPDATE AlertDefinitionEntity SET serviceName = :newServiceName WHERE serviceName = :oldServiceName AND clusterId = :clusterId\", AlertDefinitionEntity.class);",
          "1103:         alertDefinitionUpdate.setParameter(\"clusterId\", cluster.getClusterId());",
          "1104:         alertDefinitionUpdate.setParameter(\"newServiceName\", AMBARI_INFRA_NEW_NAME);",
          "1105:         alertDefinitionUpdate.setParameter(\"oldServiceName\", AMBARI_INFRA_OLD_NAME);",
          "1106:         alertDefinitionUpdate.executeUpdate();",
          "1108:     });",
          "1110:     executeInTransaction(() -> {",
          "1111:       TypedQuery<AlertGroupEntity> alertGroupUpdate = getEntityManagerProvider().get().createQuery(\"UPDATE AlertGroupEntity SET serviceName = :newServiceName, groupName = :newServiceName WHERE serviceName = :oldServiceName\", AlertGroupEntity.class);",
          "1112:       alertGroupUpdate.setParameter(\"newServiceName\", AMBARI_INFRA_NEW_NAME);",
          "1113:       alertGroupUpdate.setParameter(\"oldServiceName\", AMBARI_INFRA_OLD_NAME);",
          "1114:       alertGroupUpdate.executeUpdate();",
          "1115:     });",
          "1117:     executeInTransaction(() -> {",
          "1118:       TypedQuery<AlertHistoryEntity> alertHistoryUpdate = getEntityManagerProvider().get().createQuery(\"UPDATE AlertHistoryEntity SET serviceName = :newServiceName WHERE serviceName = :oldServiceName\", AlertHistoryEntity.class);",
          "1119:       alertHistoryUpdate.setParameter(\"newServiceName\", AMBARI_INFRA_NEW_NAME);",
          "1120:       alertHistoryUpdate.setParameter(\"oldServiceName\", AMBARI_INFRA_OLD_NAME);",
          "1121:       alertHistoryUpdate.executeUpdate();",
          "1122:     });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4046ebd93f7a7a1adedfbe5d568769cc38421629",
      "candidate_info": {
        "commit_hash": "4046ebd93f7a7a1adedfbe5d568769cc38421629",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/4046ebd93f7a7a1adedfbe5d568769cc38421629",
        "files": [
          "ambari-web/app/models/host_component.js",
          "ambari-web/app/templates/main/admin/kerberos.hbs"
        ],
        "message": "[AMBARI-25187] Kerberos operations are shown in service action dropdown when not needed (#2909)\n\n* [AMBARI-25187] Fixed Kerberos page template to disable kerberos related buttons when Ambari is not managing Kerberos identities.\n\nKerberos page template is fixed to properly reach isManualKerberos and isKerberosButtonsDisabled variables.\n\nChange-Id: I9084f56a1397a080494a5ba34cddd77d2cf59f3a\n\n* Remove \"Regenerate Keytabs\" menu items from \"ACTIONS\" dropdown menu when Kerberos is not managed by Ambari\n\nChange-Id: Iff78afbfbe8d49587e4ffa780054887d1e49b2c6\n\n* Fix reaching \"isManualKerberos\" variable\n\nThe \"isManualKerberos\" variable in \"host_components.js\" is not reachable\nvia App.get.\n\nChange-Id: I74ad043fbdf5147ec3000778a7caa68051cd1655",
        "before_after_code_files": [
          "ambari-web/app/models/host_component.js||ambari-web/app/models/host_component.js",
          "ambari-web/app/templates/main/admin/kerberos.hbs||ambari-web/app/templates/main/admin/kerberos.hbs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/models/host_component.js||ambari-web/app/models/host_component.js": [
          "File: ambari-web/app/models/host_component.js -> ambari-web/app/models/host_component.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "372:         action: 'regenerateKeytabFileOperations',",
          "373:         label: Em.I18n.t('admin.kerberos.button.regenerateKeytabs'),",
          "374:         cssClass: 'glyphicon glyphicon-repeat',",
          "376:       },",
          "377:       REFRESHQUEUES: {",
          "378:         action: 'refreshYarnQueues',",
          "",
          "[Removed Lines]",
          "375:         isHidden: !App.get('isKerberosEnabled')",
          "",
          "[Added Lines]",
          "375:         isHidden: !App.get('isKerberosEnabled') || Em.computed.bool('App.router.mainAdminKerberosController.isManualKerberos')",
          "",
          "---------------"
        ],
        "ambari-web/app/templates/main/admin/kerberos.hbs||ambari-web/app/templates/main/admin/kerberos.hbs": [
          "File: ambari-web/app/templates/main/admin/kerberos.hbs -> ambari-web/app/templates/main/admin/kerberos.hbs",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:       <span class=\"text-success\">{{t admin.security.enabled}}</span>",
          "22:       {{#isAuthorized \"CLUSTER.TOGGLE_KERBEROS\"}}",
          "23:         {{#if App.supports.enableToggleKerberos}}",
          "26:             <button class=\"btn btn-success\"",
          "28:               <i class=\"glyphicon glyphicon-repeat\"></i>&nbsp; {{t admin.kerberos.button.regenerateKeytabs}}</button>",
          "29:             {{#if App.isCredentialStorePersistent}}",
          "30:               <button class=\"btn btn-primary\" {{action showManageKDCCredentialsPopup target=\"controller\"}}>{{t admin.kerberos.credentials.store.menu.label}}</button>",
          "",
          "[Removed Lines]",
          "24:           <button class=\"btn btn-padding btn-warning admin-disable-security-btn\" {{bindAttr disabled=\"isKerberosButtonsDisabled\"}} {{action notifySecurityOffPopup target=\"controller\"}}>{{t admin.kerberos.button.disable}} </button>",
          "25:           {{#unless isManualKerberos}}",
          "27:                     id=\"regenerate-keytabs\" {{bindAttr disabled=\"isKerberosButtonsDisabled\"}} {{action regenerateKeytabs target=\"controller\"}}>",
          "",
          "[Added Lines]",
          "24:           <button class=\"btn btn-padding btn-warning admin-disable-security-btn\" {{bindAttr disabled=\"controller.isKerberosButtonsDisabled\"}} {{action notifySecurityOffPopup target=\"controller\"}}>{{t admin.kerberos.button.disable}} </button>",
          "25:           {{#unless controller.isManualKerberos}}",
          "27:                     id=\"regenerate-keytabs\" {{bindAttr disabled=\"controller.isKerberosButtonsDisabled\"}} {{action regenerateKeytabs target=\"controller\"}}>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9797350332cc7181b266294dd8ddb09d9333b9d0",
      "candidate_info": {
        "commit_hash": "9797350332cc7181b266294dd8ddb09d9333b9d0",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/9797350332cc7181b266294dd8ddb09d9333b9d0",
        "files": [
          "contrib/views/wfmanager/src/main/java/org/apache/oozie/ambari/view/OozieProxyImpersonator.java",
          "contrib/views/wfmanager/src/main/resources/ui/app/services/user-info.js",
          "contrib/views/wfmanager/src/main/resources/ui/package.json",
          "contrib/views/wfmanager/src/main/resources/ui/yarn.lock"
        ],
        "message": "AMBARI-24152 Ambari Workflow Manager (wfmanager) sends plaintext content over API. JSON is expected. (#1659) (#1715)",
        "before_after_code_files": [
          "contrib/views/wfmanager/src/main/java/org/apache/oozie/ambari/view/OozieProxyImpersonator.java||contrib/views/wfmanager/src/main/java/org/apache/oozie/ambari/view/OozieProxyImpersonator.java",
          "contrib/views/wfmanager/src/main/resources/ui/app/services/user-info.js||contrib/views/wfmanager/src/main/resources/ui/app/services/user-info.js",
          "contrib/views/wfmanager/src/main/resources/ui/yarn.lock||contrib/views/wfmanager/src/main/resources/ui/yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "contrib/views/wfmanager/src/main/java/org/apache/oozie/ambari/view/OozieProxyImpersonator.java||contrib/views/wfmanager/src/main/java/org/apache/oozie/ambari/view/OozieProxyImpersonator.java": [
          "File: contrib/views/wfmanager/src/main/java/org/apache/oozie/ambari/view/OozieProxyImpersonator.java -> contrib/views/wfmanager/src/main/java/org/apache/oozie/ambari/view/OozieProxyImpersonator.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "59: import com.google.inject.Singleton;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "61: import org.json.simple.JSONObject;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "154:   @GET",
          "155:   @Path(\"/getCurrentUserName\")",
          "156:   public Response getCurrentUserName() {",
          "158:   }",
          "160:   @GET",
          "",
          "[Removed Lines]",
          "157:     return Response.ok(viewContext.getUsername()).build();",
          "",
          "[Added Lines]",
          "163:     JSONObject obj = new JSONObject();",
          "165:     obj.put(\"username\", viewContext.getUsername());",
          "167:     return Response.ok(obj).build();",
          "",
          "---------------"
        ],
        "contrib/views/wfmanager/src/main/resources/ui/app/services/user-info.js||contrib/views/wfmanager/src/main/resources/ui/app/services/user-info.js": [
          "File: contrib/views/wfmanager/src/main/resources/ui/app/services/user-info.js -> contrib/views/wfmanager/src/main/resources/ui/app/services/user-info.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:           xhr.setRequestHeader(\"X-Requested-By\", \"Ambari\");",
          "38:         }",
          "39:       }).done(function(data){",
          "42:       }).fail(function(data){",
          "43:         self.set(\"userName\", \"\");",
          "44:         deferred.reject(data);",
          "",
          "[Removed Lines]",
          "40:         self.set(\"userName\", data);",
          "41:         deferred.resolve(data);",
          "",
          "[Added Lines]",
          "40:         let uname = JSON.parse(data).username;",
          "41:         self.set(\"userName\", JSON.parse(data).username);",
          "42:         deferred.resolve(uname);",
          "",
          "---------------"
        ],
        "contrib/views/wfmanager/src/main/resources/ui/yarn.lock||contrib/views/wfmanager/src/main/resources/ui/yarn.lock": [
          "File: contrib/views/wfmanager/src/main/resources/ui/yarn.lock -> contrib/views/wfmanager/src/main/resources/ui/yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "588:   dependencies:",
          "589:     babel-runtime \"^6.22.0\"",
          "592:   version \"6.24.1\"",
          "593:   resolved \"https://registry.yarnpkg.com/babel-plugin-transform-es2015-block-scoping/-/babel-plugin-transform-es2015-block-scoping-6.24.1.tgz#76c295dc3a4741b1665adfd3167215dcff32a576\"",
          "594:   dependencies:",
          "",
          "[Removed Lines]",
          "591: babel-plugin-transform-es2015-block-scoping@^6.23.0:",
          "",
          "[Added Lines]",
          "591: babel-plugin-transform-es2015-block-scoping@^6.23.0, babel-plugin-transform-es2015-block-scoping@^6.24.1:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "989:   version \"0.2.2\"",
          "990:   resolved \"https://registry.yarnpkg.com/bower-endpoint-parser/-/bower-endpoint-parser-0.2.2.tgz#00b565adbfab6f2d35addde977e97962acbcb3f6\"",
          "996: brace-expansion@^1.0.0:",
          "997:   version \"1.1.7\"",
          "",
          "[Removed Lines]",
          "992: bower@^1.3.12, bower@^1.7.7:",
          "993:   version \"1.8.0\"",
          "994:   resolved \"https://registry.yarnpkg.com/bower/-/bower-1.8.0.tgz#55dbebef0ad9155382d9e9d3e497c1372345b44a\"",
          "",
          "[Added Lines]",
          "992: bower@1.8.4, bower@^1.3.12:",
          "993:   version \"1.8.4\"",
          "994:   resolved \"https://registry.yarnpkg.com/bower/-/bower-1.8.4.tgz#e7876a076deb8137f7d06525dc5e8c66db82f28a\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "85730159a4c7aab93b7801d215f76a06da9f5350",
      "candidate_info": {
        "commit_hash": "85730159a4c7aab93b7801d215f76a06da9f5350",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/85730159a4c7aab93b7801d215f76a06da9f5350",
        "files": [
          "ambari-common/src/main/python/resource_management/libraries/functions/hive_check.py"
        ],
        "message": "AMBARI-25359. Hive Service Check fails during Rolling Upgrade from HDP-3.1.0.0 to HDP-3.1.4.0 (aonishuk)",
        "before_after_code_files": [
          "ambari-common/src/main/python/resource_management/libraries/functions/hive_check.py||ambari-common/src/main/python/resource_management/libraries/functions/hive_check.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-common/src/main/python/resource_management/libraries/functions/hive_check.py||ambari-common/src/main/python/resource_management/libraries/functions/hive_check.py": [
          "File: ambari-common/src/main/python/resource_management/libraries/functions/hive_check.py -> ambari-common/src/main/python/resource_management/libraries/functions/hive_check.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:   # -n the user to connect as (ignored when using the hive principal in the URL, can be different from the user running the beeline command)",
          "80:   # -e ';' executes a SQL commmand of NOOP",
          "83:         (format(\";\".join(beeline_url)), format(credential_str))",
          "85:   Execute(cmd,",
          "",
          "[Removed Lines]",
          "81:   cmd = (\"beeline -u '%s' %s -e ';' 2>&1 | awk '{print}' | grep -i \" + \\",
          "82:          \"-e 'Connected to:' -e 'Transaction isolation:' -e 'inactive HS2 instance; use service discovery'\") % \\",
          "",
          "[Added Lines]",
          "81:   cmd = (\"! (beeline -u '%s' %s -e ';' 2>&1 | awk '{print}' | grep -vz -i \" + \\",
          "82:          \"-e 'Connected to:' -e 'Transaction isolation:' -e 'inactive HS2 instance; use service discovery')\") % \\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "243d5466209ea319a5f48cd26120eb0f8c32edfe",
      "candidate_info": {
        "commit_hash": "243d5466209ea319a5f48cd26120eb0f8c32edfe",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/243d5466209ea319a5f48cd26120eb0f8c32edfe",
        "files": [
          "ambari-server/src/main/resources/stack-hooks/before-ANY/scripts/hook.py",
          "ambari-server/src/main/resources/stack-hooks/before-ANY/scripts/params.py",
          "ambari-server/src/main/resources/stack-hooks/before-ANY/scripts/shared_initialization.py",
          "ambari-server/src/test/python/stacks/2.0.6/configs/default.json"
        ],
        "message": "[AMBARI-24453] Ambari stack hook changes to create HDFS users and groups in workload cluster that has only HDFS client (#2017)\n\n* AMBARI-24453. Ambari stack hook changes to create HDFS users and groups in workload cluster that has only HDFS client. (jaimin)\n\n* AMBARI-24453. Test resource default.json change. (jaimin)\n\n* AMBARI-24453. Test resource default.json change for ams unit test. (jaimin)",
        "before_after_code_files": [
          "ambari-server/src/main/resources/stack-hooks/before-ANY/scripts/hook.py||ambari-server/src/main/resources/stack-hooks/before-ANY/scripts/hook.py",
          "ambari-server/src/main/resources/stack-hooks/before-ANY/scripts/params.py||ambari-server/src/main/resources/stack-hooks/before-ANY/scripts/params.py",
          "ambari-server/src/main/resources/stack-hooks/before-ANY/scripts/shared_initialization.py||ambari-server/src/main/resources/stack-hooks/before-ANY/scripts/shared_initialization.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/resources/stack-hooks/before-ANY/scripts/hook.py||ambari-server/src/main/resources/stack-hooks/before-ANY/scripts/hook.py": [
          "File: ambari-server/src/main/resources/stack-hooks/before-ANY/scripts/hook.py -> ambari-server/src/main/resources/stack-hooks/before-ANY/scripts/hook.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "29:     env.set_params(params)",
          "31:     setup_users()",
          "33:       setup_hadoop_env()",
          "34:     setup_java()",
          "",
          "[Removed Lines]",
          "32:     if params.has_namenode or params.dfs_type == 'HCFS':",
          "",
          "[Added Lines]",
          "32:     if params.has_hdfs_clients or params.dfs_type == 'HCFS':",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/stack-hooks/before-ANY/scripts/params.py||ambari-server/src/main/resources/stack-hooks/before-ANY/scripts/params.py": [
          "File: ambari-server/src/main/resources/stack-hooks/before-ANY/scripts/params.py -> ambari-server/src/main/resources/stack-hooks/before-ANY/scripts/params.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "177: user_group = config['configurations']['cluster-env']['user_group']",
          "179: ganglia_server_hosts = default(\"/clusterHostInfo/ganglia_server_hosts\", [])",
          "181: hbase_master_hosts = default(\"/clusterHostInfo/hbase_master_hosts\", [])",
          "182: oozie_servers = default(\"/clusterHostInfo/oozie_server\", [])",
          "183: falcon_server_hosts = default(\"/clusterHostInfo/falcon_server_hosts\", [])",
          "",
          "[Removed Lines]",
          "180: namenode_host = default(\"/clusterHostInfo/namenode_hosts\", [])",
          "",
          "[Added Lines]",
          "180: hdfs_client_hosts = default(\"/clusterHostInfo/hdfs_client_hosts\", [])",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "188: version_for_stack_feature_checks = get_stack_feature_version(config)",
          "192: has_ganglia_server = not len(ganglia_server_hosts) == 0",
          "193: has_tez = 'tez-site' in config['configurations']",
          "194: has_hbase_masters = not len(hbase_master_hosts) == 0",
          "",
          "[Removed Lines]",
          "191: has_namenode = not len(namenode_host) == 0",
          "",
          "[Added Lines]",
          "191: has_hdfs_clients = not len(hdfs_client_hosts) == 0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "242:   if found:",
          "243:     break",
          "246:     hadoop_conf_dir = conf_select.get_hadoop_conf_dir()",
          "247:     hadoop_conf_secure_dir = os.path.join(hadoop_conf_dir, \"secure\")",
          "",
          "[Removed Lines]",
          "245: if has_namenode or dfs_type == 'HCFS':",
          "",
          "[Added Lines]",
          "245: if has_hdfs_clients or dfs_type == 'HCFS':",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/stack-hooks/before-ANY/scripts/shared_initialization.py||ambari-server/src/main/resources/stack-hooks/before-ANY/scripts/shared_initialization.py": [
          "File: ambari-server/src/main/resources/stack-hooks/before-ANY/scripts/shared_initialization.py -> ambari-server/src/main/resources/stack-hooks/before-ANY/scripts/shared_initialization.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:       Logger.info('Skipping setting uid for hbase user as host is sys prepped')",
          "76:   if should_create_users_and_groups:",
          "78:       create_dfs_cluster_admins()",
          "79:     if params.has_tez and params.stack_version_formatted != \"\" and compare_versions(params.stack_version_formatted, '2.3') >= 0:",
          "80:       create_tez_am_view_acls()",
          "",
          "[Removed Lines]",
          "77:     if params.has_namenode:",
          "",
          "[Added Lines]",
          "77:     if params.has_hdfs_clients:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "180:   import params",
          "181:   stackversion = params.stack_version_unformatted",
          "182:   Logger.info(\"FS Type: {0}\".format(params.dfs_type))",
          "184:     if params.security_enabled:",
          "185:       tc_owner = \"root\"",
          "186:     else:",
          "",
          "[Removed Lines]",
          "183:   if params.has_namenode or stackversion.find('Gluster') >= 0 or params.dfs_type == 'HCFS':",
          "",
          "[Added Lines]",
          "183:   if params.has_hdfs_clients or stackversion.find('Gluster') >= 0 or params.dfs_type == 'HCFS':",
          "",
          "---------------"
        ]
      }
    }
  ]
}