{
  "cve_id": "CVE-2024-29029",
  "cve_desc": "memos is a privacy-first, lightweight note-taking service. In memos 0.13.2, an SSRF vulnerability exists at the /o/get/image that allows unauthenticated users to enumerate the internal network and retrieve images. The response from the image request is then copied into the response of the current server request, causing a reflected XSS vulnerability. Version 0.22.0 of memos removes the vulnerable file.",
  "repo": "usememos/memos",
  "patch_hash": "bbd206e8930281eb040cc8c549641455892b9eb5",
  "patch_info": {
    "commit_hash": "bbd206e8930281eb040cc8c549641455892b9eb5",
    "repo": "usememos/memos",
    "commit_url": "https://github.com/usememos/memos/commit/bbd206e8930281eb040cc8c549641455892b9eb5",
    "files": [
      "internal/jobs/presign_link.go",
      "server/integration/telegram.go",
      "server/route/api/v1/auth.go",
      "server/route/api/v1/common.go",
      "server/route/api/v1/docs.go",
      "server/route/api/v1/http_getter.go",
      "server/route/api/v1/jwt.go",
      "server/route/api/v1/memo.go",
      "server/route/api/v1/memo_organizer.go",
      "server/route/api/v1/memo_relation.go",
      "server/route/api/v1/resource.go",
      "server/route/api/v1/storage.go",
      "server/route/api/v1/swagger.md",
      "server/route/api/v1/swagger.yaml",
      "server/route/api/v1/system.go",
      "server/route/api/v1/system_setting.go",
      "server/route/api/v1/tag.go",
      "server/route/api/v1/tag_test.go",
      "server/route/api/v1/user.go",
      "server/route/api/v1/v1.go",
      "server/route/api/v2/storage_service.go",
      "server/server.go"
    ],
    "message": "chore: retire legacy api",
    "before_after_code_files": [
      "internal/jobs/presign_link.go||internal/jobs/presign_link.go",
      "server/integration/telegram.go||server/integration/telegram.go",
      "server/route/api/v1/auth.go||server/route/api/v1/auth.go",
      "server/route/api/v1/common.go||server/route/api/v1/common.go",
      "server/route/api/v1/docs.go||server/route/api/v1/docs.go",
      "server/route/api/v1/http_getter.go||server/route/api/v1/http_getter.go",
      "server/route/api/v1/jwt.go||server/route/api/v1/jwt.go",
      "server/route/api/v1/memo.go||server/route/api/v1/memo.go",
      "server/route/api/v1/memo_organizer.go||server/route/api/v1/memo_organizer.go",
      "server/route/api/v1/memo_relation.go||server/route/api/v1/memo_relation.go",
      "server/route/api/v1/resource.go||server/route/api/v1/resource.go",
      "server/route/api/v1/storage.go||server/route/api/v1/storage.go",
      "server/route/api/v1/system.go||server/route/api/v1/system.go",
      "server/route/api/v1/system_setting.go||server/route/api/v1/system_setting.go",
      "server/route/api/v1/tag.go||server/route/api/v1/tag.go",
      "server/route/api/v1/tag_test.go||server/route/api/v1/tag_test.go",
      "server/route/api/v1/user.go||server/route/api/v1/user.go",
      "server/route/api/v1/v1.go||server/route/api/v1/v1.go",
      "server/route/api/v2/storage_service.go||server/route/api/v2/storage_service.go",
      "server/server.go||server/server.go"
    ]
  },
  "patch_diff": {
    "internal/jobs/presign_link.go||internal/jobs/presign_link.go": [
      "File: internal/jobs/presign_link.go -> internal/jobs/presign_link.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: import (",
      "4:  \"context\"",
      "6:  \"log/slog\"",
      "7:  \"strings\"",
      "8:  \"time\"",
      "",
      "[Removed Lines]",
      "5:  \"encoding/json\"",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "10:  \"github.com/pkg/errors\"",
      "12:  \"github.com/usememos/memos/plugin/storage/s3\"",
      "14:  \"github.com/usememos/memos/store\"",
      "15: )",
      "",
      "[Removed Lines]",
      "13:  apiv1 \"github.com/usememos/memos/server/route/api/v1\"",
      "",
      "[Added Lines]",
      "12:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
      "13:  storepb \"github.com/usememos/memos/proto/gen/store\"",
      "14:  apiv2 \"github.com/usememos/memos/server/route/api/v2\"",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "97: func findObjectStorage(ctx context.Context, dataStore *store.Store) (*s3.Client, error) {",
      "99:  if err != nil {",
      "101:  }",
      "109:  }",
      "111:  if err != nil {",
      "113:  }",
      "115:  if storage == nil {",
      "117:  }",
      "124:   return nil, nil",
      "125:  }",
      "128:  return s3.NewClient(ctx, &s3.Config{",
      "129:   AccessKey: s3Config.AccessKey,",
      "130:   SecretKey: s3Config.SecretKey,",
      "131:   EndPoint:  s3Config.EndPoint,",
      "132:   Region:    s3Config.Region,",
      "133:   Bucket:    s3Config.Bucket,",
      "136:   PreSign:   s3Config.PreSign,",
      "137:  })",
      "138: }",
      "",
      "[Removed Lines]",
      "98:  systemSettingStorageServiceID, err := dataStore.GetWorkspaceSetting(ctx, &store.FindWorkspaceSetting{Name: apiv1.SystemSettingStorageServiceIDName.String()})",
      "100:   return nil, errors.Wrap(err, \"Failed to find SystemSettingStorageServiceIDName\")",
      "103:  storageServiceID := apiv1.DefaultStorage",
      "104:  if systemSettingStorageServiceID != nil {",
      "105:   err = json.Unmarshal([]byte(systemSettingStorageServiceID.Value), &storageServiceID)",
      "106:   if err != nil {",
      "107:    return nil, errors.Wrap(err, \"Failed to unmarshal storage service id\")",
      "108:   }",
      "110:  storage, err := dataStore.GetStorage(ctx, &store.FindStorage{ID: &storageServiceID})",
      "112:   return nil, errors.Wrap(err, \"Failed to find StorageServiceID\")",
      "116:   return nil, nil // storage not configured - not an error, just return empty ref",
      "118:  storageMessage, err := apiv1.ConvertStorageFromStore(storage)",
      "120:  if err != nil {",
      "121:   return nil, errors.Wrap(err, \"Failed to ConvertStorageFromStore\")",
      "122:  }",
      "123:  if storageMessage.Type != apiv1.StorageS3 {",
      "127:  s3Config := storageMessage.Config.S3Config",
      "134:   URLPrefix: s3Config.URLPrefix,",
      "135:   URLSuffix: s3Config.URLSuffix,",
      "",
      "[Added Lines]",
      "99:  workspaceStorageSetting, err := dataStore.GetWorkspaceStorageSetting(ctx)",
      "101:   return nil, errors.Wrap(err, \"Failed to find workspaceStorageSetting\")",
      "103:  if workspaceStorageSetting.StorageType != storepb.WorkspaceStorageSetting_STORAGE_TYPE_EXTERNAL || workspaceStorageSetting.ActivedExternalStorageId == nil {",
      "104:   return nil, nil",
      "106:  storage, err := dataStore.GetStorageV1(ctx, &store.FindStorage{ID: workspaceStorageSetting.ActivedExternalStorageId})",
      "108:   return nil, errors.Wrap(err, \"Failed to find storage\")",
      "111:   return nil, nil",
      "114:  storageMessage := apiv2.ConvertStorageFromStore(storage)",
      "115:  if storageMessage.Type != apiv2pb.Storage_S3 {",
      "119:  s3Config := storageMessage.Config.GetS3Config()",
      "126:   URLPrefix: s3Config.UrlPrefix,",
      "127:   URLSuffix: s3Config.UrlSuffix,",
      "",
      "---------------"
    ],
    "server/integration/telegram.go||server/integration/telegram.go": [
      "File: server/integration/telegram.go -> server/integration/telegram.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: package integration",
      "3: import (",
      "5:  \"context\"",
      "6:  \"fmt\"",
      "7:  \"path/filepath\"",
      "",
      "[Removed Lines]",
      "4:  \"bytes\"",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "19:  \"github.com/usememos/memos/plugin/telegram\"",
      "20:  \"github.com/usememos/memos/plugin/webhook\"",
      "21:  storepb \"github.com/usememos/memos/proto/gen/store\"",
      "23:  apiv2 \"github.com/usememos/memos/server/route/api/v2\"",
      "24:  \"github.com/usememos/memos/store\"",
      "25: )",
      "",
      "[Removed Lines]",
      "22:  apiv1 \"github.com/usememos/memos/server/route/api/v1\"",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "126:    Type:      attachment.GetMimeType(),",
      "127:    Size:      attachment.FileSize,",
      "128:    MemoID:    &memoMessage.ID,",
      "129:   }",
      "132:   if err != nil {",
      "133:    _, err := bot.EditMessage(ctx, message.Chat.ID, reply.MessageID, fmt.Sprintf(\"Failed to SaveResourceBlob: %s\", err), nil)",
      "134:    return err",
      "",
      "[Removed Lines]",
      "131:   err := apiv1.SaveResourceBlob(ctx, t.store, &create, bytes.NewReader(attachment.Data))",
      "",
      "[Added Lines]",
      "127:    Blob:      attachment.Data,",
      "130:   err := apiv2.SaveResourceBlob(ctx, t.store, &create)",
      "",
      "---------------"
    ],
    "server/route/api/v1/auth.go||server/route/api/v1/auth.go": [
      "File: server/route/api/v1/auth.go -> server/route/api/v1/auth.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/common.go||server/route/api/v1/common.go": [
      "File: server/route/api/v1/common.go -> server/route/api/v1/common.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/docs.go||server/route/api/v1/docs.go": [
      "File: server/route/api/v1/docs.go -> server/route/api/v1/docs.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/http_getter.go||server/route/api/v1/http_getter.go": [
      "File: server/route/api/v1/http_getter.go -> server/route/api/v1/http_getter.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/jwt.go||server/route/api/v1/jwt.go": [
      "File: server/route/api/v1/jwt.go -> server/route/api/v1/jwt.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/memo.go||server/route/api/v1/memo.go": [
      "File: server/route/api/v1/memo.go -> server/route/api/v1/memo.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/memo_organizer.go||server/route/api/v1/memo_organizer.go": [
      "File: server/route/api/v1/memo_organizer.go -> server/route/api/v1/memo_organizer.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/memo_relation.go||server/route/api/v1/memo_relation.go": [
      "File: server/route/api/v1/memo_relation.go -> server/route/api/v1/memo_relation.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/resource.go||server/route/api/v1/resource.go": [
      "File: server/route/api/v1/resource.go -> server/route/api/v1/resource.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/storage.go||server/route/api/v1/storage.go": [
      "File: server/route/api/v1/storage.go -> server/route/api/v1/storage.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/system.go||server/route/api/v1/system.go": [
      "File: server/route/api/v1/system.go -> server/route/api/v1/system.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/system_setting.go||server/route/api/v1/system_setting.go": [
      "File: server/route/api/v1/system_setting.go -> server/route/api/v1/system_setting.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/tag.go||server/route/api/v1/tag.go": [
      "File: server/route/api/v1/tag.go -> server/route/api/v1/tag.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/tag_test.go||server/route/api/v1/tag_test.go": [
      "File: server/route/api/v1/tag_test.go -> server/route/api/v1/tag_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/user.go||server/route/api/v1/user.go": [
      "File: server/route/api/v1/user.go -> server/route/api/v1/user.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/v1.go||server/route/api/v1/v1.go": [
      "File: server/route/api/v1/v1.go -> server/route/api/v1/v1.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v2/storage_service.go||server/route/api/v2/storage_service.go": [
      "File: server/route/api/v2/storage_service.go -> server/route/api/v2/storage_service.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "25:   return nil, status.Errorf(codes.Internal, \"failed to create storage, error: %+v\", err)",
      "26:  }",
      "27:  return &apiv2pb.CreateStorageResponse{",
      "29:  }, nil",
      "30: }",
      "",
      "[Removed Lines]",
      "28:   Storage: convertStorageFromStore(storage),",
      "",
      "[Added Lines]",
      "28:   Storage: ConvertStorageFromStore(storage),",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "39:   Storages: []*apiv2pb.Storage{},",
      "40:  }",
      "41:  for _, storage := range storages {",
      "43:  }",
      "44:  return response, nil",
      "45: }",
      "",
      "[Removed Lines]",
      "42:   response.Storages = append(response.Storages, convertStorageFromStore(storage))",
      "",
      "[Added Lines]",
      "42:   response.Storages = append(response.Storages, ConvertStorageFromStore(storage))",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "55:   return nil, status.Errorf(codes.NotFound, \"storage not found\")",
      "56:  }",
      "57:  return &apiv2pb.GetStorageResponse{",
      "59:  }, nil",
      "60: }",
      "",
      "[Removed Lines]",
      "58:   Storage: convertStorageFromStore(storage),",
      "",
      "[Added Lines]",
      "58:   Storage: ConvertStorageFromStore(storage),",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "82:   return nil, status.Errorf(codes.Internal, \"failed to update storage, error: %+v\", err)",
      "83:  }",
      "84:  return &apiv2pb.UpdateStorageResponse{",
      "86:  }, nil",
      "87: }",
      "",
      "[Removed Lines]",
      "85:   Storage: convertStorageFromStore(storage),",
      "",
      "[Added Lines]",
      "85:   Storage: ConvertStorageFromStore(storage),",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "96:  return &apiv2pb.DeleteStorageResponse{}, nil",
      "97: }",
      "100:  temp := &apiv2pb.Storage{",
      "101:   Id:    storage.Id,",
      "102:   Title: storage.Name,",
      "",
      "[Removed Lines]",
      "99: func convertStorageFromStore(storage *storepb.Storage) *apiv2pb.Storage {",
      "",
      "[Added Lines]",
      "99: func ConvertStorageFromStore(storage *storepb.Storage) *apiv2pb.Storage {",
      "",
      "---------------"
    ],
    "server/server.go||server/server.go": [
      "File: server/server.go -> server/server.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "15:  storepb \"github.com/usememos/memos/proto/gen/store\"",
      "16:  \"github.com/usememos/memos/server/integration\"",
      "17:  \"github.com/usememos/memos/server/profile\"",
      "19:  apiv2 \"github.com/usememos/memos/server/route/api/v2\"",
      "20:  \"github.com/usememos/memos/server/route/frontend\"",
      "21:  versionchecker \"github.com/usememos/memos/server/service/version_checker\"",
      "",
      "[Removed Lines]",
      "18:  apiv1 \"github.com/usememos/memos/server/route/api/v1\"",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "75:   frontendService.Serve(ctx, e)",
      "76:  }",
      "83:  apiV2Service := apiv2.NewAPIV2Service(s.Secret, profile, store, s.Profile.Port+1)",
      "85:  if err := apiV2Service.RegisterGateway(ctx, e); err != nil {",
      "",
      "[Removed Lines]",
      "79:  rootGroup := e.Group(\"\")",
      "80:  apiV1Service := apiv1.NewAPIV1Service(s.Secret, profile, store, s.telegramBot)",
      "81:  apiV1Service.Register(rootGroup)",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "cd0ea6558df47977fd17c0c4c79ea9f632ead481",
      "candidate_info": {
        "commit_hash": "cd0ea6558df47977fd17c0c4c79ea9f632ead481",
        "repo": "usememos/memos",
        "commit_url": "https://github.com/usememos/memos/commit/cd0ea6558df47977fd17c0c4c79ea9f632ead481",
        "files": [
          ".golangci.yaml",
          ".vscode/settings.json",
          "api/v1/auth.go",
          "api/v1/http_getter.go",
          "api/v1/idp.go",
          "api/v1/jwt.go",
          "api/v1/memo.go",
          "api/v1/memo_organizer.go",
          "api/v1/memo_relation.go",
          "api/v1/memo_resource.go",
          "api/v1/resource.go",
          "api/v1/rss.go",
          "api/v1/storage.go",
          "api/v1/system.go",
          "api/v1/system_setting.go",
          "api/v1/tag.go",
          "api/v1/user.go",
          "api/v1/user_setting.go",
          "api/v1/v1.go",
          "api/v2/acl.go",
          "api/v2/memo_service.go",
          "api/v2/resource_service.go",
          "api/v2/system_service.go",
          "api/v2/tag_service.go",
          "api/v2/user_service.go",
          "api/v2/v2.go",
          "cmd/memos.go",
          "cmd/mvrss.go",
          "cmd/setup.go",
          "internal/cron/cron.go",
          "internal/cron/schedule.go",
          "plugin/gomark/parser/bold_test.go",
          "plugin/gomark/parser/code_block_test.go",
          "plugin/gomark/parser/code_test.go",
          "plugin/gomark/parser/heading_test.go",
          "plugin/gomark/parser/image_test.go",
          "plugin/gomark/parser/italic_test.go",
          "plugin/gomark/parser/link_test.go",
          "plugin/gomark/parser/paragraph_test.go",
          "plugin/gomark/parser/tag_test.go",
          "plugin/http-getter/html_meta.go",
          "plugin/http-getter/image.go",
          "plugin/idp/oauth2/oauth2.go",
          "plugin/idp/oauth2/oauth2_test.go",
          "plugin/storage/s3/s3.go",
          "plugin/telegram/api_edit_message.go",
          "plugin/telegram/attachment.go",
          "plugin/telegram/bot.go",
          "plugin/telegram/download.go",
          "plugin/telegram/request.go",
          "server/embed_frontend.go",
          "server/profile/profile.go",
          "server/server.go",
          "server/service/backup.go",
          "server/telegram.go",
          "store/db/db.go",
          "store/idp.go",
          "store/memo.go",
          "store/store.go",
          "store/user_setting.go",
          "test/server/auth_test.go",
          "test/server/memo_relation_test.go",
          "test/server/memo_test.go",
          "test/server/server.go",
          "test/server/system_test.go",
          "test/server/user_test.go",
          "test/store/memo_relation_test.go",
          "test/store/memo_test.go",
          "test/store/resource_test.go",
          "test/store/storage_test.go",
          "test/store/user_setting_test.go",
          "test/store/user_test.go"
        ],
        "message": "chore: update golangci-lint config",
        "before_after_code_files": [
          "api/v1/auth.go||api/v1/auth.go",
          "api/v1/http_getter.go||api/v1/http_getter.go",
          "api/v1/idp.go||api/v1/idp.go",
          "api/v1/jwt.go||api/v1/jwt.go",
          "api/v1/memo.go||api/v1/memo.go",
          "api/v1/memo_organizer.go||api/v1/memo_organizer.go",
          "api/v1/memo_relation.go||api/v1/memo_relation.go",
          "api/v1/memo_resource.go||api/v1/memo_resource.go",
          "api/v1/resource.go||api/v1/resource.go",
          "api/v1/rss.go||api/v1/rss.go",
          "api/v1/storage.go||api/v1/storage.go",
          "api/v1/system.go||api/v1/system.go",
          "api/v1/system_setting.go||api/v1/system_setting.go",
          "api/v1/tag.go||api/v1/tag.go",
          "api/v1/user.go||api/v1/user.go",
          "api/v1/user_setting.go||api/v1/user_setting.go",
          "api/v1/v1.go||api/v1/v1.go",
          "api/v2/acl.go||api/v2/acl.go",
          "api/v2/memo_service.go||api/v2/memo_service.go",
          "api/v2/resource_service.go||api/v2/resource_service.go",
          "api/v2/system_service.go||api/v2/system_service.go",
          "api/v2/tag_service.go||api/v2/tag_service.go",
          "api/v2/user_service.go||api/v2/user_service.go",
          "api/v2/v2.go||api/v2/v2.go",
          "cmd/memos.go||cmd/memos.go",
          "cmd/mvrss.go||cmd/mvrss.go",
          "cmd/setup.go||cmd/setup.go",
          "internal/cron/cron.go||internal/cron/cron.go",
          "internal/cron/schedule.go||internal/cron/schedule.go",
          "plugin/gomark/parser/bold_test.go||plugin/gomark/parser/bold_test.go",
          "plugin/gomark/parser/code_block_test.go||plugin/gomark/parser/code_block_test.go",
          "plugin/gomark/parser/code_test.go||plugin/gomark/parser/code_test.go",
          "plugin/gomark/parser/heading_test.go||plugin/gomark/parser/heading_test.go",
          "plugin/gomark/parser/image_test.go||plugin/gomark/parser/image_test.go",
          "plugin/gomark/parser/italic_test.go||plugin/gomark/parser/italic_test.go",
          "plugin/gomark/parser/link_test.go||plugin/gomark/parser/link_test.go",
          "plugin/gomark/parser/paragraph_test.go||plugin/gomark/parser/paragraph_test.go",
          "plugin/gomark/parser/tag_test.go||plugin/gomark/parser/tag_test.go",
          "plugin/http-getter/html_meta.go||plugin/http-getter/html_meta.go",
          "plugin/http-getter/image.go||plugin/http-getter/image.go",
          "plugin/idp/oauth2/oauth2.go||plugin/idp/oauth2/oauth2.go",
          "plugin/idp/oauth2/oauth2_test.go||plugin/idp/oauth2/oauth2_test.go",
          "plugin/storage/s3/s3.go||plugin/storage/s3/s3.go",
          "plugin/telegram/api_edit_message.go||plugin/telegram/api_edit_message.go",
          "plugin/telegram/attachment.go||plugin/telegram/attachment.go",
          "plugin/telegram/bot.go||plugin/telegram/bot.go",
          "plugin/telegram/download.go||plugin/telegram/download.go",
          "plugin/telegram/request.go||plugin/telegram/request.go",
          "server/embed_frontend.go||server/embed_frontend.go",
          "server/profile/profile.go||server/profile/profile.go",
          "server/server.go||server/server.go",
          "server/service/backup.go||server/service/backup.go",
          "server/telegram.go||server/telegram.go",
          "store/db/db.go||store/db/db.go",
          "store/idp.go||store/idp.go",
          "store/memo.go||store/memo.go",
          "store/store.go||store/store.go",
          "store/user_setting.go||store/user_setting.go",
          "test/server/auth_test.go||test/server/auth_test.go",
          "test/server/memo_relation_test.go||test/server/memo_relation_test.go",
          "test/server/memo_test.go||test/server/memo_test.go",
          "test/server/server.go||test/server/server.go",
          "test/server/system_test.go||test/server/system_test.go",
          "test/server/user_test.go||test/server/user_test.go",
          "test/store/memo_relation_test.go||test/store/memo_relation_test.go",
          "test/store/memo_test.go||test/store/memo_test.go",
          "test/store/resource_test.go||test/store/resource_test.go",
          "test/store/storage_test.go||test/store/storage_test.go",
          "test/store/user_setting_test.go||test/store/user_setting_test.go",
          "test/store/user_test.go||test/store/user_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "server/server.go||server/server.go"
          ],
          "candidate": [
            "server/server.go||server/server.go"
          ]
        }
      },
      "candidate_diff": {
        "api/v1/auth.go||api/v1/auth.go": [
          "File: api/v1/auth.go -> api/v1/auth.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:  \"github.com/labstack/echo/v4\"",
          "12:  \"github.com/pkg/errors\"",
          "13:  \"github.com/usememos/memos/api/auth\"",
          "14:  \"github.com/usememos/memos/common/util\"",
          "15:  \"github.com/usememos/memos/plugin/idp\"",
          "16:  \"github.com/usememos/memos/plugin/idp/oauth2\"",
          "17:  storepb \"github.com/usememos/memos/proto/gen/store\"",
          "18:  \"github.com/usememos/memos/store\"",
          "20: )",
          "22: type SignIn struct {",
          "",
          "[Removed Lines]",
          "19:  \"golang.org/x/crypto/bcrypt\"",
          "",
          "[Added Lines]",
          "13:  \"golang.org/x/crypto/bcrypt\"",
          "",
          "---------------"
        ],
        "api/v1/http_getter.go||api/v1/http_getter.go": [
          "File: api/v1/http_getter.go -> api/v1/http_getter.go"
        ],
        "api/v1/idp.go||api/v1/idp.go": [
          "File: api/v1/idp.go -> api/v1/idp.go"
        ],
        "api/v1/jwt.go||api/v1/jwt.go": [
          "File: api/v1/jwt.go -> api/v1/jwt.go"
        ],
        "api/v1/memo.go||api/v1/memo.go": [
          "File: api/v1/memo.go -> api/v1/memo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:  \"github.com/labstack/echo/v4\"",
          "12:  \"github.com/pkg/errors\"",
          "13:  \"github.com/usememos/memos/common/log\"",
          "14:  \"github.com/usememos/memos/common/util\"",
          "15:  \"github.com/usememos/memos/store\"",
          "17: )",
          "",
          "[Removed Lines]",
          "16:  \"go.uber.org/zap\"",
          "",
          "[Added Lines]",
          "13:  \"go.uber.org/zap\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "336:   }",
          "337:  }",
          "340:   ID: &memo.ID,",
          "341:  })",
          "342:  if err != nil {",
          "343:   return echo.NewHTTPError(http.StatusInternalServerError, \"Failed to compose memo\").SetInternal(err)",
          "344:  }",
          "346:   return echo.NewHTTPError(http.StatusNotFound, fmt.Sprintf(\"Memo not found: %d\", memo.ID))",
          "347:  }",
          "350:  if err != nil {",
          "351:   return echo.NewHTTPError(http.StatusInternalServerError, \"Failed to compose memo response\").SetInternal(err)",
          "352:  }",
          "",
          "[Removed Lines]",
          "339:  memo, err = s.Store.GetMemo(ctx, &store.FindMemo{",
          "345:  if memo == nil {",
          "349:  memoResponse, err := s.convertMemoFromStore(ctx, memo)",
          "",
          "[Added Lines]",
          "340:  composedMemo, err := s.Store.GetMemo(ctx, &store.FindMemo{",
          "346:  if composedMemo == nil {",
          "350:  memoResponse, err := s.convertMemoFromStore(ctx, composedMemo)",
          "",
          "---------------"
        ],
        "api/v1/memo_organizer.go||api/v1/memo_organizer.go": [
          "File: api/v1/memo_organizer.go -> api/v1/memo_organizer.go"
        ],
        "api/v1/memo_relation.go||api/v1/memo_relation.go": [
          "File: api/v1/memo_relation.go -> api/v1/memo_relation.go"
        ],
        "api/v1/memo_resource.go||api/v1/memo_resource.go": [
          "File: api/v1/memo_resource.go -> api/v1/memo_resource.go"
        ],
        "api/v1/resource.go||api/v1/resource.go": [
          "File: api/v1/resource.go -> api/v1/resource.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:  \"github.com/disintegration/imaging\"",
          "21:  \"github.com/labstack/echo/v4\"",
          "22:  \"github.com/pkg/errors\"",
          "23:  \"github.com/usememos/memos/common/log\"",
          "24:  \"github.com/usememos/memos/common/util\"",
          "25:  \"github.com/usememos/memos/plugin/storage/s3\"",
          "26:  \"github.com/usememos/memos/store\"",
          "28: )",
          "30: type Resource struct {",
          "",
          "[Removed Lines]",
          "27:  \"go.uber.org/zap\"",
          "",
          "[Added Lines]",
          "23:  \"go.uber.org/zap\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "606: func SaveResourceBlob(ctx context.Context, s *store.Store, create *store.Resource, r io.Reader) error {",
          "607:  systemSettingStorageServiceID, err := s.GetSystemSetting(ctx, &store.FindSystemSetting{Name: SystemSettingStorageServiceIDName.String()})",
          "608:  if err != nil {",
          "610:  }",
          "612:  storageServiceID := LocalStorage",
          "613:  if systemSettingStorageServiceID != nil {",
          "614:   err = json.Unmarshal([]byte(systemSettingStorageServiceID.Value), &storageServiceID)",
          "615:   if err != nil {",
          "617:   }",
          "618:  }",
          "",
          "[Removed Lines]",
          "609:   return fmt.Errorf(\"Failed to find SystemSettingStorageServiceIDName: %s\", err)",
          "616:    return fmt.Errorf(\"Failed to unmarshal storage service id: %s\", err)",
          "",
          "[Added Lines]",
          "610:   return errors.Errorf(\"Failed to find SystemSettingStorageServiceIDName: %s\", err)",
          "617:    return errors.Errorf(\"Failed to unmarshal storage service id: %s\", err)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "621:  if storageServiceID == DatabaseStorage {",
          "622:   fileBytes, err := io.ReadAll(r)",
          "623:   if err != nil {",
          "625:   }",
          "626:   create.Blob = fileBytes",
          "627:   return nil",
          "",
          "[Removed Lines]",
          "624:    return fmt.Errorf(\"Failed to read file: %s\", err)",
          "",
          "[Added Lines]",
          "625:    return errors.Errorf(\"Failed to read file: %s\", err)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "630:   systemSettingLocalStoragePath, err := s.GetSystemSetting(ctx, &store.FindSystemSetting{Name: SystemSettingLocalStoragePathName.String()})",
          "631:   if err != nil {",
          "633:   }",
          "634:   localStoragePath := \"assets/{timestamp}_{filename}\"",
          "635:   if systemSettingLocalStoragePath != nil && systemSettingLocalStoragePath.Value != \"\" {",
          "636:    err = json.Unmarshal([]byte(systemSettingLocalStoragePath.Value), &localStoragePath)",
          "637:    if err != nil {",
          "639:    }",
          "640:   }",
          "641:   filePath := filepath.FromSlash(localStoragePath)",
          "",
          "[Removed Lines]",
          "632:    return fmt.Errorf(\"Failed to find SystemSettingLocalStoragePathName: %s\", err)",
          "638:     return fmt.Errorf(\"Failed to unmarshal SystemSettingLocalStoragePathName: %s\", err)",
          "",
          "[Added Lines]",
          "633:    return errors.Errorf(\"Failed to find SystemSettingLocalStoragePathName: %s\", err)",
          "639:     return errors.Errorf(\"Failed to unmarshal SystemSettingLocalStoragePathName: %s\", err)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "647:   dir := filepath.Dir(filePath)",
          "648:   if err = os.MkdirAll(dir, os.ModePerm); err != nil {",
          "650:   }",
          "651:   dst, err := os.Create(filePath)",
          "652:   if err != nil {",
          "654:   }",
          "655:   defer dst.Close()",
          "656:   _, err = io.Copy(dst, r)",
          "657:   if err != nil {",
          "659:   }",
          "661:   create.InternalPath = filePath",
          "",
          "[Removed Lines]",
          "649:    return fmt.Errorf(\"Failed to create directory: %s\", err)",
          "653:    return fmt.Errorf(\"Failed to create file: %s\", err)",
          "658:    return fmt.Errorf(\"Failed to copy file: %s\", err)",
          "",
          "[Added Lines]",
          "650:    return errors.Errorf(\"Failed to create directory: %s\", err)",
          "654:    return errors.Errorf(\"Failed to create file: %s\", err)",
          "659:    return errors.Errorf(\"Failed to copy file: %s\", err)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "666:  storage, err := s.GetStorage(ctx, &store.FindStorage{ID: &storageServiceID})",
          "667:  if err != nil {",
          "669:  }",
          "670:  if storage == nil {",
          "672:  }",
          "673:  storageMessage, err := ConvertStorageFromStore(storage)",
          "674:  if err != nil {",
          "676:  }",
          "678:  if storageMessage.Type != StorageS3 {",
          "680:  }",
          "682:  s3Config := storageMessage.Config.S3Config",
          "",
          "[Removed Lines]",
          "668:   return fmt.Errorf(\"Failed to find StorageServiceID: %s\", err)",
          "671:   return fmt.Errorf(\"Storage %d not found\", storageServiceID)",
          "675:   return fmt.Errorf(\"Failed to ConvertStorageFromStore: %s\", err)",
          "679:   return fmt.Errorf(\"Unsupported storage type: %s\", storageMessage.Type)",
          "",
          "[Added Lines]",
          "669:   return errors.Errorf(\"Failed to find StorageServiceID: %s\", err)",
          "672:   return errors.Errorf(\"Storage %d not found\", storageServiceID)",
          "676:   return errors.Errorf(\"Failed to ConvertStorageFromStore: %s\", err)",
          "680:   return errors.Errorf(\"Unsupported storage type: %s\", storageMessage.Type)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "690:   URLSuffix: s3Config.URLSuffix,",
          "691:  })",
          "692:  if err != nil {",
          "694:  }",
          "696:  filePath := s3Config.Path",
          "",
          "[Removed Lines]",
          "693:   return fmt.Errorf(\"Failed to create s3 client: %s\", err)",
          "",
          "[Added Lines]",
          "694:   return errors.Errorf(\"Failed to create s3 client: %s\", err)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "702:  link, err := s3Client.UploadFile(ctx, filePath, create.Type, r)",
          "703:  if err != nil {",
          "705:  }",
          "707:  create.ExternalLink = link",
          "",
          "[Removed Lines]",
          "704:   return fmt.Errorf(\"Failed to upload via s3 client: %s\", err)",
          "",
          "[Added Lines]",
          "705:   return errors.Errorf(\"Failed to upload via s3 client: %s\", err)",
          "",
          "---------------"
        ],
        "api/v1/rss.go||api/v1/rss.go": [
          "File: api/v1/rss.go -> api/v1/rss.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:  \"github.com/gorilla/feeds\"",
          "14:  \"github.com/labstack/echo/v4\"",
          "15:  \"github.com/usememos/memos/common/util\"",
          "16:  \"github.com/usememos/memos/store\"",
          "18: )",
          "20: const maxRSSItemCount = 100",
          "",
          "[Removed Lines]",
          "17:  \"github.com/yuin/goldmark\"",
          "",
          "[Added Lines]",
          "15:  \"github.com/pkg/errors\"",
          "16:  \"github.com/yuin/goldmark\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "129:     return \"\", err",
          "130:    }",
          "131:    if resource == nil {",
          "133:    }",
          "134:    enclosure := feeds.Enclosure{}",
          "135:    if resource.ExternalLink != \"\" {",
          "",
          "[Removed Lines]",
          "132:     return \"\", fmt.Errorf(\"Resource not found: %d\", resourceID)",
          "",
          "[Added Lines]",
          "134:     return \"\", errors.Errorf(\"Resource not found: %d\", resourceID)",
          "",
          "---------------"
        ],
        "api/v1/storage.go||api/v1/storage.go": [
          "File: api/v1/storage.go -> api/v1/storage.go"
        ],
        "api/v1/system.go||api/v1/system.go": [
          "File: api/v1/system.go -> api/v1/system.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5:  \"net/http\"",
          "7:  \"github.com/labstack/echo/v4\"",
          "8:  \"github.com/usememos/memos/common/log\"",
          "9:  \"github.com/usememos/memos/server/profile\"",
          "10:  \"github.com/usememos/memos/store\"",
          "12: )",
          "14: type SystemStatus struct {",
          "",
          "[Removed Lines]",
          "11:  \"go.uber.org/zap\"",
          "",
          "[Added Lines]",
          "8:  \"go.uber.org/zap\"",
          "",
          "---------------"
        ],
        "api/v1/system_setting.go||api/v1/system_setting.go": [
          "File: api/v1/system_setting.go -> api/v1/system_setting.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"encoding/json\"",
          "6:  \"net/http\"",
          "7:  \"strings\"",
          "9:  \"github.com/labstack/echo/v4\"",
          "10:  \"github.com/usememos/memos/store\"",
          "11: )",
          "",
          "[Removed Lines]",
          "5:  \"fmt\"",
          "",
          "[Added Lines]",
          "9:  \"github.com/pkg/errors\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "186: func (upsert UpsertSystemSettingRequest) Validate() error {",
          "187:  switch settingName := upsert.Name; settingName {",
          "188:  case SystemSettingServerIDName:",
          "190:  case SystemSettingAllowSignUpName:",
          "191:   var value bool",
          "192:   if err := json.Unmarshal([]byte(upsert.Value), &value); err != nil {",
          "194:   }",
          "195:  case SystemSettingDisablePasswordLoginName:",
          "196:   var value bool",
          "197:   if err := json.Unmarshal([]byte(upsert.Value), &value); err != nil {",
          "199:   }",
          "200:  case SystemSettingDisablePublicMemosName:",
          "201:   var value bool",
          "202:   if err := json.Unmarshal([]byte(upsert.Value), &value); err != nil {",
          "204:   }",
          "205:  case SystemSettingMaxUploadSizeMiBName:",
          "206:   var value int",
          "207:   if err := json.Unmarshal([]byte(upsert.Value), &value); err != nil {",
          "209:   }",
          "210:  case SystemSettingAdditionalStyleName:",
          "211:   var value string",
          "212:   if err := json.Unmarshal([]byte(upsert.Value), &value); err != nil {",
          "214:   }",
          "215:  case SystemSettingAdditionalScriptName:",
          "216:   var value string",
          "217:   if err := json.Unmarshal([]byte(upsert.Value), &value); err != nil {",
          "219:   }",
          "220:  case SystemSettingCustomizedProfileName:",
          "221:   customizedProfile := CustomizedProfile{",
          "",
          "[Removed Lines]",
          "189:   return fmt.Errorf(\"updating %v is not allowed\", settingName)",
          "193:    return fmt.Errorf(systemSettingUnmarshalError, settingName)",
          "198:    return fmt.Errorf(systemSettingUnmarshalError, settingName)",
          "203:    return fmt.Errorf(systemSettingUnmarshalError, settingName)",
          "208:    return fmt.Errorf(systemSettingUnmarshalError, settingName)",
          "213:    return fmt.Errorf(systemSettingUnmarshalError, settingName)",
          "218:    return fmt.Errorf(systemSettingUnmarshalError, settingName)",
          "",
          "[Added Lines]",
          "190:   return errors.Errorf(\"updating %v is not allowed\", settingName)",
          "194:    return errors.Errorf(systemSettingUnmarshalError, settingName)",
          "199:    return errors.Errorf(systemSettingUnmarshalError, settingName)",
          "204:    return errors.Errorf(systemSettingUnmarshalError, settingName)",
          "209:    return errors.Errorf(systemSettingUnmarshalError, settingName)",
          "214:    return errors.Errorf(systemSettingUnmarshalError, settingName)",
          "219:    return errors.Errorf(systemSettingUnmarshalError, settingName)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "227:    ExternalURL: \"\",",
          "228:   }",
          "229:   if err := json.Unmarshal([]byte(upsert.Value), &customizedProfile); err != nil {",
          "231:   }",
          "232:  case SystemSettingStorageServiceIDName:",
          "234:   value := 0",
          "235:   if err := json.Unmarshal([]byte(upsert.Value), &value); err != nil {",
          "237:   }",
          "238:   return nil",
          "239:  case SystemSettingLocalStoragePathName:",
          "240:   value := \"\"",
          "241:   if err := json.Unmarshal([]byte(upsert.Value), &value); err != nil {",
          "243:   }",
          "244:  case SystemSettingAutoBackupIntervalName:",
          "245:   var value int",
          "246:   if err := json.Unmarshal([]byte(upsert.Value), &value); err != nil {",
          "248:   }",
          "249:   if value < 0 {",
          "251:   }",
          "252:  case SystemSettingTelegramBotTokenName:",
          "253:   if upsert.Value == \"\" {",
          "",
          "[Removed Lines]",
          "230:    return fmt.Errorf(systemSettingUnmarshalError, settingName)",
          "236:    return fmt.Errorf(systemSettingUnmarshalError, settingName)",
          "242:    return fmt.Errorf(systemSettingUnmarshalError, settingName)",
          "247:    return fmt.Errorf(systemSettingUnmarshalError, settingName)",
          "250:    return fmt.Errorf(\"must be positive\")",
          "",
          "[Added Lines]",
          "231:    return errors.Errorf(systemSettingUnmarshalError, settingName)",
          "237:    return errors.Errorf(systemSettingUnmarshalError, settingName)",
          "243:    return errors.Errorf(systemSettingUnmarshalError, settingName)",
          "248:    return errors.Errorf(systemSettingUnmarshalError, settingName)",
          "251:    return errors.Errorf(\"must be positive\")",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "259:    if strings.HasPrefix(upsert.Value[slashIndex:], \"/bot\") {",
          "260:     return nil",
          "261:    }",
          "263:   }",
          "264:   fragments := strings.Split(upsert.Value, \":\")",
          "265:   if len(fragments) != 2 {",
          "267:   }",
          "268:  case SystemSettingMemoDisplayWithUpdatedTsName:",
          "269:   var value bool",
          "270:   if err := json.Unmarshal([]byte(upsert.Value), &value); err != nil {",
          "272:   }",
          "273:  default:",
          "275:  }",
          "276:  return nil",
          "277: }",
          "",
          "[Removed Lines]",
          "262:    return fmt.Errorf(\"token start with `http` must end with `/bot<token>`\")",
          "266:    return fmt.Errorf(systemSettingUnmarshalError, settingName)",
          "271:    return fmt.Errorf(systemSettingUnmarshalError, settingName)",
          "274:   return fmt.Errorf(\"invalid system setting name\")",
          "",
          "[Added Lines]",
          "263:    return errors.Errorf(\"token start with `http` must end with `/bot<token>`\")",
          "267:    return errors.Errorf(systemSettingUnmarshalError, settingName)",
          "272:    return errors.Errorf(systemSettingUnmarshalError, settingName)",
          "275:   return errors.Errorf(\"invalid system setting name\")",
          "",
          "---------------"
        ],
        "api/v1/tag.go||api/v1/tag.go": [
          "File: api/v1/tag.go -> api/v1/tag.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:  \"github.com/labstack/echo/v4\"",
          "11:  \"github.com/pkg/errors\"",
          "13:  \"golang.org/x/exp/slices\"",
          "14: )",
          "16: type Tag struct {",
          "",
          "[Removed Lines]",
          "12:  \"github.com/usememos/memos/store\"",
          "",
          "[Added Lines]",
          "14:  \"github.com/usememos/memos/store\"",
          "",
          "---------------"
        ],
        "api/v1/user.go||api/v1/user.go": [
          "File: api/v1/user.go -> api/v1/user.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:  \"github.com/labstack/echo/v4\"",
          "10:  \"github.com/pkg/errors\"",
          "11:  \"github.com/usememos/memos/common/util\"",
          "12:  \"github.com/usememos/memos/store\"",
          "14: )",
          "",
          "[Removed Lines]",
          "13:  \"golang.org/x/crypto/bcrypt\"",
          "",
          "[Added Lines]",
          "11:  \"golang.org/x/crypto/bcrypt\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "405: func (create CreateUserRequest) Validate() error {",
          "406:  if len(create.Username) < 3 {",
          "408:  }",
          "409:  if len(create.Username) > 32 {",
          "411:  }",
          "412:  if len(create.Password) < 3 {",
          "414:  }",
          "415:  if len(create.Password) > 512 {",
          "417:  }",
          "418:  if len(create.Nickname) > 64 {",
          "420:  }",
          "421:  if create.Email != \"\" {",
          "422:   if len(create.Email) > 256 {",
          "424:   }",
          "425:   if !util.ValidateEmail(create.Email) {",
          "427:   }",
          "428:  }",
          "",
          "[Removed Lines]",
          "407:   return fmt.Errorf(\"username is too short, minimum length is 3\")",
          "410:   return fmt.Errorf(\"username is too long, maximum length is 32\")",
          "413:   return fmt.Errorf(\"password is too short, minimum length is 3\")",
          "416:   return fmt.Errorf(\"password is too long, maximum length is 512\")",
          "419:   return fmt.Errorf(\"nickname is too long, maximum length is 64\")",
          "423:    return fmt.Errorf(\"email is too long, maximum length is 256\")",
          "426:    return fmt.Errorf(\"invalid email format\")",
          "",
          "[Added Lines]",
          "408:   return errors.Errorf(\"username is too short, minimum length is 3\")",
          "411:   return errors.Errorf(\"username is too long, maximum length is 32\")",
          "414:   return errors.Errorf(\"password is too short, minimum length is 3\")",
          "417:   return errors.Errorf(\"password is too long, maximum length is 512\")",
          "420:   return errors.Errorf(\"nickname is too long, maximum length is 64\")",
          "424:    return errors.Errorf(\"email is too long, maximum length is 256\")",
          "427:    return errors.Errorf(\"invalid email format\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "433: func (update UpdateUserRequest) Validate() error {",
          "434:  if update.Username != nil && len(*update.Username) < 3 {",
          "436:  }",
          "437:  if update.Username != nil && len(*update.Username) > 32 {",
          "439:  }",
          "440:  if update.Password != nil && len(*update.Password) < 3 {",
          "442:  }",
          "443:  if update.Password != nil && len(*update.Password) > 512 {",
          "445:  }",
          "446:  if update.Nickname != nil && len(*update.Nickname) > 64 {",
          "448:  }",
          "449:  if update.AvatarURL != nil {",
          "450:   if len(*update.AvatarURL) > 2<<20 {",
          "452:   }",
          "453:  }",
          "454:  if update.Email != nil && *update.Email != \"\" {",
          "455:   if len(*update.Email) > 256 {",
          "457:   }",
          "458:   if !util.ValidateEmail(*update.Email) {",
          "460:   }",
          "461:  }",
          "",
          "[Removed Lines]",
          "435:   return fmt.Errorf(\"username is too short, minimum length is 3\")",
          "438:   return fmt.Errorf(\"username is too long, maximum length is 32\")",
          "441:   return fmt.Errorf(\"password is too short, minimum length is 3\")",
          "444:   return fmt.Errorf(\"password is too long, maximum length is 512\")",
          "447:   return fmt.Errorf(\"nickname is too long, maximum length is 64\")",
          "451:    return fmt.Errorf(\"avatar is too large, maximum is 2MB\")",
          "456:    return fmt.Errorf(\"email is too long, maximum length is 256\")",
          "459:    return fmt.Errorf(\"invalid email format\")",
          "",
          "[Added Lines]",
          "436:   return errors.Errorf(\"username is too short, minimum length is 3\")",
          "439:   return errors.Errorf(\"username is too long, maximum length is 32\")",
          "442:   return errors.Errorf(\"password is too short, minimum length is 3\")",
          "445:   return errors.Errorf(\"password is too long, maximum length is 512\")",
          "448:   return errors.Errorf(\"nickname is too long, maximum length is 64\")",
          "452:    return errors.Errorf(\"avatar is too large, maximum is 2MB\")",
          "457:    return errors.Errorf(\"email is too long, maximum length is 256\")",
          "460:    return errors.Errorf(\"invalid email format\")",
          "",
          "---------------"
        ],
        "api/v1/user_setting.go||api/v1/user_setting.go": [
          "File: api/v1/user_setting.go -> api/v1/user_setting.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"encoding/json\"",
          "6:  \"net/http\"",
          "8:  \"github.com/labstack/echo/v4\"",
          "10:  \"golang.org/x/exp/slices\"",
          "11: )",
          "13: type UserSettingKey string",
          "",
          "[Removed Lines]",
          "5:  \"fmt\"",
          "9:  \"github.com/usememos/memos/store\"",
          "",
          "[Added Lines]",
          "8:  \"github.com/pkg/errors\"",
          "11:  \"github.com/usememos/memos/store\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "127:   localeValue := \"en\"",
          "128:   err := json.Unmarshal([]byte(upsert.Value), &localeValue)",
          "129:   if err != nil {",
          "131:   }",
          "132:   if !slices.Contains(UserSettingLocaleValue, localeValue) {",
          "134:   }",
          "135:  } else if upsert.Key == UserSettingAppearanceKey {",
          "136:   appearanceValue := \"system\"",
          "137:   err := json.Unmarshal([]byte(upsert.Value), &appearanceValue)",
          "138:   if err != nil {",
          "140:   }",
          "141:   if !slices.Contains(UserSettingAppearanceValue, appearanceValue) {",
          "143:   }",
          "144:  } else if upsert.Key == UserSettingMemoVisibilityKey {",
          "145:   memoVisibilityValue := Private",
          "146:   err := json.Unmarshal([]byte(upsert.Value), &memoVisibilityValue)",
          "147:   if err != nil {",
          "149:   }",
          "150:   if !slices.Contains(UserSettingMemoVisibilityValue, memoVisibilityValue) {",
          "152:   }",
          "153:  } else if upsert.Key == UserSettingTelegramUserIDKey {",
          "154:   var key string",
          "155:   err := json.Unmarshal([]byte(upsert.Value), &key)",
          "156:   if err != nil {",
          "158:   }",
          "159:  } else {",
          "161:  }",
          "163:  return nil",
          "",
          "[Removed Lines]",
          "130:    return fmt.Errorf(\"failed to unmarshal user setting locale value\")",
          "133:    return fmt.Errorf(\"invalid user setting locale value\")",
          "139:    return fmt.Errorf(\"failed to unmarshal user setting appearance value\")",
          "142:    return fmt.Errorf(\"invalid user setting appearance value\")",
          "148:    return fmt.Errorf(\"failed to unmarshal user setting memo visibility value\")",
          "151:    return fmt.Errorf(\"invalid user setting memo visibility value\")",
          "157:    return fmt.Errorf(\"invalid user setting telegram user id value\")",
          "160:   return fmt.Errorf(\"invalid user setting key\")",
          "",
          "[Added Lines]",
          "131:    return errors.Errorf(\"failed to unmarshal user setting locale value\")",
          "134:    return errors.Errorf(\"invalid user setting locale value\")",
          "140:    return errors.Errorf(\"failed to unmarshal user setting appearance value\")",
          "143:    return errors.Errorf(\"invalid user setting appearance value\")",
          "149:    return errors.Errorf(\"failed to unmarshal user setting memo visibility value\")",
          "152:    return errors.Errorf(\"invalid user setting memo visibility value\")",
          "158:    return errors.Errorf(\"invalid user setting telegram user id value\")",
          "161:   return errors.Errorf(\"invalid user setting key\")",
          "",
          "---------------"
        ],
        "api/v1/v1.go||api/v1/v1.go": [
          "File: api/v1/v1.go -> api/v1/v1.go"
        ],
        "api/v2/acl.go||api/v2/acl.go": [
          "File: api/v2/acl.go -> api/v2/acl.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:  \"github.com/golang-jwt/jwt/v4\"",
          "9:  \"github.com/pkg/errors\"",
          "13:  \"google.golang.org/grpc\"",
          "14:  \"google.golang.org/grpc/codes\"",
          "15:  \"google.golang.org/grpc/metadata\"",
          "16:  \"google.golang.org/grpc/status\"",
          "17: )",
          "",
          "[Removed Lines]",
          "10:  \"github.com/usememos/memos/api/auth\"",
          "11:  storepb \"github.com/usememos/memos/proto/gen/store\"",
          "12:  \"github.com/usememos/memos/store\"",
          "",
          "[Added Lines]",
          "15:  \"github.com/usememos/memos/api/auth\"",
          "16:  storepb \"github.com/usememos/memos/proto/gen/store\"",
          "17:  \"github.com/usememos/memos/store\"",
          "",
          "---------------"
        ],
        "api/v2/memo_service.go||api/v2/memo_service.go": [
          "File: api/v2/memo_service.go -> api/v2/memo_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:  \"github.com/google/cel-go/cel\"",
          "7:  \"github.com/pkg/errors\"",
          "10:  v1alpha1 \"google.golang.org/genproto/googleapis/api/expr/v1alpha1\"",
          "11:  \"google.golang.org/grpc/codes\"",
          "12:  \"google.golang.org/grpc/status\"",
          "13: )",
          "15: type MemoService struct {",
          "",
          "[Removed Lines]",
          "8:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "9:  \"github.com/usememos/memos/store\"",
          "",
          "[Added Lines]",
          "12:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "13:  \"github.com/usememos/memos/store\"",
          "",
          "---------------"
        ],
        "api/v2/resource_service.go||api/v2/resource_service.go": [
          "File: api/v2/resource_service.go -> api/v2/resource_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:  \"context\"",
          "5:  \"time\"",
          "9:  \"google.golang.org/grpc/codes\"",
          "10:  \"google.golang.org/grpc/status\"",
          "11:  \"google.golang.org/protobuf/types/known/timestamppb\"",
          "12: )",
          "14: type ResourceService struct {",
          "",
          "[Removed Lines]",
          "7:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "8:  \"github.com/usememos/memos/store\"",
          "",
          "[Added Lines]",
          "11:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "12:  \"github.com/usememos/memos/store\"",
          "",
          "---------------"
        ],
        "api/v2/system_service.go||api/v2/system_service.go": [
          "File: api/v2/system_service.go -> api/v2/system_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5:  \"os\"",
          "6:  \"strconv\"",
          "8:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "9:  \"github.com/usememos/memos/server/profile\"",
          "10:  \"github.com/usememos/memos/store\"",
          "13: )",
          "15: type SystemService struct {",
          "",
          "[Removed Lines]",
          "11:  \"google.golang.org/grpc/codes\"",
          "12:  \"google.golang.org/grpc/status\"",
          "",
          "[Added Lines]",
          "8:  \"google.golang.org/grpc/codes\"",
          "9:  \"google.golang.org/grpc/status\"",
          "",
          "---------------"
        ],
        "api/v2/tag_service.go||api/v2/tag_service.go": [
          "File: api/v2/tag_service.go -> api/v2/tag_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"context\"",
          "8:  \"google.golang.org/grpc/codes\"",
          "9:  \"google.golang.org/grpc/status\"",
          "10: )",
          "12: type TagService struct {",
          "",
          "[Removed Lines]",
          "6:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "7:  \"github.com/usememos/memos/store\"",
          "",
          "[Added Lines]",
          "9:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "10:  \"github.com/usememos/memos/store\"",
          "",
          "---------------"
        ],
        "api/v2/user_service.go||api/v2/user_service.go": [
          "File: api/v2/user_service.go -> api/v2/user_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:  \"github.com/golang-jwt/jwt/v4\"",
          "9:  \"github.com/labstack/echo/v4\"",
          "10:  \"github.com/pkg/errors\"",
          "15:  \"golang.org/x/crypto/bcrypt\"",
          "16:  \"golang.org/x/exp/slices\"",
          "17:  \"google.golang.org/grpc/codes\"",
          "18:  \"google.golang.org/grpc/status\"",
          "19:  \"google.golang.org/protobuf/types/known/timestamppb\"",
          "20: )",
          "22: type UserService struct {",
          "",
          "[Removed Lines]",
          "11:  \"github.com/usememos/memos/api/auth\"",
          "12:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "13:  storepb \"github.com/usememos/memos/proto/gen/store\"",
          "14:  \"github.com/usememos/memos/store\"",
          "",
          "[Added Lines]",
          "17:  \"github.com/usememos/memos/api/auth\"",
          "18:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "19:  storepb \"github.com/usememos/memos/proto/gen/store\"",
          "20:  \"github.com/usememos/memos/store\"",
          "",
          "---------------"
        ],
        "api/v2/v2.go||api/v2/v2.go": [
          "File: api/v2/v2.go -> api/v2/v2.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  grpcRuntime \"github.com/grpc-ecosystem/grpc-gateway/v2/runtime\"",
          "8:  \"github.com/improbable-eng/grpc-web/go/grpcweb\"",
          "9:  \"github.com/labstack/echo/v4\"",
          "13:  \"google.golang.org/grpc\"",
          "14:  \"google.golang.org/grpc/credentials/insecure\"",
          "15:  \"google.golang.org/grpc/reflection\"",
          "16: )",
          "18: type APIV2Service struct {",
          "",
          "[Removed Lines]",
          "10:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "11:  \"github.com/usememos/memos/server/profile\"",
          "12:  \"github.com/usememos/memos/store\"",
          "",
          "[Added Lines]",
          "14:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "15:  \"github.com/usememos/memos/server/profile\"",
          "16:  \"github.com/usememos/memos/store\"",
          "",
          "---------------"
        ],
        "cmd/memos.go||cmd/memos.go": [
          "File: cmd/memos.go -> cmd/memos.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:  \"github.com/spf13/cobra\"",
          "12:  \"github.com/spf13/viper\"",
          "13:  \"github.com/usememos/memos/common/log\"",
          "14:  \"github.com/usememos/memos/server\"",
          "15:  _profile \"github.com/usememos/memos/server/profile\"",
          "16:  \"github.com/usememos/memos/store\"",
          "17:  \"github.com/usememos/memos/store/db\"",
          "19: )",
          "21: const (",
          "",
          "[Removed Lines]",
          "18:  \"go.uber.org/zap\"",
          "",
          "[Added Lines]",
          "13:  \"go.uber.org/zap\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "144: }",
          "146: func printGreetings() {",
          "148:  if len(profile.Addr) == 0 {",
          "149:   fmt.Printf(\"Version %s has been started on port %d\\n\", profile.Version, profile.Port)",
          "150:  } else {",
          "151:   fmt.Printf(\"Version %s has been started on address '%s' and port %d\\n\", profile.Version, profile.Addr, profile.Port)",
          "152:  }",
          "155:  fmt.Printf(\"\ud83d\udc49Website: %s\\n\", \"https://usememos.com\")",
          "156:  fmt.Printf(\"\ud83d\udc49GitHub: %s\\n\", \"https://github.com/usememos/memos\")",
          "158: }",
          "",
          "[Removed Lines]",
          "147:  fmt.Print(greetingBanner)",
          "153:  fmt.Println(\"---\")",
          "154:  fmt.Println(\"See more in:\")",
          "157:  fmt.Println(\"---\")",
          "",
          "[Added Lines]",
          "148:  print(greetingBanner)",
          "154:  println(\"---\")",
          "155:  println(\"See more in:\")",
          "158:  println(\"---\")",
          "",
          "---------------"
        ],
        "cmd/mvrss.go||cmd/mvrss.go": [
          "File: cmd/mvrss.go -> cmd/mvrss.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:     fmt.Printf(\"Resource %5d copy %12d bytes from %s\\n\", res.ID, len(buf), res.InternalPath)",
          "87:    }",
          "89:   },",
          "90:  }",
          "91: )",
          "",
          "[Removed Lines]",
          "88:    fmt.Println(\"done\")",
          "",
          "[Added Lines]",
          "89:    println(\"done\")",
          "",
          "---------------"
        ],
        "cmd/setup.go||cmd/setup.go": [
          "File: cmd/setup.go -> cmd/setup.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"context\"",
          "6:  \"fmt\"",
          "7:  \"time\"",
          "9:  \"github.com/spf13/cobra\"",
          "10:  \"github.com/usememos/memos/common/util\"",
          "11:  \"github.com/usememos/memos/store\"",
          "12:  \"github.com/usememos/memos/store/db\"",
          "14: )",
          "16: var (",
          "",
          "[Removed Lines]",
          "5:  \"errors\"",
          "13:  \"golang.org/x/crypto/bcrypt\"",
          "",
          "[Added Lines]",
          "8:  \"github.com/pkg/errors\"",
          "10:  \"golang.org/x/crypto/bcrypt\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76:  }",
          "78:  if err := s.createUser(ctx, hostUsername, hostPassword); err != nil {",
          "80:  }",
          "81:  return nil",
          "82: }",
          "",
          "[Removed Lines]",
          "79:   return fmt.Errorf(\"create user: %w\", err)",
          "",
          "[Added Lines]",
          "80:   return errors.Wrap(err, \"create user\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "85:  hostUserType := store.RoleHost",
          "86:  existedHostUsers, err := s.store.ListUsers(ctx, &store.FindUser{Role: &hostUserType})",
          "87:  if err != nil {",
          "89:  }",
          "91:  if len(existedHostUsers) != 0 {",
          "",
          "[Removed Lines]",
          "88:   return fmt.Errorf(\"find user list: %w\", err)",
          "",
          "[Added Lines]",
          "89:   return errors.Wrap(err, \"find user list\")",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "104:  }",
          "106:  if len(userCreate.Username) < 3 {",
          "108:  }",
          "109:  if len(userCreate.Username) > 32 {",
          "111:  }",
          "112:  if len(hostPassword) < 3 {",
          "114:  }",
          "115:  if len(hostPassword) > 512 {",
          "117:  }",
          "118:  if len(userCreate.Nickname) > 64 {",
          "120:  }",
          "121:  if userCreate.Email != \"\" {",
          "122:   if len(userCreate.Email) > 256 {",
          "124:   }",
          "125:   if !util.ValidateEmail(userCreate.Email) {",
          "127:   }",
          "128:  }",
          "130:  passwordHash, err := bcrypt.GenerateFromPassword([]byte(hostPassword), bcrypt.DefaultCost)",
          "131:  if err != nil {",
          "133:  }",
          "135:  userCreate.PasswordHash = string(passwordHash)",
          "136:  if _, err := s.store.CreateUser(ctx, userCreate); err != nil {",
          "138:  }",
          "140:  return nil",
          "",
          "[Removed Lines]",
          "107:   return fmt.Errorf(\"username is too short, minimum length is 3\")",
          "110:   return fmt.Errorf(\"username is too long, maximum length is 32\")",
          "113:   return fmt.Errorf(\"password is too short, minimum length is 3\")",
          "116:   return fmt.Errorf(\"password is too long, maximum length is 512\")",
          "119:   return fmt.Errorf(\"nickname is too long, maximum length is 64\")",
          "123:    return fmt.Errorf(\"email is too long, maximum length is 256\")",
          "126:    return fmt.Errorf(\"invalid email format\")",
          "132:   return fmt.Errorf(\"failed to hash password: %w\", err)",
          "137:   return fmt.Errorf(\"failed to create user: %w\", err)",
          "",
          "[Added Lines]",
          "108:   return errors.New(\"username is too short, minimum length is 3\")",
          "111:   return errors.New(\"username is too long, maximum length is 32\")",
          "114:   return errors.New(\"password is too short, minimum length is 3\")",
          "117:   return errors.New(\"password is too long, maximum length is 512\")",
          "120:   return errors.New(\"nickname is too long, maximum length is 64\")",
          "124:    return errors.New(\"email is too long, maximum length is 256\")",
          "127:    return errors.New(\"invalid email format\")",
          "133:   return errors.Wrap(err, \"failed to hash password\")",
          "138:   return errors.Wrap(err, \"failed to create user\")",
          "",
          "---------------"
        ],
        "internal/cron/cron.go||internal/cron/cron.go": [
          "File: internal/cron/cron.go -> internal/cron/cron.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: import (",
          "14:  \"sync\"",
          "15:  \"time\"",
          "16: )",
          "18: type job struct {",
          "",
          "[Removed Lines]",
          "9: package cron",
          "12:  \"errors\"",
          "13:  \"fmt\"",
          "",
          "[Added Lines]",
          "2: package cron",
          "14:  \"github.com/pkg/errors\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "91:  schedule, err := NewSchedule(cronExpr)",
          "92:  if err != nil {",
          "94:  }",
          "96:  c.jobs[jobID] = &job{",
          "",
          "[Removed Lines]",
          "93:   return fmt.Errorf(\"failed to add new cron job: %w\", err)",
          "",
          "[Added Lines]",
          "92:   return errors.Wrap(err, \"failed to add new cron job\")",
          "",
          "---------------"
        ],
        "internal/cron/schedule.go||internal/cron/schedule.go": [
          "File: internal/cron/schedule.go -> internal/cron/schedule.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package cron",
          "3: import (",
          "6:  \"strconv\"",
          "7:  \"strings\"",
          "8:  \"time\"",
          "9: )",
          "",
          "[Removed Lines]",
          "4:  \"errors\"",
          "5:  \"fmt\"",
          "",
          "[Added Lines]",
          "8:  \"github.com/pkg/errors\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "132:     return nil, err",
          "133:    }",
          "134:    if parsedStep < 1 || parsedStep > max {",
          "136:    }",
          "137:    step = parsedStep",
          "138:   default:",
          "",
          "[Removed Lines]",
          "135:     return nil, fmt.Errorf(\"invalid segment step boundary - the step must be between 1 and the %d\", max)",
          "",
          "[Added Lines]",
          "135:     return nil, errors.Errorf(\"invalid segment step boundary - the step must be between 1 and the %d\", max)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "167:      return nil, err",
          "168:     }",
          "169:     if parsedMin < min || parsedMin > max {",
          "171:     }",
          "172:     rangeMin = parsedMin",
          "",
          "[Removed Lines]",
          "170:      return nil, fmt.Errorf(\"invalid segment range minimum - must be between %d and %d\", min, max)",
          "",
          "[Added Lines]",
          "170:      return nil, errors.Errorf(\"invalid segment range minimum - must be between %d and %d\", min, max)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "176:      return nil, err",
          "177:     }",
          "178:     if parsedMax < parsedMin || parsedMax > max {",
          "180:     }",
          "181:     rangeMax = parsedMax",
          "182:    default:",
          "",
          "[Removed Lines]",
          "179:      return nil, fmt.Errorf(\"invalid segment range maximum - must be between %d and %d\", rangeMin, max)",
          "",
          "[Added Lines]",
          "179:      return nil, errors.Errorf(\"invalid segment range maximum - must be between %d and %d\", rangeMin, max)",
          "",
          "---------------"
        ],
        "plugin/gomark/parser/bold_test.go||plugin/gomark/parser/bold_test.go": [
          "File: plugin/gomark/parser/bold_test.go -> plugin/gomark/parser/bold_test.go"
        ],
        "plugin/gomark/parser/code_block_test.go||plugin/gomark/parser/code_block_test.go": [
          "File: plugin/gomark/parser/code_block_test.go -> plugin/gomark/parser/code_block_test.go"
        ],
        "plugin/gomark/parser/code_test.go||plugin/gomark/parser/code_test.go": [
          "File: plugin/gomark/parser/code_test.go -> plugin/gomark/parser/code_test.go"
        ],
        "plugin/gomark/parser/heading_test.go||plugin/gomark/parser/heading_test.go": [
          "File: plugin/gomark/parser/heading_test.go -> plugin/gomark/parser/heading_test.go"
        ],
        "plugin/gomark/parser/image_test.go||plugin/gomark/parser/image_test.go": [
          "File: plugin/gomark/parser/image_test.go -> plugin/gomark/parser/image_test.go"
        ],
        "plugin/gomark/parser/italic_test.go||plugin/gomark/parser/italic_test.go": [
          "File: plugin/gomark/parser/italic_test.go -> plugin/gomark/parser/italic_test.go"
        ],
        "plugin/gomark/parser/link_test.go||plugin/gomark/parser/link_test.go": [
          "File: plugin/gomark/parser/link_test.go -> plugin/gomark/parser/link_test.go"
        ],
        "plugin/gomark/parser/paragraph_test.go||plugin/gomark/parser/paragraph_test.go": [
          "File: plugin/gomark/parser/paragraph_test.go -> plugin/gomark/parser/paragraph_test.go"
        ],
        "plugin/gomark/parser/tag_test.go||plugin/gomark/parser/tag_test.go": [
          "File: plugin/gomark/parser/tag_test.go -> plugin/gomark/parser/tag_test.go"
        ],
        "plugin/http-getter/html_meta.go||plugin/http-getter/html_meta.go": [
          "File: plugin/http-getter/html_meta.go -> plugin/http-getter/html_meta.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package getter",
          "3: import (",
          "5:  \"io\"",
          "6:  \"net/http\"",
          "7:  \"net/url\"",
          "",
          "[Removed Lines]",
          "4:  \"fmt\"",
          "",
          "[Added Lines]",
          "4:  \"errors\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32:   return nil, err",
          "33:  }",
          "34:  if mediatype != \"text/html\" {",
          "36:  }",
          "38:  htmlMeta := extractHTMLMeta(response.Body)",
          "",
          "[Removed Lines]",
          "35:   return nil, fmt.Errorf(\"Wrong website mediatype\")",
          "",
          "[Added Lines]",
          "35:   return nil, errors.New(\"Wrong website mediatype\")",
          "",
          "---------------"
        ],
        "plugin/http-getter/image.go||plugin/http-getter/image.go": [
          "File: plugin/http-getter/image.go -> plugin/http-getter/image.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package getter",
          "3: import (",
          "5:  \"io\"",
          "6:  \"net/http\"",
          "7:  \"net/url\"",
          "",
          "[Removed Lines]",
          "4:  \"fmt\"",
          "",
          "[Added Lines]",
          "4:  \"errors\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29:   return nil, err",
          "30:  }",
          "31:  if !strings.HasPrefix(mediatype, \"image/\") {",
          "33:  }",
          "35:  bodyBytes, err := io.ReadAll(response.Body)",
          "",
          "[Removed Lines]",
          "32:   return nil, fmt.Errorf(\"Wrong image mediatype\")",
          "",
          "[Added Lines]",
          "32:   return nil, errors.New(\"Wrong image mediatype\")",
          "",
          "---------------"
        ],
        "plugin/idp/oauth2/oauth2.go||plugin/idp/oauth2/oauth2.go": [
          "File: plugin/idp/oauth2/oauth2.go -> plugin/idp/oauth2/oauth2.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:  \"net/http\"",
          "11:  \"github.com/pkg/errors\"",
          "12:  \"github.com/usememos/memos/plugin/idp\"",
          "13:  \"github.com/usememos/memos/store\"",
          "15: )",
          "",
          "[Removed Lines]",
          "14:  \"golang.org/x/oauth2\"",
          "",
          "[Added Lines]",
          "12:  \"golang.org/x/oauth2\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82:  if err != nil {",
          "83:   return nil, errors.Wrap(err, \"failed to read response body\")",
          "84:  }",
          "86:  var claims map[string]any",
          "87:  err = json.Unmarshal(body, &claims)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "86:  defer resp.Body.Close()",
          "",
          "---------------"
        ],
        "plugin/idp/oauth2/oauth2_test.go||plugin/idp/oauth2/oauth2_test.go": [
          "File: plugin/idp/oauth2/oauth2_test.go -> plugin/idp/oauth2/oauth2_test.go"
        ],
        "plugin/storage/s3/s3.go||plugin/storage/s3/s3.go": [
          "File: plugin/storage/s3/s3.go -> plugin/storage/s3/s3.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"context\"",
          "5:  \"fmt\"",
          "6:  \"io\"",
          "7:  \"strings\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5:  \"errors\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80:   link = fmt.Sprintf(\"%s/%s%s\", client.Config.URLPrefix, filename, client.Config.URLSuffix)",
          "81:  }",
          "82:  if link == \"\" {",
          "84:  }",
          "85:  return link, nil",
          "86: }",
          "",
          "[Removed Lines]",
          "83:   return \"\", fmt.Errorf(\"failed to get file link\")",
          "",
          "[Added Lines]",
          "84:   return \"\", errors.New(\"failed to get file link\")",
          "",
          "---------------"
        ],
        "plugin/telegram/api_edit_message.go||plugin/telegram/api_edit_message.go": [
          "File: plugin/telegram/api_edit_message.go -> plugin/telegram/api_edit_message.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"context\"",
          "5:  \"encoding/json\"",
          "7:  \"net/url\"",
          "8:  \"strconv\"",
          "9: )",
          "",
          "[Removed Lines]",
          "6:  \"fmt\"",
          "",
          "[Added Lines]",
          "9:  \"github.com/pkg/errors\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "23:   markup.InlineKeyboard = inlineKeyboards",
          "24:   data, err := json.Marshal(markup)",
          "25:   if err != nil {",
          "27:   }",
          "28:   formData.Set(\"reply_markup\", string(data))",
          "29:  }",
          "",
          "[Removed Lines]",
          "26:    return nil, fmt.Errorf(\"fail to encode inlineKeyboard: %s\", err)",
          "",
          "[Added Lines]",
          "27:    return nil, errors.Wrap(err, \"fail to encode inlineKeyboard\")",
          "",
          "---------------"
        ],
        "plugin/telegram/attachment.go||plugin/telegram/attachment.go": [
          "File: plugin/telegram/attachment.go -> plugin/telegram/attachment.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"path\"",
          "7:  \"go.uber.org/zap\"",
          "8: )",
          "10: type Attachment struct {",
          "",
          "[Removed Lines]",
          "6:  \"github.com/usememos/memos/common/log\"",
          "",
          "[Added Lines]",
          "8:  \"github.com/usememos/memos/common/log\"",
          "",
          "---------------"
        ],
        "plugin/telegram/bot.go||plugin/telegram/bot.go": [
          "File: plugin/telegram/bot.go -> plugin/telegram/bot.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  \"strings\"",
          "8:  \"time\"",
          "11:  \"go.uber.org/zap\"",
          "12: )",
          "14: type Handler interface {",
          "",
          "[Removed Lines]",
          "10:  \"github.com/usememos/memos/common/log\"",
          "",
          "[Added Lines]",
          "12:  \"github.com/usememos/memos/common/log\"",
          "",
          "---------------"
        ],
        "plugin/telegram/download.go||plugin/telegram/download.go": [
          "File: plugin/telegram/download.go -> plugin/telegram/download.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"context\"",
          "6:  \"io\"",
          "7:  \"net/http\"",
          "8:  \"strings\"",
          "9: )",
          "11: func (b *Bot) downloadAttachment(ctx context.Context, message *Message) (*Attachment, error) {",
          "",
          "[Removed Lines]",
          "5:  \"fmt\"",
          "",
          "[Added Lines]",
          "9:  \"github.com/pkg/errors\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "93:  resp, err := http.Get(fileURL + \"/\" + filePath)",
          "94:  if err != nil {",
          "96:  }",
          "97:  defer resp.Body.Close()",
          "99:  body, err := io.ReadAll(resp.Body)",
          "100:  if err != nil {",
          "102:  }",
          "104:  return body, nil",
          "",
          "[Removed Lines]",
          "95:   return nil, fmt.Errorf(\"fail to http.Get: %s\", err)",
          "101:   return nil, fmt.Errorf(\"fail to io.ReadAll: %s\", err)",
          "",
          "[Added Lines]",
          "96:   return nil, errors.Wrap(err, \"fail to http.Get\")",
          "102:   return nil, errors.Wrap(err, \"fail to io.ReadAll\")",
          "",
          "---------------"
        ],
        "plugin/telegram/request.go||plugin/telegram/request.go": [
          "File: plugin/telegram/request.go -> plugin/telegram/request.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"context\"",
          "5:  \"encoding/json\"",
          "7:  \"io\"",
          "8:  \"net/http\"",
          "9:  \"net/url\"",
          "10: )",
          "12: func (b *Bot) postForm(ctx context.Context, apiPath string, formData url.Values, result any) error {",
          "",
          "[Removed Lines]",
          "6:  \"fmt\"",
          "",
          "[Added Lines]",
          "10:  \"github.com/pkg/errors\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "18:  resp, err := http.PostForm(apiURL+apiPath, formData)",
          "19:  if err != nil {",
          "21:  }",
          "22:  defer resp.Body.Close()",
          "24:  body, err := io.ReadAll(resp.Body)",
          "25:  if err != nil {",
          "27:  }",
          "29:  var respInfo struct {",
          "",
          "[Removed Lines]",
          "20:   return fmt.Errorf(\"fail to http.PostForm: %s\", err)",
          "26:   return fmt.Errorf(\"fail to ioutil.ReadAll: %s\", err)",
          "",
          "[Added Lines]",
          "21:   return errors.Wrap(err, \"fail to http.PostForm\")",
          "27:   return errors.Wrap(err, \"fail to ioutil.ReadAll\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "38:  err = json.Unmarshal(body, &respInfo)",
          "39:  if err != nil {",
          "41:  }",
          "43:  if !respInfo.Ok {",
          "45:  }",
          "47:  return nil",
          "",
          "[Removed Lines]",
          "40:   return fmt.Errorf(\"fail to json.Unmarshal: %s\", err)",
          "44:   return fmt.Errorf(\"api error: [%d]%s\", respInfo.ErrorCode, respInfo.Description)",
          "",
          "[Added Lines]",
          "41:   return errors.Wrap(err, \"fail to json.Unmarshal\")",
          "45:   return errors.Errorf(\"api error: [%d]%s\", respInfo.ErrorCode, respInfo.Description)",
          "",
          "---------------"
        ],
        "server/embed_frontend.go||server/embed_frontend.go": [
          "File: server/embed_frontend.go -> server/embed_frontend.go"
        ],
        "server/profile/profile.go||server/profile/profile.go": [
          "File: server/profile/profile.go -> server/profile/profile.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  \"runtime\"",
          "8:  \"strings\"",
          "10:  \"github.com/spf13/viper\"",
          "11:  \"github.com/usememos/memos/server/version\"",
          "12: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10:  \"github.com/pkg/errors\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:  dataDir = strings.TrimRight(dataDir, \"\\\\/\")",
          "48:  if _, err := os.Stat(dataDir); err != nil {",
          "50:  }",
          "52:  return dataDir, nil",
          "",
          "[Removed Lines]",
          "49:   return \"\", fmt.Errorf(\"unable to access data folder %s, err %w\", dataDir, err)",
          "",
          "[Added Lines]",
          "51:   return \"\", errors.Wrapf(err, \"unable to access data folder %s\", dataDir)",
          "",
          "---------------"
        ],
        "server/server.go||server/server.go": [
          "File: server/server.go -> server/server.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:  \"github.com/labstack/echo/v4/middleware\"",
          "15:  \"github.com/pkg/errors\"",
          "16:  echoSwagger \"github.com/swaggo/echo-swagger\"",
          "17:  apiv1 \"github.com/usememos/memos/api/v1\"",
          "18:  apiv2 \"github.com/usememos/memos/api/v2\"",
          "19:  \"github.com/usememos/memos/common/log\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17:  \"go.uber.org/zap\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "21:  \"github.com/usememos/memos/server/profile\"",
          "22:  \"github.com/usememos/memos/server/service\"",
          "23:  \"github.com/usememos/memos/store\"",
          "25: )",
          "27: type Server struct {",
          "",
          "[Removed Lines]",
          "24:  \"go.uber.org/zap\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "90:  serverID, err := s.getSystemServerID(ctx)",
          "91:  if err != nil {",
          "93:  }",
          "94:  s.ID = serverID",
          "",
          "[Removed Lines]",
          "92:   return nil, fmt.Errorf(\"failed to retrieve system server ID: %w\", err)",
          "",
          "[Added Lines]",
          "93:   return nil, errors.Wrap(err, \"failed to retrieve system server ID\")",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "105:  if profile.Mode == \"prod\" {",
          "106:   secret, err = s.getSystemSecretSessionName(ctx)",
          "107:   if err != nil {",
          "109:   }",
          "110:  }",
          "111:  s.Secret = secret",
          "",
          "[Removed Lines]",
          "108:    return nil, fmt.Errorf(\"failed to retrieve system secret session name: %w\", err)",
          "",
          "[Added Lines]",
          "109:    return nil, errors.Wrap(err, \"failed to retrieve system secret session name\")",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "117:  s.apiV2Service = apiv2.NewAPIV2Service(s.Secret, profile, store, s.Profile.Port+1)",
          "119:  if err := s.apiV2Service.RegisterGateway(ctx, e); err != nil {",
          "121:  }",
          "123:  return s, nil",
          "",
          "[Removed Lines]",
          "120:   return nil, fmt.Errorf(\"failed to register gRPC gateway: %w\", err)",
          "",
          "[Added Lines]",
          "121:   return nil, errors.Wrap(err, \"failed to register gRPC gateway\")",
          "",
          "---------------"
        ],
        "server/service/backup.go||server/service/backup.go": [
          "File: server/service/backup.go -> server/service/backup.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:  \"strconv\"",
          "7:  \"time\"",
          "9:  apiv1 \"github.com/usememos/memos/api/v1\"",
          "10:  \"github.com/usememos/memos/common/log\"",
          "11:  \"github.com/usememos/memos/store\"",
          "13: )",
          "15: type BackupRunner struct {",
          "",
          "[Removed Lines]",
          "12:  \"go.uber.org/zap\"",
          "",
          "[Added Lines]",
          "9:  \"go.uber.org/zap\"",
          "",
          "---------------"
        ],
        "server/telegram.go||server/telegram.go": [
          "File: server/telegram.go -> server/telegram.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: func (t *telegramHandler) MessageHandle(ctx context.Context, bot *telegram.Bot, message telegram.Message, attachments []telegram.Attachment) error {",
          "35:  reply, err := bot.SendReplyMessage(ctx, message.Chat.ID, message.MessageID, workingMessage)",
          "36:  if err != nil {",
          "38:  }",
          "40:  var creatorID int32",
          "",
          "[Removed Lines]",
          "37:   return fmt.Errorf(\"Failed to SendReplyMessage: %s\", err)",
          "",
          "[Added Lines]",
          "38:   return errors.Wrap(err, \"Failed to SendReplyMessage\")",
          "",
          "---------------"
        ],
        "store/db/db.go||store/db/db.go": [
          "File: store/db/db.go -> store/db/db.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:  \"context\"",
          "5:  \"database/sql\"",
          "6:  \"embed\"",
          "8:  \"fmt\"",
          "9:  \"io/fs\"",
          "10:  \"os\"",
          "",
          "[Removed Lines]",
          "7:  \"errors\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12:  \"sort\"",
          "13:  \"time\"",
          "15:  \"github.com/usememos/memos/server/profile\"",
          "16:  \"github.com/usememos/memos/server/version\"",
          "17: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14:  \"github.com/pkg/errors\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "42: func (db *DB) Open() error {",
          "44:  if db.profile.DSN == \"\" {",
          "46:  }",
          "",
          "[Removed Lines]",
          "45:   return fmt.Errorf(\"dsn required\")",
          "",
          "[Added Lines]",
          "46:   return errors.New(\"dsn required\")",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "62:  sqliteDB, err := sql.Open(\"sqlite\", db.profile.DSN+\"?_pragma=foreign_keys(0)&_pragma=busy_timeout(10000)&_pragma=journal_mode(WAL)\")",
          "63:  if err != nil {",
          "65:  }",
          "66:  db.DBInstance = sqliteDB",
          "67:  return nil",
          "",
          "[Removed Lines]",
          "64:   return fmt.Errorf(\"failed to open db with dsn: %s, err: %w\", db.profile.DSN, err)",
          "",
          "[Added Lines]",
          "65:   return errors.Wrapf(err, \"failed to open db with dsn: %s\", db.profile.DSN)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "76:    if errors.Is(err, os.ErrNotExist) {",
          "77:     if err := db.applyLatestSchema(ctx); err != nil {",
          "79:     }",
          "80:    } else {",
          "82:    }",
          "83:   } else {",
          "85:    currentVersion := version.GetCurrentVersion(db.profile.Mode)",
          "86:    migrationHistoryList, err := db.FindMigrationHistoryList(ctx, &MigrationHistoryFind{})",
          "87:    if err != nil {",
          "89:    }",
          "90:    if len(migrationHistoryList) == 0 {",
          "91:     _, err := db.UpsertMigrationHistory(ctx, &MigrationHistoryUpsert{",
          "92:      Version: currentVersion,",
          "93:     })",
          "94:     if err != nil {",
          "96:     }",
          "97:     return nil",
          "98:    }",
          "",
          "[Removed Lines]",
          "78:      return fmt.Errorf(\"failed to apply latest schema, err: %w\", err)",
          "81:     return fmt.Errorf(\"failed to get db file stat, err: %w\", err)",
          "88:     return fmt.Errorf(\"failed to find migration history, err: %w\", err)",
          "95:      return fmt.Errorf(\"failed to upsert migration history, err: %w\", err)",
          "",
          "[Added Lines]",
          "79:      return errors.Wrap(err, \"failed to apply latest schema\")",
          "82:     return errors.Wrap(err, \"failed to get db file stat\")",
          "89:     return errors.Wrap(err, \"failed to find migration history\")",
          "96:      return errors.Wrap(err, \"failed to upsert migration history\")",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "111:     rawBytes, err := os.ReadFile(db.profile.DSN)",
          "112:     if err != nil {",
          "114:     }",
          "115:     backupDBFilePath := fmt.Sprintf(\"%s/memos_%s_%d_backup.db\", db.profile.Data, db.profile.Version, time.Now().Unix())",
          "116:     if err := os.WriteFile(backupDBFilePath, rawBytes, 0644); err != nil {",
          "118:     }",
          "119:     println(\"succeed to copy a backup database file\")",
          "",
          "[Removed Lines]",
          "113:      return fmt.Errorf(\"failed to read raw database file, err: %w\", err)",
          "117:      return fmt.Errorf(\"failed to write raw database file, err: %w\", err)",
          "",
          "[Added Lines]",
          "114:      return errors.Wrap(err, \"failed to read raw database file\")",
          "118:      return errors.Wrap(err, \"failed to write raw database file\")",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "124:      if version.IsVersionGreaterThan(normalizedVersion, latestMigrationHistoryVersion) && version.IsVersionGreaterOrEqualThan(currentVersion, normalizedVersion) {",
          "125:       println(\"applying migration for\", normalizedVersion)",
          "126:       if err := db.applyMigrationForMinorVersion(ctx, minorVersion); err != nil {",
          "128:       }",
          "129:      }",
          "130:     }",
          "",
          "[Removed Lines]",
          "127:        return fmt.Errorf(\"failed to apply minor version migration: %w\", err)",
          "",
          "[Added Lines]",
          "128:        return errors.Wrap(err, \"failed to apply minor version migration\")",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "141:   if _, err := os.Stat(db.profile.DSN); errors.Is(err, os.ErrNotExist) {",
          "142:    if err := db.applyLatestSchema(ctx); err != nil {",
          "144:    }",
          "146:    if db.profile.Mode == \"demo\" {",
          "147:     if err := db.seed(ctx); err != nil {",
          "149:     }",
          "150:    }",
          "151:   }",
          "",
          "[Removed Lines]",
          "143:     return fmt.Errorf(\"failed to apply latest schema: %w\", err)",
          "148:      return fmt.Errorf(\"failed to seed: %w\", err)",
          "",
          "[Added Lines]",
          "144:     return errors.Wrap(err, \"failed to apply latest schema\")",
          "149:      return errors.Wrap(err, \"failed to seed\")",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "166:  latestSchemaPath := fmt.Sprintf(\"%s/%s/%s\", \"migration\", schemaMode, latestSchemaFileName)",
          "167:  buf, err := migrationFS.ReadFile(latestSchemaPath)",
          "168:  if err != nil {",
          "170:  }",
          "171:  stmt := string(buf)",
          "172:  if err := db.execute(ctx, stmt); err != nil {",
          "174:  }",
          "175:  return nil",
          "176: }",
          "",
          "[Removed Lines]",
          "169:   return fmt.Errorf(\"failed to read latest schema %q, error %w\", latestSchemaPath, err)",
          "173:   return fmt.Errorf(\"migrate error: statement:%s err=%w\", stmt, err)",
          "",
          "[Added Lines]",
          "170:   return errors.Wrapf(err, \"failed to read latest schema %q\", latestSchemaPath)",
          "174:   return errors.Wrapf(err, \"migrate error: %s\", stmt)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "178: func (db *DB) applyMigrationForMinorVersion(ctx context.Context, minorVersion string) error {",
          "179:  filenames, err := fs.Glob(migrationFS, fmt.Sprintf(\"%s/%s/*.sql\", \"migration/prod\", minorVersion))",
          "180:  if err != nil {",
          "182:  }",
          "184:  sort.Strings(filenames)",
          "",
          "[Removed Lines]",
          "181:   return fmt.Errorf(\"failed to read ddl files, err: %w\", err)",
          "",
          "[Added Lines]",
          "182:   return errors.Wrap(err, \"failed to read ddl files\")",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "188:  for _, filename := range filenames {",
          "189:   buf, err := migrationFS.ReadFile(filename)",
          "190:   if err != nil {",
          "192:   }",
          "193:   stmt := string(buf)",
          "194:   migrationStmt += stmt",
          "195:   if err := db.execute(ctx, stmt); err != nil {",
          "197:   }",
          "198:  }",
          "",
          "[Removed Lines]",
          "191:    return fmt.Errorf(\"failed to read minor version migration file, filename=%s err=%w\", filename, err)",
          "196:    return fmt.Errorf(\"migrate error: statement:%s err=%w\", stmt, err)",
          "",
          "[Added Lines]",
          "192:    return errors.Wrapf(err, \"failed to read minor version migration file, filename=%s\", filename)",
          "197:    return errors.Wrapf(err, \"migrate error: %s\", stmt)",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "202:  if _, err = db.UpsertMigrationHistory(ctx, &MigrationHistoryUpsert{",
          "203:   Version: version,",
          "204:  }); err != nil {",
          "206:  }",
          "208:  return nil",
          "",
          "[Removed Lines]",
          "205:   return fmt.Errorf(\"failed to upsert migration history with version: %s, err: %w\", version, err)",
          "",
          "[Added Lines]",
          "206:   return errors.Wrapf(err, \"failed to upsert migration history with version: %s\", version)",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "211: func (db *DB) seed(ctx context.Context) error {",
          "212:  filenames, err := fs.Glob(seedFS, fmt.Sprintf(\"%s/*.sql\", \"seed\"))",
          "213:  if err != nil {",
          "215:  }",
          "217:  sort.Strings(filenames)",
          "",
          "[Removed Lines]",
          "214:   return fmt.Errorf(\"failed to read seed files, err: %w\", err)",
          "",
          "[Added Lines]",
          "215:   return errors.Wrap(err, \"failed to read seed files\")",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "220:  for _, filename := range filenames {",
          "221:   buf, err := seedFS.ReadFile(filename)",
          "222:   if err != nil {",
          "224:   }",
          "225:   stmt := string(buf)",
          "226:   if err := db.execute(ctx, stmt); err != nil {",
          "228:   }",
          "229:  }",
          "230:  return nil",
          "",
          "[Removed Lines]",
          "223:    return fmt.Errorf(\"failed to read seed file, filename=%s err=%w\", filename, err)",
          "227:    return fmt.Errorf(\"seed error: statement:%s err=%w\", stmt, err)",
          "",
          "[Added Lines]",
          "224:    return errors.Wrapf(err, \"failed to read seed file, filename=%s\", filename)",
          "228:    return errors.Wrapf(err, \"seed error: %s\", stmt)",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "239:  defer tx.Rollback()",
          "241:  if _, err := tx.ExecContext(ctx, stmt); err != nil {",
          "243:  }",
          "245:  return tx.Commit()",
          "",
          "[Removed Lines]",
          "242:   return fmt.Errorf(\"failed to execute statement, err: %w\", err)",
          "",
          "[Added Lines]",
          "243:   return errors.Wrap(err, \"failed to execute statement\")",
          "",
          "---------------"
        ],
        "store/idp.go||store/idp.go": [
          "File: store/idp.go -> store/idp.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5:  \"encoding/json\"",
          "6:  \"fmt\"",
          "7:  \"strings\"",
          "8: )",
          "10: type IdentityProviderType string",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9:  \"github.com/pkg/errors\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70:   }",
          "71:   configBytes = bytes",
          "72:  } else {",
          "74:  }",
          "76:  stmt := `",
          "",
          "[Removed Lines]",
          "73:   return nil, fmt.Errorf(\"unsupported idp type %s\", string(create.Type))",
          "",
          "[Added Lines]",
          "75:   return nil, errors.Errorf(\"unsupported idp type %s\", string(create.Type))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "146:     OAuth2Config: oauth2Config,",
          "147:    }",
          "148:   } else {",
          "150:   }",
          "151:   identityProviders = append(identityProviders, &identityProvider)",
          "152:  }",
          "",
          "[Removed Lines]",
          "149:    return nil, fmt.Errorf(\"unsupported idp type %s\", string(identityProvider.Type))",
          "",
          "[Added Lines]",
          "151:    return nil, errors.Errorf(\"unsupported idp type %s\", string(identityProvider.Type))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "198:    }",
          "199:    configBytes = bytes",
          "200:   } else {",
          "202:   }",
          "203:   set, args = append(set, \"config = ?\"), append(args, string(configBytes))",
          "204:  }",
          "",
          "[Removed Lines]",
          "201:    return nil, fmt.Errorf(\"unsupported idp type %s\", string(update.Type))",
          "",
          "[Added Lines]",
          "203:    return nil, errors.Errorf(\"unsupported idp type %s\", string(update.Type))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "231:    OAuth2Config: oauth2Config,",
          "232:   }",
          "233:  } else {",
          "235:  }",
          "237:  s.idpCache.Store(identityProvider.ID, identityProvider)",
          "",
          "[Removed Lines]",
          "234:   return nil, fmt.Errorf(\"unsupported idp type %s\", string(identityProvider.Type))",
          "",
          "[Added Lines]",
          "236:   return nil, errors.Errorf(\"unsupported idp type %s\", string(identityProvider.Type))",
          "",
          "---------------"
        ],
        "store/memo.go||store/memo.go": [
          "File: store/memo.go -> store/memo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  \"strings\"",
          "8:  \"time\"",
          "10:  \"github.com/usememos/memos/common/util\"",
          "11: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10:  \"github.com/pkg/errors\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "244:    for _, relatedMemoType := range relatedMemoTypeList {",
          "245:     relatedMemoTypeList := strings.Split(relatedMemoType, \":\")",
          "246:     if len(relatedMemoTypeList) != 2 {",
          "248:     }",
          "249:     relatedMemoID, err := util.ConvertStringToInt32(relatedMemoTypeList[0])",
          "250:     if err != nil {",
          "",
          "[Removed Lines]",
          "247:      return nil, fmt.Errorf(\"invalid relation format\")",
          "",
          "[Added Lines]",
          "249:      return nil, errors.Errorf(\"invalid relation format\")",
          "",
          "---------------"
        ],
        "store/store.go||store/store.go": [
          "File: store/store.go -> store/store.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"context\"",
          "5:  \"database/sql\"",
          "7:  \"sync\"",
          "10:  \"modernc.org/sqlite\"",
          "11: )",
          "",
          "[Removed Lines]",
          "6:  \"fmt\"",
          "9:  \"github.com/usememos/memos/server/profile\"",
          "",
          "[Added Lines]",
          "10:  \"github.com/pkg/errors\"",
          "12:  \"github.com/usememos/memos/server/profile\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "35: func (s *Store) BackupTo(ctx context.Context, filename string) error {",
          "36:  conn, err := s.db.Conn(ctx)",
          "37:  if err != nil {",
          "39:  }",
          "40:  defer conn.Close()",
          "",
          "[Removed Lines]",
          "38:   return fmt.Errorf(\"fail to get conn %s\", err)",
          "",
          "[Added Lines]",
          "40:   return errors.Errorf(\"fail to get conn %s\", err)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "45:   }",
          "46:   backupConn, ok := driverConn.(backuper)",
          "47:   if !ok {",
          "49:   }",
          "51:   bck, err := backupConn.NewBackup(filename)",
          "52:   if err != nil {",
          "54:   }",
          "56:   for more := true; more; {",
          "57:    more, err = bck.Step(-1)",
          "58:    if err != nil {",
          "60:    }",
          "61:   }",
          "63:   return bck.Finish()",
          "64:  })",
          "65:  if err != nil {",
          "67:  }",
          "69:  return nil",
          "",
          "[Removed Lines]",
          "48:    return fmt.Errorf(\"db connection is not a sqlite backuper\")",
          "53:    return fmt.Errorf(\"fail to create sqlite backup %s\", err)",
          "59:     return fmt.Errorf(\"fail to execute sqlite backup %s\", err)",
          "66:   return fmt.Errorf(\"fail to backup %s\", err)",
          "",
          "[Added Lines]",
          "50:    return errors.Errorf(\"db connection is not a sqlite backuper\")",
          "55:    return errors.Errorf(\"fail to create sqlite backup %s\", err)",
          "61:     return errors.Errorf(\"fail to execute sqlite backup %s\", err)",
          "68:   return errors.Errorf(\"fail to backup %s\", err)",
          "",
          "---------------"
        ],
        "store/user_setting.go||store/user_setting.go": [
          "File: store/user_setting.go -> store/user_setting.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:  \"errors\"",
          "7:  \"strings\"",
          "10:  \"google.golang.org/protobuf/encoding/protojson\"",
          "11: )",
          "13: type UserSetting struct {",
          "",
          "[Removed Lines]",
          "9:  storepb \"github.com/usememos/memos/proto/gen/store\"",
          "",
          "[Added Lines]",
          "11:  storepb \"github.com/usememos/memos/proto/gen/store\"",
          "",
          "---------------"
        ],
        "test/server/auth_test.go||test/server/auth_test.go": [
          "File: test/server/auth_test.go -> test/server/auth_test.go"
        ],
        "test/server/memo_relation_test.go||test/server/memo_relation_test.go": [
          "File: test/server/memo_relation_test.go -> test/server/memo_relation_test.go"
        ],
        "test/server/memo_test.go||test/server/memo_test.go": [
          "File: test/server/memo_test.go -> test/server/memo_test.go"
        ],
        "test/server/server.go||test/server/server.go": [
          "File: test/server/server.go -> test/server/server.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:  \"time\"",
          "13:  \"github.com/pkg/errors\"",
          "14:  \"github.com/usememos/memos/api/auth\"",
          "15:  \"github.com/usememos/memos/server\"",
          "16:  \"github.com/usememos/memos/server/profile\"",
          "17:  \"github.com/usememos/memos/store\"",
          "18:  \"github.com/usememos/memos/store/db\"",
          "19:  \"github.com/usememos/memos/test\"",
          "23: )",
          "25: type TestingServer struct {",
          "",
          "[Removed Lines]",
          "22:  _ \"modernc.org/sqlite\"",
          "",
          "[Added Lines]",
          "15:  _ \"modernc.org/sqlite\"",
          "",
          "---------------"
        ],
        "test/server/system_test.go||test/server/system_test.go": [
          "File: test/server/system_test.go -> test/server/system_test.go"
        ],
        "test/server/user_test.go||test/server/user_test.go": [
          "File: test/server/user_test.go -> test/server/user_test.go"
        ],
        "test/store/memo_relation_test.go||test/store/memo_relation_test.go": [
          "File: test/store/memo_relation_test.go -> test/store/memo_relation_test.go"
        ],
        "test/store/memo_test.go||test/store/memo_test.go": [
          "File: test/store/memo_test.go -> test/store/memo_test.go"
        ],
        "test/store/resource_test.go||test/store/resource_test.go": [
          "File: test/store/resource_test.go -> test/store/resource_test.go"
        ],
        "test/store/storage_test.go||test/store/storage_test.go": [
          "File: test/store/storage_test.go -> test/store/storage_test.go"
        ],
        "test/store/user_setting_test.go||test/store/user_setting_test.go": [
          "File: test/store/user_setting_test.go -> test/store/user_setting_test.go"
        ],
        "test/store/user_test.go||test/store/user_test.go": [
          "File: test/store/user_test.go -> test/store/user_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5:  \"testing\"",
          "7:  \"github.com/stretchr/testify/require\"",
          "9:  \"golang.org/x/crypto/bcrypt\"",
          "10: )",
          "12: func TestUserStore(t *testing.T) {",
          "",
          "[Removed Lines]",
          "8:  \"github.com/usememos/memos/store\"",
          "",
          "[Added Lines]",
          "10:  \"github.com/usememos/memos/store\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "89ba2a65405c81e71b214a242b8cc3ef90cf20f6",
      "candidate_info": {
        "commit_hash": "89ba2a65405c81e71b214a242b8cc3ef90cf20f6",
        "repo": "usememos/memos",
        "commit_url": "https://github.com/usememos/memos/commit/89ba2a65405c81e71b214a242b8cc3ef90cf20f6",
        "files": [
          "api/v2/gw_mux.go",
          "api/v2/tag_service.go",
          "api/v2/v2.go",
          "go.mod",
          "go.sum",
          "proto/api/v2/tag_service.proto",
          "proto/apiv2/tag_service.proto",
          "proto/buf.gen.yaml",
          "proto/buf.lock",
          "proto/buf.yaml",
          "proto/gen/api/v2/tag_service.pb.go",
          "proto/gen/api/v2/tag_service.pb.gw.go",
          "proto/gen/api/v2/tag_service_grpc.pb.go",
          "proto/gen/apiv2/apiv2connect/tag_service.connect.go",
          "proto/gen/apiv2/tag_service.pb.go",
          "proto/gen/apiv2/tag_service_grpc.pb.go",
          "server/server.go"
        ],
        "message": "feat: implement part of tag service (#2051)\n\n* feat: add grpc gateway tempalte\n\n* chore: update\n\n* chore: move directory\n\n* chore: update",
        "before_after_code_files": [
          "api/v2/gw_mux.go||api/v2/gw_mux.go",
          "api/v2/tag_service.go||api/v2/tag_service.go",
          "api/v2/v2.go||api/v2/v2.go",
          "go.mod||go.mod",
          "go.sum||go.sum",
          "proto/api/v2/tag_service.proto||proto/api/v2/tag_service.proto",
          "proto/apiv2/tag_service.proto||proto/apiv2/tag_service.proto",
          "proto/buf.lock||proto/buf.lock",
          "proto/gen/apiv2/tag_service.pb.go||proto/gen/api/v2/tag_service.pb.go",
          "proto/gen/api/v2/tag_service.pb.gw.go||proto/gen/api/v2/tag_service.pb.gw.go",
          "proto/gen/apiv2/tag_service_grpc.pb.go||proto/gen/api/v2/tag_service_grpc.pb.go",
          "proto/gen/apiv2/apiv2connect/tag_service.connect.go||proto/gen/apiv2/apiv2connect/tag_service.connect.go",
          "server/server.go||server/server.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "server/server.go||server/server.go"
          ],
          "candidate": [
            "server/server.go||server/server.go"
          ]
        }
      },
      "candidate_diff": {
        "api/v2/gw_mux.go||api/v2/gw_mux.go": [
          "File: api/v2/gw_mux.go -> api/v2/gw_mux.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package v2",
          "3: import (",
          "4:  \"context\"",
          "5:  \"fmt\"",
          "7:  grpcRuntime \"github.com/grpc-ecosystem/grpc-gateway/v2/runtime\"",
          "8:  \"github.com/labstack/echo/v4\"",
          "9:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "10:  \"google.golang.org/grpc\"",
          "11:  \"google.golang.org/grpc/credentials/insecure\"",
          "12: )",
          "15: func RegisterGateway(ctx context.Context, e *echo.Echo, grpcServerPort int) {",
          "18:  conn, err := grpc.DialContext(",
          "19:   ctx,",
          "20:   fmt.Sprintf(\":%d\", grpcServerPort),",
          "21:   grpc.WithTransportCredentials(insecure.NewCredentials()),",
          "22:  )",
          "23:  if err != nil {",
          "24:   panic(err)",
          "25:  }",
          "27:  gwMux := grpcRuntime.NewServeMux()",
          "28:  err = apiv2pb.RegisterTagServiceHandler(context.Background(), gwMux, conn)",
          "29:  if err != nil {",
          "30:   panic(err)",
          "31:  }",
          "32:  e.Any(\"/api/v2/*\", echo.WrapHandler(gwMux))",
          "33: }",
          "",
          "---------------"
        ],
        "api/v2/tag_service.go||api/v2/tag_service.go": [
          "File: api/v2/tag_service.go -> api/v2/tag_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package v2",
          "3: import (",
          "4:  \"context\"",
          "6:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "7:  \"github.com/usememos/memos/store\"",
          "8:  \"google.golang.org/grpc/codes\"",
          "9:  \"google.golang.org/grpc/status\"",
          "10: )",
          "12: type TagService struct {",
          "13:  apiv2pb.UnimplementedTagServiceServer",
          "15:  Store *store.Store",
          "16: }",
          "19: func NewTagService(store *store.Store) *TagService {",
          "20:  return &TagService{",
          "21:   Store: store,",
          "22:  }",
          "23: }",
          "25: func (s *TagService) ListTags(ctx context.Context, request *apiv2pb.ListTagsRequest) (*apiv2pb.ListTagsResponse, error) {",
          "26:  tags, err := s.Store.ListTags(ctx, &store.FindTag{",
          "27:   CreatorID: int(request.CreatorId),",
          "28:  })",
          "29:  if err != nil {",
          "30:   return nil, status.Errorf(codes.Internal, \"failed to list tags: %v\", err)",
          "31:  }",
          "33:  response := &apiv2pb.ListTagsResponse{}",
          "34:  for _, tag := range tags {",
          "35:   response.Tags = append(response.Tags, convertTagFromStore(tag))",
          "36:  }",
          "38:  return response, nil",
          "39: }",
          "41: func convertTagFromStore(tag *store.Tag) *apiv2pb.Tag {",
          "42:  return &apiv2pb.Tag{",
          "43:   Name:      tag.Name,",
          "44:   CreatorId: int32(tag.CreatorID),",
          "45:  }",
          "46: }",
          "",
          "---------------"
        ],
        "api/v2/v2.go||api/v2/v2.go": [
          "File: api/v2/v2.go -> api/v2/v2.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package v2",
          "",
          "---------------"
        ],
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:  github.com/aws/aws-sdk-go-v2/credentials v1.13.12",
          "11:  github.com/aws/aws-sdk-go-v2/feature/s3/manager v1.11.51",
          "12:  github.com/aws/aws-sdk-go-v2/service/s3 v1.30.3",
          "14:  github.com/disintegration/imaging v1.6.2",
          "15:  github.com/google/uuid v1.3.0",
          "16:  github.com/gorilla/feeds v1.1.1",
          "17:  github.com/labstack/echo/v4 v4.9.0",
          "18:  github.com/pkg/errors v0.9.1",
          "19:  github.com/spf13/cobra v1.6.1",
          "",
          "[Removed Lines]",
          "13:  github.com/bufbuild/connect-go v1.10.0",
          "",
          "[Added Lines]",
          "16:  github.com/grpc-ecosystem/grpc-gateway/v2 v2.16.2",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "21:  github.com/stretchr/testify v1.8.1",
          "22:  github.com/yuin/goldmark v1.5.4",
          "23:  go.uber.org/zap v1.24.0",
          "25:  golang.org/x/exp v0.0.0-20230111222715-75897c7a292a",
          "26:  golang.org/x/mod v0.8.0",
          "30:  modernc.org/sqlite v1.24.0",
          "31: )",
          "",
          "[Removed Lines]",
          "24:  golang.org/x/crypto v0.1.0",
          "27:  golang.org/x/net v0.7.0",
          "28:  golang.org/x/oauth2 v0.5.0",
          "29:  google.golang.org/grpc v1.52.0",
          "",
          "[Added Lines]",
          "24:  golang.org/x/crypto v0.11.0",
          "27:  golang.org/x/net v0.12.0",
          "28:  golang.org/x/oauth2 v0.10.0",
          "29:  google.golang.org/genproto/googleapis/api v0.0.0-20230726155614-23370e0ffb3e",
          "30:  google.golang.org/grpc v1.57.0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "34:  github.com/dustin/go-humanize v1.0.1 // indirect",
          "35:  github.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51 // indirect",
          "36:  github.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec // indirect",
          "37:  golang.org/x/image v0.7.0 // indirect",
          "38:  golang.org/x/tools v0.6.0 // indirect",
          "40:  lukechampine.com/uint128 v1.2.0 // indirect",
          "41:  modernc.org/cc/v3 v3.40.0 // indirect",
          "42:  modernc.org/ccgo/v3 v3.16.13 // indirect",
          "",
          "[Removed Lines]",
          "39:  google.golang.org/genproto v0.0.0-20221227171554-f9683d7f8bef // indirect",
          "",
          "[Added Lines]",
          "38:  github.com/rogpeppe/go-internal v1.9.0 // indirect",
          "41:  google.golang.org/genproto v0.0.0-20230706204954-ccb25ca9f130 // indirect",
          "42:  google.golang.org/genproto/googleapis/rpc v0.0.0-20230726155614-23370e0ffb3e // indirect",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "67:  github.com/fsnotify/fsnotify v1.6.0 // indirect",
          "68:  github.com/golang-jwt/jwt v3.2.2+incompatible // indirect",
          "69:  github.com/golang-jwt/jwt/v4 v4.5.0",
          "71:  github.com/hashicorp/hcl v1.0.0 // indirect",
          "72:  github.com/inconshreveable/mousetrap v1.0.1 // indirect",
          "73:  github.com/jmespath/go-jmespath v0.4.0 // indirect",
          "75:  github.com/labstack/gommon v0.3.1 // indirect",
          "76:  github.com/magiconair/properties v1.8.7 // indirect",
          "77:  github.com/mattn/go-colorable v0.1.12 // indirect",
          "",
          "[Removed Lines]",
          "70:  github.com/golang/protobuf v1.5.2 // indirect",
          "74:  github.com/kr/pretty v0.3.1 // indirect",
          "",
          "[Added Lines]",
          "73:  github.com/golang/protobuf v1.5.3 // indirect",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "88:  github.com/valyala/fasttemplate v1.2.1 // indirect",
          "89:  go.uber.org/atomic v1.9.0 // indirect",
          "90:  go.uber.org/multierr v1.8.0 // indirect",
          "93:  golang.org/x/time v0.1.0 // indirect",
          "94:  google.golang.org/appengine v1.6.7 // indirect",
          "95:  google.golang.org/protobuf v1.31.0",
          "97:  gopkg.in/ini.v1 v1.67.0 // indirect",
          "98:  gopkg.in/yaml.v3 v3.0.1 // indirect",
          "99: )",
          "",
          "[Removed Lines]",
          "91:  golang.org/x/sys v0.5.0 // indirect",
          "92:  golang.org/x/text v0.9.0 // indirect",
          "96:  gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c // indirect",
          "",
          "[Added Lines]",
          "93:  golang.org/x/sys v0.10.0 // indirect",
          "94:  golang.org/x/text v0.11.0 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "83: github.com/aws/smithy-go v1.13.5 h1:hgz0X/DX0dGqTYpGALqXJoRKRj5oQ7150i5FdTePzO8=",
          "84: github.com/aws/smithy-go v1.13.5/go.mod h1:Tg+OJXh4MB2R/uN61Ko2f6hTZwB/ZYGOtib8J3gBHzA=",
          "85: github.com/benbjohnson/clock v1.1.0 h1:Q92kusRqC1XV2MjkWETPvjJVqKetz1OzxZB7mHJLju8=",
          "88: github.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=",
          "89: github.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=",
          "90: github.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=",
          "",
          "[Removed Lines]",
          "86: github.com/bufbuild/connect-go v1.10.0 h1:QAJ3G9A1OYQW2Jbk3DeoJbkCxuKArrvZgDt47mjdTbg=",
          "87: github.com/bufbuild/connect-go v1.10.0/go.mod h1:CAIePUgkDR5pAFaylSMtNK45ANQjp9JvpluG20rhpV8=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94: github.com/cncf/udpa/go v0.0.0-20200629203442-efcf912fb354/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=",
          "95: github.com/cncf/udpa/go v0.0.0-20201120205902-5459f2c99403/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=",
          "96: github.com/cpuguy83/go-md2man/v2 v2.0.2/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=",
          "98: github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=",
          "99: github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=",
          "100: github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=",
          "",
          "[Removed Lines]",
          "97: github.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "120: github.com/golang-jwt/jwt/v4 v4.5.0 h1:7cYmW1XlMY7h7ii7UhUyChSgS5wUJEnm9uZVTGqOWzg=",
          "121: github.com/golang-jwt/jwt/v4 v4.5.0/go.mod h1:m21LjoU+eqJr34lmDMbreY2eSTRJ1cv77w39/MY0Ch0=",
          "122: github.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=",
          "123: github.com/golang/groupcache v0.0.0-20190702054246-869f871628b6/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=",
          "124: github.com/golang/groupcache v0.0.0-20191227052852-215e87163ea7/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=",
          "125: github.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "120: github.com/golang/glog v1.1.0 h1:/d3pCKDPWNnvIWe0vVUpNP32qc8U3PDVxySP/y360qE=",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "145: github.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=",
          "146: github.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=",
          "147: github.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=",
          "150: github.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=",
          "151: github.com/google/btree v1.0.0/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=",
          "152: github.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=",
          "",
          "[Removed Lines]",
          "148: github.com/golang/protobuf v1.5.2 h1:ROPKBNFfQgOUMifHyP+KYbvpjbdoFNs+aK7DXlji0Tw=",
          "149: github.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=",
          "",
          "[Added Lines]",
          "146: github.com/golang/protobuf v1.5.3 h1:KhyjKVUg7Usr/dYsdSqoFveMYd5ko72D+zANwlG1mmg=",
          "147: github.com/golang/protobuf v1.5.3/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "184: github.com/googleapis/google-cloud-go-testing v0.0.0-20200911160855-bcd43fbb19e8/go.mod h1:dvDLG8qkwmyD9a/MJJN3XJcT3xFxOKAvTZGvuZmac9g=",
          "185: github.com/gorilla/feeds v1.1.1 h1:HwKXxqzcRNg9to+BbvJog4+f3s/xzvtZXICcQGutYfY=",
          "186: github.com/gorilla/feeds v1.1.1/go.mod h1:Nk0jZrvPFZX1OBe5NPiddPw7CfwF6Q9eqzaBbaightA=",
          "187: github.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=",
          "188: github.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=",
          "189: github.com/hashicorp/hcl v1.0.0 h1:0Anlzjpi4vEasTeNFn2mLJgTSwt0+6sfsiTG8qcWGx4=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "185: github.com/grpc-ecosystem/grpc-gateway/v2 v2.16.2 h1:dygLcbEBA+t/P7ck6a8AkXv6juQ4cK0RHBoh32jxhHM=",
          "186: github.com/grpc-ecosystem/grpc-gateway/v2 v2.16.2/go.mod h1:Ap9RLCIJVtgQg1/BBgVEfypOAySvvlcpcVQkSzJCH4Y=",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "206: github.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=",
          "207: github.com/kr/fs v0.1.0/go.mod h1:FFnZGqtBN9Gxj7eW1uZ42v5BccTP0vu6NEaFoC2HwRg=",
          "208: github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=",
          "210: github.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=",
          "212: github.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=",
          "213: github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=",
          "214: github.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=",
          "216: github.com/labstack/echo/v4 v4.9.0 h1:wPOF1CE6gvt/kmbMR4dGzWvHMPT+sAEUJOwOTtvITVY=",
          "217: github.com/labstack/echo/v4 v4.9.0/go.mod h1:xkCDAdFCIf8jsFQ5NnbK7oqaF/yU1A1X20Ltm0OvSks=",
          "218: github.com/labstack/gommon v0.3.1 h1:OomWaJXm7xR6L1HmEtGyQf26TEn7V6X88mktX9kee9o=",
          "",
          "[Removed Lines]",
          "209: github.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=",
          "211: github.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=",
          "215: github.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "234: github.com/onsi/gomega v1.9.0/go.mod h1:Ho0h+IUsWyvy1OpqCwxlQ/21gkhVunqlU8fDGcoTdcA=",
          "235: github.com/pelletier/go-toml/v2 v2.0.6 h1:nrzqCb7j9cDFj2coyLNLaZuJTLjWjlaz6nvTvIwycIU=",
          "236: github.com/pelletier/go-toml/v2 v2.0.6/go.mod h1:eumQOmlWiOPt5WriQQqoM5y18pDHwha2N+QD+EUNTek=",
          "238: github.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=",
          "239: github.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=",
          "240: github.com/pkg/sftp v1.13.1/go.mod h1:3HaPG6Dq1ILlpPZRO0HVMrsydcdLt6HRDccSgb87qRg=",
          "",
          "[Removed Lines]",
          "237: github.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "310: golang.org/x/crypto v0.0.0-20210421170649-83a5a9bb288b/go.mod h1:T9bdIzuCu7OtxOm1hfPfRQxPLYneinmdGuTeoZ9dtd4=",
          "311: golang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "312: golang.org/x/crypto v0.0.0-20211108221036-ceb1ce70b4fa/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "315: golang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=",
          "316: golang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=",
          "317: golang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=",
          "",
          "[Removed Lines]",
          "313: golang.org/x/crypto v0.1.0 h1:MDRAIl0xIo9Io2xV565hzXHw3zVseKrJKodhohM5CjU=",
          "314: golang.org/x/crypto v0.1.0/go.mod h1:RecgLatLF4+eUMCP1PoPZQb+cVrJcOPbHkTkbkB9sbw=",
          "",
          "[Added Lines]",
          "309: golang.org/x/crypto v0.11.0 h1:6Ewdq3tDic1mg5xRO4milcWCfMVQhI4NkqWWvqejpuA=",
          "310: golang.org/x/crypto v0.11.0/go.mod h1:xgJhtzW8F9jGdVFWZESrid1U1bjeNy4zgy5cRr/CIio=",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "387: golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=",
          "388: golang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=",
          "389: golang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=",
          "392: golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=",
          "393: golang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=",
          "394: golang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=",
          "",
          "[Removed Lines]",
          "390: golang.org/x/net v0.7.0 h1:rJrUqqhjsgNp7KqAIc25s9pZnjU7TUcSY7HcVZjdn1g=",
          "391: golang.org/x/net v0.7.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=",
          "",
          "[Added Lines]",
          "386: golang.org/x/net v0.12.0 h1:cfawfvKITfUsFCeJIHJrbSxpeu/E81khclypR0GVT50=",
          "387: golang.org/x/net v0.12.0/go.mod h1:zEVYFnQC7m/vmpQFELhcD1EWkZlX69l4oqgmer6hfKA=",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "398: golang.org/x/oauth2 v0.0.0-20201109201403-9fd604954f58/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=",
          "399: golang.org/x/oauth2 v0.0.0-20201208152858-08078c50e5b5/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=",
          "400: golang.org/x/oauth2 v0.0.0-20210218202405-ba52d332ba99/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=",
          "403: golang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "404: golang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "405: golang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "",
          "[Removed Lines]",
          "401: golang.org/x/oauth2 v0.5.0 h1:HuArIo48skDwlrvM3sEdHXElYslAMsf3KwRkkW4MC4s=",
          "402: golang.org/x/oauth2 v0.5.0/go.mod h1:9/XBHVqLaWO3/BRHs5jbpYCnOZVjj5V0ndyaAM7KB4I=",
          "",
          "[Added Lines]",
          "397: golang.org/x/oauth2 v0.10.0 h1:zHCpF2Khkwy4mMB4bv0U37YtJdTGW8jI0glAApi0Kh8=",
          "398: golang.org/x/oauth2 v0.10.0/go.mod h1:kTpgurOux7LqtuxjuyZa4Gj2gdezIt/jQtGnNFfypQI=",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "456: golang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "457: golang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "458: golang.org/x/sys v0.0.0-20220908164124-27713097b956/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "460: golang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "461: golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=",
          "462: golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=",
          "463: golang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=",
          "",
          "[Removed Lines]",
          "459: golang.org/x/sys v0.5.0 h1:MUK/U/4lj1t1oPg0HfuXDN/Z1wv31ZJ/YcPiGccS4DU=",
          "",
          "[Added Lines]",
          "456: golang.org/x/sys v0.10.0 h1:SqMFp9UcQJZa+pmYuAKjd9xq1f0j5rLcDIk0mj4qAsA=",
          "457: golang.org/x/sys v0.10.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "469: golang.org/x/text v0.3.4/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=",
          "470: golang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=",
          "471: golang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=",
          "473: golang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=",
          "474: golang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "475: golang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "476: golang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "",
          "[Removed Lines]",
          "472: golang.org/x/text v0.9.0 h1:2sjJmO8cDvYveuX97RDLsxlyUxLl+GHoLxBiRdHllBE=",
          "",
          "[Added Lines]",
          "470: golang.org/x/text v0.11.0 h1:LAntKIrcmeSKERyiOh0XMV39LXS8IE9UL2yP7+f5ij4=",
          "471: golang.org/x/text v0.11.0/go.mod h1:TvPlkZtksWOMsz7fbANvkp4WM8x/WCo/om8BMLbz+aE=",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "594: google.golang.org/genproto v0.0.0-20201214200347-8c77b98c765d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "595: google.golang.org/genproto v0.0.0-20210108203827-ffc7fda8c3d7/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "596: google.golang.org/genproto v0.0.0-20210226172003-ab064af71705/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "599: google.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=",
          "600: google.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=",
          "601: google.golang.org/grpc v1.21.1/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=",
          "",
          "[Removed Lines]",
          "597: google.golang.org/genproto v0.0.0-20221227171554-f9683d7f8bef h1:uQ2vjV/sHTsWSqdKeLqmwitzgvjMl7o4IdtHwUDXSJY=",
          "598: google.golang.org/genproto v0.0.0-20221227171554-f9683d7f8bef/go.mod h1:RGgjbofJ8xD9Sq1VVhDM1Vok1vRONV+rg+CjzG4SZKM=",
          "",
          "[Added Lines]",
          "595: google.golang.org/genproto v0.0.0-20230706204954-ccb25ca9f130 h1:Au6te5hbKUV8pIYWHqOUZ1pva5qK/rwbIhoXEUB9Lu8=",
          "596: google.golang.org/genproto v0.0.0-20230706204954-ccb25ca9f130/go.mod h1:O9kGHb51iE/nOGvQaDUuadVYqovW56s5emA88lQnj6Y=",
          "597: google.golang.org/genproto/googleapis/api v0.0.0-20230726155614-23370e0ffb3e h1:z3vDksarJxsAKM5dmEGv0GHwE2hKJ096wZra71Vs4sw=",
          "598: google.golang.org/genproto/googleapis/api v0.0.0-20230726155614-23370e0ffb3e/go.mod h1:rsr7RhLuwsDKL7RmgDDCUc6yaGr1iqceVb5Wv6f6YvQ=",
          "599: google.golang.org/genproto/googleapis/rpc v0.0.0-20230726155614-23370e0ffb3e h1:S83+ibolgyZ0bqz7KEsUOPErxcv4VzlszxY+31OfB/E=",
          "600: google.golang.org/genproto/googleapis/rpc v0.0.0-20230726155614-23370e0ffb3e/go.mod h1:TUfxEVdsvPg18p6AslUXFoLdpED4oBnGwyqk3dV1XzM=",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "612: google.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=",
          "613: google.golang.org/grpc v1.34.0/go.mod h1:WotjhfgOW/POjDeRt8vscBtXq+2VjORFy659qA51WJ8=",
          "614: google.golang.org/grpc v1.35.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=",
          "617: google.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=",
          "618: google.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=",
          "619: google.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=",
          "",
          "[Removed Lines]",
          "615: google.golang.org/grpc v1.52.0 h1:kd48UiU7EHsV4rnLyOJRuP/Il/UHE7gdDAQ+SZI7nZk=",
          "616: google.golang.org/grpc v1.52.0/go.mod h1:pu6fVzoFb+NBYNAvQL08ic+lvB2IojljRYuun5vorUY=",
          "",
          "[Added Lines]",
          "617: google.golang.org/grpc v1.57.0 h1:kfzNeI/klCGD2YPMUlaGNT3pxvYfga7smW3Vth8Zsiw=",
          "618: google.golang.org/grpc v1.57.0/go.mod h1:Sd+9RMTACXwmub0zcNY2c4arhtrbBYD1AUHI/dt16Mo=",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "631: gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "632: gopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "633: gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=",
          "635: gopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=",
          "636: gopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=",
          "637: gopkg.in/ini.v1 v1.67.0 h1:Dgnx+6+nfE+IfzjUEISNeydPJh9AXNNsWbGP9KzCsOA=",
          "",
          "[Removed Lines]",
          "634: gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "proto/api/v2/tag_service.proto||proto/api/v2/tag_service.proto": [
          "File: proto/api/v2/tag_service.proto -> proto/api/v2/tag_service.proto",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: syntax = \"proto3\";",
          "3: package memos.api.v2;",
          "5: import \"google/api/annotations.proto\";",
          "7: option go_package = \"gen/api/v2\";",
          "9: service TagService {",
          "10:   rpc ListTags(ListTagsRequest) returns (ListTagsResponse) {",
          "11:     option (google.api.http) = {get: \"/api/v2/tags\"};",
          "12:   }",
          "13: }",
          "15: message Tag {",
          "16:   string name = 1;",
          "17:   int32 creator_id = 2;",
          "18: }",
          "20: message ListTagsRequest {",
          "21:   int32 creator_id = 1;",
          "22: }",
          "24: message ListTagsResponse {",
          "25:   repeated Tag tags = 1;",
          "26: }",
          "",
          "---------------"
        ],
        "proto/apiv2/tag_service.proto||proto/apiv2/tag_service.proto": [
          "File: proto/apiv2/tag_service.proto -> proto/apiv2/tag_service.proto",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "proto/buf.lock||proto/buf.lock": [
          "File: proto/buf.lock -> proto/buf.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # Generated by buf. DO NOT EDIT.",
          "2: version: v1",
          "3: deps:",
          "4:   - remote: buf.build",
          "5:     owner: googleapis",
          "6:     repository: googleapis",
          "7:     commit: 711e289f6a384c4caeebaff7c6931ade",
          "8:     digest: shake256:e08fb55dad7469f69df00304eed31427d2d1576e9aab31e6bf86642688e04caaf0372f15fe6974cf79432779a635b3ea401ca69c943976dc42749524e4c25d94",
          "9:   - remote: buf.build",
          "10:     owner: grpc-ecosystem",
          "11:     repository: grpc-gateway",
          "12:     commit: fed2dcdcfd694403ad51cd3c94957830",
          "13:     digest: shake256:ed076a21e3d772892fc465ced0e4dd50f9dba86fdd4473920eaa25efa4807644e8e021be423dcfcee74bf4242e7e57422393f9b1abb10acb18ea1a5df509bb19",
          "",
          "---------------"
        ],
        "proto/gen/apiv2/tag_service.pb.go||proto/gen/api/v2/tag_service.pb.go": [
          "File: proto/gen/apiv2/tag_service.pb.go -> proto/gen/api/v2/tag_service.pb.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: package apiv2",
          "9: import (",
          "10:  protoreflect \"google.golang.org/protobuf/reflect/protoreflect\"",
          "11:  protoimpl \"google.golang.org/protobuf/runtime/protoimpl\"",
          "12:  reflect \"reflect\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10:  _ \"google.golang.org/genproto/googleapis/api/annotations\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32: func (x *Tag) Reset() {",
          "34:  if protoimpl.UnsafeEnabled {",
          "36:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "37:   ms.StoreMessageInfo(mi)",
          "38:  }",
          "",
          "[Removed Lines]",
          "35:   mi := &file_apiv2_tag_service_proto_msgTypes[0]",
          "",
          "[Added Lines]",
          "36:   mi := &file_api_v2_tag_service_proto_msgTypes[0]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "45: func (*Tag) ProtoMessage() {}",
          "47: func (x *Tag) ProtoReflect() protoreflect.Message {",
          "49:  if protoimpl.UnsafeEnabled && x != nil {",
          "50:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "51:   if ms.LoadMessageInfo() == nil {",
          "",
          "[Removed Lines]",
          "48:  mi := &file_apiv2_tag_service_proto_msgTypes[0]",
          "",
          "[Added Lines]",
          "49:  mi := &file_api_v2_tag_service_proto_msgTypes[0]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "60: func (*Tag) Descriptor() ([]byte, []int) {",
          "62: }",
          "64: func (x *Tag) GetName() string {",
          "",
          "[Removed Lines]",
          "61:  return file_apiv2_tag_service_proto_rawDescGZIP(), []int{0}",
          "",
          "[Added Lines]",
          "62:  return file_api_v2_tag_service_proto_rawDescGZIP(), []int{0}",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "86: func (x *ListTagsRequest) Reset() {",
          "88:  if protoimpl.UnsafeEnabled {",
          "90:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "91:   ms.StoreMessageInfo(mi)",
          "92:  }",
          "",
          "[Removed Lines]",
          "89:   mi := &file_apiv2_tag_service_proto_msgTypes[1]",
          "",
          "[Added Lines]",
          "90:   mi := &file_api_v2_tag_service_proto_msgTypes[1]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "99: func (*ListTagsRequest) ProtoMessage() {}",
          "101: func (x *ListTagsRequest) ProtoReflect() protoreflect.Message {",
          "103:  if protoimpl.UnsafeEnabled && x != nil {",
          "104:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "105:   if ms.LoadMessageInfo() == nil {",
          "",
          "[Removed Lines]",
          "102:  mi := &file_apiv2_tag_service_proto_msgTypes[1]",
          "",
          "[Added Lines]",
          "103:  mi := &file_api_v2_tag_service_proto_msgTypes[1]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "114: func (*ListTagsRequest) Descriptor() ([]byte, []int) {",
          "116: }",
          "118: func (x *ListTagsRequest) GetCreatorId() int32 {",
          "",
          "[Removed Lines]",
          "115:  return file_apiv2_tag_service_proto_rawDescGZIP(), []int{1}",
          "",
          "[Added Lines]",
          "116:  return file_api_v2_tag_service_proto_rawDescGZIP(), []int{1}",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "133: func (x *ListTagsResponse) Reset() {",
          "135:  if protoimpl.UnsafeEnabled {",
          "137:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "138:   ms.StoreMessageInfo(mi)",
          "139:  }",
          "",
          "[Removed Lines]",
          "136:   mi := &file_apiv2_tag_service_proto_msgTypes[2]",
          "",
          "[Added Lines]",
          "137:   mi := &file_api_v2_tag_service_proto_msgTypes[2]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "146: func (*ListTagsResponse) ProtoMessage() {}",
          "148: func (x *ListTagsResponse) ProtoReflect() protoreflect.Message {",
          "150:  if protoimpl.UnsafeEnabled && x != nil {",
          "151:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "152:   if ms.LoadMessageInfo() == nil {",
          "",
          "[Removed Lines]",
          "149:  mi := &file_apiv2_tag_service_proto_msgTypes[2]",
          "",
          "[Added Lines]",
          "150:  mi := &file_api_v2_tag_service_proto_msgTypes[2]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "161: func (*ListTagsResponse) Descriptor() ([]byte, []int) {",
          "163: }",
          "165: func (x *ListTagsResponse) GetTags() []*Tag {",
          "",
          "[Removed Lines]",
          "162:  return file_apiv2_tag_service_proto_rawDescGZIP(), []int{2}",
          "",
          "[Added Lines]",
          "163:  return file_api_v2_tag_service_proto_rawDescGZIP(), []int{2}",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "169:  return nil",
          "170: }",
          "178:  0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,",
          "179:  0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,",
          "180:  0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64,",
          "181:  0x22, 0x30, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,",
          "182:  0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69,",
          "183:  0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,",
          "204: }",
          "206: var (",
          "209: )",
          "214:  })",
          "216: }",
          "223: }",
          "228:  2, // [2:3] is the sub-list for method output_type",
          "229:  1, // [1:2] is the sub-list for method input_type",
          "230:  1, // [1:1] is the sub-list for extension type_name",
          "",
          "[Removed Lines]",
          "172: var File_apiv2_tag_service_proto protoreflect.FileDescriptor",
          "174: var file_apiv2_tag_service_proto_rawDesc = []byte{",
          "175:  0x0a, 0x17, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x74, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76,",
          "176:  0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x73,",
          "177:  0x2e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x22, 0x38, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a,",
          "184:  0x49, 0x64, 0x22, 0x38, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65,",
          "185:  0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01,",
          "186:  0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69,",
          "187:  0x76, 0x32, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x32, 0x55, 0x0a, 0x0a,",
          "188:  0x54, 0x61, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x4c, 0x69,",
          "189:  0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61,",
          "190:  0x70, 0x69, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71,",
          "191:  0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69,",
          "192:  0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,",
          "193:  0x6e, 0x73, 0x65, 0x42, 0x9a, 0x01, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x6d, 0x6f,",
          "194:  0x73, 0x2e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x42, 0x0f, 0x54, 0x61, 0x67, 0x53, 0x65, 0x72, 0x76,",
          "195:  0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68,",
          "196:  0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x73, 0x65, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2f,",
          "197:  0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f,",
          "198:  0x61, 0x70, 0x69, 0x76, 0x32, 0xa2, 0x02, 0x03, 0x4d, 0x41, 0x58, 0xaa, 0x02, 0x0b, 0x4d, 0x65,",
          "199:  0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x76, 0x32, 0xca, 0x02, 0x0b, 0x4d, 0x65, 0x6d, 0x6f,",
          "200:  0x73, 0x5c, 0x41, 0x70, 0x69, 0x76, 0x32, 0xe2, 0x02, 0x17, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x5c,",
          "201:  0x41, 0x70, 0x69, 0x76, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,",
          "202:  0x61, 0xea, 0x02, 0x0c, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x76, 0x32,",
          "203:  0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,",
          "207:  file_apiv2_tag_service_proto_rawDescOnce sync.Once",
          "208:  file_apiv2_tag_service_proto_rawDescData = file_apiv2_tag_service_proto_rawDesc",
          "211: func file_apiv2_tag_service_proto_rawDescGZIP() []byte {",
          "212:  file_apiv2_tag_service_proto_rawDescOnce.Do(func() {",
          "213:   file_apiv2_tag_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_apiv2_tag_service_proto_rawDescData)",
          "215:  return file_apiv2_tag_service_proto_rawDescData",
          "218: var file_apiv2_tag_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)",
          "219: var file_apiv2_tag_service_proto_goTypes = []interface{}{",
          "220:  (*Tag)(nil),              // 0: memos.apiv2.Tag",
          "221:  (*ListTagsRequest)(nil),  // 1: memos.apiv2.ListTagsRequest",
          "222:  (*ListTagsResponse)(nil), // 2: memos.apiv2.ListTagsResponse",
          "224: var file_apiv2_tag_service_proto_depIdxs = []int32{",
          "225:  0, // 0: memos.apiv2.ListTagsResponse.tags:type_name -> memos.apiv2.Tag",
          "226:  1, // 1: memos.apiv2.TagService.ListTags:input_type -> memos.apiv2.ListTagsRequest",
          "227:  2, // 2: memos.apiv2.TagService.ListTags:output_type -> memos.apiv2.ListTagsResponse",
          "",
          "[Added Lines]",
          "173: var File_api_v2_tag_service_proto protoreflect.FileDescriptor",
          "175: var file_api_v2_tag_service_proto_rawDesc = []byte{",
          "176:  0x0a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x74, 0x61, 0x67, 0x5f, 0x73, 0x65, 0x72,",
          "177:  0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6d, 0x65, 0x6d, 0x6f,",
          "178:  0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,",
          "179:  0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,",
          "180:  0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x38, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a,",
          "187:  0x49, 0x64, 0x22, 0x39, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65,",
          "188:  0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01,",
          "189:  0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69,",
          "190:  0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x32, 0x6d, 0x0a,",
          "191:  0x0a, 0x54, 0x61, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5f, 0x0a, 0x08, 0x4c,",
          "192:  0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1d, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e,",
          "193:  0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52,",
          "194:  0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61,",
          "195:  0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65,",
          "196:  0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c,",
          "197:  0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x74, 0x61, 0x67, 0x73, 0x42, 0xa7, 0x01, 0x0a,",
          "198:  0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,",
          "199:  0x32, 0x42, 0x0f, 0x54, 0x61, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f,",
          "200:  0x74, 0x6f, 0x50, 0x01, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,",
          "201:  0x2f, 0x75, 0x73, 0x65, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2f, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2f,",
          "202:  0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32,",
          "203:  0x3b, 0x61, 0x70, 0x69, 0x76, 0x32, 0xa2, 0x02, 0x03, 0x4d, 0x41, 0x58, 0xaa, 0x02, 0x0c, 0x4d,",
          "204:  0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x0c, 0x4d, 0x65,",
          "205:  0x6d, 0x6f, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x18, 0x4d, 0x65, 0x6d,",
          "206:  0x6f, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,",
          "207:  0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x3a, 0x3a, 0x41,",
          "208:  0x70, 0x69, 0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,",
          "212:  file_api_v2_tag_service_proto_rawDescOnce sync.Once",
          "213:  file_api_v2_tag_service_proto_rawDescData = file_api_v2_tag_service_proto_rawDesc",
          "216: func file_api_v2_tag_service_proto_rawDescGZIP() []byte {",
          "217:  file_api_v2_tag_service_proto_rawDescOnce.Do(func() {",
          "218:   file_api_v2_tag_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v2_tag_service_proto_rawDescData)",
          "220:  return file_api_v2_tag_service_proto_rawDescData",
          "223: var file_api_v2_tag_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)",
          "224: var file_api_v2_tag_service_proto_goTypes = []interface{}{",
          "225:  (*Tag)(nil),              // 0: memos.api.v2.Tag",
          "226:  (*ListTagsRequest)(nil),  // 1: memos.api.v2.ListTagsRequest",
          "227:  (*ListTagsResponse)(nil), // 2: memos.api.v2.ListTagsResponse",
          "229: var file_api_v2_tag_service_proto_depIdxs = []int32{",
          "230:  0, // 0: memos.api.v2.ListTagsResponse.tags:type_name -> memos.api.v2.Tag",
          "231:  1, // 1: memos.api.v2.TagService.ListTags:input_type -> memos.api.v2.ListTagsRequest",
          "232:  2, // 2: memos.api.v2.TagService.ListTags:output_type -> memos.api.v2.ListTagsResponse",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "232:  0, // [0:1] is the sub-list for field type_name",
          "233: }",
          "238:   return",
          "239:  }",
          "240:  if !protoimpl.UnsafeEnabled {",
          "242:    switch v := v.(*Tag); i {",
          "243:    case 0:",
          "244:     return &v.state",
          "",
          "[Removed Lines]",
          "235: func init() { file_apiv2_tag_service_proto_init() }",
          "236: func file_apiv2_tag_service_proto_init() {",
          "237:  if File_apiv2_tag_service_proto != nil {",
          "241:   file_apiv2_tag_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {",
          "",
          "[Added Lines]",
          "240: func init() { file_api_v2_tag_service_proto_init() }",
          "241: func file_api_v2_tag_service_proto_init() {",
          "242:  if File_api_v2_tag_service_proto != nil {",
          "246:   file_api_v2_tag_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "250:     return nil",
          "251:    }",
          "252:   }",
          "254:    switch v := v.(*ListTagsRequest); i {",
          "255:    case 0:",
          "256:     return &v.state",
          "",
          "[Removed Lines]",
          "253:   file_apiv2_tag_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {",
          "",
          "[Added Lines]",
          "258:   file_api_v2_tag_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "262:     return nil",
          "263:    }",
          "264:   }",
          "266:    switch v := v.(*ListTagsResponse); i {",
          "267:    case 0:",
          "268:     return &v.state",
          "",
          "[Removed Lines]",
          "265:   file_apiv2_tag_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {",
          "",
          "[Added Lines]",
          "270:   file_api_v2_tag_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "279:  out := protoimpl.TypeBuilder{",
          "280:   File: protoimpl.DescBuilder{",
          "281:    GoPackagePath: reflect.TypeOf(x{}).PkgPath(),",
          "283:    NumEnums:      0,",
          "284:    NumMessages:   3,",
          "285:    NumExtensions: 0,",
          "286:    NumServices:   1,",
          "287:   },",
          "291:  }.Build()",
          "296: }",
          "",
          "[Removed Lines]",
          "282:    RawDescriptor: file_apiv2_tag_service_proto_rawDesc,",
          "288:   GoTypes:           file_apiv2_tag_service_proto_goTypes,",
          "289:   DependencyIndexes: file_apiv2_tag_service_proto_depIdxs,",
          "290:   MessageInfos:      file_apiv2_tag_service_proto_msgTypes,",
          "292:  File_apiv2_tag_service_proto = out.File",
          "293:  file_apiv2_tag_service_proto_rawDesc = nil",
          "294:  file_apiv2_tag_service_proto_goTypes = nil",
          "295:  file_apiv2_tag_service_proto_depIdxs = nil",
          "",
          "[Added Lines]",
          "287:    RawDescriptor: file_api_v2_tag_service_proto_rawDesc,",
          "293:   GoTypes:           file_api_v2_tag_service_proto_goTypes,",
          "294:   DependencyIndexes: file_api_v2_tag_service_proto_depIdxs,",
          "295:   MessageInfos:      file_api_v2_tag_service_proto_msgTypes,",
          "297:  File_api_v2_tag_service_proto = out.File",
          "298:  file_api_v2_tag_service_proto_rawDesc = nil",
          "299:  file_api_v2_tag_service_proto_goTypes = nil",
          "300:  file_api_v2_tag_service_proto_depIdxs = nil",
          "",
          "---------------"
        ],
        "proto/gen/api/v2/tag_service.pb.gw.go||proto/gen/api/v2/tag_service.pb.gw.go": [
          "File: proto/gen/api/v2/tag_service.pb.gw.go -> proto/gen/api/v2/tag_service.pb.gw.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: Package apiv2 is a reverse proxy.",
          "7: It translates gRPC into RESTful JSON APIs.",
          "9: package apiv2",
          "11: import (",
          "12:  \"context\"",
          "13:  \"io\"",
          "14:  \"net/http\"",
          "16:  \"github.com/grpc-ecosystem/grpc-gateway/v2/runtime\"",
          "17:  \"github.com/grpc-ecosystem/grpc-gateway/v2/utilities\"",
          "18:  \"google.golang.org/grpc\"",
          "19:  \"google.golang.org/grpc/codes\"",
          "20:  \"google.golang.org/grpc/grpclog\"",
          "21:  \"google.golang.org/grpc/metadata\"",
          "22:  \"google.golang.org/grpc/status\"",
          "23:  \"google.golang.org/protobuf/proto\"",
          "24: )",
          "27: var _ codes.Code",
          "28: var _ io.Reader",
          "29: var _ status.Status",
          "30: var _ = runtime.String",
          "31: var _ = utilities.NewDoubleArray",
          "32: var _ = metadata.Join",
          "34: var (",
          "35:  filter_TagService_ListTags_0 = &utilities.DoubleArray{Encoding: map[string]int{}, Base: []int(nil), Check: []int(nil)}",
          "36: )",
          "38: func request_TagService_ListTags_0(ctx context.Context, marshaler runtime.Marshaler, client TagServiceClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "39:  var protoReq ListTagsRequest",
          "40:  var metadata runtime.ServerMetadata",
          "42:  if err := req.ParseForm(); err != nil {",
          "43:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "44:  }",
          "45:  if err := runtime.PopulateQueryParameters(&protoReq, req.Form, filter_TagService_ListTags_0); err != nil {",
          "46:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "47:  }",
          "49:  msg, err := client.ListTags(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))",
          "50:  return msg, metadata, err",
          "52: }",
          "54: func local_request_TagService_ListTags_0(ctx context.Context, marshaler runtime.Marshaler, server TagServiceServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "55:  var protoReq ListTagsRequest",
          "56:  var metadata runtime.ServerMetadata",
          "58:  if err := req.ParseForm(); err != nil {",
          "59:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "60:  }",
          "61:  if err := runtime.PopulateQueryParameters(&protoReq, req.Form, filter_TagService_ListTags_0); err != nil {",
          "62:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "63:  }",
          "65:  msg, err := server.ListTags(ctx, &protoReq)",
          "66:  return msg, metadata, err",
          "68: }",
          "74: func RegisterTagServiceHandlerServer(ctx context.Context, mux *runtime.ServeMux, server TagServiceServer) error {",
          "76:  mux.Handle(\"GET\", pattern_TagService_ListTags_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "77:   ctx, cancel := context.WithCancel(req.Context())",
          "78:   defer cancel()",
          "79:   var stream runtime.ServerTransportStream",
          "80:   ctx = grpc.NewContextWithServerTransportStream(ctx, &stream)",
          "81:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "82:   var err error",
          "83:   var annotatedContext context.Context",
          "84:   annotatedContext, err = runtime.AnnotateIncomingContext(ctx, mux, req, \"/memos.api.v2.TagService/ListTags\", runtime.WithHTTPPathPattern(\"/api/v2/tags\"))",
          "85:   if err != nil {",
          "86:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "87:    return",
          "88:   }",
          "89:   resp, md, err := local_request_TagService_ListTags_0(annotatedContext, inboundMarshaler, server, req, pathParams)",
          "90:   md.HeaderMD, md.TrailerMD = metadata.Join(md.HeaderMD, stream.Header()), metadata.Join(md.TrailerMD, stream.Trailer())",
          "91:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "92:   if err != nil {",
          "93:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "94:    return",
          "95:   }",
          "97:   forward_TagService_ListTags_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "99:  })",
          "101:  return nil",
          "102: }",
          "106: func RegisterTagServiceHandlerFromEndpoint(ctx context.Context, mux *runtime.ServeMux, endpoint string, opts []grpc.DialOption) (err error) {",
          "107:  conn, err := grpc.DialContext(ctx, endpoint, opts...)",
          "108:  if err != nil {",
          "109:   return err",
          "110:  }",
          "111:  defer func() {",
          "112:   if err != nil {",
          "113:    if cerr := conn.Close(); cerr != nil {",
          "114:     grpclog.Infof(\"Failed to close conn to %s: %v\", endpoint, cerr)",
          "115:    }",
          "116:    return",
          "117:   }",
          "118:   go func() {",
          "119:    <-ctx.Done()",
          "120:    if cerr := conn.Close(); cerr != nil {",
          "121:     grpclog.Infof(\"Failed to close conn to %s: %v\", endpoint, cerr)",
          "122:    }",
          "123:   }()",
          "124:  }()",
          "126:  return RegisterTagServiceHandler(ctx, mux, conn)",
          "127: }",
          "131: func RegisterTagServiceHandler(ctx context.Context, mux *runtime.ServeMux, conn *grpc.ClientConn) error {",
          "132:  return RegisterTagServiceHandlerClient(ctx, mux, NewTagServiceClient(conn))",
          "133: }",
          "140: func RegisterTagServiceHandlerClient(ctx context.Context, mux *runtime.ServeMux, client TagServiceClient) error {",
          "142:  mux.Handle(\"GET\", pattern_TagService_ListTags_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "143:   ctx, cancel := context.WithCancel(req.Context())",
          "144:   defer cancel()",
          "145:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "146:   var err error",
          "147:   var annotatedContext context.Context",
          "148:   annotatedContext, err = runtime.AnnotateContext(ctx, mux, req, \"/memos.api.v2.TagService/ListTags\", runtime.WithHTTPPathPattern(\"/api/v2/tags\"))",
          "149:   if err != nil {",
          "150:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "151:    return",
          "152:   }",
          "153:   resp, md, err := request_TagService_ListTags_0(annotatedContext, inboundMarshaler, client, req, pathParams)",
          "154:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "155:   if err != nil {",
          "156:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "157:    return",
          "158:   }",
          "160:   forward_TagService_ListTags_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "162:  })",
          "164:  return nil",
          "165: }",
          "167: var (",
          "168:  pattern_TagService_ListTags_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{\"api\", \"v2\", \"tags\"}, \"\"))",
          "169: )",
          "171: var (",
          "172:  forward_TagService_ListTags_0 = runtime.ForwardResponseMessage",
          "173: )",
          "",
          "---------------"
        ],
        "proto/gen/apiv2/tag_service_grpc.pb.go||proto/gen/api/v2/tag_service_grpc.pb.go": [
          "File: proto/gen/apiv2/tag_service_grpc.pb.go -> proto/gen/api/v2/tag_service_grpc.pb.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: const _ = grpc.SupportPackageIsVersion7",
          "21: const (",
          "23: )",
          "",
          "[Removed Lines]",
          "22:  TagService_ListTags_FullMethodName = \"/memos.apiv2.TagService/ListTags\"",
          "",
          "[Added Lines]",
          "22:  TagService_ListTags_FullMethodName = \"/memos.api.v2.TagService/ListTags\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "98: var TagService_ServiceDesc = grpc.ServiceDesc{",
          "100:  HandlerType: (*TagServiceServer)(nil),",
          "101:  Methods: []grpc.MethodDesc{",
          "102:   {",
          "",
          "[Removed Lines]",
          "99:  ServiceName: \"memos.apiv2.TagService\",",
          "",
          "[Added Lines]",
          "99:  ServiceName: \"memos.api.v2.TagService\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "105:   },",
          "106:  },",
          "107:  Streams:  []grpc.StreamDesc{},",
          "109: }",
          "",
          "[Removed Lines]",
          "108:  Metadata: \"apiv2/tag_service.proto\",",
          "",
          "[Added Lines]",
          "108:  Metadata: \"api/v2/tag_service.proto\",",
          "",
          "---------------"
        ],
        "proto/gen/apiv2/apiv2connect/tag_service.connect.go||proto/gen/apiv2/apiv2connect/tag_service.connect.go": [
          "File: proto/gen/apiv2/apiv2connect/tag_service.connect.go -> proto/gen/apiv2/apiv2connect/tag_service.connect.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "server/server.go||server/server.go": [
          "File: server/server.go -> server/server.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:  \"context\"",
          "5:  \"encoding/json\"",
          "6:  \"fmt\"",
          "7:  \"net/http\"",
          "8:  \"time\"",
          "10:  \"github.com/google/uuid\"",
          "11:  \"github.com/pkg/errors\"",
          "12:  apiv1 \"github.com/usememos/memos/api/v1\"",
          "13:  \"github.com/usememos/memos/common/util\"",
          "14:  \"github.com/usememos/memos/plugin/telegram\"",
          "15:  \"github.com/usememos/memos/server/profile\"",
          "16:  \"github.com/usememos/memos/store\"",
          "20: )",
          "22: type Server struct {",
          "25:  ID      string",
          "26:  Secret  string",
          "",
          "[Removed Lines]",
          "18:  \"github.com/labstack/echo/v4\"",
          "19:  \"github.com/labstack/echo/v4/middleware\"",
          "23:  e *echo.Echo",
          "",
          "[Added Lines]",
          "7:  \"net\"",
          "12:  \"github.com/labstack/echo/v4\"",
          "13:  \"github.com/labstack/echo/v4/middleware\"",
          "16:  apiv2 \"github.com/usememos/memos/api/v2\"",
          "17:  \"github.com/usememos/memos/common/log\"",
          "20:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "23:  \"go.uber.org/zap\"",
          "24:  \"google.golang.org/grpc\"",
          "28:  e          *echo.Echo",
          "29:  grpcServer *grpc.Server",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94:  apiV1Service := apiv1.NewAPIV1Service(s.Secret, profile, store)",
          "95:  apiV1Service.Register(rootGroup)",
          "97:  return s, nil",
          "98: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "104:  s.grpcServer = grpc.NewServer()",
          "105:  apiv2pb.RegisterTagServiceServer(s.grpcServer, apiv2.NewTagService(store))",
          "108:  apiv2.RegisterGateway(ctx, e, s.Profile.Port+1)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "105:  go s.telegramBot.Start(ctx)",
          "106:  go autoBackup(ctx, s.Store)",
          "108:  return s.e.Start(fmt.Sprintf(\":%d\", s.Profile.Port))",
          "109: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "122:  listen, err := net.Listen(\"tcp\", fmt.Sprintf(\":%d\", s.Profile.Port+1))",
          "123:  if err != nil {",
          "124:   return err",
          "125:  }",
          "126:  go func() {",
          "127:   if err := s.grpcServer.Serve(listen); err != nil {",
          "128:    log.Error(\"grpc server listen error\", zap.Error(err))",
          "129:   }",
          "130:  }()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fa17dce04638dc05b2283afe6bd4db2a840f9e16",
      "candidate_info": {
        "commit_hash": "fa17dce04638dc05b2283afe6bd4db2a840f9e16",
        "repo": "usememos/memos",
        "commit_url": "https://github.com/usememos/memos/commit/fa17dce04638dc05b2283afe6bd4db2a840f9e16",
        "files": [
          "api/v1/resource.go",
          "api/v1/storage.go",
          "api/v1/swagger.yaml",
          "bin/memos/main.go",
          "docs/api/v1.md",
          "internal/jobs/presign_link.go",
          "plugin/storage/s3/s3.go",
          "store/db/mysql/resource.go",
          "store/db/postgres/resource.go",
          "store/db/sqlite/resource.go",
          "store/resource.go",
          "web/src/components/CreateStorageServiceDialog.tsx",
          "web/src/locales/en.json",
          "web/src/locales/ru.json",
          "web/src/types/modules/storage.d.ts"
        ],
        "message": "feat: pre-signed URL for S3 storage (#2855)\n\nAdds automatically background refresh of all external links if they are belongs to the current blob (S3) storage. The feature is disabled by default in order to keep backward compatibility.\n\nThe background go-routine spawns once during startup and periodically signs and updates external links if that links belongs to current S3 storage.\n\nThe original idea was to sign external links on-demand, however, with current architecture it will require duplicated code in plenty of places. If do it, the changes will be quite invasive and in the end pointless: I believe, the architecture will be eventually updated to give more scalable way for pluggable storage. For example - Upload/Download interface without hard dependency on external link. There are stubs already, but I don't feel confident enough to change significant part of the application architecture.",
        "before_after_code_files": [
          "api/v1/resource.go||api/v1/resource.go",
          "api/v1/storage.go||api/v1/storage.go",
          "bin/memos/main.go||bin/memos/main.go",
          "internal/jobs/presign_link.go||internal/jobs/presign_link.go",
          "plugin/storage/s3/s3.go||plugin/storage/s3/s3.go",
          "store/db/mysql/resource.go||store/dmysql/resource.go",
          "store/db/postgres/resource.go||store/dpostgres/resource.go",
          "store/db/sqlite/resource.go||store/dsqlite/resource.go",
          "store/resource.go||store/resource.go",
          "web/src/components/CreateStorageServiceDialog.tsx||wesrc/components/CreateStorageServiceDialog.tsx",
          "web/src/types/modules/storage.d.ts||wesrc/types/modules/storage.d.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "internal/jobs/presign_link.go||internal/jobs/presign_link.go"
          ],
          "candidate": [
            "internal/jobs/presign_link.go||internal/jobs/presign_link.go"
          ]
        }
      },
      "candidate_diff": {
        "api/v1/resource.go||api/v1/resource.go": [
          "File: api/v1/resource.go -> api/v1/resource.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "480:   Bucket:    s3Config.Bucket,",
          "481:   URLPrefix: s3Config.URLPrefix,",
          "482:   URLSuffix: s3Config.URLSuffix,",
          "483:  })",
          "484:  if err != nil {",
          "485:   return errors.Wrap(err, \"Failed to create s3 client\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "483:   PreSign:   s3Config.PreSign,",
          "",
          "---------------"
        ],
        "api/v1/storage.go||api/v1/storage.go": [
          "File: api/v1/storage.go -> api/v1/storage.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:  Bucket    string `json:\"bucket\"`",
          "44:  URLPrefix string `json:\"urlPrefix\"`",
          "45:  URLSuffix string `json:\"urlSuffix\"`",
          "46: }",
          "48: type Storage struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46:  PreSign   bool   `json:\"presign\"`",
          "",
          "---------------"
        ],
        "bin/memos/main.go||bin/memos/main.go": [
          "File: bin/memos/main.go -> bin/memos/main.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:  \"github.com/spf13/viper\"",
          "13:  \"go.uber.org/zap\"",
          "15:  \"github.com/usememos/memos/internal/log\"",
          "16:  \"github.com/usememos/memos/server\"",
          "17:  _profile \"github.com/usememos/memos/server/profile\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15:  \"github.com/usememos/memos/internal/jobs\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "92:    printGreetings()",
          "94:    if err := s.Start(ctx); err != nil {",
          "95:     if err != http.ErrServerClosed {",
          "96:      log.Error(\"failed to start server\", zap.Error(err))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:    go jobs.RunPreSignLinks(ctx, storeInstance)",
          "",
          "---------------"
        ],
        "internal/jobs/presign_link.go||internal/jobs/presign_link.go": [
          "File: internal/jobs/presign_link.go -> internal/jobs/presign_link.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package jobs",
          "3: import (",
          "4:  \"context\"",
          "5:  \"encoding/json\"",
          "6:  \"strings\"",
          "7:  \"time\"",
          "9:  \"github.com/pkg/errors\"",
          "10:  \"go.uber.org/zap\"",
          "12:  apiv1 \"github.com/usememos/memos/api/v1\"",
          "13:  \"github.com/usememos/memos/internal/log\"",
          "14:  \"github.com/usememos/memos/plugin/storage/s3\"",
          "15:  \"github.com/usememos/memos/store\"",
          "16: )",
          "20: func RunPreSignLinks(ctx context.Context, dataStore *store.Store) {",
          "21:  for {",
          "22:   started := time.Now()",
          "23:   if err := signExternalLinks(ctx, dataStore); err != nil {",
          "24:    log.Warn(\"failed sign external links\", zap.Error(err))",
          "25:   } else {",
          "26:    log.Info(\"links pre-signed\", zap.Duration(\"duration\", time.Since(started)))",
          "27:   }",
          "28:   select {",
          "29:   case <-time.After(s3.LinkLifetime / 2):",
          "30:   case <-ctx.Done():",
          "31:    return",
          "32:   }",
          "33:  }",
          "34: }",
          "36: func signExternalLinks(ctx context.Context, dataStore *store.Store) error {",
          "37:  const pageSize = 32",
          "39:  objectStore, err := findObjectStorage(ctx, dataStore)",
          "40:  if err != nil {",
          "41:   return errors.Wrapf(err, \"find object storage\")",
          "42:  }",
          "43:  if objectStore == nil || !objectStore.Config.PreSign {",
          "45:   return nil",
          "46:  }",
          "48:  var offset int",
          "49:  var limit = pageSize",
          "50:  for {",
          "51:   resources, err := dataStore.ListResources(ctx, &store.FindResource{",
          "52:    GetBlob: false,",
          "53:    Limit:   &limit,",
          "54:    Offset:  &offset,",
          "55:   })",
          "56:   if err != nil {",
          "57:    return errors.Wrapf(err, \"list resources, offset %d\", offset)",
          "58:   }",
          "60:   for _, res := range resources {",
          "61:    if res.ExternalLink == \"\" {",
          "63:     continue",
          "64:    }",
          "65:    if strings.Contains(res.ExternalLink, \"?\") && time.Since(time.Unix(res.UpdatedTs, 0)) < s3.LinkLifetime/2 {",
          "68:     continue",
          "69:    }",
          "70:    newLink, err := objectStore.PreSignLink(ctx, res.ExternalLink)",
          "71:    if err != nil {",
          "72:     log.Warn(\"failed pre-sign link\", zap.Int32(\"resource\", res.ID), zap.String(\"link\", res.ExternalLink), zap.Error(err))",
          "73:     continue // do not fail - we may want update left over links too",
          "74:    }",
          "75:    now := time.Now().Unix()",
          "77:    _, err = dataStore.UpdateResource(ctx, &store.UpdateResource{",
          "78:     ID:           res.ID,",
          "79:     UpdatedTs:    &now,",
          "80:     ExternalLink: &newLink,",
          "81:    })",
          "82:    if err != nil {",
          "84:     return errors.Wrapf(err, \"update resource %d link to %q\", res.ID, newLink)",
          "85:    }",
          "86:   }",
          "88:   offset += limit",
          "89:   if len(resources) < limit {",
          "90:    break",
          "91:   }",
          "92:  }",
          "93:  return nil",
          "94: }",
          "99: func findObjectStorage(ctx context.Context, dataStore *store.Store) (*s3.Client, error) {",
          "100:  systemSettingStorageServiceID, err := dataStore.GetSystemSetting(ctx, &store.FindSystemSetting{Name: apiv1.SystemSettingStorageServiceIDName.String()})",
          "101:  if err != nil {",
          "102:   return nil, errors.Wrap(err, \"Failed to find SystemSettingStorageServiceIDName\")",
          "103:  }",
          "105:  storageServiceID := apiv1.DefaultStorage",
          "106:  if systemSettingStorageServiceID != nil {",
          "107:   err = json.Unmarshal([]byte(systemSettingStorageServiceID.Value), &storageServiceID)",
          "108:   if err != nil {",
          "109:    return nil, errors.Wrap(err, \"Failed to unmarshal storage service id\")",
          "110:   }",
          "111:  }",
          "112:  storage, err := dataStore.GetStorage(ctx, &store.FindStorage{ID: &storageServiceID})",
          "113:  if err != nil {",
          "114:   return nil, errors.Wrap(err, \"Failed to find StorageServiceID\")",
          "115:  }",
          "117:  if storage == nil {",
          "118:   return nil, nil // storage not configured - not an error, just return empty ref",
          "119:  }",
          "120:  storageMessage, err := apiv1.ConvertStorageFromStore(storage)",
          "122:  if err != nil {",
          "123:   return nil, errors.Wrap(err, \"Failed to ConvertStorageFromStore\")",
          "124:  }",
          "125:  if storageMessage.Type != apiv1.StorageS3 {",
          "126:   return nil, nil",
          "127:  }",
          "129:  s3Config := storageMessage.Config.S3Config",
          "130:  return s3.NewClient(ctx, &s3.Config{",
          "131:   AccessKey: s3Config.AccessKey,",
          "132:   SecretKey: s3Config.SecretKey,",
          "133:   EndPoint:  s3Config.EndPoint,",
          "134:   Region:    s3Config.Region,",
          "135:   Bucket:    s3Config.Bucket,",
          "136:   URLPrefix: s3Config.URLPrefix,",
          "137:   URLSuffix: s3Config.URLSuffix,",
          "138:   PreSign:   s3Config.PreSign,",
          "139:  })",
          "140: }",
          "",
          "---------------"
        ],
        "plugin/storage/s3/s3.go||plugin/storage/s3/s3.go": [
          "File: plugin/storage/s3/s3.go -> plugin/storage/s3/s3.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  \"io\"",
          "8:  \"net/url\"",
          "9:  \"strings\"",
          "11:  \"github.com/aws/aws-sdk-go-v2/aws\"",
          "12:  s3config \"github.com/aws/aws-sdk-go-v2/config\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10:  \"time\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "14:  \"github.com/aws/aws-sdk-go-v2/feature/s3/manager\"",
          "15:  awss3 \"github.com/aws/aws-sdk-go-v2/service/s3\"",
          "16:  \"github.com/aws/aws-sdk-go-v2/service/s3/types\"",
          "17: )",
          "19: type Config struct {",
          "20:  AccessKey string",
          "21:  SecretKey string",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18:  errors2 \"github.com/pkg/errors\"",
          "21: const LinkLifetime = 24 * time.Hour",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "24:  Region    string",
          "25:  URLPrefix string",
          "26:  URLSuffix string",
          "27: }",
          "29: type Client struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31:  PreSign   bool",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "93:  if link == \"\" {",
          "94:   return \"\", errors.New(\"failed to get file link\")",
          "95:  }",
          "96:  return link, nil",
          "97: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101:  if client.Config.PreSign {",
          "102:   return client.PreSignLink(ctx, link)",
          "103:  }",
          "110: func (client *Client) PreSignLink(ctx context.Context, sourceLink string) (string, error) {",
          "111:  u, err := url.Parse(sourceLink)",
          "112:  if err != nil {",
          "113:   return \"\", errors2.Wrapf(err, \"parse URL\")",
          "114:  }",
          "117:  if client.Config.EndPoint != \"\" && !strings.Contains(client.Config.EndPoint, u.Hostname()) {",
          "118:   return sourceLink, nil",
          "119:  }",
          "121:  filename := u.Path",
          "122:  if prefixLen := len(client.Config.URLPrefix); len(filename) >= prefixLen {",
          "123:   filename = filename[prefixLen:]",
          "124:  }",
          "125:  if suffixLen := len(client.Config.URLSuffix); len(filename) >= suffixLen {",
          "126:   filename = filename[:len(filename)-suffixLen]",
          "127:  }",
          "128:  filename = strings.Trim(filename, \"/\")",
          "129:  if strings.HasPrefix(filename, client.Config.Bucket) {",
          "130:   filename = strings.Trim(filename[len(client.Config.Bucket):], \"/\")",
          "131:  }",
          "133:  req, err := awss3.NewPresignClient(client.Client).PresignGetObject(ctx, &awss3.GetObjectInput{",
          "134:   Bucket: aws.String(client.Config.Bucket),",
          "135:   Key:    aws.String(filename),",
          "136:  }, awss3.WithPresignExpires(LinkLifetime))",
          "137:  if err != nil {",
          "138:   return \"\", errors2.Wrapf(err, \"pre-sign link\")",
          "139:  }",
          "140:  return req.URL, nil",
          "141: }",
          "",
          "---------------"
        ],
        "store/db/mysql/resource.go||store/dmysql/resource.go": [
          "File: store/db/mysql/resource.go -> store/dmysql/resource.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "133:  if v := update.InternalPath; v != nil {",
          "134:   set, args = append(set, \"`internal_path` = ?\"), append(args, *v)",
          "135:  }",
          "136:  if v := update.MemoID; v != nil {",
          "137:   set, args = append(set, \"`memo_id` = ?\"), append(args, *v)",
          "138:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "store/db/postgres/resource.go||store/dpostgres/resource.go": [
          "File: store/db/postgres/resource.go -> store/dpostgres/resource.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "118:  if v := update.InternalPath; v != nil {",
          "119:   set, args = append(set, \"internal_path = \"+placeholder(len(args)+1)), append(args, *v)",
          "120:  }",
          "121:  if v := update.MemoID; v != nil {",
          "122:   set, args = append(set, \"memo_id = \"+placeholder(len(args)+1)), append(args, *v)",
          "123:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "store/db/sqlite/resource.go||store/dsqlite/resource.go": [
          "File: store/db/sqlite/resource.go -> store/dsqlite/resource.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:  if v := update.InternalPath; v != nil {",
          "115:   set, args = append(set, \"`internal_path` = ?\"), append(args, *v)",
          "116:  }",
          "117:  if v := update.MemoID; v != nil {",
          "118:   set, args = append(set, \"`memo_id` = ?\"), append(args, *v)",
          "119:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "store/resource.go||store/resource.go": [
          "File: store/resource.go -> store/resource.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:  UpdatedTs    *int64",
          "54:  Filename     *string",
          "55:  InternalPath *string",
          "56:  MemoID       *int32",
          "57:  Blob         []byte",
          "58: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56:  ExternalLink *string",
          "",
          "---------------"
        ],
        "web/src/components/CreateStorageServiceDialog.tsx||wesrc/components/CreateStorageServiceDialog.tsx": [
          "File: web/src/components/CreateStorageServiceDialog.tsx -> wesrc/components/CreateStorageServiceDialog.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import { toast } from \"react-hot-toast\";",
          "4: import * as api from \"@/helpers/api\";",
          "5: import { useTranslate } from \"@/utils/i18n\";",
          "",
          "[Removed Lines]",
          "1: import { Button, IconButton, Input, Typography } from \"@mui/joy\";",
          "2: import { useEffect, useState } from \"react\";",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29:     bucket: \"\",",
          "30:     urlPrefix: \"\",",
          "31:     urlSuffix: \"\",",
          "32:   });",
          "33:   const isCreating = storage === undefined;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "220:           onChange={(e) => setPartialS3Config({ urlSuffix: e.target.value })}",
          "221:           fullWidth",
          "222:         />",
          "223:         <div className=\"mt-2 w-full flex flex-row justify-end items-center space-x-1\">",
          "224:           <Button variant=\"plain\" color=\"neutral\" onClick={handleCloseBtnClick}>",
          "225:             {t(\"common.cancel\")}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "web/src/types/modules/storage.d.ts||wesrc/types/modules/storage.d.ts": [
          "File: web/src/types/modules/storage.d.ts -> wesrc/types/modules/storage.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:   bucket: string;",
          "12:   urlPrefix: string;",
          "13:   urlSuffix: string;",
          "14: }",
          "16: interface StorageConfig {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "470fe1df49fada90364a95d2df482470efa95629",
      "candidate_info": {
        "commit_hash": "470fe1df49fada90364a95d2df482470efa95629",
        "repo": "usememos/memos",
        "commit_url": "https://github.com/usememos/memos/commit/470fe1df49fada90364a95d2df482470efa95629",
        "files": [
          "api/v2/common.go",
          "api/v2/gw_mux.go",
          "api/v2/user_service.go",
          "api/v2/v2.go",
          "proto/api/v2/common.proto",
          "proto/api/v2/user_service.proto",
          "proto/buf.yaml",
          "proto/gen/api/v2/README.md",
          "proto/gen/api/v2/common.pb.go",
          "proto/gen/api/v2/user_service.pb.go",
          "proto/gen/api/v2/user_service.pb.gw.go",
          "proto/gen/api/v2/user_service_grpc.pb.go",
          "proto/gen/store/README.md",
          "proto/gen/store/tag.pb.go",
          "proto/store/tag.proto",
          "server/server.go"
        ],
        "message": "feat: implement part of user service (#2053)\n\n* feat: implement part of user service\n\n* chore: update\n\n* chore: update",
        "before_after_code_files": [
          "api/v2/common.go||api/v2/common.go",
          "api/v2/gw_mux.go||api/v2/gw_mux.go",
          "api/v2/user_service.go||api/v2/user_service.go",
          "api/v2/v2.go||api/v2/v2.go",
          "proto/api/v2/common.proto||proto/api/v2/common.proto",
          "proto/api/v2/user_service.proto||proto/api/v2/user_service.proto",
          "proto/gen/api/v2/common.pb.go||proto/gen/api/v2/common.pb.go",
          "proto/gen/api/v2/user_service.pb.go||proto/gen/api/v2/user_service.pb.go",
          "proto/gen/api/v2/user_service.pb.gw.go||proto/gen/api/v2/user_service.pb.gw.go",
          "proto/gen/api/v2/user_service_grpc.pb.go||proto/gen/api/v2/user_service_grpc.pb.go",
          "proto/gen/store/tag.pb.go||proto/gen/store/tag.pb.go",
          "proto/store/tag.proto||proto/store/tag.proto",
          "server/server.go||server/server.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "server/server.go||server/server.go"
          ],
          "candidate": [
            "server/server.go||server/server.go"
          ]
        }
      },
      "candidate_diff": {
        "api/v2/common.go||api/v2/common.go": [
          "File: api/v2/common.go -> api/v2/common.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package v2",
          "3: import (",
          "4:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "5:  \"github.com/usememos/memos/store\"",
          "6: )",
          "8: func convertRowStatusFromStore(rowStatus store.RowStatus) apiv2pb.RowStatus {",
          "9:  switch rowStatus {",
          "10:  case store.Normal:",
          "11:   return apiv2pb.RowStatus_ACTIVE",
          "12:  case store.Archived:",
          "13:   return apiv2pb.RowStatus_ARCHIVED",
          "14:  default:",
          "15:   return apiv2pb.RowStatus_ROW_STATUS_UNSPECIFIED",
          "16:  }",
          "17: }",
          "",
          "---------------"
        ],
        "api/v2/gw_mux.go||api/v2/gw_mux.go": [
          "File: api/v2/gw_mux.go -> api/v2/gw_mux.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "api/v2/user_service.go||api/v2/user_service.go": [
          "File: api/v2/user_service.go -> api/v2/user_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package v2",
          "3: import (",
          "4:  \"context\"",
          "6:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "7:  \"github.com/usememos/memos/store\"",
          "8:  \"google.golang.org/grpc/codes\"",
          "9:  \"google.golang.org/grpc/status\"",
          "10: )",
          "12: type UserService struct {",
          "13:  apiv2pb.UnimplementedUserServiceServer",
          "15:  Store *store.Store",
          "16: }",
          "19: func NewUserService(store *store.Store) *UserService {",
          "20:  return &UserService{",
          "21:   Store: store,",
          "22:  }",
          "23: }",
          "25: func (s *UserService) GetUser(ctx context.Context, request *apiv2pb.GetUserRequest) (*apiv2pb.GetUserResponse, error) {",
          "26:  println(\"GetUser\", request.Name)",
          "27:  user, err := s.Store.GetUser(ctx, &store.FindUser{",
          "28:   Username: &request.Name,",
          "29:  })",
          "30:  if err != nil {",
          "31:   return nil, status.Errorf(codes.Internal, \"failed to list tags: %v\", err)",
          "32:  }",
          "33:  if user == nil {",
          "34:   return nil, status.Errorf(codes.NotFound, \"user not found\")",
          "35:  }",
          "37:  userMessage := convertUserFromStore(user)",
          "39:  userMessage.OpenId = \"\"",
          "41:  response := &apiv2pb.GetUserResponse{",
          "42:   User: userMessage,",
          "43:  }",
          "44:  return response, nil",
          "45: }",
          "47: func convertUserFromStore(user *store.User) *apiv2pb.User {",
          "48:  return &apiv2pb.User{",
          "49:   Id:        int32(user.ID),",
          "50:   RowStatus: convertRowStatusFromStore(user.RowStatus),",
          "51:   CreatedTs: user.CreatedTs,",
          "52:   UpdatedTs: user.UpdatedTs,",
          "53:   Username:  user.Username,",
          "54:   Role:      convertUserRoleFromStore(user.Role),",
          "55:   Email:     user.Email,",
          "56:   Nickname:  user.Nickname,",
          "57:   OpenId:    user.OpenID,",
          "58:   AvatarUrl: user.AvatarURL,",
          "59:  }",
          "60: }",
          "62: func convertUserRoleFromStore(role store.Role) apiv2pb.Role {",
          "63:  switch role {",
          "64:  case store.RoleHost:",
          "65:   return apiv2pb.Role_HOST",
          "66:  case store.RoleAdmin:",
          "67:   return apiv2pb.Role_ADMIN",
          "68:  case store.RoleUser:",
          "69:   return apiv2pb.Role_USER",
          "70:  default:",
          "71:   return apiv2pb.Role_ROLE_UNSPECIFIED",
          "72:  }",
          "73: }",
          "",
          "---------------"
        ],
        "api/v2/v2.go||api/v2/v2.go": [
          "File: api/v2/v2.go -> api/v2/v2.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package v2",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: import (",
          "4:  \"context\"",
          "5:  \"fmt\"",
          "7:  grpcRuntime \"github.com/grpc-ecosystem/grpc-gateway/v2/runtime\"",
          "8:  \"github.com/labstack/echo/v4\"",
          "9:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "10:  \"github.com/usememos/memos/store\"",
          "11:  \"google.golang.org/grpc\"",
          "12:  \"google.golang.org/grpc/credentials/insecure\"",
          "13: )",
          "15: func NewGRPCServer(store *store.Store) *grpc.Server {",
          "16:  grpcServer := grpc.NewServer()",
          "17:  apiv2pb.RegisterUserServiceServer(grpcServer, NewUserService(store))",
          "18:  apiv2pb.RegisterTagServiceServer(grpcServer, NewTagService(store))",
          "19:  return grpcServer",
          "20: }",
          "23: func RegisterGateway(ctx context.Context, e *echo.Echo, grpcServerPort int) error {",
          "26:  conn, err := grpc.DialContext(",
          "27:   ctx,",
          "28:   fmt.Sprintf(\":%d\", grpcServerPort),",
          "29:   grpc.WithTransportCredentials(insecure.NewCredentials()),",
          "30:  )",
          "31:  if err != nil {",
          "32:   return err",
          "33:  }",
          "35:  gwMux := grpcRuntime.NewServeMux()",
          "36:  if err := apiv2pb.RegisterUserServiceHandler(context.Background(), gwMux, conn); err != nil {",
          "37:   return err",
          "38:  }",
          "39:  if err := apiv2pb.RegisterTagServiceHandler(context.Background(), gwMux, conn); err != nil {",
          "40:   return err",
          "41:  }",
          "42:  e.Any(\"/api/v2/*\", echo.WrapHandler(gwMux))",
          "44:  return nil",
          "45: }",
          "",
          "---------------"
        ],
        "proto/api/v2/common.proto||proto/api/v2/common.proto": [
          "File: proto/api/v2/common.proto -> proto/api/v2/common.proto",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: syntax = \"proto3\";",
          "3: package memos.api.v2;",
          "5: option go_package = \"gen/api/v2\";",
          "7: enum RowStatus {",
          "8:   ROW_STATUS_UNSPECIFIED = 0;",
          "10:   ACTIVE = 1;",
          "12:   ARCHIVED = 2;",
          "13: }",
          "",
          "---------------"
        ],
        "proto/api/v2/user_service.proto||proto/api/v2/user_service.proto": [
          "File: proto/api/v2/user_service.proto -> proto/api/v2/user_service.proto",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: syntax = \"proto3\";",
          "3: package memos.api.v2;",
          "5: import \"api/v2/common.proto\";",
          "6: import \"google/api/annotations.proto\";",
          "7: import \"google/api/client.proto\";",
          "9: option go_package = \"gen/api/v2\";",
          "11: service UserService {",
          "12:   rpc GetUser(GetUserRequest) returns (GetUserResponse) {",
          "13:     option (google.api.http) = {get: \"/api/v2/users/{name}\"};",
          "14:     option (google.api.method_signature) = \"name\";",
          "15:   }",
          "16: }",
          "18: message User {",
          "19:   int32 id = 1;",
          "21:   RowStatus row_status = 2;",
          "23:   int64 created_ts = 3;",
          "25:   int64 updated_ts = 4;",
          "27:   string username = 5;",
          "29:   Role role = 6;",
          "31:   string email = 7;",
          "33:   string nickname = 8;",
          "35:   string open_id = 9;",
          "37:   string avatar_url = 10;",
          "38: }",
          "40: enum Role {",
          "41:   ROLE_UNSPECIFIED = 0;",
          "43:   HOST = 1;",
          "45:   ADMIN = 2;",
          "47:   USER = 3;",
          "48: }",
          "50: message GetUserRequest {",
          "51:   string name = 1;",
          "52: }",
          "54: message GetUserResponse {",
          "55:   User user = 1;",
          "56: }",
          "",
          "---------------"
        ],
        "proto/gen/api/v2/common.pb.go||proto/gen/api/v2/common.pb.go": [
          "File: proto/gen/api/v2/common.pb.go -> proto/gen/api/v2/common.pb.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: package apiv2",
          "9: import (",
          "10:  protoreflect \"google.golang.org/protobuf/reflect/protoreflect\"",
          "11:  protoimpl \"google.golang.org/protobuf/runtime/protoimpl\"",
          "12:  reflect \"reflect\"",
          "13:  sync \"sync\"",
          "14: )",
          "16: const (",
          "18:  _ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)",
          "20:  _ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)",
          "21: )",
          "23: type RowStatus int32",
          "25: const (",
          "26:  RowStatus_ROW_STATUS_UNSPECIFIED RowStatus = 0",
          "27:  RowStatus_ACTIVE                 RowStatus = 1",
          "28:  RowStatus_ARCHIVED               RowStatus = 2",
          "29: )",
          "32: var (",
          "33:  RowStatus_name = map[int32]string{",
          "34:   0: \"ROW_STATUS_UNSPECIFIED\",",
          "35:   1: \"ACTIVE\",",
          "36:   2: \"ARCHIVED\",",
          "37:  }",
          "38:  RowStatus_value = map[string]int32{",
          "39:   \"ROW_STATUS_UNSPECIFIED\": 0,",
          "40:   \"ACTIVE\":                 1,",
          "41:   \"ARCHIVED\":               2,",
          "42:  }",
          "43: )",
          "45: func (x RowStatus) Enum() *RowStatus {",
          "46:  p := new(RowStatus)",
          "48:  return p",
          "49: }",
          "51: func (x RowStatus) String() string {",
          "52:  return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))",
          "53: }",
          "55: func (RowStatus) Descriptor() protoreflect.EnumDescriptor {",
          "56:  return file_api_v2_common_proto_enumTypes[0].Descriptor()",
          "57: }",
          "59: func (RowStatus) Type() protoreflect.EnumType {",
          "60:  return &file_api_v2_common_proto_enumTypes[0]",
          "61: }",
          "63: func (x RowStatus) Number() protoreflect.EnumNumber {",
          "64:  return protoreflect.EnumNumber(x)",
          "65: }",
          "68: func (RowStatus) EnumDescriptor() ([]byte, []int) {",
          "69:  return file_api_v2_common_proto_rawDescGZIP(), []int{0}",
          "70: }",
          "72: var File_api_v2_common_proto protoreflect.FileDescriptor",
          "74: var file_api_v2_common_proto_rawDesc = []byte{",
          "75:  0x0a, 0x13, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,",
          "76:  0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69,",
          "77:  0x2e, 0x76, 0x32, 0x2a, 0x41, 0x0a, 0x09, 0x52, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,",
          "78:  0x12, 0x1a, 0x0a, 0x16, 0x52, 0x4f, 0x57, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55,",
          "79:  0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,",
          "80:  0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x52, 0x43, 0x48,",
          "81:  0x49, 0x56, 0x45, 0x44, 0x10, 0x02, 0x42, 0xa3, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,",
          "82:  0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x42, 0x0b, 0x43, 0x6f, 0x6d,",
          "83:  0x6d, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68,",
          "84:  0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x73, 0x65, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2f,",
          "85:  0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f,",
          "86:  0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x3b, 0x61, 0x70, 0x69, 0x76, 0x32, 0xa2, 0x02, 0x03, 0x4d,",
          "87:  0x41, 0x58, 0xaa, 0x02, 0x0c, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x56,",
          "88:  0x32, 0xca, 0x02, 0x0c, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x32,",
          "89:  0xe2, 0x02, 0x18, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x32, 0x5c,",
          "90:  0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x4d, 0x65,",
          "91:  0x6d, 0x6f, 0x73, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72,",
          "92:  0x6f, 0x74, 0x6f, 0x33,",
          "93: }",
          "95: var (",
          "96:  file_api_v2_common_proto_rawDescOnce sync.Once",
          "97:  file_api_v2_common_proto_rawDescData = file_api_v2_common_proto_rawDesc",
          "98: )",
          "100: func file_api_v2_common_proto_rawDescGZIP() []byte {",
          "101:  file_api_v2_common_proto_rawDescOnce.Do(func() {",
          "102:   file_api_v2_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v2_common_proto_rawDescData)",
          "103:  })",
          "104:  return file_api_v2_common_proto_rawDescData",
          "105: }",
          "107: var file_api_v2_common_proto_enumTypes = make([]protoimpl.EnumInfo, 1)",
          "108: var file_api_v2_common_proto_goTypes = []interface{}{",
          "109:  (RowStatus)(0), // 0: memos.api.v2.RowStatus",
          "110: }",
          "111: var file_api_v2_common_proto_depIdxs = []int32{",
          "112:  0, // [0:0] is the sub-list for method output_type",
          "113:  0, // [0:0] is the sub-list for method input_type",
          "114:  0, // [0:0] is the sub-list for extension type_name",
          "115:  0, // [0:0] is the sub-list for extension extendee",
          "116:  0, // [0:0] is the sub-list for field type_name",
          "117: }",
          "119: func init() { file_api_v2_common_proto_init() }",
          "120: func file_api_v2_common_proto_init() {",
          "121:  if File_api_v2_common_proto != nil {",
          "122:   return",
          "123:  }",
          "124:  type x struct{}",
          "125:  out := protoimpl.TypeBuilder{",
          "126:   File: protoimpl.DescBuilder{",
          "127:    GoPackagePath: reflect.TypeOf(x{}).PkgPath(),",
          "128:    RawDescriptor: file_api_v2_common_proto_rawDesc,",
          "129:    NumEnums:      1,",
          "130:    NumMessages:   0,",
          "131:    NumExtensions: 0,",
          "132:    NumServices:   0,",
          "133:   },",
          "134:   GoTypes:           file_api_v2_common_proto_goTypes,",
          "135:   DependencyIndexes: file_api_v2_common_proto_depIdxs,",
          "136:   EnumInfos:         file_api_v2_common_proto_enumTypes,",
          "137:  }.Build()",
          "138:  File_api_v2_common_proto = out.File",
          "139:  file_api_v2_common_proto_rawDesc = nil",
          "140:  file_api_v2_common_proto_goTypes = nil",
          "141:  file_api_v2_common_proto_depIdxs = nil",
          "142: }",
          "",
          "---------------"
        ],
        "proto/gen/api/v2/user_service.pb.go||proto/gen/api/v2/user_service.pb.go": [
          "File: proto/gen/api/v2/user_service.pb.go -> proto/gen/api/v2/user_service.pb.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: package apiv2",
          "9: import (",
          "10:  _ \"google.golang.org/genproto/googleapis/api/annotations\"",
          "11:  protoreflect \"google.golang.org/protobuf/reflect/protoreflect\"",
          "12:  protoimpl \"google.golang.org/protobuf/runtime/protoimpl\"",
          "13:  reflect \"reflect\"",
          "14:  sync \"sync\"",
          "15: )",
          "17: const (",
          "19:  _ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)",
          "21:  _ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)",
          "22: )",
          "24: type Role int32",
          "26: const (",
          "27:  Role_ROLE_UNSPECIFIED Role = 0",
          "28:  Role_HOST             Role = 1",
          "29:  Role_ADMIN            Role = 2",
          "30:  Role_USER             Role = 3",
          "31: )",
          "34: var (",
          "35:  Role_name = map[int32]string{",
          "36:   0: \"ROLE_UNSPECIFIED\",",
          "37:   1: \"HOST\",",
          "38:   2: \"ADMIN\",",
          "39:   3: \"USER\",",
          "40:  }",
          "41:  Role_value = map[string]int32{",
          "42:   \"ROLE_UNSPECIFIED\": 0,",
          "43:   \"HOST\":             1,",
          "44:   \"ADMIN\":            2,",
          "45:   \"USER\":             3,",
          "46:  }",
          "47: )",
          "49: func (x Role) Enum() *Role {",
          "50:  p := new(Role)",
          "52:  return p",
          "53: }",
          "55: func (x Role) String() string {",
          "56:  return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))",
          "57: }",
          "59: func (Role) Descriptor() protoreflect.EnumDescriptor {",
          "60:  return file_api_v2_user_service_proto_enumTypes[0].Descriptor()",
          "61: }",
          "63: func (Role) Type() protoreflect.EnumType {",
          "64:  return &file_api_v2_user_service_proto_enumTypes[0]",
          "65: }",
          "67: func (x Role) Number() protoreflect.EnumNumber {",
          "68:  return protoreflect.EnumNumber(x)",
          "69: }",
          "72: func (Role) EnumDescriptor() ([]byte, []int) {",
          "73:  return file_api_v2_user_service_proto_rawDescGZIP(), []int{0}",
          "74: }",
          "76: type User struct {",
          "77:  state         protoimpl.MessageState",
          "78:  sizeCache     protoimpl.SizeCache",
          "79:  unknownFields protoimpl.UnknownFields",
          "81:  Id        int32     `protobuf:\"varint,1,opt,name=id,proto3\" json:\"id,omitempty\"`",
          "82:  RowStatus RowStatus `protobuf:\"varint,2,opt,name=row_status,json=rowStatus,proto3,enum=memos.api.v2.RowStatus\" json:\"row_status,omitempty\"`",
          "83:  CreatedTs int64     `protobuf:\"varint,3,opt,name=created_ts,json=createdTs,proto3\" json:\"created_ts,omitempty\"`",
          "84:  UpdatedTs int64     `protobuf:\"varint,4,opt,name=updated_ts,json=updatedTs,proto3\" json:\"updated_ts,omitempty\"`",
          "85:  Username  string    `protobuf:\"bytes,5,opt,name=username,proto3\" json:\"username,omitempty\"`",
          "86:  Role      Role      `protobuf:\"varint,6,opt,name=role,proto3,enum=memos.api.v2.Role\" json:\"role,omitempty\"`",
          "87:  Email     string    `protobuf:\"bytes,7,opt,name=email,proto3\" json:\"email,omitempty\"`",
          "88:  Nickname  string    `protobuf:\"bytes,8,opt,name=nickname,proto3\" json:\"nickname,omitempty\"`",
          "89:  OpenId    string    `protobuf:\"bytes,9,opt,name=open_id,json=openId,proto3\" json:\"open_id,omitempty\"`",
          "90:  AvatarUrl string    `protobuf:\"bytes,10,opt,name=avatar_url,json=avatarUrl,proto3\" json:\"avatar_url,omitempty\"`",
          "91: }",
          "93: func (x *User) Reset() {",
          "95:  if protoimpl.UnsafeEnabled {",
          "96:   mi := &file_api_v2_user_service_proto_msgTypes[0]",
          "97:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "98:   ms.StoreMessageInfo(mi)",
          "99:  }",
          "100: }",
          "102: func (x *User) String() string {",
          "103:  return protoimpl.X.MessageStringOf(x)",
          "104: }",
          "106: func (*User) ProtoMessage() {}",
          "108: func (x *User) ProtoReflect() protoreflect.Message {",
          "109:  mi := &file_api_v2_user_service_proto_msgTypes[0]",
          "110:  if protoimpl.UnsafeEnabled && x != nil {",
          "111:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "112:   if ms.LoadMessageInfo() == nil {",
          "113:    ms.StoreMessageInfo(mi)",
          "114:   }",
          "115:   return ms",
          "116:  }",
          "117:  return mi.MessageOf(x)",
          "118: }",
          "121: func (*User) Descriptor() ([]byte, []int) {",
          "122:  return file_api_v2_user_service_proto_rawDescGZIP(), []int{0}",
          "123: }",
          "125: func (x *User) GetId() int32 {",
          "126:  if x != nil {",
          "127:   return x.Id",
          "128:  }",
          "129:  return 0",
          "130: }",
          "132: func (x *User) GetRowStatus() RowStatus {",
          "133:  if x != nil {",
          "134:   return x.RowStatus",
          "135:  }",
          "136:  return RowStatus_ROW_STATUS_UNSPECIFIED",
          "137: }",
          "139: func (x *User) GetCreatedTs() int64 {",
          "140:  if x != nil {",
          "141:   return x.CreatedTs",
          "142:  }",
          "143:  return 0",
          "144: }",
          "146: func (x *User) GetUpdatedTs() int64 {",
          "147:  if x != nil {",
          "148:   return x.UpdatedTs",
          "149:  }",
          "150:  return 0",
          "151: }",
          "153: func (x *User) GetUsername() string {",
          "154:  if x != nil {",
          "155:   return x.Username",
          "156:  }",
          "157:  return \"\"",
          "158: }",
          "160: func (x *User) GetRole() Role {",
          "161:  if x != nil {",
          "162:   return x.Role",
          "163:  }",
          "164:  return Role_ROLE_UNSPECIFIED",
          "165: }",
          "167: func (x *User) GetEmail() string {",
          "168:  if x != nil {",
          "169:   return x.Email",
          "170:  }",
          "171:  return \"\"",
          "172: }",
          "174: func (x *User) GetNickname() string {",
          "175:  if x != nil {",
          "176:   return x.Nickname",
          "177:  }",
          "178:  return \"\"",
          "179: }",
          "181: func (x *User) GetOpenId() string {",
          "182:  if x != nil {",
          "183:   return x.OpenId",
          "184:  }",
          "185:  return \"\"",
          "186: }",
          "188: func (x *User) GetAvatarUrl() string {",
          "189:  if x != nil {",
          "190:   return x.AvatarUrl",
          "191:  }",
          "192:  return \"\"",
          "193: }",
          "195: type GetUserRequest struct {",
          "196:  state         protoimpl.MessageState",
          "197:  sizeCache     protoimpl.SizeCache",
          "198:  unknownFields protoimpl.UnknownFields",
          "200:  Name string `protobuf:\"bytes,1,opt,name=name,proto3\" json:\"name,omitempty\"`",
          "201: }",
          "203: func (x *GetUserRequest) Reset() {",
          "205:  if protoimpl.UnsafeEnabled {",
          "206:   mi := &file_api_v2_user_service_proto_msgTypes[1]",
          "207:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "208:   ms.StoreMessageInfo(mi)",
          "209:  }",
          "210: }",
          "212: func (x *GetUserRequest) String() string {",
          "213:  return protoimpl.X.MessageStringOf(x)",
          "214: }",
          "216: func (*GetUserRequest) ProtoMessage() {}",
          "218: func (x *GetUserRequest) ProtoReflect() protoreflect.Message {",
          "219:  mi := &file_api_v2_user_service_proto_msgTypes[1]",
          "220:  if protoimpl.UnsafeEnabled && x != nil {",
          "221:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "222:   if ms.LoadMessageInfo() == nil {",
          "223:    ms.StoreMessageInfo(mi)",
          "224:   }",
          "225:   return ms",
          "226:  }",
          "227:  return mi.MessageOf(x)",
          "228: }",
          "231: func (*GetUserRequest) Descriptor() ([]byte, []int) {",
          "232:  return file_api_v2_user_service_proto_rawDescGZIP(), []int{1}",
          "233: }",
          "235: func (x *GetUserRequest) GetName() string {",
          "236:  if x != nil {",
          "237:   return x.Name",
          "238:  }",
          "239:  return \"\"",
          "240: }",
          "242: type GetUserResponse struct {",
          "243:  state         protoimpl.MessageState",
          "244:  sizeCache     protoimpl.SizeCache",
          "245:  unknownFields protoimpl.UnknownFields",
          "247:  User *User `protobuf:\"bytes,1,opt,name=user,proto3\" json:\"user,omitempty\"`",
          "248: }",
          "250: func (x *GetUserResponse) Reset() {",
          "252:  if protoimpl.UnsafeEnabled {",
          "253:   mi := &file_api_v2_user_service_proto_msgTypes[2]",
          "254:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "255:   ms.StoreMessageInfo(mi)",
          "256:  }",
          "257: }",
          "259: func (x *GetUserResponse) String() string {",
          "260:  return protoimpl.X.MessageStringOf(x)",
          "261: }",
          "263: func (*GetUserResponse) ProtoMessage() {}",
          "265: func (x *GetUserResponse) ProtoReflect() protoreflect.Message {",
          "266:  mi := &file_api_v2_user_service_proto_msgTypes[2]",
          "267:  if protoimpl.UnsafeEnabled && x != nil {",
          "268:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "269:   if ms.LoadMessageInfo() == nil {",
          "270:    ms.StoreMessageInfo(mi)",
          "271:   }",
          "272:   return ms",
          "273:  }",
          "274:  return mi.MessageOf(x)",
          "275: }",
          "278: func (*GetUserResponse) Descriptor() ([]byte, []int) {",
          "279:  return file_api_v2_user_service_proto_rawDescGZIP(), []int{2}",
          "280: }",
          "282: func (x *GetUserResponse) GetUser() *User {",
          "283:  if x != nil {",
          "284:   return x.User",
          "285:  }",
          "286:  return nil",
          "287: }",
          "289: var File_api_v2_user_service_proto protoreflect.FileDescriptor",
          "291: var file_api_v2_user_service_proto_rawDesc = []byte{",
          "292:  0x0a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65,",
          "293:  0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6d, 0x65, 0x6d,",
          "294:  0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x1a, 0x13, 0x61, 0x70, 0x69, 0x2f, 0x76,",
          "295:  0x32, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,",
          "296:  0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,",
          "297:  0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f,",
          "298:  0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,",
          "299:  0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xba, 0x02, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e,",
          "300:  0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36,",
          "301:  0x0a, 0x0a, 0x72, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,",
          "302:  0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,",
          "303:  0x32, 0x2e, 0x52, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x72, 0x6f, 0x77,",
          "304:  0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,",
          "305:  0x64, 0x5f, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,",
          "306:  0x74, 0x65, 0x64, 0x54, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,",
          "307:  0x5f, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,",
          "308:  0x65, 0x64, 0x54, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,",
          "309:  0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,",
          "310:  0x12, 0x26, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,",
          "311:  0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x6f,",
          "312:  0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,",
          "313:  0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a,",
          "314:  0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,",
          "315:  0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70,",
          "316:  0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65,",
          "317:  0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72,",
          "318:  0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55,",
          "319:  0x72, 0x6c, 0x22, 0x24, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,",
          "320:  0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,",
          "321:  0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55,",
          "322:  0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x75,",
          "323:  0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x6d, 0x6f,",
          "324:  0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75,",
          "325:  0x73, 0x65, 0x72, 0x2a, 0x3b, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x52,",
          "326:  0x4f, 0x4c, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,",
          "327:  0x00, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x4f, 0x53, 0x54, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x41,",
          "328:  0x44, 0x4d, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0x03,",
          "329:  0x32, 0x7a, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,",
          "330:  0x6b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x6d, 0x65, 0x6d,",
          "331:  0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,",
          "332:  0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73,",
          "333:  0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,",
          "334:  0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0xda, 0x41, 0x04, 0x6e, 0x61, 0x6d, 0x65,",
          "335:  0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f,",
          "336:  0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x42, 0xa8, 0x01, 0x0a,",
          "337:  0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,",
          "338:  0x32, 0x42, 0x10, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72,",
          "339:  0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,",
          "340:  0x6d, 0x2f, 0x75, 0x73, 0x65, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2f, 0x6d, 0x65, 0x6d, 0x6f, 0x73,",
          "341:  0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,",
          "342:  0x32, 0x3b, 0x61, 0x70, 0x69, 0x76, 0x32, 0xa2, 0x02, 0x03, 0x4d, 0x41, 0x58, 0xaa, 0x02, 0x0c,",
          "343:  0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x0c, 0x4d,",
          "344:  0x65, 0x6d, 0x6f, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x18, 0x4d, 0x65,",
          "345:  0x6d, 0x6f, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,",
          "346:  0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x3a, 0x3a,",
          "347:  0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,",
          "348: }",
          "350: var (",
          "351:  file_api_v2_user_service_proto_rawDescOnce sync.Once",
          "352:  file_api_v2_user_service_proto_rawDescData = file_api_v2_user_service_proto_rawDesc",
          "353: )",
          "355: func file_api_v2_user_service_proto_rawDescGZIP() []byte {",
          "356:  file_api_v2_user_service_proto_rawDescOnce.Do(func() {",
          "357:   file_api_v2_user_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v2_user_service_proto_rawDescData)",
          "358:  })",
          "359:  return file_api_v2_user_service_proto_rawDescData",
          "360: }",
          "362: var file_api_v2_user_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)",
          "363: var file_api_v2_user_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)",
          "364: var file_api_v2_user_service_proto_goTypes = []interface{}{",
          "365:  (Role)(0),               // 0: memos.api.v2.Role",
          "366:  (*User)(nil),            // 1: memos.api.v2.User",
          "367:  (*GetUserRequest)(nil),  // 2: memos.api.v2.GetUserRequest",
          "368:  (*GetUserResponse)(nil), // 3: memos.api.v2.GetUserResponse",
          "369:  (RowStatus)(0),          // 4: memos.api.v2.RowStatus",
          "370: }",
          "371: var file_api_v2_user_service_proto_depIdxs = []int32{",
          "372:  4, // 0: memos.api.v2.User.row_status:type_name -> memos.api.v2.RowStatus",
          "373:  0, // 1: memos.api.v2.User.role:type_name -> memos.api.v2.Role",
          "374:  1, // 2: memos.api.v2.GetUserResponse.user:type_name -> memos.api.v2.User",
          "375:  2, // 3: memos.api.v2.UserService.GetUser:input_type -> memos.api.v2.GetUserRequest",
          "376:  3, // 4: memos.api.v2.UserService.GetUser:output_type -> memos.api.v2.GetUserResponse",
          "377:  4, // [4:5] is the sub-list for method output_type",
          "378:  3, // [3:4] is the sub-list for method input_type",
          "379:  3, // [3:3] is the sub-list for extension type_name",
          "380:  3, // [3:3] is the sub-list for extension extendee",
          "381:  0, // [0:3] is the sub-list for field type_name",
          "382: }",
          "384: func init() { file_api_v2_user_service_proto_init() }",
          "385: func file_api_v2_user_service_proto_init() {",
          "386:  if File_api_v2_user_service_proto != nil {",
          "387:   return",
          "388:  }",
          "389:  file_api_v2_common_proto_init()",
          "390:  if !protoimpl.UnsafeEnabled {",
          "391:   file_api_v2_user_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {",
          "392:    switch v := v.(*User); i {",
          "393:    case 0:",
          "394:     return &v.state",
          "395:    case 1:",
          "396:     return &v.sizeCache",
          "397:    case 2:",
          "398:     return &v.unknownFields",
          "399:    default:",
          "400:     return nil",
          "401:    }",
          "402:   }",
          "403:   file_api_v2_user_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {",
          "404:    switch v := v.(*GetUserRequest); i {",
          "405:    case 0:",
          "406:     return &v.state",
          "407:    case 1:",
          "408:     return &v.sizeCache",
          "409:    case 2:",
          "410:     return &v.unknownFields",
          "411:    default:",
          "412:     return nil",
          "413:    }",
          "414:   }",
          "415:   file_api_v2_user_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {",
          "416:    switch v := v.(*GetUserResponse); i {",
          "417:    case 0:",
          "418:     return &v.state",
          "419:    case 1:",
          "420:     return &v.sizeCache",
          "421:    case 2:",
          "422:     return &v.unknownFields",
          "423:    default:",
          "424:     return nil",
          "425:    }",
          "426:   }",
          "427:  }",
          "428:  type x struct{}",
          "429:  out := protoimpl.TypeBuilder{",
          "430:   File: protoimpl.DescBuilder{",
          "431:    GoPackagePath: reflect.TypeOf(x{}).PkgPath(),",
          "432:    RawDescriptor: file_api_v2_user_service_proto_rawDesc,",
          "433:    NumEnums:      1,",
          "434:    NumMessages:   3,",
          "435:    NumExtensions: 0,",
          "436:    NumServices:   1,",
          "437:   },",
          "438:   GoTypes:           file_api_v2_user_service_proto_goTypes,",
          "439:   DependencyIndexes: file_api_v2_user_service_proto_depIdxs,",
          "440:   EnumInfos:         file_api_v2_user_service_proto_enumTypes,",
          "441:   MessageInfos:      file_api_v2_user_service_proto_msgTypes,",
          "442:  }.Build()",
          "443:  File_api_v2_user_service_proto = out.File",
          "444:  file_api_v2_user_service_proto_rawDesc = nil",
          "445:  file_api_v2_user_service_proto_goTypes = nil",
          "446:  file_api_v2_user_service_proto_depIdxs = nil",
          "447: }",
          "",
          "---------------"
        ],
        "proto/gen/api/v2/user_service.pb.gw.go||proto/gen/api/v2/user_service.pb.gw.go": [
          "File: proto/gen/api/v2/user_service.pb.gw.go -> proto/gen/api/v2/user_service.pb.gw.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: Package apiv2 is a reverse proxy.",
          "7: It translates gRPC into RESTful JSON APIs.",
          "9: package apiv2",
          "11: import (",
          "12:  \"context\"",
          "13:  \"io\"",
          "14:  \"net/http\"",
          "16:  \"github.com/grpc-ecosystem/grpc-gateway/v2/runtime\"",
          "17:  \"github.com/grpc-ecosystem/grpc-gateway/v2/utilities\"",
          "18:  \"google.golang.org/grpc\"",
          "19:  \"google.golang.org/grpc/codes\"",
          "20:  \"google.golang.org/grpc/grpclog\"",
          "21:  \"google.golang.org/grpc/metadata\"",
          "22:  \"google.golang.org/grpc/status\"",
          "23:  \"google.golang.org/protobuf/proto\"",
          "24: )",
          "27: var _ codes.Code",
          "28: var _ io.Reader",
          "29: var _ status.Status",
          "30: var _ = runtime.String",
          "31: var _ = utilities.NewDoubleArray",
          "32: var _ = metadata.Join",
          "34: func request_UserService_GetUser_0(ctx context.Context, marshaler runtime.Marshaler, client UserServiceClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "35:  var protoReq GetUserRequest",
          "36:  var metadata runtime.ServerMetadata",
          "38:  var (",
          "39:   val string",
          "40:   ok  bool",
          "41:   err error",
          "42:   _   = err",
          "43:  )",
          "45:  val, ok = pathParams[\"name\"]",
          "46:  if !ok {",
          "47:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"name\")",
          "48:  }",
          "50:  protoReq.Name, err = runtime.String(val)",
          "51:  if err != nil {",
          "52:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"name\", err)",
          "53:  }",
          "55:  msg, err := client.GetUser(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))",
          "56:  return msg, metadata, err",
          "58: }",
          "60: func local_request_UserService_GetUser_0(ctx context.Context, marshaler runtime.Marshaler, server UserServiceServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "61:  var protoReq GetUserRequest",
          "62:  var metadata runtime.ServerMetadata",
          "64:  var (",
          "65:   val string",
          "66:   ok  bool",
          "67:   err error",
          "68:   _   = err",
          "69:  )",
          "71:  val, ok = pathParams[\"name\"]",
          "72:  if !ok {",
          "73:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"name\")",
          "74:  }",
          "76:  protoReq.Name, err = runtime.String(val)",
          "77:  if err != nil {",
          "78:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"name\", err)",
          "79:  }",
          "81:  msg, err := server.GetUser(ctx, &protoReq)",
          "82:  return msg, metadata, err",
          "84: }",
          "90: func RegisterUserServiceHandlerServer(ctx context.Context, mux *runtime.ServeMux, server UserServiceServer) error {",
          "92:  mux.Handle(\"GET\", pattern_UserService_GetUser_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "93:   ctx, cancel := context.WithCancel(req.Context())",
          "94:   defer cancel()",
          "95:   var stream runtime.ServerTransportStream",
          "96:   ctx = grpc.NewContextWithServerTransportStream(ctx, &stream)",
          "97:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "98:   var err error",
          "99:   var annotatedContext context.Context",
          "100:   annotatedContext, err = runtime.AnnotateIncomingContext(ctx, mux, req, \"/memos.api.v2.UserService/GetUser\", runtime.WithHTTPPathPattern(\"/api/v2/users/{name}\"))",
          "101:   if err != nil {",
          "102:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "103:    return",
          "104:   }",
          "105:   resp, md, err := local_request_UserService_GetUser_0(annotatedContext, inboundMarshaler, server, req, pathParams)",
          "106:   md.HeaderMD, md.TrailerMD = metadata.Join(md.HeaderMD, stream.Header()), metadata.Join(md.TrailerMD, stream.Trailer())",
          "107:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "108:   if err != nil {",
          "109:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "110:    return",
          "111:   }",
          "113:   forward_UserService_GetUser_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "115:  })",
          "117:  return nil",
          "118: }",
          "122: func RegisterUserServiceHandlerFromEndpoint(ctx context.Context, mux *runtime.ServeMux, endpoint string, opts []grpc.DialOption) (err error) {",
          "123:  conn, err := grpc.DialContext(ctx, endpoint, opts...)",
          "124:  if err != nil {",
          "125:   return err",
          "126:  }",
          "127:  defer func() {",
          "128:   if err != nil {",
          "129:    if cerr := conn.Close(); cerr != nil {",
          "130:     grpclog.Infof(\"Failed to close conn to %s: %v\", endpoint, cerr)",
          "131:    }",
          "132:    return",
          "133:   }",
          "134:   go func() {",
          "135:    <-ctx.Done()",
          "136:    if cerr := conn.Close(); cerr != nil {",
          "137:     grpclog.Infof(\"Failed to close conn to %s: %v\", endpoint, cerr)",
          "138:    }",
          "139:   }()",
          "140:  }()",
          "142:  return RegisterUserServiceHandler(ctx, mux, conn)",
          "143: }",
          "147: func RegisterUserServiceHandler(ctx context.Context, mux *runtime.ServeMux, conn *grpc.ClientConn) error {",
          "148:  return RegisterUserServiceHandlerClient(ctx, mux, NewUserServiceClient(conn))",
          "149: }",
          "156: func RegisterUserServiceHandlerClient(ctx context.Context, mux *runtime.ServeMux, client UserServiceClient) error {",
          "158:  mux.Handle(\"GET\", pattern_UserService_GetUser_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "159:   ctx, cancel := context.WithCancel(req.Context())",
          "160:   defer cancel()",
          "161:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "162:   var err error",
          "163:   var annotatedContext context.Context",
          "164:   annotatedContext, err = runtime.AnnotateContext(ctx, mux, req, \"/memos.api.v2.UserService/GetUser\", runtime.WithHTTPPathPattern(\"/api/v2/users/{name}\"))",
          "165:   if err != nil {",
          "166:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "167:    return",
          "168:   }",
          "169:   resp, md, err := request_UserService_GetUser_0(annotatedContext, inboundMarshaler, client, req, pathParams)",
          "170:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "171:   if err != nil {",
          "172:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "173:    return",
          "174:   }",
          "176:   forward_UserService_GetUser_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "178:  })",
          "180:  return nil",
          "181: }",
          "183: var (",
          "184:  pattern_UserService_GetUser_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 1, 0, 4, 1, 5, 3}, []string{\"api\", \"v2\", \"users\", \"name\"}, \"\"))",
          "185: )",
          "187: var (",
          "188:  forward_UserService_GetUser_0 = runtime.ForwardResponseMessage",
          "189: )",
          "",
          "---------------"
        ],
        "proto/gen/api/v2/user_service_grpc.pb.go||proto/gen/api/v2/user_service_grpc.pb.go": [
          "File: proto/gen/api/v2/user_service_grpc.pb.go -> proto/gen/api/v2/user_service_grpc.pb.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: package apiv2",
          "9: import (",
          "10:  context \"context\"",
          "11:  grpc \"google.golang.org/grpc\"",
          "12:  codes \"google.golang.org/grpc/codes\"",
          "13:  status \"google.golang.org/grpc/status\"",
          "14: )",
          "19: const _ = grpc.SupportPackageIsVersion7",
          "21: const (",
          "22:  UserService_GetUser_FullMethodName = \"/memos.api.v2.UserService/GetUser\"",
          "23: )",
          "28: type UserServiceClient interface {",
          "29:  GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error)",
          "30: }",
          "32: type userServiceClient struct {",
          "33:  cc grpc.ClientConnInterface",
          "34: }",
          "36: func NewUserServiceClient(cc grpc.ClientConnInterface) UserServiceClient {",
          "37:  return &userServiceClient{cc}",
          "38: }",
          "40: func (c *userServiceClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error) {",
          "41:  out := new(GetUserResponse)",
          "42:  err := c.cc.Invoke(ctx, UserService_GetUser_FullMethodName, in, out, opts...)",
          "43:  if err != nil {",
          "44:   return nil, err",
          "45:  }",
          "46:  return out, nil",
          "47: }",
          "52: type UserServiceServer interface {",
          "53:  GetUser(context.Context, *GetUserRequest) (*GetUserResponse, error)",
          "54:  mustEmbedUnimplementedUserServiceServer()",
          "55: }",
          "58: type UnimplementedUserServiceServer struct {",
          "59: }",
          "61: func (UnimplementedUserServiceServer) GetUser(context.Context, *GetUserRequest) (*GetUserResponse, error) {",
          "62:  return nil, status.Errorf(codes.Unimplemented, \"method GetUser not implemented\")",
          "63: }",
          "64: func (UnimplementedUserServiceServer) mustEmbedUnimplementedUserServiceServer() {}",
          "69: type UnsafeUserServiceServer interface {",
          "70:  mustEmbedUnimplementedUserServiceServer()",
          "71: }",
          "73: func RegisterUserServiceServer(s grpc.ServiceRegistrar, srv UserServiceServer) {",
          "74:  s.RegisterService(&UserService_ServiceDesc, srv)",
          "75: }",
          "77: func _UserService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {",
          "78:  in := new(GetUserRequest)",
          "79:  if err := dec(in); err != nil {",
          "80:   return nil, err",
          "81:  }",
          "82:  if interceptor == nil {",
          "83:   return srv.(UserServiceServer).GetUser(ctx, in)",
          "84:  }",
          "85:  info := &grpc.UnaryServerInfo{",
          "86:   Server:     srv,",
          "87:   FullMethod: UserService_GetUser_FullMethodName,",
          "88:  }",
          "89:  handler := func(ctx context.Context, req interface{}) (interface{}, error) {",
          "90:   return srv.(UserServiceServer).GetUser(ctx, req.(*GetUserRequest))",
          "91:  }",
          "92:  return interceptor(ctx, in, info, handler)",
          "93: }",
          "98: var UserService_ServiceDesc = grpc.ServiceDesc{",
          "99:  ServiceName: \"memos.api.v2.UserService\",",
          "100:  HandlerType: (*UserServiceServer)(nil),",
          "101:  Methods: []grpc.MethodDesc{",
          "102:   {",
          "103:    MethodName: \"GetUser\",",
          "104:    Handler:    _UserService_GetUser_Handler,",
          "105:   },",
          "106:  },",
          "107:  Streams:  []grpc.StreamDesc{},",
          "108:  Metadata: \"api/v2/user_service.proto\",",
          "109: }",
          "",
          "---------------"
        ],
        "proto/gen/store/tag.pb.go||proto/gen/store/tag.pb.go": [
          "File: proto/gen/store/tag.pb.go -> proto/gen/store/tag.pb.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "proto/store/tag.proto||proto/store/tag.proto": [
          "File: proto/store/tag.proto -> proto/store/tag.proto",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "server/server.go||server/server.go": [
          "File: server/server.go -> server/server.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "17:  \"github.com/usememos/memos/common/log\"",
          "18:  \"github.com/usememos/memos/common/util\"",
          "19:  \"github.com/usememos/memos/plugin/telegram\"",
          "21:  \"github.com/usememos/memos/server/profile\"",
          "22:  \"github.com/usememos/memos/store\"",
          "23:  \"go.uber.org/zap\"",
          "",
          "[Removed Lines]",
          "20:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "101:  apiV1Service.Register(rootGroup)",
          "110:  return s, nil",
          "111: }",
          "",
          "[Removed Lines]",
          "104:  s.grpcServer = grpc.NewServer()",
          "105:  apiv2pb.RegisterTagServiceServer(s.grpcServer, apiv2.NewTagService(store))",
          "108:  apiv2.RegisterGateway(ctx, e, s.Profile.Port+1)",
          "",
          "[Added Lines]",
          "103:  s.grpcServer = apiv2.NewGRPCServer(store)",
          "106:  if err := apiv2.RegisterGateway(ctx, e, s.Profile.Port+1); err != nil {",
          "107:   return nil, fmt.Errorf(\"failed to register gRPC gateway: %w\", err)",
          "108:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dfa78cac49a8cac6d83cfd58b2f645e810dcb924",
      "candidate_info": {
        "commit_hash": "dfa78cac49a8cac6d83cfd58b2f645e810dcb924",
        "repo": "usememos/memos",
        "commit_url": "https://github.com/usememos/memos/commit/dfa78cac49a8cac6d83cfd58b2f645e810dcb924",
        "files": [
          "bin/memos/main.go",
          "internal/jobs/presign_link.go",
          "internal/log/logger.go",
          "plugin/telegram/attachment.go",
          "plugin/telegram/bot.go",
          "server/route/api/v1/jwt.go",
          "server/route/api/v1/memo.go",
          "server/route/api/v1/resource.go",
          "server/route/api/v2/logger_interceptor.go",
          "server/route/api/v2/memo_service.go",
          "server/route/api/v2/v2.go",
          "server/route/resource/resource.go",
          "server/server.go",
          "store/db/mysql/mysql.go"
        ],
        "message": "chore: update logger",
        "before_after_code_files": [
          "bin/memos/main.go||bin/memos/main.go",
          "internal/jobs/presign_link.go||internal/jobs/presign_link.go",
          "internal/log/logger.go||internal/log/logger.go",
          "plugin/telegram/attachment.go||plugin/telegram/attachment.go",
          "plugin/telegram/bot.go||plugin/telegram/bot.go",
          "server/route/api/v1/jwt.go||server/route/api/v1/jwt.go",
          "server/route/api/v1/memo.go||server/route/api/v1/memo.go",
          "server/route/api/v1/resource.go||server/route/api/v1/resource.go",
          "server/route/api/v2/logger_interceptor.go||server/route/api/v2/logger_interceptor.go",
          "server/route/api/v2/memo_service.go||server/route/api/v2/memo_service.go",
          "server/route/api/v2/v2.go||server/route/api/v2/v2.go",
          "server/route/resource/resource.go||server/route/resource/resource.go",
          "server/server.go||server/server.go",
          "store/db/mysql/mysql.go||store/db/mysql/mysql.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "internal/jobs/presign_link.go||internal/jobs/presign_link.go",
            "server/route/api/v1/jwt.go||server/route/api/v1/jwt.go",
            "server/route/api/v1/memo.go||server/route/api/v1/memo.go",
            "server/route/api/v1/resource.go||server/route/api/v1/resource.go",
            "server/server.go||server/server.go"
          ],
          "candidate": [
            "internal/jobs/presign_link.go||internal/jobs/presign_link.go",
            "server/route/api/v1/jwt.go||server/route/api/v1/jwt.go",
            "server/route/api/v1/memo.go||server/route/api/v1/memo.go",
            "server/route/api/v1/resource.go||server/route/api/v1/resource.go",
            "server/server.go||server/server.go"
          ]
        }
      },
      "candidate_diff": {
        "bin/memos/main.go||bin/memos/main.go": [
          "File: bin/memos/main.go -> bin/memos/main.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"context\"",
          "5:  \"fmt\"",
          "6:  \"net/http\"",
          "7:  \"os\"",
          "8:  \"os/signal\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6:  \"log/slog\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11:  \"github.com/spf13/cobra\"",
          "12:  \"github.com/spf13/viper\"",
          "15:  \"github.com/usememos/memos/internal/jobs\"",
          "17:  \"github.com/usememos/memos/server\"",
          "18:  _profile \"github.com/usememos/memos/server/profile\"",
          "19:  \"github.com/usememos/memos/store\"",
          "",
          "[Removed Lines]",
          "13:  \"go.uber.org/zap\"",
          "16:  \"github.com/usememos/memos/internal/log\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "49:    dbDriver, err := db.NewDBDriver(profile)",
          "50:    if err != nil {",
          "51:     cancel()",
          "53:     return",
          "54:    }",
          "55:    if err := dbDriver.Migrate(ctx); err != nil {",
          "56:     cancel()",
          "58:     return",
          "59:    }",
          "61:    storeInstance := store.New(dbDriver, profile)",
          "62:    if err := storeInstance.MigrateManually(ctx); err != nil {",
          "63:     cancel()",
          "65:     return",
          "66:    }",
          "68:    s, err := server.NewServer(ctx, profile, storeInstance)",
          "69:    if err != nil {",
          "70:     cancel()",
          "72:     return",
          "73:    }",
          "",
          "[Removed Lines]",
          "52:     log.Error(\"failed to create db driver\", zap.Error(err))",
          "57:     log.Error(\"failed to migrate db\", zap.Error(err))",
          "64:     log.Error(\"failed to migrate manually\", zap.Error(err))",
          "71:     log.Error(\"failed to create server\", zap.Error(err))",
          "",
          "[Added Lines]",
          "51:     slog.Error(\"failed to create db driver\", err)",
          "56:     slog.Error(\"failed to migrate database\", err)",
          "63:     slog.Error(\"failed to migrate manually\", err)",
          "70:     slog.Error(\"failed to create server\", err)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "79:    signal.Notify(c, os.Interrupt, syscall.SIGTERM)",
          "80:    go func() {",
          "83:     s.Shutdown(ctx)",
          "84:     cancel()",
          "85:    }()",
          "",
          "[Removed Lines]",
          "81:     sig := <-c",
          "82:     log.Info(fmt.Sprintf(\"%s received.\\n\", sig.String()))",
          "",
          "[Added Lines]",
          "80:     <-c",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "92:    if err := s.Start(ctx); err != nil {",
          "93:     if err != http.ErrServerClosed {",
          "95:      cancel()",
          "96:     }",
          "97:    }",
          "",
          "[Removed Lines]",
          "94:      log.Error(\"failed to start server\", zap.Error(err))",
          "",
          "[Added Lines]",
          "92:      slog.Error(\"failed to start server\", err)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "103: )",
          "105: func Execute() error {",
          "107:  return rootCmd.Execute()",
          "108: }",
          "",
          "[Removed Lines]",
          "106:  defer log.Sync()",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "internal/jobs/presign_link.go||internal/jobs/presign_link.go": [
          "File: internal/jobs/presign_link.go -> internal/jobs/presign_link.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"context\"",
          "5:  \"encoding/json\"",
          "6:  \"strings\"",
          "7:  \"time\"",
          "9:  \"github.com/pkg/errors\"",
          "13:  \"github.com/usememos/memos/plugin/storage/s3\"",
          "14:  apiv1 \"github.com/usememos/memos/server/route/api/v1\"",
          "15:  \"github.com/usememos/memos/store\"",
          "",
          "[Removed Lines]",
          "10:  \"go.uber.org/zap\"",
          "12:  \"github.com/usememos/memos/internal/log\"",
          "",
          "[Added Lines]",
          "6:  \"log/slog\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "20: func RunPreSignLinks(ctx context.Context, dataStore *store.Store) {",
          "21:  for {",
          "23:   if err := signExternalLinks(ctx, dataStore); err != nil {",
          "25:   } else {",
          "27:   }",
          "28:   select {",
          "29:   case <-time.After(s3.LinkLifetime / 2):",
          "",
          "[Removed Lines]",
          "22:   started := time.Now()",
          "24:    log.Warn(\"failed sign external links\", zap.Error(err))",
          "26:    log.Info(\"links pre-signed\", zap.Duration(\"duration\", time.Since(started)))",
          "",
          "[Added Lines]",
          "22:    slog.Error(\"failed to pre-sign links\", err)",
          "24:    slog.Debug(\"pre-signed links\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "69:    }",
          "70:    newLink, err := objectStore.PreSignLink(ctx, res.ExternalLink)",
          "71:    if err != nil {",
          "73:     continue // do not fail - we may want update left over links too",
          "74:    }",
          "75:    now := time.Now().Unix()",
          "",
          "[Removed Lines]",
          "72:     log.Warn(\"failed pre-sign link\", zap.Int32(\"resource\", res.ID), zap.String(\"link\", res.ExternalLink), zap.Error(err))",
          "",
          "[Added Lines]",
          "70:     slog.Error(\"failed to pre-sign link\", err)",
          "",
          "---------------"
        ],
        "internal/log/logger.go||internal/log/logger.go": [
          "File: internal/log/logger.go -> internal/log/logger.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "plugin/telegram/attachment.go||plugin/telegram/attachment.go": [
          "File: plugin/telegram/attachment.go -> plugin/telegram/attachment.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package telegram",
          "3: import (",
          "4:  \"path/filepath\"",
          "9: )",
          "11: type Attachment struct {",
          "",
          "[Removed Lines]",
          "6:  \"go.uber.org/zap\"",
          "8:  \"github.com/usememos/memos/internal/log\"",
          "",
          "[Added Lines]",
          "4:  \"log/slog\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30:  mime, ok := mimeTypes[filepath.Ext(b.FileName)]",
          "31:  if !ok {",
          "35:   return \"application/octet-stream\"",
          "36:  }",
          "",
          "[Removed Lines]",
          "33:   log.Warn(\"Unknown file type for \", zap.String(\"filename\", b.FileName))",
          "",
          "[Added Lines]",
          "29:   slog.Warn(\"Unknown file extension\", slog.String(\"file\", b.FileName))",
          "",
          "---------------"
        ],
        "plugin/telegram/bot.go||plugin/telegram/bot.go": [
          "File: plugin/telegram/bot.go -> plugin/telegram/bot.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"context\"",
          "5:  \"errors\"",
          "7:  \"strings\"",
          "8:  \"time\"",
          "13: )",
          "15: type Handler interface {",
          "",
          "[Removed Lines]",
          "6:  \"fmt\"",
          "10:  \"go.uber.org/zap\"",
          "12:  \"github.com/usememos/memos/internal/log\"",
          "",
          "[Added Lines]",
          "6:  \"log/slog\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41:    continue",
          "42:   }",
          "43:   if err != nil {",
          "45:    time.Sleep(errRetryWait)",
          "46:    continue",
          "47:   }",
          "",
          "[Removed Lines]",
          "44:    log.Warn(\"fail to telegram.GetUpdates\", zap.Error(err))",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "56:    if update.CallbackQuery != nil {",
          "57:     err := b.handler.CallbackQueryHandle(ctx, b, *update.CallbackQuery)",
          "58:     if err != nil {",
          "60:     }",
          "62:     continue",
          "",
          "[Removed Lines]",
          "59:      log.Error(\"fail to handle CallbackQuery\", zap.Error(err))",
          "",
          "[Added Lines]",
          "54:      slog.Error(\"fail to handle callback query\", err)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "70:     if !message.IsSupported() {",
          "71:      _, err := b.SendReplyMessage(ctx, message.Chat.ID, message.MessageID, \"Supported messages: animation, audio, text, document, photo, video, video note, voice, other messages with caption\")",
          "72:      if err != nil {",
          "74:      }",
          "75:      continue",
          "76:     }",
          "",
          "[Removed Lines]",
          "73:       log.Error(fmt.Sprintf(\"fail to telegram.SendReplyMessage for messageID=%d\", message.MessageID), zap.Error(err))",
          "",
          "[Added Lines]",
          "68:       slog.Error(\"fail to send reply message\", err)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "89:   err = b.handleSingleMessages(ctx, singleMessages)",
          "90:   if err != nil {",
          "92:   }",
          "94:   err = b.handleGroupMessages(ctx, groupMessages)",
          "95:   if err != nil {",
          "97:   }",
          "98:  }",
          "99: }",
          "",
          "[Removed Lines]",
          "91:    log.Error(\"fail to handle singleMessage\", zap.Error(err))",
          "96:    log.Error(\"fail to handle plain text message\", zap.Error(err))",
          "",
          "[Added Lines]",
          "86:    slog.Error(\"fail to handle plain text message\", err)",
          "91:    slog.Error(\"fail to handle media group message\", err)",
          "",
          "---------------"
        ],
        "server/route/api/v1/jwt.go||server/route/api/v1/jwt.go": [
          "File: server/route/api/v1/jwt.go -> server/route/api/v1/jwt.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"fmt\"",
          "5:  \"net/http\"",
          "6:  \"strings\"",
          "8:  \"github.com/golang-jwt/jwt/v5\"",
          "9:  \"github.com/labstack/echo/v4\"",
          "10:  \"github.com/pkg/errors\"",
          "14:  \"github.com/usememos/memos/internal/util\"",
          "15:  storepb \"github.com/usememos/memos/proto/gen/store\"",
          "16:  \"github.com/usememos/memos/server/route/api/auth\"",
          "",
          "[Removed Lines]",
          "11:  \"go.uber.org/zap\"",
          "13:  \"github.com/usememos/memos/internal/log\"",
          "",
          "[Added Lines]",
          "5:  \"log/slog\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "83:   if err != nil {",
          "84:    err = removeAccessTokenAndCookies(c, server.Store, userID, accessToken)",
          "85:    if err != nil {",
          "87:    }",
          "88:    return echo.NewHTTPError(http.StatusUnauthorized, \"Invalid or expired access token\")",
          "89:   }",
          "",
          "[Removed Lines]",
          "86:     log.Error(\"fail to remove AccessToken and Cookies\", zap.Error(err))",
          "",
          "[Added Lines]",
          "85:     slog.Warn(\"fail to remove AccessToken and Cookies\", err)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "95:   if !validateAccessToken(accessToken, accessTokens) {",
          "96:    err = removeAccessTokenAndCookies(c, server.Store, userID, accessToken)",
          "97:    if err != nil {",
          "99:    }",
          "100:    return echo.NewHTTPError(http.StatusUnauthorized, \"Invalid access token.\")",
          "101:   }",
          "",
          "[Removed Lines]",
          "98:     log.Error(\"fail to remove AccessToken and Cookies\", zap.Error(err))",
          "",
          "[Added Lines]",
          "97:     slog.Warn(\"fail to remove AccessToken and Cookies\", err)",
          "",
          "---------------"
        ],
        "server/route/api/v1/memo.go||server/route/api/v1/memo.go": [
          "File: server/route/api/v1/memo.go -> server/route/api/v1/memo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:  \"context\"",
          "5:  \"encoding/json\"",
          "6:  \"fmt\"",
          "7:  \"net/http\"",
          "8:  \"strconv\"",
          "9:  \"time\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7:  \"log/slog\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11:  \"github.com/labstack/echo/v4\"",
          "12:  \"github.com/lithammer/shortuuid/v4\"",
          "13:  \"github.com/pkg/errors\"",
          "17:  \"github.com/usememos/memos/internal/util\"",
          "18:  \"github.com/usememos/memos/plugin/webhook\"",
          "19:  storepb \"github.com/usememos/memos/proto/gen/store\"",
          "",
          "[Removed Lines]",
          "14:  \"go.uber.org/zap\"",
          "16:  \"github.com/usememos/memos/internal/log\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "390:   for _, userSetting := range userSettings {",
          "391:    tgUserID, err := strconv.ParseInt(userSetting.GetTelegramUserId(), 10, 64)",
          "392:    if err != nil {",
          "394:     continue",
          "395:    }",
          "",
          "[Removed Lines]",
          "393:     log.Error(\"failed to parse Telegram UserID\", zap.Error(err))",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "398:    content := memoResponse.CreatorName + \" Says:\\n\\n\" + memoResponse.Content",
          "399:    _, err = s.telegramBot.SendMessage(ctx, tgUserID, content)",
          "400:    if err != nil {",
          "402:     continue",
          "403:    }",
          "404:   }",
          "405:  }",
          "407:  if err := s.DispatchMemoCreatedWebhook(ctx, memoResponse); err != nil {",
          "409:  }",
          "411:  return c.JSON(http.StatusOK, memoResponse)",
          "",
          "[Removed Lines]",
          "401:     log.Error(\"Failed to send Telegram notification\", zap.Error(err))",
          "408:   log.Warn(\"Failed to dispatch memo created webhook\", zap.Error(err))",
          "",
          "[Added Lines]",
          "405:   slog.Warn(\"Failed to dispatch memo created webhook\", err)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "627:  if memoMessage, err := s.convertMemoFromStore(ctx, memo); err == nil {",
          "629:   if err := s.DispatchMemoDeletedWebhook(ctx, memoMessage); err != nil {",
          "631:   }",
          "632:  }",
          "",
          "[Removed Lines]",
          "630:    log.Warn(\"Failed to dispatch memo deleted webhook\", zap.Error(err))",
          "",
          "[Added Lines]",
          "627:    slog.Warn(\"Failed to dispatch memo deleted webhook\", err)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "821:  }",
          "823:  if err := s.DispatchMemoUpdatedWebhook(ctx, memoResponse); err != nil {",
          "825:  }",
          "827:  return c.JSON(http.StatusOK, memoResponse)",
          "",
          "[Removed Lines]",
          "824:   log.Warn(\"Failed to dispatch memo updated webhook\", zap.Error(err))",
          "",
          "[Added Lines]",
          "821:   slog.Error(\"Failed to dispatch memo updated webhook\", err)",
          "",
          "---------------"
        ],
        "server/route/api/v1/resource.go||server/route/api/v1/resource.go": [
          "File: server/route/api/v1/resource.go -> server/route/api/v1/resource.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "17:  \"github.com/labstack/echo/v4\"",
          "18:  \"github.com/lithammer/shortuuid/v4\"",
          "19:  \"github.com/pkg/errors\"",
          "23:  \"github.com/usememos/memos/internal/util\"",
          "24:  \"github.com/usememos/memos/plugin/storage/s3\"",
          "25:  \"github.com/usememos/memos/store\"",
          "",
          "[Removed Lines]",
          "20:  \"go.uber.org/zap\"",
          "22:  \"github.com/usememos/memos/internal/log\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "192:   if settingMaxUploadSizeMiB, err := strconv.Atoi(maxUploadSetting.Value); err == nil {",
          "193:    settingMaxUploadSizeBytes = settingMaxUploadSizeMiB * MebiByte",
          "194:   } else {",
          "196:    settingMaxUploadSizeBytes = 0",
          "197:   }",
          "198:  } else {",
          "",
          "[Removed Lines]",
          "195:    log.Warn(\"Failed to parse max upload size\", zap.Error(err))",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "server/route/api/v2/logger_interceptor.go||server/route/api/v2/logger_interceptor.go": [
          "File: server/route/api/v2/logger_interceptor.go -> server/route/api/v2/logger_interceptor.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package v2",
          "3: import (",
          "4:  \"context\"",
          "5:  \"log/slog\"",
          "7:  \"google.golang.org/grpc\"",
          "8:  \"google.golang.org/grpc/codes\"",
          "9:  \"google.golang.org/grpc/status\"",
          "10: )",
          "12: type LoggerInterceptor struct {",
          "13: }",
          "15: func NewLoggerInterceptor() *LoggerInterceptor {",
          "16:  return &LoggerInterceptor{}",
          "17: }",
          "19: func (in *LoggerInterceptor) LoggerInterceptor(ctx context.Context, request any, serverInfo *grpc.UnaryServerInfo, handler grpc.UnaryHandler) (any, error) {",
          "20:  resp, err := handler(ctx, request)",
          "21:  in.loggerInterceptorDo(ctx, serverInfo.FullMethod, err)",
          "22:  return resp, err",
          "23: }",
          "25: func (*LoggerInterceptor) loggerInterceptorDo(ctx context.Context, fullMethod string, err error) {",
          "26:  st := status.Convert(err)",
          "27:  var logLevel slog.Level",
          "28:  var logMsg string",
          "29:  switch st.Code() {",
          "30:  case codes.OK:",
          "31:   logLevel = slog.LevelInfo",
          "32:   logMsg = \"OK\"",
          "33:  case codes.Unauthenticated, codes.OutOfRange, codes.PermissionDenied, codes.NotFound:",
          "34:   logLevel = slog.LevelInfo",
          "35:   logMsg = \"client error\"",
          "36:  case codes.Internal, codes.Unknown, codes.DataLoss, codes.Unavailable, codes.DeadlineExceeded:",
          "37:   logLevel = slog.LevelError",
          "38:   logMsg = \"server error\"",
          "39:  default:",
          "40:   logLevel = slog.LevelError",
          "41:   logMsg = \"unknown error\"",
          "42:  }",
          "43:  slog.LogAttrs(ctx, logLevel, logMsg, slog.String(\"method\", fullMethod))",
          "44: }",
          "",
          "---------------"
        ],
        "server/route/api/v2/memo_service.go||server/route/api/v2/memo_service.go": [
          "File: server/route/api/v2/memo_service.go -> server/route/api/v2/memo_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:  \"context\"",
          "7:  \"encoding/json\"",
          "8:  \"fmt\"",
          "9:  \"time\"",
          "11:  \"github.com/google/cel-go/cel\"",
          "12:  \"github.com/lithammer/shortuuid/v4\"",
          "13:  \"github.com/pkg/errors\"",
          "15:  expr \"google.golang.org/genproto/googleapis/api/expr/v1alpha1\"",
          "16:  \"google.golang.org/grpc/codes\"",
          "17:  \"google.golang.org/grpc/status\"",
          "18:  \"google.golang.org/protobuf/types/known/timestamppb\"",
          "21:  \"github.com/usememos/memos/internal/util\"",
          "22:  \"github.com/usememos/memos/plugin/webhook\"",
          "23:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "",
          "[Removed Lines]",
          "14:  \"go.uber.org/zap\"",
          "20:  \"github.com/usememos/memos/internal/log\"",
          "",
          "[Added Lines]",
          "9:  \"log/slog\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70:  }",
          "72:  if err := s.DispatchMemoCreatedWebhook(ctx, memoMessage); err != nil {",
          "74:  }",
          "76:  response := &apiv2pb.CreateMemoResponse{",
          "",
          "[Removed Lines]",
          "73:   log.Warn(\"Failed to dispatch memo created webhook\", zap.Error(err))",
          "",
          "[Added Lines]",
          "72:   slog.Warn(\"Failed to dispatch memo created webhook\", err)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "280:  }",
          "282:  if err := s.DispatchMemoUpdatedWebhook(ctx, memoMessage); err != nil {",
          "284:  }",
          "286:  return &apiv2pb.UpdateMemoResponse{",
          "",
          "[Removed Lines]",
          "283:   log.Warn(\"Failed to dispatch memo updated webhook\", zap.Error(err))",
          "",
          "[Added Lines]",
          "282:   slog.Warn(\"Failed to dispatch memo updated webhook\", err)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "307:  if memoMessage, err := s.convertMemoFromStore(ctx, memo); err == nil {",
          "309:   if err := s.DispatchMemoDeletedWebhook(ctx, memoMessage); err != nil {",
          "311:   }",
          "312:  }",
          "",
          "[Removed Lines]",
          "310:    log.Warn(\"Failed to dispatch memo deleted webhook\", zap.Error(err))",
          "",
          "[Added Lines]",
          "309:    slog.Warn(\"Failed to dispatch memo deleted webhook\", err)",
          "",
          "---------------"
        ],
        "server/route/api/v2/v2.go||server/route/api/v2/v2.go": [
          "File: server/route/api/v2/v2.go -> server/route/api/v2/v2.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"context\"",
          "5:  \"fmt\"",
          "6:  \"net\"",
          "8:  \"github.com/grpc-ecosystem/grpc-gateway/v2/runtime\"",
          "9:  \"github.com/improbable-eng/grpc-web/go/grpcweb\"",
          "10:  \"github.com/labstack/echo/v4\"",
          "11:  \"github.com/pkg/errors\"",
          "13:  \"google.golang.org/grpc\"",
          "14:  \"google.golang.org/grpc/credentials/insecure\"",
          "15:  \"google.golang.org/grpc/reflection\"",
          "18:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "19:  \"github.com/usememos/memos/server/profile\"",
          "20:  \"github.com/usememos/memos/store\"",
          "",
          "[Removed Lines]",
          "12:  \"go.uber.org/zap\"",
          "17:  \"github.com/usememos/memos/internal/log\"",
          "",
          "[Added Lines]",
          "6:  \"log/slog\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:  authProvider := NewGRPCAuthInterceptor(store, secret)",
          "46:  grpcServer := grpc.NewServer(",
          "47:   grpc.ChainUnaryInterceptor(",
          "48:    authProvider.AuthenticationInterceptor,",
          "49:   ),",
          "50:  )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47:    NewLoggerInterceptor().LoggerInterceptor,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "138:  }",
          "139:  go func() {",
          "140:   if err := s.grpcServer.Serve(listen); err != nil {",
          "142:   }",
          "143:  }()",
          "",
          "[Removed Lines]",
          "141:    log.Error(\"grpc server listen error\", zap.Error(err))",
          "",
          "[Added Lines]",
          "141:    slog.Error(\"failed to start gRPC server\", err)",
          "",
          "---------------"
        ],
        "server/route/resource/resource.go||server/route/resource/resource.go": [
          "File: server/route/resource/resource.go -> server/route/resource/resource.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:  \"bytes\"",
          "5:  \"fmt\"",
          "6:  \"io\"",
          "7:  \"net/http\"",
          "8:  \"os\"",
          "9:  \"path/filepath\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7:  \"log/slog\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "14:  \"github.com/disintegration/imaging\"",
          "15:  \"github.com/labstack/echo/v4\"",
          "16:  \"github.com/pkg/errors\"",
          "20:  \"github.com/usememos/memos/internal/util\"",
          "21:  \"github.com/usememos/memos/server/profile\"",
          "22:  \"github.com/usememos/memos/store\"",
          "",
          "[Removed Lines]",
          "17:  \"go.uber.org/zap\"",
          "19:  \"github.com/usememos/memos/internal/log\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "99:   thumbnailPath := filepath.Join(s.Profile.Data, thumbnailImagePath, fmt.Sprintf(\"%d%s\", resource.ID, ext))",
          "100:   thumbnailBlob, err := getOrGenerateThumbnailImage(blob, thumbnailPath)",
          "101:   if err != nil {",
          "103:   } else {",
          "104:    blob = thumbnailBlob",
          "105:   }",
          "",
          "[Removed Lines]",
          "102:    log.Warn(fmt.Sprintf(\"failed to get or generate local thumbnail with path %s\", thumbnailPath), zap.Error(err))",
          "",
          "[Added Lines]",
          "101:    slog.Warn(\"failed to get or generate thumbnail image\", err)",
          "",
          "---------------"
        ],
        "server/server.go||server/server.go": [
          "File: server/server.go -> server/server.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:  \"github.com/google/uuid\"",
          "11:  \"github.com/labstack/echo/v4\"",
          "13:  \"github.com/pkg/errors\"",
          "15:  \"github.com/usememos/memos/plugin/telegram\"",
          "",
          "[Removed Lines]",
          "12:  \"github.com/labstack/echo/v4/middleware\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:   telegramBot: telegram.NewBotWithHandler(integration.NewTelegramHandler(store)),",
          "50:  }",
          "58:  e.Use(CORSMiddleware())",
          "65:  serverID, err := s.getSystemServerID(ctx)",
          "66:  if err != nil {",
          "67:   return nil, errors.Wrap(err, \"failed to retrieve system server ID\")",
          "68:  }",
          "69:  s.ID = serverID",
          "77:  secret := \"usememos\"",
          "78:  if profile.Mode == \"prod\" {",
          "79:   secret, err = s.getSystemSecretSessionName(ctx)",
          "",
          "[Removed Lines]",
          "52:  e.Use(middleware.LoggerWithConfig(middleware.LoggerConfig{",
          "53:   Format: `{\"time\":\"${time_rfc3339}\",\"latency\":\"${latency_human}\",` +",
          "54:    `\"method\":\"${method}\",\"uri\":\"${uri}\",` +",
          "55:    `\"status\":${status},\"error\":\"${error}\"}` + \"\\n\",",
          "56:  }))",
          "60:  e.Use(middleware.TimeoutWithConfig(middleware.TimeoutConfig{",
          "61:   Skipper: grpcRequestSkipper,",
          "62:   Timeout: 30 * time.Second,",
          "63:  }))",
          "72:  if profile.Frontend {",
          "73:   frontendService := frontend.NewFrontendService(profile, store)",
          "74:   frontendService.Serve(ctx, e)",
          "75:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "88:   return c.String(http.StatusOK, \"Service ready.\")",
          "89:  })",
          "92:  rootGroup := e.Group(\"\")",
          "93:  apiV1Service := apiv1.NewAPIV1Service(s.Secret, profile, store, s.telegramBot)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "75:  if profile.Frontend {",
          "76:   frontendService := frontend.NewFrontendService(profile, store)",
          "77:   frontendService.Serve(ctx, e)",
          "78:  }",
          "",
          "---------------"
        ],
        "store/db/mysql/mysql.go||store/db/mysql/mysql.go": [
          "File: store/db/mysql/mysql.go -> store/db/mysql/mysql.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"context\"",
          "5:  \"database/sql\"",
          "8:  \"github.com/go-sql-driver/mysql\"",
          "9:  \"github.com/pkg/errors\"",
          "12:  \"github.com/usememos/memos/server/profile\"",
          "13:  \"github.com/usememos/memos/store\"",
          "14: )",
          "",
          "[Removed Lines]",
          "6:  \"fmt\"",
          "11:  \"github.com/usememos/memos/internal/log\"",
          "",
          "[Added Lines]",
          "6:  \"log/slog\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31:  driver := DB{profile: profile}",
          "32:  driver.config, err = mysql.ParseDSN(dsn)",
          "33:  if err != nil {",
          "35:   return nil, errors.New(\"Parse DSN eroor\")",
          "36:  }",
          "",
          "[Removed Lines]",
          "34:   log.Error(fmt.Sprintf(\"DSN parse error: %s\", dsn))",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "87:   \" GROUP BY `table_schema`\"",
          "88:  rows, err := d.db.QueryContext(ctx, query, d.config.DBName)",
          "89:  if err != nil {",
          "91:   return 0, err",
          "92:  }",
          "93:  defer rows.Close()",
          "",
          "[Removed Lines]",
          "90:   log.Error(\"Query db size error, make sure you have enough privilege\")",
          "",
          "[Added Lines]",
          "88:   slog.Error(\"Query db size error, make sure you have enough privilege\", err)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "14d4cfd5a4870766ac6d2ec21dfc651118f679c2",
      "candidate_info": {
        "commit_hash": "14d4cfd5a4870766ac6d2ec21dfc651118f679c2",
        "repo": "usememos/memos",
        "commit_url": "https://github.com/usememos/memos/commit/14d4cfd5a4870766ac6d2ec21dfc651118f679c2",
        "files": [
          "internal/jobs/presign_link.go",
          "server/route/api/v2/auth_service.go",
          "server/route/api/v2/idp_service.go",
          "server/route/api/v2/resource_service.go",
          "server/route/api/v2/storage_service.go",
          "server/route/api/v2/workspace_setting_service.go",
          "server/server.go",
          "store/cache.go",
          "store/idp.go",
          "store/migrator.go",
          "store/storage.go",
          "store/store.go",
          "store/user_setting.go",
          "store/workspace_setting.go",
          "test/store/idp_test.go",
          "test/store/storage_test.go",
          "test/store/workspace_setting_test.go"
        ],
        "message": "chore: tweak store methods name",
        "before_after_code_files": [
          "internal/jobs/presign_link.go||internal/jobs/presign_link.go",
          "server/route/api/v2/auth_service.go||server/route/api/v2/auth_service.go",
          "server/route/api/v2/idp_service.go||server/route/api/v2/idp_service.go",
          "server/route/api/v2/resource_service.go||server/route/api/v2/resource_service.go",
          "server/route/api/v2/storage_service.go||server/route/api/v2/storage_service.go",
          "server/route/api/v2/workspace_setting_service.go||server/route/api/v2/workspace_setting_service.go",
          "server/server.go||server/server.go",
          "store/cache.go||store/cache.go",
          "store/idp.go||store/idp.go",
          "store/migrator.go||store/migrator.go",
          "store/storage.go||store/storage.go",
          "store/store.go||store/store.go",
          "store/user_setting.go||store/user_setting.go",
          "store/workspace_setting.go||store/workspace_setting.go",
          "test/store/idp_test.go||test/store/idp_test.go",
          "test/store/storage_test.go||test/store/storage_test.go",
          "test/store/workspace_setting_test.go||test/store/workspace_setting_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "internal/jobs/presign_link.go||internal/jobs/presign_link.go",
            "server/route/api/v2/storage_service.go||server/route/api/v2/storage_service.go",
            "server/server.go||server/server.go"
          ],
          "candidate": [
            "internal/jobs/presign_link.go||internal/jobs/presign_link.go",
            "server/route/api/v2/storage_service.go||server/route/api/v2/storage_service.go",
            "server/server.go||server/server.go"
          ]
        }
      },
      "candidate_diff": {
        "internal/jobs/presign_link.go||internal/jobs/presign_link.go": [
          "File: internal/jobs/presign_link.go -> internal/jobs/presign_link.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "103:  if workspaceStorageSetting.StorageType != storepb.WorkspaceStorageSetting_STORAGE_TYPE_EXTERNAL || workspaceStorageSetting.ActivedExternalStorageId == nil {",
          "104:   return nil, nil",
          "105:  }",
          "107:  if err != nil {",
          "108:   return nil, errors.Wrap(err, \"Failed to find storage\")",
          "109:  }",
          "",
          "[Removed Lines]",
          "106:  storage, err := dataStore.GetStorageV1(ctx, &store.FindStorage{ID: workspaceStorageSetting.ActivedExternalStorageId})",
          "",
          "[Added Lines]",
          "106:  storage, err := dataStore.GetStorage(ctx, &store.FindStorage{ID: workspaceStorageSetting.ActivedExternalStorageId})",
          "",
          "---------------"
        ],
        "server/route/api/v2/auth_service.go||server/route/api/v2/auth_service.go": [
          "File: server/route/api/v2/auth_service.go -> server/route/api/v2/auth_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "72: }",
          "74: func (s *APIV2Service) SignInWithSSO(ctx context.Context, request *apiv2pb.SignInWithSSORequest) (*apiv2pb.SignInWithSSOResponse, error) {",
          "76:   ID: &request.IdpId,",
          "77:  })",
          "78:  if err != nil {",
          "",
          "[Removed Lines]",
          "75:  identityProvider, err := s.Store.GetIdentityProviderV1(ctx, &store.FindIdentityProvider{",
          "",
          "[Added Lines]",
          "75:  identityProvider, err := s.Store.GetIdentityProvider(ctx, &store.FindIdentityProvider{",
          "",
          "---------------"
        ],
        "server/route/api/v2/idp_service.go||server/route/api/v2/idp_service.go": [
          "File: server/route/api/v2/idp_service.go -> server/route/api/v2/idp_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:   return nil, status.Errorf(codes.PermissionDenied, \"permission denied\")",
          "22:  }",
          "25:  if err != nil {",
          "26:   return nil, status.Errorf(codes.Internal, \"failed to create identity provider, error: %+v\", err)",
          "27:  }",
          "",
          "[Removed Lines]",
          "24:  identityProvider, err := s.Store.CreateIdentityProviderV1(ctx, convertIdentityProviderToStore(request.IdentityProvider))",
          "",
          "[Added Lines]",
          "24:  identityProvider, err := s.Store.CreateIdentityProvider(ctx, convertIdentityProviderToStore(request.IdentityProvider))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31: }",
          "33: func (s *APIV2Service) ListIdentityProviders(ctx context.Context, _ *apiv2pb.ListIdentityProvidersRequest) (*apiv2pb.ListIdentityProvidersResponse, error) {",
          "35:  if err != nil {",
          "36:   return nil, status.Errorf(codes.Internal, \"failed to list identity providers, error: %+v\", err)",
          "37:  }",
          "",
          "[Removed Lines]",
          "34:  identityProviders, err := s.Store.ListIdentityProvidersV1(ctx, &store.FindIdentityProvider{})",
          "",
          "[Added Lines]",
          "34:  identityProviders, err := s.Store.ListIdentityProviders(ctx, &store.FindIdentityProvider{})",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "50:  if err != nil {",
          "51:   return nil, status.Errorf(codes.InvalidArgument, \"invalid identity provider name: %v\", err)",
          "52:  }",
          "54:   ID: &id,",
          "55:  })",
          "56:  if err != nil {",
          "",
          "[Removed Lines]",
          "53:  identityProvider, err := s.Store.GetIdentityProviderV1(ctx, &store.FindIdentityProvider{",
          "",
          "[Added Lines]",
          "53:  identityProvider, err := s.Store.GetIdentityProvider(ctx, &store.FindIdentityProvider{",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "86:   }",
          "87:  }",
          "90:  if err != nil {",
          "91:   return nil, status.Errorf(codes.Internal, \"failed to update identity provider, error: %+v\", err)",
          "92:  }",
          "",
          "[Removed Lines]",
          "89:  identityProvider, err := s.Store.UpdateIdentityProviderV1(ctx, update)",
          "",
          "[Added Lines]",
          "89:  identityProvider, err := s.Store.UpdateIdentityProvider(ctx, update)",
          "",
          "---------------"
        ],
        "server/route/api/v2/resource_service.go||server/route/api/v2/resource_service.go": [
          "File: server/route/api/v2/resource_service.go -> server/route/api/v2/resource_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "296:   if workspaceStorageSetting.ActivedExternalStorageId == nil {",
          "297:    return errors.Errorf(\"No actived external storage found\")",
          "298:   }",
          "300:   if err != nil {",
          "301:    return errors.Wrap(err, \"Failed to find actived external storage\")",
          "302:   }",
          "",
          "[Removed Lines]",
          "299:   storage, err := s.GetStorageV1(ctx, &store.FindStorage{ID: workspaceStorageSetting.ActivedExternalStorageId})",
          "",
          "[Added Lines]",
          "299:   storage, err := s.GetStorage(ctx, &store.FindStorage{ID: workspaceStorageSetting.ActivedExternalStorageId})",
          "",
          "---------------"
        ],
        "server/route/api/v2/storage_service.go||server/route/api/v2/storage_service.go": [
          "File: server/route/api/v2/storage_service.go -> server/route/api/v2/storage_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:   return nil, status.Errorf(codes.PermissionDenied, \"permission denied\")",
          "21:  }",
          "24:  if err != nil {",
          "25:   return nil, status.Errorf(codes.Internal, \"failed to create storage, error: %+v\", err)",
          "26:  }",
          "",
          "[Removed Lines]",
          "23:  storage, err := s.Store.CreateStorageV1(ctx, convertStorageToStore(request.Storage))",
          "",
          "[Added Lines]",
          "23:  storage, err := s.Store.CreateStorage(ctx, convertStorageToStore(request.Storage))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30: }",
          "32: func (s *APIV2Service) ListStorages(ctx context.Context, _ *apiv2pb.ListStoragesRequest) (*apiv2pb.ListStoragesResponse, error) {",
          "34:  if err != nil {",
          "35:   return nil, status.Errorf(codes.Internal, \"failed to list storages, error: %+v\", err)",
          "36:  }",
          "",
          "[Removed Lines]",
          "33:  storages, err := s.Store.ListStoragesV1(ctx, &store.FindStorage{})",
          "",
          "[Added Lines]",
          "33:  storages, err := s.Store.ListStorages(ctx, &store.FindStorage{})",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "45: }",
          "47: func (s *APIV2Service) GetStorage(ctx context.Context, request *apiv2pb.GetStorageRequest) (*apiv2pb.GetStorageResponse, error) {",
          "49:   ID: &request.Id,",
          "50:  })",
          "51:  if err != nil {",
          "",
          "[Removed Lines]",
          "48:  storage, err := s.Store.GetStorageV1(ctx, &store.FindStorage{",
          "",
          "[Added Lines]",
          "48:  storage, err := s.Store.GetStorage(ctx, &store.FindStorage{",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "77:   }",
          "78:  }",
          "81:  if err != nil {",
          "82:   return nil, status.Errorf(codes.Internal, \"failed to update storage, error: %+v\", err)",
          "83:  }",
          "",
          "[Removed Lines]",
          "80:  storage, err := s.Store.UpdateStorageV1(ctx, update)",
          "",
          "[Added Lines]",
          "80:  storage, err := s.Store.UpdateStorage(ctx, update)",
          "",
          "---------------"
        ],
        "server/route/api/v2/workspace_setting_service.go||server/route/api/v2/workspace_setting_service.go": [
          "File: server/route/api/v2/workspace_setting_service.go -> server/route/api/v2/workspace_setting_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: )",
          "15: func (s *APIV2Service) ListWorkspaceSettings(ctx context.Context, _ *apiv2pb.ListWorkspaceSettingsRequest) (*apiv2pb.ListWorkspaceSettingsResponse, error) {",
          "17:  if err != nil {",
          "18:   return nil, status.Errorf(codes.Internal, \"failed to get workspace setting: %v\", err)",
          "19:  }",
          "",
          "[Removed Lines]",
          "16:  workspaceSettings, err := s.Store.ListWorkspaceSettingsV1(ctx, &store.FindWorkspaceSetting{})",
          "",
          "[Added Lines]",
          "16:  workspaceSettings, err := s.Store.ListWorkspaceSettings(ctx, &store.FindWorkspaceSetting{})",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36:   return nil, status.Errorf(codes.InvalidArgument, \"invalid workspace setting name: %v\", err)",
          "37:  }",
          "38:  settingKey := storepb.WorkspaceSettingKey(storepb.WorkspaceSettingKey_value[settingKeyString])",
          "40:   Name: settingKey.String(),",
          "41:  })",
          "42:  if err != nil {",
          "",
          "[Removed Lines]",
          "39:  workspaceSetting, err := s.Store.GetWorkspaceSettingV1(ctx, &store.FindWorkspaceSetting{",
          "",
          "[Added Lines]",
          "39:  workspaceSetting, err := s.Store.GetWorkspaceSetting(ctx, &store.FindWorkspaceSetting{",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "64:   return nil, status.Errorf(codes.PermissionDenied, \"permission denied\")",
          "65:  }",
          "68:   return nil, status.Errorf(codes.Internal, \"failed to upsert workspace setting: %v\", err)",
          "69:  }",
          "",
          "[Removed Lines]",
          "67:  if _, err := s.Store.UpsertWorkspaceSettingV1(ctx, convertWorkspaceSettingToStore(request.Setting)); err != nil {",
          "",
          "[Added Lines]",
          "67:  if _, err := s.Store.UpsertWorkspaceSetting(ctx, convertWorkspaceSettingToStore(request.Setting)); err != nil {",
          "",
          "---------------"
        ],
        "server/server.go||server/server.go": [
          "File: server/server.go -> server/server.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "133:   modified = true",
          "134:  }",
          "135:  if modified {",
          "137:    Key:   storepb.WorkspaceSettingKey_WORKSPACE_SETTING_BASIC,",
          "138:    Value: &storepb.WorkspaceSetting_BasicSetting{BasicSetting: workspaceBasicSetting},",
          "139:   })",
          "",
          "[Removed Lines]",
          "136:   workspaceSetting, err := s.Store.UpsertWorkspaceSettingV1(ctx, &storepb.WorkspaceSetting{",
          "",
          "[Added Lines]",
          "136:   workspaceSetting, err := s.Store.UpsertWorkspaceSetting(ctx, &storepb.WorkspaceSetting{",
          "",
          "---------------"
        ],
        "store/cache.go||store/cache.go": [
          "File: store/cache.go -> store/cache.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:  \"fmt\"",
          "5: )",
          "8:  return fmt.Sprintf(\"%d-%s-v1\", userID, key)",
          "9: }",
          "",
          "[Removed Lines]",
          "7: func getUserSettingV1CacheKey(userID int32, key string) string {",
          "",
          "[Added Lines]",
          "7: func getUserSettingCacheKey(userID int32, key string) string {",
          "",
          "---------------"
        ],
        "store/idp.go||store/idp.go": [
          "File: store/idp.go -> store/idp.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:  ID int32",
          "33: }",
          "36:  raw, err := convertIdentityProviderToRaw(create)",
          "37:  if err != nil {",
          "38:   return nil, err",
          "",
          "[Removed Lines]",
          "35: func (s *Store) CreateIdentityProviderV1(ctx context.Context, create *storepb.IdentityProvider) (*storepb.IdentityProvider, error) {",
          "",
          "[Added Lines]",
          "35: func (s *Store) CreateIdentityProvider(ctx context.Context, create *storepb.IdentityProvider) (*storepb.IdentityProvider, error) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:  if err != nil {",
          "47:   return nil, err",
          "48:  }",
          "50:  return identityProvider, nil",
          "51: }",
          "54:  list, err := s.driver.ListIdentityProviders(ctx, find)",
          "55:  if err != nil {",
          "56:   return nil, err",
          "",
          "[Removed Lines]",
          "49:  s.idpV1Cache.Store(identityProvider.Id, identityProvider)",
          "53: func (s *Store) ListIdentityProvidersV1(ctx context.Context, find *FindIdentityProvider) ([]*storepb.IdentityProvider, error) {",
          "",
          "[Added Lines]",
          "49:  s.idpCache.Store(identityProvider.Id, identityProvider)",
          "53: func (s *Store) ListIdentityProviders(ctx context.Context, find *FindIdentityProvider) ([]*storepb.IdentityProvider, error) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "62:   if err != nil {",
          "63:    return nil, err",
          "64:   }",
          "66:  }",
          "67:  return identityProviders, nil",
          "68: }",
          "71:  if find.ID != nil {",
          "73:    return cache.(*storepb.IdentityProvider), nil",
          "74:   }",
          "75:  }",
          "78:  if err != nil {",
          "79:   return nil, err",
          "80:  }",
          "",
          "[Removed Lines]",
          "65:   s.idpV1Cache.Store(identityProvider.Id, identityProvider)",
          "70: func (s *Store) GetIdentityProviderV1(ctx context.Context, find *FindIdentityProvider) (*storepb.IdentityProvider, error) {",
          "72:   if cache, ok := s.idpV1Cache.Load(*find.ID); ok {",
          "77:  list, err := s.ListIdentityProvidersV1(ctx, find)",
          "",
          "[Added Lines]",
          "65:   s.idpCache.Store(identityProvider.Id, identityProvider)",
          "70: func (s *Store) GetIdentityProvider(ctx context.Context, find *FindIdentityProvider) (*storepb.IdentityProvider, error) {",
          "72:   if cache, ok := s.idpCache.Load(*find.ID); ok {",
          "77:  list, err := s.ListIdentityProviders(ctx, find)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "97:  Config           *storepb.IdentityProviderConfig",
          "98: }",
          "101:  updateRaw := &UpdateIdentityProvider{",
          "102:   ID: update.ID,",
          "103:  }",
          "",
          "[Removed Lines]",
          "100: func (s *Store) UpdateIdentityProviderV1(ctx context.Context, update *UpdateIdentityProviderV1) (*storepb.IdentityProvider, error) {",
          "",
          "[Added Lines]",
          "100: func (s *Store) UpdateIdentityProvider(ctx context.Context, update *UpdateIdentityProviderV1) (*storepb.IdentityProvider, error) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "123:  if err != nil {",
          "124:   return nil, err",
          "125:  }",
          "127:  return identityProvider, nil",
          "128: }",
          "",
          "[Removed Lines]",
          "126:  s.idpV1Cache.Store(identityProvider.Id, identityProvider)",
          "",
          "[Added Lines]",
          "126:  s.idpCache.Store(identityProvider.Id, identityProvider)",
          "",
          "---------------"
        ],
        "store/migrator.go||store/migrator.go": [
          "File: store/migrator.go -> store/migrator.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package store",
          "",
          "[Removed Lines]",
          "3: import (",
          "4:  \"context\"",
          "5:  \"encoding/json\"",
          "6:  \"fmt\"",
          "8:  \"github.com/pkg/errors\"",
          "10:  storepb \"github.com/usememos/memos/proto/gen/store\"",
          "11: )",
          "14: func (s *Store) MigrateWorkspaceSetting(ctx context.Context) error {",
          "15:  workspaceSettings, err := s.ListWorkspaceSettings(ctx, &FindWorkspaceSetting{})",
          "16:  if err != nil {",
          "17:   return errors.Wrap(err, \"failed to list workspace settings\")",
          "18:  }",
          "20:  workspaceBasicSetting, err := s.GetWorkspaceBasicSetting(ctx)",
          "21:  if err != nil {",
          "22:   return errors.Wrap(err, \"failed to get workspace basic setting\")",
          "23:  }",
          "25:  workspaceGeneralSetting, err := s.GetWorkspaceGeneralSetting(ctx)",
          "26:  if err != nil {",
          "27:   return errors.Wrap(err, \"failed to get workspace general setting\")",
          "28:  }",
          "30:  for _, workspaceSetting := range workspaceSettings {",
          "31:   matched := true",
          "32:   var baseValue any",
          "34:   json.Unmarshal([]byte(workspaceSetting.Value), &baseValue)",
          "35:   if workspaceSetting.Name == \"server-id\" {",
          "36:    workspaceBasicSetting.ServerId = workspaceSetting.Value",
          "37:   } else if workspaceSetting.Name == \"secret-session\" {",
          "38:    workspaceBasicSetting.SecretKey = workspaceSetting.Value",
          "39:   } else if workspaceSetting.Name == \"allow-signup\" {",
          "40:    workspaceGeneralSetting.DisallowSignup = !baseValue.(bool)",
          "41:   } else if workspaceSetting.Name == \"disable-password-login\" {",
          "42:    workspaceGeneralSetting.DisallowPasswordLogin = baseValue.(bool)",
          "43:   } else if workspaceSetting.Name == \"additional-style\" {",
          "44:    workspaceGeneralSetting.AdditionalStyle = baseValue.(string)",
          "45:   } else if workspaceSetting.Name == \"additional-script\" {",
          "46:    workspaceGeneralSetting.AdditionalScript = baseValue.(string)",
          "47:   } else if workspaceSetting.Name == \"instance-url\" {",
          "48:    workspaceGeneralSetting.InstanceUrl = workspaceSetting.Value",
          "49:   } else {",
          "50:    matched = false",
          "51:   }",
          "53:   if matched {",
          "54:    if err := s.DeleteWorkspaceSetting(ctx, &DeleteWorkspaceSetting{",
          "55:     Name: workspaceSetting.Name,",
          "56:    }); err != nil {",
          "57:     return errors.Wrap(err, fmt.Sprintf(\"failed to delete workspace setting: %s\", workspaceSetting.Name))",
          "58:    }",
          "59:   }",
          "60:  }",
          "62:  if _, err := s.UpsertWorkspaceSettingV1(ctx, &storepb.WorkspaceSetting{",
          "63:   Key:   storepb.WorkspaceSettingKey_WORKSPACE_SETTING_BASIC,",
          "64:   Value: &storepb.WorkspaceSetting_BasicSetting{BasicSetting: workspaceBasicSetting},",
          "65:  }); err != nil {",
          "66:   return errors.Wrap(err, \"failed to upsert workspace basic setting\")",
          "67:  }",
          "69:  if _, err := s.UpsertWorkspaceSettingV1(ctx, &storepb.WorkspaceSetting{",
          "70:   Key:   storepb.WorkspaceSettingKey_WORKSPACE_SETTING_GENERAL,",
          "71:   Value: &storepb.WorkspaceSetting_GeneralSetting{GeneralSetting: workspaceGeneralSetting},",
          "72:  }); err != nil {",
          "73:   return errors.Wrap(err, \"failed to upsert workspace general setting\")",
          "74:  }",
          "76:  return nil",
          "77: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "store/storage.go||store/storage.go": [
          "File: store/storage.go -> store/storage.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:  ID int32",
          "31: }",
          "62:  storageRaw := &Storage{",
          "63:   Name: create.Name,",
          "64:   Type: create.Type.String(),",
          "",
          "[Removed Lines]",
          "33: func (s *Store) CreateStorage(ctx context.Context, create *Storage) (*Storage, error) {",
          "34:  return s.driver.CreateStorage(ctx, create)",
          "35: }",
          "37: func (s *Store) ListStorages(ctx context.Context, find *FindStorage) ([]*Storage, error) {",
          "38:  return s.driver.ListStorages(ctx, find)",
          "39: }",
          "41: func (s *Store) GetStorage(ctx context.Context, find *FindStorage) (*Storage, error) {",
          "42:  list, err := s.ListStorages(ctx, find)",
          "43:  if err != nil {",
          "44:   return nil, err",
          "45:  }",
          "46:  if len(list) == 0 {",
          "47:   return nil, nil",
          "48:  }",
          "50:  return list[0], nil",
          "51: }",
          "53: func (s *Store) UpdateStorage(ctx context.Context, update *UpdateStorage) (*Storage, error) {",
          "54:  return s.driver.UpdateStorage(ctx, update)",
          "55: }",
          "57: func (s *Store) DeleteStorage(ctx context.Context, delete *DeleteStorage) error {",
          "58:  return s.driver.DeleteStorage(ctx, delete)",
          "59: }",
          "61: func (s *Store) CreateStorageV1(ctx context.Context, create *storepb.Storage) (*storepb.Storage, error) {",
          "",
          "[Added Lines]",
          "33: func (s *Store) CreateStorage(ctx context.Context, create *storepb.Storage) (*storepb.Storage, error) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "83:  return storage, nil",
          "84: }",
          "87:  list, err := s.driver.ListStorages(ctx, find)",
          "88:  if err != nil {",
          "89:   return nil, err",
          "",
          "[Removed Lines]",
          "86: func (s *Store) ListStoragesV1(ctx context.Context, find *FindStorage) ([]*storepb.Storage, error) {",
          "",
          "[Added Lines]",
          "58: func (s *Store) ListStorages(ctx context.Context, find *FindStorage) ([]*storepb.Storage, error) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "100:  return storages, nil",
          "101: }",
          "105:  if err != nil {",
          "106:   return nil, err",
          "107:  }",
          "",
          "[Removed Lines]",
          "103: func (s *Store) GetStorageV1(ctx context.Context, find *FindStorage) (*storepb.Storage, error) {",
          "104:  list, err := s.ListStoragesV1(ctx, find)",
          "",
          "[Added Lines]",
          "75: func (s *Store) GetStorage(ctx context.Context, find *FindStorage) (*storepb.Storage, error) {",
          "76:  list, err := s.ListStorages(ctx, find)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "119:  Config *storepb.StorageConfig",
          "120: }",
          "123:  updateRaw := &UpdateStorage{",
          "124:   ID: update.ID,",
          "125:  }",
          "",
          "[Removed Lines]",
          "122: func (s *Store) UpdateStorageV1(ctx context.Context, update *UpdateStorageV1) (*storepb.Storage, error) {",
          "",
          "[Added Lines]",
          "94: func (s *Store) UpdateStorage(ctx context.Context, update *UpdateStorageV1) (*storepb.Storage, error) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "144:  return storage, nil",
          "145: }",
          "147: func convertStorageFromRaw(storageRaw *Storage) (*storepb.Storage, error) {",
          "148:  storage := &storepb.Storage{",
          "149:   Id:   storageRaw.ID,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "119: func (s *Store) DeleteStorage(ctx context.Context, delete *DeleteStorage) error {",
          "120:  return s.driver.DeleteStorage(ctx, delete)",
          "121: }",
          "",
          "---------------"
        ],
        "store/store.go||store/store.go": [
          "File: store/store.go -> store/store.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:  workspaceSettingCache sync.Map // map[string]*storepb.WorkspaceSetting",
          "15:  userCache             sync.Map // map[int]*User",
          "16:  userSettingCache      sync.Map // map[string]*UserSetting",
          "19: }",
          "",
          "[Removed Lines]",
          "17:  idpCache              sync.Map // map[int]*IdentityProvider",
          "18:  idpV1Cache            sync.Map // map[int]*storepb.IdentityProvider",
          "",
          "[Added Lines]",
          "17:  idpCache              sync.Map // map[int]*storepb.IdentityProvider",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27: }",
          "29: func (s *Store) MigrateManually(ctx context.Context) error {",
          "33:  return nil",
          "34: }",
          "",
          "[Removed Lines]",
          "30:  if err := s.MigrateWorkspaceSetting(ctx); err != nil {",
          "31:   return err",
          "32:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "store/user_setting.go||store/user_setting.go": [
          "File: store/user_setting.go -> store/user_setting.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:  if err != nil {",
          "35:   return nil, err",
          "36:  }",
          "38:  return userSetting, nil",
          "39: }",
          "",
          "[Removed Lines]",
          "37:  s.userSettingCache.Store(getUserSettingV1CacheKey(userSetting.UserId, userSetting.Key.String()), userSetting)",
          "",
          "[Added Lines]",
          "37:  s.userSettingCache.Store(getUserSettingCacheKey(userSetting.UserId, userSetting.Key.String()), userSetting)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50:   if err != nil {",
          "51:    return nil, err",
          "52:   }",
          "54:   userSettings = append(userSettings, userSetting)",
          "55:  }",
          "56:  return userSettings, nil",
          "",
          "[Removed Lines]",
          "53:   s.userSettingCache.Store(getUserSettingV1CacheKey(userSetting.UserId, userSetting.Key.String()), userSetting)",
          "",
          "[Added Lines]",
          "53:   s.userSettingCache.Store(getUserSettingCacheKey(userSetting.UserId, userSetting.Key.String()), userSetting)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "59: func (s *Store) GetUserSetting(ctx context.Context, find *FindUserSetting) (*storepb.UserSetting, error) {",
          "60:  if find.UserID != nil {",
          "62:    return cache.(*storepb.UserSetting), nil",
          "63:   }",
          "64:  }",
          "",
          "[Removed Lines]",
          "61:   if cache, ok := s.userSettingCache.Load(getUserSettingV1CacheKey(*find.UserID, find.Key.String())); ok {",
          "",
          "[Added Lines]",
          "61:   if cache, ok := s.userSettingCache.Load(getUserSettingCacheKey(*find.UserID, find.Key.String())); ok {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "75:  }",
          "77:  userSetting := list[0]",
          "79:  return userSetting, nil",
          "80: }",
          "",
          "[Removed Lines]",
          "78:  s.userSettingCache.Store(getUserSettingV1CacheKey(userSetting.UserId, userSetting.Key.String()), userSetting)",
          "",
          "[Added Lines]",
          "78:  s.userSettingCache.Store(getUserSettingCacheKey(userSetting.UserId, userSetting.Key.String()), userSetting)",
          "",
          "---------------"
        ],
        "store/workspace_setting.go||store/workspace_setting.go": [
          "File: store/workspace_setting.go -> store/workspace_setting.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  Name string",
          "24: }",
          "61:  workspaceSettingRaw := &WorkspaceSetting{",
          "62:   Name: upsert.Key.String(),",
          "63:  }",
          "",
          "[Removed Lines]",
          "26: func (s *Store) UpsertWorkspaceSetting(ctx context.Context, upsert *WorkspaceSetting) (*WorkspaceSetting, error) {",
          "27:  return s.driver.UpsertWorkspaceSetting(ctx, upsert)",
          "28: }",
          "30: func (s *Store) ListWorkspaceSettings(ctx context.Context, find *FindWorkspaceSetting) ([]*WorkspaceSetting, error) {",
          "31:  list, err := s.driver.ListWorkspaceSettings(ctx, find)",
          "32:  if err != nil {",
          "33:   return nil, err",
          "34:  }",
          "35:  return list, nil",
          "36: }",
          "38: func (s *Store) GetWorkspaceSetting(ctx context.Context, find *FindWorkspaceSetting) (*WorkspaceSetting, error) {",
          "39:  list, err := s.ListWorkspaceSettings(ctx, find)",
          "40:  if err != nil {",
          "41:   return nil, err",
          "42:  }",
          "44:  if len(list) == 0 {",
          "45:   return nil, nil",
          "46:  }",
          "48:  systemSettingMessage := list[0]",
          "49:  return systemSettingMessage, nil",
          "50: }",
          "52: func (s *Store) DeleteWorkspaceSetting(ctx context.Context, delete *DeleteWorkspaceSetting) error {",
          "53:  err := s.driver.DeleteWorkspaceSetting(ctx, delete)",
          "54:  if err != nil {",
          "55:   return errors.Wrap(err, \"Failed to delete workspace setting\")",
          "56:  }",
          "57:  return nil",
          "58: }",
          "60: func (s *Store) UpsertWorkspaceSettingV1(ctx context.Context, upsert *storepb.WorkspaceSetting) (*storepb.WorkspaceSetting, error) {",
          "",
          "[Added Lines]",
          "26: func (s *Store) UpsertWorkspaceSetting(ctx context.Context, upsert *storepb.WorkspaceSetting) (*storepb.WorkspaceSetting, error) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "91:  return workspaceSetting, nil",
          "92: }",
          "95:  list, err := s.driver.ListWorkspaceSettings(ctx, find)",
          "96:  if err != nil {",
          "97:   return nil, err",
          "",
          "[Removed Lines]",
          "94: func (s *Store) ListWorkspaceSettingsV1(ctx context.Context, find *FindWorkspaceSetting) ([]*storepb.WorkspaceSetting, error) {",
          "",
          "[Added Lines]",
          "60: func (s *Store) ListWorkspaceSettings(ctx context.Context, find *FindWorkspaceSetting) ([]*storepb.WorkspaceSetting, error) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "109:  return workspaceSettings, nil",
          "110: }",
          "113:  if cache, ok := s.workspaceSettingCache.Load(find.Name); ok {",
          "114:   return cache.(*storepb.WorkspaceSetting), nil",
          "115:  }",
          "118:  if err != nil {",
          "119:   return nil, err",
          "120:  }",
          "",
          "[Removed Lines]",
          "112: func (s *Store) GetWorkspaceSettingV1(ctx context.Context, find *FindWorkspaceSetting) (*storepb.WorkspaceSetting, error) {",
          "117:  list, err := s.ListWorkspaceSettingsV1(ctx, find)",
          "",
          "[Added Lines]",
          "78: func (s *Store) GetWorkspaceSetting(ctx context.Context, find *FindWorkspaceSetting) (*storepb.WorkspaceSetting, error) {",
          "83:  list, err := s.ListWorkspaceSettings(ctx, find)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "128: }",
          "130: func (s *Store) GetWorkspaceBasicSetting(ctx context.Context) (*storepb.WorkspaceBasicSetting, error) {",
          "132:   Name: storepb.WorkspaceSettingKey_WORKSPACE_SETTING_BASIC.String(),",
          "133:  })",
          "134:  if err != nil {",
          "",
          "[Removed Lines]",
          "131:  workspaceSetting, err := s.GetWorkspaceSettingV1(ctx, &FindWorkspaceSetting{",
          "",
          "[Added Lines]",
          "97:  workspaceSetting, err := s.GetWorkspaceSetting(ctx, &FindWorkspaceSetting{",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "143: }",
          "145: func (s *Store) GetWorkspaceGeneralSetting(ctx context.Context) (*storepb.WorkspaceGeneralSetting, error) {",
          "147:   Name: storepb.WorkspaceSettingKey_WORKSPACE_SETTING_GENERAL.String(),",
          "148:  })",
          "149:  if err != nil {",
          "",
          "[Removed Lines]",
          "146:  workspaceSetting, err := s.GetWorkspaceSettingV1(ctx, &FindWorkspaceSetting{",
          "",
          "[Added Lines]",
          "112:  workspaceSetting, err := s.GetWorkspaceSetting(ctx, &FindWorkspaceSetting{",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "158: }",
          "160: func (s *Store) GetWorkspaceMemoRelatedSetting(ctx context.Context) (*storepb.WorkspaceMemoRelatedSetting, error) {",
          "162:   Name: storepb.WorkspaceSettingKey_WORKSPACE_SETTING_MEMO_RELATED.String(),",
          "163:  })",
          "164:  if err != nil {",
          "",
          "[Removed Lines]",
          "161:  workspaceSetting, err := s.GetWorkspaceSettingV1(ctx, &FindWorkspaceSetting{",
          "",
          "[Added Lines]",
          "127:  workspaceSetting, err := s.GetWorkspaceSetting(ctx, &FindWorkspaceSetting{",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "179: )",
          "181: func (s *Store) GetWorkspaceStorageSetting(ctx context.Context) (*storepb.WorkspaceStorageSetting, error) {",
          "183:   Name: storepb.WorkspaceSettingKey_WORKSPACE_SETTING_STORAGE.String(),",
          "184:  })",
          "185:  if err != nil {",
          "",
          "[Removed Lines]",
          "182:  workspaceSetting, err := s.GetWorkspaceSettingV1(ctx, &FindWorkspaceSetting{",
          "",
          "[Added Lines]",
          "148:  workspaceSetting, err := s.GetWorkspaceSetting(ctx, &FindWorkspaceSetting{",
          "",
          "---------------"
        ],
        "test/store/idp_test.go||test/store/idp_test.go": [
          "File: test/store/idp_test.go -> test/store/idp_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: func TestIdentityProviderStore(t *testing.T) {",
          "14:  ctx := context.Background()",
          "15:  ts := NewTestingStore(ctx, t)",
          "17:   Name:             \"GitHub OAuth\",",
          "18:   Type:             storepb.IdentityProvider_OAUTH2,",
          "19:   IdentifierFilter: \"\",",
          "",
          "[Removed Lines]",
          "16:  createdIDP, err := ts.CreateIdentityProviderV1(ctx, &storepb.IdentityProvider{",
          "",
          "[Added Lines]",
          "16:  createdIDP, err := ts.CreateIdentityProvider(ctx, &storepb.IdentityProvider{",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36:   },",
          "37:  })",
          "38:  require.NoError(t, err)",
          "40:   ID: &createdIDP.Id,",
          "41:  })",
          "42:  require.NoError(t, err)",
          "43:  require.NotNil(t, idp)",
          "44:  require.Equal(t, createdIDP, idp)",
          "45:  newName := \"My GitHub OAuth\"",
          "47:   ID:   idp.Id,",
          "48:   Name: &newName,",
          "49:  })",
          "",
          "[Removed Lines]",
          "39:  idp, err := ts.GetIdentityProviderV1(ctx, &store.FindIdentityProvider{",
          "46:  updatedIdp, err := ts.UpdateIdentityProviderV1(ctx, &store.UpdateIdentityProviderV1{",
          "",
          "[Added Lines]",
          "39:  idp, err := ts.GetIdentityProvider(ctx, &store.FindIdentityProvider{",
          "46:  updatedIdp, err := ts.UpdateIdentityProvider(ctx, &store.UpdateIdentityProviderV1{",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "53:   ID: idp.Id,",
          "54:  })",
          "55:  require.NoError(t, err)",
          "57:  require.NoError(t, err)",
          "58:  require.Equal(t, 0, len(idpList))",
          "59:  ts.Close()",
          "",
          "[Removed Lines]",
          "56:  idpList, err := ts.ListIdentityProvidersV1(ctx, &store.FindIdentityProvider{})",
          "",
          "[Added Lines]",
          "56:  idpList, err := ts.ListIdentityProviders(ctx, &store.FindIdentityProvider{})",
          "",
          "---------------"
        ],
        "test/store/storage_test.go||test/store/storage_test.go": [
          "File: test/store/storage_test.go -> test/store/storage_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  \"github.com/stretchr/testify/require\"",
          "9:  \"github.com/usememos/memos/store\"",
          "10: )",
          "12: func TestStorageStore(t *testing.T) {",
          "13:  ctx := context.Background()",
          "14:  ts := NewTestingStore(ctx, t)",
          "19:  })",
          "20:  require.NoError(t, err)",
          "21:  newStorageName := \"new_storage_name\"",
          "24:   Name: &newStorageName,",
          "25:  })",
          "26:  require.NoError(t, err)",
          "",
          "[Removed Lines]",
          "15:  storage, err := ts.CreateStorage(ctx, &store.Storage{",
          "16:   Name:   \"test_storage\",",
          "17:   Type:   \"S3\",",
          "18:   Config: \"{}\",",
          "22:  updatedStorage, err := ts.UpdateStorage(ctx, &store.UpdateStorage{",
          "23:   ID:   storage.ID,",
          "",
          "[Added Lines]",
          "9:  storepb \"github.com/usememos/memos/proto/gen/store\"",
          "16:  storage, err := ts.CreateStorage(ctx, &storepb.Storage{",
          "17:   Name: \"test_storage\",",
          "18:   Type: storepb.Storage_S3,",
          "19:   Config: &storepb.StorageConfig{",
          "20:    StorageConfig: &storepb.StorageConfig_S3Config{",
          "21:     S3Config: &storepb.S3Config{",
          "22:      EndPoint: \"http://localhost:9000\",",
          "23:     },",
          "24:    },",
          "25:   },",
          "29:  updatedStorage, err := ts.UpdateStorage(ctx, &store.UpdateStorageV1{",
          "30:   ID:   storage.Id,",
          "31:   Type: storage.Type,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30:  require.Equal(t, 1, len(storageList))",
          "31:  require.Equal(t, updatedStorage, storageList[0])",
          "32:  err = ts.DeleteStorage(ctx, &store.DeleteStorage{",
          "34:  })",
          "35:  require.NoError(t, err)",
          "36:  storageList, err = ts.ListStorages(ctx, &store.FindStorage{})",
          "",
          "[Removed Lines]",
          "33:   ID: storage.ID,",
          "",
          "[Added Lines]",
          "41:   ID: storage.Id,",
          "",
          "---------------"
        ],
        "test/store/workspace_setting_test.go||test/store/workspace_setting_test.go": [
          "File: test/store/workspace_setting_test.go -> test/store/workspace_setting_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: func TestWorkspaceSettingV1Store(t *testing.T) {",
          "14:  ctx := context.Background()",
          "15:  ts := NewTestingStore(ctx, t)",
          "17:   Key: storepb.WorkspaceSettingKey_WORKSPACE_SETTING_GENERAL,",
          "18:   Value: &storepb.WorkspaceSetting_GeneralSetting{",
          "19:    GeneralSetting: &storepb.WorkspaceGeneralSetting{",
          "",
          "[Removed Lines]",
          "16:  workspaceSetting, err := ts.UpsertWorkspaceSettingV1(ctx, &storepb.WorkspaceSetting{",
          "",
          "[Added Lines]",
          "16:  workspaceSetting, err := ts.UpsertWorkspaceSetting(ctx, &storepb.WorkspaceSetting{",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "22:   },",
          "23:  })",
          "24:  require.NoError(t, err)",
          "26:  require.NoError(t, err)",
          "27:  require.Equal(t, 1, len(list))",
          "28:  require.Equal(t, workspaceSetting, list[0])",
          "",
          "[Removed Lines]",
          "25:  list, err := ts.ListWorkspaceSettingsV1(ctx, &store.FindWorkspaceSetting{})",
          "",
          "[Added Lines]",
          "25:  list, err := ts.ListWorkspaceSettings(ctx, &store.FindWorkspaceSetting{})",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "52743017a36b811014ff10f66cda94d3e7929f70",
      "candidate_info": {
        "commit_hash": "52743017a36b811014ff10f66cda94d3e7929f70",
        "repo": "usememos/memos",
        "commit_url": "https://github.com/usememos/memos/commit/52743017a36b811014ff10f66cda94d3e7929f70",
        "files": [
          ".gitignore",
          "server/frontend/frontend.go",
          "server/server.go"
        ],
        "message": "chore: implement memo route",
        "before_after_code_files": [
          "server/frontend/frontend.go||server/frontend/frontend.go",
          "server/server.go||server/server.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "server/server.go||server/server.go"
          ],
          "candidate": [
            "server/server.go||server/server.go"
          ]
        }
      },
      "candidate_diff": {
        "server/frontend/frontend.go||server/frontend/frontend.go": [
          "File: server/frontend/frontend.go -> server/frontend/frontend.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"embed\"",
          "5:  \"io/fs\"",
          "6:  \"net/http\"",
          "7:  \"strings\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5:  \"fmt\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10:  \"github.com/labstack/echo/v4/middleware\"",
          "12:  \"github.com/usememos/memos/internal/util\"",
          "13: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14:  \"github.com/usememos/memos/server/profile\"",
          "15:  \"github.com/usememos/memos/store\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "19: var rawIndexHTML string",
          "24:  e.Use(middleware.StaticWithConfig(middleware.StaticConfig{",
          "",
          "[Removed Lines]",
          "21: func Serve(e *echo.Echo) {",
          "",
          "[Added Lines]",
          "24: type FrontendService struct {",
          "25:  Profile *profile.Profile",
          "26:  Store   *store.Store",
          "27: }",
          "29: func NewFrontendService(profile *profile.Profile, store *store.Store) *FrontendService {",
          "30:  return &FrontendService{",
          "31:   Profile: profile,",
          "32:   Store:   store,",
          "33:  }",
          "34: }",
          "36: func (s *FrontendService) Serve(e *echo.Echo) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "44:   Filesystem: getFileSystem(\"dist/assets\"),",
          "45:  }))",
          "48: }",
          "51:  e.GET(\"/m/:memoID\", func(c echo.Context) error {",
          "53:   return c.HTML(http.StatusOK, indexHTML)",
          "54:  })",
          "55: }",
          "57: func getFileSystem(path string) http.FileSystem {",
          "58:  fs, err := fs.Sub(embeddedFiles, path)",
          "59:  if err != nil {",
          "",
          "[Removed Lines]",
          "47:  registerRoutes(e)",
          "50: func registerRoutes(e *echo.Echo) {",
          "52:   indexHTML := strings.ReplaceAll(rawIndexHTML, \"<!-- memos.metadata -->\", \"<meta name=\\\"memos-memo-id\\\" content=\\\"\"+c.Param(\"memoID\")+\"\\\">\"+\"\\n\")",
          "",
          "[Added Lines]",
          "62:  s.registerRoutes(e)",
          "65: func (s *FrontendService) registerRoutes(e *echo.Echo) {",
          "67:   ctx := c.Request().Context()",
          "68:   memoID, err := util.ConvertStringToInt32(c.Param(\"memoID\"))",
          "69:   if err != nil {",
          "70:    return echo.NewHTTPError(http.StatusBadRequest, \"invalid memo id\")",
          "71:   }",
          "73:   memo, err := s.Store.GetMemo(ctx, &store.FindMemo{",
          "74:    ID: &memoID,",
          "75:   })",
          "76:   if err != nil {",
          "77:    return echo.NewHTTPError(http.StatusInternalServerError, \"failed to retrieve memo\")",
          "78:   }",
          "79:   if memo == nil {",
          "80:    return echo.NewHTTPError(http.StatusNotFound, \"memo not found\")",
          "81:   }",
          "82:   if memo.Visibility != store.Public {",
          "83:    return echo.NewHTTPError(http.StatusForbidden, \"memo is not public\")",
          "84:   }",
          "85:   indexHTML := strings.ReplaceAll(rawIndexHTML, \"<!-- memos.metadata -->\", generateMemoMetadata(memo))",
          "90: func generateMemoMetadata(memo *store.Memo) string {",
          "91:  metadataList := []string{",
          "92:   fmt.Sprintf(`<meta name=\"description\" content=\"%s\" />`, memo.Content),",
          "93:   fmt.Sprintf(`<meta property=\"og:title\" content=\"%s\" />`, fmt.Sprintf(\"Memos - %d\", memo.ID)),",
          "94:   fmt.Sprintf(`<meta property=\"og:description\" content=\"%s\" />`, memo.Content),",
          "95:   fmt.Sprintf(`<meta property=\"og:image\" content=\"%s\" />`, \"https://www.usememos.com/logo.png\"),",
          "96:   `<meta property=\"og:type\" content=\"website\" />`,",
          "98:   fmt.Sprintf(`<meta name=\"twitter:title\" content=\"%s\" />`, fmt.Sprintf(\"Memos - %d\", memo.ID)),",
          "99:   fmt.Sprintf(`<meta name=\"twitter:description\" content=\"%s\" />`, memo.Content),",
          "100:   fmt.Sprintf(`<meta name=\"twitter:image\" content=\"%s\" />`, \"https://www.usememos.com/logo.png\"),",
          "101:   `<meta name=\"twitter:card\" content=\"summary\" />`,",
          "102:  }",
          "103:  return strings.Join(metadataList, \"\\n\")",
          "104: }",
          "",
          "---------------"
        ],
        "server/server.go||server/server.go": [
          "File: server/server.go -> server/server.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:  Profile *profile.Profile",
          "34:  Store   *store.Store",
          "40:  backupRunner *backup.BackupRunner",
          "41:  telegramBot  *telegram.Bot",
          "",
          "[Removed Lines]",
          "37:  apiV2Service *apiv2.APIV2Service",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "84:  s.ID = serverID",
          "90:  if profile.Mode == \"dev\" || profile.Mode == \"demo\" {",
          "",
          "[Removed Lines]",
          "87:  frontend.Serve(e)",
          "",
          "[Added Lines]",
          "84:  frontendService := frontend.NewFrontendService(profile, store)",
          "85:  frontendService.Serve(e)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "110:  apiV1Service := apiv1.NewAPIV1Service(s.Secret, profile, store, s.telegramBot)",
          "111:  apiV1Service.Register(rootGroup)",
          "116:   return nil, errors.Wrap(err, \"failed to register gRPC gateway\")",
          "117:  }",
          "",
          "[Removed Lines]",
          "113:  s.apiV2Service = apiv2.NewAPIV2Service(s.Secret, profile, store, s.Profile.Port+1)",
          "115:  if err := s.apiV2Service.RegisterGateway(ctx, e); err != nil {",
          "",
          "[Added Lines]",
          "111:  apiV2Service := apiv2.NewAPIV2Service(s.Secret, profile, store, s.Profile.Port+1)",
          "113:  if err := apiV2Service.RegisterGateway(ctx, e); err != nil {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3e50bee7dae1f043737d40c0b7ba60e3a73977c3",
      "candidate_info": {
        "commit_hash": "3e50bee7dae1f043737d40c0b7ba60e3a73977c3",
        "repo": "usememos/memos",
        "commit_url": "https://github.com/usememos/memos/commit/3e50bee7dae1f043737d40c0b7ba60e3a73977c3",
        "files": [
          "api/auth/auth.go",
          "api/resource/resource.go",
          "api/rss/rss.go",
          "api/v1/auth.go",
          "api/v1/common.go",
          "api/v1/docs.go",
          "api/v1/http_getter.go",
          "api/v1/idp.go",
          "api/v1/jwt.go",
          "api/v1/memo.go",
          "api/v1/memo_organizer.go",
          "api/v1/memo_relation.go",
          "api/v1/resource.go",
          "api/v1/storage.go",
          "api/v1/swagger.md",
          "api/v1/swagger.yaml",
          "api/v1/system.go",
          "api/v1/system_setting.go",
          "api/v1/tag.go",
          "api/v1/tag_test.go",
          "api/v1/user.go",
          "api/v1/v1.go",
          "api/v2/acl.go",
          "api/v2/acl_config.go",
          "api/v2/activity_service.go",
          "api/v2/apidocs.swagger.md",
          "api/v2/apidocs.swagger.yaml",
          "api/v2/auth_service.go",
          "api/v2/common.go",
          "api/v2/inbox_service.go",
          "api/v2/memo_relation_service.go",
          "api/v2/memo_resource_service.go",
          "api/v2/memo_service.go",
          "api/v2/reaction_service.go",
          "api/v2/resource_name.go",
          "api/v2/resource_service.go",
          "api/v2/tag_service.go",
          "api/v2/user_service.go",
          "api/v2/v2.go",
          "api/v2/webhook_service.go",
          "api/v2/workspace_service.go",
          "api/v2/workspace_setting_service.go",
          "internal/jobs/presign_link.go",
          "server/frontend/frontend.go",
          "server/integration/telegram.go",
          "server/route/api/auth/auth.go",
          "server/route/api/v1/auth.go",
          "server/route/api/v1/common.go",
          "server/route/api/v1/docs.go",
          "server/route/api/v1/http_getter.go",
          "server/route/api/v1/idp.go",
          "server/route/api/v1/jwt.go",
          "server/route/api/v1/memo.go",
          "server/route/api/v1/memo_organizer.go",
          "server/route/api/v1/memo_relation.go",
          "server/route/api/v1/resource.go",
          "server/route/api/v1/storage.go",
          "server/route/api/v1/swagger.md",
          "server/route/api/v1/swagger.yaml",
          "server/route/api/v1/system.go",
          "server/route/api/v1/system_setting.go",
          "server/route/api/v1/tag.go",
          "server/route/api/v1/tag_test.go",
          "server/route/api/v1/user.go",
          "server/route/api/v1/v1.go",
          "server/route/api/v2/acl.go",
          "server/route/api/v2/acl_config.go",
          "server/route/api/v2/activity_service.go",
          "server/route/api/v2/apidocs.swagger.md",
          "server/route/api/v2/apidocs.swagger.yaml",
          "server/route/api/v2/auth_service.go",
          "server/route/api/v2/common.go",
          "server/route/api/v2/inbox_service.go",
          "server/route/api/v2/memo_relation_service.go",
          "server/route/api/v2/memo_resource_service.go",
          "server/route/api/v2/memo_service.go",
          "server/route/api/v2/reaction_service.go",
          "server/route/api/v2/resource_name.go",
          "server/route/api/v2/resource_service.go",
          "server/route/api/v2/tag_service.go",
          "server/route/api/v2/user_service.go",
          "server/route/api/v2/v2.go",
          "server/route/api/v2/webhook_service.go",
          "server/route/api/v2/workspace_service.go",
          "server/route/api/v2/workspace_setting_service.go",
          "server/route/frontend/frontend.go",
          "server/route/resource/resource.go",
          "server/route/rss/rss.go",
          "server/server.go"
        ],
        "message": "chore: move api directory",
        "before_after_code_files": [
          "internal/jobs/presign_link.go||internal/jobs/presign_link.go",
          "server/integration/telegram.go||server/integration/telegram.go",
          "api/v1/auth.go||server/route/api/v1/auth.go",
          "api/v1/jwt.go||server/route/api/v1/jwt.go",
          "api/v1/v1.go||server/route/api/v1/v1.go",
          "api/v2/acl.go||server/route/api/v2/acl.go",
          "api/v2/auth_service.go||server/route/api/v2/auth_service.go",
          "api/v2/memo_service.go||server/route/api/v2/memo_service.go",
          "api/v2/user_service.go||server/route/api/v2/user_service.go",
          "server/server.go||server/server.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "internal/jobs/presign_link.go||internal/jobs/presign_link.go",
            "server/integration/telegram.go||server/integration/telegram.go",
            "server/server.go||server/server.go"
          ],
          "candidate": [
            "internal/jobs/presign_link.go||internal/jobs/presign_link.go",
            "server/integration/telegram.go||server/integration/telegram.go",
            "server/server.go||server/server.go"
          ]
        }
      },
      "candidate_diff": {
        "internal/jobs/presign_link.go||internal/jobs/presign_link.go": [
          "File: internal/jobs/presign_link.go -> internal/jobs/presign_link.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:  \"github.com/pkg/errors\"",
          "10:  \"go.uber.org/zap\"",
          "13:  \"github.com/usememos/memos/internal/log\"",
          "14:  \"github.com/usememos/memos/plugin/storage/s3\"",
          "15:  \"github.com/usememos/memos/store\"",
          "16: )",
          "",
          "[Removed Lines]",
          "12:  apiv1 \"github.com/usememos/memos/api/v1\"",
          "",
          "[Added Lines]",
          "14:  apiv1 \"github.com/usememos/memos/server/route/api/v1\"",
          "",
          "---------------"
        ],
        "server/integration/telegram.go||server/integration/telegram.go": [
          "File: server/integration/telegram.go -> server/integration/telegram.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:  \"github.com/lithammer/shortuuid/v4\"",
          "13:  \"github.com/pkg/errors\"",
          "16:  \"github.com/usememos/memos/plugin/telegram\"",
          "17:  \"github.com/usememos/memos/plugin/webhook\"",
          "18:  storepb \"github.com/usememos/memos/proto/gen/store\"",
          "19:  \"github.com/usememos/memos/store\"",
          "20: )",
          "",
          "[Removed Lines]",
          "15:  apiv1 \"github.com/usememos/memos/api/v1\"",
          "",
          "[Added Lines]",
          "18:  apiv1 \"github.com/usememos/memos/server/route/api/v1\"",
          "",
          "---------------"
        ],
        "api/v1/auth.go||server/route/api/v1/auth.go": [
          "File: api/v1/auth.go -> server/route/api/v1/auth.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:  \"github.com/pkg/errors\"",
          "14:  \"golang.org/x/crypto/bcrypt\"",
          "17:  \"github.com/usememos/memos/internal/util\"",
          "18:  \"github.com/usememos/memos/plugin/idp\"",
          "19:  \"github.com/usememos/memos/plugin/idp/oauth2\"",
          "20:  storepb \"github.com/usememos/memos/proto/gen/store\"",
          "21:  \"github.com/usememos/memos/store\"",
          "22: )",
          "",
          "[Removed Lines]",
          "16:  \"github.com/usememos/memos/api/auth\"",
          "",
          "[Added Lines]",
          "20:  \"github.com/usememos/memos/server/route/api/auth\"",
          "",
          "---------------"
        ],
        "api/v1/jwt.go||server/route/api/v1/jwt.go": [
          "File: api/v1/jwt.go -> server/route/api/v1/jwt.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:  \"github.com/pkg/errors\"",
          "11:  \"go.uber.org/zap\"",
          "14:  \"github.com/usememos/memos/internal/log\"",
          "15:  \"github.com/usememos/memos/internal/util\"",
          "16:  storepb \"github.com/usememos/memos/proto/gen/store\"",
          "17:  \"github.com/usememos/memos/store\"",
          "18: )",
          "",
          "[Removed Lines]",
          "13:  \"github.com/usememos/memos/api/auth\"",
          "",
          "[Added Lines]",
          "16:  \"github.com/usememos/memos/server/route/api/auth\"",
          "",
          "---------------"
        ],
        "api/v1/v1.go||server/route/api/v1/v1.go": [
          "File: api/v1/v1.go -> server/route/api/v1/v1.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  \"github.com/labstack/echo/v4\"",
          "8:  \"github.com/labstack/echo/v4/middleware\"",
          "12:  \"github.com/usememos/memos/plugin/telegram\"",
          "13:  \"github.com/usememos/memos/server/profile\"",
          "14:  \"github.com/usememos/memos/store\"",
          "15: )",
          "",
          "[Removed Lines]",
          "10:  \"github.com/usememos/memos/api/resource\"",
          "11:  \"github.com/usememos/memos/api/rss\"",
          "",
          "[Added Lines]",
          "12:  \"github.com/usememos/memos/server/route/resource\"",
          "13:  \"github.com/usememos/memos/server/route/rss\"",
          "",
          "---------------"
        ],
        "api/v2/acl.go||server/route/api/v2/acl.go": [
          "File: api/v2/acl.go -> server/route/api/v2/acl.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:  \"google.golang.org/grpc/metadata\"",
          "13:  \"google.golang.org/grpc/status\"",
          "16:  \"github.com/usememos/memos/internal/util\"",
          "17:  storepb \"github.com/usememos/memos/proto/gen/store\"",
          "18:  \"github.com/usememos/memos/store\"",
          "19: )",
          "",
          "[Removed Lines]",
          "15:  \"github.com/usememos/memos/api/auth\"",
          "",
          "[Added Lines]",
          "17:  \"github.com/usememos/memos/server/route/api/auth\"",
          "",
          "---------------"
        ],
        "api/v2/auth_service.go||server/route/api/v2/auth_service.go": [
          "File: api/v2/auth_service.go -> server/route/api/v2/auth_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:  \"google.golang.org/grpc/metadata\"",
          "15:  \"google.golang.org/grpc/status\"",
          "18:  \"github.com/usememos/memos/internal/util\"",
          "19:  \"github.com/usememos/memos/plugin/idp\"",
          "20:  \"github.com/usememos/memos/plugin/idp/oauth2\"",
          "",
          "[Removed Lines]",
          "17:  \"github.com/usememos/memos/api/auth\"",
          "",
          "[Added Lines]",
          "17:  \"github.com/usememos/memos/server/route/api/auth\"",
          "",
          "---------------"
        ],
        "api/v2/memo_service.go||server/route/api/v2/memo_service.go": [
          "File: api/v2/memo_service.go -> server/route/api/v2/memo_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "17:  \"google.golang.org/grpc/status\"",
          "18:  \"google.golang.org/protobuf/types/known/timestamppb\"",
          "21:  \"github.com/usememos/memos/internal/log\"",
          "22:  \"github.com/usememos/memos/internal/util\"",
          "23:  \"github.com/usememos/memos/plugin/webhook\"",
          "24:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "25:  storepb \"github.com/usememos/memos/proto/gen/store\"",
          "26:  \"github.com/usememos/memos/store\"",
          "27: )",
          "",
          "[Removed Lines]",
          "20:  apiv1 \"github.com/usememos/memos/api/v1\"",
          "",
          "[Added Lines]",
          "25:  apiv1 \"github.com/usememos/memos/server/route/api/v1\"",
          "",
          "---------------"
        ],
        "api/v2/user_service.go||server/route/api/v2/user_service.go": [
          "File: api/v2/user_service.go -> server/route/api/v2/user_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "16:  \"google.golang.org/grpc/status\"",
          "17:  \"google.golang.org/protobuf/types/known/timestamppb\"",
          "20:  \"github.com/usememos/memos/internal/util\"",
          "21:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "22:  storepb \"github.com/usememos/memos/proto/gen/store\"",
          "23:  \"github.com/usememos/memos/store\"",
          "24: )",
          "",
          "[Removed Lines]",
          "19:  \"github.com/usememos/memos/api/auth\"",
          "",
          "[Added Lines]",
          "22:  \"github.com/usememos/memos/server/route/api/auth\"",
          "",
          "---------------"
        ],
        "server/server.go||server/server.go": [
          "File: server/server.go -> server/server.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:  \"github.com/labstack/echo/v4/middleware\"",
          "13:  \"github.com/pkg/errors\"",
          "17:  \"github.com/usememos/memos/plugin/telegram\"",
          "19:  \"github.com/usememos/memos/server/integration\"",
          "20:  \"github.com/usememos/memos/server/profile\"",
          "21:  versionchecker \"github.com/usememos/memos/server/service/version_checker\"",
          "",
          "[Removed Lines]",
          "15:  apiv1 \"github.com/usememos/memos/api/v1\"",
          "16:  apiv2 \"github.com/usememos/memos/api/v2\"",
          "18:  \"github.com/usememos/memos/server/frontend\"",
          "",
          "[Added Lines]",
          "15:  apiv1 \"github.com/usememos/memos/server/route/api/v1\"",
          "16:  apiv2 \"github.com/usememos/memos/server/route/api/v2\"",
          "18:  \"github.com/usememos/memos/server/route/frontend\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5f2a624c0c7e0060a651dfd2cc24fc98ffe013c6",
      "candidate_info": {
        "commit_hash": "5f2a624c0c7e0060a651dfd2cc24fc98ffe013c6",
        "repo": "usememos/memos",
        "commit_url": "https://github.com/usememos/memos/commit/5f2a624c0c7e0060a651dfd2cc24fc98ffe013c6",
        "files": [
          "server/route/api/v2/auth_service.go",
          "server/server.go"
        ],
        "message": "chore: tweak imports order",
        "before_after_code_files": [
          "server/route/api/v2/auth_service.go||server/route/api/v2/auth_service.go",
          "server/server.go||server/server.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "server/server.go||server/server.go"
          ],
          "candidate": [
            "server/server.go||server/server.go"
          ]
        }
      },
      "candidate_diff": {
        "server/route/api/v2/auth_service.go||server/route/api/v2/auth_service.go": [
          "File: server/route/api/v2/auth_service.go -> server/route/api/v2/auth_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:  \"google.golang.org/grpc/metadata\"",
          "15:  \"google.golang.org/grpc/status\"",
          "18:  \"github.com/usememos/memos/internal/util\"",
          "19:  \"github.com/usememos/memos/plugin/idp\"",
          "20:  \"github.com/usememos/memos/plugin/idp/oauth2\"",
          "21:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "22:  \"github.com/usememos/memos/store\"",
          "23: )",
          "",
          "[Removed Lines]",
          "17:  \"github.com/usememos/memos/server/route/api/auth\"",
          "",
          "[Added Lines]",
          "21:  \"github.com/usememos/memos/server/route/api/auth\"",
          "",
          "---------------"
        ],
        "server/server.go||server/server.go": [
          "File: server/server.go -> server/server.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:  \"github.com/labstack/echo/v4/middleware\"",
          "13:  \"github.com/pkg/errors\"",
          "17:  \"github.com/usememos/memos/plugin/telegram\"",
          "19:  \"github.com/usememos/memos/server/integration\"",
          "20:  \"github.com/usememos/memos/server/profile\"",
          "21:  versionchecker \"github.com/usememos/memos/server/service/version_checker\"",
          "22:  \"github.com/usememos/memos/store\"",
          "23: )",
          "",
          "[Removed Lines]",
          "15:  apiv1 \"github.com/usememos/memos/server/route/api/v1\"",
          "16:  apiv2 \"github.com/usememos/memos/server/route/api/v2\"",
          "18:  \"github.com/usememos/memos/server/route/frontend\"",
          "",
          "[Added Lines]",
          "18:  apiv1 \"github.com/usememos/memos/server/route/api/v1\"",
          "19:  apiv2 \"github.com/usememos/memos/server/route/api/v2\"",
          "20:  \"github.com/usememos/memos/server/route/frontend\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cc3a47fc65ec23b9b24cc5b9d4709b9b1755f722",
      "candidate_info": {
        "commit_hash": "cc3a47fc65ec23b9b24cc5b9d4709b9b1755f722",
        "repo": "usememos/memos",
        "commit_url": "https://github.com/usememos/memos/commit/cc3a47fc65ec23b9b24cc5b9d4709b9b1755f722",
        "files": [
          "api/v1/auth/auth.go",
          "api/v1/idp.go",
          "api/v1/jwt.go",
          "api/v1/memo.go",
          "api/v1/memo_organizer.go",
          "api/v1/memo_resource.go",
          "api/v1/resource.go",
          "api/v1/shortcut.go",
          "api/v1/storage.go",
          "api/v1/system.go",
          "api/v1/system_setting.go",
          "api/v1/tag.go",
          "api/v1/user.go",
          "api/v1/user_setting.go",
          "api/v2/auth/auth.go",
          "api/v2/auth/config.go",
          "api/v2/user_service.go",
          "api/v2/v2.go",
          "server/server.go"
        ],
        "message": "feat: impl auth interceptor (#2055)\n\n* feat: impl auth interceptor\n\n* chore: update\n\n* chore: update\n\n* chore: update",
        "before_after_code_files": [
          "api/v1/auth/auth.go||api/v1/auth/auth.go",
          "api/v1/idp.go||api/v1/idp.go",
          "api/v1/jwt.go||api/v1/jwt.go",
          "api/v1/memo.go||api/v1/memo.go",
          "api/v1/memo_organizer.go||api/v1/memo_organizer.go",
          "api/v1/memo_resource.go||api/v1/memo_resource.go",
          "api/v1/resource.go||api/v1/resource.go",
          "api/v1/shortcut.go||api/v1/shortcut.go",
          "api/v1/storage.go||api/v1/storage.go",
          "api/v1/system.go||api/v1/system.go",
          "api/v1/system_setting.go||api/v1/system_setting.go",
          "api/v1/tag.go||api/v1/tag.go",
          "api/v1/user.go||api/v1/user.go",
          "api/v1/user_setting.go||api/v1/user_setting.go",
          "api/v2/auth/auth.go||api/v2/auth/auth.go",
          "api/v2/auth/config.go||api/v2/auth/config.go",
          "api/v2/user_service.go||api/v2/user_service.go",
          "api/v2/v2.go||api/v2/v2.go",
          "server/server.go||server/server.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "server/server.go||server/server.go"
          ],
          "candidate": [
            "server/server.go||server/server.go"
          ]
        }
      },
      "candidate_diff": {
        "api/v1/auth/auth.go||api/v1/auth/auth.go": [
          "File: api/v1/auth/auth.go -> api/v1/auth/auth.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: )",
          "14: const (",
          "15:  issuer = \"memos\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17:  UserIDContextKey = \"user-id\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "23:  apiTokenDuration         = 2 * time.Hour",
          "24:  accessTokenDuration      = 24 * time.Hour",
          "25:  refreshTokenDuration     = 7 * 24 * time.Hour",
          "34:  CookieExpDuration = refreshTokenDuration - 1*time.Minute",
          "36:  AccessTokenCookieName = \"memos.access-token\"",
          "",
          "[Removed Lines]",
          "27:  RefreshThresholdDuration = 1 * time.Hour",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "api/v1/idp.go||api/v1/idp.go": [
          "File: api/v1/idp.go -> api/v1/idp.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  \"strconv\"",
          "9:  \"github.com/labstack/echo/v4\"",
          "10:  \"github.com/usememos/memos/store\"",
          "11: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10:  \"github.com/usememos/memos/api/v1/auth\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "66: func (s *APIV1Service) registerIdentityProviderRoutes(g *echo.Group) {",
          "67:  g.POST(\"/idp\", func(c echo.Context) error {",
          "68:   ctx := c.Request().Context()",
          "70:   if !ok {",
          "71:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "72:   }",
          "",
          "[Removed Lines]",
          "69:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "70:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "101:  g.PATCH(\"/idp/:idpId\", func(c echo.Context) error {",
          "102:   ctx := c.Request().Context()",
          "104:   if !ok {",
          "105:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "106:   }",
          "",
          "[Removed Lines]",
          "103:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "104:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "147:    return echo.NewHTTPError(http.StatusInternalServerError, \"Failed to find identity provider list\").SetInternal(err)",
          "148:   }",
          "151:   isHostUser := false",
          "152:   if ok {",
          "153:    user, err := s.Store.GetUser(ctx, &store.FindUser{",
          "",
          "[Removed Lines]",
          "150:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "151:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "176:  g.GET(\"/idp/:idpId\", func(c echo.Context) error {",
          "177:   ctx := c.Request().Context()",
          "179:   if !ok {",
          "180:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "181:   }",
          "",
          "[Removed Lines]",
          "178:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "179:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "210:  g.DELETE(\"/idp/:idpId\", func(c echo.Context) error {",
          "211:   ctx := c.Request().Context()",
          "213:   if !ok {",
          "214:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "215:   }",
          "",
          "[Removed Lines]",
          "212:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "213:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------"
        ],
        "api/v1/jwt.go||api/v1/jwt.go": [
          "File: api/v1/jwt.go -> api/v1/jwt.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5:  \"net/http\"",
          "6:  \"strconv\"",
          "7:  \"strings\"",
          "10:  \"github.com/golang-jwt/jwt/v4\"",
          "11:  \"github.com/labstack/echo/v4\"",
          "",
          "[Removed Lines]",
          "8:  \"time\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15:  \"github.com/usememos/memos/store\"",
          "16: )",
          "31: type Claims struct {",
          "",
          "[Removed Lines]",
          "18: const (",
          "22:  userIDContextKey = \"user-id\"",
          "23: )",
          "25: func getUserIDContextKey() string {",
          "26:  return userIDContextKey",
          "27: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "112:    return nil, errors.Errorf(\"unexpected access token kid=%v\", t.Header[\"kid\"])",
          "113:   })",
          "116:   if err != nil {",
          "117:    var ve *jwt.ValidationError",
          "118:    if errors.As(err, &ve) {",
          "",
          "[Removed Lines]",
          "115:   generateToken := time.Until(claims.ExpiresAt.Time) < auth.RefreshThresholdDuration",
          "",
          "[Added Lines]",
          "103:   generateToken := false",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "203:   }",
          "207:   return next(c)",
          "208:  }",
          "209: }",
          "",
          "[Removed Lines]",
          "206:   c.Set(getUserIDContextKey(), userID)",
          "",
          "[Added Lines]",
          "194:   c.Set(auth.UserIDContextKey, userID)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "228:   }",
          "229:   if user != nil {",
          "232:    return true",
          "233:   }",
          "234:  }",
          "",
          "[Removed Lines]",
          "231:    c.Set(getUserIDContextKey(), user.ID)",
          "",
          "[Added Lines]",
          "219:    c.Set(auth.UserIDContextKey, user.ID)",
          "",
          "---------------"
        ],
        "api/v1/memo.go||api/v1/memo.go": [
          "File: api/v1/memo.go -> api/v1/memo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:  \"github.com/labstack/echo/v4\"",
          "12:  \"github.com/pkg/errors\"",
          "13:  \"github.com/usememos/memos/store\"",
          "14: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13:  \"github.com/usememos/memos/api/v1/auth\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "113: func (s *APIV1Service) registerMemoRoutes(g *echo.Group) {",
          "114:  g.POST(\"/memo\", func(c echo.Context) error {",
          "115:   ctx := c.Request().Context()",
          "117:   if !ok {",
          "118:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "119:   }",
          "",
          "[Removed Lines]",
          "116:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "117:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "225:  g.PATCH(\"/memo/:memoId\", func(c echo.Context) error {",
          "226:   ctx := c.Request().Context()",
          "228:   if !ok {",
          "229:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "230:   }",
          "",
          "[Removed Lines]",
          "227:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "228:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "362:    }",
          "363:   }",
          "366:   if !ok {",
          "368:    if findMemoMessage.CreatorID == nil {",
          "",
          "[Removed Lines]",
          "365:   currentUserID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "366:   currentUserID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "449:    return echo.NewHTTPError(http.StatusNotFound, fmt.Sprintf(\"Memo not found: %d\", memoID))",
          "450:   }",
          "453:   if memo.Visibility == store.Private {",
          "454:    if !ok || memo.CreatorID != userID {",
          "455:     return echo.NewHTTPError(http.StatusForbidden, \"this memo is private only\")",
          "",
          "[Removed Lines]",
          "452:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "453:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "487:    return echo.NewHTTPError(http.StatusBadRequest, \"Missing user id to find memo\")",
          "488:   }",
          "491:   if !ok {",
          "492:    findMemoMessage.VisibilityList = []store.Visibility{store.Public}",
          "493:   } else {",
          "",
          "[Removed Lines]",
          "490:   currentUserID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "491:   currentUserID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "529:  g.GET(\"/memo/all\", func(c echo.Context) error {",
          "530:   ctx := c.Request().Context()",
          "531:   findMemoMessage := &store.FindMemo{}",
          "533:   if !ok {",
          "534:    findMemoMessage.VisibilityList = []store.Visibility{store.Public}",
          "535:   } else {",
          "",
          "[Removed Lines]",
          "532:   _, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "533:   _, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "590:  g.DELETE(\"/memo/:memoId\", func(c echo.Context) error {",
          "591:   ctx := c.Request().Context()",
          "593:   if !ok {",
          "594:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "595:   }",
          "",
          "[Removed Lines]",
          "592:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "593:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------"
        ],
        "api/v1/memo_organizer.go||api/v1/memo_organizer.go": [
          "File: api/v1/memo_organizer.go -> api/v1/memo_organizer.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  \"strconv\"",
          "9:  \"github.com/labstack/echo/v4\"",
          "10:  \"github.com/usememos/memos/store\"",
          "11: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10:  \"github.com/usememos/memos/api/v1/auth\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "28:    return echo.NewHTTPError(http.StatusBadRequest, fmt.Sprintf(\"ID is not a number: %s\", c.Param(\"memoId\"))).SetInternal(err)",
          "29:   }",
          "32:   if !ok {",
          "33:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "34:   }",
          "",
          "[Removed Lines]",
          "31:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "32:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------"
        ],
        "api/v1/memo_resource.go||api/v1/memo_resource.go": [
          "File: api/v1/memo_resource.go -> api/v1/memo_resource.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:  \"time\"",
          "10:  \"github.com/labstack/echo/v4\"",
          "11:  \"github.com/usememos/memos/store\"",
          "12: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11:  \"github.com/usememos/memos/api/v1/auth\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41:    return echo.NewHTTPError(http.StatusBadRequest, fmt.Sprintf(\"ID is not a number: %s\", c.Param(\"memoId\"))).SetInternal(err)",
          "42:   }",
          "45:   if !ok {",
          "46:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "47:   }",
          "",
          "[Removed Lines]",
          "44:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "45:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "98:  g.DELETE(\"/memo/:memoId/resource/:resourceId\", func(c echo.Context) error {",
          "99:   ctx := c.Request().Context()",
          "101:   if !ok {",
          "102:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "103:   }",
          "",
          "[Removed Lines]",
          "100:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "101:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------"
        ],
        "api/v1/resource.go||api/v1/resource.go": [
          "File: api/v1/resource.go -> api/v1/resource.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:  \"github.com/disintegration/imaging\"",
          "22:  \"github.com/labstack/echo/v4\"",
          "23:  \"github.com/pkg/errors\"",
          "24:  \"github.com/usememos/memos/common/log\"",
          "25:  \"github.com/usememos/memos/common/util\"",
          "26:  \"github.com/usememos/memos/plugin/storage/s3\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24:  \"github.com/usememos/memos/api/v1/auth\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82: func (s *APIV1Service) registerResourceRoutes(g *echo.Group) {",
          "83:  g.POST(\"/resource\", func(c echo.Context) error {",
          "84:   ctx := c.Request().Context()",
          "86:   if !ok {",
          "87:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "88:   }",
          "",
          "[Removed Lines]",
          "85:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "86:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "157:  g.POST(\"/resource/blob\", func(c echo.Context) error {",
          "158:   ctx := c.Request().Context()",
          "160:   if !ok {",
          "161:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "162:   }",
          "",
          "[Removed Lines]",
          "159:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "160:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "217:  g.GET(\"/resource\", func(c echo.Context) error {",
          "218:   ctx := c.Request().Context()",
          "220:   if !ok {",
          "221:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "222:   }",
          "",
          "[Removed Lines]",
          "219:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "220:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "244:  g.PATCH(\"/resource/:resourceId\", func(c echo.Context) error {",
          "245:   ctx := c.Request().Context()",
          "247:   if !ok {",
          "248:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "249:   }",
          "",
          "[Removed Lines]",
          "246:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "247:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "290:  g.DELETE(\"/resource/:resourceId\", func(c echo.Context) error {",
          "291:   ctx := c.Request().Context()",
          "293:   if !ok {",
          "294:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "295:   }",
          "",
          "[Removed Lines]",
          "292:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "293:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "345:   }",
          "349:   if resourceVisibility == store.Protected && (!ok || userID <= 0) {",
          "350:    return echo.NewHTTPError(http.StatusUnauthorized, \"Resource visibility not match\").SetInternal(err)",
          "351:   }",
          "",
          "[Removed Lines]",
          "348:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "349:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------"
        ],
        "api/v1/shortcut.go||api/v1/shortcut.go": [
          "File: api/v1/shortcut.go -> api/v1/shortcut.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:  \"github.com/labstack/echo/v4\"",
          "11:  \"github.com/pkg/errors\"",
          "12:  \"github.com/usememos/memos/store\"",
          "13: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12:  \"github.com/usememos/memos/api/v1/auth\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "57: func (s *APIV1Service) registerShortcutRoutes(g *echo.Group) {",
          "58:  g.POST(\"/shortcut\", func(c echo.Context) error {",
          "59:   ctx := c.Request().Context()",
          "61:   if !ok {",
          "62:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "63:   }",
          "",
          "[Removed Lines]",
          "60:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "61:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "85:  g.PATCH(\"/shortcut/:shortcutId\", func(c echo.Context) error {",
          "86:   ctx := c.Request().Context()",
          "88:   if !ok {",
          "89:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "90:   }",
          "",
          "[Removed Lines]",
          "87:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "88:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "137:  g.GET(\"/shortcut\", func(c echo.Context) error {",
          "138:   ctx := c.Request().Context()",
          "140:   if !ok {",
          "141:    return echo.NewHTTPError(http.StatusBadRequest, \"Missing user id to find shortcut\")",
          "142:   }",
          "",
          "[Removed Lines]",
          "139:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "140:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "176:  g.DELETE(\"/shortcut/:shortcutId\", func(c echo.Context) error {",
          "177:   ctx := c.Request().Context()",
          "179:   if !ok {",
          "180:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "181:   }",
          "",
          "[Removed Lines]",
          "178:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "179:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------"
        ],
        "api/v1/storage.go||api/v1/storage.go": [
          "File: api/v1/storage.go -> api/v1/storage.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  \"strconv\"",
          "9:  \"github.com/labstack/echo/v4\"",
          "10:  \"github.com/usememos/memos/store\"",
          "11: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10:  \"github.com/usememos/memos/api/v1/auth\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "64: func (s *APIV1Service) registerStorageRoutes(g *echo.Group) {",
          "65:  g.POST(\"/storage\", func(c echo.Context) error {",
          "66:   ctx := c.Request().Context()",
          "68:   if !ok {",
          "69:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "70:   }",
          "",
          "[Removed Lines]",
          "67:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "68:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "111:  g.PATCH(\"/storage/:storageId\", func(c echo.Context) error {",
          "112:   ctx := c.Request().Context()",
          "114:   if !ok {",
          "115:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "116:   }",
          "",
          "[Removed Lines]",
          "113:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "114:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "165:  g.GET(\"/storage\", func(c echo.Context) error {",
          "166:   ctx := c.Request().Context()",
          "168:   if !ok {",
          "169:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "170:   }",
          "",
          "[Removed Lines]",
          "167:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "168:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "199:  g.DELETE(\"/storage/:storageId\", func(c echo.Context) error {",
          "200:   ctx := c.Request().Context()",
          "202:   if !ok {",
          "203:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "204:   }",
          "",
          "[Removed Lines]",
          "201:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "202:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------"
        ],
        "api/v1/system.go||api/v1/system.go": [
          "File: api/v1/system.go -> api/v1/system.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5:  \"net/http\"",
          "7:  \"github.com/labstack/echo/v4\"",
          "8:  \"github.com/usememos/memos/common/log\"",
          "9:  \"github.com/usememos/memos/server/profile\"",
          "10:  \"github.com/usememos/memos/store\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8:  \"github.com/usememos/memos/api/v1/auth\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "141:  g.POST(\"/system/vacuum\", func(c echo.Context) error {",
          "142:   ctx := c.Request().Context()",
          "144:   if !ok {",
          "145:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "146:   }",
          "",
          "[Removed Lines]",
          "143:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "144:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------"
        ],
        "api/v1/system_setting.go||api/v1/system_setting.go": [
          "File: api/v1/system_setting.go -> api/v1/system_setting.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  \"strings\"",
          "9:  \"github.com/labstack/echo/v4\"",
          "10:  \"github.com/usememos/memos/store\"",
          "11: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10:  \"github.com/usememos/memos/api/v1/auth\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "186: func (s *APIV1Service) registerSystemSettingRoutes(g *echo.Group) {",
          "187:  g.POST(\"/system/setting\", func(c echo.Context) error {",
          "188:   ctx := c.Request().Context()",
          "190:   if !ok {",
          "191:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "192:   }",
          "",
          "[Removed Lines]",
          "189:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "190:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "237:  g.GET(\"/system/setting\", func(c echo.Context) error {",
          "238:   ctx := c.Request().Context()",
          "240:   if !ok {",
          "241:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "242:   }",
          "",
          "[Removed Lines]",
          "239:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "240:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------"
        ],
        "api/v1/tag.go||api/v1/tag.go": [
          "File: api/v1/tag.go -> api/v1/tag.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:  \"github.com/labstack/echo/v4\"",
          "11:  \"github.com/pkg/errors\"",
          "12:  \"github.com/usememos/memos/store\"",
          "13:  \"golang.org/x/exp/slices\"",
          "14: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12:  \"github.com/usememos/memos/api/v1/auth\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29: func (s *APIV1Service) registerTagRoutes(g *echo.Group) {",
          "30:  g.POST(\"/tag\", func(c echo.Context) error {",
          "31:   ctx := c.Request().Context()",
          "33:   if !ok {",
          "34:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "35:   }",
          "",
          "[Removed Lines]",
          "32:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "33:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "59:  g.GET(\"/tag\", func(c echo.Context) error {",
          "60:   ctx := c.Request().Context()",
          "62:   if !ok {",
          "63:    return echo.NewHTTPError(http.StatusBadRequest, \"Missing user id to find tag\")",
          "64:   }",
          "",
          "[Removed Lines]",
          "61:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "62:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "80:  g.GET(\"/tag/suggestion\", func(c echo.Context) error {",
          "81:   ctx := c.Request().Context()",
          "83:   if !ok {",
          "84:    return echo.NewHTTPError(http.StatusBadRequest, \"Missing user session\")",
          "85:   }",
          "",
          "[Removed Lines]",
          "82:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "83:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "125:  g.POST(\"/tag/delete\", func(c echo.Context) error {",
          "126:   ctx := c.Request().Context()",
          "128:   if !ok {",
          "129:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "130:   }",
          "",
          "[Removed Lines]",
          "127:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "128:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------"
        ],
        "api/v1/user.go||api/v1/user.go": [
          "File: api/v1/user.go -> api/v1/user.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:  \"github.com/labstack/echo/v4\"",
          "11:  \"github.com/pkg/errors\"",
          "12:  \"github.com/usememos/memos/common/util\"",
          "13:  \"github.com/usememos/memos/store\"",
          "14:  \"golang.org/x/crypto/bcrypt\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12:  \"github.com/usememos/memos/api/v1/auth\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "133:  g.POST(\"/user\", func(c echo.Context) error {",
          "134:   ctx := c.Request().Context()",
          "136:   if !ok {",
          "137:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing auth session\")",
          "138:   }",
          "",
          "[Removed Lines]",
          "135:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "136:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "208:  g.GET(\"/user/me\", func(c echo.Context) error {",
          "209:   ctx := c.Request().Context()",
          "211:   if !ok {",
          "212:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing auth session\")",
          "213:   }",
          "",
          "[Removed Lines]",
          "210:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "211:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "286:    return echo.NewHTTPError(http.StatusBadRequest, fmt.Sprintf(\"ID is not a number: %s\", c.Param(\"id\"))).SetInternal(err)",
          "287:   }",
          "290:   if !ok {",
          "291:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "292:   }",
          "",
          "[Removed Lines]",
          "289:   currentUserID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "290:   currentUserID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "367:  g.DELETE(\"/user/:id\", func(c echo.Context) error {",
          "368:   ctx := c.Request().Context()",
          "370:   if !ok {",
          "371:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing user in session\")",
          "372:   }",
          "",
          "[Removed Lines]",
          "369:   currentUserID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "370:   currentUserID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------"
        ],
        "api/v1/user_setting.go||api/v1/user_setting.go": [
          "File: api/v1/user_setting.go -> api/v1/user_setting.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:  \"net/http\"",
          "8:  \"github.com/labstack/echo/v4\"",
          "9:  \"github.com/usememos/memos/store\"",
          "10:  \"golang.org/x/exp/slices\"",
          "11: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9:  \"github.com/usememos/memos/api/v1/auth\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "121: func (s *APIV1Service) registerUserSettingRoutes(g *echo.Group) {",
          "122:  g.POST(\"/user/setting\", func(c echo.Context) error {",
          "123:   ctx := c.Request().Context()",
          "125:   if !ok {",
          "126:    return echo.NewHTTPError(http.StatusUnauthorized, \"Missing auth session\")",
          "127:   }",
          "",
          "[Removed Lines]",
          "124:   userID, ok := c.Get(getUserIDContextKey()).(int)",
          "",
          "[Added Lines]",
          "125:   userID, ok := c.Get(auth.UserIDContextKey).(int)",
          "",
          "---------------"
        ],
        "api/v2/auth/auth.go||api/v2/auth/auth.go": [
          "File: api/v2/auth/auth.go -> api/v2/auth/auth.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: package auth",
          "4: import (",
          "5:  \"context\"",
          "6:  \"errors\"",
          "7:  \"net/http\"",
          "8:  \"strconv\"",
          "9:  \"strings\"",
          "10:  \"time\"",
          "12:  \"google.golang.org/grpc\"",
          "13:  \"google.golang.org/grpc/codes\"",
          "14:  \"google.golang.org/grpc/metadata\"",
          "15:  \"google.golang.org/grpc/status\"",
          "17:  \"github.com/golang-jwt/jwt/v4\"",
          "18:  errs \"github.com/pkg/errors\"",
          "20:  \"github.com/usememos/memos/store\"",
          "21: )",
          "24: type ContextKey int",
          "26: const (",
          "29:  UserIDContextKey ContextKey = iota",
          "31:  issuer = \"memos\"",
          "34:  keyID = \"v1\"",
          "36:  AccessTokenAudienceName = \"user.access-token\"",
          "38:  RefreshTokenAudienceName = \"user.refresh-token\"",
          "39:  apiTokenDuration         = 2 * time.Hour",
          "40:  accessTokenDuration      = 24 * time.Hour",
          "41:  refreshTokenDuration     = 7 * 24 * time.Hour",
          "47:  CookieExpDuration = refreshTokenDuration - 1*time.Minute",
          "49:  AccessTokenCookieName = \"memos.access-token\"",
          "51:  RefreshTokenCookieName = \"memos.refresh-token\"",
          "52: )",
          "55: type GRPCAuthInterceptor struct {",
          "56:  store  *store.Store",
          "57:  secret string",
          "58: }",
          "61: func NewGRPCAuthInterceptor(store *store.Store, secret string) *GRPCAuthInterceptor {",
          "62:  return &GRPCAuthInterceptor{",
          "63:   store:  store,",
          "64:   secret: secret,",
          "65:  }",
          "66: }",
          "69: func (in *GRPCAuthInterceptor) AuthenticationInterceptor(ctx context.Context, request any, serverInfo *grpc.UnaryServerInfo, handler grpc.UnaryHandler) (any, error) {",
          "70:  md, ok := metadata.FromIncomingContext(ctx)",
          "71:  if !ok {",
          "72:   return nil, status.Errorf(codes.Unauthenticated, \"failed to parse metadata from incoming context\")",
          "73:  }",
          "74:  accessTokenStr, refreshTokenStr, err := getTokenFromMetadata(md)",
          "75:  if err != nil {",
          "76:   return nil, status.Errorf(codes.Unauthenticated, err.Error())",
          "77:  }",
          "79:  userID, err := in.authenticate(ctx, accessTokenStr, refreshTokenStr)",
          "80:  if err != nil {",
          "81:   if IsAuthenticationAllowed(serverInfo.FullMethod) {",
          "82:    return handler(ctx, request)",
          "83:   }",
          "84:   return nil, err",
          "85:  }",
          "88:  childCtx := context.WithValue(ctx, UserIDContextKey, userID)",
          "89:  return handler(childCtx, request)",
          "90: }",
          "92: func (in *GRPCAuthInterceptor) authenticate(ctx context.Context, accessTokenStr, refreshTokenStr string) (int, error) {",
          "93:  if accessTokenStr == \"\" {",
          "94:   return 0, status.Errorf(codes.Unauthenticated, \"access token not found\")",
          "95:  }",
          "96:  claims := &claimsMessage{}",
          "97:  generateToken := false",
          "98:  accessToken, err := jwt.ParseWithClaims(accessTokenStr, claims, func(t *jwt.Token) (any, error) {",
          "99:   if t.Method.Alg() != jwt.SigningMethodHS256.Name {",
          "100:    return nil, status.Errorf(codes.Unauthenticated, \"unexpected access token signing method=%v, expect %v\", t.Header[\"alg\"], jwt.SigningMethodHS256)",
          "101:   }",
          "102:   if kid, ok := t.Header[\"kid\"].(string); ok {",
          "103:    if kid == \"v1\" {",
          "104:     return []byte(in.secret), nil",
          "105:    }",
          "106:   }",
          "107:   return nil, status.Errorf(codes.Unauthenticated, \"unexpected access token kid=%v\", t.Header[\"kid\"])",
          "108:  })",
          "109:  if err != nil {",
          "110:   var ve *jwt.ValidationError",
          "111:   if errors.As(err, &ve) && ve.Errors == jwt.ValidationErrorExpired {",
          "114:    if refreshTokenStr == \"\" {",
          "115:     return 0, status.Errorf(codes.Unauthenticated, \"access token is expired\")",
          "116:    }",
          "117:    generateToken = true",
          "118:   } else {",
          "119:    return 0, status.Errorf(codes.Unauthenticated, \"failed to parse claim\")",
          "120:   }",
          "121:  }",
          "122:  if !audienceContains(claims.Audience, AccessTokenAudienceName) {",
          "123:   return 0, status.Errorf(codes.Unauthenticated,",
          "124:    \"invalid access token, audience mismatch, got %q, expected %q. you may send request to the wrong environment\",",
          "125:    claims.Audience,",
          "126:    AccessTokenAudienceName,",
          "127:   )",
          "128:  }",
          "130:  userID, err := strconv.Atoi(claims.Subject)",
          "131:  if err != nil {",
          "132:   return 0, status.Errorf(codes.Unauthenticated, \"malformed ID %q in the access token\", claims.Subject)",
          "133:  }",
          "134:  user, err := in.store.GetUser(ctx, &store.FindUser{",
          "135:   ID: &userID,",
          "136:  })",
          "137:  if err != nil {",
          "138:   return 0, status.Errorf(codes.Unauthenticated, \"failed to find user ID %q in the access token\", userID)",
          "139:  }",
          "140:  if user == nil {",
          "141:   return 0, status.Errorf(codes.Unauthenticated, \"user ID %q not exists in the access token\", userID)",
          "142:  }",
          "143:  if user.RowStatus == store.Archived {",
          "144:   return 0, status.Errorf(codes.Unauthenticated, \"user ID %q has been deactivated by administrators\", userID)",
          "145:  }",
          "147:  if generateToken {",
          "148:   generateTokenFunc := func() error {",
          "150:    refreshTokenClaims := &claimsMessage{}",
          "151:    refreshToken, err := jwt.ParseWithClaims(refreshTokenStr, refreshTokenClaims, func(t *jwt.Token) (any, error) {",
          "152:     if t.Method.Alg() != jwt.SigningMethodHS256.Name {",
          "153:      return nil, status.Errorf(codes.Unauthenticated, \"unexpected refresh token signing method=%v, expected %v\", t.Header[\"alg\"], jwt.SigningMethodHS256)",
          "154:     }",
          "156:     if kid, ok := t.Header[\"kid\"].(string); ok {",
          "157:      if kid == \"v1\" {",
          "158:       return []byte(in.secret), nil",
          "159:      }",
          "160:     }",
          "161:     return nil, errs.Errorf(\"unexpected refresh token kid=%v\", t.Header[\"kid\"])",
          "162:    })",
          "163:    if err != nil {",
          "164:     if err == jwt.ErrSignatureInvalid {",
          "165:      return errs.Errorf(\"failed to generate access token: invalid refresh token signature\")",
          "166:     }",
          "167:     return errs.Errorf(\"Server error to refresh expired token, user ID %d\", userID)",
          "168:    }",
          "170:    if !audienceContains(refreshTokenClaims.Audience, RefreshTokenAudienceName) {",
          "171:     return errs.Errorf(\"Invalid refresh token, audience mismatch, got %q, expected %q. you may send request to the wrong environment\",",
          "172:      refreshTokenClaims.Audience,",
          "173:      RefreshTokenAudienceName,",
          "174:     )",
          "175:    }",
          "178:    if refreshToken != nil && refreshToken.Valid {",
          "179:     if err := generateTokensAndSetCookies(ctx, user.Username, user.ID, in.secret); err != nil {",
          "180:      return errs.Wrapf(err, \"failed to regenerate token\")",
          "181:     }",
          "182:    }",
          "184:    return nil",
          "185:   }",
          "189:   if err := generateTokenFunc(); err != nil && !accessToken.Valid {",
          "190:    return 0, status.Errorf(codes.Unauthenticated, err.Error())",
          "191:   }",
          "192:  }",
          "193:  return userID, nil",
          "194: }",
          "196: func getTokenFromMetadata(md metadata.MD) (string, string, error) {",
          "197:  authorizationHeaders := md.Get(\"Authorization\")",
          "198:  if len(md.Get(\"Authorization\")) > 0 {",
          "199:   authHeaderParts := strings.Fields(authorizationHeaders[0])",
          "200:   if len(authHeaderParts) != 2 || strings.ToLower(authHeaderParts[0]) != \"bearer\" {",
          "201:    return \"\", \"\", errs.Errorf(\"authorization header format must be Bearer {token}\")",
          "202:   }",
          "203:   return authHeaderParts[1], \"\", nil",
          "204:  }",
          "206:  var accessToken, refreshToken string",
          "207:  for _, t := range append(md.Get(\"grpcgateway-cookie\"), md.Get(\"cookie\")...) {",
          "208:   header := http.Header{}",
          "209:   header.Add(\"Cookie\", t)",
          "210:   request := http.Request{Header: header}",
          "211:   if v, _ := request.Cookie(AccessTokenCookieName); v != nil {",
          "212:    accessToken = v.Value",
          "213:   }",
          "214:   if v, _ := request.Cookie(RefreshTokenCookieName); v != nil {",
          "215:    refreshToken = v.Value",
          "216:   }",
          "217:  }",
          "218:  if accessToken != \"\" && refreshToken != \"\" {",
          "219:   return accessToken, refreshToken, nil",
          "220:  }",
          "221:  return \"\", \"\", nil",
          "222: }",
          "224: func audienceContains(audience jwt.ClaimStrings, token string) bool {",
          "225:  for _, v := range audience {",
          "226:   if v == token {",
          "227:    return true",
          "228:   }",
          "229:  }",
          "230:  return false",
          "231: }",
          "233: type claimsMessage struct {",
          "234:  Name string `json:\"name\"`",
          "235:  jwt.RegisteredClaims",
          "236: }",
          "239: func generateTokensAndSetCookies(ctx context.Context, username string, userID int, secret string) error {",
          "240:  accessToken, err := GenerateAccessToken(username, userID, secret)",
          "241:  if err != nil {",
          "242:   return errs.Wrap(err, \"failed to generate access token\")",
          "243:  }",
          "245:  refreshToken, err := GenerateRefreshToken(username, userID, secret)",
          "246:  if err != nil {",
          "247:   return errs.Wrap(err, \"failed to generate refresh token\")",
          "248:  }",
          "250:  if err := grpc.SetHeader(ctx, metadata.New(map[string]string{",
          "251:   AccessTokenCookieName:  accessToken,",
          "252:   RefreshTokenCookieName: refreshToken,",
          "253:  })); err != nil {",
          "254:   return errs.Wrapf(err, \"failed to set grpc header\")",
          "255:  }",
          "256:  return nil",
          "257: }",
          "260: func GenerateAccessToken(username string, userID int, secret string) (string, error) {",
          "261:  expirationTime := time.Now().Add(accessTokenDuration)",
          "262:  return generateToken(username, userID, AccessTokenAudienceName, expirationTime, []byte(secret))",
          "263: }",
          "266: func GenerateRefreshToken(username string, userID int, secret string) (string, error) {",
          "267:  expirationTime := time.Now().Add(refreshTokenDuration)",
          "268:  return generateToken(username, userID, RefreshTokenAudienceName, expirationTime, []byte(secret))",
          "269: }",
          "272: func generateToken(username string, userID int, aud string, expirationTime time.Time, secret []byte) (string, error) {",
          "274:  claims := &claimsMessage{",
          "275:   Name: username,",
          "276:   RegisteredClaims: jwt.RegisteredClaims{",
          "277:    Audience: jwt.ClaimStrings{aud},",
          "279:    ExpiresAt: jwt.NewNumericDate(expirationTime),",
          "280:    IssuedAt:  jwt.NewNumericDate(time.Now()),",
          "281:    Issuer:    issuer,",
          "282:    Subject:   strconv.Itoa(userID),",
          "283:   },",
          "284:  }",
          "287:  token := jwt.NewWithClaims(jwt.SigningMethodHS256, claims)",
          "288:  token.Header[\"kid\"] = keyID",
          "291:  tokenString, err := token.SignedString(secret)",
          "292:  if err != nil {",
          "293:   return \"\", err",
          "294:  }",
          "296:  return tokenString, nil",
          "297: }",
          "",
          "---------------"
        ],
        "api/v2/auth/config.go||api/v2/auth/config.go": [
          "File: api/v2/auth/config.go -> api/v2/auth/config.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package auth",
          "3: import \"strings\"",
          "5: var authenticationAllowlistMethods = map[string]bool{",
          "6:  \"/memos.api.v2.UserService/GetUser\": true,",
          "7: }",
          "10: func IsAuthenticationAllowed(fullMethodName string) bool {",
          "11:  if strings.HasPrefix(fullMethodName, \"/grpc.reflection\") {",
          "12:   return true",
          "13:  }",
          "14:  return authenticationAllowlistMethods[fullMethodName]",
          "15: }",
          "",
          "---------------"
        ],
        "api/v2/user_service.go||api/v2/user_service.go": [
          "File: api/v2/user_service.go -> api/v2/user_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"context\"",
          "6:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "7:  \"github.com/usememos/memos/store\"",
          "8:  \"google.golang.org/grpc/codes\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6:  \"github.com/usememos/memos/api/v2/auth\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44:  if err != nil {",
          "45:   return nil, status.Errorf(codes.Internal, \"failed to list user settings: %v\", err)",
          "46:  }",
          "50:  }",
          "52:  response := &apiv2pb.GetUserResponse{",
          "",
          "[Removed Lines]",
          "48:  for _, userSetting := range userSettings {",
          "49:   userMessage.Settings = append(userMessage.Settings, convertUserSettingFromStore(userSetting))",
          "",
          "[Added Lines]",
          "49:  userID, ok := ctx.Value(auth.UserIDContextKey).(int)",
          "50:  if ok && userID == int(userMessage.Id) {",
          "51:   for _, userSetting := range userSettings {",
          "52:    userMessage.Settings = append(userMessage.Settings, convertUserSettingFromStore(userSetting))",
          "53:   }",
          "",
          "---------------"
        ],
        "api/v2/v2.go||api/v2/v2.go": [
          "File: api/v2/v2.go -> api/v2/v2.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  grpcRuntime \"github.com/grpc-ecosystem/grpc-gateway/v2/runtime\"",
          "8:  \"github.com/labstack/echo/v4\"",
          "9:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "10:  \"github.com/usememos/memos/store\"",
          "11:  \"google.golang.org/grpc\"",
          "12:  \"google.golang.org/grpc/credentials/insecure\"",
          "13: )",
          "17:  apiv2pb.RegisterUserServiceServer(grpcServer, NewUserService(store))",
          "18:  apiv2pb.RegisterTagServiceServer(grpcServer, NewTagService(store))",
          "20: }",
          "26:  conn, err := grpc.DialContext(",
          "27:   ctx,",
          "29:   grpc.WithTransportCredentials(insecure.NewCredentials()),",
          "30:  )",
          "31:  if err != nil {",
          "",
          "[Removed Lines]",
          "15: func NewGRPCServer(store *store.Store) *grpc.Server {",
          "16:  grpcServer := grpc.NewServer()",
          "19:  return grpcServer",
          "23: func RegisterGateway(ctx context.Context, e *echo.Echo, grpcServerPort int) error {",
          "28:   fmt.Sprintf(\":%d\", grpcServerPort),",
          "",
          "[Added Lines]",
          "9:  \"github.com/usememos/memos/api/v2/auth\"",
          "11:  \"github.com/usememos/memos/server/profile\"",
          "17: type APIV2Service struct {",
          "18:  Secret  string",
          "19:  Profile *profile.Profile",
          "20:  Store   *store.Store",
          "22:  grpcServer     *grpc.Server",
          "23:  grpcServerPort int",
          "24: }",
          "26: func NewAPIV2Service(secret string, profile *profile.Profile, store *store.Store, grpcServerPort int) *APIV2Service {",
          "27:  authProvider := auth.NewGRPCAuthInterceptor(store, secret)",
          "28:  grpcServer := grpc.NewServer(",
          "29:   grpc.ChainUnaryInterceptor(",
          "30:    authProvider.AuthenticationInterceptor,",
          "31:   ),",
          "32:  )",
          "36:  return &APIV2Service{",
          "37:   Secret:         secret,",
          "38:   Profile:        profile,",
          "39:   Store:          store,",
          "40:   grpcServer:     grpcServer,",
          "41:   grpcServerPort: grpcServerPort,",
          "42:  }",
          "43: }",
          "45: func (s *APIV2Service) GetGRPCServer() *grpc.Server {",
          "46:  return s.grpcServer",
          "50: func (s *APIV2Service) RegisterGateway(ctx context.Context, e *echo.Echo) error {",
          "55:   fmt.Sprintf(\":%d\", s.grpcServerPort),",
          "",
          "---------------"
        ],
        "server/server.go||server/server.go": [
          "File: server/server.go -> server/server.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:  \"github.com/usememos/memos/server/profile\"",
          "21:  \"github.com/usememos/memos/store\"",
          "22:  \"go.uber.org/zap\"",
          "24: )",
          "26: type Server struct {",
          "30:  ID      string",
          "31:  Secret  string",
          "32:  Profile *profile.Profile",
          "33:  Store   *store.Store",
          "36:  backupRunner *BackupRunner",
          "37:  telegramBot  *telegram.Bot",
          "",
          "[Removed Lines]",
          "23:  \"google.golang.org/grpc\"",
          "27:  e          *echo.Echo",
          "28:  grpcServer *grpc.Server",
          "",
          "[Added Lines]",
          "26:  e *echo.Echo",
          "34:  apiV2Service *apiv2.APIV2Service",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "102:  apiV1Service := apiv1.NewAPIV1Service(s.Secret, profile, store)",
          "103:  apiV1Service.Register(rootGroup)",
          "110:   return nil, fmt.Errorf(\"failed to register gRPC gateway: %w\", err)",
          "111:  }",
          "",
          "[Removed Lines]",
          "106:  s.grpcServer = apiv2.NewGRPCServer(store)",
          "109:  if err := apiv2.RegisterGateway(ctx, e, s.Profile.Port+1); err != nil {",
          "",
          "[Added Lines]",
          "106:  s.apiV2Service = apiv2.NewAPIV2Service(s.Secret, profile, store, s.Profile.Port+1)",
          "108:  if err := s.apiV2Service.RegisterGateway(ctx, e); err != nil {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "127:   return err",
          "128:  }",
          "129:  go func() {",
          "131:    log.Error(\"grpc server listen error\", zap.Error(err))",
          "132:   }",
          "133:  }()",
          "",
          "[Removed Lines]",
          "130:   if err := s.grpcServer.Serve(listen); err != nil {",
          "",
          "[Added Lines]",
          "129:   if err := s.apiV2Service.GetGRPCServer().Serve(listen); err != nil {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "220: }",
          "222: func defaultAPIRequestSkipper(c echo.Context) bool {",
          "225: }",
          "",
          "[Removed Lines]",
          "223:  path := c.Path()",
          "224:  return util.HasPrefixes(path, \"/api\", \"/api/v1\")",
          "",
          "[Added Lines]",
          "222:  path := c.Request().URL.Path",
          "223:  return util.HasPrefixes(path, \"/api\", \"/api/v1\", \"api/v2\")",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8f51529c78ada178cb6bd4cfe960ee7c9d025bb4",
      "candidate_info": {
        "commit_hash": "8f51529c78ada178cb6bd4cfe960ee7c9d025bb4",
        "repo": "usememos/memos",
        "commit_url": "https://github.com/usememos/memos/commit/8f51529c78ada178cb6bd4cfe960ee7c9d025bb4",
        "files": [
          "proto/api/v2/idp_service.proto",
          "proto/api/v2/storage_service.proto",
          "proto/gen/api/v2/README.md",
          "proto/gen/api/v2/idp_service.pb.go",
          "proto/gen/api/v2/storage_service.pb.go",
          "proto/gen/api/v2/storage_service.pb.gw.go",
          "proto/gen/api/v2/storage_service_grpc.pb.go",
          "proto/gen/store/README.md",
          "proto/gen/store/idp.pb.go",
          "proto/store/idp.proto",
          "server/route/api/v2/apidocs.swagger.yaml",
          "server/route/api/v2/storage_service.go",
          "server/route/api/v2/v2.go",
          "server/route/api/v2/webhook_service.go",
          "store/storage.go",
          "store/webhook.go",
          "web/src/components/CreateStorageServiceDialog.tsx",
          "web/src/components/Settings/StorageSection.tsx",
          "web/src/grpcweb.ts",
          "web/src/helpers/api.ts",
          "web/src/types/modules/storage.d.ts"
        ],
        "message": "chore: implement storage service",
        "before_after_code_files": [
          "proto/api/v2/idp_service.proto||proto/api/v2/idp_service.proto",
          "proto/api/v2/storage_service.proto||proto/api/v2/storage_service.proto",
          "proto/gen/api/v2/idp_service.pb.go||proto/gen/api/v2/idp_service.pb.go",
          "proto/gen/api/v2/storage_service.pb.go||proto/gen/api/v2/storage_service.pb.go",
          "proto/gen/api/v2/storage_service.pb.gw.go||proto/gen/api/v2/storage_service.pb.gw.go",
          "proto/gen/api/v2/storage_service_grpc.pb.go||proto/gen/api/v2/storage_service_grpc.pb.go",
          "proto/gen/store/idp.pb.go||proto/gen/store/idp.pb.go",
          "proto/store/idp.proto||proto/store/idp.proto",
          "server/route/api/v2/storage_service.go||server/route/api/v2/storage_service.go",
          "server/route/api/v2/v2.go||server/route/api/v2/v2.go",
          "server/route/api/v2/webhook_service.go||server/route/api/v2/webhook_service.go",
          "store/storage.go||store/storage.go",
          "store/webhook.go||store/webhook.go",
          "web/src/components/CreateStorageServiceDialog.tsx||wesrc/components/CreateStorageServiceDialog.tsx",
          "web/src/components/Settings/StorageSection.tsx||wesrc/components/Settings/StorageSection.tsx",
          "web/src/grpcweb.ts||wesrc/grpcweb.ts",
          "web/src/helpers/api.ts||wesrc/helpers/api.ts",
          "web/src/types/modules/storage.d.ts||wesrc/types/modules/storage.d.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "server/route/api/v2/storage_service.go||server/route/api/v2/storage_service.go"
          ],
          "candidate": [
            "server/route/api/v2/storage_service.go||server/route/api/v2/storage_service.go"
          ]
        }
      },
      "candidate_diff": {
        "proto/api/v2/idp_service.proto||proto/api/v2/idp_service.proto": [
          "File: proto/api/v2/idp_service.proto -> proto/api/v2/idp_service.proto",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:   string identifier_filter = 4;",
          "72:   }",
          "75: }",
          "77: message ListIdentityProvidersRequest {}",
          "",
          "[Removed Lines]",
          "52:   message Config {",
          "53:     message FieldMapping {",
          "54:       string identifier = 1;",
          "55:       string display_name = 2;",
          "56:       string email = 3;",
          "57:     }",
          "59:     message OAuth2 {",
          "60:       string client_id = 1;",
          "61:       string client_secret = 2;",
          "62:       string auth_url = 3;",
          "63:       string token_url = 4;",
          "64:       string user_info_url = 5;",
          "65:       repeated string scopes = 6;",
          "66:       FieldMapping field_mapping = 7;",
          "67:     }",
          "69:     oneof config {",
          "70:       OAuth2 oauth2 = 1;",
          "71:     }",
          "74:   Config config = 5;",
          "",
          "[Added Lines]",
          "52:   IdentityProviderConfig config = 5;",
          "53: }",
          "55: message IdentityProviderConfig {",
          "56:   oneof config {",
          "57:     OAuth2Config oauth2 = 1;",
          "59: }",
          "61: message FieldMapping {",
          "62:   string identifier = 1;",
          "63:   string display_name = 2;",
          "64:   string email = 3;",
          "65: }",
          "67: message OAuth2Config {",
          "68:   string client_id = 1;",
          "69:   string client_secret = 2;",
          "70:   string auth_url = 3;",
          "71:   string token_url = 4;",
          "72:   string user_info_url = 5;",
          "73:   repeated string scopes = 6;",
          "74:   FieldMapping field_mapping = 7;",
          "",
          "---------------"
        ],
        "proto/api/v2/storage_service.proto||proto/api/v2/storage_service.proto": [
          "File: proto/api/v2/storage_service.proto -> proto/api/v2/storage_service.proto",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: syntax = \"proto3\";",
          "3: package memos.api.v2;",
          "5: import \"google/api/annotations.proto\";",
          "6: import \"google/api/client.proto\";",
          "7: import \"google/protobuf/field_mask.proto\";",
          "9: option go_package = \"gen/api/v2\";",
          "11: service StorageService {",
          "13:   rpc CreateStorage(CreateStorageRequest) returns (CreateStorageResponse) {",
          "14:     option (google.api.http) = {",
          "15:       post: \"/api/v2/storages\"",
          "16:       body: \"*\"",
          "17:     };",
          "18:   }",
          "20:   rpc GetStorage(GetStorageRequest) returns (GetStorageResponse) {",
          "21:     option (google.api.http) = {get: \"/api/v2/storages/{id}\"};",
          "22:     option (google.api.method_signature) = \"id\";",
          "23:   }",
          "25:   rpc ListStorages(ListStoragesRequest) returns (ListStoragesResponse) {",
          "26:     option (google.api.http) = {get: \"/api/v2/storages\"};",
          "27:   }",
          "29:   rpc UpdateStorage(UpdateStorageRequest) returns (UpdateStorageResponse) {",
          "30:     option (google.api.http) = {",
          "31:       patch: \"/api/v2/storages/{storage.id}\"",
          "32:       body: \"storage\"",
          "33:     };",
          "34:     option (google.api.method_signature) = \"storage,update_mask\";",
          "35:   }",
          "37:   rpc DeleteStorage(DeleteStorageRequest) returns (DeleteStorageResponse) {",
          "38:     option (google.api.http) = {delete: \"/api/v2/storages/{id}\"};",
          "39:     option (google.api.method_signature) = \"id\";",
          "40:   }",
          "41: }",
          "43: message Storage {",
          "44:   int32 id = 1;",
          "45:   string title = 2;",
          "47:   enum Type {",
          "48:     TYPE_UNSPECIFIED = 0;",
          "49:     S3 = 1;",
          "50:   }",
          "51:   Type type = 3;",
          "52:   StorageConfig config = 4;",
          "53: }",
          "55: message StorageConfig {",
          "56:   oneof storage_config {",
          "57:     S3Config s3_config = 1;",
          "58:   }",
          "59: }",
          "61: message S3Config {",
          "62:   string end_point = 1;",
          "63:   string path = 2;",
          "64:   string region = 3;",
          "65:   string access_key = 4;",
          "66:   string secret_key = 5;",
          "67:   string bucket = 6;",
          "68:   string url_prefix = 7;",
          "69:   string url_suffix = 8;",
          "70:   bool pre_sign = 9;",
          "71: }",
          "73: message CreateStorageRequest {",
          "74:   Storage storage = 1;",
          "75: }",
          "77: message CreateStorageResponse {",
          "78:   Storage storage = 1;",
          "79: }",
          "81: message GetStorageRequest {",
          "82:   int32 id = 1;",
          "83: }",
          "85: message GetStorageResponse {",
          "86:   Storage storage = 1;",
          "87: }",
          "89: message ListStoragesRequest {}",
          "91: message ListStoragesResponse {",
          "92:   repeated Storage storages = 1;",
          "93: }",
          "95: message UpdateStorageRequest {",
          "96:   Storage storage = 1;",
          "98:   google.protobuf.FieldMask update_mask = 2;",
          "99: }",
          "101: message UpdateStorageResponse {",
          "102:   Storage storage = 1;",
          "103: }",
          "105: message DeleteStorageRequest {",
          "106:   int32 id = 1;",
          "107: }",
          "109: message DeleteStorageResponse {}",
          "",
          "---------------"
        ],
        "proto/gen/api/v2/idp_service.pb.go||proto/gen/api/v2/idp_service.pb.go": [
          "File: proto/gen/api/v2/idp_service.pb.go -> proto/gen/api/v2/idp_service.pb.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "83: }",
          "85: func (x *IdentityProvider) Reset() {",
          "",
          "[Removed Lines]",
          "78:  Name             string                   `protobuf:\"bytes,1,opt,name=name,proto3\" json:\"name,omitempty\"`",
          "79:  Type             IdentityProvider_Type    `protobuf:\"varint,2,opt,name=type,proto3,enum=memos.api.v2.IdentityProvider_Type\" json:\"type,omitempty\"`",
          "80:  Title            string                   `protobuf:\"bytes,3,opt,name=title,proto3\" json:\"title,omitempty\"`",
          "81:  IdentifierFilter string                   `protobuf:\"bytes,4,opt,name=identifier_filter,json=identifierFilter,proto3\" json:\"identifier_filter,omitempty\"`",
          "82:  Config           *IdentityProvider_Config `protobuf:\"bytes,5,opt,name=config,proto3\" json:\"config,omitempty\"`",
          "",
          "[Added Lines]",
          "78:  Name             string                  `protobuf:\"bytes,1,opt,name=name,proto3\" json:\"name,omitempty\"`",
          "79:  Type             IdentityProvider_Type   `protobuf:\"varint,2,opt,name=type,proto3,enum=memos.api.v2.IdentityProvider_Type\" json:\"type,omitempty\"`",
          "80:  Title            string                  `protobuf:\"bytes,3,opt,name=title,proto3\" json:\"title,omitempty\"`",
          "81:  IdentifierFilter string                  `protobuf:\"bytes,4,opt,name=identifier_filter,json=identifierFilter,proto3\" json:\"identifier_filter,omitempty\"`",
          "82:  Config           *IdentityProviderConfig `protobuf:\"bytes,5,opt,name=config,proto3\" json:\"config,omitempty\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "142:  return \"\"",
          "143: }",
          "146:  if x != nil {",
          "147:   return x.Config",
          "148:  }",
          "149:  return nil",
          "150: }",
          "153:  state         protoimpl.MessageState",
          "154:  sizeCache     protoimpl.SizeCache",
          "155:  unknownFields protoimpl.UnknownFields",
          "156: }",
          "160:  if protoimpl.UnsafeEnabled {",
          "161:   mi := &file_api_v2_idp_service_proto_msgTypes[1]",
          "162:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "145: func (x *IdentityProvider) GetConfig() *IdentityProvider_Config {",
          "152: type ListIdentityProvidersRequest struct {",
          "158: func (x *ListIdentityProvidersRequest) Reset() {",
          "",
          "[Added Lines]",
          "145: func (x *IdentityProvider) GetConfig() *IdentityProviderConfig {",
          "152: type IdentityProviderConfig struct {",
          "160:  Config isIdentityProviderConfig_Config `protobuf_oneof:\"config\"`",
          "163: func (x *IdentityProviderConfig) Reset() {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "164:  }",
          "165: }",
          "168:  return protoimpl.X.MessageStringOf(x)",
          "169: }",
          "174:  mi := &file_api_v2_idp_service_proto_msgTypes[1]",
          "175:  if protoimpl.UnsafeEnabled && x != nil {",
          "176:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "167: func (x *ListIdentityProvidersRequest) String() string {",
          "171: func (*ListIdentityProvidersRequest) ProtoMessage() {}",
          "173: func (x *ListIdentityProvidersRequest) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "172: func (x *IdentityProviderConfig) String() string {",
          "176: func (*IdentityProviderConfig) ProtoMessage() {}",
          "178: func (x *IdentityProviderConfig) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "182:  return mi.MessageOf(x)",
          "183: }",
          "187:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{1}",
          "188: }",
          "191:  state         protoimpl.MessageState",
          "192:  sizeCache     protoimpl.SizeCache",
          "193:  unknownFields protoimpl.UnknownFields",
          "196: }",
          "200:  if protoimpl.UnsafeEnabled {",
          "201:   mi := &file_api_v2_idp_service_proto_msgTypes[2]",
          "202:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "186: func (*ListIdentityProvidersRequest) Descriptor() ([]byte, []int) {",
          "190: type ListIdentityProvidersResponse struct {",
          "195:  IdentityProviders []*IdentityProvider `protobuf:\"bytes,1,rep,name=identity_providers,json=identityProviders,proto3\" json:\"identity_providers,omitempty\"`",
          "198: func (x *ListIdentityProvidersResponse) Reset() {",
          "",
          "[Added Lines]",
          "191: func (*IdentityProviderConfig) Descriptor() ([]byte, []int) {",
          "195: func (m *IdentityProviderConfig) GetConfig() isIdentityProviderConfig_Config {",
          "196:  if m != nil {",
          "197:   return m.Config",
          "198:  }",
          "199:  return nil",
          "200: }",
          "202: func (x *IdentityProviderConfig) GetOauth2() *OAuth2Config {",
          "203:  if x, ok := x.GetConfig().(*IdentityProviderConfig_Oauth2); ok {",
          "204:   return x.Oauth2",
          "205:  }",
          "206:  return nil",
          "207: }",
          "209: type isIdentityProviderConfig_Config interface {",
          "210:  isIdentityProviderConfig_Config()",
          "211: }",
          "213: type IdentityProviderConfig_Oauth2 struct {",
          "214:  Oauth2 *OAuth2Config `protobuf:\"bytes,1,opt,name=oauth2,proto3,oneof\"`",
          "215: }",
          "217: func (*IdentityProviderConfig_Oauth2) isIdentityProviderConfig_Config() {}",
          "219: type FieldMapping struct {",
          "224:  Identifier  string `protobuf:\"bytes,1,opt,name=identifier,proto3\" json:\"identifier,omitempty\"`",
          "225:  DisplayName string `protobuf:\"bytes,2,opt,name=display_name,json=displayName,proto3\" json:\"display_name,omitempty\"`",
          "226:  Email       string `protobuf:\"bytes,3,opt,name=email,proto3\" json:\"email,omitempty\"`",
          "229: func (x *FieldMapping) Reset() {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "204:  }",
          "205: }",
          "208:  return protoimpl.X.MessageStringOf(x)",
          "209: }",
          "214:  mi := &file_api_v2_idp_service_proto_msgTypes[2]",
          "215:  if protoimpl.UnsafeEnabled && x != nil {",
          "216:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "207: func (x *ListIdentityProvidersResponse) String() string {",
          "211: func (*ListIdentityProvidersResponse) ProtoMessage() {}",
          "213: func (x *ListIdentityProvidersResponse) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "238: func (x *FieldMapping) String() string {",
          "242: func (*FieldMapping) ProtoMessage() {}",
          "244: func (x *FieldMapping) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "222:  return mi.MessageOf(x)",
          "223: }",
          "227:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{2}",
          "228: }",
          "231:  if x != nil {",
          "233:  }",
          "235: }",
          "238:  state         protoimpl.MessageState",
          "239:  sizeCache     protoimpl.SizeCache",
          "240:  unknownFields protoimpl.UnknownFields",
          "245: }",
          "249:  if protoimpl.UnsafeEnabled {",
          "250:   mi := &file_api_v2_idp_service_proto_msgTypes[3]",
          "251:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "226: func (*ListIdentityProvidersResponse) Descriptor() ([]byte, []int) {",
          "230: func (x *ListIdentityProvidersResponse) GetIdentityProviders() []*IdentityProvider {",
          "232:   return x.IdentityProviders",
          "234:  return nil",
          "237: type GetIdentityProviderRequest struct {",
          "244:  Name string `protobuf:\"bytes,1,opt,name=name,proto3\" json:\"name,omitempty\"`",
          "247: func (x *GetIdentityProviderRequest) Reset() {",
          "",
          "[Added Lines]",
          "257: func (*FieldMapping) Descriptor() ([]byte, []int) {",
          "261: func (x *FieldMapping) GetIdentifier() string {",
          "263:   return x.Identifier",
          "265:  return \"\"",
          "268: func (x *FieldMapping) GetDisplayName() string {",
          "269:  if x != nil {",
          "270:   return x.DisplayName",
          "271:  }",
          "272:  return \"\"",
          "273: }",
          "275: func (x *FieldMapping) GetEmail() string {",
          "276:  if x != nil {",
          "277:   return x.Email",
          "278:  }",
          "279:  return \"\"",
          "280: }",
          "282: type OAuth2Config struct {",
          "287:  ClientId     string        `protobuf:\"bytes,1,opt,name=client_id,json=clientId,proto3\" json:\"client_id,omitempty\"`",
          "288:  ClientSecret string        `protobuf:\"bytes,2,opt,name=client_secret,json=clientSecret,proto3\" json:\"client_secret,omitempty\"`",
          "289:  AuthUrl      string        `protobuf:\"bytes,3,opt,name=auth_url,json=authUrl,proto3\" json:\"auth_url,omitempty\"`",
          "290:  TokenUrl     string        `protobuf:\"bytes,4,opt,name=token_url,json=tokenUrl,proto3\" json:\"token_url,omitempty\"`",
          "291:  UserInfoUrl  string        `protobuf:\"bytes,5,opt,name=user_info_url,json=userInfoUrl,proto3\" json:\"user_info_url,omitempty\"`",
          "292:  Scopes       []string      `protobuf:\"bytes,6,rep,name=scopes,proto3\" json:\"scopes,omitempty\"`",
          "293:  FieldMapping *FieldMapping `protobuf:\"bytes,7,opt,name=field_mapping,json=fieldMapping,proto3\" json:\"field_mapping,omitempty\"`",
          "296: func (x *OAuth2Config) Reset() {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "253:  }",
          "254: }",
          "257:  return protoimpl.X.MessageStringOf(x)",
          "258: }",
          "263:  mi := &file_api_v2_idp_service_proto_msgTypes[3]",
          "264:  if protoimpl.UnsafeEnabled && x != nil {",
          "265:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "256: func (x *GetIdentityProviderRequest) String() string {",
          "260: func (*GetIdentityProviderRequest) ProtoMessage() {}",
          "262: func (x *GetIdentityProviderRequest) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "305: func (x *OAuth2Config) String() string {",
          "309: func (*OAuth2Config) ProtoMessage() {}",
          "311: func (x *OAuth2Config) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "271:  return mi.MessageOf(x)",
          "272: }",
          "276:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{3}",
          "277: }",
          "280:  if x != nil {",
          "282:  }",
          "283:  return \"\"",
          "284: }",
          "287:  state         protoimpl.MessageState",
          "288:  sizeCache     protoimpl.SizeCache",
          "289:  unknownFields protoimpl.UnknownFields",
          "293: }",
          "297:  if protoimpl.UnsafeEnabled {",
          "298:   mi := &file_api_v2_idp_service_proto_msgTypes[4]",
          "299:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "275: func (*GetIdentityProviderRequest) Descriptor() ([]byte, []int) {",
          "279: func (x *GetIdentityProviderRequest) GetName() string {",
          "281:   return x.Name",
          "286: type GetIdentityProviderResponse struct {",
          "292:  IdentityProvider *IdentityProvider `protobuf:\"bytes,1,opt,name=identity_provider,json=identityProvider,proto3\" json:\"identity_provider,omitempty\"`",
          "295: func (x *GetIdentityProviderResponse) Reset() {",
          "",
          "[Added Lines]",
          "324: func (*OAuth2Config) Descriptor() ([]byte, []int) {",
          "328: func (x *OAuth2Config) GetClientId() string {",
          "330:   return x.ClientId",
          "335: func (x *OAuth2Config) GetClientSecret() string {",
          "336:  if x != nil {",
          "337:   return x.ClientSecret",
          "338:  }",
          "339:  return \"\"",
          "340: }",
          "342: func (x *OAuth2Config) GetAuthUrl() string {",
          "343:  if x != nil {",
          "344:   return x.AuthUrl",
          "345:  }",
          "346:  return \"\"",
          "347: }",
          "349: func (x *OAuth2Config) GetTokenUrl() string {",
          "350:  if x != nil {",
          "351:   return x.TokenUrl",
          "352:  }",
          "353:  return \"\"",
          "354: }",
          "356: func (x *OAuth2Config) GetUserInfoUrl() string {",
          "357:  if x != nil {",
          "358:   return x.UserInfoUrl",
          "359:  }",
          "360:  return \"\"",
          "361: }",
          "363: func (x *OAuth2Config) GetScopes() []string {",
          "364:  if x != nil {",
          "365:   return x.Scopes",
          "366:  }",
          "367:  return nil",
          "368: }",
          "370: func (x *OAuth2Config) GetFieldMapping() *FieldMapping {",
          "371:  if x != nil {",
          "372:   return x.FieldMapping",
          "373:  }",
          "374:  return nil",
          "375: }",
          "377: type ListIdentityProvidersRequest struct {",
          "383: func (x *ListIdentityProvidersRequest) Reset() {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "301:  }",
          "302: }",
          "305:  return protoimpl.X.MessageStringOf(x)",
          "306: }",
          "311:  mi := &file_api_v2_idp_service_proto_msgTypes[4]",
          "312:  if protoimpl.UnsafeEnabled && x != nil {",
          "313:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "304: func (x *GetIdentityProviderResponse) String() string {",
          "308: func (*GetIdentityProviderResponse) ProtoMessage() {}",
          "310: func (x *GetIdentityProviderResponse) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "392: func (x *ListIdentityProvidersRequest) String() string {",
          "396: func (*ListIdentityProvidersRequest) ProtoMessage() {}",
          "398: func (x *ListIdentityProvidersRequest) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "319:  return mi.MessageOf(x)",
          "320: }",
          "324:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{4}",
          "325: }",
          "335:  state         protoimpl.MessageState",
          "336:  sizeCache     protoimpl.SizeCache",
          "337:  unknownFields protoimpl.UnknownFields",
          "341: }",
          "345:  if protoimpl.UnsafeEnabled {",
          "346:   mi := &file_api_v2_idp_service_proto_msgTypes[5]",
          "347:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "323: func (*GetIdentityProviderResponse) Descriptor() ([]byte, []int) {",
          "327: func (x *GetIdentityProviderResponse) GetIdentityProvider() *IdentityProvider {",
          "328:  if x != nil {",
          "329:   return x.IdentityProvider",
          "330:  }",
          "331:  return nil",
          "332: }",
          "334: type CreateIdentityProviderRequest struct {",
          "340:  IdentityProvider *IdentityProvider `protobuf:\"bytes,1,opt,name=identity_provider,json=identityProvider,proto3\" json:\"identity_provider,omitempty\"`",
          "343: func (x *CreateIdentityProviderRequest) Reset() {",
          "",
          "[Added Lines]",
          "411: func (*ListIdentityProvidersRequest) Descriptor() ([]byte, []int) {",
          "415: type ListIdentityProvidersResponse struct {",
          "420:  IdentityProviders []*IdentityProvider `protobuf:\"bytes,1,rep,name=identity_providers,json=identityProviders,proto3\" json:\"identity_providers,omitempty\"`",
          "423: func (x *ListIdentityProvidersResponse) Reset() {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "349:  }",
          "350: }",
          "353:  return protoimpl.X.MessageStringOf(x)",
          "354: }",
          "359:  mi := &file_api_v2_idp_service_proto_msgTypes[5]",
          "360:  if protoimpl.UnsafeEnabled && x != nil {",
          "361:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "352: func (x *CreateIdentityProviderRequest) String() string {",
          "356: func (*CreateIdentityProviderRequest) ProtoMessage() {}",
          "358: func (x *CreateIdentityProviderRequest) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "432: func (x *ListIdentityProvidersResponse) String() string {",
          "436: func (*ListIdentityProvidersResponse) ProtoMessage() {}",
          "438: func (x *ListIdentityProvidersResponse) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "367:  return mi.MessageOf(x)",
          "368: }",
          "372:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{5}",
          "373: }",
          "376:  if x != nil {",
          "378:  }",
          "379:  return nil",
          "380: }",
          "383:  state         protoimpl.MessageState",
          "384:  sizeCache     protoimpl.SizeCache",
          "385:  unknownFields protoimpl.UnknownFields",
          "389: }",
          "393:  if protoimpl.UnsafeEnabled {",
          "394:   mi := &file_api_v2_idp_service_proto_msgTypes[6]",
          "395:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "371: func (*CreateIdentityProviderRequest) Descriptor() ([]byte, []int) {",
          "375: func (x *CreateIdentityProviderRequest) GetIdentityProvider() *IdentityProvider {",
          "377:   return x.IdentityProvider",
          "382: type CreateIdentityProviderResponse struct {",
          "388:  IdentityProvider *IdentityProvider `protobuf:\"bytes,1,opt,name=identity_provider,json=identityProvider,proto3\" json:\"identity_provider,omitempty\"`",
          "391: func (x *CreateIdentityProviderResponse) Reset() {",
          "",
          "[Added Lines]",
          "451: func (*ListIdentityProvidersResponse) Descriptor() ([]byte, []int) {",
          "455: func (x *ListIdentityProvidersResponse) GetIdentityProviders() []*IdentityProvider {",
          "457:   return x.IdentityProviders",
          "462: type GetIdentityProviderRequest struct {",
          "469:  Name string `protobuf:\"bytes,1,opt,name=name,proto3\" json:\"name,omitempty\"`",
          "472: func (x *GetIdentityProviderRequest) Reset() {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "397:  }",
          "398: }",
          "401:  return protoimpl.X.MessageStringOf(x)",
          "402: }",
          "407:  mi := &file_api_v2_idp_service_proto_msgTypes[6]",
          "408:  if protoimpl.UnsafeEnabled && x != nil {",
          "409:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "400: func (x *CreateIdentityProviderResponse) String() string {",
          "404: func (*CreateIdentityProviderResponse) ProtoMessage() {}",
          "406: func (x *CreateIdentityProviderResponse) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "481: func (x *GetIdentityProviderRequest) String() string {",
          "485: func (*GetIdentityProviderRequest) ProtoMessage() {}",
          "487: func (x *GetIdentityProviderRequest) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "415:  return mi.MessageOf(x)",
          "416: }",
          "420:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{6}",
          "421: }",
          "424:  if x != nil {",
          "426:  }",
          "428: }",
          "431:  state         protoimpl.MessageState",
          "432:  sizeCache     protoimpl.SizeCache",
          "433:  unknownFields protoimpl.UnknownFields",
          "436:  IdentityProvider *IdentityProvider `protobuf:\"bytes,1,opt,name=identity_provider,json=identityProvider,proto3\" json:\"identity_provider,omitempty\"`",
          "440: }",
          "444:  if protoimpl.UnsafeEnabled {",
          "445:   mi := &file_api_v2_idp_service_proto_msgTypes[7]",
          "446:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "419: func (*CreateIdentityProviderResponse) Descriptor() ([]byte, []int) {",
          "423: func (x *CreateIdentityProviderResponse) GetIdentityProvider() *IdentityProvider {",
          "425:   return x.IdentityProvider",
          "427:  return nil",
          "430: type UpdateIdentityProviderRequest struct {",
          "439:  UpdateMask *fieldmaskpb.FieldMask `protobuf:\"bytes,2,opt,name=update_mask,json=updateMask,proto3\" json:\"update_mask,omitempty\"`",
          "442: func (x *UpdateIdentityProviderRequest) Reset() {",
          "",
          "[Added Lines]",
          "500: func (*GetIdentityProviderRequest) Descriptor() ([]byte, []int) {",
          "504: func (x *GetIdentityProviderRequest) GetName() string {",
          "506:   return x.Name",
          "508:  return \"\"",
          "511: type GetIdentityProviderResponse struct {",
          "520: func (x *GetIdentityProviderResponse) Reset() {",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "448:  }",
          "449: }",
          "452:  return protoimpl.X.MessageStringOf(x)",
          "453: }",
          "458:  mi := &file_api_v2_idp_service_proto_msgTypes[7]",
          "459:  if protoimpl.UnsafeEnabled && x != nil {",
          "460:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "451: func (x *UpdateIdentityProviderRequest) String() string {",
          "455: func (*UpdateIdentityProviderRequest) ProtoMessage() {}",
          "457: func (x *UpdateIdentityProviderRequest) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "529: func (x *GetIdentityProviderResponse) String() string {",
          "533: func (*GetIdentityProviderResponse) ProtoMessage() {}",
          "535: func (x *GetIdentityProviderResponse) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "466:  return mi.MessageOf(x)",
          "467: }",
          "471:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{7}",
          "472: }",
          "475:  if x != nil {",
          "476:   return x.IdentityProvider",
          "477:  }",
          "478:  return nil",
          "479: }",
          "489:  state         protoimpl.MessageState",
          "490:  sizeCache     protoimpl.SizeCache",
          "491:  unknownFields protoimpl.UnknownFields",
          "494:  IdentityProvider *IdentityProvider `protobuf:\"bytes,1,opt,name=identity_provider,json=identityProvider,proto3\" json:\"identity_provider,omitempty\"`",
          "495: }",
          "499:  if protoimpl.UnsafeEnabled {",
          "500:   mi := &file_api_v2_idp_service_proto_msgTypes[8]",
          "501:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "470: func (*UpdateIdentityProviderRequest) Descriptor() ([]byte, []int) {",
          "474: func (x *UpdateIdentityProviderRequest) GetIdentityProvider() *IdentityProvider {",
          "481: func (x *UpdateIdentityProviderRequest) GetUpdateMask() *fieldmaskpb.FieldMask {",
          "482:  if x != nil {",
          "483:   return x.UpdateMask",
          "484:  }",
          "485:  return nil",
          "486: }",
          "488: type UpdateIdentityProviderResponse struct {",
          "497: func (x *UpdateIdentityProviderResponse) Reset() {",
          "",
          "[Added Lines]",
          "548: func (*GetIdentityProviderResponse) Descriptor() ([]byte, []int) {",
          "552: func (x *GetIdentityProviderResponse) GetIdentityProvider() *IdentityProvider {",
          "559: type CreateIdentityProviderRequest struct {",
          "568: func (x *CreateIdentityProviderRequest) Reset() {",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "503:  }",
          "504: }",
          "507:  return protoimpl.X.MessageStringOf(x)",
          "508: }",
          "513:  mi := &file_api_v2_idp_service_proto_msgTypes[8]",
          "514:  if protoimpl.UnsafeEnabled && x != nil {",
          "515:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "506: func (x *UpdateIdentityProviderResponse) String() string {",
          "510: func (*UpdateIdentityProviderResponse) ProtoMessage() {}",
          "512: func (x *UpdateIdentityProviderResponse) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "577: func (x *CreateIdentityProviderRequest) String() string {",
          "581: func (*CreateIdentityProviderRequest) ProtoMessage() {}",
          "583: func (x *CreateIdentityProviderRequest) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "521:  return mi.MessageOf(x)",
          "522: }",
          "526:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{8}",
          "527: }",
          "530:  if x != nil {",
          "531:   return x.IdentityProvider",
          "532:  }",
          "533:  return nil",
          "534: }",
          "537:  state         protoimpl.MessageState",
          "538:  sizeCache     protoimpl.SizeCache",
          "539:  unknownFields protoimpl.UnknownFields",
          "544: }",
          "548:  if protoimpl.UnsafeEnabled {",
          "549:   mi := &file_api_v2_idp_service_proto_msgTypes[9]",
          "550:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "525: func (*UpdateIdentityProviderResponse) Descriptor() ([]byte, []int) {",
          "529: func (x *UpdateIdentityProviderResponse) GetIdentityProvider() *IdentityProvider {",
          "536: type DeleteIdentityProviderRequest struct {",
          "543:  Name string `protobuf:\"bytes,1,opt,name=name,proto3\" json:\"name,omitempty\"`",
          "546: func (x *DeleteIdentityProviderRequest) Reset() {",
          "",
          "[Added Lines]",
          "596: func (*CreateIdentityProviderRequest) Descriptor() ([]byte, []int) {",
          "600: func (x *CreateIdentityProviderRequest) GetIdentityProvider() *IdentityProvider {",
          "607: type CreateIdentityProviderResponse struct {",
          "613:  IdentityProvider *IdentityProvider `protobuf:\"bytes,1,opt,name=identity_provider,json=identityProvider,proto3\" json:\"identity_provider,omitempty\"`",
          "616: func (x *CreateIdentityProviderResponse) Reset() {",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "552:  }",
          "553: }",
          "556:  return protoimpl.X.MessageStringOf(x)",
          "557: }",
          "562:  mi := &file_api_v2_idp_service_proto_msgTypes[9]",
          "563:  if protoimpl.UnsafeEnabled && x != nil {",
          "564:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "555: func (x *DeleteIdentityProviderRequest) String() string {",
          "559: func (*DeleteIdentityProviderRequest) ProtoMessage() {}",
          "561: func (x *DeleteIdentityProviderRequest) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "625: func (x *CreateIdentityProviderResponse) String() string {",
          "629: func (*CreateIdentityProviderResponse) ProtoMessage() {}",
          "631: func (x *CreateIdentityProviderResponse) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "570:  return mi.MessageOf(x)",
          "571: }",
          "575:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{9}",
          "576: }",
          "579:  if x != nil {",
          "581:  }",
          "583: }",
          "586:  state         protoimpl.MessageState",
          "587:  sizeCache     protoimpl.SizeCache",
          "588:  unknownFields protoimpl.UnknownFields",
          "589: }",
          "593:  if protoimpl.UnsafeEnabled {",
          "594:   mi := &file_api_v2_idp_service_proto_msgTypes[10]",
          "595:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "574: func (*DeleteIdentityProviderRequest) Descriptor() ([]byte, []int) {",
          "578: func (x *DeleteIdentityProviderRequest) GetName() string {",
          "580:   return x.Name",
          "582:  return \"\"",
          "585: type DeleteIdentityProviderResponse struct {",
          "591: func (x *DeleteIdentityProviderResponse) Reset() {",
          "",
          "[Added Lines]",
          "644: func (*CreateIdentityProviderResponse) Descriptor() ([]byte, []int) {",
          "648: func (x *CreateIdentityProviderResponse) GetIdentityProvider() *IdentityProvider {",
          "650:   return x.IdentityProvider",
          "652:  return nil",
          "655: type UpdateIdentityProviderRequest struct {",
          "661:  IdentityProvider *IdentityProvider `protobuf:\"bytes,1,opt,name=identity_provider,json=identityProvider,proto3\" json:\"identity_provider,omitempty\"`",
          "664:  UpdateMask *fieldmaskpb.FieldMask `protobuf:\"bytes,2,opt,name=update_mask,json=updateMask,proto3\" json:\"update_mask,omitempty\"`",
          "667: func (x *UpdateIdentityProviderRequest) Reset() {",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "597:  }",
          "598: }",
          "601:  return protoimpl.X.MessageStringOf(x)",
          "602: }",
          "607:  mi := &file_api_v2_idp_service_proto_msgTypes[10]",
          "608:  if protoimpl.UnsafeEnabled && x != nil {",
          "609:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "600: func (x *DeleteIdentityProviderResponse) String() string {",
          "604: func (*DeleteIdentityProviderResponse) ProtoMessage() {}",
          "606: func (x *DeleteIdentityProviderResponse) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "676: func (x *UpdateIdentityProviderRequest) String() string {",
          "680: func (*UpdateIdentityProviderRequest) ProtoMessage() {}",
          "682: func (x *UpdateIdentityProviderRequest) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "615:  return mi.MessageOf(x)",
          "616: }",
          "620:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{10}",
          "621: }",
          "624:  state         protoimpl.MessageState",
          "625:  sizeCache     protoimpl.SizeCache",
          "626:  unknownFields protoimpl.UnknownFields",
          "632: }",
          "636:  if protoimpl.UnsafeEnabled {",
          "637:   mi := &file_api_v2_idp_service_proto_msgTypes[11]",
          "638:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "619: func (*DeleteIdentityProviderResponse) Descriptor() ([]byte, []int) {",
          "623: type IdentityProvider_Config struct {",
          "631:  Config isIdentityProvider_Config_Config `protobuf_oneof:\"config\"`",
          "634: func (x *IdentityProvider_Config) Reset() {",
          "",
          "[Added Lines]",
          "695: func (*UpdateIdentityProviderRequest) Descriptor() ([]byte, []int) {",
          "699: func (x *UpdateIdentityProviderRequest) GetIdentityProvider() *IdentityProvider {",
          "700:  if x != nil {",
          "701:   return x.IdentityProvider",
          "702:  }",
          "703:  return nil",
          "704: }",
          "706: func (x *UpdateIdentityProviderRequest) GetUpdateMask() *fieldmaskpb.FieldMask {",
          "707:  if x != nil {",
          "708:   return x.UpdateMask",
          "709:  }",
          "710:  return nil",
          "711: }",
          "713: type UpdateIdentityProviderResponse struct {",
          "719:  IdentityProvider *IdentityProvider `protobuf:\"bytes,1,opt,name=identity_provider,json=identityProvider,proto3\" json:\"identity_provider,omitempty\"`",
          "722: func (x *UpdateIdentityProviderResponse) Reset() {",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "640:  }",
          "641: }",
          "644:  return protoimpl.X.MessageStringOf(x)",
          "645: }",
          "650:  mi := &file_api_v2_idp_service_proto_msgTypes[11]",
          "651:  if protoimpl.UnsafeEnabled && x != nil {",
          "652:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "643: func (x *IdentityProvider_Config) String() string {",
          "647: func (*IdentityProvider_Config) ProtoMessage() {}",
          "649: func (x *IdentityProvider_Config) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "731: func (x *UpdateIdentityProviderResponse) String() string {",
          "735: func (*UpdateIdentityProviderResponse) ProtoMessage() {}",
          "737: func (x *UpdateIdentityProviderResponse) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "658:  return mi.MessageOf(x)",
          "659: }",
          "671: }",
          "676:  }",
          "677:  return nil",
          "678: }",
          "691:  state         protoimpl.MessageState",
          "692:  sizeCache     protoimpl.SizeCache",
          "693:  unknownFields protoimpl.UnknownFields",
          "698: }",
          "702:  if protoimpl.UnsafeEnabled {",
          "703:   mi := &file_api_v2_idp_service_proto_msgTypes[12]",
          "704:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "662: func (*IdentityProvider_Config) Descriptor() ([]byte, []int) {",
          "663:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{0, 0}",
          "664: }",
          "666: func (m *IdentityProvider_Config) GetConfig() isIdentityProvider_Config_Config {",
          "667:  if m != nil {",
          "668:   return m.Config",
          "669:  }",
          "670:  return nil",
          "673: func (x *IdentityProvider_Config) GetOauth2() *IdentityProvider_Config_OAuth2 {",
          "674:  if x, ok := x.GetConfig().(*IdentityProvider_Config_Oauth2); ok {",
          "675:   return x.Oauth2",
          "680: type isIdentityProvider_Config_Config interface {",
          "681:  isIdentityProvider_Config_Config()",
          "682: }",
          "684: type IdentityProvider_Config_Oauth2 struct {",
          "685:  Oauth2 *IdentityProvider_Config_OAuth2 `protobuf:\"bytes,1,opt,name=oauth2,proto3,oneof\"`",
          "686: }",
          "688: func (*IdentityProvider_Config_Oauth2) isIdentityProvider_Config_Config() {}",
          "690: type IdentityProvider_Config_FieldMapping struct {",
          "695:  Identifier  string `protobuf:\"bytes,1,opt,name=identifier,proto3\" json:\"identifier,omitempty\"`",
          "696:  DisplayName string `protobuf:\"bytes,2,opt,name=display_name,json=displayName,proto3\" json:\"display_name,omitempty\"`",
          "697:  Email       string `protobuf:\"bytes,3,opt,name=email,proto3\" json:\"email,omitempty\"`",
          "700: func (x *IdentityProvider_Config_FieldMapping) Reset() {",
          "",
          "[Added Lines]",
          "750: func (*UpdateIdentityProviderResponse) Descriptor() ([]byte, []int) {",
          "751:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{11}",
          "754: func (x *UpdateIdentityProviderResponse) GetIdentityProvider() *IdentityProvider {",
          "755:  if x != nil {",
          "756:   return x.IdentityProvider",
          "761: type DeleteIdentityProviderRequest struct {",
          "768:  Name string `protobuf:\"bytes,1,opt,name=name,proto3\" json:\"name,omitempty\"`",
          "771: func (x *DeleteIdentityProviderRequest) Reset() {",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "706:  }",
          "707: }",
          "710:  return protoimpl.X.MessageStringOf(x)",
          "711: }",
          "716:  mi := &file_api_v2_idp_service_proto_msgTypes[12]",
          "717:  if protoimpl.UnsafeEnabled && x != nil {",
          "718:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "709: func (x *IdentityProvider_Config_FieldMapping) String() string {",
          "713: func (*IdentityProvider_Config_FieldMapping) ProtoMessage() {}",
          "715: func (x *IdentityProvider_Config_FieldMapping) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "780: func (x *DeleteIdentityProviderRequest) String() string {",
          "784: func (*DeleteIdentityProviderRequest) ProtoMessage() {}",
          "786: func (x *DeleteIdentityProviderRequest) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "724:  return mi.MessageOf(x)",
          "725: }",
          "744: }",
          "747:  if x != nil {",
          "749:  }",
          "750:  return \"\"",
          "751: }",
          "754:  state         protoimpl.MessageState",
          "755:  sizeCache     protoimpl.SizeCache",
          "756:  unknownFields protoimpl.UnknownFields",
          "765: }",
          "769:  if protoimpl.UnsafeEnabled {",
          "770:   mi := &file_api_v2_idp_service_proto_msgTypes[13]",
          "771:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "728: func (*IdentityProvider_Config_FieldMapping) Descriptor() ([]byte, []int) {",
          "729:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{0, 0, 0}",
          "730: }",
          "732: func (x *IdentityProvider_Config_FieldMapping) GetIdentifier() string {",
          "733:  if x != nil {",
          "734:   return x.Identifier",
          "735:  }",
          "736:  return \"\"",
          "737: }",
          "739: func (x *IdentityProvider_Config_FieldMapping) GetDisplayName() string {",
          "740:  if x != nil {",
          "741:   return x.DisplayName",
          "742:  }",
          "743:  return \"\"",
          "746: func (x *IdentityProvider_Config_FieldMapping) GetEmail() string {",
          "748:   return x.Email",
          "753: type IdentityProvider_Config_OAuth2 struct {",
          "758:  ClientId     string                                `protobuf:\"bytes,1,opt,name=client_id,json=clientId,proto3\" json:\"client_id,omitempty\"`",
          "759:  ClientSecret string                                `protobuf:\"bytes,2,opt,name=client_secret,json=clientSecret,proto3\" json:\"client_secret,omitempty\"`",
          "760:  AuthUrl      string                                `protobuf:\"bytes,3,opt,name=auth_url,json=authUrl,proto3\" json:\"auth_url,omitempty\"`",
          "761:  TokenUrl     string                                `protobuf:\"bytes,4,opt,name=token_url,json=tokenUrl,proto3\" json:\"token_url,omitempty\"`",
          "762:  UserInfoUrl  string                                `protobuf:\"bytes,5,opt,name=user_info_url,json=userInfoUrl,proto3\" json:\"user_info_url,omitempty\"`",
          "763:  Scopes       []string                              `protobuf:\"bytes,6,rep,name=scopes,proto3\" json:\"scopes,omitempty\"`",
          "764:  FieldMapping *IdentityProvider_Config_FieldMapping `protobuf:\"bytes,7,opt,name=field_mapping,json=fieldMapping,proto3\" json:\"field_mapping,omitempty\"`",
          "767: func (x *IdentityProvider_Config_OAuth2) Reset() {",
          "",
          "[Added Lines]",
          "799: func (*DeleteIdentityProviderRequest) Descriptor() ([]byte, []int) {",
          "800:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{12}",
          "803: func (x *DeleteIdentityProviderRequest) GetName() string {",
          "805:   return x.Name",
          "810: type DeleteIdentityProviderResponse struct {",
          "816: func (x *DeleteIdentityProviderResponse) Reset() {",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "773:  }",
          "774: }",
          "777:  return protoimpl.X.MessageStringOf(x)",
          "778: }",
          "783:  mi := &file_api_v2_idp_service_proto_msgTypes[13]",
          "784:  if protoimpl.UnsafeEnabled && x != nil {",
          "785:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "776: func (x *IdentityProvider_Config_OAuth2) String() string {",
          "780: func (*IdentityProvider_Config_OAuth2) ProtoMessage() {}",
          "782: func (x *IdentityProvider_Config_OAuth2) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "825: func (x *DeleteIdentityProviderResponse) String() string {",
          "829: func (*DeleteIdentityProviderResponse) ProtoMessage() {}",
          "831: func (x *DeleteIdentityProviderResponse) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "791:  return mi.MessageOf(x)",
          "792: }",
          "846: }",
          "848: var File_api_v2_idp_service_proto protoreflect.FileDescriptor",
          "",
          "[Removed Lines]",
          "795: func (*IdentityProvider_Config_OAuth2) Descriptor() ([]byte, []int) {",
          "796:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{0, 0, 1}",
          "797: }",
          "799: func (x *IdentityProvider_Config_OAuth2) GetClientId() string {",
          "800:  if x != nil {",
          "801:   return x.ClientId",
          "802:  }",
          "803:  return \"\"",
          "804: }",
          "806: func (x *IdentityProvider_Config_OAuth2) GetClientSecret() string {",
          "807:  if x != nil {",
          "808:   return x.ClientSecret",
          "809:  }",
          "810:  return \"\"",
          "811: }",
          "813: func (x *IdentityProvider_Config_OAuth2) GetAuthUrl() string {",
          "814:  if x != nil {",
          "815:   return x.AuthUrl",
          "816:  }",
          "817:  return \"\"",
          "818: }",
          "820: func (x *IdentityProvider_Config_OAuth2) GetTokenUrl() string {",
          "821:  if x != nil {",
          "822:   return x.TokenUrl",
          "823:  }",
          "824:  return \"\"",
          "825: }",
          "827: func (x *IdentityProvider_Config_OAuth2) GetUserInfoUrl() string {",
          "828:  if x != nil {",
          "829:   return x.UserInfoUrl",
          "830:  }",
          "831:  return \"\"",
          "832: }",
          "834: func (x *IdentityProvider_Config_OAuth2) GetScopes() []string {",
          "835:  if x != nil {",
          "836:   return x.Scopes",
          "837:  }",
          "838:  return nil",
          "839: }",
          "841: func (x *IdentityProvider_Config_OAuth2) GetFieldMapping() *IdentityProvider_Config_FieldMapping {",
          "842:  if x != nil {",
          "843:   return x.FieldMapping",
          "844:  }",
          "845:  return nil",
          "",
          "[Added Lines]",
          "844: func (*DeleteIdentityProviderResponse) Descriptor() ([]byte, []int) {",
          "845:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{13}",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "856:  0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,",
          "857:  0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,",
          "858:  0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,",
          "860:  0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,",
          "861:  0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x74, 0x79,",
          "862:  0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73,",
          "",
          "[Removed Lines]",
          "859:  0x6f, 0x22, 0xeb, 0x05, 0x0a, 0x10, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72,",
          "",
          "[Added Lines]",
          "859:  0x6f, 0x22, 0x8a, 0x02, 0x0a, 0x10, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72,",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "866:  0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x64, 0x65,",
          "867:  0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04,",
          "868:  0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,",
          "871:  0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72,",
          "879:  0x64, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e,",
          "880:  0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64,",
          "881:  0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70,",
          "882:  0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,",
          "883:  0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,",
          "884:  0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,",
          "950:  0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,",
          "952:  0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,",
          "953:  0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,",
          "954:  0x76, 0x32, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69,",
          "955:  0x64, 0x65, 0x72, 0x52, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,",
          "957:  0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,",
          "976:  0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,",
          "978:  0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69,",
          "993:  0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,",
          "1010:  0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,",
          "1029: }",
          "1031: var (",
          "",
          "[Removed Lines]",
          "869:  0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,",
          "870:  0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61,",
          "872:  0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63,",
          "873:  0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0xdd, 0x03, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,",
          "874:  0x12, 0x46, 0x0a, 0x06, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,",
          "875:  0x32, 0x2c, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e,",
          "876:  0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,",
          "877:  0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x48, 0x00,",
          "878:  0x52, 0x06, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x1a, 0x67, 0x0a, 0x0c, 0x46, 0x69, 0x65, 0x6c,",
          "885:  0x6c, 0x1a, 0x97, 0x02, 0x0a, 0x06, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x12, 0x1b, 0x0a, 0x09,",
          "886:  0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,",
          "887:  0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69,",
          "888:  0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,",
          "889:  0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x19,",
          "890:  0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,",
          "891:  0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x6b,",
          "892:  0x65, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f,",
          "893:  0x6b, 0x65, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,",
          "894:  0x6e, 0x66, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75,",
          "895:  0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63,",
          "896:  0x6f, 0x70, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70,",
          "897:  0x65, 0x73, 0x12, 0x57, 0x0a, 0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x70, 0x70,",
          "898:  0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6d, 0x65, 0x6d, 0x6f,",
          "899:  0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,",
          "900:  0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,",
          "901:  0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x66,",
          "902:  0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x42, 0x08, 0x0a, 0x06, 0x63,",
          "903:  0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x28, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,",
          "904:  0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,",
          "905:  0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x41, 0x55, 0x54, 0x48, 0x32, 0x10, 0x01, 0x22,",
          "906:  0x1e, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50,",
          "907:  0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,",
          "908:  0x6e, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50,",
          "909:  0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,",
          "910:  0x12, 0x4d, 0x0a, 0x12, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f,",
          "911:  0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d,",
          "912:  0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x65, 0x6e,",
          "913:  0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x11, 0x69, 0x64,",
          "914:  0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x22,",
          "915:  0x30, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72,",
          "916:  0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,",
          "917:  0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,",
          "918:  0x65, 0x22, 0x6a, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,",
          "919:  0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,",
          "920:  0x12, 0x4b, 0x0a, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f,",
          "921:  0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65,",
          "922:  0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74,",
          "923:  0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x10, 0x69, 0x64, 0x65,",
          "924:  0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x6c, 0x0a,",
          "925:  0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50,",
          "926:  0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b,",
          "927:  0x0a, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,",
          "928:  0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x6f,",
          "929:  0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,",
          "930:  0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74,",
          "931:  0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x6d, 0x0a, 0x1e, 0x43,",
          "932:  0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,",
          "933:  0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a,",
          "934:  0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,",
          "935:  0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73,",
          "936:  0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,",
          "937:  0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,",
          "938:  0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0xa9, 0x01, 0x0a, 0x1d, 0x55,",
          "939:  0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,",
          "940:  0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x11,",
          "941:  0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,",
          "942:  0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e,",
          "943:  0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50,",
          "944:  0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,",
          "945:  0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64,",
          "946:  0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,",
          "947:  0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,",
          "948:  0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,",
          "949:  0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x6d, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,",
          "951:  0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x11, 0x69, 0x64, 0x65, 0x6e,",
          "956:  0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x33, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,",
          "958:  0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,",
          "959:  0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x20, 0x0a, 0x1e, 0x44, 0x65,",
          "960:  0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76,",
          "961:  0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xf8, 0x06, 0x0a,",
          "962:  0x17, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,",
          "963:  0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73,",
          "964:  0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,",
          "965:  0x72, 0x73, 0x12, 0x2a, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,",
          "966:  0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72,",
          "967:  0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,",
          "968:  0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69,",
          "969:  0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,",
          "970:  0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4,",
          "971:  0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x69, 0x64, 0x65,",
          "972:  0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x9d,",
          "973:  0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72,",
          "974:  0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61,",
          "975:  0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,",
          "977:  0x1a, 0x29, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e,",
          "979:  0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0xda, 0x41, 0x04,",
          "980:  0x6e, 0x61, 0x6d, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x61, 0x70, 0x69,",
          "981:  0x2f, 0x76, 0x32, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,",
          "982:  0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0x96,",
          "983:  0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,",
          "984:  0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x2e, 0x6d, 0x65, 0x6d, 0x6f,",
          "985:  0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,",
          "986:  0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,",
          "987:  0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61,",
          "988:  0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e,",
          "989:  0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,",
          "990:  0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x19, 0x2f, 0x61,",
          "991:  0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72,",
          "992:  0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0xe4, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61,",
          "994:  0x65, 0x72, 0x12, 0x2b, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,",
          "995:  0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,",
          "996:  0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,",
          "997:  0x2c, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x55,",
          "998:  0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,",
          "999:  0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6f, 0xda,",
          "1000:  0x41, 0x1d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,",
          "1001:  0x64, 0x65, 0x72, 0x2c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x82,",
          "1002:  0xd3, 0xe4, 0x93, 0x02, 0x49, 0x3a, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,",
          "1003:  0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x32, 0x34, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,",
          "1004:  0x32, 0x2f, 0x7b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76,",
          "1005:  0x69, 0x64, 0x65, 0x72, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,",
          "1006:  0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xa6,",
          "1007:  0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,",
          "1008:  0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x2e, 0x6d, 0x65, 0x6d, 0x6f,",
          "1009:  0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,",
          "1011:  0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61,",
          "1012:  0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e,",
          "1013:  0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,",
          "1014:  0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0xda, 0x41, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x82, 0xd3, 0xe4,",
          "1015:  0x93, 0x02, 0x24, 0x2a, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x7b, 0x6e, 0x61,",
          "1016:  0x6d, 0x65, 0x3d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69,",
          "1017:  0x64, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x42, 0xa7, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e,",
          "1018:  0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x42, 0x0f, 0x49, 0x64,",
          "1019:  0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,",
          "1020:  0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x73, 0x65, 0x6d,",
          "1021:  0x65, 0x6d, 0x6f, 0x73, 0x2f, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,",
          "1022:  0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x3b, 0x61, 0x70, 0x69, 0x76,",
          "1023:  0x32, 0xa2, 0x02, 0x03, 0x4d, 0x41, 0x58, 0xaa, 0x02, 0x0c, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x2e,",
          "1024:  0x41, 0x70, 0x69, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x0c, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x5c, 0x41,",
          "1025:  0x70, 0x69, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x18, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x5c, 0x41, 0x70,",
          "1026:  0x69, 0x5c, 0x56, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,",
          "1027:  0xea, 0x02, 0x0e, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56,",
          "1028:  0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,",
          "",
          "[Added Lines]",
          "869:  0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,",
          "870:  0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61,",
          "872:  0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f,",
          "873:  0x6e, 0x66, 0x69, 0x67, 0x22, 0x28, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10,",
          "874:  0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,",
          "875:  0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x41, 0x55, 0x54, 0x48, 0x32, 0x10, 0x01, 0x22, 0x58,",
          "876:  0x0a, 0x16, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,",
          "877:  0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34, 0x0a, 0x06, 0x6f, 0x61, 0x75, 0x74,",
          "878:  0x68, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73,",
          "879:  0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6f,",
          "880:  0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x42, 0x08,",
          "881:  0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x67, 0x0a, 0x0c, 0x46, 0x69, 0x65, 0x6c,",
          "888:  0x6c, 0x22, 0x85, 0x02, 0x0a, 0x0c, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6f, 0x6e, 0x66,",
          "889:  0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,",
          "890:  0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,",
          "891:  0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,",
          "892:  0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65,",
          "893:  0x63, 0x72, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x72, 0x6c,",
          "894:  0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x55, 0x72, 0x6c, 0x12,",
          "895:  0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,",
          "896:  0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0d,",
          "897:  0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20,",
          "898:  0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x72, 0x6c,",
          "899:  0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,",
          "900:  0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0d, 0x66, 0x69, 0x65, 0x6c,",
          "901:  0x64, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,",
          "902:  0x1a, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x46,",
          "903:  0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x66, 0x69, 0x65,",
          "904:  0x6c, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x22, 0x1e, 0x0a, 0x1c, 0x4c, 0x69, 0x73,",
          "905:  0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,",
          "906:  0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6e, 0x0a, 0x1d, 0x4c, 0x69, 0x73,",
          "907:  0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,",
          "908:  0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x69, 0x64,",
          "909:  0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,",
          "910:  0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61,",
          "911:  0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72,",
          "912:  0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,",
          "913:  0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x22, 0x30, 0x0a, 0x1a, 0x47, 0x65, 0x74,",
          "915:  0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,",
          "916:  0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6a, 0x0a, 0x1b, 0x47,",
          "917:  0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,",
          "918:  0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x11, 0x69, 0x64,",
          "919:  0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18,",
          "920:  0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70,",
          "921:  0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,",
          "922:  0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50,",
          "923:  0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x6c, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74,",
          "924:  0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,",
          "925:  0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x11, 0x69, 0x64, 0x65, 0x6e,",
          "930:  0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x6d, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,",
          "932:  0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74,",
          "933:  0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,",
          "934:  0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,",
          "935:  0x32, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,",
          "936:  0x65, 0x72, 0x52, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76,",
          "937:  0x69, 0x64, 0x65, 0x72, 0x22, 0xa9, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,",
          "938:  0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,",
          "939:  0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,",
          "940:  0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,",
          "941:  0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32,",
          "942:  0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,",
          "943:  0x72, 0x52, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69,",
          "944:  0x64, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61,",
          "945:  0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,",
          "946:  0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,",
          "947:  0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b,",
          "948:  0x22, 0x6d, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,",
          "949:  0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,",
          "950:  0x73, 0x65, 0x12, 0x4b, 0x0a, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70,",
          "951:  0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,",
          "952:  0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x65,",
          "953:  0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x10, 0x69,",
          "954:  0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22,",
          "955:  0x33, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,",
          "957:  0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,",
          "958:  0x6e, 0x61, 0x6d, 0x65, 0x22, 0x20, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64,",
          "959:  0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65,",
          "960:  0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xf8, 0x06, 0x0a, 0x17, 0x49, 0x64, 0x65, 0x6e, 0x74,",
          "961:  0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,",
          "962:  0x63, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74,",
          "963:  0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x2e, 0x6d,",
          "964:  0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74,",
          "965:  0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,",
          "966:  0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73,",
          "967:  0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e,",
          "968:  0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,",
          "969:  0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f,",
          "970:  0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50,",
          "971:  0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x9d, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74,",
          "972:  0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,",
          "973:  0x12, 0x28, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e,",
          "975:  0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x65, 0x6d,",
          "976:  0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65,",
          "977:  0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,",
          "978:  0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0xda, 0x41, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x82, 0xd3,",
          "979:  0xe4, 0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x7b, 0x6e,",
          "980:  0x61, 0x6d, 0x65, 0x3d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76,",
          "981:  0x69, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0x96, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65,",
          "982:  0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69,",
          "983:  0x64, 0x65, 0x72, 0x12, 0x2b, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,",
          "984:  0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,",
          "985:  0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,",
          "986:  0x1a, 0x2c, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e,",
          "987:  0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72,",
          "988:  0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21,",
          "989:  0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f,",
          "990:  0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,",
          "991:  0x73, 0x12, 0xe4, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e,",
          "992:  0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x2e, 0x6d,",
          "993:  0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61,",
          "995:  0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x65, 0x6d, 0x6f,",
          "996:  0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,",
          "998:  0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6f, 0xda, 0x41, 0x1d, 0x69, 0x64, 0x65, 0x6e,",
          "999:  0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2c, 0x75, 0x70,",
          "1000:  0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x49, 0x3a,",
          "1001:  0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,",
          "1002:  0x65, 0x72, 0x32, 0x34, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x7b, 0x69, 0x64, 0x65,",
          "1003:  0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x6e,",
          "1004:  0x61, 0x6d, 0x65, 0x3d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76,",
          "1005:  0x69, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xa6, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c,",
          "1006:  0x65, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69,",
          "1007:  0x64, 0x65, 0x72, 0x12, 0x2b, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,",
          "1008:  0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,",
          "1009:  0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,",
          "1010:  0x1a, 0x2c, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e,",
          "1011:  0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72,",
          "1012:  0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31,",
          "1013:  0xda, 0x41, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x2a, 0x22, 0x2f,",
          "1014:  0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x69, 0x64, 0x65,",
          "1015:  0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x2a,",
          "1016:  0x7d, 0x42, 0xa7, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e,",
          "1017:  0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x42, 0x0f, 0x49, 0x64, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69,",
          "1018:  0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75,",
          "1019:  0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x73, 0x65, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2f, 0x6d,",
          "1020:  0x65, 0x6d, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x61,",
          "1021:  0x70, 0x69, 0x2f, 0x76, 0x32, 0x3b, 0x61, 0x70, 0x69, 0x76, 0x32, 0xa2, 0x02, 0x03, 0x4d, 0x41,",
          "1022:  0x58, 0xaa, 0x02, 0x0c, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x32,",
          "1023:  0xca, 0x02, 0x0c, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x32, 0xe2,",
          "1024:  0x02, 0x18, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x32, 0x5c, 0x47,",
          "1025:  0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x4d, 0x65, 0x6d,",
          "1026:  0x6f, 0x73, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f,",
          "1027:  0x74, 0x6f, 0x33,",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "1043: var file_api_v2_idp_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)",
          "1044: var file_api_v2_idp_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)",
          "1045: var file_api_v2_idp_service_proto_goTypes = []interface{}{",
          "1062: }",
          "1063: var file_api_v2_idp_service_proto_depIdxs = []int32{",
          "1064:  0,  // 0: memos.api.v2.IdentityProvider.type:type_name -> memos.api.v2.IdentityProvider.Type",
          "1085:  16, // [16:21] is the sub-list for method output_type",
          "1086:  11, // [11:16] is the sub-list for method input_type",
          "1087:  11, // [11:11] is the sub-list for extension type_name",
          "",
          "[Removed Lines]",
          "1046:  (IdentityProvider_Type)(0),                   // 0: memos.api.v2.IdentityProvider.Type",
          "1047:  (*IdentityProvider)(nil),                     // 1: memos.api.v2.IdentityProvider",
          "1048:  (*ListIdentityProvidersRequest)(nil),         // 2: memos.api.v2.ListIdentityProvidersRequest",
          "1049:  (*ListIdentityProvidersResponse)(nil),        // 3: memos.api.v2.ListIdentityProvidersResponse",
          "1050:  (*GetIdentityProviderRequest)(nil),           // 4: memos.api.v2.GetIdentityProviderRequest",
          "1051:  (*GetIdentityProviderResponse)(nil),          // 5: memos.api.v2.GetIdentityProviderResponse",
          "1052:  (*CreateIdentityProviderRequest)(nil),        // 6: memos.api.v2.CreateIdentityProviderRequest",
          "1053:  (*CreateIdentityProviderResponse)(nil),       // 7: memos.api.v2.CreateIdentityProviderResponse",
          "1054:  (*UpdateIdentityProviderRequest)(nil),        // 8: memos.api.v2.UpdateIdentityProviderRequest",
          "1055:  (*UpdateIdentityProviderResponse)(nil),       // 9: memos.api.v2.UpdateIdentityProviderResponse",
          "1056:  (*DeleteIdentityProviderRequest)(nil),        // 10: memos.api.v2.DeleteIdentityProviderRequest",
          "1057:  (*DeleteIdentityProviderResponse)(nil),       // 11: memos.api.v2.DeleteIdentityProviderResponse",
          "1058:  (*IdentityProvider_Config)(nil),              // 12: memos.api.v2.IdentityProvider.Config",
          "1059:  (*IdentityProvider_Config_FieldMapping)(nil), // 13: memos.api.v2.IdentityProvider.Config.FieldMapping",
          "1060:  (*IdentityProvider_Config_OAuth2)(nil),       // 14: memos.api.v2.IdentityProvider.Config.OAuth2",
          "1061:  (*fieldmaskpb.FieldMask)(nil),                // 15: google.protobuf.FieldMask",
          "1065:  12, // 1: memos.api.v2.IdentityProvider.config:type_name -> memos.api.v2.IdentityProvider.Config",
          "1066:  1,  // 2: memos.api.v2.ListIdentityProvidersResponse.identity_providers:type_name -> memos.api.v2.IdentityProvider",
          "1067:  1,  // 3: memos.api.v2.GetIdentityProviderResponse.identity_provider:type_name -> memos.api.v2.IdentityProvider",
          "1068:  1,  // 4: memos.api.v2.CreateIdentityProviderRequest.identity_provider:type_name -> memos.api.v2.IdentityProvider",
          "1069:  1,  // 5: memos.api.v2.CreateIdentityProviderResponse.identity_provider:type_name -> memos.api.v2.IdentityProvider",
          "1070:  1,  // 6: memos.api.v2.UpdateIdentityProviderRequest.identity_provider:type_name -> memos.api.v2.IdentityProvider",
          "1071:  15, // 7: memos.api.v2.UpdateIdentityProviderRequest.update_mask:type_name -> google.protobuf.FieldMask",
          "1072:  1,  // 8: memos.api.v2.UpdateIdentityProviderResponse.identity_provider:type_name -> memos.api.v2.IdentityProvider",
          "1073:  14, // 9: memos.api.v2.IdentityProvider.Config.oauth2:type_name -> memos.api.v2.IdentityProvider.Config.OAuth2",
          "1074:  13, // 10: memos.api.v2.IdentityProvider.Config.OAuth2.field_mapping:type_name -> memos.api.v2.IdentityProvider.Config.FieldMapping",
          "1075:  2,  // 11: memos.api.v2.IdentityProviderService.ListIdentityProviders:input_type -> memos.api.v2.ListIdentityProvidersRequest",
          "1076:  4,  // 12: memos.api.v2.IdentityProviderService.GetIdentityProvider:input_type -> memos.api.v2.GetIdentityProviderRequest",
          "1077:  6,  // 13: memos.api.v2.IdentityProviderService.CreateIdentityProvider:input_type -> memos.api.v2.CreateIdentityProviderRequest",
          "1078:  8,  // 14: memos.api.v2.IdentityProviderService.UpdateIdentityProvider:input_type -> memos.api.v2.UpdateIdentityProviderRequest",
          "1079:  10, // 15: memos.api.v2.IdentityProviderService.DeleteIdentityProvider:input_type -> memos.api.v2.DeleteIdentityProviderRequest",
          "1080:  3,  // 16: memos.api.v2.IdentityProviderService.ListIdentityProviders:output_type -> memos.api.v2.ListIdentityProvidersResponse",
          "1081:  5,  // 17: memos.api.v2.IdentityProviderService.GetIdentityProvider:output_type -> memos.api.v2.GetIdentityProviderResponse",
          "1082:  7,  // 18: memos.api.v2.IdentityProviderService.CreateIdentityProvider:output_type -> memos.api.v2.CreateIdentityProviderResponse",
          "1083:  9,  // 19: memos.api.v2.IdentityProviderService.UpdateIdentityProvider:output_type -> memos.api.v2.UpdateIdentityProviderResponse",
          "1084:  11, // 20: memos.api.v2.IdentityProviderService.DeleteIdentityProvider:output_type -> memos.api.v2.DeleteIdentityProviderResponse",
          "",
          "[Added Lines]",
          "1045:  (IdentityProvider_Type)(0),             // 0: memos.api.v2.IdentityProvider.Type",
          "1046:  (*IdentityProvider)(nil),               // 1: memos.api.v2.IdentityProvider",
          "1047:  (*IdentityProviderConfig)(nil),         // 2: memos.api.v2.IdentityProviderConfig",
          "1048:  (*FieldMapping)(nil),                   // 3: memos.api.v2.FieldMapping",
          "1049:  (*OAuth2Config)(nil),                   // 4: memos.api.v2.OAuth2Config",
          "1050:  (*ListIdentityProvidersRequest)(nil),   // 5: memos.api.v2.ListIdentityProvidersRequest",
          "1051:  (*ListIdentityProvidersResponse)(nil),  // 6: memos.api.v2.ListIdentityProvidersResponse",
          "1052:  (*GetIdentityProviderRequest)(nil),     // 7: memos.api.v2.GetIdentityProviderRequest",
          "1053:  (*GetIdentityProviderResponse)(nil),    // 8: memos.api.v2.GetIdentityProviderResponse",
          "1054:  (*CreateIdentityProviderRequest)(nil),  // 9: memos.api.v2.CreateIdentityProviderRequest",
          "1055:  (*CreateIdentityProviderResponse)(nil), // 10: memos.api.v2.CreateIdentityProviderResponse",
          "1056:  (*UpdateIdentityProviderRequest)(nil),  // 11: memos.api.v2.UpdateIdentityProviderRequest",
          "1057:  (*UpdateIdentityProviderResponse)(nil), // 12: memos.api.v2.UpdateIdentityProviderResponse",
          "1058:  (*DeleteIdentityProviderRequest)(nil),  // 13: memos.api.v2.DeleteIdentityProviderRequest",
          "1059:  (*DeleteIdentityProviderResponse)(nil), // 14: memos.api.v2.DeleteIdentityProviderResponse",
          "1060:  (*fieldmaskpb.FieldMask)(nil),          // 15: google.protobuf.FieldMask",
          "1064:  2,  // 1: memos.api.v2.IdentityProvider.config:type_name -> memos.api.v2.IdentityProviderConfig",
          "1065:  4,  // 2: memos.api.v2.IdentityProviderConfig.oauth2:type_name -> memos.api.v2.OAuth2Config",
          "1066:  3,  // 3: memos.api.v2.OAuth2Config.field_mapping:type_name -> memos.api.v2.FieldMapping",
          "1067:  1,  // 4: memos.api.v2.ListIdentityProvidersResponse.identity_providers:type_name -> memos.api.v2.IdentityProvider",
          "1068:  1,  // 5: memos.api.v2.GetIdentityProviderResponse.identity_provider:type_name -> memos.api.v2.IdentityProvider",
          "1069:  1,  // 6: memos.api.v2.CreateIdentityProviderRequest.identity_provider:type_name -> memos.api.v2.IdentityProvider",
          "1070:  1,  // 7: memos.api.v2.CreateIdentityProviderResponse.identity_provider:type_name -> memos.api.v2.IdentityProvider",
          "1071:  1,  // 8: memos.api.v2.UpdateIdentityProviderRequest.identity_provider:type_name -> memos.api.v2.IdentityProvider",
          "1072:  15, // 9: memos.api.v2.UpdateIdentityProviderRequest.update_mask:type_name -> google.protobuf.FieldMask",
          "1073:  1,  // 10: memos.api.v2.UpdateIdentityProviderResponse.identity_provider:type_name -> memos.api.v2.IdentityProvider",
          "1074:  5,  // 11: memos.api.v2.IdentityProviderService.ListIdentityProviders:input_type -> memos.api.v2.ListIdentityProvidersRequest",
          "1075:  7,  // 12: memos.api.v2.IdentityProviderService.GetIdentityProvider:input_type -> memos.api.v2.GetIdentityProviderRequest",
          "1076:  9,  // 13: memos.api.v2.IdentityProviderService.CreateIdentityProvider:input_type -> memos.api.v2.CreateIdentityProviderRequest",
          "1077:  11, // 14: memos.api.v2.IdentityProviderService.UpdateIdentityProvider:input_type -> memos.api.v2.UpdateIdentityProviderRequest",
          "1078:  13, // 15: memos.api.v2.IdentityProviderService.DeleteIdentityProvider:input_type -> memos.api.v2.DeleteIdentityProviderRequest",
          "1079:  6,  // 16: memos.api.v2.IdentityProviderService.ListIdentityProviders:output_type -> memos.api.v2.ListIdentityProvidersResponse",
          "1080:  8,  // 17: memos.api.v2.IdentityProviderService.GetIdentityProvider:output_type -> memos.api.v2.GetIdentityProviderResponse",
          "1081:  10, // 18: memos.api.v2.IdentityProviderService.CreateIdentityProvider:output_type -> memos.api.v2.CreateIdentityProviderResponse",
          "1082:  12, // 19: memos.api.v2.IdentityProviderService.UpdateIdentityProvider:output_type -> memos.api.v2.UpdateIdentityProviderResponse",
          "1083:  14, // 20: memos.api.v2.IdentityProviderService.DeleteIdentityProvider:output_type -> memos.api.v2.DeleteIdentityProviderResponse",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "1108:    }",
          "1109:   }",
          "1110:   file_api_v2_idp_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {",
          "1112:    case 0:",
          "1113:     return &v.state",
          "1114:    case 1:",
          "",
          "[Removed Lines]",
          "1111:    switch v := v.(*ListIdentityProvidersRequest); i {",
          "",
          "[Added Lines]",
          "1110:    switch v := v.(*IdentityProviderConfig); i {",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1120:    }",
          "1121:   }",
          "1122:   file_api_v2_idp_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {",
          "1124:    case 0:",
          "1125:     return &v.state",
          "1126:    case 1:",
          "",
          "[Removed Lines]",
          "1123:    switch v := v.(*ListIdentityProvidersResponse); i {",
          "",
          "[Added Lines]",
          "1122:    switch v := v.(*FieldMapping); i {",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "1132:    }",
          "1133:   }",
          "1134:   file_api_v2_idp_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {",
          "1136:    case 0:",
          "1137:     return &v.state",
          "1138:    case 1:",
          "",
          "[Removed Lines]",
          "1135:    switch v := v.(*GetIdentityProviderRequest); i {",
          "",
          "[Added Lines]",
          "1134:    switch v := v.(*OAuth2Config); i {",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "1144:    }",
          "1145:   }",
          "1146:   file_api_v2_idp_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {",
          "1148:    case 0:",
          "1149:     return &v.state",
          "1150:    case 1:",
          "",
          "[Removed Lines]",
          "1147:    switch v := v.(*GetIdentityProviderResponse); i {",
          "",
          "[Added Lines]",
          "1146:    switch v := v.(*ListIdentityProvidersRequest); i {",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "1156:    }",
          "1157:   }",
          "1158:   file_api_v2_idp_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {",
          "1160:    case 0:",
          "1161:     return &v.state",
          "1162:    case 1:",
          "",
          "[Removed Lines]",
          "1159:    switch v := v.(*CreateIdentityProviderRequest); i {",
          "",
          "[Added Lines]",
          "1158:    switch v := v.(*ListIdentityProvidersResponse); i {",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "1168:    }",
          "1169:   }",
          "1170:   file_api_v2_idp_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {",
          "1172:    case 0:",
          "1173:     return &v.state",
          "1174:    case 1:",
          "",
          "[Removed Lines]",
          "1171:    switch v := v.(*CreateIdentityProviderResponse); i {",
          "",
          "[Added Lines]",
          "1170:    switch v := v.(*GetIdentityProviderRequest); i {",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "1180:    }",
          "1181:   }",
          "1182:   file_api_v2_idp_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {",
          "1184:    case 0:",
          "1185:     return &v.state",
          "1186:    case 1:",
          "",
          "[Removed Lines]",
          "1183:    switch v := v.(*UpdateIdentityProviderRequest); i {",
          "",
          "[Added Lines]",
          "1182:    switch v := v.(*GetIdentityProviderResponse); i {",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "1192:    }",
          "1193:   }",
          "1194:   file_api_v2_idp_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {",
          "1196:    case 0:",
          "1197:     return &v.state",
          "1198:    case 1:",
          "",
          "[Removed Lines]",
          "1195:    switch v := v.(*UpdateIdentityProviderResponse); i {",
          "",
          "[Added Lines]",
          "1194:    switch v := v.(*CreateIdentityProviderRequest); i {",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "1204:    }",
          "1205:   }",
          "1206:   file_api_v2_idp_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {",
          "1208:    case 0:",
          "1209:     return &v.state",
          "1210:    case 1:",
          "",
          "[Removed Lines]",
          "1207:    switch v := v.(*DeleteIdentityProviderRequest); i {",
          "",
          "[Added Lines]",
          "1206:    switch v := v.(*CreateIdentityProviderResponse); i {",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "1216:    }",
          "1217:   }",
          "1218:   file_api_v2_idp_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {",
          "1220:    case 0:",
          "1221:     return &v.state",
          "1222:    case 1:",
          "",
          "[Removed Lines]",
          "1219:    switch v := v.(*DeleteIdentityProviderResponse); i {",
          "",
          "[Added Lines]",
          "1218:    switch v := v.(*UpdateIdentityProviderRequest); i {",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "1228:    }",
          "1229:   }",
          "1230:   file_api_v2_idp_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {",
          "1232:    case 0:",
          "1233:     return &v.state",
          "1234:    case 1:",
          "",
          "[Removed Lines]",
          "1231:    switch v := v.(*IdentityProvider_Config); i {",
          "",
          "[Added Lines]",
          "1230:    switch v := v.(*UpdateIdentityProviderResponse); i {",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "1240:    }",
          "1241:   }",
          "1242:   file_api_v2_idp_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {",
          "1244:    case 0:",
          "1245:     return &v.state",
          "1246:    case 1:",
          "",
          "[Removed Lines]",
          "1243:    switch v := v.(*IdentityProvider_Config_FieldMapping); i {",
          "",
          "[Added Lines]",
          "1242:    switch v := v.(*DeleteIdentityProviderRequest); i {",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "1252:    }",
          "1253:   }",
          "1254:   file_api_v2_idp_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {",
          "1256:    case 0:",
          "1257:     return &v.state",
          "1258:    case 1:",
          "",
          "[Removed Lines]",
          "1255:    switch v := v.(*IdentityProvider_Config_OAuth2); i {",
          "",
          "[Added Lines]",
          "1254:    switch v := v.(*DeleteIdentityProviderResponse); i {",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "1264:    }",
          "1265:   }",
          "1266:  }",
          "1269:  }",
          "1270:  type x struct{}",
          "1271:  out := protoimpl.TypeBuilder{",
          "",
          "[Removed Lines]",
          "1267:  file_api_v2_idp_service_proto_msgTypes[11].OneofWrappers = []interface{}{",
          "1268:   (*IdentityProvider_Config_Oauth2)(nil),",
          "",
          "[Added Lines]",
          "1266:  file_api_v2_idp_service_proto_msgTypes[1].OneofWrappers = []interface{}{",
          "1267:   (*IdentityProviderConfig_Oauth2)(nil),",
          "",
          "---------------"
        ],
        "proto/gen/api/v2/storage_service.pb.go||proto/gen/api/v2/storage_service.pb.go": [
          "File: proto/gen/api/v2/storage_service.pb.go -> proto/gen/api/v2/storage_service.pb.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: package apiv2",
          "9: import (",
          "10:  _ \"google.golang.org/genproto/googleapis/api/annotations\"",
          "11:  protoreflect \"google.golang.org/protobuf/reflect/protoreflect\"",
          "12:  protoimpl \"google.golang.org/protobuf/runtime/protoimpl\"",
          "13:  fieldmaskpb \"google.golang.org/protobuf/types/known/fieldmaskpb\"",
          "14:  reflect \"reflect\"",
          "15:  sync \"sync\"",
          "16: )",
          "18: const (",
          "20:  _ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)",
          "22:  _ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)",
          "23: )",
          "25: type Storage_Type int32",
          "27: const (",
          "28:  Storage_TYPE_UNSPECIFIED Storage_Type = 0",
          "29:  Storage_S3               Storage_Type = 1",
          "30: )",
          "33: var (",
          "34:  Storage_Type_name = map[int32]string{",
          "35:   0: \"TYPE_UNSPECIFIED\",",
          "36:   1: \"S3\",",
          "37:  }",
          "38:  Storage_Type_value = map[string]int32{",
          "39:   \"TYPE_UNSPECIFIED\": 0,",
          "40:   \"S3\":               1,",
          "41:  }",
          "42: )",
          "44: func (x Storage_Type) Enum() *Storage_Type {",
          "45:  p := new(Storage_Type)",
          "47:  return p",
          "48: }",
          "50: func (x Storage_Type) String() string {",
          "51:  return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))",
          "52: }",
          "54: func (Storage_Type) Descriptor() protoreflect.EnumDescriptor {",
          "55:  return file_api_v2_storage_service_proto_enumTypes[0].Descriptor()",
          "56: }",
          "58: func (Storage_Type) Type() protoreflect.EnumType {",
          "59:  return &file_api_v2_storage_service_proto_enumTypes[0]",
          "60: }",
          "62: func (x Storage_Type) Number() protoreflect.EnumNumber {",
          "63:  return protoreflect.EnumNumber(x)",
          "64: }",
          "67: func (Storage_Type) EnumDescriptor() ([]byte, []int) {",
          "68:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{0, 0}",
          "69: }",
          "71: type Storage struct {",
          "72:  state         protoimpl.MessageState",
          "73:  sizeCache     protoimpl.SizeCache",
          "74:  unknownFields protoimpl.UnknownFields",
          "76:  Id     int32          `protobuf:\"varint,1,opt,name=id,proto3\" json:\"id,omitempty\"`",
          "77:  Title  string         `protobuf:\"bytes,2,opt,name=title,proto3\" json:\"title,omitempty\"`",
          "78:  Type   Storage_Type   `protobuf:\"varint,3,opt,name=type,proto3,enum=memos.api.v2.Storage_Type\" json:\"type,omitempty\"`",
          "79:  Config *StorageConfig `protobuf:\"bytes,4,opt,name=config,proto3\" json:\"config,omitempty\"`",
          "80: }",
          "82: func (x *Storage) Reset() {",
          "84:  if protoimpl.UnsafeEnabled {",
          "85:   mi := &file_api_v2_storage_service_proto_msgTypes[0]",
          "86:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "87:   ms.StoreMessageInfo(mi)",
          "88:  }",
          "89: }",
          "91: func (x *Storage) String() string {",
          "92:  return protoimpl.X.MessageStringOf(x)",
          "93: }",
          "95: func (*Storage) ProtoMessage() {}",
          "97: func (x *Storage) ProtoReflect() protoreflect.Message {",
          "98:  mi := &file_api_v2_storage_service_proto_msgTypes[0]",
          "99:  if protoimpl.UnsafeEnabled && x != nil {",
          "100:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "101:   if ms.LoadMessageInfo() == nil {",
          "102:    ms.StoreMessageInfo(mi)",
          "103:   }",
          "104:   return ms",
          "105:  }",
          "106:  return mi.MessageOf(x)",
          "107: }",
          "110: func (*Storage) Descriptor() ([]byte, []int) {",
          "111:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{0}",
          "112: }",
          "114: func (x *Storage) GetId() int32 {",
          "115:  if x != nil {",
          "116:   return x.Id",
          "117:  }",
          "118:  return 0",
          "119: }",
          "121: func (x *Storage) GetTitle() string {",
          "122:  if x != nil {",
          "123:   return x.Title",
          "124:  }",
          "125:  return \"\"",
          "126: }",
          "128: func (x *Storage) GetType() Storage_Type {",
          "129:  if x != nil {",
          "130:   return x.Type",
          "131:  }",
          "132:  return Storage_TYPE_UNSPECIFIED",
          "133: }",
          "135: func (x *Storage) GetConfig() *StorageConfig {",
          "136:  if x != nil {",
          "137:   return x.Config",
          "138:  }",
          "139:  return nil",
          "140: }",
          "142: type StorageConfig struct {",
          "143:  state         protoimpl.MessageState",
          "144:  sizeCache     protoimpl.SizeCache",
          "145:  unknownFields protoimpl.UnknownFields",
          "150:  StorageConfig isStorageConfig_StorageConfig `protobuf_oneof:\"storage_config\"`",
          "151: }",
          "153: func (x *StorageConfig) Reset() {",
          "155:  if protoimpl.UnsafeEnabled {",
          "156:   mi := &file_api_v2_storage_service_proto_msgTypes[1]",
          "157:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "158:   ms.StoreMessageInfo(mi)",
          "159:  }",
          "160: }",
          "162: func (x *StorageConfig) String() string {",
          "163:  return protoimpl.X.MessageStringOf(x)",
          "164: }",
          "166: func (*StorageConfig) ProtoMessage() {}",
          "168: func (x *StorageConfig) ProtoReflect() protoreflect.Message {",
          "169:  mi := &file_api_v2_storage_service_proto_msgTypes[1]",
          "170:  if protoimpl.UnsafeEnabled && x != nil {",
          "171:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "172:   if ms.LoadMessageInfo() == nil {",
          "173:    ms.StoreMessageInfo(mi)",
          "174:   }",
          "175:   return ms",
          "176:  }",
          "177:  return mi.MessageOf(x)",
          "178: }",
          "181: func (*StorageConfig) Descriptor() ([]byte, []int) {",
          "182:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{1}",
          "183: }",
          "185: func (m *StorageConfig) GetStorageConfig() isStorageConfig_StorageConfig {",
          "186:  if m != nil {",
          "187:   return m.StorageConfig",
          "188:  }",
          "189:  return nil",
          "190: }",
          "192: func (x *StorageConfig) GetS3Config() *S3Config {",
          "193:  if x, ok := x.GetStorageConfig().(*StorageConfig_S3Config); ok {",
          "194:   return x.S3Config",
          "195:  }",
          "196:  return nil",
          "197: }",
          "199: type isStorageConfig_StorageConfig interface {",
          "200:  isStorageConfig_StorageConfig()",
          "201: }",
          "203: type StorageConfig_S3Config struct {",
          "204:  S3Config *S3Config `protobuf:\"bytes,1,opt,name=s3_config,json=s3Config,proto3,oneof\"`",
          "205: }",
          "207: func (*StorageConfig_S3Config) isStorageConfig_StorageConfig() {}",
          "209: type S3Config struct {",
          "210:  state         protoimpl.MessageState",
          "211:  sizeCache     protoimpl.SizeCache",
          "212:  unknownFields protoimpl.UnknownFields",
          "214:  EndPoint  string `protobuf:\"bytes,1,opt,name=end_point,json=endPoint,proto3\" json:\"end_point,omitempty\"`",
          "215:  Path      string `protobuf:\"bytes,2,opt,name=path,proto3\" json:\"path,omitempty\"`",
          "216:  Region    string `protobuf:\"bytes,3,opt,name=region,proto3\" json:\"region,omitempty\"`",
          "217:  AccessKey string `protobuf:\"bytes,4,opt,name=access_key,json=accessKey,proto3\" json:\"access_key,omitempty\"`",
          "218:  SecretKey string `protobuf:\"bytes,5,opt,name=secret_key,json=secretKey,proto3\" json:\"secret_key,omitempty\"`",
          "219:  Bucket    string `protobuf:\"bytes,6,opt,name=bucket,proto3\" json:\"bucket,omitempty\"`",
          "220:  UrlPrefix string `protobuf:\"bytes,7,opt,name=url_prefix,json=urlPrefix,proto3\" json:\"url_prefix,omitempty\"`",
          "221:  UrlSuffix string `protobuf:\"bytes,8,opt,name=url_suffix,json=urlSuffix,proto3\" json:\"url_suffix,omitempty\"`",
          "222:  PreSign   bool   `protobuf:\"varint,9,opt,name=pre_sign,json=preSign,proto3\" json:\"pre_sign,omitempty\"`",
          "223: }",
          "225: func (x *S3Config) Reset() {",
          "227:  if protoimpl.UnsafeEnabled {",
          "228:   mi := &file_api_v2_storage_service_proto_msgTypes[2]",
          "229:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "230:   ms.StoreMessageInfo(mi)",
          "231:  }",
          "232: }",
          "234: func (x *S3Config) String() string {",
          "235:  return protoimpl.X.MessageStringOf(x)",
          "236: }",
          "238: func (*S3Config) ProtoMessage() {}",
          "240: func (x *S3Config) ProtoReflect() protoreflect.Message {",
          "241:  mi := &file_api_v2_storage_service_proto_msgTypes[2]",
          "242:  if protoimpl.UnsafeEnabled && x != nil {",
          "243:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "244:   if ms.LoadMessageInfo() == nil {",
          "245:    ms.StoreMessageInfo(mi)",
          "246:   }",
          "247:   return ms",
          "248:  }",
          "249:  return mi.MessageOf(x)",
          "250: }",
          "253: func (*S3Config) Descriptor() ([]byte, []int) {",
          "254:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{2}",
          "255: }",
          "257: func (x *S3Config) GetEndPoint() string {",
          "258:  if x != nil {",
          "259:   return x.EndPoint",
          "260:  }",
          "261:  return \"\"",
          "262: }",
          "264: func (x *S3Config) GetPath() string {",
          "265:  if x != nil {",
          "266:   return x.Path",
          "267:  }",
          "268:  return \"\"",
          "269: }",
          "271: func (x *S3Config) GetRegion() string {",
          "272:  if x != nil {",
          "273:   return x.Region",
          "274:  }",
          "275:  return \"\"",
          "276: }",
          "278: func (x *S3Config) GetAccessKey() string {",
          "279:  if x != nil {",
          "280:   return x.AccessKey",
          "281:  }",
          "282:  return \"\"",
          "283: }",
          "285: func (x *S3Config) GetSecretKey() string {",
          "286:  if x != nil {",
          "287:   return x.SecretKey",
          "288:  }",
          "289:  return \"\"",
          "290: }",
          "292: func (x *S3Config) GetBucket() string {",
          "293:  if x != nil {",
          "294:   return x.Bucket",
          "295:  }",
          "296:  return \"\"",
          "297: }",
          "299: func (x *S3Config) GetUrlPrefix() string {",
          "300:  if x != nil {",
          "301:   return x.UrlPrefix",
          "302:  }",
          "303:  return \"\"",
          "304: }",
          "306: func (x *S3Config) GetUrlSuffix() string {",
          "307:  if x != nil {",
          "308:   return x.UrlSuffix",
          "309:  }",
          "310:  return \"\"",
          "311: }",
          "313: func (x *S3Config) GetPreSign() bool {",
          "314:  if x != nil {",
          "315:   return x.PreSign",
          "316:  }",
          "317:  return false",
          "318: }",
          "320: type CreateStorageRequest struct {",
          "321:  state         protoimpl.MessageState",
          "322:  sizeCache     protoimpl.SizeCache",
          "323:  unknownFields protoimpl.UnknownFields",
          "325:  Storage *Storage `protobuf:\"bytes,1,opt,name=storage,proto3\" json:\"storage,omitempty\"`",
          "326: }",
          "328: func (x *CreateStorageRequest) Reset() {",
          "330:  if protoimpl.UnsafeEnabled {",
          "331:   mi := &file_api_v2_storage_service_proto_msgTypes[3]",
          "332:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "333:   ms.StoreMessageInfo(mi)",
          "334:  }",
          "335: }",
          "337: func (x *CreateStorageRequest) String() string {",
          "338:  return protoimpl.X.MessageStringOf(x)",
          "339: }",
          "341: func (*CreateStorageRequest) ProtoMessage() {}",
          "343: func (x *CreateStorageRequest) ProtoReflect() protoreflect.Message {",
          "344:  mi := &file_api_v2_storage_service_proto_msgTypes[3]",
          "345:  if protoimpl.UnsafeEnabled && x != nil {",
          "346:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "347:   if ms.LoadMessageInfo() == nil {",
          "348:    ms.StoreMessageInfo(mi)",
          "349:   }",
          "350:   return ms",
          "351:  }",
          "352:  return mi.MessageOf(x)",
          "353: }",
          "356: func (*CreateStorageRequest) Descriptor() ([]byte, []int) {",
          "357:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{3}",
          "358: }",
          "360: func (x *CreateStorageRequest) GetStorage() *Storage {",
          "361:  if x != nil {",
          "362:   return x.Storage",
          "363:  }",
          "364:  return nil",
          "365: }",
          "367: type CreateStorageResponse struct {",
          "368:  state         protoimpl.MessageState",
          "369:  sizeCache     protoimpl.SizeCache",
          "370:  unknownFields protoimpl.UnknownFields",
          "372:  Storage *Storage `protobuf:\"bytes,1,opt,name=storage,proto3\" json:\"storage,omitempty\"`",
          "373: }",
          "375: func (x *CreateStorageResponse) Reset() {",
          "377:  if protoimpl.UnsafeEnabled {",
          "378:   mi := &file_api_v2_storage_service_proto_msgTypes[4]",
          "379:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "380:   ms.StoreMessageInfo(mi)",
          "381:  }",
          "382: }",
          "384: func (x *CreateStorageResponse) String() string {",
          "385:  return protoimpl.X.MessageStringOf(x)",
          "386: }",
          "388: func (*CreateStorageResponse) ProtoMessage() {}",
          "390: func (x *CreateStorageResponse) ProtoReflect() protoreflect.Message {",
          "391:  mi := &file_api_v2_storage_service_proto_msgTypes[4]",
          "392:  if protoimpl.UnsafeEnabled && x != nil {",
          "393:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "394:   if ms.LoadMessageInfo() == nil {",
          "395:    ms.StoreMessageInfo(mi)",
          "396:   }",
          "397:   return ms",
          "398:  }",
          "399:  return mi.MessageOf(x)",
          "400: }",
          "403: func (*CreateStorageResponse) Descriptor() ([]byte, []int) {",
          "404:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{4}",
          "405: }",
          "407: func (x *CreateStorageResponse) GetStorage() *Storage {",
          "408:  if x != nil {",
          "409:   return x.Storage",
          "410:  }",
          "411:  return nil",
          "412: }",
          "414: type GetStorageRequest struct {",
          "415:  state         protoimpl.MessageState",
          "416:  sizeCache     protoimpl.SizeCache",
          "417:  unknownFields protoimpl.UnknownFields",
          "419:  Id int32 `protobuf:\"varint,1,opt,name=id,proto3\" json:\"id,omitempty\"`",
          "420: }",
          "422: func (x *GetStorageRequest) Reset() {",
          "424:  if protoimpl.UnsafeEnabled {",
          "425:   mi := &file_api_v2_storage_service_proto_msgTypes[5]",
          "426:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "427:   ms.StoreMessageInfo(mi)",
          "428:  }",
          "429: }",
          "431: func (x *GetStorageRequest) String() string {",
          "432:  return protoimpl.X.MessageStringOf(x)",
          "433: }",
          "435: func (*GetStorageRequest) ProtoMessage() {}",
          "437: func (x *GetStorageRequest) ProtoReflect() protoreflect.Message {",
          "438:  mi := &file_api_v2_storage_service_proto_msgTypes[5]",
          "439:  if protoimpl.UnsafeEnabled && x != nil {",
          "440:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "441:   if ms.LoadMessageInfo() == nil {",
          "442:    ms.StoreMessageInfo(mi)",
          "443:   }",
          "444:   return ms",
          "445:  }",
          "446:  return mi.MessageOf(x)",
          "447: }",
          "450: func (*GetStorageRequest) Descriptor() ([]byte, []int) {",
          "451:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{5}",
          "452: }",
          "454: func (x *GetStorageRequest) GetId() int32 {",
          "455:  if x != nil {",
          "456:   return x.Id",
          "457:  }",
          "458:  return 0",
          "459: }",
          "461: type GetStorageResponse struct {",
          "462:  state         protoimpl.MessageState",
          "463:  sizeCache     protoimpl.SizeCache",
          "464:  unknownFields protoimpl.UnknownFields",
          "466:  Storage *Storage `protobuf:\"bytes,1,opt,name=storage,proto3\" json:\"storage,omitempty\"`",
          "467: }",
          "469: func (x *GetStorageResponse) Reset() {",
          "471:  if protoimpl.UnsafeEnabled {",
          "472:   mi := &file_api_v2_storage_service_proto_msgTypes[6]",
          "473:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "474:   ms.StoreMessageInfo(mi)",
          "475:  }",
          "476: }",
          "478: func (x *GetStorageResponse) String() string {",
          "479:  return protoimpl.X.MessageStringOf(x)",
          "480: }",
          "482: func (*GetStorageResponse) ProtoMessage() {}",
          "484: func (x *GetStorageResponse) ProtoReflect() protoreflect.Message {",
          "485:  mi := &file_api_v2_storage_service_proto_msgTypes[6]",
          "486:  if protoimpl.UnsafeEnabled && x != nil {",
          "487:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "488:   if ms.LoadMessageInfo() == nil {",
          "489:    ms.StoreMessageInfo(mi)",
          "490:   }",
          "491:   return ms",
          "492:  }",
          "493:  return mi.MessageOf(x)",
          "494: }",
          "497: func (*GetStorageResponse) Descriptor() ([]byte, []int) {",
          "498:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{6}",
          "499: }",
          "501: func (x *GetStorageResponse) GetStorage() *Storage {",
          "502:  if x != nil {",
          "503:   return x.Storage",
          "504:  }",
          "505:  return nil",
          "506: }",
          "508: type ListStoragesRequest struct {",
          "509:  state         protoimpl.MessageState",
          "510:  sizeCache     protoimpl.SizeCache",
          "511:  unknownFields protoimpl.UnknownFields",
          "512: }",
          "514: func (x *ListStoragesRequest) Reset() {",
          "516:  if protoimpl.UnsafeEnabled {",
          "517:   mi := &file_api_v2_storage_service_proto_msgTypes[7]",
          "518:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "519:   ms.StoreMessageInfo(mi)",
          "520:  }",
          "521: }",
          "523: func (x *ListStoragesRequest) String() string {",
          "524:  return protoimpl.X.MessageStringOf(x)",
          "525: }",
          "527: func (*ListStoragesRequest) ProtoMessage() {}",
          "529: func (x *ListStoragesRequest) ProtoReflect() protoreflect.Message {",
          "530:  mi := &file_api_v2_storage_service_proto_msgTypes[7]",
          "531:  if protoimpl.UnsafeEnabled && x != nil {",
          "532:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "533:   if ms.LoadMessageInfo() == nil {",
          "534:    ms.StoreMessageInfo(mi)",
          "535:   }",
          "536:   return ms",
          "537:  }",
          "538:  return mi.MessageOf(x)",
          "539: }",
          "542: func (*ListStoragesRequest) Descriptor() ([]byte, []int) {",
          "543:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{7}",
          "544: }",
          "546: type ListStoragesResponse struct {",
          "547:  state         protoimpl.MessageState",
          "548:  sizeCache     protoimpl.SizeCache",
          "549:  unknownFields protoimpl.UnknownFields",
          "551:  Storages []*Storage `protobuf:\"bytes,1,rep,name=storages,proto3\" json:\"storages,omitempty\"`",
          "552: }",
          "554: func (x *ListStoragesResponse) Reset() {",
          "556:  if protoimpl.UnsafeEnabled {",
          "557:   mi := &file_api_v2_storage_service_proto_msgTypes[8]",
          "558:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "559:   ms.StoreMessageInfo(mi)",
          "560:  }",
          "561: }",
          "563: func (x *ListStoragesResponse) String() string {",
          "564:  return protoimpl.X.MessageStringOf(x)",
          "565: }",
          "567: func (*ListStoragesResponse) ProtoMessage() {}",
          "569: func (x *ListStoragesResponse) ProtoReflect() protoreflect.Message {",
          "570:  mi := &file_api_v2_storage_service_proto_msgTypes[8]",
          "571:  if protoimpl.UnsafeEnabled && x != nil {",
          "572:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "573:   if ms.LoadMessageInfo() == nil {",
          "574:    ms.StoreMessageInfo(mi)",
          "575:   }",
          "576:   return ms",
          "577:  }",
          "578:  return mi.MessageOf(x)",
          "579: }",
          "582: func (*ListStoragesResponse) Descriptor() ([]byte, []int) {",
          "583:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{8}",
          "584: }",
          "586: func (x *ListStoragesResponse) GetStorages() []*Storage {",
          "587:  if x != nil {",
          "588:   return x.Storages",
          "589:  }",
          "590:  return nil",
          "591: }",
          "593: type UpdateStorageRequest struct {",
          "594:  state         protoimpl.MessageState",
          "595:  sizeCache     protoimpl.SizeCache",
          "596:  unknownFields protoimpl.UnknownFields",
          "598:  Storage    *Storage               `protobuf:\"bytes,1,opt,name=storage,proto3\" json:\"storage,omitempty\"`",
          "599:  UpdateMask *fieldmaskpb.FieldMask `protobuf:\"bytes,2,opt,name=update_mask,json=updateMask,proto3\" json:\"update_mask,omitempty\"`",
          "600: }",
          "602: func (x *UpdateStorageRequest) Reset() {",
          "604:  if protoimpl.UnsafeEnabled {",
          "605:   mi := &file_api_v2_storage_service_proto_msgTypes[9]",
          "606:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "607:   ms.StoreMessageInfo(mi)",
          "608:  }",
          "609: }",
          "611: func (x *UpdateStorageRequest) String() string {",
          "612:  return protoimpl.X.MessageStringOf(x)",
          "613: }",
          "615: func (*UpdateStorageRequest) ProtoMessage() {}",
          "617: func (x *UpdateStorageRequest) ProtoReflect() protoreflect.Message {",
          "618:  mi := &file_api_v2_storage_service_proto_msgTypes[9]",
          "619:  if protoimpl.UnsafeEnabled && x != nil {",
          "620:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "621:   if ms.LoadMessageInfo() == nil {",
          "622:    ms.StoreMessageInfo(mi)",
          "623:   }",
          "624:   return ms",
          "625:  }",
          "626:  return mi.MessageOf(x)",
          "627: }",
          "630: func (*UpdateStorageRequest) Descriptor() ([]byte, []int) {",
          "631:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{9}",
          "632: }",
          "634: func (x *UpdateStorageRequest) GetStorage() *Storage {",
          "635:  if x != nil {",
          "636:   return x.Storage",
          "637:  }",
          "638:  return nil",
          "639: }",
          "641: func (x *UpdateStorageRequest) GetUpdateMask() *fieldmaskpb.FieldMask {",
          "642:  if x != nil {",
          "643:   return x.UpdateMask",
          "644:  }",
          "645:  return nil",
          "646: }",
          "648: type UpdateStorageResponse struct {",
          "649:  state         protoimpl.MessageState",
          "650:  sizeCache     protoimpl.SizeCache",
          "651:  unknownFields protoimpl.UnknownFields",
          "653:  Storage *Storage `protobuf:\"bytes,1,opt,name=storage,proto3\" json:\"storage,omitempty\"`",
          "654: }",
          "656: func (x *UpdateStorageResponse) Reset() {",
          "658:  if protoimpl.UnsafeEnabled {",
          "659:   mi := &file_api_v2_storage_service_proto_msgTypes[10]",
          "660:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "661:   ms.StoreMessageInfo(mi)",
          "662:  }",
          "663: }",
          "665: func (x *UpdateStorageResponse) String() string {",
          "666:  return protoimpl.X.MessageStringOf(x)",
          "667: }",
          "669: func (*UpdateStorageResponse) ProtoMessage() {}",
          "671: func (x *UpdateStorageResponse) ProtoReflect() protoreflect.Message {",
          "672:  mi := &file_api_v2_storage_service_proto_msgTypes[10]",
          "673:  if protoimpl.UnsafeEnabled && x != nil {",
          "674:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "675:   if ms.LoadMessageInfo() == nil {",
          "676:    ms.StoreMessageInfo(mi)",
          "677:   }",
          "678:   return ms",
          "679:  }",
          "680:  return mi.MessageOf(x)",
          "681: }",
          "684: func (*UpdateStorageResponse) Descriptor() ([]byte, []int) {",
          "685:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{10}",
          "686: }",
          "688: func (x *UpdateStorageResponse) GetStorage() *Storage {",
          "689:  if x != nil {",
          "690:   return x.Storage",
          "691:  }",
          "692:  return nil",
          "693: }",
          "695: type DeleteStorageRequest struct {",
          "696:  state         protoimpl.MessageState",
          "697:  sizeCache     protoimpl.SizeCache",
          "698:  unknownFields protoimpl.UnknownFields",
          "700:  Id int32 `protobuf:\"varint,1,opt,name=id,proto3\" json:\"id,omitempty\"`",
          "701: }",
          "703: func (x *DeleteStorageRequest) Reset() {",
          "705:  if protoimpl.UnsafeEnabled {",
          "706:   mi := &file_api_v2_storage_service_proto_msgTypes[11]",
          "707:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "708:   ms.StoreMessageInfo(mi)",
          "709:  }",
          "710: }",
          "712: func (x *DeleteStorageRequest) String() string {",
          "713:  return protoimpl.X.MessageStringOf(x)",
          "714: }",
          "716: func (*DeleteStorageRequest) ProtoMessage() {}",
          "718: func (x *DeleteStorageRequest) ProtoReflect() protoreflect.Message {",
          "719:  mi := &file_api_v2_storage_service_proto_msgTypes[11]",
          "720:  if protoimpl.UnsafeEnabled && x != nil {",
          "721:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "722:   if ms.LoadMessageInfo() == nil {",
          "723:    ms.StoreMessageInfo(mi)",
          "724:   }",
          "725:   return ms",
          "726:  }",
          "727:  return mi.MessageOf(x)",
          "728: }",
          "731: func (*DeleteStorageRequest) Descriptor() ([]byte, []int) {",
          "732:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{11}",
          "733: }",
          "735: func (x *DeleteStorageRequest) GetId() int32 {",
          "736:  if x != nil {",
          "737:   return x.Id",
          "738:  }",
          "739:  return 0",
          "740: }",
          "742: type DeleteStorageResponse struct {",
          "743:  state         protoimpl.MessageState",
          "744:  sizeCache     protoimpl.SizeCache",
          "745:  unknownFields protoimpl.UnknownFields",
          "746: }",
          "748: func (x *DeleteStorageResponse) Reset() {",
          "750:  if protoimpl.UnsafeEnabled {",
          "751:   mi := &file_api_v2_storage_service_proto_msgTypes[12]",
          "752:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "753:   ms.StoreMessageInfo(mi)",
          "754:  }",
          "755: }",
          "757: func (x *DeleteStorageResponse) String() string {",
          "758:  return protoimpl.X.MessageStringOf(x)",
          "759: }",
          "761: func (*DeleteStorageResponse) ProtoMessage() {}",
          "763: func (x *DeleteStorageResponse) ProtoReflect() protoreflect.Message {",
          "764:  mi := &file_api_v2_storage_service_proto_msgTypes[12]",
          "765:  if protoimpl.UnsafeEnabled && x != nil {",
          "766:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "767:   if ms.LoadMessageInfo() == nil {",
          "768:    ms.StoreMessageInfo(mi)",
          "769:   }",
          "770:   return ms",
          "771:  }",
          "772:  return mi.MessageOf(x)",
          "773: }",
          "776: func (*DeleteStorageResponse) Descriptor() ([]byte, []int) {",
          "777:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{12}",
          "778: }",
          "780: var File_api_v2_storage_service_proto protoreflect.FileDescriptor",
          "782: var file_api_v2_storage_service_proto_rawDesc = []byte{",
          "783:  0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,",
          "784:  0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,",
          "785:  0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x1a, 0x1c, 0x67, 0x6f,",
          "786:  0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,",
          "787:  0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67,",
          "788:  0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,",
          "789:  0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,",
          "790:  0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e,",
          "791:  0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xba, 0x01, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,",
          "792:  0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,",
          "793:  0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,",
          "794:  0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,",
          "795:  0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70,",
          "796:  0x69, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x79, 0x70,",
          "797:  0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,",
          "798:  0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e,",
          "799:  0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f,",
          "800:  0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x24, 0x0a, 0x04,",
          "801:  0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53,",
          "802:  0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x53, 0x33,",
          "803:  0x10, 0x01, 0x22, 0x58, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e,",
          "804:  0x66, 0x69, 0x67, 0x12, 0x35, 0x0a, 0x09, 0x73, 0x33, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,",
          "805:  0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61,",
          "806:  0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x33, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00,",
          "807:  0x52, 0x08, 0x73, 0x33, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x10, 0x0a, 0x0e, 0x73, 0x74,",
          "808:  0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x82, 0x02, 0x0a,",
          "809:  0x08, 0x53, 0x33, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x64,",
          "810:  0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e,",
          "811:  0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,",
          "812:  0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,",
          "813:  0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69,",
          "814:  0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79,",
          "815:  0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,",
          "816:  0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18,",
          "817:  0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79,",
          "818:  0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,",
          "819:  0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x72, 0x6c, 0x5f,",
          "820:  0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x72,",
          "821:  0x6c, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x72, 0x6c, 0x5f, 0x73,",
          "822:  0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x72, 0x6c,",
          "823:  0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x5f, 0x73, 0x69,",
          "824:  0x67, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x65, 0x53, 0x69, 0x67,",
          "825:  0x6e, 0x22, 0x47, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61,",
          "826:  0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x73, 0x74, 0x6f,",
          "827:  0x72, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x6d,",
          "828:  0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,",
          "829:  0x65, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x22, 0x48, 0x0a, 0x15, 0x43, 0x72,",
          "830:  0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,",
          "831:  0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x01,",
          "832:  0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69,",
          "833:  0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x07, 0x73, 0x74, 0x6f,",
          "834:  0x72, 0x61, 0x67, 0x65, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61,",
          "835:  0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,",
          "836:  0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x45, 0x0a, 0x12, 0x47, 0x65, 0x74,",
          "837:  0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,",
          "838:  0x2f, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,",
          "839:  0x32, 0x15, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e,",
          "840:  0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,",
          "841:  0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73,",
          "842:  0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x49, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53,",
          "843:  0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,",
          "844:  0x31, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,",
          "845:  0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32,",
          "846:  0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,",
          "847:  0x65, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f,",
          "848:  0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x73,",
          "849:  0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d,",
          "850:  0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x6f, 0x72,",
          "851:  0x61, 0x67, 0x65, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x0b,",
          "852:  0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,",
          "853:  0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,",
          "854:  0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75,",
          "855:  0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x48, 0x0a, 0x15, 0x55, 0x70, 0x64,",
          "856:  0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,",
          "857:  0x73, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,",
          "858:  0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,",
          "859:  0x76, 0x32, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72,",
          "860:  0x61, 0x67, 0x65, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f,",
          "861:  0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,",
          "862:  0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x44,",
          "863:  0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,",
          "864:  0x6f, 0x6e, 0x73, 0x65, 0x32, 0x8c, 0x05, 0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,",
          "865:  0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x75, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,",
          "866:  0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x22, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73,",
          "867:  0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74,",
          "868:  0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d,",
          "869:  0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61,",
          "870:  0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,",
          "871:  0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x61,",
          "872:  0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x12, 0x73,",
          "873:  0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x6d,",
          "874:  0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x53,",
          "875:  0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,",
          "876:  0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74,",
          "877:  0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,",
          "878:  0x22, 0xda, 0x41, 0x02, 0x69, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x61,",
          "879:  0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x7b,",
          "880:  0x69, 0x64, 0x7d, 0x12, 0x6f, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61,",
          "881:  0x67, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,",
          "882:  0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x52,",
          "883:  0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61,",
          "884:  0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,",
          "885:  0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93,",
          "886:  0x02, 0x12, 0x12, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x74, 0x6f, 0x72,",
          "887:  0x61, 0x67, 0x65, 0x73, 0x12, 0x9e, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,",
          "888:  0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x22, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61,",
          "889:  0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72,",
          "890:  0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x65, 0x6d,",
          "891:  0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,",
          "892:  0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,",
          "893:  0x44, 0xda, 0x41, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2c, 0x75, 0x70, 0x64, 0x61,",
          "894:  0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x07, 0x73,",
          "895:  0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x32, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f,",
          "896:  0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x7b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,",
          "897:  0x65, 0x2e, 0x69, 0x64, 0x7d, 0x12, 0x7c, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,",
          "898:  0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x22, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61,",
          "899:  0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72,",
          "900:  0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x65, 0x6d,",
          "901:  0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,",
          "902:  0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,",
          "903:  0x22, 0xda, 0x41, 0x02, 0x69, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x2a, 0x15, 0x2f, 0x61,",
          "904:  0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x7b,",
          "905:  0x69, 0x64, 0x7d, 0x42, 0xab, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x6d, 0x6f,",
          "906:  0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x42, 0x13, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,",
          "907:  0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,",
          "908:  0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x73, 0x65, 0x6d,",
          "909:  0x65, 0x6d, 0x6f, 0x73, 0x2f, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,",
          "910:  0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x3b, 0x61, 0x70, 0x69, 0x76,",
          "911:  0x32, 0xa2, 0x02, 0x03, 0x4d, 0x41, 0x58, 0xaa, 0x02, 0x0c, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x2e,",
          "912:  0x41, 0x70, 0x69, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x0c, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x5c, 0x41,",
          "913:  0x70, 0x69, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x18, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x5c, 0x41, 0x70,",
          "914:  0x69, 0x5c, 0x56, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,",
          "915:  0xea, 0x02, 0x0e, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56,",
          "916:  0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,",
          "917: }",
          "919: var (",
          "920:  file_api_v2_storage_service_proto_rawDescOnce sync.Once",
          "921:  file_api_v2_storage_service_proto_rawDescData = file_api_v2_storage_service_proto_rawDesc",
          "922: )",
          "924: func file_api_v2_storage_service_proto_rawDescGZIP() []byte {",
          "925:  file_api_v2_storage_service_proto_rawDescOnce.Do(func() {",
          "926:   file_api_v2_storage_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v2_storage_service_proto_rawDescData)",
          "927:  })",
          "928:  return file_api_v2_storage_service_proto_rawDescData",
          "929: }",
          "931: var file_api_v2_storage_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)",
          "932: var file_api_v2_storage_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)",
          "933: var file_api_v2_storage_service_proto_goTypes = []interface{}{",
          "934:  (Storage_Type)(0),             // 0: memos.api.v2.Storage.Type",
          "935:  (*Storage)(nil),               // 1: memos.api.v2.Storage",
          "936:  (*StorageConfig)(nil),         // 2: memos.api.v2.StorageConfig",
          "937:  (*S3Config)(nil),              // 3: memos.api.v2.S3Config",
          "938:  (*CreateStorageRequest)(nil),  // 4: memos.api.v2.CreateStorageRequest",
          "939:  (*CreateStorageResponse)(nil), // 5: memos.api.v2.CreateStorageResponse",
          "940:  (*GetStorageRequest)(nil),     // 6: memos.api.v2.GetStorageRequest",
          "941:  (*GetStorageResponse)(nil),    // 7: memos.api.v2.GetStorageResponse",
          "942:  (*ListStoragesRequest)(nil),   // 8: memos.api.v2.ListStoragesRequest",
          "943:  (*ListStoragesResponse)(nil),  // 9: memos.api.v2.ListStoragesResponse",
          "944:  (*UpdateStorageRequest)(nil),  // 10: memos.api.v2.UpdateStorageRequest",
          "945:  (*UpdateStorageResponse)(nil), // 11: memos.api.v2.UpdateStorageResponse",
          "946:  (*DeleteStorageRequest)(nil),  // 12: memos.api.v2.DeleteStorageRequest",
          "947:  (*DeleteStorageResponse)(nil), // 13: memos.api.v2.DeleteStorageResponse",
          "948:  (*fieldmaskpb.FieldMask)(nil), // 14: google.protobuf.FieldMask",
          "949: }",
          "950: var file_api_v2_storage_service_proto_depIdxs = []int32{",
          "951:  0,  // 0: memos.api.v2.Storage.type:type_name -> memos.api.v2.Storage.Type",
          "952:  2,  // 1: memos.api.v2.Storage.config:type_name -> memos.api.v2.StorageConfig",
          "953:  3,  // 2: memos.api.v2.StorageConfig.s3_config:type_name -> memos.api.v2.S3Config",
          "954:  1,  // 3: memos.api.v2.CreateStorageRequest.storage:type_name -> memos.api.v2.Storage",
          "955:  1,  // 4: memos.api.v2.CreateStorageResponse.storage:type_name -> memos.api.v2.Storage",
          "956:  1,  // 5: memos.api.v2.GetStorageResponse.storage:type_name -> memos.api.v2.Storage",
          "957:  1,  // 6: memos.api.v2.ListStoragesResponse.storages:type_name -> memos.api.v2.Storage",
          "958:  1,  // 7: memos.api.v2.UpdateStorageRequest.storage:type_name -> memos.api.v2.Storage",
          "959:  14, // 8: memos.api.v2.UpdateStorageRequest.update_mask:type_name -> google.protobuf.FieldMask",
          "960:  1,  // 9: memos.api.v2.UpdateStorageResponse.storage:type_name -> memos.api.v2.Storage",
          "961:  4,  // 10: memos.api.v2.StorageService.CreateStorage:input_type -> memos.api.v2.CreateStorageRequest",
          "962:  6,  // 11: memos.api.v2.StorageService.GetStorage:input_type -> memos.api.v2.GetStorageRequest",
          "963:  8,  // 12: memos.api.v2.StorageService.ListStorages:input_type -> memos.api.v2.ListStoragesRequest",
          "964:  10, // 13: memos.api.v2.StorageService.UpdateStorage:input_type -> memos.api.v2.UpdateStorageRequest",
          "965:  12, // 14: memos.api.v2.StorageService.DeleteStorage:input_type -> memos.api.v2.DeleteStorageRequest",
          "966:  5,  // 15: memos.api.v2.StorageService.CreateStorage:output_type -> memos.api.v2.CreateStorageResponse",
          "967:  7,  // 16: memos.api.v2.StorageService.GetStorage:output_type -> memos.api.v2.GetStorageResponse",
          "968:  9,  // 17: memos.api.v2.StorageService.ListStorages:output_type -> memos.api.v2.ListStoragesResponse",
          "969:  11, // 18: memos.api.v2.StorageService.UpdateStorage:output_type -> memos.api.v2.UpdateStorageResponse",
          "970:  13, // 19: memos.api.v2.StorageService.DeleteStorage:output_type -> memos.api.v2.DeleteStorageResponse",
          "971:  15, // [15:20] is the sub-list for method output_type",
          "972:  10, // [10:15] is the sub-list for method input_type",
          "973:  10, // [10:10] is the sub-list for extension type_name",
          "974:  10, // [10:10] is the sub-list for extension extendee",
          "975:  0,  // [0:10] is the sub-list for field type_name",
          "976: }",
          "978: func init() { file_api_v2_storage_service_proto_init() }",
          "979: func file_api_v2_storage_service_proto_init() {",
          "980:  if File_api_v2_storage_service_proto != nil {",
          "981:   return",
          "982:  }",
          "983:  if !protoimpl.UnsafeEnabled {",
          "984:   file_api_v2_storage_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {",
          "985:    switch v := v.(*Storage); i {",
          "986:    case 0:",
          "987:     return &v.state",
          "988:    case 1:",
          "989:     return &v.sizeCache",
          "990:    case 2:",
          "991:     return &v.unknownFields",
          "992:    default:",
          "993:     return nil",
          "994:    }",
          "995:   }",
          "996:   file_api_v2_storage_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {",
          "997:    switch v := v.(*StorageConfig); i {",
          "998:    case 0:",
          "999:     return &v.state",
          "1000:    case 1:",
          "1001:     return &v.sizeCache",
          "1002:    case 2:",
          "1003:     return &v.unknownFields",
          "1004:    default:",
          "1005:     return nil",
          "1006:    }",
          "1007:   }",
          "1008:   file_api_v2_storage_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {",
          "1009:    switch v := v.(*S3Config); i {",
          "1010:    case 0:",
          "1011:     return &v.state",
          "1012:    case 1:",
          "1013:     return &v.sizeCache",
          "1014:    case 2:",
          "1015:     return &v.unknownFields",
          "1016:    default:",
          "1017:     return nil",
          "1018:    }",
          "1019:   }",
          "1020:   file_api_v2_storage_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {",
          "1021:    switch v := v.(*CreateStorageRequest); i {",
          "1022:    case 0:",
          "1023:     return &v.state",
          "1024:    case 1:",
          "1025:     return &v.sizeCache",
          "1026:    case 2:",
          "1027:     return &v.unknownFields",
          "1028:    default:",
          "1029:     return nil",
          "1030:    }",
          "1031:   }",
          "1032:   file_api_v2_storage_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {",
          "1033:    switch v := v.(*CreateStorageResponse); i {",
          "1034:    case 0:",
          "1035:     return &v.state",
          "1036:    case 1:",
          "1037:     return &v.sizeCache",
          "1038:    case 2:",
          "1039:     return &v.unknownFields",
          "1040:    default:",
          "1041:     return nil",
          "1042:    }",
          "1043:   }",
          "1044:   file_api_v2_storage_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {",
          "1045:    switch v := v.(*GetStorageRequest); i {",
          "1046:    case 0:",
          "1047:     return &v.state",
          "1048:    case 1:",
          "1049:     return &v.sizeCache",
          "1050:    case 2:",
          "1051:     return &v.unknownFields",
          "1052:    default:",
          "1053:     return nil",
          "1054:    }",
          "1055:   }",
          "1056:   file_api_v2_storage_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {",
          "1057:    switch v := v.(*GetStorageResponse); i {",
          "1058:    case 0:",
          "1059:     return &v.state",
          "1060:    case 1:",
          "1061:     return &v.sizeCache",
          "1062:    case 2:",
          "1063:     return &v.unknownFields",
          "1064:    default:",
          "1065:     return nil",
          "1066:    }",
          "1067:   }",
          "1068:   file_api_v2_storage_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {",
          "1069:    switch v := v.(*ListStoragesRequest); i {",
          "1070:    case 0:",
          "1071:     return &v.state",
          "1072:    case 1:",
          "1073:     return &v.sizeCache",
          "1074:    case 2:",
          "1075:     return &v.unknownFields",
          "1076:    default:",
          "1077:     return nil",
          "1078:    }",
          "1079:   }",
          "1080:   file_api_v2_storage_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {",
          "1081:    switch v := v.(*ListStoragesResponse); i {",
          "1082:    case 0:",
          "1083:     return &v.state",
          "1084:    case 1:",
          "1085:     return &v.sizeCache",
          "1086:    case 2:",
          "1087:     return &v.unknownFields",
          "1088:    default:",
          "1089:     return nil",
          "1090:    }",
          "1091:   }",
          "1092:   file_api_v2_storage_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {",
          "1093:    switch v := v.(*UpdateStorageRequest); i {",
          "1094:    case 0:",
          "1095:     return &v.state",
          "1096:    case 1:",
          "1097:     return &v.sizeCache",
          "1098:    case 2:",
          "1099:     return &v.unknownFields",
          "1100:    default:",
          "1101:     return nil",
          "1102:    }",
          "1103:   }",
          "1104:   file_api_v2_storage_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {",
          "1105:    switch v := v.(*UpdateStorageResponse); i {",
          "1106:    case 0:",
          "1107:     return &v.state",
          "1108:    case 1:",
          "1109:     return &v.sizeCache",
          "1110:    case 2:",
          "1111:     return &v.unknownFields",
          "1112:    default:",
          "1113:     return nil",
          "1114:    }",
          "1115:   }",
          "1116:   file_api_v2_storage_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {",
          "1117:    switch v := v.(*DeleteStorageRequest); i {",
          "1118:    case 0:",
          "1119:     return &v.state",
          "1120:    case 1:",
          "1121:     return &v.sizeCache",
          "1122:    case 2:",
          "1123:     return &v.unknownFields",
          "1124:    default:",
          "1125:     return nil",
          "1126:    }",
          "1127:   }",
          "1128:   file_api_v2_storage_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {",
          "1129:    switch v := v.(*DeleteStorageResponse); i {",
          "1130:    case 0:",
          "1131:     return &v.state",
          "1132:    case 1:",
          "1133:     return &v.sizeCache",
          "1134:    case 2:",
          "1135:     return &v.unknownFields",
          "1136:    default:",
          "1137:     return nil",
          "1138:    }",
          "1139:   }",
          "1140:  }",
          "1141:  file_api_v2_storage_service_proto_msgTypes[1].OneofWrappers = []interface{}{",
          "1142:   (*StorageConfig_S3Config)(nil),",
          "1143:  }",
          "1144:  type x struct{}",
          "1145:  out := protoimpl.TypeBuilder{",
          "1146:   File: protoimpl.DescBuilder{",
          "1147:    GoPackagePath: reflect.TypeOf(x{}).PkgPath(),",
          "1148:    RawDescriptor: file_api_v2_storage_service_proto_rawDesc,",
          "1149:    NumEnums:      1,",
          "1150:    NumMessages:   13,",
          "1151:    NumExtensions: 0,",
          "1152:    NumServices:   1,",
          "1153:   },",
          "1154:   GoTypes:           file_api_v2_storage_service_proto_goTypes,",
          "1155:   DependencyIndexes: file_api_v2_storage_service_proto_depIdxs,",
          "1156:   EnumInfos:         file_api_v2_storage_service_proto_enumTypes,",
          "1157:   MessageInfos:      file_api_v2_storage_service_proto_msgTypes,",
          "1158:  }.Build()",
          "1159:  File_api_v2_storage_service_proto = out.File",
          "1160:  file_api_v2_storage_service_proto_rawDesc = nil",
          "1161:  file_api_v2_storage_service_proto_goTypes = nil",
          "1162:  file_api_v2_storage_service_proto_depIdxs = nil",
          "1163: }",
          "",
          "---------------"
        ],
        "proto/gen/api/v2/storage_service.pb.gw.go||proto/gen/api/v2/storage_service.pb.gw.go": [
          "File: proto/gen/api/v2/storage_service.pb.gw.go -> proto/gen/api/v2/storage_service.pb.gw.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: Package apiv2 is a reverse proxy.",
          "7: It translates gRPC into RESTful JSON APIs.",
          "9: package apiv2",
          "11: import (",
          "12:  \"context\"",
          "13:  \"io\"",
          "14:  \"net/http\"",
          "16:  \"github.com/grpc-ecosystem/grpc-gateway/v2/runtime\"",
          "17:  \"github.com/grpc-ecosystem/grpc-gateway/v2/utilities\"",
          "18:  \"google.golang.org/grpc\"",
          "19:  \"google.golang.org/grpc/codes\"",
          "20:  \"google.golang.org/grpc/grpclog\"",
          "21:  \"google.golang.org/grpc/metadata\"",
          "22:  \"google.golang.org/grpc/status\"",
          "23:  \"google.golang.org/protobuf/proto\"",
          "24: )",
          "27: var _ codes.Code",
          "28: var _ io.Reader",
          "29: var _ status.Status",
          "30: var _ = runtime.String",
          "31: var _ = utilities.NewDoubleArray",
          "32: var _ = metadata.Join",
          "34: func request_StorageService_CreateStorage_0(ctx context.Context, marshaler runtime.Marshaler, client StorageServiceClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "35:  var protoReq CreateStorageRequest",
          "36:  var metadata runtime.ServerMetadata",
          "38:  newReader, berr := utilities.IOReaderFactory(req.Body)",
          "39:  if berr != nil {",
          "40:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", berr)",
          "41:  }",
          "42:  if err := marshaler.NewDecoder(newReader()).Decode(&protoReq); err != nil && err != io.EOF {",
          "43:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "44:  }",
          "46:  msg, err := client.CreateStorage(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))",
          "47:  return msg, metadata, err",
          "49: }",
          "51: func local_request_StorageService_CreateStorage_0(ctx context.Context, marshaler runtime.Marshaler, server StorageServiceServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "52:  var protoReq CreateStorageRequest",
          "53:  var metadata runtime.ServerMetadata",
          "55:  newReader, berr := utilities.IOReaderFactory(req.Body)",
          "56:  if berr != nil {",
          "57:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", berr)",
          "58:  }",
          "59:  if err := marshaler.NewDecoder(newReader()).Decode(&protoReq); err != nil && err != io.EOF {",
          "60:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "61:  }",
          "63:  msg, err := server.CreateStorage(ctx, &protoReq)",
          "64:  return msg, metadata, err",
          "66: }",
          "68: func request_StorageService_GetStorage_0(ctx context.Context, marshaler runtime.Marshaler, client StorageServiceClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "69:  var protoReq GetStorageRequest",
          "70:  var metadata runtime.ServerMetadata",
          "72:  var (",
          "73:   val string",
          "74:   ok  bool",
          "75:   err error",
          "76:   _   = err",
          "77:  )",
          "79:  val, ok = pathParams[\"id\"]",
          "80:  if !ok {",
          "81:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"id\")",
          "82:  }",
          "84:  protoReq.Id, err = runtime.Int32(val)",
          "85:  if err != nil {",
          "86:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"id\", err)",
          "87:  }",
          "89:  msg, err := client.GetStorage(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))",
          "90:  return msg, metadata, err",
          "92: }",
          "94: func local_request_StorageService_GetStorage_0(ctx context.Context, marshaler runtime.Marshaler, server StorageServiceServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "95:  var protoReq GetStorageRequest",
          "96:  var metadata runtime.ServerMetadata",
          "98:  var (",
          "99:   val string",
          "100:   ok  bool",
          "101:   err error",
          "102:   _   = err",
          "103:  )",
          "105:  val, ok = pathParams[\"id\"]",
          "106:  if !ok {",
          "107:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"id\")",
          "108:  }",
          "110:  protoReq.Id, err = runtime.Int32(val)",
          "111:  if err != nil {",
          "112:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"id\", err)",
          "113:  }",
          "115:  msg, err := server.GetStorage(ctx, &protoReq)",
          "116:  return msg, metadata, err",
          "118: }",
          "120: func request_StorageService_ListStorages_0(ctx context.Context, marshaler runtime.Marshaler, client StorageServiceClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "121:  var protoReq ListStoragesRequest",
          "122:  var metadata runtime.ServerMetadata",
          "124:  msg, err := client.ListStorages(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))",
          "125:  return msg, metadata, err",
          "127: }",
          "129: func local_request_StorageService_ListStorages_0(ctx context.Context, marshaler runtime.Marshaler, server StorageServiceServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "130:  var protoReq ListStoragesRequest",
          "131:  var metadata runtime.ServerMetadata",
          "133:  msg, err := server.ListStorages(ctx, &protoReq)",
          "134:  return msg, metadata, err",
          "136: }",
          "138: var (",
          "139:  filter_StorageService_UpdateStorage_0 = &utilities.DoubleArray{Encoding: map[string]int{\"storage\": 0, \"id\": 1}, Base: []int{1, 4, 5, 2, 0, 0, 0, 0}, Check: []int{0, 1, 1, 2, 4, 2, 2, 3}}",
          "140: )",
          "142: func request_StorageService_UpdateStorage_0(ctx context.Context, marshaler runtime.Marshaler, client StorageServiceClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "143:  var protoReq UpdateStorageRequest",
          "144:  var metadata runtime.ServerMetadata",
          "146:  newReader, berr := utilities.IOReaderFactory(req.Body)",
          "147:  if berr != nil {",
          "148:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", berr)",
          "149:  }",
          "150:  if err := marshaler.NewDecoder(newReader()).Decode(&protoReq.Storage); err != nil && err != io.EOF {",
          "151:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "152:  }",
          "153:  if protoReq.UpdateMask == nil || len(protoReq.UpdateMask.GetPaths()) == 0 {",
          "154:   if fieldMask, err := runtime.FieldMaskFromRequestBody(newReader(), protoReq.Storage); err != nil {",
          "155:    return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "156:   } else {",
          "157:    protoReq.UpdateMask = fieldMask",
          "158:   }",
          "159:  }",
          "161:  var (",
          "162:   val string",
          "163:   ok  bool",
          "164:   err error",
          "165:   _   = err",
          "166:  )",
          "168:  val, ok = pathParams[\"storage.id\"]",
          "169:  if !ok {",
          "170:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"storage.id\")",
          "171:  }",
          "173:  err = runtime.PopulateFieldFromPath(&protoReq, \"storage.id\", val)",
          "174:  if err != nil {",
          "175:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"storage.id\", err)",
          "176:  }",
          "178:  if err := req.ParseForm(); err != nil {",
          "179:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "180:  }",
          "181:  if err := runtime.PopulateQueryParameters(&protoReq, req.Form, filter_StorageService_UpdateStorage_0); err != nil {",
          "182:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "183:  }",
          "185:  msg, err := client.UpdateStorage(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))",
          "186:  return msg, metadata, err",
          "188: }",
          "190: func local_request_StorageService_UpdateStorage_0(ctx context.Context, marshaler runtime.Marshaler, server StorageServiceServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "191:  var protoReq UpdateStorageRequest",
          "192:  var metadata runtime.ServerMetadata",
          "194:  newReader, berr := utilities.IOReaderFactory(req.Body)",
          "195:  if berr != nil {",
          "196:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", berr)",
          "197:  }",
          "198:  if err := marshaler.NewDecoder(newReader()).Decode(&protoReq.Storage); err != nil && err != io.EOF {",
          "199:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "200:  }",
          "201:  if protoReq.UpdateMask == nil || len(protoReq.UpdateMask.GetPaths()) == 0 {",
          "202:   if fieldMask, err := runtime.FieldMaskFromRequestBody(newReader(), protoReq.Storage); err != nil {",
          "203:    return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "204:   } else {",
          "205:    protoReq.UpdateMask = fieldMask",
          "206:   }",
          "207:  }",
          "209:  var (",
          "210:   val string",
          "211:   ok  bool",
          "212:   err error",
          "213:   _   = err",
          "214:  )",
          "216:  val, ok = pathParams[\"storage.id\"]",
          "217:  if !ok {",
          "218:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"storage.id\")",
          "219:  }",
          "221:  err = runtime.PopulateFieldFromPath(&protoReq, \"storage.id\", val)",
          "222:  if err != nil {",
          "223:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"storage.id\", err)",
          "224:  }",
          "226:  if err := req.ParseForm(); err != nil {",
          "227:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "228:  }",
          "229:  if err := runtime.PopulateQueryParameters(&protoReq, req.Form, filter_StorageService_UpdateStorage_0); err != nil {",
          "230:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "231:  }",
          "233:  msg, err := server.UpdateStorage(ctx, &protoReq)",
          "234:  return msg, metadata, err",
          "236: }",
          "238: func request_StorageService_DeleteStorage_0(ctx context.Context, marshaler runtime.Marshaler, client StorageServiceClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "239:  var protoReq DeleteStorageRequest",
          "240:  var metadata runtime.ServerMetadata",
          "242:  var (",
          "243:   val string",
          "244:   ok  bool",
          "245:   err error",
          "246:   _   = err",
          "247:  )",
          "249:  val, ok = pathParams[\"id\"]",
          "250:  if !ok {",
          "251:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"id\")",
          "252:  }",
          "254:  protoReq.Id, err = runtime.Int32(val)",
          "255:  if err != nil {",
          "256:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"id\", err)",
          "257:  }",
          "259:  msg, err := client.DeleteStorage(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))",
          "260:  return msg, metadata, err",
          "262: }",
          "264: func local_request_StorageService_DeleteStorage_0(ctx context.Context, marshaler runtime.Marshaler, server StorageServiceServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "265:  var protoReq DeleteStorageRequest",
          "266:  var metadata runtime.ServerMetadata",
          "268:  var (",
          "269:   val string",
          "270:   ok  bool",
          "271:   err error",
          "272:   _   = err",
          "273:  )",
          "275:  val, ok = pathParams[\"id\"]",
          "276:  if !ok {",
          "277:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"id\")",
          "278:  }",
          "280:  protoReq.Id, err = runtime.Int32(val)",
          "281:  if err != nil {",
          "282:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"id\", err)",
          "283:  }",
          "285:  msg, err := server.DeleteStorage(ctx, &protoReq)",
          "286:  return msg, metadata, err",
          "288: }",
          "294: func RegisterStorageServiceHandlerServer(ctx context.Context, mux *runtime.ServeMux, server StorageServiceServer) error {",
          "296:  mux.Handle(\"POST\", pattern_StorageService_CreateStorage_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "297:   ctx, cancel := context.WithCancel(req.Context())",
          "298:   defer cancel()",
          "299:   var stream runtime.ServerTransportStream",
          "300:   ctx = grpc.NewContextWithServerTransportStream(ctx, &stream)",
          "301:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "302:   var err error",
          "303:   var annotatedContext context.Context",
          "304:   annotatedContext, err = runtime.AnnotateIncomingContext(ctx, mux, req, \"/memos.api.v2.StorageService/CreateStorage\", runtime.WithHTTPPathPattern(\"/api/v2/storages\"))",
          "305:   if err != nil {",
          "306:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "307:    return",
          "308:   }",
          "309:   resp, md, err := local_request_StorageService_CreateStorage_0(annotatedContext, inboundMarshaler, server, req, pathParams)",
          "310:   md.HeaderMD, md.TrailerMD = metadata.Join(md.HeaderMD, stream.Header()), metadata.Join(md.TrailerMD, stream.Trailer())",
          "311:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "312:   if err != nil {",
          "313:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "314:    return",
          "315:   }",
          "317:   forward_StorageService_CreateStorage_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "319:  })",
          "321:  mux.Handle(\"GET\", pattern_StorageService_GetStorage_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "322:   ctx, cancel := context.WithCancel(req.Context())",
          "323:   defer cancel()",
          "324:   var stream runtime.ServerTransportStream",
          "325:   ctx = grpc.NewContextWithServerTransportStream(ctx, &stream)",
          "326:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "327:   var err error",
          "328:   var annotatedContext context.Context",
          "329:   annotatedContext, err = runtime.AnnotateIncomingContext(ctx, mux, req, \"/memos.api.v2.StorageService/GetStorage\", runtime.WithHTTPPathPattern(\"/api/v2/storages/{id}\"))",
          "330:   if err != nil {",
          "331:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "332:    return",
          "333:   }",
          "334:   resp, md, err := local_request_StorageService_GetStorage_0(annotatedContext, inboundMarshaler, server, req, pathParams)",
          "335:   md.HeaderMD, md.TrailerMD = metadata.Join(md.HeaderMD, stream.Header()), metadata.Join(md.TrailerMD, stream.Trailer())",
          "336:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "337:   if err != nil {",
          "338:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "339:    return",
          "340:   }",
          "342:   forward_StorageService_GetStorage_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "344:  })",
          "346:  mux.Handle(\"GET\", pattern_StorageService_ListStorages_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "347:   ctx, cancel := context.WithCancel(req.Context())",
          "348:   defer cancel()",
          "349:   var stream runtime.ServerTransportStream",
          "350:   ctx = grpc.NewContextWithServerTransportStream(ctx, &stream)",
          "351:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "352:   var err error",
          "353:   var annotatedContext context.Context",
          "354:   annotatedContext, err = runtime.AnnotateIncomingContext(ctx, mux, req, \"/memos.api.v2.StorageService/ListStorages\", runtime.WithHTTPPathPattern(\"/api/v2/storages\"))",
          "355:   if err != nil {",
          "356:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "357:    return",
          "358:   }",
          "359:   resp, md, err := local_request_StorageService_ListStorages_0(annotatedContext, inboundMarshaler, server, req, pathParams)",
          "360:   md.HeaderMD, md.TrailerMD = metadata.Join(md.HeaderMD, stream.Header()), metadata.Join(md.TrailerMD, stream.Trailer())",
          "361:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "362:   if err != nil {",
          "363:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "364:    return",
          "365:   }",
          "367:   forward_StorageService_ListStorages_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "369:  })",
          "371:  mux.Handle(\"PATCH\", pattern_StorageService_UpdateStorage_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "372:   ctx, cancel := context.WithCancel(req.Context())",
          "373:   defer cancel()",
          "374:   var stream runtime.ServerTransportStream",
          "375:   ctx = grpc.NewContextWithServerTransportStream(ctx, &stream)",
          "376:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "377:   var err error",
          "378:   var annotatedContext context.Context",
          "379:   annotatedContext, err = runtime.AnnotateIncomingContext(ctx, mux, req, \"/memos.api.v2.StorageService/UpdateStorage\", runtime.WithHTTPPathPattern(\"/api/v2/storages/{storage.id}\"))",
          "380:   if err != nil {",
          "381:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "382:    return",
          "383:   }",
          "384:   resp, md, err := local_request_StorageService_UpdateStorage_0(annotatedContext, inboundMarshaler, server, req, pathParams)",
          "385:   md.HeaderMD, md.TrailerMD = metadata.Join(md.HeaderMD, stream.Header()), metadata.Join(md.TrailerMD, stream.Trailer())",
          "386:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "387:   if err != nil {",
          "388:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "389:    return",
          "390:   }",
          "392:   forward_StorageService_UpdateStorage_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "394:  })",
          "396:  mux.Handle(\"DELETE\", pattern_StorageService_DeleteStorage_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "397:   ctx, cancel := context.WithCancel(req.Context())",
          "398:   defer cancel()",
          "399:   var stream runtime.ServerTransportStream",
          "400:   ctx = grpc.NewContextWithServerTransportStream(ctx, &stream)",
          "401:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "402:   var err error",
          "403:   var annotatedContext context.Context",
          "404:   annotatedContext, err = runtime.AnnotateIncomingContext(ctx, mux, req, \"/memos.api.v2.StorageService/DeleteStorage\", runtime.WithHTTPPathPattern(\"/api/v2/storages/{id}\"))",
          "405:   if err != nil {",
          "406:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "407:    return",
          "408:   }",
          "409:   resp, md, err := local_request_StorageService_DeleteStorage_0(annotatedContext, inboundMarshaler, server, req, pathParams)",
          "410:   md.HeaderMD, md.TrailerMD = metadata.Join(md.HeaderMD, stream.Header()), metadata.Join(md.TrailerMD, stream.Trailer())",
          "411:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "412:   if err != nil {",
          "413:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "414:    return",
          "415:   }",
          "417:   forward_StorageService_DeleteStorage_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "419:  })",
          "421:  return nil",
          "422: }",
          "426: func RegisterStorageServiceHandlerFromEndpoint(ctx context.Context, mux *runtime.ServeMux, endpoint string, opts []grpc.DialOption) (err error) {",
          "427:  conn, err := grpc.DialContext(ctx, endpoint, opts...)",
          "428:  if err != nil {",
          "429:   return err",
          "430:  }",
          "431:  defer func() {",
          "432:   if err != nil {",
          "433:    if cerr := conn.Close(); cerr != nil {",
          "434:     grpclog.Infof(\"Failed to close conn to %s: %v\", endpoint, cerr)",
          "435:    }",
          "436:    return",
          "437:   }",
          "438:   go func() {",
          "439:    <-ctx.Done()",
          "440:    if cerr := conn.Close(); cerr != nil {",
          "441:     grpclog.Infof(\"Failed to close conn to %s: %v\", endpoint, cerr)",
          "442:    }",
          "443:   }()",
          "444:  }()",
          "446:  return RegisterStorageServiceHandler(ctx, mux, conn)",
          "447: }",
          "451: func RegisterStorageServiceHandler(ctx context.Context, mux *runtime.ServeMux, conn *grpc.ClientConn) error {",
          "452:  return RegisterStorageServiceHandlerClient(ctx, mux, NewStorageServiceClient(conn))",
          "453: }",
          "460: func RegisterStorageServiceHandlerClient(ctx context.Context, mux *runtime.ServeMux, client StorageServiceClient) error {",
          "462:  mux.Handle(\"POST\", pattern_StorageService_CreateStorage_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "463:   ctx, cancel := context.WithCancel(req.Context())",
          "464:   defer cancel()",
          "465:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "466:   var err error",
          "467:   var annotatedContext context.Context",
          "468:   annotatedContext, err = runtime.AnnotateContext(ctx, mux, req, \"/memos.api.v2.StorageService/CreateStorage\", runtime.WithHTTPPathPattern(\"/api/v2/storages\"))",
          "469:   if err != nil {",
          "470:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "471:    return",
          "472:   }",
          "473:   resp, md, err := request_StorageService_CreateStorage_0(annotatedContext, inboundMarshaler, client, req, pathParams)",
          "474:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "475:   if err != nil {",
          "476:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "477:    return",
          "478:   }",
          "480:   forward_StorageService_CreateStorage_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "482:  })",
          "484:  mux.Handle(\"GET\", pattern_StorageService_GetStorage_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "485:   ctx, cancel := context.WithCancel(req.Context())",
          "486:   defer cancel()",
          "487:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "488:   var err error",
          "489:   var annotatedContext context.Context",
          "490:   annotatedContext, err = runtime.AnnotateContext(ctx, mux, req, \"/memos.api.v2.StorageService/GetStorage\", runtime.WithHTTPPathPattern(\"/api/v2/storages/{id}\"))",
          "491:   if err != nil {",
          "492:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "493:    return",
          "494:   }",
          "495:   resp, md, err := request_StorageService_GetStorage_0(annotatedContext, inboundMarshaler, client, req, pathParams)",
          "496:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "497:   if err != nil {",
          "498:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "499:    return",
          "500:   }",
          "502:   forward_StorageService_GetStorage_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "504:  })",
          "506:  mux.Handle(\"GET\", pattern_StorageService_ListStorages_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "507:   ctx, cancel := context.WithCancel(req.Context())",
          "508:   defer cancel()",
          "509:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "510:   var err error",
          "511:   var annotatedContext context.Context",
          "512:   annotatedContext, err = runtime.AnnotateContext(ctx, mux, req, \"/memos.api.v2.StorageService/ListStorages\", runtime.WithHTTPPathPattern(\"/api/v2/storages\"))",
          "513:   if err != nil {",
          "514:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "515:    return",
          "516:   }",
          "517:   resp, md, err := request_StorageService_ListStorages_0(annotatedContext, inboundMarshaler, client, req, pathParams)",
          "518:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "519:   if err != nil {",
          "520:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "521:    return",
          "522:   }",
          "524:   forward_StorageService_ListStorages_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "526:  })",
          "528:  mux.Handle(\"PATCH\", pattern_StorageService_UpdateStorage_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "529:   ctx, cancel := context.WithCancel(req.Context())",
          "530:   defer cancel()",
          "531:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "532:   var err error",
          "533:   var annotatedContext context.Context",
          "534:   annotatedContext, err = runtime.AnnotateContext(ctx, mux, req, \"/memos.api.v2.StorageService/UpdateStorage\", runtime.WithHTTPPathPattern(\"/api/v2/storages/{storage.id}\"))",
          "535:   if err != nil {",
          "536:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "537:    return",
          "538:   }",
          "539:   resp, md, err := request_StorageService_UpdateStorage_0(annotatedContext, inboundMarshaler, client, req, pathParams)",
          "540:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "541:   if err != nil {",
          "542:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "543:    return",
          "544:   }",
          "546:   forward_StorageService_UpdateStorage_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "548:  })",
          "550:  mux.Handle(\"DELETE\", pattern_StorageService_DeleteStorage_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "551:   ctx, cancel := context.WithCancel(req.Context())",
          "552:   defer cancel()",
          "553:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "554:   var err error",
          "555:   var annotatedContext context.Context",
          "556:   annotatedContext, err = runtime.AnnotateContext(ctx, mux, req, \"/memos.api.v2.StorageService/DeleteStorage\", runtime.WithHTTPPathPattern(\"/api/v2/storages/{id}\"))",
          "557:   if err != nil {",
          "558:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "559:    return",
          "560:   }",
          "561:   resp, md, err := request_StorageService_DeleteStorage_0(annotatedContext, inboundMarshaler, client, req, pathParams)",
          "562:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "563:   if err != nil {",
          "564:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "565:    return",
          "566:   }",
          "568:   forward_StorageService_DeleteStorage_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "570:  })",
          "572:  return nil",
          "573: }",
          "575: var (",
          "576:  pattern_StorageService_CreateStorage_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{\"api\", \"v2\", \"storages\"}, \"\"))",
          "578:  pattern_StorageService_GetStorage_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 1, 0, 4, 1, 5, 3}, []string{\"api\", \"v2\", \"storages\", \"id\"}, \"\"))",
          "580:  pattern_StorageService_ListStorages_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{\"api\", \"v2\", \"storages\"}, \"\"))",
          "582:  pattern_StorageService_UpdateStorage_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 1, 0, 4, 1, 5, 3}, []string{\"api\", \"v2\", \"storages\", \"storage.id\"}, \"\"))",
          "584:  pattern_StorageService_DeleteStorage_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 1, 0, 4, 1, 5, 3}, []string{\"api\", \"v2\", \"storages\", \"id\"}, \"\"))",
          "585: )",
          "587: var (",
          "588:  forward_StorageService_CreateStorage_0 = runtime.ForwardResponseMessage",
          "590:  forward_StorageService_GetStorage_0 = runtime.ForwardResponseMessage",
          "592:  forward_StorageService_ListStorages_0 = runtime.ForwardResponseMessage",
          "594:  forward_StorageService_UpdateStorage_0 = runtime.ForwardResponseMessage",
          "596:  forward_StorageService_DeleteStorage_0 = runtime.ForwardResponseMessage",
          "597: )",
          "",
          "---------------"
        ],
        "proto/gen/api/v2/storage_service_grpc.pb.go||proto/gen/api/v2/storage_service_grpc.pb.go": [
          "File: proto/gen/api/v2/storage_service_grpc.pb.go -> proto/gen/api/v2/storage_service_grpc.pb.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: package apiv2",
          "9: import (",
          "10:  context \"context\"",
          "11:  grpc \"google.golang.org/grpc\"",
          "12:  codes \"google.golang.org/grpc/codes\"",
          "13:  status \"google.golang.org/grpc/status\"",
          "14: )",
          "19: const _ = grpc.SupportPackageIsVersion7",
          "21: const (",
          "22:  StorageService_CreateStorage_FullMethodName = \"/memos.api.v2.StorageService/CreateStorage\"",
          "23:  StorageService_GetStorage_FullMethodName    = \"/memos.api.v2.StorageService/GetStorage\"",
          "24:  StorageService_ListStorages_FullMethodName  = \"/memos.api.v2.StorageService/ListStorages\"",
          "25:  StorageService_UpdateStorage_FullMethodName = \"/memos.api.v2.StorageService/UpdateStorage\"",
          "26:  StorageService_DeleteStorage_FullMethodName = \"/memos.api.v2.StorageService/DeleteStorage\"",
          "27: )",
          "32: type StorageServiceClient interface {",
          "34:  CreateStorage(ctx context.Context, in *CreateStorageRequest, opts ...grpc.CallOption) (*CreateStorageResponse, error)",
          "36:  GetStorage(ctx context.Context, in *GetStorageRequest, opts ...grpc.CallOption) (*GetStorageResponse, error)",
          "38:  ListStorages(ctx context.Context, in *ListStoragesRequest, opts ...grpc.CallOption) (*ListStoragesResponse, error)",
          "40:  UpdateStorage(ctx context.Context, in *UpdateStorageRequest, opts ...grpc.CallOption) (*UpdateStorageResponse, error)",
          "42:  DeleteStorage(ctx context.Context, in *DeleteStorageRequest, opts ...grpc.CallOption) (*DeleteStorageResponse, error)",
          "43: }",
          "45: type storageServiceClient struct {",
          "46:  cc grpc.ClientConnInterface",
          "47: }",
          "49: func NewStorageServiceClient(cc grpc.ClientConnInterface) StorageServiceClient {",
          "50:  return &storageServiceClient{cc}",
          "51: }",
          "53: func (c *storageServiceClient) CreateStorage(ctx context.Context, in *CreateStorageRequest, opts ...grpc.CallOption) (*CreateStorageResponse, error) {",
          "54:  out := new(CreateStorageResponse)",
          "55:  err := c.cc.Invoke(ctx, StorageService_CreateStorage_FullMethodName, in, out, opts...)",
          "56:  if err != nil {",
          "57:   return nil, err",
          "58:  }",
          "59:  return out, nil",
          "60: }",
          "62: func (c *storageServiceClient) GetStorage(ctx context.Context, in *GetStorageRequest, opts ...grpc.CallOption) (*GetStorageResponse, error) {",
          "63:  out := new(GetStorageResponse)",
          "64:  err := c.cc.Invoke(ctx, StorageService_GetStorage_FullMethodName, in, out, opts...)",
          "65:  if err != nil {",
          "66:   return nil, err",
          "67:  }",
          "68:  return out, nil",
          "69: }",
          "71: func (c *storageServiceClient) ListStorages(ctx context.Context, in *ListStoragesRequest, opts ...grpc.CallOption) (*ListStoragesResponse, error) {",
          "72:  out := new(ListStoragesResponse)",
          "73:  err := c.cc.Invoke(ctx, StorageService_ListStorages_FullMethodName, in, out, opts...)",
          "74:  if err != nil {",
          "75:   return nil, err",
          "76:  }",
          "77:  return out, nil",
          "78: }",
          "80: func (c *storageServiceClient) UpdateStorage(ctx context.Context, in *UpdateStorageRequest, opts ...grpc.CallOption) (*UpdateStorageResponse, error) {",
          "81:  out := new(UpdateStorageResponse)",
          "82:  err := c.cc.Invoke(ctx, StorageService_UpdateStorage_FullMethodName, in, out, opts...)",
          "83:  if err != nil {",
          "84:   return nil, err",
          "85:  }",
          "86:  return out, nil",
          "87: }",
          "89: func (c *storageServiceClient) DeleteStorage(ctx context.Context, in *DeleteStorageRequest, opts ...grpc.CallOption) (*DeleteStorageResponse, error) {",
          "90:  out := new(DeleteStorageResponse)",
          "91:  err := c.cc.Invoke(ctx, StorageService_DeleteStorage_FullMethodName, in, out, opts...)",
          "92:  if err != nil {",
          "93:   return nil, err",
          "94:  }",
          "95:  return out, nil",
          "96: }",
          "101: type StorageServiceServer interface {",
          "103:  CreateStorage(context.Context, *CreateStorageRequest) (*CreateStorageResponse, error)",
          "105:  GetStorage(context.Context, *GetStorageRequest) (*GetStorageResponse, error)",
          "107:  ListStorages(context.Context, *ListStoragesRequest) (*ListStoragesResponse, error)",
          "109:  UpdateStorage(context.Context, *UpdateStorageRequest) (*UpdateStorageResponse, error)",
          "111:  DeleteStorage(context.Context, *DeleteStorageRequest) (*DeleteStorageResponse, error)",
          "112:  mustEmbedUnimplementedStorageServiceServer()",
          "113: }",
          "116: type UnimplementedStorageServiceServer struct {",
          "117: }",
          "119: func (UnimplementedStorageServiceServer) CreateStorage(context.Context, *CreateStorageRequest) (*CreateStorageResponse, error) {",
          "120:  return nil, status.Errorf(codes.Unimplemented, \"method CreateStorage not implemented\")",
          "121: }",
          "122: func (UnimplementedStorageServiceServer) GetStorage(context.Context, *GetStorageRequest) (*GetStorageResponse, error) {",
          "123:  return nil, status.Errorf(codes.Unimplemented, \"method GetStorage not implemented\")",
          "124: }",
          "125: func (UnimplementedStorageServiceServer) ListStorages(context.Context, *ListStoragesRequest) (*ListStoragesResponse, error) {",
          "126:  return nil, status.Errorf(codes.Unimplemented, \"method ListStorages not implemented\")",
          "127: }",
          "128: func (UnimplementedStorageServiceServer) UpdateStorage(context.Context, *UpdateStorageRequest) (*UpdateStorageResponse, error) {",
          "129:  return nil, status.Errorf(codes.Unimplemented, \"method UpdateStorage not implemented\")",
          "130: }",
          "131: func (UnimplementedStorageServiceServer) DeleteStorage(context.Context, *DeleteStorageRequest) (*DeleteStorageResponse, error) {",
          "132:  return nil, status.Errorf(codes.Unimplemented, \"method DeleteStorage not implemented\")",
          "133: }",
          "134: func (UnimplementedStorageServiceServer) mustEmbedUnimplementedStorageServiceServer() {}",
          "139: type UnsafeStorageServiceServer interface {",
          "140:  mustEmbedUnimplementedStorageServiceServer()",
          "141: }",
          "143: func RegisterStorageServiceServer(s grpc.ServiceRegistrar, srv StorageServiceServer) {",
          "144:  s.RegisterService(&StorageService_ServiceDesc, srv)",
          "145: }",
          "147: func _StorageService_CreateStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {",
          "148:  in := new(CreateStorageRequest)",
          "149:  if err := dec(in); err != nil {",
          "150:   return nil, err",
          "151:  }",
          "152:  if interceptor == nil {",
          "153:   return srv.(StorageServiceServer).CreateStorage(ctx, in)",
          "154:  }",
          "155:  info := &grpc.UnaryServerInfo{",
          "156:   Server:     srv,",
          "157:   FullMethod: StorageService_CreateStorage_FullMethodName,",
          "158:  }",
          "159:  handler := func(ctx context.Context, req interface{}) (interface{}, error) {",
          "160:   return srv.(StorageServiceServer).CreateStorage(ctx, req.(*CreateStorageRequest))",
          "161:  }",
          "162:  return interceptor(ctx, in, info, handler)",
          "163: }",
          "165: func _StorageService_GetStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {",
          "166:  in := new(GetStorageRequest)",
          "167:  if err := dec(in); err != nil {",
          "168:   return nil, err",
          "169:  }",
          "170:  if interceptor == nil {",
          "171:   return srv.(StorageServiceServer).GetStorage(ctx, in)",
          "172:  }",
          "173:  info := &grpc.UnaryServerInfo{",
          "174:   Server:     srv,",
          "175:   FullMethod: StorageService_GetStorage_FullMethodName,",
          "176:  }",
          "177:  handler := func(ctx context.Context, req interface{}) (interface{}, error) {",
          "178:   return srv.(StorageServiceServer).GetStorage(ctx, req.(*GetStorageRequest))",
          "179:  }",
          "180:  return interceptor(ctx, in, info, handler)",
          "181: }",
          "183: func _StorageService_ListStorages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {",
          "184:  in := new(ListStoragesRequest)",
          "185:  if err := dec(in); err != nil {",
          "186:   return nil, err",
          "187:  }",
          "188:  if interceptor == nil {",
          "189:   return srv.(StorageServiceServer).ListStorages(ctx, in)",
          "190:  }",
          "191:  info := &grpc.UnaryServerInfo{",
          "192:   Server:     srv,",
          "193:   FullMethod: StorageService_ListStorages_FullMethodName,",
          "194:  }",
          "195:  handler := func(ctx context.Context, req interface{}) (interface{}, error) {",
          "196:   return srv.(StorageServiceServer).ListStorages(ctx, req.(*ListStoragesRequest))",
          "197:  }",
          "198:  return interceptor(ctx, in, info, handler)",
          "199: }",
          "201: func _StorageService_UpdateStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {",
          "202:  in := new(UpdateStorageRequest)",
          "203:  if err := dec(in); err != nil {",
          "204:   return nil, err",
          "205:  }",
          "206:  if interceptor == nil {",
          "207:   return srv.(StorageServiceServer).UpdateStorage(ctx, in)",
          "208:  }",
          "209:  info := &grpc.UnaryServerInfo{",
          "210:   Server:     srv,",
          "211:   FullMethod: StorageService_UpdateStorage_FullMethodName,",
          "212:  }",
          "213:  handler := func(ctx context.Context, req interface{}) (interface{}, error) {",
          "214:   return srv.(StorageServiceServer).UpdateStorage(ctx, req.(*UpdateStorageRequest))",
          "215:  }",
          "216:  return interceptor(ctx, in, info, handler)",
          "217: }",
          "219: func _StorageService_DeleteStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {",
          "220:  in := new(DeleteStorageRequest)",
          "221:  if err := dec(in); err != nil {",
          "222:   return nil, err",
          "223:  }",
          "224:  if interceptor == nil {",
          "225:   return srv.(StorageServiceServer).DeleteStorage(ctx, in)",
          "226:  }",
          "227:  info := &grpc.UnaryServerInfo{",
          "228:   Server:     srv,",
          "229:   FullMethod: StorageService_DeleteStorage_FullMethodName,",
          "230:  }",
          "231:  handler := func(ctx context.Context, req interface{}) (interface{}, error) {",
          "232:   return srv.(StorageServiceServer).DeleteStorage(ctx, req.(*DeleteStorageRequest))",
          "233:  }",
          "234:  return interceptor(ctx, in, info, handler)",
          "235: }",
          "240: var StorageService_ServiceDesc = grpc.ServiceDesc{",
          "241:  ServiceName: \"memos.api.v2.StorageService\",",
          "242:  HandlerType: (*StorageServiceServer)(nil),",
          "243:  Methods: []grpc.MethodDesc{",
          "244:   {",
          "245:    MethodName: \"CreateStorage\",",
          "246:    Handler:    _StorageService_CreateStorage_Handler,",
          "247:   },",
          "248:   {",
          "249:    MethodName: \"GetStorage\",",
          "250:    Handler:    _StorageService_GetStorage_Handler,",
          "251:   },",
          "252:   {",
          "253:    MethodName: \"ListStorages\",",
          "254:    Handler:    _StorageService_ListStorages_Handler,",
          "255:   },",
          "256:   {",
          "257:    MethodName: \"UpdateStorage\",",
          "258:    Handler:    _StorageService_UpdateStorage_Handler,",
          "259:   },",
          "260:   {",
          "261:    MethodName: \"DeleteStorage\",",
          "262:    Handler:    _StorageService_DeleteStorage_Handler,",
          "263:   },",
          "264:  },",
          "265:  Streams:  []grpc.StreamDesc{},",
          "266:  Metadata: \"api/v2/storage_service.proto\",",
          "267: }",
          "",
          "---------------"
        ],
        "proto/gen/store/idp.pb.go||proto/gen/store/idp.pb.go": [
          "File: proto/gen/store/idp.pb.go -> proto/gen/store/idp.pb.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:  return nil",
          "71: }",
          "74:  if x, ok := x.GetConfig().(*IdentityProviderConfig_Oauth2); ok {",
          "75:   return x.Oauth2",
          "76:  }",
          "",
          "[Removed Lines]",
          "73: func (x *IdentityProviderConfig) GetOauth2() *IdentityProviderConfig_OAuth2 {",
          "",
          "[Added Lines]",
          "73: func (x *IdentityProviderConfig) GetOauth2() *OAuth2Config {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82: }",
          "84: type IdentityProviderConfig_Oauth2 struct {",
          "86: }",
          "88: func (*IdentityProviderConfig_Oauth2) isIdentityProviderConfig_Config() {}",
          "91:  state         protoimpl.MessageState",
          "92:  sizeCache     protoimpl.SizeCache",
          "93:  unknownFields protoimpl.UnknownFields",
          "",
          "[Removed Lines]",
          "85:  Oauth2 *IdentityProviderConfig_OAuth2 `protobuf:\"bytes,1,opt,name=oauth2,proto3,oneof\"`",
          "90: type IdentityProviderConfig_FieldMapping struct {",
          "",
          "[Added Lines]",
          "85:  Oauth2 *OAuth2Config `protobuf:\"bytes,1,opt,name=oauth2,proto3,oneof\"`",
          "90: type FieldMapping struct {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "97:  Email       string `protobuf:\"bytes,3,opt,name=email,proto3\" json:\"email,omitempty\"`",
          "98: }",
          "102:  if protoimpl.UnsafeEnabled {",
          "103:   mi := &file_store_idp_proto_msgTypes[1]",
          "104:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "100: func (x *IdentityProviderConfig_FieldMapping) Reset() {",
          "",
          "[Added Lines]",
          "100: func (x *FieldMapping) Reset() {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "106:  }",
          "107: }",
          "110:  return protoimpl.X.MessageStringOf(x)",
          "111: }",
          "116:  mi := &file_store_idp_proto_msgTypes[1]",
          "117:  if protoimpl.UnsafeEnabled && x != nil {",
          "118:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "109: func (x *IdentityProviderConfig_FieldMapping) String() string {",
          "113: func (*IdentityProviderConfig_FieldMapping) ProtoMessage() {}",
          "115: func (x *IdentityProviderConfig_FieldMapping) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "109: func (x *FieldMapping) String() string {",
          "113: func (*FieldMapping) ProtoMessage() {}",
          "115: func (x *FieldMapping) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "124:  return mi.MessageOf(x)",
          "125: }",
          "130: }",
          "133:  if x != nil {",
          "134:   return x.Identifier",
          "135:  }",
          "136:  return \"\"",
          "137: }",
          "140:  if x != nil {",
          "141:   return x.DisplayName",
          "142:  }",
          "143:  return \"\"",
          "144: }",
          "147:  if x != nil {",
          "148:   return x.Email",
          "149:  }",
          "150:  return \"\"",
          "151: }",
          "154:  state         protoimpl.MessageState",
          "155:  sizeCache     protoimpl.SizeCache",
          "156:  unknownFields protoimpl.UnknownFields",
          "165: }",
          "169:  if protoimpl.UnsafeEnabled {",
          "170:   mi := &file_store_idp_proto_msgTypes[2]",
          "171:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "128: func (*IdentityProviderConfig_FieldMapping) Descriptor() ([]byte, []int) {",
          "129:  return file_store_idp_proto_rawDescGZIP(), []int{0, 0}",
          "132: func (x *IdentityProviderConfig_FieldMapping) GetIdentifier() string {",
          "139: func (x *IdentityProviderConfig_FieldMapping) GetDisplayName() string {",
          "146: func (x *IdentityProviderConfig_FieldMapping) GetEmail() string {",
          "153: type IdentityProviderConfig_OAuth2 struct {",
          "158:  ClientId     string                               `protobuf:\"bytes,1,opt,name=client_id,json=clientId,proto3\" json:\"client_id,omitempty\"`",
          "159:  ClientSecret string                               `protobuf:\"bytes,2,opt,name=client_secret,json=clientSecret,proto3\" json:\"client_secret,omitempty\"`",
          "160:  AuthUrl      string                               `protobuf:\"bytes,3,opt,name=auth_url,json=authUrl,proto3\" json:\"auth_url,omitempty\"`",
          "161:  TokenUrl     string                               `protobuf:\"bytes,4,opt,name=token_url,json=tokenUrl,proto3\" json:\"token_url,omitempty\"`",
          "162:  UserInfoUrl  string                               `protobuf:\"bytes,5,opt,name=user_info_url,json=userInfoUrl,proto3\" json:\"user_info_url,omitempty\"`",
          "163:  Scopes       []string                             `protobuf:\"bytes,6,rep,name=scopes,proto3\" json:\"scopes,omitempty\"`",
          "164:  FieldMapping *IdentityProviderConfig_FieldMapping `protobuf:\"bytes,7,opt,name=field_mapping,json=fieldMapping,proto3\" json:\"field_mapping,omitempty\"`",
          "167: func (x *IdentityProviderConfig_OAuth2) Reset() {",
          "",
          "[Added Lines]",
          "128: func (*FieldMapping) Descriptor() ([]byte, []int) {",
          "129:  return file_store_idp_proto_rawDescGZIP(), []int{1}",
          "132: func (x *FieldMapping) GetIdentifier() string {",
          "139: func (x *FieldMapping) GetDisplayName() string {",
          "146: func (x *FieldMapping) GetEmail() string {",
          "153: type OAuth2Config struct {",
          "158:  ClientId     string        `protobuf:\"bytes,1,opt,name=client_id,json=clientId,proto3\" json:\"client_id,omitempty\"`",
          "159:  ClientSecret string        `protobuf:\"bytes,2,opt,name=client_secret,json=clientSecret,proto3\" json:\"client_secret,omitempty\"`",
          "160:  AuthUrl      string        `protobuf:\"bytes,3,opt,name=auth_url,json=authUrl,proto3\" json:\"auth_url,omitempty\"`",
          "161:  TokenUrl     string        `protobuf:\"bytes,4,opt,name=token_url,json=tokenUrl,proto3\" json:\"token_url,omitempty\"`",
          "162:  UserInfoUrl  string        `protobuf:\"bytes,5,opt,name=user_info_url,json=userInfoUrl,proto3\" json:\"user_info_url,omitempty\"`",
          "163:  Scopes       []string      `protobuf:\"bytes,6,rep,name=scopes,proto3\" json:\"scopes,omitempty\"`",
          "164:  FieldMapping *FieldMapping `protobuf:\"bytes,7,opt,name=field_mapping,json=fieldMapping,proto3\" json:\"field_mapping,omitempty\"`",
          "167: func (x *OAuth2Config) Reset() {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "173:  }",
          "174: }",
          "177:  return protoimpl.X.MessageStringOf(x)",
          "178: }",
          "183:  mi := &file_store_idp_proto_msgTypes[2]",
          "184:  if protoimpl.UnsafeEnabled && x != nil {",
          "185:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "176: func (x *IdentityProviderConfig_OAuth2) String() string {",
          "180: func (*IdentityProviderConfig_OAuth2) ProtoMessage() {}",
          "182: func (x *IdentityProviderConfig_OAuth2) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "176: func (x *OAuth2Config) String() string {",
          "180: func (*OAuth2Config) ProtoMessage() {}",
          "182: func (x *OAuth2Config) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "191:  return mi.MessageOf(x)",
          "192: }",
          "197: }",
          "200:  if x != nil {",
          "201:   return x.ClientId",
          "202:  }",
          "203:  return \"\"",
          "204: }",
          "207:  if x != nil {",
          "208:   return x.ClientSecret",
          "209:  }",
          "210:  return \"\"",
          "211: }",
          "214:  if x != nil {",
          "215:   return x.AuthUrl",
          "216:  }",
          "217:  return \"\"",
          "218: }",
          "221:  if x != nil {",
          "222:   return x.TokenUrl",
          "223:  }",
          "224:  return \"\"",
          "225: }",
          "228:  if x != nil {",
          "229:   return x.UserInfoUrl",
          "230:  }",
          "231:  return \"\"",
          "232: }",
          "235:  if x != nil {",
          "236:   return x.Scopes",
          "237:  }",
          "238:  return nil",
          "239: }",
          "242:  if x != nil {",
          "243:   return x.FieldMapping",
          "244:  }",
          "",
          "[Removed Lines]",
          "195: func (*IdentityProviderConfig_OAuth2) Descriptor() ([]byte, []int) {",
          "196:  return file_store_idp_proto_rawDescGZIP(), []int{0, 1}",
          "199: func (x *IdentityProviderConfig_OAuth2) GetClientId() string {",
          "206: func (x *IdentityProviderConfig_OAuth2) GetClientSecret() string {",
          "213: func (x *IdentityProviderConfig_OAuth2) GetAuthUrl() string {",
          "220: func (x *IdentityProviderConfig_OAuth2) GetTokenUrl() string {",
          "227: func (x *IdentityProviderConfig_OAuth2) GetUserInfoUrl() string {",
          "234: func (x *IdentityProviderConfig_OAuth2) GetScopes() []string {",
          "241: func (x *IdentityProviderConfig_OAuth2) GetFieldMapping() *IdentityProviderConfig_FieldMapping {",
          "",
          "[Added Lines]",
          "195: func (*OAuth2Config) Descriptor() ([]byte, []int) {",
          "196:  return file_store_idp_proto_rawDescGZIP(), []int{2}",
          "199: func (x *OAuth2Config) GetClientId() string {",
          "206: func (x *OAuth2Config) GetClientSecret() string {",
          "213: func (x *OAuth2Config) GetAuthUrl() string {",
          "220: func (x *OAuth2Config) GetTokenUrl() string {",
          "227: func (x *OAuth2Config) GetUserInfoUrl() string {",
          "234: func (x *OAuth2Config) GetScopes() []string {",
          "241: func (x *OAuth2Config) GetFieldMapping() *FieldMapping {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "250: var file_store_idp_proto_rawDesc = []byte{",
          "251:  0x0a, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x69, 0x64, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,",
          "294: }",
          "296: var (",
          "",
          "[Removed Lines]",
          "252:  0x6f, 0x12, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0xe9,",
          "253:  0x03, 0x0a, 0x16, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69,",
          "254:  0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x44, 0x0a, 0x06, 0x6f, 0x61, 0x75,",
          "255:  0x74, 0x68, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x65, 0x6d, 0x6f,",
          "256:  0x73, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,",
          "257:  0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4f,",
          "258:  0x41, 0x75, 0x74, 0x68, 0x32, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x1a,",
          "259:  0x67, 0x0a, 0x0c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12,",
          "260:  0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20,",
          "261:  0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,",
          "262:  0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,",
          "263:  0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,",
          "264:  0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,",
          "265:  0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x1a, 0x95, 0x02, 0x0a, 0x06, 0x4f, 0x41, 0x75,",
          "266:  0x74, 0x68, 0x32, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,",
          "267:  0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,",
          "268:  0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65,",
          "269:  0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,",
          "270:  0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x72,",
          "271:  0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x55, 0x72, 0x6c,",
          "272:  0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20,",
          "273:  0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a,",
          "274:  0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05,",
          "275:  0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x72,",
          "276:  0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,",
          "277:  0x09, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x55, 0x0a, 0x0d, 0x66, 0x69, 0x65,",
          "278:  0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,",
          "279:  0x32, 0x30, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x49,",
          "280:  0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43,",
          "281:  0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x69,",
          "282:  0x6e, 0x67, 0x52, 0x0c, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,",
          "283:  0x42, 0x08, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x93, 0x01, 0x0a, 0x0f, 0x63,",
          "284:  0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x08,",
          "285:  0x49, 0x64, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68,",
          "286:  0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x73, 0x65, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2f,",
          "287:  0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f,",
          "288:  0x73, 0x74, 0x6f, 0x72, 0x65, 0xa2, 0x02, 0x03, 0x4d, 0x53, 0x58, 0xaa, 0x02, 0x0b, 0x4d, 0x65,",
          "289:  0x6d, 0x6f, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0xca, 0x02, 0x0b, 0x4d, 0x65, 0x6d, 0x6f,",
          "290:  0x73, 0x5c, 0x53, 0x74, 0x6f, 0x72, 0x65, 0xe2, 0x02, 0x17, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x5c,",
          "291:  0x53, 0x74, 0x6f, 0x72, 0x65, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,",
          "292:  0x61, 0xea, 0x02, 0x0c, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x3a, 0x3a, 0x53, 0x74, 0x6f, 0x72, 0x65,",
          "293:  0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,",
          "",
          "[Added Lines]",
          "252:  0x6f, 0x12, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0x57,",
          "253:  0x0a, 0x16, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,",
          "254:  0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x33, 0x0a, 0x06, 0x6f, 0x61, 0x75, 0x74,",
          "255:  0x68, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73,",
          "256:  0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6f, 0x6e,",
          "257:  0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x42, 0x08, 0x0a,",
          "258:  0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x67, 0x0a, 0x0c, 0x46, 0x69, 0x65, 0x6c, 0x64,",
          "259:  0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74,",
          "260:  0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65,",
          "261:  0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c,",
          "262:  0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,",
          "263:  0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,",
          "264:  0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,",
          "265:  0x22, 0x84, 0x02, 0x0a, 0x0c, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6f, 0x6e, 0x66, 0x69,",
          "266:  0x67, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,",
          "267:  0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23,",
          "268:  0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,",
          "269:  0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63,",
          "270:  0x72, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x72, 0x6c, 0x18,",
          "271:  0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x55, 0x72, 0x6c, 0x12, 0x1b,",
          "272:  0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,",
          "273:  0x09, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0d, 0x75,",
          "274:  0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01,",
          "275:  0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x72, 0x6c, 0x12,",
          "276:  0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52,",
          "277:  0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64,",
          "278:  0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,",
          "279:  0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x46, 0x69, 0x65,",
          "280:  0x6c, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x66, 0x69, 0x65, 0x6c, 0x64,",
          "281:  0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x42, 0x93, 0x01, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e,",
          "282:  0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x08, 0x49, 0x64, 0x70,",
          "283:  0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,",
          "284:  0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x73, 0x65, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2f, 0x6d, 0x65, 0x6d,",
          "285:  0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x73, 0x74, 0x6f,",
          "286:  0x72, 0x65, 0xa2, 0x02, 0x03, 0x4d, 0x53, 0x58, 0xaa, 0x02, 0x0b, 0x4d, 0x65, 0x6d, 0x6f, 0x73,",
          "287:  0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0xca, 0x02, 0x0b, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x5c, 0x53,",
          "288:  0x74, 0x6f, 0x72, 0x65, 0xe2, 0x02, 0x17, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x5c, 0x53, 0x74, 0x6f,",
          "289:  0x72, 0x65, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,",
          "290:  0x0c, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x3a, 0x3a, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x62, 0x06, 0x70,",
          "291:  0x72, 0x6f, 0x74, 0x6f, 0x33,",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "308: var file_store_idp_proto_msgTypes = make([]protoimpl.MessageInfo, 3)",
          "309: var file_store_idp_proto_goTypes = []interface{}{",
          "313: }",
          "314: var file_store_idp_proto_depIdxs = []int32{",
          "317:  2, // [2:2] is the sub-list for method output_type",
          "318:  2, // [2:2] is the sub-list for method input_type",
          "319:  2, // [2:2] is the sub-list for extension type_name",
          "",
          "[Removed Lines]",
          "310:  (*IdentityProviderConfig)(nil),              // 0: memos.store.IdentityProviderConfig",
          "311:  (*IdentityProviderConfig_FieldMapping)(nil), // 1: memos.store.IdentityProviderConfig.FieldMapping",
          "312:  (*IdentityProviderConfig_OAuth2)(nil),       // 2: memos.store.IdentityProviderConfig.OAuth2",
          "315:  2, // 0: memos.store.IdentityProviderConfig.oauth2:type_name -> memos.store.IdentityProviderConfig.OAuth2",
          "316:  1, // 1: memos.store.IdentityProviderConfig.OAuth2.field_mapping:type_name -> memos.store.IdentityProviderConfig.FieldMapping",
          "",
          "[Added Lines]",
          "308:  (*IdentityProviderConfig)(nil), // 0: memos.store.IdentityProviderConfig",
          "309:  (*FieldMapping)(nil),           // 1: memos.store.FieldMapping",
          "310:  (*OAuth2Config)(nil),           // 2: memos.store.OAuth2Config",
          "313:  2, // 0: memos.store.IdentityProviderConfig.oauth2:type_name -> memos.store.OAuth2Config",
          "314:  1, // 1: memos.store.OAuth2Config.field_mapping:type_name -> memos.store.FieldMapping",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "340:    }",
          "341:   }",
          "342:   file_store_idp_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {",
          "344:    case 0:",
          "345:     return &v.state",
          "346:    case 1:",
          "",
          "[Removed Lines]",
          "343:    switch v := v.(*IdentityProviderConfig_FieldMapping); i {",
          "",
          "[Added Lines]",
          "341:    switch v := v.(*FieldMapping); i {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "352:    }",
          "353:   }",
          "354:   file_store_idp_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {",
          "356:    case 0:",
          "357:     return &v.state",
          "358:    case 1:",
          "",
          "[Removed Lines]",
          "355:    switch v := v.(*IdentityProviderConfig_OAuth2); i {",
          "",
          "[Added Lines]",
          "353:    switch v := v.(*OAuth2Config); i {",
          "",
          "---------------"
        ],
        "proto/store/idp.proto||proto/store/idp.proto": [
          "File: proto/store/idp.proto -> proto/store/idp.proto",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: option go_package = \"gen/store\";",
          "7: message IdentityProviderConfig {",
          "12:   }",
          "27: }",
          "",
          "[Removed Lines]",
          "8:   message FieldMapping {",
          "9:     string identifier = 1;",
          "10:     string display_name = 2;",
          "11:     string email = 3;",
          "14:   message OAuth2 {",
          "15:     string client_id = 1;",
          "16:     string client_secret = 2;",
          "17:     string auth_url = 3;",
          "18:     string token_url = 4;",
          "19:     string user_info_url = 5;",
          "20:     repeated string scopes = 6;",
          "21:     FieldMapping field_mapping = 7;",
          "22:   }",
          "24:   oneof config {",
          "25:     OAuth2 oauth2 = 1;",
          "26:   }",
          "",
          "[Added Lines]",
          "8:   oneof config {",
          "9:     OAuth2Config oauth2 = 1;",
          "11: }",
          "13: message FieldMapping {",
          "14:   string identifier = 1;",
          "15:   string display_name = 2;",
          "16:   string email = 3;",
          "17: }",
          "19: message OAuth2Config {",
          "20:   string client_id = 1;",
          "21:   string client_secret = 2;",
          "22:   string auth_url = 3;",
          "23:   string token_url = 4;",
          "24:   string user_info_url = 5;",
          "25:   repeated string scopes = 6;",
          "26:   FieldMapping field_mapping = 7;",
          "",
          "---------------"
        ],
        "server/route/api/v2/storage_service.go||server/route/api/v2/storage_service.go": [
          "File: server/route/api/v2/storage_service.go -> server/route/api/v2/storage_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package v2",
          "3: import (",
          "4:  \"context\"",
          "6:  \"google.golang.org/grpc/codes\"",
          "7:  \"google.golang.org/grpc/status\"",
          "9:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "10:  storepb \"github.com/usememos/memos/proto/gen/store\"",
          "11:  \"github.com/usememos/memos/store\"",
          "12: )",
          "14: func (s *APIV2Service) CreateStorage(ctx context.Context, request *apiv2pb.CreateStorageRequest) (*apiv2pb.CreateStorageResponse, error) {",
          "15:  currentUser, err := getCurrentUser(ctx, s.Store)",
          "16:  if err != nil {",
          "17:   return nil, status.Errorf(codes.Internal, \"failed to get user: %v\", err)",
          "18:  }",
          "19:  if currentUser.Role != store.RoleHost {",
          "20:   return nil, status.Errorf(codes.PermissionDenied, \"permission denied\")",
          "21:  }",
          "23:  storage, err := s.Store.CreateStorageV1(ctx, convertStorageToStore(request.Storage))",
          "24:  if err != nil {",
          "25:   return nil, status.Errorf(codes.Internal, \"failed to create storage, error: %+v\", err)",
          "26:  }",
          "27:  return &apiv2pb.CreateStorageResponse{",
          "28:   Storage: convertStorageFromStore(storage),",
          "29:  }, nil",
          "30: }",
          "32: func (s *APIV2Service) ListStorages(ctx context.Context, _ *apiv2pb.ListStoragesRequest) (*apiv2pb.ListStoragesResponse, error) {",
          "33:  storages, err := s.Store.ListStoragesV1(ctx, &store.FindStorage{})",
          "34:  if err != nil {",
          "35:   return nil, status.Errorf(codes.Internal, \"failed to list storages, error: %+v\", err)",
          "36:  }",
          "38:  response := &apiv2pb.ListStoragesResponse{",
          "39:   Storages: []*apiv2pb.Storage{},",
          "40:  }",
          "41:  for _, storage := range storages {",
          "42:   response.Storages = append(response.Storages, convertStorageFromStore(storage))",
          "43:  }",
          "44:  return response, nil",
          "45: }",
          "47: func (s *APIV2Service) GetStorage(ctx context.Context, request *apiv2pb.GetStorageRequest) (*apiv2pb.GetStorageResponse, error) {",
          "48:  storage, err := s.Store.GetStorageV1(ctx, &store.FindStorage{",
          "49:   ID: &request.Id,",
          "50:  })",
          "51:  if err != nil {",
          "52:   return nil, status.Errorf(codes.Internal, \"failed to get storage, error: %+v\", err)",
          "53:  }",
          "54:  if storage == nil {",
          "55:   return nil, status.Errorf(codes.NotFound, \"storage not found\")",
          "56:  }",
          "57:  return &apiv2pb.GetStorageResponse{",
          "58:   Storage: convertStorageFromStore(storage),",
          "59:  }, nil",
          "60: }",
          "62: func (s *APIV2Service) UpdateStorage(ctx context.Context, request *apiv2pb.UpdateStorageRequest) (*apiv2pb.UpdateStorageResponse, error) {",
          "63:  if request.UpdateMask == nil || len(request.UpdateMask.Paths) == 0 {",
          "64:   return nil, status.Errorf(codes.InvalidArgument, \"update_mask is required\")",
          "65:  }",
          "67:  update := &store.UpdateStorageV1{",
          "68:   ID:   request.Storage.Id,",
          "69:   Type: storepb.Storage_Type(storepb.Storage_Type_value[request.Storage.Type.String()]),",
          "70:  }",
          "71:  for _, field := range request.UpdateMask.Paths {",
          "72:   switch field {",
          "73:   case \"name\":",
          "74:    update.Name = &request.Storage.Title",
          "75:   case \"config\":",
          "76:    update.Config = convertStorageConfigToStore(request.Storage.Type, request.Storage.Config)",
          "77:   }",
          "78:  }",
          "80:  storage, err := s.Store.UpdateStorageV1(ctx, update)",
          "81:  if err != nil {",
          "82:   return nil, status.Errorf(codes.Internal, \"failed to update storage, error: %+v\", err)",
          "83:  }",
          "84:  return &apiv2pb.UpdateStorageResponse{",
          "85:   Storage: convertStorageFromStore(storage),",
          "86:  }, nil",
          "87: }",
          "89: func (s *APIV2Service) DeleteStorage(ctx context.Context, request *apiv2pb.DeleteStorageRequest) (*apiv2pb.DeleteStorageResponse, error) {",
          "90:  err := s.Store.DeleteStorage(ctx, &store.DeleteStorage{",
          "91:   ID: request.Id,",
          "92:  })",
          "93:  if err != nil {",
          "94:   return nil, status.Errorf(codes.Internal, \"failed to delete storage, error: %+v\", err)",
          "95:  }",
          "96:  return &apiv2pb.DeleteStorageResponse{}, nil",
          "97: }",
          "99: func convertStorageFromStore(storage *storepb.Storage) *apiv2pb.Storage {",
          "100:  temp := &apiv2pb.Storage{",
          "101:   Id:    storage.Id,",
          "102:   Title: storage.Name,",
          "103:   Type:  apiv2pb.Storage_Type(apiv2pb.Storage_Type_value[storage.Type.String()]),",
          "104:  }",
          "105:  if storage.Type == storepb.Storage_S3 {",
          "106:   s3Config := storage.Config.GetS3Config()",
          "107:   temp.Config = &apiv2pb.StorageConfig{",
          "108:    StorageConfig: &apiv2pb.StorageConfig_S3Config{",
          "109:     S3Config: &apiv2pb.S3Config{",
          "110:      EndPoint:  s3Config.EndPoint,",
          "111:      Path:      s3Config.Path,",
          "112:      Region:    s3Config.Region,",
          "113:      AccessKey: s3Config.AccessKey,",
          "114:      SecretKey: s3Config.SecretKey,",
          "115:      Bucket:    s3Config.Bucket,",
          "116:      UrlPrefix: s3Config.UrlPrefix,",
          "117:      UrlSuffix: s3Config.UrlSuffix,",
          "118:      PreSign:   s3Config.PreSign,",
          "119:     },",
          "120:    },",
          "121:   }",
          "122:  }",
          "123:  return temp",
          "124: }",
          "126: func convertStorageToStore(storage *apiv2pb.Storage) *storepb.Storage {",
          "127:  temp := &storepb.Storage{",
          "128:   Id:     storage.Id,",
          "129:   Name:   storage.Title,",
          "130:   Type:   storepb.Storage_Type(storepb.Storage_Type_value[storage.Type.String()]),",
          "131:   Config: convertStorageConfigToStore(storage.Type, storage.Config),",
          "132:  }",
          "133:  return temp",
          "134: }",
          "136: func convertStorageConfigToStore(storageType apiv2pb.Storage_Type, config *apiv2pb.StorageConfig) *storepb.StorageConfig {",
          "137:  if storageType == apiv2pb.Storage_S3 {",
          "138:   s3Config := config.GetS3Config()",
          "139:   return &storepb.StorageConfig{",
          "140:    StorageConfig: &storepb.StorageConfig_S3Config{",
          "141:     S3Config: &storepb.S3Config{",
          "142:      EndPoint:  s3Config.EndPoint,",
          "143:      Path:      s3Config.Path,",
          "144:      Region:    s3Config.Region,",
          "145:      AccessKey: s3Config.AccessKey,",
          "146:      SecretKey: s3Config.SecretKey,",
          "147:      Bucket:    s3Config.Bucket,",
          "148:      UrlPrefix: s3Config.UrlPrefix,",
          "149:      UrlSuffix: s3Config.UrlSuffix,",
          "150:      PreSign:   s3Config.PreSign,",
          "151:     },",
          "152:    },",
          "153:   }",
          "154:  }",
          "155:  return nil",
          "156: }",
          "",
          "---------------"
        ],
        "server/route/api/v2/v2.go||server/route/api/v2/v2.go": [
          "File: server/route/api/v2/v2.go -> server/route/api/v2/v2.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:  apiv2pb.UnimplementedActivityServiceServer",
          "32:  apiv2pb.UnimplementedWebhookServiceServer",
          "33:  apiv2pb.UnimplementedLinkServiceServer",
          "35:  Secret  string",
          "36:  Profile *profile.Profile",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34:  apiv2pb.UnimplementedStorageServiceServer",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68:  apiv2pb.RegisterActivityServiceServer(grpcServer, apiv2Service)",
          "69:  apiv2pb.RegisterWebhookServiceServer(grpcServer, apiv2Service)",
          "70:  apiv2pb.RegisterLinkServiceServer(grpcServer, apiv2Service)",
          "71:  reflection.Register(grpcServer)",
          "73:  return apiv2Service",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72:  apiv2pb.RegisterStorageServiceServer(grpcServer, apiv2Service)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "124:  if err := apiv2pb.RegisterLinkServiceHandler(context.Background(), gwMux, conn); err != nil {",
          "125:   return err",
          "126:  }",
          "127:  e.Any(\"/api/v2/*\", echo.WrapHandler(gwMux))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "129:  if err := apiv2pb.RegisterStorageServiceHandler(context.Background(), gwMux, conn); err != nil {",
          "130:   return err",
          "131:  }",
          "",
          "---------------"
        ],
        "server/route/api/v2/webhook_service.go||server/route/api/v2/webhook_service.go": [
          "File: server/route/api/v2/webhook_service.go -> server/route/api/v2/webhook_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:   return nil, status.Errorf(codes.Internal, \"failed to get user: %v\", err)",
          "56:  }",
          "59:   ID:        &request.Id,",
          "60:   CreatorID: &currentUser.ID,",
          "61:  })",
          "",
          "[Removed Lines]",
          "58:  webhook, err := s.Store.GetWebhooks(ctx, &store.FindWebhook{",
          "",
          "[Added Lines]",
          "58:  webhook, err := s.Store.GetWebhook(ctx, &store.FindWebhook{",
          "",
          "---------------"
        ],
        "store/storage.go||store/storage.go": [
          "File: store/storage.go -> store/storage.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "162:  storageConfig := &storepb.StorageConfig{}",
          "163:  if storageType == storepb.Storage_S3 {",
          "164:   s3Config := &storepb.S3Config{}",
          "166:   if err != nil {",
          "167:    return nil, err",
          "168:   }",
          "",
          "[Removed Lines]",
          "165:   err := proto.Unmarshal([]byte(configRaw), s3Config)",
          "",
          "[Added Lines]",
          "165:   err := protojsonUnmarshaler.Unmarshal([]byte(configRaw), s3Config)",
          "",
          "---------------"
        ],
        "store/webhook.go||store/webhook.go": [
          "File: store/webhook.go -> store/webhook.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:  return s.driver.ListWebhooks(ctx, find)",
          "31: }",
          "34:  list, err := s.ListWebhooks(ctx, find)",
          "35:  if err != nil {",
          "36:   return nil, err",
          "",
          "[Removed Lines]",
          "33: func (s *Store) GetWebhooks(ctx context.Context, find *FindWebhook) (*storepb.Webhook, error) {",
          "",
          "[Added Lines]",
          "33: func (s *Store) GetWebhook(ctx context.Context, find *FindWebhook) (*storepb.Webhook, error) {",
          "",
          "---------------"
        ],
        "web/src/components/CreateStorageServiceDialog.tsx||wesrc/components/CreateStorageServiceDialog.tsx": [
          "File: web/src/components/CreateStorageServiceDialog.tsx -> wesrc/components/CreateStorageServiceDialog.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import { Button, IconButton, Input, Checkbox, Typography } from \"@mui/joy\";",
          "2: import React, { useEffect, useState } from \"react\";",
          "3: import { toast } from \"react-hot-toast\";",
          "5: import { useTranslate } from \"@/utils/i18n\";",
          "6: import { generateDialog } from \"./Dialog\";",
          "7: import Icon from \"./Icon\";",
          "",
          "[Removed Lines]",
          "4: import * as api from \"@/helpers/api\";",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9: import RequiredBadge from \"./RequiredBadge\";",
          "11: interface Props extends DialogProps {",
          "13:   confirmCallback?: () => void;",
          "14: }",
          "",
          "[Removed Lines]",
          "12:   storage?: ObjectStorage;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "17:   const t = useTranslate();",
          "18:   const { destroy, storage, confirmCallback } = props;",
          "19:   const [basicInfo, setBasicInfo] = useState({",
          "21:   });",
          "24:     endPoint: \"\",",
          "25:     region: \"\",",
          "26:     accessKey: \"\",",
          "",
          "[Removed Lines]",
          "20:     name: \"\",",
          "22:   const [type, setType] = useState<StorageType>(\"S3\");",
          "23:   const [s3Config, setS3Config] = useState<StorageS3Config>({",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "29:     bucket: \"\",",
          "30:     urlPrefix: \"\",",
          "31:     urlSuffix: \"\",",
          "33:   });",
          "34:   const isCreating = storage === undefined;",
          "36:   useEffect(() => {",
          "37:     if (storage) {",
          "38:       setBasicInfo({",
          "40:       });",
          "42:       if (storage.type === \"S3\") {",
          "44:       }",
          "45:     }",
          "46:   }, []);",
          "",
          "[Removed Lines]",
          "32:     presign: false,",
          "39:         name: storage.name,",
          "41:       setType(storage.type);",
          "43:         setS3Config(storage.config.s3Config);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "50:   };",
          "52:   const allowConfirmAction = () => {",
          "54:       return false;",
          "55:     }",
          "56:     if (type === \"S3\") {",
          "",
          "[Removed Lines]",
          "53:     if (basicInfo.name === \"\") {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "70:   const handleConfirmBtnClick = async () => {",
          "71:     try {",
          "72:       if (isCreating) {",
          "79:         });",
          "80:       } else {",
          "88:         });",
          "89:       }",
          "90:     } catch (error: any) {",
          "",
          "[Removed Lines]",
          "73:         await api.createStorage({",
          "74:           ...basicInfo,",
          "75:           type: type,",
          "76:           config: {",
          "77:             s3Config: s3Config,",
          "78:           },",
          "81:         await api.patchStorage({",
          "82:           id: storage.id,",
          "83:           type: type,",
          "84:           ...basicInfo,",
          "85:           config: {",
          "86:             s3Config: s3Config,",
          "87:           },",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "97:     destroy();",
          "98:   };",
          "101:     setS3Config({",
          "102:       ...s3Config,",
          "103:       ...state,",
          "",
          "[Removed Lines]",
          "100:   const setPartialS3Config = (state: Partial<StorageS3Config>) => {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "120:         <Input",
          "121:           className=\"mb-2\"",
          "122:           placeholder={t(\"common.name\")}",
          "124:           onChange={(e) =>",
          "125:             setBasicInfo({",
          "126:               ...basicInfo,",
          "128:             })",
          "129:           }",
          "130:           fullWidth",
          "",
          "[Removed Lines]",
          "123:           value={basicInfo.name}",
          "127:               name: e.target.value,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "222:         <Checkbox",
          "223:           className=\"mb-2\"",
          "224:           label={t(\"setting.storage-section.presign-placeholder\")}",
          "227:         />",
          "228:         <div className=\"mt-2 w-full flex flex-row justify-end items-center space-x-1\">",
          "229:           <Button variant=\"plain\" color=\"neutral\" onClick={handleCloseBtnClick}>",
          "",
          "[Removed Lines]",
          "225:           checked={s3Config.presign}",
          "226:           onChange={(e) => setPartialS3Config({ presign: e.target.checked })}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "238:   );",
          "239: };",
          "242:   generateDialog(",
          "243:     {",
          "244:       className: \"create-storage-service-dialog\",",
          "",
          "[Removed Lines]",
          "241: function showCreateStorageServiceDialog(storage?: ObjectStorage, confirmCallback?: () => void) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "web/src/components/Settings/StorageSection.tsx||wesrc/components/Settings/StorageSection.tsx": [
          "File: web/src/components/Settings/StorageSection.tsx -> wesrc/components/Settings/StorageSection.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: import { useEffect, useMemo, useState } from \"react\";",
          "19: import { toast } from \"react-hot-toast\";",
          "20: import { Link } from \"react-router-dom\";",
          "22: import { WorkspaceSettingPrefix, useWorkspaceSettingStore } from \"@/store/v1\";",
          "23: import { WorkspaceStorageSetting, WorkspaceStorageSetting_StorageType } from \"@/types/proto/api/v2/workspace_setting_service\";",
          "24: import { WorkspaceSettingKey } from \"@/types/proto/store/workspace_setting\";",
          "25: import { useTranslate } from \"@/utils/i18n\";",
          "",
          "[Removed Lines]",
          "21: import * as api from \"@/helpers/api\";",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31: const StorageSection = () => {",
          "32:   const t = useTranslate();",
          "33:   const workspaceSettingStore = useWorkspaceSettingStore();",
          "35:   const [workspaceStorageSetting, setWorkspaceStorageSetting] = useState<WorkspaceStorageSetting>(",
          "36:     WorkspaceStorageSetting.fromPartial(",
          "37:       workspaceSettingStore.getWorkspaceSettingByKey(WorkspaceSettingKey.WORKSPACE_SETTING_STORAGE)?.storageSetting || {},",
          "",
          "[Removed Lines]",
          "34:   const [storageList, setStorageList] = useState<ObjectStorage[]>([]);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "63:   }, []);",
          "65:   const fetchStorageList = async () => {",
          "68:   };",
          "70:   const handleMaxUploadSizeChanged = async (event: React.FocusEvent<HTMLInputElement>) => {",
          "",
          "[Removed Lines]",
          "66:     const { data: storageList } = await api.getStorageList();",
          "67:     setStorageList(storageList);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "111:     toast.success(\"Updated\");",
          "112:   };",
          "115:     showCommonDialog({",
          "116:       title: t(\"setting.storage-section.delete-storage\"),",
          "118:       style: \"danger\",",
          "119:       dialogName: \"delete-storage-dialog\",",
          "120:       onConfirm: async () => {",
          "121:         try {",
          "123:         } catch (error: any) {",
          "124:           console.error(error);",
          "125:           toast.error(error.response.data.message);",
          "",
          "[Removed Lines]",
          "114:   const handleDeleteStorage = (storage: ObjectStorage) => {",
          "117:       content: t(\"setting.storage-section.warning-text\", { name: storage.name }),",
          "122:           await api.deleteStorage(storage.id);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "179:           >",
          "180:             {storageList.map((storage) => (",
          "181:               <Option key={storage.id} value={storage.id}>",
          "183:               </Option>",
          "184:             ))}",
          "185:           </Select>",
          "",
          "[Removed Lines]",
          "182:                 {storage.name}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "205:             className=\"py-2 w-full border-t last:border-b dark:border-zinc-700 flex flex-row items-center justify-between\"",
          "206:           >",
          "207:             <div className=\"flex flex-row items-center\">",
          "209:             </div>",
          "210:             <div className=\"flex flex-row items-center\">",
          "211:               <Dropdown>",
          "",
          "[Removed Lines]",
          "208:               <p className=\"ml-2\">{storage.name}</p>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "web/src/grpcweb.ts||wesrc/grpcweb.ts": [
          "File: web/src/grpcweb.ts -> wesrc/grpcweb.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: import { LinkServiceDefinition } from \"./types/proto/api/v2/link_service\";",
          "6: import { MemoServiceDefinition } from \"./types/proto/api/v2/memo_service\";",
          "7: import { ResourceServiceDefinition } from \"./types/proto/api/v2/resource_service\";",
          "8: import { TagServiceDefinition } from \"./types/proto/api/v2/tag_service\";",
          "9: import { UserServiceDefinition } from \"./types/proto/api/v2/user_service\";",
          "10: import { WebhookServiceDefinition } from \"./types/proto/api/v2/webhook_service\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41: export const webhookServiceClient = clientFactory.create(WebhookServiceDefinition, channel);",
          "43: export const linkServiceClient = clientFactory.create(LinkServiceDefinition, channel);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "web/src/helpers/api.ts||wesrc/helpers/api.ts": [
          "File: web/src/helpers/api.ts -> wesrc/helpers/api.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: axios.defaults.baseURL = import.meta.env.VITE_API_BASE_URL || \"\";",
          "4: axios.defaults.withCredentials = true;",
          "22: export function getIdentityProviderList() {",
          "23:   return axios.get<IdentityProvider[]>(`/api/v1/idp`);",
          "24: }",
          "",
          "[Removed Lines]",
          "6: export function getStorageList() {",
          "7:   return axios.get<ObjectStorage[]>(`/api/v1/storage`);",
          "8: }",
          "10: export function createStorage(storageCreate: StorageCreate) {",
          "11:   return axios.post<ObjectStorage>(`/api/v1/storage`, storageCreate);",
          "12: }",
          "14: export function patchStorage(storagePatch: StoragePatch) {",
          "15:   return axios.patch<ObjectStorage>(`/api/v1/storage/${storagePatch.id}`, storagePatch);",
          "16: }",
          "18: export function deleteStorage(storageId: StorageId) {",
          "19:   return axios.delete(`/api/v1/storage/${storageId}`);",
          "20: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "web/src/types/modules/storage.d.ts||wesrc/types/modules/storage.d.ts": [
          "File: web/src/types/modules/storage.d.ts -> wesrc/types/modules/storage.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}