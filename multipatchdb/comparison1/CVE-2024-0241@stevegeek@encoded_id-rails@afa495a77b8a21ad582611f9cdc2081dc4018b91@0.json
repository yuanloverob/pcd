{
  "cve_id": "CVE-2024-0241",
  "cve_desc": "encoded_id-rails versions before 1.0.0.beta2 are affected by an uncontrolled resource consumption vulnerability. A remote and unauthenticated attacker might cause a denial of service condition by sending an HTTP request with an extremely long \"id\" parameter.\n\n",
  "repo": "stevegeek/encoded_id-rails",
  "patch_hash": "afa495a77b8a21ad582611f9cdc2081dc4018b91",
  "patch_info": {
    "commit_hash": "afa495a77b8a21ad582611f9cdc2081dc4018b91",
    "repo": "stevegeek/encoded_id-rails",
    "commit_url": "https://github.com/stevegeek/encoded_id-rails/commit/afa495a77b8a21ad582611f9cdc2081dc4018b91",
    "files": [
      "encoded_id-rails.gemspec"
    ],
    "message": "Update encoded_id dependency to address GHSA-3px7-jm2p-6h2c",
    "before_after_code_files": [
      "encoded_id-rails.gemspec||encoded_id-rails.gemspec"
    ]
  },
  "patch_diff": {
    "encoded_id-rails.gemspec||encoded_id-rails.gemspec": [
      "File: encoded_id-rails.gemspec -> encoded_id-rails.gemspec",
      "--- Hunk 1 ---",
      "[Context before]",
      "32:   # Uncomment to register a new dependency of your gem",
      "33:   spec.add_dependency \"activesupport\", \">= 6.0\", \"< 8.0\"",
      "34:   spec.add_dependency \"activerecord\", \">= 6.0\", \"< 8.0\"",
      "37:   # For more information and examples about making a new gem, check out our",
      "38:   # guide at: https://bundler.io/guides/creating_gem.html",
      "",
      "[Removed Lines]",
      "35:   spec.add_dependency \"encoded_id\", \"~> 1.0.0.rc2\"",
      "",
      "[Added Lines]",
      "35:   spec.add_dependency \"encoded_id\", \"~> 1.0.0.rc3\"",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "07c054bda853ce9e31b6799c939356cba11cdad3",
      "candidate_info": {
        "commit_hash": "07c054bda853ce9e31b6799c939356cba11cdad3",
        "repo": "stevegeek/encoded_id-rails",
        "commit_url": "https://github.com/stevegeek/encoded_id-rails/commit/07c054bda853ce9e31b6799c939356cba11cdad3",
        "files": [
          "encoded_id-rails.gemspec",
          "lib/generators/encoded_id/rails/templates/encoded_id.rb",
          "sig/encoded_id/rails.rbs",
          "test/support/config.rb"
        ],
        "message": "Update to latest encoded_id",
        "before_after_code_files": [
          "encoded_id-rails.gemspec||encoded_id-rails.gemspec",
          "lib/generators/encoded_id/rails/templates/encoded_id.rb||lib/generators/encoded_id/rails/templates/encoded_id.rb",
          "sig/encoded_id/rails.rbs||sig/encoded_id/rails.rbs",
          "test/support/config.rb||test/support/config.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "encoded_id-rails.gemspec||encoded_id-rails.gemspec"
          ],
          "candidate": [
            "encoded_id-rails.gemspec||encoded_id-rails.gemspec"
          ]
        }
      },
      "candidate_diff": {
        "encoded_id-rails.gemspec||encoded_id-rails.gemspec": [
          "File: encoded_id-rails.gemspec -> encoded_id-rails.gemspec",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:   # Uncomment to register a new dependency of your gem",
          "33:   spec.add_dependency \"activesupport\", \">= 6.0\"",
          "34:   spec.add_dependency \"activerecord\", \">= 6.0\"",
          "37:   # For more information and examples about making a new gem, check out our",
          "38:   # guide at: https://bundler.io/guides/creating_gem.html",
          "",
          "[Removed Lines]",
          "35:   spec.add_dependency \"encoded_id\", \"~> 0.3\"",
          "",
          "[Added Lines]",
          "35:   spec.add_dependency \"encoded_id\", \"~> 0.4\"",
          "",
          "---------------"
        ],
        "lib/generators/encoded_id/rails/templates/encoded_id.rb||lib/generators/encoded_id/rails/templates/encoded_id.rb": [
          "File: lib/generators/encoded_id/rails/templates/encoded_id.rb -> lib/generators/encoded_id/rails/templates/encoded_id.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:   #",
          "24:   # Default: a reduced character set Crockford alphabet and split groups, see https://www.crockford.com/wrmg/base32.html",
          "25:   #",
          "28:   # The minimum length of the encoded ID. Note that this is not a hard limit, the actual length may be longer as hash IDs",
          "29:   # may expand the length as needed to encode the full input. However encoded IDs will never be shorter than this.",
          "",
          "[Removed Lines]",
          "26:   # config.alphabet = \"0123456789abcdefghjkmnpqrstuvwxyz\"",
          "",
          "[Added Lines]",
          "26:   # config.alphabet = ::EncodedId::Alphabet.new(\"0123456789abcdef\")",
          "",
          "---------------"
        ],
        "sig/encoded_id/rails.rbs||sig/encoded_id/rails.rbs": [
          "File: sig/encoded_id/rails.rbs -> sig/encoded_id/rails.rbs",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:       attr_accessor character_group_size: ::Integer",
          "12:       attr_accessor id_length: ::Integer",
          "",
          "[Removed Lines]",
          "10:       attr_accessor alphabet: ::String",
          "",
          "[Added Lines]",
          "10:       attr_accessor alphabet: ::EncodedId::Alphabet",
          "",
          "---------------"
        ],
        "test/support/config.rb||test/support/config.rb": [
          "File: test/support/config.rb -> test/support/config.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: ::EncodedId::Rails.configure do |config|",
          "2:   config.id_length = 8",
          "3:   config.character_group_size = 4",
          "5:   config.salt = \"my-salt\"",
          "6: end",
          "",
          "[Removed Lines]",
          "4:   config.alphabet = ::EncodedId::ReversibleId::ALPHABET",
          "",
          "[Added Lines]",
          "4:   config.alphabet = ::EncodedId::Alphabet.modified_crockford",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "695e5f1994c0d703b2817c9355021818d94d512a",
      "candidate_info": {
        "commit_hash": "695e5f1994c0d703b2817c9355021818d94d512a",
        "repo": "stevegeek/encoded_id-rails",
        "commit_url": "https://github.com/stevegeek/encoded_id-rails/commit/695e5f1994c0d703b2817c9355021818d94d512a",
        "files": [
          "encoded_id-rails.gemspec",
          "lib/encoded_id/rails/encoder_methods.rb",
          "test/encoded_id/test_rails.rb"
        ],
        "message": "Fix allowing options to have no separator",
        "before_after_code_files": [
          "encoded_id-rails.gemspec||encoded_id-rails.gemspec",
          "lib/encoded_id/rails/encoder_methods.rb||lib/encoded_id/rails/encoder_methods.rb",
          "test/encoded_id/test_rails.rb||test/encoded_id/test_rails.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "encoded_id-rails.gemspec||encoded_id-rails.gemspec"
          ],
          "candidate": [
            "encoded_id-rails.gemspec||encoded_id-rails.gemspec"
          ]
        }
      },
      "candidate_diff": {
        "encoded_id-rails.gemspec||encoded_id-rails.gemspec": [
          "File: encoded_id-rails.gemspec -> encoded_id-rails.gemspec",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:   # Uncomment to register a new dependency of your gem",
          "33:   spec.add_dependency \"activesupport\", \">= 6.0\", \"< 8.0\"",
          "34:   spec.add_dependency \"activerecord\", \">= 6.0\", \"< 8.0\"",
          "36:   spec.add_development_dependency \"appraisal\"",
          "38:   # For more information and examples about making a new gem, check out our",
          "",
          "[Removed Lines]",
          "35:   spec.add_dependency \"encoded_id\", \"~> 1.0.0.rc3\"",
          "",
          "[Added Lines]",
          "35:   spec.add_dependency \"encoded_id\", \"~> 1.0.0.rc4\"",
          "",
          "---------------"
        ],
        "lib/encoded_id/rails/encoder_methods.rb||lib/encoded_id/rails/encoder_methods.rb": [
          "File: lib/encoded_id/rails/encoder_methods.rb -> lib/encoded_id/rails/encoder_methods.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:         EncodedId::Rails::Coder.new(",
          "29:           salt: options[:salt] || encoded_id_salt,",
          "30:           id_length: options[:id_length] || config.id_length,",
          "32:           alphabet: options[:alphabet] || config.alphabet,",
          "34:         )",
          "35:       end",
          "36:     end",
          "",
          "[Removed Lines]",
          "31:           character_group_size: options[:character_group_size] || config.character_group_size,",
          "33:           separator: options[:separator] || config.group_separator",
          "",
          "[Added Lines]",
          "31:           character_group_size: options.key?(:character_group_size) ? options[:character_group_size] : config.character_group_size,",
          "33:           separator: options.key?(:separator) ? options[:separator] : config.group_separator",
          "",
          "---------------"
        ],
        "test/encoded_id/test_rails.rb||test/encoded_id/test_rails.rb": [
          "File: test/encoded_id/test_rails.rb -> test/encoded_id/test_rails.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "156:     }))",
          "157:   end",
          "159:   def test_it_decodes_id",
          "160:     assert_equal [model.id], MyModel.decode_encoded_id(model.encoded_id)",
          "161:   end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "159:   def test_it_gets_encoded_id_with_options_with_nil_group_size",
          "160:     assert_match(/[^_]+/, MyModel.encode_encoded_id(model.id, {",
          "161:       character_group_size: nil,",
          "162:       separator: \"_\"",
          "163:     }))",
          "164:   end",
          "166:   def test_it_gets_encoded_id_with_options_with_nil_group_size",
          "167:     assert_match(/.{8}/, MyModel.encode_encoded_id(model.id, {",
          "168:       character_group_size: 3,",
          "169:       separator: nil",
          "170:     }))",
          "171:   end",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6603e6bb23f551858e568b42b29056d092036756",
      "candidate_info": {
        "commit_hash": "6603e6bb23f551858e568b42b29056d092036756",
        "repo": "stevegeek/encoded_id-rails",
        "commit_url": "https://github.com/stevegeek/encoded_id-rails/commit/6603e6bb23f551858e568b42b29056d092036756",
        "files": [
          "Gemfile",
          "Steepfile",
          "encoded_id-rails.gemspec",
          "rbs_collection.yaml"
        ],
        "message": "Updating gems and RBS",
        "before_after_code_files": [
          "encoded_id-rails.gemspec||encoded_id-rails.gemspec"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "encoded_id-rails.gemspec||encoded_id-rails.gemspec"
          ],
          "candidate": [
            "encoded_id-rails.gemspec||encoded_id-rails.gemspec"
          ]
        }
      },
      "candidate_diff": {
        "encoded_id-rails.gemspec||encoded_id-rails.gemspec": [
          "File: encoded_id-rails.gemspec -> encoded_id-rails.gemspec",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:   # Uncomment to register a new dependency of your gem",
          "33:   spec.add_dependency \"activesupport\", \">= 6.0\", \"< 8.0\"",
          "34:   spec.add_dependency \"activerecord\", \">= 6.0\", \"< 8.0\"",
          "37:   # For more information and examples about making a new gem, check out our",
          "38:   # guide at: https://bundler.io/guides/creating_gem.html",
          "",
          "[Removed Lines]",
          "35:   spec.add_dependency \"encoded_id\", \"~> 0.4\"",
          "",
          "[Added Lines]",
          "35:   spec.add_dependency \"encoded_id\", \"~> 1.0.0.rc1\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "76315e2363a5cf25e0375639eaffe5bd2a4eb25d",
      "candidate_info": {
        "commit_hash": "76315e2363a5cf25e0375639eaffe5bd2a4eb25d",
        "repo": "stevegeek/encoded_id-rails",
        "commit_url": "https://github.com/stevegeek/encoded_id-rails/commit/76315e2363a5cf25e0375639eaffe5bd2a4eb25d",
        "files": [
          "encoded_id-rails.gemspec",
          "lib/encoded_id/rails/configuration.rb",
          "lib/generators/encoded_id/rails/templates/encoded_id.rb",
          "test/encoded_id/test_rails.rb"
        ],
        "message": "Validate configuration better",
        "before_after_code_files": [
          "encoded_id-rails.gemspec||encoded_id-rails.gemspec",
          "lib/encoded_id/rails/configuration.rb||lib/encoded_id/rails/configuration.rb",
          "lib/generators/encoded_id/rails/templates/encoded_id.rb||lib/generators/encoded_id/rails/templates/encoded_id.rb",
          "test/encoded_id/test_rails.rb||test/encoded_id/test_rails.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "encoded_id-rails.gemspec||encoded_id-rails.gemspec"
          ],
          "candidate": [
            "encoded_id-rails.gemspec||encoded_id-rails.gemspec"
          ]
        }
      },
      "candidate_diff": {
        "encoded_id-rails.gemspec||encoded_id-rails.gemspec": [
          "File: encoded_id-rails.gemspec -> encoded_id-rails.gemspec",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:   # Uncomment to register a new dependency of your gem",
          "33:   spec.add_dependency \"activesupport\", \">= 6.0\", \"< 8.0\"",
          "34:   spec.add_dependency \"activerecord\", \">= 6.0\", \"< 8.0\"",
          "37:   # For more information and examples about making a new gem, check out our",
          "38:   # guide at: https://bundler.io/guides/creating_gem.html",
          "",
          "[Removed Lines]",
          "35:   spec.add_dependency \"encoded_id\", \"~> 1.0.0.rc1\"",
          "",
          "[Added Lines]",
          "35:   spec.add_dependency \"encoded_id\", \"~> 1.0.0.rc2\"",
          "",
          "---------------"
        ],
        "lib/encoded_id/rails/configuration.rb||lib/encoded_id/rails/configuration.rb": [
          "File: lib/encoded_id/rails/configuration.rb -> lib/encoded_id/rails/configuration.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:   module Rails",
          "5:     # Configuration class for initializer",
          "6:     class Configuration",
          "17:       def initialize",
          "18:         @character_group_size = 4",
          "",
          "[Removed Lines]",
          "7:       attr_accessor :salt,",
          "8:         :character_group_size,",
          "9:         :group_separator,",
          "10:         :alphabet,",
          "11:         :id_length,",
          "12:         :slug_value_method_name,",
          "13:         :slugged_id_separator,",
          "14:         :annotation_method_name, # Set to nil to disable annotated IDs",
          "15:         :annotated_id_separator",
          "",
          "[Added Lines]",
          "7:       attr_accessor :salt, :character_group_size, :alphabet, :id_length",
          "8:       attr_accessor :slug_value_method_name, :annotation_method_name",
          "9:       attr_reader :group_separator, :slugged_id_separator, :annotated_id_separator",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24:         @annotation_method_name = :annotation_for_encoded_id",
          "25:         @annotated_id_separator = \"_\"",
          "26:       end",
          "27:     end",
          "28:   end",
          "29: end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22:       # Perform validation vs alphabet on these assignments",
          "24:       def group_separator=(value)",
          "25:         unless valid_separator?(value, alphabet)",
          "26:           raise ArgumentError, \"Group separator characters must not be part of the alphabet\"",
          "27:         end",
          "28:         @group_separator = value",
          "29:       end",
          "31:       def slugged_id_separator=(value)",
          "32:         if value.blank? || value == group_separator || !valid_separator?(value, alphabet)",
          "33:           raise ArgumentError, \"Slugged ID separator characters must not be part of the alphabet or the same as the group separator\"",
          "34:         end",
          "35:         @slugged_id_separator = value",
          "36:       end",
          "38:       def annotated_id_separator=(value)",
          "39:         if value.blank? || value == group_separator || !valid_separator?(value, alphabet)",
          "40:           raise ArgumentError, \"Annotated ID separator characters must not be part of the alphabet or the same as the group separator\"",
          "41:         end",
          "42:         @annotated_id_separator = value",
          "43:       end",
          "45:       def valid_separator?(separator, characters)",
          "46:         separator.chars.none? { |v| characters.include?(v) }",
          "47:       end",
          "",
          "---------------"
        ],
        "lib/generators/encoded_id/rails/templates/encoded_id.rb||lib/generators/encoded_id/rails/templates/encoded_id.rb": [
          "File: lib/generators/encoded_id/rails/templates/encoded_id.rb -> lib/generators/encoded_id/rails/templates/encoded_id.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "41:   # Default: 8",
          "42:   #",
          "43:   # config.id_length = 8",
          "44: end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45:   # The name of the method that returns the value to be used in the slug.",
          "46:   #",
          "47:   # Default: :name_for_encoded_id_slug",
          "48:   #",
          "49:   # config.slug_value_method_name = :name_for_encoded_id_slug",
          "51:   # The separator used between the slug and the encoded ID.",
          "52:   # `nil` disables grouping.",
          "53:   #",
          "54:   # Default: \"--\"",
          "55:   #",
          "56:   # config.slugged_id_separator = \"--\"",
          "58:   # The name of the method that returns the annotation to be used in the annotated ID.",
          "59:   #",
          "60:   # Default: :annotation_for_encoded_id",
          "61:   #",
          "62:   # config.annotation_method_name = :annotation_for_encoded_id",
          "64:   # The separator used between the annotation and the encoded ID.",
          "65:   # `nil` disables annotation.",
          "66:   #",
          "67:   # Default: \"_\"",
          "68:   #",
          "69:   # config.annotated_id_separator = \"_\"",
          "",
          "---------------"
        ],
        "test/encoded_id/test_rails.rb||test/encoded_id/test_rails.rb": [
          "File: test/encoded_id/test_rails.rb -> test/encoded_id/test_rails.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:     EncodedId::Rails.configuration.slug_value_method_name = :custom_slug_method",
          "15:   end",
          "17:   def test_find_by_encoded_id_gets_model_given_encoded_id",
          "18:     assert_equal model, MyModel.find_by_encoded_id(model.encoded_id)",
          "19:   end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17:   def test_configuration_prevents_invalid_group_separator",
          "18:     assert_raises ArgumentError do",
          "19:       EncodedId::Rails.configuration.group_separator = \"a\"",
          "20:     end",
          "21:   end",
          "23:   def test_configuration_prevents_invalid_slugged_id_separator",
          "24:     assert_raises ArgumentError do",
          "25:       EncodedId::Rails.configuration.slugged_id_separator = \"a\"",
          "26:     end",
          "27:     EncodedId::Rails.configuration.group_separator = \"-\"",
          "28:     assert_raises ArgumentError do",
          "29:       EncodedId::Rails.configuration.slugged_id_separator = \"-\"",
          "30:     end",
          "31:   end",
          "33:   def test_configuration_prevents_invalid_annotated_id_separator",
          "34:     assert_raises ArgumentError do",
          "35:       EncodedId::Rails.configuration.annotated_id_separator = \"a\"",
          "36:     end",
          "37:   end",
          "",
          "---------------"
        ]
      }
    }
  ]
}