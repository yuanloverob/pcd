{
  "cve_id": "CVE-2021-41745",
  "cve_desc": "ShowDoc 2.8.3 ihas a file upload vulnerability, where attackers can use the vulnerability to obtain server permissions.",
  "repo": "star7th/showdoc",
  "patch_hash": "aec3df841958059c1db9ab1af25acc2af81e4e0e",
  "patch_info": {
    "commit_hash": "aec3df841958059c1db9ab1af25acc2af81e4e0e",
    "repo": "star7th/showdoc",
    "commit_url": "https://github.com/star7th/showdoc/commit/aec3df841958059c1db9ab1af25acc2af81e4e0e",
    "files": [
      "server/Application/Api/Controller/AttachmentController.class.php",
      "server/Application/Api/Controller/CommonController.class.php",
      "server/Application/Api/Controller/PageController.class.php",
      "server/Application/Api/Controller/UpdateController.class.php",
      "server/Application/Api/Model/AttachmentModel.class.php",
      "server/Application/Api/Model/PageModel.class.php",
      "web_src/.prettierrc.json",
      "web_src/src/components/admin/Index.vue",
      "web_src/src/components/admin/attachment/Index.vue",
      "web_src/src/components/attachment/Index.vue",
      "web_src/src/components/item/Index.vue",
      "web_src/src/router/index.js",
      "web_src/static/css/common.css",
      "web_src/static/lang/en.js",
      "web_src/static/lang/zh-CN.js"
    ],
    "message": "Attachment management \u9644\u4ef6\u7ba1\u7406",
    "before_after_code_files": [
      "server/Application/Api/Controller/AttachmentController.class.php||server/Application/Api/Controller/AttachmentController.class.php",
      "server/Application/Api/Controller/CommonController.class.php||server/Application/Api/Controller/CommonController.class.php",
      "server/Application/Api/Controller/PageController.class.php||server/Application/Api/Controller/PageController.class.php",
      "server/Application/Api/Controller/UpdateController.class.php||server/Application/Api/Controller/UpdateController.class.php",
      "server/Application/Api/Model/AttachmentModel.class.php||server/Application/Api/Model/AttachmentModel.class.php",
      "server/Application/Api/Model/PageModel.class.php||server/Application/Api/Model/PageModel.class.php",
      "web_src/src/components/admin/Index.vue||web_src/src/components/admin/Index.vue",
      "web_src/src/components/admin/attachment/Index.vue||web_src/src/components/admin/attachment/Index.vue",
      "web_src/src/components/attachment/Index.vue||web_src/src/components/attachment/Index.vue",
      "web_src/src/components/item/Index.vue||web_src/src/components/item/Index.vue",
      "web_src/src/router/index.js||web_src/src/router/index.js",
      "web_src/static/css/common.css||web_src/static/css/common.css",
      "web_src/static/lang/en.js||web_src/static/lang/en.js",
      "web_src/static/lang/zh-CN.js||web_src/static/lang/zh-CN.js"
    ]
  },
  "patch_diff": {
    "server/Application/Api/Controller/AttachmentController.class.php||server/Application/Api/Controller/AttachmentController.class.php": [
      "File: server/Application/Api/Controller/AttachmentController.class.php -> server/Application/Api/Controller/AttachmentController.class.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <?php",
      "3: namespace Api\\Controller;",
      "4: use Think\\Controller;",
      "5: class AttachmentController extends BaseController {",
      "7:     public function index(){",
      "9:         echo 'Attachment';",
      "11:     }",
      "14:     public function visitFile(){",
      "15:       $sign = I(\"sign\");",
      "16:       $imageView2 = I(\"imageView2\");",
      "17:       $d = D(\"UploadFile\") ;",
      "18:       $ret = $d->where(\" sign = '%s' \",array($sign))->find();",
      "19:       if ($ret) {",
      "20:             $beyond_the_quota = 0 ;",
      "21:             $days = ceil(( time() -$ret['addtime'])/86400);//\u81ea\u6dfb\u52a0\u56fe\u7247\u4ee5\u6765\u7684\u5929\u6570",
      "22:             $adv_day_times = $ret['visit_times'] / $days  ; //\u5e73\u5747\u6bcf\u5929\u7684\u8bbf\u95ee\u6b21\u6570",
      "23:             $flow_rate = ( $ret['file_size'] * $ret['visit_times'] ) / $days ; //\u65e5\u5747\u6d41\u91cf",
      "27:             if ( strpos($_SERVER['HTTP_USER_AGENT'], 'MicroMessenger') !== false  && strpos($ret['real_url'] , '.apk') !== false ) {",
      "28:                 header(\"Content-type: text/html; charset=utf-8\");",
      "29:                 echo \"<head><title>\u6e29\u99a8\u63d0\u793a</title></head>\";",
      "30:                 echo \"<br><h1>\u5fae\u4fe1\u4e0d\u652f\u6301\u76f4\u63a5\u4e0b\u8f7d\uff0c\u8bf7\u70b9\u51fb\u53f3\u4e0a\u89d2\u201c---\u201d\u5728\u5916\u90e8\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00</h1>\";",
      "31:                 return ;",
      "33:             }",
      "35:           $d->where(\" sign = '%s' \",array($sign))->save(array(\"visit_times\" => $ret['visit_times'] + 1  ,\"last_visit_time\"=>time()));",
      "37:             D(\"Attachment\")->recordUserFlow($ret['uid'] , $ret['file_size']) ;",
      "40:             if ($ret['cache_url']) {",
      "41:                 $url = $ret['cache_url'] ;",
      "42:             }else{",
      "43:                 $url = $ret['real_url']  ;",
      "44:             }",
      "46:         header(\"location:{$url}\");",
      "47:       }else{",
      "48:         echo \"www.showdoc.cc\";",
      "49:       }",
      "50:     }",
      "53:     public function uploadImg(){",
      "54:         $login_user = $this->checkLogin();",
      "55:         $item_id = I(\"item_id/d\") ? I(\"item_id/d\") : 0 ;",
      "56:         $page_id = I(\"page_id/d\") ? I(\"page_id/d\") : 0 ;",
      "59:         if ($_FILES['editormd-image-file']['name'] == 'blob') {",
      "60:             $_FILES['editormd-image-file']['name'] .= '.jpg';",
      "61:         }",
      "63:         if (!$_FILES['editormd-image-file']) {",
      "64:            return false;",
      "65:         }",
      "67:         if (strstr(strip_tags(strtolower($_FILES['editormd-image-file']['name'])), \".php\") ) {",
      "68:             return false;",
      "69:         }",
      "71:         $oss_open = D(\"Options\")->get(\"oss_open\" ) ;",
      "72:         if ($oss_open) {",
      "73:             $uploadFile = $_FILES['editormd-image-file'] ;",
      "74:             $url = upload_oss($uploadFile);",
      "75:             if ($url) {",
      "76:                 $sign = md5($url.time().rand()) ;",
      "77:                 $insert = array(",
      "78:                 \"sign\" => $sign,",
      "79:                 \"uid\" => $login_user['uid'],",
      "80:                 \"item_id\" => $item_id,",
      "81:                 \"page_id\" => $page_id,",
      "82:                 \"display_name\" => $uploadFile['name'],",
      "83:                 \"file_type\" => $uploadFile['type'],",
      "84:                 \"file_size\" => $uploadFile['size'],",
      "85:                 \"real_url\" => $url,",
      "86:                 \"addtime\" => time(),",
      "87:                 );",
      "88:                 $ret = D(\"UploadFile\")->add($insert);",
      "89:                 $url = get_domain().U(\"api/attachment/visitFile\",array(\"sign\" => $sign)).\"&showdoc=.jpg\";",
      "90:                 echo json_encode(array(\"url\"=>$url,\"success\"=>1));",
      "91:             }",
      "92:             return ;",
      "93:         }",
      "95:         $upload = new \\Think\\Upload();// \u5b9e\u4f8b\u5316\u4e0a\u4f20\u7c7b",
      "96:         $upload->maxSize  = 1003145728 ;// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u5927\u5c0f",
      "97:         $upload->allowExts  = array('jpg', 'gif', 'png', 'jpeg');// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u7c7b\u578b",
      "98:         $upload->rootPath = './../Public/Uploads/';// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u76ee\u5f55",
      "99:         $upload->savePath = '';// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u5b50\u76ee\u5f55",
      "100:         $info = $upload->uploadOne($_FILES['editormd-image-file']) ;",
      "101:         if(!$info) {// \u4e0a\u4f20\u9519\u8bef\u63d0\u793a\u9519\u8bef\u4fe1\u606f",
      "102:           $this->error($upload->getError());",
      "103:           return;",
      "104:         }else{// \u4e0a\u4f20\u6210\u529f \u83b7\u53d6\u4e0a\u4f20\u6587\u4ef6\u4fe1\u606f",
      "105:           $url = get_domain().__ROOT__.substr($upload->rootPath,1).$info['savepath'].$info['savename'] ;",
      "106:           $sign = md5($url.time().rand()) ;",
      "107:           $uploadFile = $_FILES['editormd-image-file'] ;",
      "108:           $insert = array(",
      "109:             \"sign\" => $sign,",
      "110:             \"uid\" => $login_user['uid'],",
      "111:             \"item_id\" => $item_id,",
      "112:             \"page_id\" => $page_id,",
      "113:             \"display_name\" => $uploadFile['name'],",
      "114:             \"file_type\" => $uploadFile['type'],",
      "115:             \"file_size\" => $uploadFile['size'],",
      "116:             \"real_url\" => $url,",
      "117:             \"addtime\" => time(),",
      "118:             );",
      "119:           $ret = D(\"UploadFile\")->add($insert);",
      "120:           $url = get_domain().U(\"api/attachment/visitFile\",array(\"sign\" => $sign)).\"&showdoc=.jpg\";",
      "121:           echo json_encode(array(\"url\"=>$url,\"success\"=>1));",
      "122:         }",
      "124:     }",
      "127:     public function pageAttachmentUpload(){",
      "128:         $login_user = $this->checkLogin();",
      "129:         $item_id = I(\"item_id/d\") ? I(\"item_id/d\") : 0 ;",
      "130:         $page_id = I(\"page_id/d\") ? I(\"page_id/d\") : 0 ;",
      "131:         $uploadFile = $_FILES['file'] ;",
      "133:         if (!$page_id) {",
      "134:             $this->sendError(10103,\"\u8bf7\u81f3\u5c11\u5148\u4fdd\u5b58\u4e00\u6b21\u9875\u9762\u5185\u5bb9\");",
      "135:             return;",
      "136:         }",
      "137:         if (!$this->checkItemPermn($login_user['uid'] , $item_id)) {",
      "138:             $this->sendError(10103);",
      "139:             return;",
      "140:         }",
      "142:         if (!$uploadFile) {",
      "143:            return false;",
      "144:         }",
      "146:         if (strstr(strip_tags(strtolower($uploadFile['name'])), \".php\") ) {",
      "147:             return false;",
      "148:         }",
      "150:         $oss_open = D(\"Options\")->get(\"oss_open\" ) ;",
      "151:         if ($oss_open) {",
      "152:             $url = upload_oss($uploadFile);",
      "153:             if ($url) {",
      "154:                 $sign = md5($url.time().rand()) ;",
      "155:                 $insert = array(",
      "156:                 \"sign\" => $sign,",
      "157:                 \"uid\" => $login_user['uid'],",
      "158:                 \"item_id\" => $item_id,",
      "159:                 \"page_id\" => $page_id,",
      "160:                 \"display_name\" => $uploadFile['name'],",
      "161:                 \"file_type\" => $uploadFile['type'],",
      "162:                 \"file_size\" => $uploadFile['size'],",
      "163:                 \"real_url\" => $url,",
      "164:                 \"addtime\" => time(),",
      "165:                 );",
      "166:                 $ret = D(\"UploadFile\")->add($insert);",
      "167:                 $url = get_domain().U(\"api/attachment/visitFile\",array(\"sign\" => $sign));",
      "168:                 echo json_encode(array(\"url\"=>$url,\"success\"=>1));",
      "169:             }",
      "170:             return ;",
      "171:         }",
      "173:         $upload = new \\Think\\Upload();// \u5b9e\u4f8b\u5316\u4e0a\u4f20\u7c7b",
      "174:         $upload->maxSize  = 4145728000 ;// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u5927\u5c0f",
      "175:         $upload->rootPath = './../Public/Uploads/';// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u76ee\u5f55",
      "176:         $upload->savePath = '';// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u5b50\u76ee\u5f55",
      "177:         $info = $upload->uploadOne($uploadFile) ;",
      "178:         if(!$info) {// \u4e0a\u4f20\u9519\u8bef\u63d0\u793a\u9519\u8bef\u4fe1\u606f",
      "179:           $this->error($upload->getError());",
      "180:           return;",
      "181:         }else{// \u4e0a\u4f20\u6210\u529f \u83b7\u53d6\u4e0a\u4f20\u6587\u4ef6\u4fe1\u606f",
      "182:           $url = get_domain().__ROOT__.substr($upload->rootPath,1).$info['savepath'].$info['savename'] ;",
      "183:           $sign = md5($url.time().rand()) ;",
      "184:           $insert = array(",
      "185:             \"sign\" => $sign,",
      "186:             \"uid\" => $login_user['uid'],",
      "187:             \"item_id\" => $item_id,",
      "188:             \"page_id\" => $page_id,",
      "189:             \"display_name\" => $uploadFile['name'],",
      "190:             \"file_type\" => $uploadFile['type'],",
      "191:             \"file_size\" => $uploadFile['size'],",
      "192:             \"real_url\" => $url,",
      "193:             \"addtime\" => time(),",
      "194:             );",
      "195:           $ret = D(\"UploadFile\")->add($insert);",
      "196:           $url = get_domain().U(\"api/attachment/visitFile\",array(\"sign\" => $sign));",
      "197:           echo json_encode(array(\"url\"=>$url,\"success\"=>1));",
      "198:         }",
      "200:     }",
      "202:     public function pageAttachmentUploadList(){",
      "203:         $login_user = $this->checkLogin();",
      "204:         $item_id = I(\"item_id/d\") ? I(\"item_id/d\") : 0 ;",
      "205:         $page_id = I(\"page_id/d\") ? I(\"page_id/d\") : 0 ;",
      "206:         if (!$page_id) {",
      "207:             $this->sendError(10103,\"\u8bf7\u81f3\u5c11\u5148\u4fdd\u5b58\u4e00\u6b21\u9875\u9762\u5185\u5bb9\");",
      "208:             return;",
      "209:         }",
      "210:         $return = array() ;",
      "211:         $files = D(\"UploadFile\")->where(\"page_id = '$page_id' \")->order(\"addtime desc\")->select();",
      "212:         if ($files) {",
      "213:             $item_id = $files[0]['item_id'] ;",
      "214:             if (!$this->checkItemVisit($login_user['uid'] , $item_id)) {",
      "215:                 $this->sendError(10103);",
      "216:                 return;",
      "217:             }",
      "218:             foreach ($files as $key => $value) {",
      "219:                 $return[] = array(",
      "220:                     \"file_id\"=>$value['file_id'],",
      "221:                     \"display_name\"=>$value['display_name'],",
      "222:                     \"url\"=>get_domain().U(\"api/attachment/visitFile\",array(\"sign\" => $value['sign'])),",
      "223:                     \"addtime\"=> date(\"Y-m-d H:i:s\" , $value['addtime'] ),",
      "224:                     );",
      "225:             }",
      "227:         }",
      "228:         $this->sendResult($return);",
      "230:     }",
      "233:     public function deletePageUploadFile(){",
      "234:         $login_user = $this->checkLogin();",
      "235:         $file_id = I(\"file_id/d\") ? I(\"file_id/d\") : 0 ;",
      "237:         $file = D(\"UploadFile\")->where(\"file_id = '$file_id' \")->find();",
      "238:         $item_id = $file['item_id'] ;",
      "239:         if (!$this->checkItemPermn($login_user['uid'] , $item_id)) {",
      "240:             $this->sendError(10103);",
      "241:             return;",
      "242:         }",
      "243:         $ret = D(\"Page\")->deleteFile($file_id);",
      "244:         if ($ret) {",
      "245:             $this->sendResult(array());",
      "246:         }else{",
      "247:             $this->sendError(10101,\"\u5220\u9664\u5931\u8d25\");",
      "248:         }",
      "249:     }",
      "252:     public function getAllList(){",
      "253:         $login_user = $this->checkLogin();",
      "254:         $this->checkAdmin(); //\u91cd\u8981\uff0c\u6821\u9a8c\u7ba1\u7406\u5458\u8eab\u4efd",
      "255:         $page = I(\"page/d\");",
      "256:         $count = I(\"count/d\");",
      "257:         $attachment_type = I(\"attachment_type/d\");",
      "258:         $display_name = I(\"display_name\");",
      "259:         $username = I(\"username\");",
      "260:         $return = array() ;",
      "261:         $where = ' 1 = 1 ';",
      "262:         if($attachment_type == 1 ){",
      "263:             $where .=\" and file_type like '%image%' \" ;",
      "264:         }",
      "265:         if($attachment_type == 2 ){",
      "266:             $where .=\" and file_type not like '%image%' \" ;",
      "267:         }",
      "268:         if($display_name){",
      "269:             $display_name =  \\SQLite3::escapeString($display_name) ;",
      "270:             $where .=\" and display_name  like '%{$display_name}%' \" ;",
      "271:         }",
      "272:         if($username){",
      "273:             $username =  \\SQLite3::escapeString($username) ;",
      "274:             $uid = D(\"User\")->where(\" username = '{$username}' \")->getField('uid') ;",
      "275:             $uid = $uid ? $uid  : -99 ;",
      "276:             $where .=\" and uid  = '{$uid}' \" ;",
      "277:         }",
      "278:         $files = D(\"UploadFile\")->where($where)->order(\"addtime desc\")->page($page ,$count)->select();",
      "279:         if ($files) {",
      "280:             foreach ($files as $key => $value) {",
      "281:                 $username = '';",
      "282:                 if($value['uid']){",
      "283:                     $username = D(\"User\")->where(\" uid = {$value['uid']} \")->getField('username') ;",
      "284:                 }",
      "285:                 $return['list'][] = array(",
      "286:                     \"file_id\"=>$value['file_id'],",
      "287:                     \"username\"=>$username,",
      "288:                     \"uid\"=>$value['uid'],",
      "289:                     \"file_type\"=>$value['file_type'],",
      "290:                     \"visit_times\"=>$value['visit_times'],",
      "291:                     \"file_size\"=>$value['file_size'],",
      "292:                     \"item_id\"=>$value['item_id'],",
      "293:                     \"page_id\"=>$value['page_id'],",
      "294:                     \"file_size_m\"=>round( $value['file_size']/(1024*1024),3),",
      "295:                     \"display_name\"=>$value['display_name']?$value['display_name']:'',",
      "296:                     \"url\"=>get_domain().U(\"api/attachment/visitFile\",array(\"sign\" => $value['sign'])),",
      "297:                     \"addtime\"=> date(\"Y-m-d H:i:s\" , $value['addtime'] ),",
      "298:                     \"last_visit_time\"=> date(\"Y-m-d H:i:s\" , $value['last_visit_time'] ),",
      "299:                     );",
      "300:             }",
      "302:         }",
      "303:         $return['total'] = D(\"UploadFile\")->where($where)->count();",
      "304:         $used = D(\"UploadFile\")->where($where)->getField('sum(file_size)');",
      "305:         $return['used'] = $used ;",
      "306:         $return['used_m'] = round( $used/(1024*1024),3) ;",
      "307:         $this->sendResult($return);",
      "308:     }",
      "311:     public function deleteAttachment(){",
      "312:         $login_user = $this->checkLogin();",
      "313:         $this->checkAdmin(); //\u91cd\u8981\uff0c\u6821\u9a8c\u7ba1\u7406\u5458\u8eab\u4efd",
      "314:         $file_id = I(\"file_id/d\") ? I(\"file_id/d\") : 0 ;",
      "316:         $file = D(\"UploadFile\")->where(\"file_id = '$file_id' \")->find();",
      "318:         $ret = D(\"Page\")->deleteFile($file_id);",
      "319:         if ($ret) {",
      "320:             $this->sendResult(array());",
      "321:         }else{",
      "322:             $this->sendError(10101,\"\u5220\u9664\u5931\u8d25\");",
      "323:         }",
      "324:     }",
      "327:     public function getMyList(){",
      "328:         $login_user = $this->checkLogin();",
      "329:         $page = I(\"page/d\");",
      "330:         $count = I(\"count/d\");",
      "331:         $attachment_type = I(\"attachment_type/d\");",
      "332:         $display_name = I(\"display_name\");",
      "333:         $username = I(\"username\");",
      "334:         $return = array() ;",
      "335:         $where = \" uid  = '{$login_user[uid]}' \";",
      "336:         if($attachment_type == 1 ){",
      "337:             $where .=\" and file_type like '%image%' \" ;",
      "338:         }",
      "339:         if($attachment_type == 2 ){",
      "340:             $where .=\" and file_type not like '%image%' \" ;",
      "341:         }",
      "342:         if($display_name){",
      "343:             $display_name =  \\SQLite3::escapeString($display_name) ;",
      "344:             $where .=\" and display_name  like '%{$display_name}%' \" ;",
      "345:         }",
      "346:         $files = D(\"UploadFile\")->where($where)->order(\"addtime desc\")->page($page ,$count)->select();",
      "347:         if ($files) {",
      "348:             foreach ($files as $key => $value) {",
      "349:                 $username = '';",
      "350:                 $return['list'][] = array(",
      "351:                     \"file_id\"=>$value['file_id'],",
      "352:                     \"uid\"=>$value['uid'],",
      "353:                     \"file_type\"=>$value['file_type'],",
      "354:                     \"visit_times\"=>$value['visit_times'],",
      "355:                     \"file_size\"=>$value['file_size'],",
      "356:                     \"item_id\"=>$value['item_id'],",
      "357:                     \"page_id\"=>$value['page_id'],",
      "358:                     \"file_size_m\"=>round( $value['file_size']/(1024*1024),3),",
      "359:                     \"display_name\"=>$value['display_name']?$value['display_name']:'',",
      "360:                     \"url\"=>get_domain().U(\"api/attachment/visitFile\",array(\"sign\" => $value['sign'])),",
      "361:                     \"addtime\"=> date(\"Y-m-d H:i:s\" , $value['addtime'] ),",
      "362:                     \"last_visit_time\"=> date(\"Y-m-d H:i:s\" , $value['last_visit_time'] ),",
      "363:                     );",
      "364:             }",
      "366:         }",
      "367:         $return['total'] = D(\"UploadFile\")->where($where)->count();",
      "368:         $used = D(\"UploadFile\")->where($where)->getField('sum(file_size)');",
      "369:         $return['used'] = $used ;",
      "370:         $return['used_m'] = round( $used/(1024*1024),3) ;",
      "371:         $used_flow =  D(\"Attachment\")->getUserFlow($login_user['uid']) ; ; //\u8be5\u7528\u6237\u7684\u672c\u6708\u4f7f\u7528\u6d41\u91cf",
      "372:         $return['used_flow_m'] = round( $used_flow/(1024*1024),3) ;",
      "374:         $this->sendResult($return);",
      "375:     }",
      "378:     public function deleteMyAttachment(){",
      "379:         $login_user = $this->checkLogin();",
      "380:         $file_id = I(\"file_id/d\") ? I(\"file_id/d\") : 0 ;",
      "382:         $file = D(\"UploadFile\")->where(\"file_id = '$file_id' and uid ='$login_user[uid]' \")->find();",
      "384:         if($file){",
      "385:             $ret = D(\"Page\")->deleteFile($file_id);",
      "386:             if ($ret) {",
      "387:                 $this->sendResult(array());",
      "388:                 return ;",
      "389:             }",
      "390:         }",
      "391:         $this->sendError(10101,\"\u5220\u9664\u5931\u8d25\");",
      "392:     }",
      "394: }",
      "",
      "---------------"
    ],
    "server/Application/Api/Controller/CommonController.class.php||server/Application/Api/Controller/CommonController.class.php": [
      "File: server/Application/Api/Controller/CommonController.class.php -> server/Application/Api/Controller/CommonController.class.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "95:       $json = json_decode($file , 1 );",
      "96:       $this->sendResult(array(\"version\"=>$json['version']));",
      "97:     }",
      "99: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "100:     public function visitFile(){",
      "101:        R(\"Attachment/visitFile\");",
      "102:     }",
      "",
      "---------------"
    ],
    "server/Application/Api/Controller/PageController.class.php||server/Application/Api/Controller/PageController.class.php": [
      "File: server/Application/Api/Controller/PageController.class.php -> server/Application/Api/Controller/PageController.class.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "212:     public function uploadImg(){",
      "254:     }",
      "257:     public function upload(){",
      "325:     }",
      "327:     public function uploadList(){",
      "355:     }",
      "358:     public function deleteUploadFile(){",
      "374:     }",
      "",
      "[Removed Lines]",
      "213:         $login_user = $this->checkLogin();",
      "214:         $item_id = I(\"item_id/d\") ? I(\"item_id/d\") : 0 ;",
      "215:         $page_id = I(\"page_id/d\") ? I(\"page_id/d\") : 0 ;",
      "218:         if ($_FILES['editormd-image-file']['name'] == 'blob') {",
      "219:             $_FILES['editormd-image-file']['name'] .= '.jpg';",
      "220:         }",
      "222:         if (!$_FILES['editormd-image-file']) {",
      "223:            return false;",
      "224:         }",
      "226:         if (strstr(strip_tags(strtolower($_FILES['editormd-image-file']['name'])), \".php\") ) {",
      "227:             return false;",
      "228:         }",
      "230:         $oss_open = D(\"Options\")->get(\"oss_open\" ) ;",
      "231:         if ($oss_open) {",
      "232:             $uploadFile = $_FILES['editormd-image-file'] ;",
      "233:             $url = upload_oss($uploadFile);",
      "234:             if ($url) {",
      "235:                 echo json_encode(array(\"url\"=>$url,\"success\"=>1));",
      "236:             }",
      "237:             return ;",
      "238:         }",
      "240:         $upload = new \\Think\\Upload();// \u5b9e\u4f8b\u5316\u4e0a\u4f20\u7c7b",
      "241:         $upload->maxSize  = 1003145728 ;// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u5927\u5c0f",
      "242:         $upload->allowExts  = array('jpg', 'gif', 'png', 'jpeg');// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u7c7b\u578b",
      "243:         $upload->rootPath = './../Public/Uploads/';// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u76ee\u5f55",
      "244:         $upload->savePath = '';// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u5b50\u76ee\u5f55",
      "245:         $info = $upload->uploadOne($_FILES['editormd-image-file']) ;",
      "246:         if(!$info) {// \u4e0a\u4f20\u9519\u8bef\u63d0\u793a\u9519\u8bef\u4fe1\u606f",
      "247:           $this->error($upload->getError());",
      "248:           return;",
      "249:         }else{// \u4e0a\u4f20\u6210\u529f \u83b7\u53d6\u4e0a\u4f20\u6587\u4ef6\u4fe1\u606f",
      "250:           $url = get_domain().__ROOT__.substr($upload->rootPath,1).$info['savepath'].$info['savename'] ;",
      "251:           echo json_encode(array(\"url\"=>$url,\"success\"=>1));",
      "252:         }",
      "258:         $login_user = $this->checkLogin();",
      "259:         $item_id = I(\"item_id/d\") ? I(\"item_id/d\") : 0 ;",
      "260:         $page_id = I(\"page_id/d\") ? I(\"page_id/d\") : 0 ;",
      "261:         $uploadFile = $_FILES['file'] ;",
      "263:         if (!$page_id) {",
      "264:             $this->sendError(10103,\"\u8bf7\u81f3\u5c11\u5148\u4fdd\u5b58\u4e00\u6b21\u9875\u9762\u5185\u5bb9\");",
      "265:             return;",
      "266:         }",
      "267:         if (!$this->checkItemPermn($login_user['uid'] , $item_id)) {",
      "268:             $this->sendError(10103);",
      "269:             return;",
      "270:         }",
      "272:         if (!$uploadFile) {",
      "273:            return false;",
      "274:         }",
      "276:         if (strstr(strip_tags(strtolower($uploadFile['name'])), \".php\") ) {",
      "277:             return false;",
      "278:         }",
      "280:         $oss_open = D(\"Options\")->get(\"oss_open\" ) ;",
      "281:         if ($oss_open) {",
      "282:             $url = upload_oss($uploadFile);",
      "283:             if ($url) {",
      "284:                 $insert = array(",
      "285:                 \"uid\" => $login_user['uid'],",
      "286:                 \"item_id\" => $item_id,",
      "287:                 \"page_id\" => $page_id,",
      "288:                 \"display_name\" => $uploadFile['name'],",
      "289:                 \"file_type\" => $uploadFile['type'],",
      "290:                 \"file_size\" => $uploadFile['size'],",
      "291:                 \"real_url\" => $url,",
      "292:                 \"addtime\" => time(),",
      "293:                 );",
      "294:                 $ret = D(\"UploadFile\")->add($insert);",
      "295:                 echo json_encode(array(\"url\"=>$url,\"success\"=>1));",
      "296:             }",
      "297:             return ;",
      "298:         }",
      "300:         $upload = new \\Think\\Upload();// \u5b9e\u4f8b\u5316\u4e0a\u4f20\u7c7b",
      "301:         $upload->maxSize  = 4145728000 ;// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u5927\u5c0f",
      "302:         $upload->rootPath = './../Public/Uploads/';// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u76ee\u5f55",
      "303:         $upload->savePath = '';// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u5b50\u76ee\u5f55",
      "304:         $info = $upload->uploadOne($uploadFile) ;",
      "305:         if(!$info) {// \u4e0a\u4f20\u9519\u8bef\u63d0\u793a\u9519\u8bef\u4fe1\u606f",
      "306:           $this->error($upload->getError());",
      "307:           return;",
      "308:         }else{// \u4e0a\u4f20\u6210\u529f \u83b7\u53d6\u4e0a\u4f20\u6587\u4ef6\u4fe1\u606f",
      "309:           $url = get_domain().__ROOT__.substr($upload->rootPath,1).$info['savepath'].$info['savename'] ;",
      "310:           $insert = array(",
      "311:             \"uid\" => $login_user['uid'],",
      "312:             \"item_id\" => $item_id,",
      "313:             \"page_id\" => $page_id,",
      "314:             \"display_name\" => $uploadFile['name'],",
      "315:             \"file_type\" => $uploadFile['type'],",
      "316:             \"file_size\" => $uploadFile['size'],",
      "317:             \"real_url\" => $url,",
      "318:             \"addtime\" => time(),",
      "319:             );",
      "320:           $ret = D(\"UploadFile\")->add($insert);",
      "322:           echo json_encode(array(\"url\"=>$url,\"success\"=>1));",
      "323:         }",
      "328:         $login_user = $this->checkLogin();",
      "329:         $item_id = I(\"item_id/d\") ? I(\"item_id/d\") : 0 ;",
      "330:         $page_id = I(\"page_id/d\") ? I(\"page_id/d\") : 0 ;",
      "331:         if (!$page_id) {",
      "332:             $this->sendError(10103,\"\u8bf7\u81f3\u5c11\u5148\u4fdd\u5b58\u4e00\u6b21\u9875\u9762\u5185\u5bb9\");",
      "333:             return;",
      "334:         }",
      "335:         $return = array() ;",
      "336:         $files = D(\"UploadFile\")->where(\"page_id = '$page_id' \")->order(\"addtime desc\")->select();",
      "337:         if ($files) {",
      "338:             $item_id = $files[0]['item_id'] ;",
      "339:             if (!$this->checkItemVisit($login_user['uid'] , $item_id)) {",
      "340:                 $this->sendError(10103);",
      "341:                 return;",
      "342:             }",
      "343:             foreach ($files as $key => $value) {",
      "344:                 $return[] = array(",
      "345:                     \"file_id\"=>$value['file_id'],",
      "346:                     \"display_name\"=>$value['display_name'],",
      "347:                     \"url\"=>$value['real_url'],",
      "348:                     \"addtime\"=> date(\"Y-m-d H:i:s\" , $value['addtime'] ),",
      "349:                     );",
      "350:             }",
      "352:         }",
      "353:         $this->sendResult($return);",
      "359:         $login_user = $this->checkLogin();",
      "360:         $file_id = I(\"file_id/d\") ? I(\"file_id/d\") : 0 ;",
      "362:         $file = D(\"UploadFile\")->where(\"file_id = '$file_id' \")->find();",
      "363:         $item_id = $file['item_id'] ;",
      "364:         if (!$this->checkItemPermn($login_user['uid'] , $item_id)) {",
      "365:             $this->sendError(10103);",
      "366:             return;",
      "367:         }",
      "368:         $ret = D(\"Page\")->deleteFile($file_id);",
      "369:         if ($ret) {",
      "370:             $this->sendResult(array());",
      "371:         }else{",
      "372:             $this->sendError(10101,\"\u5220\u9664\u5931\u8d25\");",
      "373:         }",
      "",
      "[Added Lines]",
      "214:         R(\"Attachment/uploadImg\");",
      "220:         R(\"Attachment/pageAttachmentUpload\");",
      "225:         R(\"Attachment/pageAttachmentUploadList\");",
      "231:         R(\"Attachment/deletePageUploadFile\");",
      "",
      "---------------"
    ],
    "server/Application/Api/Controller/UpdateController.class.php||server/Application/Api/Controller/UpdateController.class.php": [
      "File: server/Application/Api/Controller/UpdateController.class.php -> server/Application/Api/Controller/UpdateController.class.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "274:             )\";",
      "275:         D(\"User\")->execute($sql);",
      "278:         return true ;",
      "279:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "278:         $sql = \"CREATE TABLE IF NOT EXISTS `file_flow` (",
      "279:             `id`  INTEGER PRIMARY KEY ,",
      "280:             `uid` int(11) NOT NULL DEFAULT '0',",
      "281:             `used` int(11) NOT NULL DEFAULT '0',",
      "282:             `date_month` CHAR(2000) NOT NULL DEFAULT ''",
      "283:             )\";",
      "284:         D(\"User\")->execute($sql);",
      "",
      "---------------"
    ],
    "server/Application/Api/Model/AttachmentModel.class.php||server/Application/Api/Model/AttachmentModel.class.php": [
      "File: server/Application/Api/Model/AttachmentModel.class.php -> server/Application/Api/Model/AttachmentModel.class.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <?php",
      "2: namespace Api\\Model;",
      "3: use Api\\Model\\BaseModel;",
      "8: class AttachmentModel extends BaseModel {",
      "10:  Protected $autoCheckFields = false;  //\u4e00\u5b9a\u8981\u5173\u95ed\u5b57\u6bb5\u7f13\u5b58\uff0c\u4e0d\u7136\u4f1a\u62a5\u627e\u4e0d\u5230\u8868\u7684\u9519\u8bef",
      "13:  public function getUserFlow($uid){",
      "14:   $month = Date(\"Y-m\") ;",
      "15:   $file_flow = D(\"FileFlow\")->where(\" uid = '%s'  and date_month = '$month' \" , array($uid))->find() ;",
      "16:   if($file_flow){",
      "17:    return intval($file_flow['used']) ;",
      "18:   }else{",
      "19:    D(\"FileFlow\")->add(array(",
      "20:     \"uid\" => $uid ,",
      "21:     \"used\" => 0  ,",
      "22:     \"date_month\" => $month ,",
      "24:    ));",
      "25:    return 0 ;",
      "26:   }",
      "27:  }",
      "30:  public function recordUserFlow($uid , $file_size){",
      "31:   $month = Date(\"Y-m\") ;",
      "32:   $used = $this->getUserFlow($uid) ;",
      "33:   return D(\"FileFlow\")->where(\" uid = '%s'  and date_month = '$month' \" , array($uid))->save(array(",
      "34:    \"used\" => $used + intval($file_size)",
      "35:   ));",
      "36:  }",
      "38:  public function deleteFile($file_id){",
      "40:   $file = D(\"UploadFile\")->where(\"file_id = '$file_id' \")->find();",
      "41:   $real_url = $file['real_url'] ;",
      "42:   $array = explode(\"/Public/Uploads/\", $real_url) ;",
      "43:   $file_path = \"../Public/Uploads/\".$array[1] ;",
      "44:   if (file_exists($file_path)) {",
      "45:    @unlink($file_path);",
      "46:   }",
      "47:   D(\"UploadFile\")->where(\" file_id = '$file_id' \")->delete();",
      "48:   return true ;",
      "50:  }",
      "52: }",
      "",
      "---------------"
    ],
    "server/Application/Api/Model/PageModel.class.php||server/Application/Api/Model/PageModel.class.php": [
      "File: server/Application/Api/Model/PageModel.class.php -> server/Application/Api/Model/PageModel.class.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "148:    }",
      "150:    public function deleteFile($file_id){",
      "160:     }",
      "162: }",
      "",
      "[Removed Lines]",
      "151:       $file = D(\"UploadFile\")->where(\"file_id = '$file_id' \")->find();",
      "152:       $real_url = $file['real_url'] ;",
      "153:       $array = explode(\"/Public/Uploads/\", $real_url) ;",
      "154:       $file_path = \"../Public/Uploads/\".$array[1] ;",
      "155:       if (file_exists($file_path)) {",
      "156:         unlink($file_path);",
      "157:       }",
      "158:       D(\"UploadFile\")->where(\" file_id = '$file_id' \")->delete();",
      "159:       return true ;",
      "",
      "[Added Lines]",
      "151:         return D(\"Attachment\")->deleteFile($file_id) ;",
      "",
      "---------------"
    ],
    "web_src/src/components/admin/Index.vue||web_src/src/components/admin/Index.vue": [
      "File: web_src/src/components/admin/Index.vue -> web_src/src/components/admin/Index.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "23:               <i class=\"el-icon-tickets\"></i>",
      "24:               <span slot=\"title\">{{$t('item_manage')}}</span>",
      "25:             </el-menu-item>",
      "26:             <el-menu-item index=\"3\">",
      "27:               <i class=\"el-icon-tickets\"></i>",
      "28:               <span slot=\"title\">{{$t('web_setting')}}</span>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "26:             <el-menu-item index=\"5\">",
      "27:               <i class=\"el-icon-tickets\"></i>",
      "28:               <span slot=\"title\">{{$t('attachment_manage')}}</span>",
      "29:             </el-menu-item>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "34:             <User v-if=\"open_menu_index == 1 \"></User>",
      "35:             <Item v-if=\"open_menu_index == 2 \"></Item>",
      "36:             <Setting v-if=\"open_menu_index == 3 \"></Setting>",
      "37:           </el-main>",
      "38:           <el-footer>",
      "39:             <!-- something -->",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "41:             <Attachment v-if=\"open_menu_index == 5 \"></Attachment>",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "113: import Item from '@/components/admin/item/Index'",
      "114: import User from '@/components/admin/user/Index'",
      "115: import Setting from '@/components/admin/setting/Index'",
      "117: export default {",
      "118:   data() {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "121: import Attachment from '@/components/admin/attachment/Index'",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "123:   components: {",
      "124:     Item,",
      "125:     User,",
      "127:   },",
      "128:   methods: {",
      "129:     select_menu(index, indexPath) {",
      "",
      "[Removed Lines]",
      "126:     Setting",
      "",
      "[Added Lines]",
      "132:     Setting,",
      "133:     Attachment",
      "",
      "---------------"
    ],
    "web_src/src/components/admin/attachment/Index.vue||web_src/src/components/admin/attachment/Index.vue": [
      "File: web_src/src/components/admin/attachment/Index.vue -> web_src/src/components/admin/attachment/Index.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <template>",
      "2:   <div class=\"hello\">",
      "3:     <el-form :inline=\"true\" class=\"demo-form-inline\">",
      "4:       <el-form-item label>",
      "5:         <el-input v-model=\"display_name\" :placeholder=\"$t('display_name')\"></el-input>",
      "6:       </el-form-item>",
      "7:       <el-form-item label>",
      "8:         <el-select v-model=\"attachment_type\" placeholder>",
      "9:           <el-option :label=\"$t('all_attachment_type')\" value=\"-1\"></el-option>",
      "10:           <el-option :label=\"$t('image')\" value=\"1\"></el-option>",
      "11:           <el-option :label=\"$t('general_attachment')\" value=\"2\"></el-option>",
      "12:         </el-select>",
      "13:       </el-form-item>",
      "14:       <el-form-item label>",
      "15:         <el-input v-model=\"username\" :placeholder=\"$t('uploader')\"></el-input>",
      "16:       </el-form-item>",
      "17:       <el-form-item>",
      "18:         <el-button @click=\"onSubmit\">{{$t('search')}}</el-button>",
      "19:       </el-form-item>",
      "20:     </el-form>",
      "21:     <P>\u7d2f\u8ba1\u5df2\u4f7f\u7528 {{used}}M \u7a7a\u95f4</P>",
      "22:     <el-table :data=\"dataList\" style=\"width: 100%\">",
      "23:       <el-table-column prop=\"file_id\" :label=\"$t('file_id')\"></el-table-column>",
      "24:       <el-table-column prop=\"display_name\" :label=\"$t('display_name')\"></el-table-column>",
      "25:       <el-table-column prop=\"file_type\" :label=\"$t('file_type')\" width=\"140\"></el-table-column>",
      "26:       <el-table-column prop=\"file_size_m\" :label=\"$t('file_size_m')\" width=\"140\"></el-table-column>",
      "27:       <el-table-column prop=\"visit_times\" :label=\"$t('visit_times')\"></el-table-column>",
      "28:       <el-table-column prop=\"username\" :label=\"$t('uploader')\"></el-table-column>",
      "29:       <el-table-column prop=\"addtime\" :label=\"$t('add_time')\" width=\"160\"></el-table-column>",
      "30:       <el-table-column prop :label=\"operation\">",
      "31:         <template slot-scope=\"scope\">",
      "32:           <el-button @click=\"visit(scope.row)\" type=\"text\" size=\"small\">{{$t('visit')}}</el-button>",
      "33:           <el-button @click=\"delete_row(scope.row)\" type=\"text\" size=\"small\">{{$t('delete')}}</el-button>",
      "34:         </template>",
      "35:       </el-table-column>",
      "36:     </el-table>",
      "38:     <div class=\"block\">",
      "39:       <span class=\"demonstration\"></span>",
      "40:       <el-pagination",
      "41:         @current-change=\"handleCurrentChange\"",
      "42:         :page-size=\"count\"",
      "43:         layout=\"total, prev, pager, next\"",
      "44:         :total=\"total\"",
      "45:       ></el-pagination>",
      "46:     </div>",
      "47:   </div>",
      "48: </template>",
      "50: <style scoped>",
      "51: </style>",
      "53: <script>",
      "54: export default {",
      "55:   data() {",
      "56:     return {",
      "57:       page: 1,",
      "58:       count: 7,",
      "59:       display_name: '',",
      "60:       username: '',",
      "61:       dataList: [],",
      "62:       total: 0,",
      "63:       positive_type: '1',",
      "64:       attachment_type: '-1',",
      "65:       used: 0",
      "66:     }",
      "67:   },",
      "68:   methods: {",
      "69:     getList() {",
      "70:       this.request('/api/attachment/getAllList', {",
      "71:         page: this.page,",
      "72:         count: this.count,",
      "73:         attachment_type: this.attachment_type,",
      "74:         display_name: this.display_name,",
      "75:         username: this.username",
      "76:       }).then(data => {",
      "77:         var json = data.data",
      "78:         this.dataList = json.list",
      "79:         this.total = parseInt(json.total)",
      "80:         this.used = json.used_m",
      "81:       })",
      "82:     },",
      "84:     jump_to_item(row) {",
      "85:       let url = '/' + row.item_id",
      "86:       window.open(url)",
      "87:     },",
      "88:     handleCurrentChange(currentPage) {",
      "89:       this.page = currentPage",
      "90:       this.getList()",
      "91:     },",
      "92:     onSubmit() {",
      "93:       this.page = 1",
      "94:       this.getList()",
      "95:     },",
      "96:     visit(row) {",
      "97:       window.open(row.url)",
      "98:     },",
      "99:     delete_row(row) {",
      "100:       this.$confirm(this.$t('confirm_delete'), ' ', {",
      "101:         confirmButtonText: this.$t('confirm'),",
      "102:         cancelButtonText: this.$t('cancel'),",
      "103:         type: 'warning'",
      "104:       }).then(() => {",
      "105:         this.request('/api/attachment/deleteAttachment', {",
      "106:           file_id: row.file_id",
      "107:         }).then(data => {",
      "108:           this.$message.success(this.$t('op_success'))",
      "109:           this.getList()",
      "110:         })",
      "111:       })",
      "112:     }",
      "113:   },",
      "114:   mounted() {",
      "115:     this.getList()",
      "116:   },",
      "117:   beforeDestroy() {",
      "118:     this.$message.closeAll()",
      "119:   }",
      "120: }",
      "121: </script>",
      "",
      "---------------"
    ],
    "web_src/src/components/attachment/Index.vue||web_src/src/components/attachment/Index.vue": [
      "File: web_src/src/components/attachment/Index.vue -> web_src/src/components/attachment/Index.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <template>",
      "2:   <div class=\"hello\">",
      "3:     <Header></Header>",
      "5:     <el-container>",
      "6:       <el-card class=\"hor-center-card\">",
      "7:         <el-button type=\"text\" @click=\"goback\" class=\"goback-btn\">",
      "8:           <i class=\"el-icon-back\"></i>",
      "9:         </el-button>",
      "10:         <el-form :inline=\"true\" class=\"demo-form-inline\">",
      "11:           <el-form-item label>",
      "12:             <el-input v-model=\"display_name\" :placeholder=\"$t('display_name')\"></el-input>",
      "13:           </el-form-item>",
      "14:           <el-form-item label>",
      "15:             <el-select v-model=\"attachment_type\" placeholder>",
      "16:               <el-option :label=\"$t('all_attachment_type')\" value=\"-1\"></el-option>",
      "17:               <el-option :label=\"$t('image')\" value=\"1\"></el-option>",
      "18:               <el-option :label=\"$t('general_attachment')\" value=\"2\"></el-option>",
      "19:             </el-select>",
      "20:           </el-form-item>",
      "21:           <el-form-item>",
      "22:             <el-button @click=\"onSubmit\">{{$t('search')}}</el-button>",
      "23:           </el-form-item>",
      "24:         </el-form>",
      "25:         <P>{{$t('accumulated_used_sapce')}} {{used}}M , {{$t('month_flow')}} {{used_flow}}M</P>",
      "26:         <el-table :data=\"dataList\" style=\"width: 100%\">",
      "27:           <el-table-column prop=\"file_id\" :label=\"$t('file_id')\"></el-table-column>",
      "28:           <el-table-column prop=\"display_name\" :label=\"$t('display_name')\"></el-table-column>",
      "29:           <el-table-column prop=\"file_type\" :label=\"$t('file_type')\" width=\"160\"></el-table-column>",
      "30:           <el-table-column prop=\"file_size_m\" :label=\"$t('file_size_m')\" width=\"160\"></el-table-column>",
      "31:           <el-table-column prop=\"visit_times\" :label=\"$t('visit_times')\"></el-table-column>",
      "32:           <el-table-column prop=\"addtime\" :label=\"$t('add_time')\" width=\"160\"></el-table-column>",
      "33:           <el-table-column prop :label=\"operation\">",
      "34:             <template slot-scope=\"scope\">",
      "35:               <el-button @click=\"visit(scope.row)\" type=\"text\" size=\"small\">{{$t('visit')}}</el-button>",
      "36:               <el-button @click=\"delete_row(scope.row)\" type=\"text\" size=\"small\">{{$t('delete')}}</el-button>",
      "37:             </template>",
      "38:           </el-table-column>",
      "39:         </el-table>",
      "41:         <div class=\"block\">",
      "42:           <span class=\"demonstration\"></span>",
      "43:           <el-pagination",
      "44:             @current-change=\"handleCurrentChange\"",
      "45:             :page-size=\"count\"",
      "46:             layout=\"total, prev, pager, next\"",
      "47:             :total=\"total\"",
      "48:           ></el-pagination>",
      "49:         </div>",
      "50:       </el-card>",
      "51:     </el-container>",
      "53:     <Footer></Footer>",
      "54:   </div>",
      "55: </template>",
      "57: <script>",
      "58: export default {",
      "59:   name: '',",
      "60:   components: {},",
      "61:   data() {",
      "62:     return {",
      "63:       page: 1,",
      "64:       count: 6,",
      "65:       display_name: '',",
      "66:       username: '',",
      "67:       dataList: [],",
      "68:       total: 0,",
      "69:       positive_type: '1',",
      "70:       attachment_type: '-1',",
      "71:       used: 0,",
      "72:       used_flow: 0",
      "73:     }",
      "74:   },",
      "75:   methods: {",
      "76:     getList() {",
      "77:       this.request('/api/attachment/getMyList', {",
      "78:         page: this.page,",
      "79:         count: this.count,",
      "80:         attachment_type: this.attachment_type,",
      "81:         display_name: this.display_name,",
      "82:         username: this.username",
      "83:       }).then(data => {",
      "84:         var json = data.data",
      "85:         this.dataList = json.list",
      "86:         this.total = parseInt(json.total)",
      "87:         this.used = json.used_m",
      "88:         this.used_flow = json.used_flow_m",
      "89:       })",
      "90:     },",
      "92:     jump_to_item(row) {",
      "93:       let url = '/' + row.item_id",
      "94:       window.open(url)",
      "95:     },",
      "96:     handleCurrentChange(currentPage) {",
      "97:       this.page = currentPage",
      "98:       this.getList()",
      "99:     },",
      "100:     onSubmit() {",
      "101:       this.page = 1",
      "102:       this.getList()",
      "103:     },",
      "104:     visit(row) {",
      "105:       window.open(row.url)",
      "106:     },",
      "107:     delete_row(row) {",
      "108:       this.$confirm(this.$t('confirm_delete'), ' ', {",
      "109:         confirmButtonText: this.$t('confirm'),",
      "110:         cancelButtonText: this.$t('cancel'),",
      "111:         type: 'warning'",
      "112:       }).then(() => {",
      "113:         this.request('/api/attachment/deleteMyAttachment', {",
      "114:           file_id: row.file_id",
      "115:         }).then(data => {",
      "116:           this.$message.success(this.$t('op_success'))",
      "117:           this.getList()",
      "118:         })",
      "119:       })",
      "120:     },",
      "121:     goback() {",
      "122:       this.$router.push({ path: '/item/index' })",
      "123:     }",
      "124:   },",
      "126:   mounted() {",
      "127:     this.getList()",
      "128:   },",
      "129:   beforeDestroy() {}",
      "130: }",
      "131: </script>",
      "133: <!-- Add \"scoped\" attribute to limit CSS to this component only -->",
      "134: <style scoped>",
      "135: .hor-center-card a {",
      "136:   font-size: 12px;",
      "137: }",
      "139: .hor-center-card {",
      "140:   width: 1000px;",
      "141: }",
      "143: .goback-btn {",
      "144:   font-size: 18px;",
      "145:   margin-right: 800px;",
      "146:   margin-bottom: 5px;",
      "147: }",
      "149: </style>",
      "",
      "---------------"
    ],
    "web_src/src/components/item/Index.vue||web_src/src/components/item/Index.vue": [
      "File: web_src/src/components/item/Index.vue -> web_src/src/components/item/Index.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "66:                 <el-dropdown-item>",
      "67:                   <router-link to=\"/user/setting\">{{$t(\"Logged\")}}:{{username}}</router-link>",
      "68:                 </el-dropdown-item>",
      "69:                 <el-dropdown-item :command=\"logout\">{{$t(\"logout\")}}</el-dropdown-item>",
      "70:               </el-dropdown-menu>",
      "71:             </el-dropdown>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "69:                 <el-dropdown-item>",
      "70:                   <router-link to=\"/attachment/index\">{{$t(\"my_attachment\")}}</router-link>",
      "71:                 </el-dropdown-item>",
      "",
      "---------------"
    ],
    "web_src/src/router/index.js||web_src/src/router/index.js": [
      "File: web_src/src/router/index.js -> web_src/src/router/index.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "21: import Team from '@/components/team/Index'",
      "22: import TeamMember from '@/components/team/Member'",
      "23: import TeamItem from '@/components/team/Item'",
      "25: Vue.use(Router)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "24: import Attachment from '@/components/attachment/Index'",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "135:       path: '/team/item/:team_id',",
      "136:       name: 'TeamItem',",
      "137:       component: TeamItem",
      "138:     }",
      "139:   ]",
      "140: })",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "139:     },",
      "140:     {",
      "141:       path: '/attachment/index',",
      "142:       name: 'Attachment',",
      "143:       component: Attachment",
      "",
      "---------------"
    ],
    "web_src/static/css/common.css||web_src/static/css/common.css": [
      "File: web_src/static/css/common.css -> web_src/static/css/common.css",
      "--- Hunk 1 ---",
      "[Context before]",
      "27:   box-sizing: border-box;",
      "28: }",
      "30: .pull-right {",
      "31:   float: right;",
      "32: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31: .hor-center-card {",
      "32:   width: 700px;",
      "33:   margin: 20px auto;",
      "34:   padding-top: 0px;",
      "35:   padding-left: 15px;",
      "36:   padding-right: 15px;",
      "37:   padding-bottom: 0px;",
      "38:   box-sizing: border-box;",
      "39: }",
      "",
      "---------------"
    ],
    "web_src/static/lang/en.js||web_src/static/lang/en.js": [
      "File: web_src/static/lang/en.js -> web_src/static/lang/en.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "373:   update_pwd_tips: 'Password, leave blank if not changed',",
      "375:   import_excel: 'You can choose to import excel file',",
      "377: }",
      "",
      "[Removed Lines]",
      "376:   table: 'table'",
      "",
      "[Added Lines]",
      "376:   table: 'table',",
      "378:   attachment_manage: 'Attachment',",
      "379:   op_success: 'success',",
      "380:   display_name: 'display name',",
      "381:   all_attachment_type: 'all type',",
      "382:   image: 'image',",
      "383:   general_attachment: 'general attachment',",
      "384:   uploader: 'uploader',",
      "385:   file_id: 'file id',",
      "386:   file_type: 'type',",
      "387:   file_size_m: 'size/mb',",
      "388:   visit: 'visit',",
      "389:   visit_times: 'visit times',",
      "390:   my_attachment: 'My attachment',",
      "391:   accumulated_used_sapce: 'Accumulated used space',",
      "392:   month_flow: 'Traffic has been used this month'",
      "",
      "---------------"
    ],
    "web_src/static/lang/zh-CN.js||web_src/static/lang/zh-CN.js": [
      "File: web_src/static/lang/zh-CN.js -> web_src/static/lang/zh-CN.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "364:   update_pwd_tips: '\u5bc6\u7801\uff0c\u4e0d\u4fee\u6539\u5219\u7559\u7a7a',",
      "366:   import_excel: '\u4f60\u53ef\u4ee5\u9009\u62e9Excel\u6587\u4ef6\u5bfc\u5165',",
      "368: }",
      "",
      "[Removed Lines]",
      "367:   table: '\u8868\u683c'",
      "",
      "[Added Lines]",
      "367:   table: '\u8868\u683c',",
      "369:   attachment_manage: '\u9644\u4ef6\u7ba1\u7406',",
      "370:   op_success: '\u64cd\u4f5c\u6210\u529f',",
      "371:   display_name: '\u5c55\u793a\u540d\u5b57',",
      "372:   all_attachment_type: '\u5168\u90e8\u9644\u4ef6\u7c7b\u578b',",
      "373:   image: '\u56fe\u7247',",
      "374:   general_attachment: '\u666e\u901a\u9644\u4ef6',",
      "375:   uploader: '\u4e0a\u4f20\u8005',",
      "376:   file_id: '\u6587\u4ef6id',",
      "377:   file_type: '\u6587\u4ef6\u7c7b\u578b',",
      "378:   file_size_m: '\u6587\u4ef6\u5927\u5c0f/mb',",
      "379:   visit: '\u67e5\u770b',",
      "380:   visit_times: '\u8bbf\u95ee\u6b21\u6570',",
      "381:   my_attachment: '\u6211\u7684\u9644\u4ef6',",
      "382:   accumulated_used_sapce: '\u7d2f\u8ba1\u5df2\u4f7f\u7528\u7a7a\u95f4',",
      "383:   month_flow: '\u672c\u6708\u5df2\u4f7f\u7528\u6d41\u91cf'",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "730690bee29db7728864fd87d1f93a1f661dfd5a",
      "candidate_info": {
        "commit_hash": "730690bee29db7728864fd87d1f93a1f661dfd5a",
        "repo": "star7th/showdoc",
        "commit_url": "https://github.com/star7th/showdoc/commit/730690bee29db7728864fd87d1f93a1f661dfd5a",
        "files": [
          "server/Application/Api/Controller/TeamController.class.php",
          "web_src/src/components/team/Index.vue",
          "web_src/static/lang/en.js",
          "web_src/static/lang/zh-CN.js"
        ],
        "message": "Transfer team \u8f6c\u8ba9\u56e2\u961f",
        "before_after_code_files": [
          "server/Application/Api/Controller/TeamController.class.php||server/Application/Api/Controller/TeamController.class.php",
          "web_src/src/components/team/Index.vue||web_src/src/components/team/Index.vue",
          "web_src/static/lang/en.js||web_src/static/lang/en.js",
          "web_src/static/lang/zh-CN.js||web_src/static/lang/zh-CN.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "web_src/static/lang/en.js||web_src/static/lang/en.js",
            "web_src/static/lang/zh-CN.js||web_src/static/lang/zh-CN.js"
          ],
          "candidate": [
            "web_src/static/lang/en.js||web_src/static/lang/en.js",
            "web_src/static/lang/zh-CN.js||web_src/static/lang/zh-CN.js"
          ]
        }
      },
      "candidate_diff": {
        "server/Application/Api/Controller/TeamController.class.php||server/Application/Api/Controller/TeamController.class.php": [
          "File: server/Application/Api/Controller/TeamController.class.php -> server/Application/Api/Controller/TeamController.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:         }",
          "78:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "81:     public function attorn(){",
          "82:         $login_user = $this->checkLogin();",
          "84:         $username = I(\"username\");",
          "85:         $team_id = I(\"team_id/d\");",
          "86:         $password = I(\"password\");",
          "88:         $team  = D(\"Team\")->where(\"id = '$team_id' and uid = '$login_user[uid]' \")->find();",
          "90:         if (!$team) {",
          "91:             $this->sendError(10101);",
          "92:             return ;",
          "93:         }",
          "95:         if(! D(\"User\")-> checkLogin($login_user['username'],$password)){",
          "96:             $this->sendError(10208);",
          "97:             return ;",
          "98:         }",
          "100:         $member = D(\"User\")->where(\" username = '%s' \",array($username))->find();",
          "102:         if (!$member) {",
          "103:             $this->sendError(10209);",
          "104:             return ;",
          "105:         }",
          "106:         $data = array() ;",
          "107:         $data['username'] = $member['username'] ;",
          "108:         $data['uid'] = $member['uid'] ;",
          "109:         D(\"Team\")->where(\" id = '$team_id' \")->save($data);",
          "112:         $items = D(\"TeamItem\")->where(\" team_id = '$team_id' \")->select() ;",
          "113:         foreach ($items as $key => $value) {",
          "114:             D(\"Item\")->where(\" item_id = '$value[item_id]' \")->save($data);",
          "115:         }",
          "117:         $this->sendResult($return);",
          "118:     }",
          "",
          "---------------"
        ],
        "web_src/src/components/team/Index.vue||web_src/src/components/team/Index.vue": [
          "File: web_src/src/components/team/Index.vue -> web_src/src/components/team/Index.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:                 <el-button @click=\"$router.push({path:'/team/member/'+scope.row.id})\" type=\"text\" size=\"small\">{{$t('member')}}</el-button>",
          "40:                 <el-button @click=\"$router.push({path:'/team/item/'+scope.row.id})\"  type=\"text\" size=\"small\">{{$t('team_item')}}</el-button>",
          "41:                 <el-button @click=\"edit(scope.row)\" type=\"text\" size=\"small\">{{$t('edit')}}</el-button>",
          "42:                 <el-button @click=\"deleteTeam(scope.row.id)\" type=\"text\" size=\"small\">{{$t('delete')}}</el-button>",
          "43:               </template>",
          "44:             </el-table-column>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42:                 <br>",
          "43:                 <el-button @click=\"attornDialog(scope.row)\" type=\"text\" size=\"small\">{{$t('attorn')}}</el-button>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58:                 <el-button type=\"primary\" @click=\"MyFormSubmit\" >{{$t('confirm')}}</el-button>",
          "59:               </div>",
          "60:             </el-dialog>",
          "61:     </el-container>",
          "63:     <Footer> </Footer>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:             <el-dialog :visible.sync=\"dialogAttornVisible\" :modal=\"false\" width=\"300px\" :close-on-click-modal=\"false\" >",
          "66:               <el-form >",
          "67:                   <el-form-item label=\"\" >",
          "68:                     <el-input  :placeholder=\"$t('attorn_username')\" auto-complete=\"new-password\" v-model=\"attornForm.username\"></el-input>",
          "69:                   </el-form-item>",
          "70:                   <el-form-item label=\"\" >",
          "71:                     <el-input type=\"password\" auto-complete=\"new-password\" :placeholder=\"$t('input_login_password')\"  v-model=\"attornForm.password\" ></el-input>",
          "72:                   </el-form-item>",
          "73:               </el-form>",
          "74:              <p class=\"tips\">",
          "75:                 {{$t('attornTeamTips')}}",
          "76:             </p>",
          "77:               <div slot=\"footer\" class=\"dialog-footer\">",
          "78:                 <el-button @click=\"dialogAttornVisible = false\">{{$t('cancel')}}</el-button>",
          "79:                 <el-button type=\"primary\" @click=\"attorn\" >{{$t('attorn')}}</el-button>",
          "80:               </div>",
          "81:             </el-dialog>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "79:       list:[],",
          "80:       dialogFormVisible:false,",
          "81:       dialogMemberVisible:false,",
          "82:     }",
          "83:   },",
          "84:   methods: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "105:       dialogAttornVisible:false,",
          "106:       attornForm :{",
          "107:         team_id:'',",
          "108:         username:'',",
          "109:         password:''",
          "110:       }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "161:       },",
          "162:       goback(){",
          "163:         this.$router.push({path:\"/item/index\"})",
          "164:       }",
          "165:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "193:       },",
          "194:       attornDialog(row){",
          "195:         this.attornForm.team_id = row.id;",
          "196:         this.dialogAttornVisible = true ;",
          "197:       },",
          "198:       attorn(){",
          "199:         var that = this ;",
          "200:         var url = DocConfig.server+'/api/team/attorn';",
          "202:         var params = new URLSearchParams();",
          "203:         params.append('team_id',  this.attornForm.team_id);",
          "204:         params.append('username', this.attornForm.username);",
          "205:         params.append('password',this.attornForm.password );",
          "207:         that.axios.post(url, params)",
          "208:           .then(function (response) {",
          "209:             if (response.data.error_code === 0 ) {",
          "210:               that.dialogAttornVisible = false;",
          "211:               that.geList();",
          "212:             }else{",
          "213:               that.$alert(response.data.error_message);",
          "214:             }",
          "216:           });",
          "",
          "---------------"
        ],
        "web_src/static/lang/en.js||web_src/static/lang/en.js": [
          "File: web_src/static/lang/en.js -> web_src/static/lang/en.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "93:     'open_api' : 'open api',",
          "94:     'info_item_domain':\"Personal domain name\",",
          "95:     'visit_password':\"Password\",",
          "97:     \"add_member\" :\"Add member\",",
          "98:     \"authority\" :\"Authority\",",
          "99:     \"add_time\" :\"Add time\",",
          "",
          "[Removed Lines]",
          "96:     'visit_password_description':\"(Optional: private project required)\",",
          "",
          "[Added Lines]",
          "96:     'visit_password_description':\"(Optional: private item required)\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "107:     \"confirm_delete\" :\"Confirm to delete\",",
          "108:     \"attorn\" :\"Attorn\",",
          "109:     \"archive\" :\"Archive\",",
          "111:     \"attorn_tips\":\"You can attorn item(s) to other user(s)\",",
          "113:     \"delete_tips\":\"After deleting it, it can not be restored!\",",
          "115:     \"archive_tips2\":\"Note: After archiving a project, the project will no longer be able to add and modify content and will not be able to unarchive. If you want to modify the content again, you can copy the project and modify it on the basis of the new project. The way to copy a project is to choose to copy from an existing project when you create the project.\",",
          "116:     \"success_jump\" :\"The operation is successful! Skipping...\",",
          "117:     \"reset_token\":\"Reset token\",",
          "",
          "[Removed Lines]",
          "110:     \"attorn\" :\"Attorn\",",
          "112:     \"archive_tips\":\"After archiving, the project will become read-only, and no more changes / additions can be made. If you want to edit it again, copy it to the new project and then edit it\",",
          "114:     \"attorn_username\" :\"Username of project receiver\",",
          "",
          "[Added Lines]",
          "111:     \"archive_tips\":\"After archiving, the item will become read-only, and no more changes / additions can be made. If you want to edit it again, copy it to the new project and then edit it\",",
          "113:     \"attorn_username\" :\"Username of receiver\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "329:     \"qiniu\":\"qiniu\",",
          "330:     \"oss_domain\":\"domain(optional)\",",
          "332: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "331:     \"attornTeamTips\":\"All items owned by the team will also be transferred to he/her\",",
          "",
          "---------------"
        ],
        "web_src/static/lang/zh-CN.js||web_src/static/lang/zh-CN.js": [
          "File: web_src/static/lang/zh-CN.js -> web_src/static/lang/zh-CN.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "110:     \"confirm_delete\" :\"\u786e\u8ba4\u5220\u9664\u5417\uff1f\",",
          "111:     \"attorn\" :\"\u8f6c\u8ba9\",",
          "112:     \"archive\" :\"\u5f52\u6863\",",
          "114:     \"attorn_tips\":\"\u4f60\u53ef\u4ee5\u5c06\u9879\u76ee\u8f6c\u8ba9\u7ed9\u4ed6\u4eba\",",
          "115:     \"archive_tips\":\"\u5f52\u6863\u540e\uff0c\u9879\u76ee\u5c06\u53d8\u4e3a\u53ea\u8bfb\uff0c\u65e0\u6cd5\u518d\u4fee\u6539/\u65b0\u589e\u5185\u5bb9\u3002\u5982\u679c\u8981\u91cd\u65b0\u7f16\u8f91\uff0c\u8bf7\u590d\u5236\u5230\u65b0\u9879\u76ee\u540e\u7f16\u8f91\",",
          "116:     \"delete_tips\":\"\u5220\u9664\u540e\u5c06\u4e0d\u53ef\u6062\u590d\uff01\",",
          "118:     \"archive_tips2\":\"\u8bf4\u660e\uff1a \u5f52\u6863\u9879\u76ee\u540e\uff0c\u9879\u76ee\u5c06\u65e0\u6cd5\u518d\u65b0\u589e\u548c\u4fee\u6539\u5185\u5bb9\uff0c\u5e76\u4e14\u65e0\u6cd5\u53d6\u6d88\u5f52\u6863\u72b6\u6001\u3002 \u5982\u60f3\u518d\u6b21\u4fee\u6539\u5185\u5bb9\uff0c\u53ef\u590d\u5236\u672c\u9879\u76ee\uff0c\u5728\u65b0\u7684\u9879\u76ee\u57fa\u7840\u4e0a\u4fee\u6539\u3002\u590d\u5236\u9879\u76ee\u7684\u65b9\u6cd5\u662f\uff0c\u5728\u521b\u5efa\u9879\u76ee\u7684\u65f6\u5019\uff0c\u9009\u62e9\u4ece\u5df2\u6709\u9879\u76ee\u91cc\u590d\u5236\u3002\",",
          "119:     \"success_jump\" :\"\u64cd\u4f5c\u6210\u529f\uff01\u6b63\u5728\u8df3\u8f6c...\",",
          "120:     \"reset_token\":\"\u91cd\u65b0\u751f\u6210api_token\",",
          "",
          "[Removed Lines]",
          "113:     \"attorn\" :\"\u8f6c\u8ba9\",",
          "117:     \"attorn_username\" :\"\u9879\u76ee\u63a5\u53d7\u8005\u7528\u6237\u540d\",",
          "",
          "[Added Lines]",
          "116:     \"attorn_username\" :\"\u63a5\u53d7\u8005\u7528\u6237\u540d\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "337:     \"qiniu\":\"\u4e03\u725b\u4e91\",",
          "338:     \"oss_domain\":\"oss\u7ed1\u5b9a\u57df\u540d(\u9009\u586b)\",",
          "341: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "339:     \"attornTeamTips\":\"\u8f6c\u8ba9\u56e2\u961f\u540e\uff0c\u8be5\u56e2\u961f\u4e0b\u62e5\u6709\u7684\u6240\u6709\u9879\u76ee\u4e5f\u4f1a\u4e00\u5e76\u8f6c\u8ba9\u7ed9\u5bf9\u65b9\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "53700cdf9b7a22e2500b2ca013d1158c26b0c31c",
      "candidate_info": {
        "commit_hash": "53700cdf9b7a22e2500b2ca013d1158c26b0c31c",
        "repo": "star7th/showdoc",
        "commit_url": "https://github.com/star7th/showdoc/commit/53700cdf9b7a22e2500b2ca013d1158c26b0c31c",
        "files": [
          "server/Application/Api/Controller/CatalogController.class.php",
          "server/Application/Api/Model/CatalogModel.class.php",
          "server/Application/Api/Model/ItemModel.class.php",
          "web_src/src/components/catalog/Copy.vue",
          "web_src/src/components/catalog/Index.vue",
          "web_src/src/components/item/show/show_regular_item/OpBar.vue",
          "web_src/static/lang/en.js",
          "web_src/static/lang/zh-CN.js"
        ],
        "message": "Copy / move pages and directories across items \u8de8\u9879\u76ee\u590d\u5236/\u79fb\u52a8\u9875\u9762\u548c\u76ee\u5f55",
        "before_after_code_files": [
          "server/Application/Api/Controller/CatalogController.class.php||server/Application/Api/Controller/CatalogController.class.php",
          "server/Application/Api/Model/CatalogModel.class.php||server/Application/Api/Model/CatalogModel.class.php",
          "server/Application/Api/Model/ItemModel.class.php||server/Application/Api/Model/ItemModel.class.php",
          "web_src/src/components/catalog/Copy.vue||web_src/src/components/catalog/Copy.vue",
          "web_src/src/components/catalog/Index.vue||web_src/src/components/catalog/Index.vue",
          "web_src/src/components/item/show/show_regular_item/OpBar.vue||web_src/src/components/item/show/show_regular_item/OpBar.vue",
          "web_src/static/lang/en.js||web_src/static/lang/en.js",
          "web_src/static/lang/zh-CN.js||web_src/static/lang/zh-CN.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "web_src/static/lang/en.js||web_src/static/lang/en.js",
            "web_src/static/lang/zh-CN.js||web_src/static/lang/zh-CN.js"
          ],
          "candidate": [
            "web_src/static/lang/en.js||web_src/static/lang/en.js",
            "web_src/static/lang/zh-CN.js||web_src/static/lang/zh-CN.js"
          ]
        }
      },
      "candidate_diff": {
        "server/Application/Api/Controller/CatalogController.class.php||server/Application/Api/Controller/CatalogController.class.php": [
          "File: server/Application/Api/Controller/CatalogController.class.php -> server/Application/Api/Controller/CatalogController.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:            $this->sendResult(array());",
          "41:         }",
          "42:     }",
          "45:     public function secondCatList(){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46:      public function catListName(){",
          "47:         $login_user = $this->checkLogin();",
          "48:         $item_id = I(\"item_id/d\");",
          "49:         if (!$this->checkItemVisit($login_user['uid'] , $item_id)) {",
          "50:             $this->sendError(10103);",
          "51:             return ;",
          "52:         }",
          "53:         if ($item_id > 0 ) {",
          "54:             $ret = D(\"Catalog\")->getList($item_id,true);",
          "55:             $ret = D(\"Catalog\")->filteMemberCat($login_user['uid'] , $ret);",
          "56:         }",
          "57:         if ($ret) {",
          "58:             $return = array() ;",
          "62:             $rename = function ($catalog, $p_cat_name) use (&$return , &$rename) {",
          "63:                if($catalog){",
          "64:                     foreach ($catalog as $key => $value) {",
          "65:                         $value['cat_name'] = $p_cat_name .'/'. $value['cat_name'] ;",
          "66:                         $sub = $value['sub'] ;",
          "67:                         unset($value['sub']);",
          "68:                         $return[] = $value ;",
          "69:                         if($sub){",
          "70:                             $rename($sub , $value['cat_name'] ) ;",
          "71:                         }",
          "72:                     }",
          "73:                }",
          "74:             };",
          "76:             foreach ($ret as $key => $value) {",
          "77:                 $sub = $value['sub'] ;",
          "78:                 unset($value['sub']);",
          "79:                 $return[] = $value ;",
          "80:                 if($sub){",
          "81:                     $rename($sub , $value['cat_name'] ) ;",
          "82:                 }",
          "84:             }",
          "85:             $this->sendResult($return);",
          "86:         }else{",
          "87:            $this->sendResult(array());",
          "88:         }",
          "89:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "264:     }",
          "266: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "315:     public function copy(){",
          "318:         $cat_id = I(\"cat_id/d\");",
          "319:         $new_p_cat_id = I(\"new_p_cat_id/d\") ? I(\"new_p_cat_id/d\") : 0;",
          "320:         $to_item_id = I(\"to_item_id/d\") ? I(\"to_item_id/d\") : 0 ;",
          "321:         $is_del = I(\"is_del/d\") ? I(\"is_del/d\") : 0 ; // \u590d\u5236\u5b8c\u662f\u5426\u5220\u9664\u539f\u76ee\u5f55\uff08\u76f8\u5f53\u4e8e\u79fb\u52a8\u76ee\u5f55\uff09",
          "322:         $login_user = $this->checkLogin();",
          "323:         if (!$this->checkItemPermn($login_user['uid'] , $to_item_id)) {",
          "324:             $this->sendError(10103);",
          "325:             return ;",
          "326:         }",
          "327:         $old_cat_ary = D(\"Catalog\")->where(\"cat_id = '$cat_id' \")->find() ;",
          "328:         if (!$this->checkItemPermn($login_user['uid'] , $old_cat_ary['item_id'])) {",
          "329:             $this->sendError(10103);",
          "330:             return ;",
          "331:         }",
          "332:         $res = D(\"Catalog\")->copy($login_user['uid'] , $cat_id ,$new_p_cat_id , $to_item_id  );",
          "333:         if($is_del && $res){",
          "334:             D(\"Catalog\")->deleteCat($cat_id) ;",
          "335:         }",
          "336:         $this->sendResult($res);",
          "337:     }",
          "",
          "---------------"
        ],
        "server/Application/Api/Model/CatalogModel.class.php||server/Application/Api/Model/CatalogModel.class.php": [
          "File: server/Application/Api/Model/CatalogModel.class.php -> server/Application/Api/Model/CatalogModel.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "166:   return $catData ;",
          "167:  }",
          "170: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "173:  public function copy($uid , $old_cat_id , $new_p_cat_id = 0 , $to_item_id = 0 ){",
          "174:   $userInfo = D(\"User\")->userInfo($uid);",
          "175:   $old_cat_ary = $this->where(\"cat_id = '$old_cat_id' \")->find() ;",
          "176:   $to_item_id = $to_item_id ? $to_item_id : $cat_ary['item_id'] ;",
          "179:   $old_cat_data = $this->getCat($old_cat_id) ;",
          "180:   $catalogs[] =$old_cat_data ;",
          "182:   $level = 2 ;",
          "183:   if($new_p_cat_id){",
          "184:    $p_cat_ary = $this->where(\"cat_id = '$new_p_cat_id' \")->find() ;",
          "185:    $level = $p_cat_ary['level'] + 1 ;",
          "186:   }",
          "188:   $res =  $this->insertCat($to_item_id , $catalogs , $userInfo , $new_p_cat_id ,  $level ) ;",
          "189:   return $res ;",
          "190:  }",
          "193:  public function getCat($cat_id){",
          "194:    $cat_ary = $this->where(\"cat_id = '$cat_id' \")->find() ;",
          "195:    $item_id = $cat_ary['item_id'] ;",
          "197:    $all_pages = D(\"Page\")->where(\"item_id = '$item_id' and is_del = 0 \")->order(\" s_number asc , page_id asc \")->field($page_field)->select();",
          "199:    $all_catalogs = $this->where(\" item_id = '%d' \",array($item_id) )->order(\" s_number, cat_id asc  \")->select();",
          "201:    return D(\"Item\")->getCat($cat_ary , $all_pages , $all_catalogs) ;",
          "202:   }",
          "205:  public function insertCat($item_id , $catalogs , $userInfo , $parent_cat_id = 0  ,  $level = 2 ){",
          "206:    return D(\"Item\")->insertCat($item_id , $catalogs , $userInfo , $parent_cat_id  ,  $level );",
          "207:   }",
          "",
          "---------------"
        ],
        "server/Application/Api/Model/ItemModel.class.php||server/Application/Api/Model/ItemModel.class.php": [
          "File: server/Application/Api/Model/ItemModel.class.php -> server/Application/Api/Model/ItemModel.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:         if (!$catalogs) {",
          "90:             return ;",
          "91:         }",
          "92:         foreach ($catalogs as $key => $value) {",
          "93:             $catalog_data = array(",
          "94:                 \"cat_name\" => $this->_htmlspecialchars($value['cat_name']) ,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "92:         $cat_id = 0 ;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "126:                 $this->_insertCat($item_id , $value['catalogs'] , $userInfo , $cat_id,  $level + 1  ) ;",
          "127:             }",
          "128:         }",
          "130:     }",
          "132:     public function copy($item_id,$uid,$item_name= '',$item_description= '',$item_password = '',$item_domain=''){",
          "133:         return $this->import($this->export($item_id),$uid,$item_name,$item_description,$item_password,$item_domain);",
          "134:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "130:         return $cat_id ;",
          "134:     public function insertCat($item_id , $catalogs , $userInfo , $parent_cat_id = 0  ,  $level = 2 ){",
          "135:   return $this->_insertCat($item_id , $catalogs , $userInfo , $parent_cat_id  ,  $level );",
          "136:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "211:         return $pages;",
          "212:     }",
          "215:     private function _getCatByCatId($cat_id ,$all_catalogs){",
          "216:         $cats = array() ;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "221:     public function getCat($catalog_data ,  & $all_pages , & $all_catalogs){",
          "222:         return $this->_getCat($catalog_data ,  $all_pages , $all_catalogs) ;",
          "223:     }",
          "",
          "---------------"
        ],
        "web_src/src/components/catalog/Copy.vue||web_src/src/components/catalog/Copy.vue": [
          "File: web_src/src/components/catalog/Copy.vue -> web_src/src/components/catalog/Copy.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <template>",
          "2:   <el-dialog :visible=\"true\" :close-on-click-modal=\"false\" width=\"350px\">",
          "3:     <el-form>",
          "4:       <el-form-item label class=\"text-left\">",
          "5:         <el-select",
          "6:           style=\"width:100%;\"",
          "7:           v-model=\"is_del\"",
          "8:           :placeholder=\"$t('please_choose')\"",
          "9:           @change=\"selectItem\"",
          "10:         >",
          "11:           <el-option key=\"0\" :label=\"$t('copy_to')\" value=\"0\"></el-option>",
          "12:           <el-option key=\"1\" :label=\"$t('move_to')\" value=\"1\"></el-option>",
          "13:         </el-select>",
          "14:       </el-form-item>",
          "15:       <el-form-item label class=\"text-left\">",
          "16:         <el-select",
          "17:           style=\"width:100%;\"",
          "18:           v-model=\"to_item_id\"",
          "19:           :placeholder=\"$t('please_choose')\"",
          "20:           @change=\"selectItem\"",
          "21:         >",
          "22:           <el-option",
          "23:             v-for=\"item in itemList\"",
          "24:             :key=\"item.item_id\"",
          "25:             :label=\"item.item_name\"",
          "26:             :value=\"item.item_id\"",
          "27:           ></el-option>",
          "28:         </el-select>",
          "29:       </el-form-item>",
          "31:       <el-form-item label class=\"text-left\">",
          "32:         <el-select style=\"width:100%;\" v-model=\"new_p_cat_id\" :placeholder=\"$t('please_choose')\">",
          "33:           <el-option",
          "34:             v-for=\"item in catalogs\"",
          "35:             :key=\"item.cat_id\"",
          "36:             :label=\"item.cat_name\"",
          "37:             :value=\"item.cat_id\"",
          "38:           ></el-option>",
          "39:         </el-select>",
          "40:       </el-form-item>",
          "41:     </el-form>",
          "42:     <div slot=\"footer\" class=\"dialog-footer\">",
          "43:       <el-button @click=\"closeDialog\">{{$t('cancel')}}</el-button>",
          "44:       <el-button type=\"primary\" @click=\"copy\">{{$t('confirm')}}</el-button>",
          "45:     </div>",
          "46:   </el-dialog>",
          "47: </template>",
          "48: <script>",
          "49: export default {",
          "50:   props: ['cat_id', 'item_id', 'callback'],",
          "51:   data() {",
          "52:     return {",
          "53:       itemList: [],",
          "54:       to_item_id: '0',",
          "55:       is_del: '0',",
          "56:       catalogs: [{ cat_id: '0', cat_name: '/' }],",
          "57:       new_p_cat_id: '0'",
          "58:     }",
          "59:   },",
          "60:   methods: {",
          "61:     getItemList() {",
          "62:       this.request('/api/item/myList', {",
          "63:       }).then((data) => {",
          "64:         this.itemList = data.data",
          "65:         this.to_item_id = this.item_id",
          "66:       })",
          "67:     },",
          "68:     selectItem(item_id) {",
          "69:       this.get_catalog(item_id)",
          "70:     },",
          "71:     get_catalog(item_id) {",
          "72:       var that = this",
          "73:       that.request('/api/catalog/catListName', {",
          "74:         item_id: item_id",
          "75:       })",
          "76:       .then(data => {",
          "77:         this.new_p_cat_id = '0'",
          "78:         var Info = data.data",
          "79:         Info.unshift({ cat_id: '0', cat_name: '/' })",
          "80:         that.catalogs = Info",
          "81:       })",
          "82:     },",
          "83:     copy() {",
          "84:       var that = this",
          "85:       that.request('/api/catalog/copy', {",
          "86:         cat_id: this.cat_id,",
          "87:         new_p_cat_id: this.new_p_cat_id,",
          "88:         to_item_id: this.to_item_id,",
          "89:         is_del: this.is_del",
          "90:       })",
          "91:       .then(data => {",
          "92:         this.closeDialog()",
          "93:       })",
          "94:     },",
          "95:     closeDialog() {",
          "96:       if (this.callback) this.callback()",
          "97:     }",
          "98:   },",
          "99:   mounted() {",
          "100:     this.getItemList()",
          "101:     this.get_catalog(this.item_id)",
          "102:   }",
          "103: }",
          "104: </script>",
          "105: <style scoped>",
          "108: </style>",
          "",
          "---------------"
        ],
        "web_src/src/components/catalog/Index.vue||web_src/src/components/catalog/Index.vue": [
          "File: web_src/src/components/catalog/Index.vue -> web_src/src/components/catalog/Index.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:               <el-button",
          "24:                 type=\"text\"",
          "25:                 size=\"mini\"",
          "26:                 class=\"el-icon-edit\"",
          "27:                 @click.stop=\"edit(node, data)\"",
          "28:               ></el-button>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26:                 :title=\"$t('edit')\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30:                 type=\"text\"",
          "31:                 size=\"mini\"",
          "32:                 class=\"el-icon-plus\"",
          "33:                 @click.stop=\"add_cat(node, data)\"",
          "34:               ></el-button>",
          "35:               <el-button",
          "36:                 type=\"text\"",
          "37:                 size=\"mini\"",
          "38:                 class=\"el-icon-document\"",
          "39:                 @click.stop=\"showSortPage(node, data)\"",
          "40:               ></el-button>",
          "41:               <el-button",
          "42:                 type=\"text\"",
          "43:                 size=\"mini\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34:                 :title=\"$t('add_cat')\"",
          "41:                 :title=\"$t('sort_pages')\"",
          "44:               <el-button",
          "45:                 type=\"text\"",
          "46:                 size=\"mini\"",
          "47:                 class=\"el-icon-copy-document\"",
          "48:                 :title=\"$t('copy_or_mv_cat')\"",
          "49:                 @click.stop=\"copyCat(node, data)\"",
          "50:               ></el-button>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "80:       ref=\"SortPage\"",
          "81:     ></SortPage>",
          "83:     <Footer></Footer>",
          "84:   </div>",
          "85: </template>",
          "87: <script>",
          "88: import SortPage from '@/components/page/edit/SortPage'",
          "89: export default {",
          "90:   name: 'Login',",
          "91:   components: {",
          "93:   },",
          "94:   data() {",
          "95:     return {",
          "",
          "[Removed Lines]",
          "92:     SortPage",
          "",
          "[Added Lines]",
          "93:     <Copy v-if=\"copyFormVisible\" :item_id=\"item_id\" :cat_id=\"curl_cat_id\" :callback=\"copyCallback\"></Copy>",
          "101: import Copy from './Copy'",
          "105:     SortPage,",
          "106:     Copy",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "101:       },",
          "102:       catalogs: [],",
          "103:       dialogFormVisible: false,",
          "104:       treeData: [],",
          "105:       defaultProps: {",
          "106:         children: 'children',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "118:       copyFormVisible: false,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "274:       this.curl_cat_id = data.id",
          "275:       let childRef = this.$refs.SortPage // \u83b7\u53d6\u5b50\u7ec4\u4ef6",
          "276:       childRef.show()",
          "277:     }",
          "278:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "292:     },",
          "293:     copyCat(node, data) {",
          "294:       this.curl_cat_id = data.id",
          "295:       this.copyFormVisible = true",
          "296:     },",
          "297:     copyCallback() {",
          "298:       this.copyFormVisible = false",
          "299:       this.get_catalog()",
          "",
          "---------------"
        ],
        "web_src/src/components/item/show/show_regular_item/OpBar.vue||web_src/src/components/item/show/show_regular_item/OpBar.vue": [
          "File: web_src/src/components/item/show/show_regular_item/OpBar.vue -> web_src/src/components/item/show/show_regular_item/OpBar.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "127:           </el-tooltip>",
          "129:           <span v-if=\"item_info.ItemCreator\">",
          "131:               <router-link :to=\"'/item/setting/'+item_info.item_id\" v-if=\"item_info.ItemCreator\">",
          "132:                 <i class=\"el-icon-setting\"></i>",
          "133:               </router-link>",
          "",
          "[Removed Lines]",
          "130:             <el-tooltip class=\"item\" effect=\"dark\" :content=\"$t('item_setting')\" placement=\"top\">",
          "",
          "[Added Lines]",
          "130:             <el-tooltip class=\"item\" effect=\"dark\" :content=\"$t('item_setting')\" placement=\"left\">",
          "",
          "---------------"
        ],
        "web_src/static/lang/en.js||web_src/static/lang/en.js": [
          "File: web_src/static/lang/en.js -> web_src/static/lang/en.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "417:   from_file_gub: 'From FileHub',",
          "418:   file_gub: 'FileHub',",
          "421: }",
          "",
          "[Removed Lines]",
          "419:   select: 'select'",
          "",
          "[Added Lines]",
          "419:   select: 'select',",
          "421:   copy_or_mv_cat: 'Copy or move catalog',",
          "422:   copy_to: 'Copy To',",
          "423:   move_to: 'Move To'",
          "",
          "---------------"
        ],
        "web_src/static/lang/zh-CN.js||web_src/static/lang/zh-CN.js": [
          "File: web_src/static/lang/zh-CN.js -> web_src/static/lang/zh-CN.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "407:   from_file_gub: '\u4ece\u6587\u4ef6\u5e93\u9009\u62e9',",
          "408:   file_gub: '\u6587\u4ef6\u5e93',",
          "410: }",
          "",
          "[Removed Lines]",
          "409:   select: '\u9009\u62e9'",
          "",
          "[Added Lines]",
          "409:   select: '\u9009\u62e9',",
          "411:   copy_or_mv_cat: '\u590d\u5236\u6216\u79fb\u52a8\u76ee\u5f55',",
          "412:   copy_to: '\u590d\u5236\u5230',",
          "413:   move_to: '\u79fb\u52a8\u5230'",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a04df7e4ce908747d294da08295d9122cc10ab3f",
      "candidate_info": {
        "commit_hash": "a04df7e4ce908747d294da08295d9122cc10ab3f",
        "repo": "star7th/showdoc",
        "commit_url": "https://github.com/star7th/showdoc/commit/a04df7e4ce908747d294da08295d9122cc10ab3f",
        "files": [
          "server/Application/Api/Controller/ItemController.class.php",
          "server/Application/Api/Controller/ItemGroupController.class.php",
          "server/Application/Api/Controller/UpdateController.class.php",
          "web_src/src/components/common/ElTableDraggable.vue",
          "web_src/src/components/item/Index.vue",
          "web_src/src/components/item/group/Index.vue",
          "web_src/src/router/index.js",
          "web_src/static/lang/en.js",
          "web_src/static/lang/zh-CN.js"
        ],
        "message": "Item grouping function / \u9879\u76ee\u5206\u7ec4\u529f\u80fd",
        "before_after_code_files": [
          "server/Application/Api/Controller/ItemController.class.php||server/Application/Api/Controller/ItemController.class.php",
          "server/Application/Api/Controller/ItemGroupController.class.php||server/Application/Api/Controller/ItemGroupController.class.php",
          "server/Application/Api/Controller/UpdateController.class.php||server/Application/Api/Controller/UpdateController.class.php",
          "web_src/src/components/common/ElTableDraggable.vue||web_src/src/components/common/ElTableDraggable.vue",
          "web_src/src/components/item/Index.vue||web_src/src/components/item/Index.vue",
          "web_src/src/components/item/group/Index.vue||web_src/src/components/item/group/Index.vue",
          "web_src/src/router/index.js||web_src/src/router/index.js",
          "web_src/static/lang/en.js||web_src/static/lang/en.js",
          "web_src/static/lang/zh-CN.js||web_src/static/lang/zh-CN.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "server/Application/Api/Controller/UpdateController.class.php||server/Application/Api/Controller/UpdateController.class.php",
            "web_src/src/components/item/Index.vue||web_src/src/components/item/Index.vue",
            "web_src/src/router/index.js||web_src/src/router/index.js",
            "web_src/static/lang/en.js||web_src/static/lang/en.js",
            "web_src/static/lang/zh-CN.js||web_src/static/lang/zh-CN.js"
          ],
          "candidate": [
            "server/Application/Api/Controller/UpdateController.class.php||server/Application/Api/Controller/UpdateController.class.php",
            "web_src/src/components/item/Index.vue||web_src/src/components/item/Index.vue",
            "web_src/src/router/index.js||web_src/src/router/index.js",
            "web_src/static/lang/en.js||web_src/static/lang/en.js",
            "web_src/static/lang/zh-CN.js||web_src/static/lang/zh-CN.js"
          ]
        }
      },
      "candidate_diff": {
        "server/Application/Api/Controller/ItemController.class.php||server/Application/Api/Controller/ItemController.class.php": [
          "File: server/Application/Api/Controller/ItemController.class.php -> server/Application/Api/Controller/ItemController.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "142:     public function myList(){",
          "143:         $login_user = $this->checkLogin();",
          "145:         $member_item_ids = array(-1) ;",
          "146:         $item_members = D(\"ItemMember\")->where(\"uid = '$login_user[uid]'\")->select();",
          "147:         if ($item_members) {",
          "",
          "[Removed Lines]",
          "144:         $original = I(\"original/d\") ? I(\"original/d\") : 0; //1\uff1a\u53ea\u8fd4\u56de\u81ea\u5df1\u539f\u521b\u7684\u9879\u76ee;\u9ed8\u8ba4\u662f0",
          "",
          "[Added Lines]",
          "144:         $original = I(\"original/d\") ? I(\"original/d\") : 0; //1\uff1a\u53ea\u8fd4\u56de\u81ea\u5df1\u539f\u521b\u7684\u9879\u76ee;\u9ed8\u8ba4\u662f0",
          "145:         $item_group_id = I(\"item_group_id/d\") ? I(\"item_group_id/d\") : 0; //\u9879\u76ee\u5206\u7ec4id\u3002\u9ed8\u8ba4\u662f0",
          "147:         $where = \"uid = '$login_user[uid]' \" ;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "155:                 $member_item_ids[] = $value['item_id'] ;",
          "156:             }",
          "157:         }",
          "161:         foreach ($items as $key => $value) {",
          "",
          "[Removed Lines]",
          "158:         $items  = D(\"Item\")->field(\"item_id,uid,item_name,item_domain,item_type,last_update_time,item_description,is_del,password\")->where(\"uid = '$login_user[uid]' or item_id in ( \".implode(\",\", $member_item_ids).\" ) \")->order(\"item_id asc\")->select();",
          "",
          "[Added Lines]",
          "162:         $where .= \" or item_id in ( \".implode(\",\", $member_item_ids).\" ) \";",
          "163:         if($item_group_id){",
          "164:             $res = D(\"ItemGroup\")->where(\" id = '$item_group_id' \")->find();",
          "165:             if($res){",
          "166:                 $where = \" ({$where}) and item_id in ({$res['item_ids']}) \";",
          "167:             }",
          "168:         }",
          "169:         $items  = D(\"Item\")->field(\"item_id,uid,item_name,item_domain,item_type,last_update_time,item_description,is_del,password\")->where($where)->order(\"item_id asc\")->select();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "203:         }",
          "207:         if ($item_sort) {",
          "208:             $item_sort_data = json_decode(htmlspecialchars_decode($item_sort['item_sort_data']) , true) ;",
          "",
          "[Removed Lines]",
          "206:         $item_sort = D(\"ItemSort\")->where(\"uid = '$login_user[uid]'\")->find();",
          "",
          "[Added Lines]",
          "217:         $item_sort = D(\"ItemSort\")->where(\"uid = '$login_user[uid]'  and item_group_id = '$item_group_id' \")->find();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "592:         $login_user = $this->checkLogin();",
          "594:         $data = I(\"data\");",
          "598:         if ($ret) {",
          "599:             $this->sendResult(array());",
          "",
          "[Removed Lines]",
          "595:         D(\"ItemSort\")->where(\" uid = '$login_user[uid]' \")->delete();",
          "596:         $ret = D(\"ItemSort\")->add(array(\"item_sort_data\"=>$data,\"uid\"=>$login_user['uid'],\"addtime\"=>time()),array(),true);",
          "",
          "[Added Lines]",
          "606:         $item_group_id = I(\"item_group_id/d\");",
          "608:         $res = D(\"ItemSort\")->where(\"  uid ='{$login_user[uid]}' and item_group_id = $item_group_id \")->find() ;",
          "609:         if($res){",
          "610:             $ret = D(\"ItemSort\")->where(\"  uid ='{$login_user[uid]}' and item_group_id = $item_group_id \")->save(array(\"item_sort_data\"=>$data,\"addtime\"=>time()));",
          "611:         }else{",
          "612:             $ret = D(\"ItemSort\")->add(array(\"item_sort_data\"=>$data,\"item_group_id\"=>$item_group_id,\"uid\"=>$login_user['uid'],\"addtime\"=>time()));",
          "614:         }",
          "",
          "---------------"
        ],
        "server/Application/Api/Controller/ItemGroupController.class.php||server/Application/Api/Controller/ItemGroupController.class.php": [
          "File: server/Application/Api/Controller/ItemGroupController.class.php -> server/Application/Api/Controller/ItemGroupController.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "2: namespace Api\\Controller;",
          "3: use Think\\Controller;",
          "5:     \u9879\u76ee\u5206\u7ec4\u7ba1\u7406",
          "7: class ItemGroupController extends BaseController {",
          "10:     public function save(){",
          "11:         $login_user = $this->checkLogin();",
          "13:         $group_name = I(\"group_name\");",
          "14:         $item_ids = I(\"item_ids\");",
          "15:         $id = I(\"id/d\");",
          "17:         if ($id) {",
          "19:             D(\"ItemGroup\")->where(\" id = '$id' \")->save(array(\"group_name\"=>$group_name,\"item_ids\"=>$item_ids));",
          "21:         }else{",
          "22:             $data = array() ;",
          "23:             $data['uid'] = $login_user['uid'] ;",
          "24:             $data['group_name'] = $group_name ;",
          "25:             $data['item_ids'] = $item_ids ;",
          "26:             $data['created_at'] = date(\"Y-m-d H:i:s\") ;",
          "27:             $data['updated_at'] = date(\"Y-m-d H:i:s\") ;",
          "28:             $id = D(\"ItemGroup\")->add($data);",
          "29:         }",
          "31:         usleep(200000);",
          "32:         $return = D(\"ItemGroup\")->where(\" id = '$id' \")->find();",
          "34:         if (!$return && !$id ) {",
          "35:             $return = array() ;",
          "36:             $return['error_code'] = 10103 ;",
          "37:             $return['error_message'] = 'request  fail' ;",
          "38:         }",
          "40:         $this->sendResult($return);",
          "42:     }",
          "45:     public function getList(){",
          "46:         $login_user = $this->checkLogin();",
          "47:         if ($login_user['uid'] > 0 ) {",
          "48:             $ret = D(\"ItemGroup\")->where(\" uid = '$login_user[uid]' \")->order(\" s_number asc,id asc  \")->select();",
          "49:         }",
          "50:         if ($ret) {",
          "51:            $this->sendResult($ret);",
          "52:         }else{",
          "53:             $this->sendResult(array());",
          "54:         }",
          "55:     }",
          "58:     public function delete(){",
          "59:         $id = I(\"id/d\")? I(\"id/d\") : 0;",
          "60:         $login_user = $this->checkLogin();",
          "61:         if ($id && $login_user['uid']) {",
          "62:             $ret = D(\"ItemGroup\")->where(\" id = '$id' and uid = '$login_user[uid]'\")->delete();",
          "63:         }",
          "64:         if ($ret) {",
          "65:             D(\"ItemGroup\")->where(\" id = '$id' \")->delete();",
          "66:             D(\"ItemSort\")->where(\" item_group_id = '$id' \")->delete();",
          "67:            $this->sendResult($ret);",
          "68:         }else{",
          "69:            $this->sendError(10101);",
          "70:         }",
          "71:     }",
          "74:     public function saveSort(){",
          "75:         $login_user = $this->checkLogin();",
          "76:         $groups = I(\"groups\") ;",
          "77:         $data_array = json_decode(htmlspecialchars_decode($groups) , true) ;",
          "78:         $uid = $login_user['uid'] ;",
          "79:         if($data_array){",
          "80:             foreach ($data_array as $key => $value) {",
          "81:                 $id = $value['id'] ;",
          "82:                 $ret = D(\"ItemGroup\")->where(\" id = '$id' and uid = '{$uid}'\")->save(array('s_number'=>$value['s_number']));",
          "83:             }",
          "84:         }",
          "85:         $this->sendResult(array());",
          "87:     }",
          "90: }",
          "",
          "---------------"
        ],
        "server/Application/Api/Controller/UpdateController.class.php||server/Application/Api/Controller/UpdateController.class.php": [
          "File: server/Application/Api/Controller/UpdateController.class.php -> server/Application/Api/Controller/UpdateController.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:     public function checkDb($showBack = true){",
          "9:         $db_version_num = D(\"Options\")->get(\"db_version_num\");",
          "10:         if(!$db_version_num || $db_version_num < $version_num ){",
          "11:             $r = $this->updateSqlite();",
          "",
          "[Removed Lines]",
          "8:         $version_num = 8 ;",
          "",
          "[Added Lines]",
          "8:         $version_num = 9 ;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "395:             $sql = \"ALTER TABLE \".C('DB_PREFIX').\"runapi_flow_page ADD enabled int(1) NOT NULL DEFAULT '1' ;\";",
          "396:             D(\"mock\")->execute($sql);",
          "397:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "400:          if (!$this->_is_column_exist(\"item_sort\",\"item_group_id\")) {",
          "401:             $sql = \"ALTER TABLE \".C('DB_PREFIX').\"item_sort ADD item_group_id int(10) NOT NULL DEFAULT '0' ;\";",
          "402:             D(\"mock\")->execute($sql);",
          "403:         }",
          "406:         $sql = \"CREATE TABLE IF NOT EXISTS `item_group` (",
          "407:             `id`  INTEGER PRIMARY KEY ,",
          "408:             `uid` int(11) NOT NULL DEFAULT '0',",
          "409:             `group_name` CHAR(2000) NOT NULL DEFAULT '',",
          "410:             `item_ids` text NOT NULL DEFAULT '',",
          "411:             `s_number` int(11) NOT NULL DEFAULT '0',",
          "412:             `created_at` CHAR(2000) NOT NULL DEFAULT '',",
          "413:             `updated_at` CHAR(2000) NOT NULL DEFAULT ''",
          "414:             )\";",
          "415:         D(\"User\")->execute($sql);",
          "",
          "---------------"
        ],
        "web_src/src/components/common/ElTableDraggable.vue||web_src/src/components/common/ElTableDraggable.vue": [
          "File: web_src/src/components/common/ElTableDraggable.vue -> web_src/src/components/common/ElTableDraggable.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <template>",
          "2:   <div ref=\"wrapper\">",
          "3:     <div :key=\"tableKey\">",
          "4:       <slot></slot>",
          "5:     </div>",
          "6:   </div>",
          "7: </template>",
          "9: <script>",
          "10: import sortable from 'sortablejs'",
          "11: export default {",
          "12:   name: 'ElementUiElTableDraggable',",
          "13:   props: {",
          "14:     handle: {",
          "15:       type: String,",
          "16:       default: ''",
          "17:     },",
          "18:     animate: {",
          "19:       type: Number,",
          "20:       default: 100",
          "21:     }",
          "22:   },",
          "23:   data() {",
          "24:     return {",
          "25:       tableKey: 0",
          "26:     }",
          "27:   },",
          "28:   methods: {",
          "29:     makeTableSortAble() {",
          "30:       const table = this.$children[0].$el.querySelector(",
          "31:         '.el-table__body-wrapper tbody'",
          "32:       )",
          "33:       sortable.create(table, {",
          "34:         handle: this.handle,",
          "35:         animation: this.animate,",
          "36:         onStart: () => {",
          "37:           this.$emit('drag')",
          "38:         },",
          "39:         onEnd: ({ newIndex, oldIndex }) => {",
          "40:           this.keepWrapperHeight(true)",
          "41:           this.tableKey = Math.random()",
          "42:           const arr = this.$children[0].data",
          "43:           const targetRow = arr.splice(oldIndex, 1)[0]",
          "44:           arr.splice(newIndex, 0, targetRow)",
          "45:           this.$emit('drop', { targetObject: targetRow, list: arr })",
          "46:         }",
          "47:       })",
          "48:     },",
          "49:     keepWrapperHeight(keep) {",
          "51:       const wrapper = this.$refs.wrapper",
          "52:       if (keep) {",
          "53:         wrapper.style.minHeight = `${wrapper.clientHeight}px`",
          "54:       } else {",
          "55:         wrapper.style.minHeight = 'auto'",
          "56:       }",
          "57:     }",
          "58:   },",
          "59:   mounted() {",
          "60:     this.makeTableSortAble()",
          "61:   },",
          "62:   watch: {",
          "63:     tableKey() {",
          "64:       this.$nextTick(() => {",
          "65:         this.makeTableSortAble()",
          "66:         this.keepWrapperHeight(false)",
          "67:       })",
          "68:     }",
          "69:   }",
          "70: }",
          "71: </script>",
          "",
          "---------------"
        ],
        "web_src/src/components/item/Index.vue||web_src/src/components/item/Index.vue": [
          "File: web_src/src/components/item/Index.vue -> web_src/src/components/item/Index.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "123:           :keyword=\"keyword\"",
          "124:           :itemList=\"itemList\"",
          "125:         ></Search>",
          "126:         <ul class=\"thumbnails\" id=\"item-list\" v-if=\"!showSearch\">",
          "127:           <draggable",
          "128:             v-model=\"itemList\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "126:         <div",
          "127:           class=\"group-bar\"",
          "128:           v-show=\"!showSearch && (itemGroupId > 0 || itemList.length > 5)\"",
          "129:         >",
          "130:           <el-radio-group",
          "131:             v-model=\"itemGroupId\"",
          "132:             @change=\"changeGroup\"",
          "133:             size=\"small\"",
          "134:           >",
          "135:             <el-radio-button class=\"radio-button\" label=\"0\">{{",
          "136:               $t('all_items')",
          "137:             }}</el-radio-button>",
          "138:             <el-radio-button",
          "139:               v-for=\"element in itemGroupList\"",
          "140:               :key=\"element.id\"",
          "141:               class=\"radio-button\"",
          "142:               :label=\"element.id\"",
          "143:               >{{ element.group_name }}</el-radio-button",
          "144:             >",
          "145:           </el-radio-group>",
          "146:           <router-link class=\"group-link\" to=\"/item/group/index\">",
          "147:             {{ $t('manage_item_group') }}",
          "148:           </router-link>",
          "149:           <router-link class=\"group-link\" to=\"/item/add\">",
          "150:             {{ $t('new_item') }}",
          "151:           </router-link>",
          "152:         </div>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "134:             <li",
          "135:               class=\"text-center\"",
          "136:               v-for=\"item in itemList\"",
          "142:               :key=\"item.item_id\"",
          "143:             >",
          "144:               <router-link",
          "",
          "[Removed Lines]",
          "137:               v-dragging=\"{",
          "138:                 item: item,",
          "139:                 list: itemList,",
          "140:                 group: 'item'",
          "141:               }\"",
          "",
          "[Added Lines]",
          "164:               v-loading=\"loading\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "326:   color: #ffffff;",
          "327:   background-color: #ffffff;",
          "328: }",
          "329: </style>",
          "331: <script>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "352: .group-bar {",
          "353:   margin-top: 20px;",
          "354:   margin-bottom: 20px;",
          "355:   margin-left: 60px;",
          "356: }",
          "357: .group-link {",
          "358:   margin-left: 10px;",
          "359:   font-size: 12px;",
          "360: }",
          "361: </style>",
          "363: <style>",
          "364: .group-bar .el-radio-button__inner {",
          "365:   border-radius: 30px !important;",
          "366:   margin-right: 5px;",
          "367: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "347:       keyword: '',",
          "348:       lang: '',",
          "349:       username: '',",
          "351:     }",
          "352:   },",
          "353:   watch: {",
          "",
          "[Removed Lines]",
          "350:       showSearch: false",
          "",
          "[Added Lines]",
          "389:       showSearch: false,",
          "390:       itemGroupId: '0',",
          "391:       itemGroupList: [],",
          "392:       loading: false",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "372:   },",
          "373:   methods: {",
          "374:     get_item_list() {",
          "376:         this.itemList = data.data",
          "377:       })",
          "378:     },",
          "",
          "[Removed Lines]",
          "375:       this.request('/api/item/myList', {}).then(data => {",
          "",
          "[Added Lines]",
          "417:       this.loading = true",
          "418:       const itemGroupId = this.itemGroupId",
          "419:       this.request('/api/item/myList', {",
          "420:         item_group_id: itemGroupId",
          "421:       }).then(data => {",
          "422:         this.loading = false",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "496:       var url = DocConfig.server + '/api/item/sort'",
          "497:       var params = new URLSearchParams()",
          "498:       params.append('data', JSON.stringify(data))",
          "499:       that.axios.post(url, params).then(function(response) {",
          "500:         if (response.data.error_code === 0) {",
          "501:           that.get_item_list()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "546:       params.append('item_group_id', this.itemGroupId)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "524:     checkDb() {",
          "525:       var url = DocConfig.server + '/api/update/checkDb'",
          "526:       this.axios.get(url)",
          "527:     }",
          "528:   },",
          "529:   mounted() {",
          "531:     this.user_info()",
          "532:     this.lang = DocConfig.lang",
          "533:     this.script_cron()",
          "535:     this.get_user_info(response => {",
          "536:       if (response.data.error_code === 0) {",
          "537:         this.username = response.data.data.username",
          "",
          "[Removed Lines]",
          "530:     this.get_item_list()",
          "534:     this.checkDb()",
          "",
          "[Added Lines]",
          "575:     },",
          "576:     getItemGroupList() {",
          "577:       this.request('/api/itemgroup/getList', {}).then(data => {",
          "578:         this.itemGroupList = data.data",
          "579:         const deaultItemGroupId = localStorage.getItem('deaultItemGroupId')",
          "581:         this.itemGroupList.map(element => {",
          "582:           if (element.id == deaultItemGroupId) {",
          "583:             this.itemGroupId = deaultItemGroupId",
          "584:           }",
          "585:         })",
          "586:         this.get_item_list()",
          "587:       })",
          "588:     },",
          "589:     changeGroup() {",
          "590:       localStorage.setItem('deaultItemGroupId', this.itemGroupId)",
          "591:       this.get_item_list()",
          "595:     this.checkDb()",
          "599:     const deaultItemGroupId = localStorage.getItem('deaultItemGroupId')",
          "600:     if (deaultItemGroupId === null) {",
          "601:       this.get_item_list()",
          "602:       this.itemGroupId = '0'",
          "603:     } else {",
          "604:       this.itemGroupId = deaultItemGroupId",
          "605:     }",
          "606:     this.getItemGroupList()",
          "",
          "---------------"
        ],
        "web_src/src/components/item/group/Index.vue||web_src/src/components/item/group/Index.vue": [
          "File: web_src/src/components/item/group/Index.vue -> web_src/src/components/item/group/Index.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <template>",
          "2:   <div class=\"hello\">",
          "3:     <Header></Header>",
          "5:     <el-container>",
          "6:       <el-card class=\"center-card\">",
          "7:         <el-button type=\"text\" class=\"goback-btn\" @click=\"goback\"",
          "8:           ><i class=\"el-icon-back\"></i>&nbsp;{{ $t('goback') }}</el-button",
          "9:         >",
          "10:         <el-button type=\"text\" class=\"add-cat\" @click=\"addDialog\"",
          "11:           ><i class=\"el-icon-plus\"></i>&nbsp;{{ $t('add_group') }}</el-button",
          "12:         >",
          "13:         <p class=\"tips\" v-show=\"list && list.length > 1\">",
          "14:           {{ $t('draggable_tips') }}",
          "15:         </p>",
          "16:         <el-table-draggable animate=\"200\" @drop=\"onDropEnd\">",
          "17:           <el-table",
          "18:             :show-header=\"false\"",
          "19:             align=\"left\"",
          "20:             :empty-text=\"$t('item_group_empty_tips')\"",
          "21:             :data=\"list\"",
          "22:             height=\"400\"",
          "23:             style=\"width: 100%\"",
          "24:           >",
          "25:             <el-table-column",
          "26:               prop=\"group_name\"",
          "27:               :label=\"$t('group_name')\"",
          "28:             ></el-table-column>",
          "30:             <el-table-column width=\"120\" prop :label=\"$t('operation')\">",
          "31:               <template slot-scope=\"scope\">",
          "32:                 <el-button @click=\"edit(scope.row)\" type=\"text\" size=\"small\">{{",
          "33:                   $t('edit')",
          "34:                 }}</el-button>",
          "36:                 <el-button",
          "37:                   @click=\"del(scope.row.id)\"",
          "38:                   type=\"text\"",
          "39:                   size=\"small\"",
          "40:                   >{{ $t('delete') }}</el-button",
          "41:                 >",
          "42:               </template>",
          "43:             </el-table-column>",
          "44:           </el-table>",
          "45:         </el-table-draggable>",
          "46:       </el-card>",
          "47:       <el-dialog",
          "48:         :visible.sync=\"dialogFormVisible\"",
          "49:         v-if=\"dialogFormVisible\"",
          "50:         width=\"500px\"",
          "51:         :close-on-click-modal=\"false\"",
          "52:       >",
          "53:         <el-form>",
          "54:           <el-form-item>",
          "55:             <el-input v-model=\"MyForm.group_name\" placeholder=\"\u7ec4\u540d\"></el-input>",
          "56:           </el-form-item>",
          "57:         </el-form>",
          "58:         <div>",
          "59:           <p>{{ $t('select_item') }}</p>",
          "60:           <el-table",
          "61:             :show-header=\"false\"",
          "62:             ref=\"multipleTable\"",
          "63:             :data=\"itemList\"",
          "64:             tooltip-effect=\"dark\"",
          "65:             style=\"width: 100%\"",
          "66:             @selection-change=\"handleSelectionChange\"",
          "67:           >",
          "68:             <el-table-column type=\"selection\" width=\"55\"> </el-table-column>",
          "69:             <el-table-column prop=\"item_name\" :label=\"$t('item_name')\">",
          "70:             </el-table-column>",
          "71:           </el-table>",
          "72:         </div>",
          "74:         <div slot=\"footer\" class=\"dialog-footer\">",
          "75:           <el-button @click=\"dialogFormVisible = false\">{{",
          "76:             $t('cancel')",
          "77:           }}</el-button>",
          "78:           <el-button type=\"primary\" @click=\"MyFormSubmit\">{{",
          "79:             $t('confirm')",
          "80:           }}</el-button>",
          "81:         </div>",
          "82:       </el-dialog>",
          "83:     </el-container>",
          "85:     <Footer></Footer>",
          "86:   </div>",
          "87: </template>",
          "89: <script>",
          "90: import ElTableDraggable from '@/components/common/ElTableDraggable'",
          "91: export default {",
          "92:   components: { ElTableDraggable },",
          "93:   data() {",
          "94:     return {",
          "95:       MyForm: {",
          "96:         id: '',",
          "97:         group_name: ''",
          "98:       },",
          "99:       list: [],",
          "100:       dialogFormVisible: false,",
          "101:       itemList: [],",
          "102:       multipleSelection: []",
          "103:     }",
          "104:   },",
          "105:   methods: {",
          "106:     geList() {",
          "107:       this.request('/api/itemgroup/getList', {}).then(data => {",
          "108:         this.list = data.data",
          "109:       })",
          "110:     },",
          "111:     MyFormSubmit() {",
          "112:       const group_name = this.MyForm.group_name",
          "113:       const id = this.MyForm.id",
          "114:       const item_ids_array = []",
          "115:       this.multipleSelection.map(element => {",
          "116:         item_ids_array.push(element.item_id)",
          "117:       })",
          "118:       const item_ids = item_ids_array.join(',')",
          "119:       this.request('/api/itemgroup/save', { group_name, id, item_ids }).then(",
          "120:         data => {",
          "121:           this.geList()",
          "122:           this.dialogFormVisible = false",
          "123:           this.multipleSelection = []",
          "124:           this.$nextTick(() => {",
          "125:             this.toggleSelection(this.multipleSelection)",
          "126:           })",
          "127:           this.MyForm.id = ''",
          "128:           this.MyForm.group_name = ''",
          "129:         }",
          "130:       )",
          "131:     },",
          "132:     edit(row) {",
          "133:       this.MyForm.id = row.id",
          "134:       this.MyForm.group_name = row.group_name",
          "135:       this.multipleSelection = []",
          "136:       const item_ids_array = row.item_ids.split(',')",
          "137:       item_ids_array.map(item_id => {",
          "138:         this.itemList.map(element2 => {",
          "139:           if (item_id == element2.item_id) {",
          "140:             this.multipleSelection.push(element2)",
          "141:           }",
          "142:         })",
          "143:       })",
          "144:       this.dialogFormVisible = true",
          "145:       this.$nextTick(() => {",
          "146:         this.toggleSelection(this.multipleSelection)",
          "147:       })",
          "148:     },",
          "150:     del(id) {",
          "151:       var that = this",
          "153:       this.$confirm(that.$t('confirm_delete'), ' ', {",
          "154:         confirmButtonText: that.$t('confirm'),",
          "155:         cancelButtonText: that.$t('cancel'),",
          "156:         type: 'warning'",
          "157:       }).then(() => {",
          "158:         this.request('/api/itemgroup/delete', { id }).then(data => {",
          "159:           this.geList()",
          "160:         })",
          "161:       })",
          "162:     },",
          "163:     addDialog() {",
          "164:       this.MyForm = {",
          "165:         id: '',",
          "166:         team_name: ''",
          "167:       }",
          "168:       this.dialogFormVisible = true",
          "169:     },",
          "170:     goback() {",
          "171:       this.$router.push({ path: '/item/index' })",
          "172:     },",
          "173:     get_item_list() {",
          "174:       this.request('/api/item/myList', {}).then(data => {",
          "175:         this.itemList = data.data",
          "176:       })",
          "177:     },",
          "178:     handleSelectionChange(val) {",
          "179:       this.multipleSelection = val",
          "180:     },",
          "181:     toggleSelection(rows) {",
          "182:       if (rows) {",
          "183:         rows.forEach(row => {",
          "184:           this.$refs.multipleTable.toggleRowSelection(row)",
          "185:         })",
          "186:       } else {",
          "187:         this.$refs.multipleTable.clearSelection()",
          "188:       }",
          "189:     },",
          "190:     onDropEnd() {",
          "191:       const groups_array = []",
          "192:       this.list.map((element, index) => {",
          "193:         groups_array.push({",
          "194:           id: element.id,",
          "195:           s_number: index + 1",
          "196:         })",
          "197:       })",
          "198:       this.request('/api/itemgroup/saveSort', {",
          "199:         groups: JSON.stringify(groups_array)",
          "200:       }).then(data => {",
          "201:         this.itemList = data.data",
          "202:       })",
          "203:     }",
          "204:   },",
          "206:   mounted() {",
          "207:     this.geList()",
          "208:     this.get_item_list()",
          "209:   },",
          "210:   beforeDestroy() {}",
          "211: }",
          "212: </script>",
          "214: <!-- Add \"scoped\" attribute to limit CSS to this component only -->",
          "215: <style scoped>",
          "216: .hello {",
          "217:   text-align: left;",
          "218: }",
          "220: .add-cat {",
          "221:   float: right;",
          "222:   margin-right: 15px;",
          "223:   font-size: 14px;",
          "224: }",
          "226: .center-card {",
          "227:   text-align: left;",
          "228:   width: 750px;",
          "229:   height: 600px;",
          "230: }",
          "232: .goback-btn {",
          "233:   z-index: 999;",
          "234:   font-size: 14px;",
          "235: }",
          "236: .tips {",
          "237:   color: #777;",
          "238: }",
          "239: </style>",
          "241: <!-- \u5168\u5c40css -->",
          "242: <style>",
          "243: .el-table .success-row {",
          "244:   background: #f0f9eb;",
          "245: }",
          "246: .el-table__empty-text {",
          "247:   text-align: left;",
          "248:   line-height: 30px !important;",
          "249:   margin-top: 20px;",
          "250: }",
          "251: </style>",
          "",
          "---------------"
        ],
        "web_src/src/router/index.js||web_src/src/router/index.js": [
          "File: web_src/src/router/index.js -> web_src/src/router/index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import TeamMember from '@/components/team/Member'",
          "23: import TeamItem from '@/components/team/Item'",
          "24: import Attachment from '@/components/attachment/Index'",
          "26: Vue.use(Router)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: import ItemGroup from '@/components/item/group/Index'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "141:       path: '/attachment/index',",
          "142:       name: 'Attachment',",
          "143:       component: Attachment",
          "144:     }",
          "145:   ]",
          "146: })",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "145:     },",
          "146:     {",
          "147:       path: '/item/group/index',",
          "148:       name: 'ItemGroup',",
          "149:       component: ItemGroup",
          "",
          "---------------"
        ],
        "web_src/static/lang/en.js||web_src/static/lang/en.js": [
          "File: web_src/static/lang/en.js -> web_src/static/lang/en.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "427:   qcloud: 'qcloud',",
          "428:   binding_item: 'Binding item',",
          "429:   addtime: 'addtime',",
          "",
          "[Removed Lines]",
          "430:   system_update: 'System update'",
          "432: }",
          "",
          "[Added Lines]",
          "430:   system_update: 'System update',",
          "433:   add_group: 'New group',",
          "434:   all_items: 'All items',",
          "435:   manage_item_group: 'Manage group',",
          "436:   draggable_tips: 'Press and hold to drag sort',",
          "437:   item_group_empty_tips: 'There is no grouping data. You can click the top right corner to create a new group',",
          "438:   select_item: 'Select item'",
          "440: }",
          "",
          "---------------"
        ],
        "web_src/static/lang/zh-CN.js||web_src/static/lang/zh-CN.js": [
          "File: web_src/static/lang/zh-CN.js -> web_src/static/lang/zh-CN.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "417:   qcloud: '\u817e\u8baf\u4e91',",
          "418:   binding_item: '\u7ed1\u5b9a\u9879\u76ee',",
          "419:   addtime: '\u6dfb\u52a0\u65f6\u95f4',",
          "421: }",
          "",
          "[Removed Lines]",
          "420:   system_update: '\u7cfb\u7edf\u66f4\u65b0'",
          "",
          "[Added Lines]",
          "420:   system_update: '\u7cfb\u7edf\u66f4\u65b0',",
          "422:   group_name: '\u7ec4\u540d',",
          "423:   add_group: '\u65b0\u5efa\u5206\u7ec4',",
          "424:   all_items: '\u6240\u6709\u9879\u76ee',",
          "425:   manage_item_group: '\u9879\u76ee\u5206\u7ec4\u7ba1\u7406',",
          "426:   draggable_tips: '\u6309\u4f4f\u53ef\u62d6\u52a8\u6392\u5e8f',",
          "427:   item_group_empty_tips: '\u6682\u65e0\u5206\u7ec4\u6570\u636e\u3002\u53ef\u70b9\u51fb\u53f3\u4e0a\u89d2\u65b0\u5efa\u5206\u7ec4',",
          "428:   select_item: '\u9009\u62e9\u9879\u76ee'",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "04b3a85da4271d0d5d26a8d8b5d8b09d651a42ba",
      "candidate_info": {
        "commit_hash": "04b3a85da4271d0d5d26a8d8b5d8b09d651a42ba",
        "repo": "star7th/showdoc",
        "commit_url": "https://github.com/star7th/showdoc/commit/04b3a85da4271d0d5d26a8d8b5d8b09d651a42ba",
        "files": [
          "server/Application/Api/Controller/CatalogController.class.php",
          "server/Application/Api/Controller/PageController.class.php",
          "web_src/src/components/page/edit/Index.vue",
          "web_src/src/components/page/edit/SortPage.vue",
          "web_src/static/lang/en.js",
          "web_src/static/lang/zh-CN.js"
        ],
        "message": "sort pages",
        "before_after_code_files": [
          "server/Application/Api/Controller/CatalogController.class.php||server/Application/Api/Controller/CatalogController.class.php",
          "server/Application/Api/Controller/PageController.class.php||server/Application/Api/Controller/PageController.class.php",
          "web_src/src/components/page/edit/Index.vue||web_src/src/components/page/edit/Index.vue",
          "web_src/src/components/page/edit/SortPage.vue||web_src/src/components/page/edit/SortPage.vue",
          "web_src/static/lang/en.js||web_src/static/lang/en.js",
          "web_src/static/lang/zh-CN.js||web_src/static/lang/zh-CN.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "server/Application/Api/Controller/PageController.class.php||server/Application/Api/Controller/PageController.class.php",
            "web_src/static/lang/en.js||web_src/static/lang/en.js",
            "web_src/static/lang/zh-CN.js||web_src/static/lang/zh-CN.js"
          ],
          "candidate": [
            "server/Application/Api/Controller/PageController.class.php||server/Application/Api/Controller/PageController.class.php",
            "web_src/static/lang/en.js||web_src/static/lang/en.js",
            "web_src/static/lang/zh-CN.js||web_src/static/lang/zh-CN.js"
          ]
        }
      },
      "candidate_diff": {
        "server/Application/Api/Controller/CatalogController.class.php||server/Application/Api/Controller/CatalogController.class.php": [
          "File: server/Application/Api/Controller/CatalogController.class.php -> server/Application/Api/Controller/CatalogController.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "213:     }",
          "216: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "217:     public function getPagesBycat(){",
          "218:         $cat_id = I(\"cat_id/d\")? I(\"cat_id/d\") : 0;",
          "219:         $item_id =  I(\"item_id/d\");",
          "220:         $login_user = $this->checkLogin();",
          "221:         if (!$this->checkItemPermn($login_user['uid'] , $item_id)) {",
          "222:             $this->sendError(10103);",
          "223:             return ;",
          "224:         }",
          "225:         $return = D(\"Page\")->where(\"cat_id = '$cat_id' and  item_id = '$item_id' and is_del = 0  \")->field(\"page_id , page_title,s_number\")->order(\"`s_number` asc , `page_id` asc\")->select();",
          "226:         $this->sendResult($return);",
          "228:     }",
          "",
          "---------------"
        ],
        "server/Application/Api/Controller/PageController.class.php||server/Application/Api/Controller/PageController.class.php": [
          "File: server/Application/Api/Controller/PageController.class.php -> server/Application/Api/Controller/PageController.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "413:         $this->sendResult($page);",
          "414:     }",
          "417: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "417:     public function sort(){",
          "418:         $pages = I(\"pages\");",
          "419:         $item_id = I(\"item_id/d\");",
          "420:         $login_user = $this->checkLogin();",
          "421:         if (!$this->checkItemPermn($login_user['uid'] , $item_id)) {",
          "422:             $this->sendError(10103);",
          "423:             return ;",
          "424:         }",
          "425:         $ret = '';",
          "426:         $data_array = json_decode(htmlspecialchars_decode($pages) , true) ;",
          "427:         if ($data_array) {",
          "428:             foreach ($data_array as $key => $value) {",
          "429:                 $ret = D(\"Page\")->where(\" page_id = '$key' and item_id = '$item_id' \")->save(array(",
          "430:                     \"s_number\" => $value ,",
          "431:                     ));",
          "432:             }",
          "433:         }",
          "435:         $this->sendResult(array());",
          "436:     }",
          "",
          "---------------"
        ],
        "web_src/src/components/page/edit/Index.vue||web_src/src/components/page/edit/Index.vue": [
          "File: web_src/src/components/page/edit/Index.vue -> web_src/src/components/page/edit/Index.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "16:             </el-select>",
          "17:           </el-form-item>",
          "21:           </el-form-item>",
          "22:           <el-form-item label=\"\" >",
          "23:             <el-button type=\"text\" @click=\"ShowHistoryVersion\">{{$t('history_version')}}</el-button>",
          "",
          "[Removed Lines]",
          "19:           <el-form-item :label=\"$t('s_number')+' : '\">",
          "20:             <el-input  :placeholder=\"$t('optional')\" class=\"num\" v-model=\"s_number\"></el-input>",
          "",
          "[Added Lines]",
          "19:           <el-form-item label=\"\" >",
          "20:             <el-button type=\"text\" @click=\"ShowSortPage\">{{$t('sort_pages')}}</el-button>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80:         <!-- \u7c98\u8d34\u63d2\u5165\u8868\u683c -->",
          "81:         <PasteTable :callback=\"insertValue\" :item_id=\"item_id\" :manage=\"true\" :page_id=\"page_id\" ref=\"PasteTable\"></PasteTable>",
          "85:       </el-container>",
          "86:     <Footer> </Footer>",
          "87:     <div class=\"\"></div>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:         <!-- \u9875\u9762\u6392\u5e8f -->",
          "84:         <SortPage :callback=\"insertValue\" :belong_to_catalogs=\"belong_to_catalogs\" :item_id=\"item_id\" :page_id=\"page_id\" :cat_id=\"cat_id\" ref=\"SortPage\"></SortPage>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "259: import HistoryVersion from '@/components/page/edit/HistoryVersion'",
          "260: import AttachmentList from '@/components/page/edit/AttachmentList'",
          "261: import PasteTable from '@/components/page/edit/PasteTable'",
          "264: export default {",
          "265:   data () {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "263: import SortPage from '@/components/page/edit/SortPage'",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "322:     TemplateList,",
          "323:     HistoryVersion,",
          "324:     AttachmentList,",
          "326:   },",
          "327:   methods:{",
          "",
          "[Removed Lines]",
          "325:     PasteTable",
          "",
          "[Added Lines]",
          "326:     PasteTable,",
          "327:     SortPage",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "487:         let childRef = this.$refs.HistoryVersion ;//\u83b7\u53d6\u5b50\u7ec4\u4ef6",
          "488:         childRef.show() ;",
          "489:     },",
          "491:     save(){",
          "492:       var that = this ;",
          "493:       var loading = that.$loading();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "493:     ShowSortPage(){",
          "494:         let childRef = this.$refs.SortPage ;//\u83b7\u53d6\u5b50\u7ec4\u4ef6",
          "495:         childRef.show() ;",
          "496:     },",
          "",
          "---------------"
        ],
        "web_src/src/components/page/edit/SortPage.vue||web_src/src/components/page/edit/SortPage.vue": [
          "File: web_src/src/components/page/edit/SortPage.vue -> web_src/src/components/page/edit/SortPage.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <!-- \u9875\u9762\u6392\u5e8f -->",
          "2: <template>",
          "3:   <div class=\"hello\">",
          "4:     <Header> </Header>",
          "6:     <el-container class=\"container-narrow\">",
          "8:       <el-dialog :title=\"$t('sort_pages')\" :modal=\"is_modal\" :visible.sync=\"dialogTableVisible\" >",
          "9:         <div class=\"dialog-body\">",
          "10:           <p class=\"tips\" >{{$t('sort_pages_tips')}}</p>",
          "11:           <el-select  :placeholder=\"$t('optional')\" class=\"select-cat\" v-model=\"cat_id\">",
          "12:             <el-option v-if=\"belong_to_catalogs\" v-for=\"cat in belong_to_catalogs \" :key=\"cat.cat_name\" :label=\"cat.cat_name\" :value=\"cat.cat_id\"></el-option>",
          "13:           </el-select>",
          "14:           <draggable v-model=\"pages\" tag=\"div\" group=\"page\"  @end=\"endMove\">",
          "15:             <div class=\"page-box\" v-for=\"page in pages\">",
          "16:               <span class='page-name'>{{page.page_title}}</span>",
          "17:             </div>",
          "19:           </draggable>",
          "20:         </div>",
          "23:       </el-dialog>",
          "25:       </el-container>",
          "26:     <Footer> </Footer>",
          "27:     <div class=\"\"></div>",
          "28:   </div>",
          "29: </template>",
          "31: <style scoped>",
          "32: .dialog-body{",
          "33:   min-height: 400px;",
          "34:   max-height: 90%;",
          "35:   overflow-x:hidden;",
          "36:   overflow-y:auto;",
          "37: }",
          "38: .page-box{",
          "39:   background-color:rgb(250, 250, 250);",
          "40:   width: 98%;",
          "41:   height: 40px;",
          "42:   margin-top: 10px;",
          "43:   border: 1px solid #d9d9d9;",
          "44:   border-radius: 2px;",
          "45: }",
          "46: .page-name{",
          "47:   line-height: 40px;",
          "48:   margin-left: 20px;",
          "49:   color: #262626;",
          "50: }",
          "51: .tips{",
          "52:   margin-left: 10px;",
          "53:   color: #9ea1a6;",
          "54:   font-size: 11px;",
          "56: }",
          "58: </style>",
          "60: <script>",
          "61: import draggable from 'vuedraggable'",
          "62: export default {",
          "63:   props:{",
          "64:     callback:'',",
          "65:     page_id:'',",
          "66:     item_id:'',",
          "67:     is_modal:true,",
          "68:     belong_to_catalogs:[],",
          "69:     cat_id:''",
          "70:   },",
          "71:   data () {",
          "72:     return {",
          "73:       currentDate: new Date(),",
          "74:       dialogTableVisible: false,",
          "75:       pages:[]",
          "76:     };",
          "77:   },",
          "78:   components:{",
          "79:     draggable",
          "80:   },",
          "81:   methods:{",
          "83:     show(){",
          "84:       this.dialogTableVisible = true ;",
          "85:     },",
          "87:     get_pages(){",
          "88:       var that = this ;",
          "89:       var url = DocConfig.server+'/api/catalog/getPagesBycat';",
          "90:       var params = new URLSearchParams();",
          "91:       params.append('item_id',  this.item_id);",
          "92:       params.append('cat_id',  this.cat_id);",
          "93:       that.axios.post(url, params)",
          "94:         .then(function (response) {",
          "95:           if (response.data.error_code === 0 ) {",
          "96:             that.pages = response.data.data ;",
          "97:           }else{",
          "98:             that.$alert(response.data.error_message);",
          "99:           }",
          "101:         })",
          "102:         .catch(function (error) {",
          "103:           console.log(error);",
          "104:         });",
          "105:     },",
          "106:     endMove(evt){",
          "107:       let data = {} ;",
          "108:       for (var i = 0; i < this.pages.length; i++) {",
          "109:         let key = this.pages[i]['page_id'] ;",
          "110:         data[key] = i + 1  ;",
          "111:       };",
          "112:       this.sort_page(data);",
          "113:     },",
          "114:     sort_page(data){",
          "115:       var that = this ;",
          "116:       var url = DocConfig.server+'/api/page/sort';",
          "117:       var params = new URLSearchParams();",
          "118:       params.append('pages', JSON.stringify(data));",
          "119:       params.append('item_id', this.item_id);",
          "120:       that.axios.post(url, params)",
          "121:         .then(function (response) {",
          "122:           if (response.data.error_code === 0 ) {",
          "123:             that.get_pages();",
          "126:           }else{",
          "127:             that.$alert(response.data.error_message,'',{",
          "128:               callback:function(){",
          "129:                 window.location.reload();",
          "130:               }",
          "131:             });",
          "133:           }",
          "135:         });",
          "136:     },",
          "138:   },",
          "139:   watch:{",
          "140:     cat_id:function(){",
          "141:       this.get_pages();",
          "142:     }",
          "143:   },",
          "144:   mounted () {",
          "146:   }",
          "147: }",
          "148: </script>",
          "",
          "---------------"
        ],
        "web_src/static/lang/en.js||web_src/static/lang/en.js": [
          "File: web_src/static/lang/en.js -> web_src/static/lang/en.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "301:     \"recover\":\"recover\",",
          "302:     \"recover_tips\":\"Are you sure to recover? The recovered page will appear in the item root\",",
          "305: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "304:     \"sort_pages\":\"Sort Pages\",",
          "305:     \"sort_pages_tips\":\"After selecting a specific catalog, you can drag and sort the pages in that catalog\",",
          "",
          "---------------"
        ],
        "web_src/static/lang/zh-CN.js||web_src/static/lang/zh-CN.js": [
          "File: web_src/static/lang/zh-CN.js -> web_src/static/lang/zh-CN.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "308:     \"recover\":\"\u6062\u590d\",",
          "309:     \"recover_tips\":\"\u786e\u8ba4\u6062\u590d\u5417\uff1f\u6062\u590d\u7684\u9875\u9762\u5c06\u51fa\u73b0\u5728\u9879\u76ee\u6839\u76ee\u5f55\",",
          "311: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "311:     \"sort_pages\":\"\u9875\u9762\u6392\u5e8f\",",
          "312:     \"sort_pages_tips\":\"\u9009\u62e9\u7279\u5b9a\u7684\u76ee\u5f55\u540e\uff0c\u4f60\u53ef\u4ee5\u5bf9\u8be5\u76ee\u5f55\u4e0b\u7684\u9875\u9762\u8fdb\u884c\u62d6\u52a8\u6392\u5e8f\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a09dc8f3a522f4961d3e1c560bac0ef24e59e7af",
      "candidate_info": {
        "commit_hash": "a09dc8f3a522f4961d3e1c560bac0ef24e59e7af",
        "repo": "star7th/showdoc",
        "commit_url": "https://github.com/star7th/showdoc/commit/a09dc8f3a522f4961d3e1c560bac0ef24e59e7af",
        "files": [
          "server/Application/Api/Controller/AttachmentController.class.php",
          "server/Application/Api/Controller/PageController.class.php",
          "server/Application/Api/Controller/UpdateController.class.php",
          "server/Application/Api/Model/AttachmentModel.class.php",
          "server/Application/Home/Controller/UpdateController.class.php",
          "web_src/src/components/attachment/Index.vue",
          "web_src/src/components/item/show/show_regular_item/Index.vue",
          "web_src/src/components/page/edit/AttachmentList.vue",
          "web_src/src/components/page/edit/Filehub.vue",
          "web_src/static/lang/en.js",
          "web_src/static/lang/zh-CN.js"
        ],
        "message": "file hub / \u6587\u4ef6\u5e93",
        "before_after_code_files": [
          "server/Application/Api/Controller/AttachmentController.class.php||server/Application/Api/Controller/AttachmentController.class.php",
          "server/Application/Api/Controller/PageController.class.php||server/Application/Api/Controller/PageController.class.php",
          "server/Application/Api/Controller/UpdateController.class.php||server/Application/Api/Controller/UpdateController.class.php",
          "server/Application/Api/Model/AttachmentModel.class.php||server/Application/Api/Model/AttachmentModel.class.php",
          "server/Application/Home/Controller/UpdateController.class.php||server/Application/Home/Controller/UpdateController.class.php",
          "web_src/src/components/attachment/Index.vue||web_src/src/components/attachment/Index.vue",
          "web_src/src/components/item/show/show_regular_item/Index.vue||web_src/src/components/item/show/show_regular_item/Index.vue",
          "web_src/src/components/page/edit/AttachmentList.vue||web_src/src/components/page/edit/AttachmentList.vue",
          "web_src/src/components/page/edit/Filehub.vue||web_src/src/components/page/edit/Filehub.vue",
          "web_src/static/lang/en.js||web_src/static/lang/en.js",
          "web_src/static/lang/zh-CN.js||web_src/static/lang/zh-CN.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "server/Application/Api/Controller/AttachmentController.class.php||server/Application/Api/Controller/AttachmentController.class.php",
            "server/Application/Api/Controller/PageController.class.php||server/Application/Api/Controller/PageController.class.php",
            "server/Application/Api/Controller/UpdateController.class.php||server/Application/Api/Controller/UpdateController.class.php",
            "server/Application/Api/Model/AttachmentModel.class.php||server/Application/Api/Model/AttachmentModel.class.php",
            "web_src/src/components/attachment/Index.vue||web_src/src/components/attachment/Index.vue",
            "web_src/static/lang/en.js||web_src/static/lang/en.js",
            "web_src/static/lang/zh-CN.js||web_src/static/lang/zh-CN.js"
          ],
          "candidate": [
            "server/Application/Api/Controller/AttachmentController.class.php||server/Application/Api/Controller/AttachmentController.class.php",
            "server/Application/Api/Controller/PageController.class.php||server/Application/Api/Controller/PageController.class.php",
            "server/Application/Api/Controller/UpdateController.class.php||server/Application/Api/Controller/UpdateController.class.php",
            "server/Application/Api/Model/AttachmentModel.class.php||server/Application/Api/Model/AttachmentModel.class.php",
            "web_src/src/components/attachment/Index.vue||web_src/src/components/attachment/Index.vue",
            "web_src/static/lang/en.js||web_src/static/lang/en.js",
            "web_src/static/lang/zh-CN.js||web_src/static/lang/zh-CN.js"
          ]
        }
      },
      "candidate_diff": {
        "server/Application/Api/Controller/AttachmentController.class.php||server/Application/Api/Controller/AttachmentController.class.php": [
          "File: server/Application/Api/Controller/AttachmentController.class.php -> server/Application/Api/Controller/AttachmentController.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:             return false;",
          "69:         }",
          "122:         }",
          "124:     }",
          "128:         $login_user = $this->checkLogin();",
          "129:         $item_id = I(\"item_id/d\") ? I(\"item_id/d\") : 0 ;",
          "130:         $page_id = I(\"page_id/d\") ? I(\"page_id/d\") : 0 ;",
          "131:         $uploadFile = $_FILES['file'] ;",
          "140:         }",
          "142:         if (!$uploadFile) {",
          "",
          "[Removed Lines]",
          "71:         $oss_open = D(\"Options\")->get(\"oss_open\" ) ;",
          "72:         if ($oss_open) {",
          "73:             $uploadFile = $_FILES['editormd-image-file'] ;",
          "74:             $url = upload_oss($uploadFile);",
          "75:             if ($url) {",
          "76:                 $sign = md5($url.time().rand()) ;",
          "77:                 $insert = array(",
          "78:                 \"sign\" => $sign,",
          "79:                 \"uid\" => $login_user['uid'],",
          "80:                 \"item_id\" => $item_id,",
          "81:                 \"page_id\" => $page_id,",
          "82:                 \"display_name\" => $uploadFile['name'],",
          "83:                 \"file_type\" => $uploadFile['type'],",
          "84:                 \"file_size\" => $uploadFile['size'],",
          "85:                 \"real_url\" => $url,",
          "86:                 \"addtime\" => time(),",
          "87:                 );",
          "88:                 $ret = D(\"UploadFile\")->add($insert);",
          "89:                 $url = get_domain().U(\"api/attachment/visitFile\",array(\"sign\" => $sign)).\"&showdoc=.jpg\";",
          "90:                 echo json_encode(array(\"url\"=>$url,\"success\"=>1));",
          "91:             }",
          "92:             return ;",
          "93:         }",
          "95:         $upload = new \\Think\\Upload();// \u5b9e\u4f8b\u5316\u4e0a\u4f20\u7c7b",
          "96:         $upload->maxSize  = 1003145728 ;// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u5927\u5c0f",
          "97:         $upload->allowExts  = array('jpg', 'gif', 'png', 'jpeg');// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u7c7b\u578b",
          "98:         $upload->rootPath = './../Public/Uploads/';// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u76ee\u5f55",
          "99:         $upload->savePath = '';// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u5b50\u76ee\u5f55",
          "100:         $info = $upload->uploadOne($_FILES['editormd-image-file']) ;",
          "101:         if(!$info) {// \u4e0a\u4f20\u9519\u8bef\u63d0\u793a\u9519\u8bef\u4fe1\u606f",
          "102:           $this->error($upload->getError());",
          "103:           return;",
          "104:         }else{// \u4e0a\u4f20\u6210\u529f \u83b7\u53d6\u4e0a\u4f20\u6587\u4ef6\u4fe1\u606f",
          "105:           $url = get_domain().__ROOT__.substr($upload->rootPath,1).$info['savepath'].$info['savename'] ;",
          "106:           $sign = md5($url.time().rand()) ;",
          "107:           $uploadFile = $_FILES['editormd-image-file'] ;",
          "108:           $insert = array(",
          "109:             \"sign\" => $sign,",
          "110:             \"uid\" => $login_user['uid'],",
          "111:             \"item_id\" => $item_id,",
          "112:             \"page_id\" => $page_id,",
          "113:             \"display_name\" => $uploadFile['name'],",
          "114:             \"file_type\" => $uploadFile['type'],",
          "115:             \"file_size\" => $uploadFile['size'],",
          "116:             \"real_url\" => $url,",
          "117:             \"addtime\" => time(),",
          "118:             );",
          "119:           $ret = D(\"UploadFile\")->add($insert);",
          "120:           $url = get_domain().U(\"api/attachment/visitFile\",array(\"sign\" => $sign)).\"&showdoc=.jpg\";",
          "121:           echo json_encode(array(\"url\"=>$url,\"success\"=>1));",
          "127:     public function pageAttachmentUpload(){",
          "133:         if (!$page_id) {",
          "134:             $this->sendError(10103,\"\u8bf7\u81f3\u5c11\u5148\u4fdd\u5b58\u4e00\u6b21\u9875\u9762\u5185\u5bb9\");",
          "135:             return;",
          "136:         }",
          "137:         if (!$this->checkItemPermn($login_user['uid'] , $item_id)) {",
          "138:             $this->sendError(10103);",
          "139:             return;",
          "",
          "[Added Lines]",
          "71:         $url = D(\"Attachment\")->upload($_FILES , 'editormd-image-file' , $login_user['uid'] , $item_id , $page_id ) ;",
          "72:         if ($url) {",
          "73:             echo json_encode(array(\"url\"=>$url,\"success\"=>1));",
          "79:     public function attachmentUpload(){",
          "86:         if( $page_id > 0 || $item_id > 0){",
          "87:             if (!$this->checkItemPermn($login_user['uid'] , $item_id)) {",
          "88:                 $this->sendError(10103);",
          "89:                 return;",
          "90:             }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "147:             return false;",
          "148:         }",
          "198:         }",
          "200:     }",
          "",
          "[Removed Lines]",
          "150:         $oss_open = D(\"Options\")->get(\"oss_open\" ) ;",
          "151:         if ($oss_open) {",
          "152:             $url = upload_oss($uploadFile);",
          "153:             if ($url) {",
          "154:                 $sign = md5($url.time().rand()) ;",
          "155:                 $insert = array(",
          "156:                 \"sign\" => $sign,",
          "157:                 \"uid\" => $login_user['uid'],",
          "158:                 \"item_id\" => $item_id,",
          "159:                 \"page_id\" => $page_id,",
          "160:                 \"display_name\" => $uploadFile['name'],",
          "161:                 \"file_type\" => $uploadFile['type'],",
          "162:                 \"file_size\" => $uploadFile['size'],",
          "163:                 \"real_url\" => $url,",
          "164:                 \"addtime\" => time(),",
          "165:                 );",
          "166:                 $ret = D(\"UploadFile\")->add($insert);",
          "167:                 $url = get_domain().U(\"api/attachment/visitFile\",array(\"sign\" => $sign));",
          "168:                 echo json_encode(array(\"url\"=>$url,\"success\"=>1));",
          "169:             }",
          "170:             return ;",
          "171:         }",
          "173:         $upload = new \\Think\\Upload();// \u5b9e\u4f8b\u5316\u4e0a\u4f20\u7c7b",
          "174:         $upload->maxSize  = 4145728000 ;// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u5927\u5c0f",
          "175:         $upload->rootPath = './../Public/Uploads/';// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u76ee\u5f55",
          "176:         $upload->savePath = '';// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u5b50\u76ee\u5f55",
          "177:         $info = $upload->uploadOne($uploadFile) ;",
          "178:         if(!$info) {// \u4e0a\u4f20\u9519\u8bef\u63d0\u793a\u9519\u8bef\u4fe1\u606f",
          "179:           $this->error($upload->getError());",
          "180:           return;",
          "181:         }else{// \u4e0a\u4f20\u6210\u529f \u83b7\u53d6\u4e0a\u4f20\u6587\u4ef6\u4fe1\u606f",
          "182:           $url = get_domain().__ROOT__.substr($upload->rootPath,1).$info['savepath'].$info['savename'] ;",
          "183:           $sign = md5($url.time().rand()) ;",
          "184:           $insert = array(",
          "185:             \"sign\" => $sign,",
          "186:             \"uid\" => $login_user['uid'],",
          "187:             \"item_id\" => $item_id,",
          "188:             \"page_id\" => $page_id,",
          "189:             \"display_name\" => $uploadFile['name'],",
          "190:             \"file_type\" => $uploadFile['type'],",
          "191:             \"file_size\" => $uploadFile['size'],",
          "192:             \"real_url\" => $url,",
          "193:             \"addtime\" => time(),",
          "194:             );",
          "195:           $ret = D(\"UploadFile\")->add($insert);",
          "196:           $url = get_domain().U(\"api/attachment/visitFile\",array(\"sign\" => $sign));",
          "197:           echo json_encode(array(\"url\"=>$url,\"success\"=>1));",
          "",
          "[Added Lines]",
          "101:         $url = D(\"Attachment\")->upload($_FILES , 'file' , $login_user['uid'] , $item_id , $page_id ) ;",
          "102:         if ($url) {",
          "103:             echo json_encode(array(\"url\"=>$url,\"success\"=>1));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "208:             return;",
          "209:         }",
          "210:         $return = array() ;",
          "212:         if ($files) {",
          "213:             $item_id = $files[0]['item_id'] ;",
          "214:             if (!$this->checkItemVisit($login_user['uid'] , $item_id)) {",
          "",
          "[Removed Lines]",
          "211:         $files = D(\"UploadFile\")->where(\"page_id = '$page_id' \")->order(\"addtime desc\")->select();",
          "",
          "[Added Lines]",
          "117:         $files = D(\"UploadFile\")->join(\" file_page on file_page.file_id = upload_file.file_id\")->field(\"upload_file.* , file_page.item_id as item_id ,file_page.page_id as page_id  \")->where(\"file_page.page_id = '$page_id' \")->order(\"file_page.addtime desc\")->select();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "239:     public function deletePageUploadFile(){",
          "240:         $login_user = $this->checkLogin();",
          "241:         $file_id = I(\"file_id/d\") ? I(\"file_id/d\") : 0 ;",
          "252:         }else{",
          "254:         }",
          "255:     }",
          "",
          "[Removed Lines]",
          "243:         $file = D(\"UploadFile\")->where(\"file_id = '$file_id' \")->find();",
          "244:         $item_id = $file['item_id'] ;",
          "245:         if (!$this->checkItemPermn($login_user['uid'] , $item_id)) {",
          "246:             $this->sendError(10103);",
          "247:             return;",
          "248:         }",
          "249:         $ret = D(\"Page\")->deleteFile($file_id);",
          "250:         if ($ret) {",
          "251:             $this->sendResult(array());",
          "253:             $this->sendError(10101,\"\u5220\u9664\u5931\u8d25\");",
          "",
          "[Added Lines]",
          "148:         $page_id = I(\"page_id/d\") ? I(\"page_id/d\") : 0 ;",
          "149:         $count = D(\"FilePage\")->where(\" file_id = '$file_id' and page_id > 0   \")->count() ;",
          "150:         if($count <= 1 ){",
          "151:             $this->deleteMyAttachment();",
          "153:             $page = M(\"Page\")->where(\" page_id = '$page_id' \")->find();",
          "154:             if (!$this->checkItemPermn($login_user['uid'] , $page['item_id'])) {",
          "155:                 $this->sendError(10103);",
          "156:                 return;",
          "157:             }",
          "158:             $res = D(\"FilePage\")->where(\" file_id = '$file_id' and page_id = '$page_id'   \")->delete() ;",
          "159:             if($res){",
          "160:                 $this->sendResult(array());",
          "161:             }else{",
          "162:                 $this->sendError(10101,\"\u5220\u9664\u5931\u8d25\");",
          "163:             }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "328:         $file = D(\"UploadFile\")->where(\"file_id = '$file_id' \")->find();",
          "331:         if ($ret) {",
          "332:             $this->sendResult(array());",
          "333:         }else{",
          "",
          "[Removed Lines]",
          "330:         $ret = D(\"Page\")->deleteFile($file_id);",
          "",
          "[Added Lines]",
          "242:         $ret = D(\"Attachment\")->deleteFile($file_id);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "403:         $this->sendError(10101,\"\u5220\u9664\u5931\u8d25\");",
          "404:     }",
          "406: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "319:     public function bindingPage(){",
          "320:         $login_user = $this->checkLogin();",
          "321:         $file_id = I(\"file_id/d\") ? I(\"file_id/d\") : 0 ;",
          "322:         $page_id = I(\"page_id/d\");",
          "323:         $file = D(\"UploadFile\")->where(\"file_id = '$file_id' and uid ='$login_user[uid]' \")->find();",
          "324:         $page = M(\"Page\")->where(\" page_id = '$page_id' \")->find();",
          "325:         if (!$this->checkItemPermn($login_user['uid'] , $page['item_id'])) {",
          "326:             $this->sendError(10103);",
          "327:             return;",
          "328:         }",
          "329:         $insert = array(",
          "330:             \"file_id\" => $file_id,",
          "331:             \"item_id\" => $page['item_id'] ,",
          "332:             \"page_id\" => $page_id,",
          "333:             \"addtime\" => time(),",
          "334:             );",
          "335:         $ret = D(\"FilePage\")->add($insert);",
          "336:         if( $ret){",
          "337:             $this->sendResult(array());",
          "338:         }else{",
          "339:             $this->sendError(10101);",
          "340:         }",
          "342:     }",
          "",
          "---------------"
        ],
        "server/Application/Api/Controller/PageController.class.php||server/Application/Api/Controller/PageController.class.php": [
          "File: server/Application/Api/Controller/PageController.class.php -> server/Application/Api/Controller/PageController.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:            $page['addtime'] = date(\"Y-m-d H:i:s\",$page['addtime']);",
          "27:            $singlePage = M(\"SinglePage\")->where(\" page_id = '%d' \",array($page_id))->limit(1)->find();",
          "28:            if ($singlePage) {",
          "",
          "[Removed Lines]",
          "25:            $page['attachment_count'] = D(\"UploadFile\")->where(\"page_id = '$page_id' \")->count();",
          "",
          "[Added Lines]",
          "25:            $page['attachment_count'] = D(\"FilePage\")->where(\"page_id = '$page_id' \")->count();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "218:     public function upload(){",
          "221:     }",
          "223:     public function uploadList(){",
          "",
          "[Removed Lines]",
          "220:         R(\"Attachment/pageAttachmentUpload\");",
          "",
          "[Added Lines]",
          "220:         R(\"Attachment/attachmentUpload\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "284:            unset($page['cat_id']);",
          "285:            $page['addtime'] = date(\"Y-m-d H:i:s\",$page['addtime']);",
          "289:         }",
          "290:         $this->sendResult($page);",
          "",
          "[Removed Lines]",
          "287:            $page['attachment_count'] = D(\"UploadFile\")->where(\"page_id = '$page_id' \")->count();",
          "",
          "[Added Lines]",
          "287:            $page['attachment_count'] = D(\"FilePage\")->where(\"page_id = '$page_id' \")->count();",
          "",
          "---------------"
        ],
        "server/Application/Api/Controller/UpdateController.class.php||server/Application/Api/Controller/UpdateController.class.php": [
          "File: server/Application/Api/Controller/UpdateController.class.php -> server/Application/Api/Controller/UpdateController.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:     public function checkDb(){",
          "9:         $db_version_num = D(\"Options\")->get(\"db_version_num\");",
          "10:         if(!$db_version_num || $db_version_num < $version_num ){",
          "11:             $r = $this->updateSqlite();",
          "",
          "[Removed Lines]",
          "8:         $version_num = 4 ;",
          "",
          "[Added Lines]",
          "8:         $version_num = 5 ;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "329:             `last_update_time` CHAR(2000) NOT NULL DEFAULT ''",
          "330:             )\";",
          "331:         D(\"User\")->execute($sql);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "334:         $sql = \"CREATE TABLE IF NOT EXISTS `file_page` (",
          "335:             `id`  INTEGER PRIMARY KEY ,",
          "336:             `file_id` int(11) NOT NULL DEFAULT '0',",
          "337:             `page_id` int(11) NOT NULL DEFAULT '0',",
          "338:             `item_id` int(11) NOT NULL DEFAULT '0',",
          "339:             `addtime` CHAR(2000) NOT NULL DEFAULT ''",
          "340:             )\";",
          "341:         D(\"User\")->execute($sql);",
          "344:         if( !D(\"FilePage\")->find()){",
          "345:             $files = D(\"UploadFile\")->select() ;",
          "346:             if($files){",
          "347:                 foreach ($files as $key => $value) {",
          "348:                     D(\"FilePage\")->add( array(",
          "349:                         \"file_id\" => $value['file_id'] ,",
          "350:                         \"page_id\" => $value['page_id'] ,",
          "351:                         \"item_id\" => $value['item_id'] ,",
          "352:                         \"addtime\" => $value['addtime'] ,",
          "353:                     )) ;",
          "354:                 }",
          "355:             }",
          "356:         }",
          "",
          "---------------"
        ],
        "server/Application/Api/Model/AttachmentModel.class.php||server/Application/Api/Model/AttachmentModel.class.php": [
          "File: server/Application/Api/Model/AttachmentModel.class.php -> server/Application/Api/Model/AttachmentModel.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:    @unlink($file_path);",
          "46:   }",
          "47:   D(\"UploadFile\")->where(\" file_id = '$file_id' \")->delete();",
          "48:   return true ;",
          "50:  }",
          "52: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48:   D(\"FilePage\")->where(\" file_id = '$file_id' \")->delete();",
          "54:  public function upload($_files , $file_key , $uid , $item_id = 0  , $page_id = 0  ){",
          "55:   $uploadFile = $_files[$file_key] ;",
          "57:   if (strstr(strip_tags(strtolower($uploadFile['name'])), \".php\") ) {",
          "58:    return false;",
          "59:  }",
          "60:   $oss_open = D(\"Options\")->get(\"oss_open\" ) ;",
          "61:   if ($oss_open) {",
          "62:     $url = upload_oss($uploadFile);",
          "63:     if ($url) {",
          "64:       $sign = md5($url.time().rand()) ;",
          "65:       $insert = array(",
          "66:       \"sign\" => $sign,",
          "67:       \"uid\" => $uid,",
          "68:       \"item_id\" => $item_id,",
          "69:       \"page_id\" => $page_id,",
          "70:       \"display_name\" => $uploadFile['name'],",
          "71:       \"file_type\" => $uploadFile['type'],",
          "72:       \"file_size\" => $uploadFile['size'],",
          "73:       \"real_url\" => $url,",
          "74:       \"addtime\" => time(),",
          "75:       );",
          "76:       $file_id = D(\"UploadFile\")->add($insert);",
          "77:       $insert = array(",
          "78:        \"file_id\" => $file_id,",
          "79:        \"item_id\" => $item_id,",
          "80:        \"page_id\" => $page_id,",
          "81:        \"addtime\" => time(),",
          "82:        );",
          "83:       $ret = D(\"FilePage\")->add($insert);",
          "84:       $url = get_domain().U(\"api/attachment/visitFile\",array(\"sign\" => $sign));",
          "85:        return $url ;",
          "86:     }",
          "87:   }else{",
          "88:    $upload = new \\Think\\Upload();// \u5b9e\u4f8b\u5316\u4e0a\u4f20\u7c7b",
          "89:    $upload->maxSize  = 1003145728 ;// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u5927\u5c0f",
          "90:    $upload->rootPath = './../Public/Uploads/';// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u76ee\u5f55",
          "91:    $upload->savePath = '';// \u8bbe\u7f6e\u9644\u4ef6\u4e0a\u4f20\u5b50\u76ee\u5f55",
          "92:    $info = $upload->uploadOne($uploadFile) ;",
          "93:    if(!$info) {// \u4e0a\u4f20\u9519\u8bef\u63d0\u793a\u9519\u8bef\u4fe1\u606f",
          "94:     var_dump($upload->getError());",
          "95:     return;",
          "96:    }else{// \u4e0a\u4f20\u6210\u529f \u83b7\u53d6\u4e0a\u4f20\u6587\u4ef6\u4fe1\u606f",
          "97:     $url = get_domain().__ROOT__.substr($upload->rootPath,1).$info['savepath'].$info['savename'] ;",
          "98:     $sign = md5($url.time().rand()) ;",
          "99:     $insert = array(",
          "100:      \"sign\" => $sign,",
          "101:      \"uid\" => $uid,",
          "102:      \"item_id\" => $item_id,",
          "103:      \"page_id\" => $page_id,",
          "104:      \"display_name\" => $uploadFile['name'],",
          "105:      \"file_type\" => $uploadFile['type'],",
          "106:      \"file_size\" => $uploadFile['size'],",
          "107:      \"real_url\" => $url,",
          "108:      \"addtime\" => time(),",
          "109:      );",
          "110:      $file_id = D(\"UploadFile\")->add($insert);",
          "111:      $insert = array(",
          "112:       \"file_id\" => $file_id,",
          "113:       \"item_id\" => $item_id,",
          "114:       \"page_id\" => $page_id,",
          "115:       \"addtime\" => time(),",
          "116:       );",
          "117:      $ret = D(\"FilePage\")->add($insert);",
          "118:     $url = get_domain().U(\"api/attachment/visitFile\",array(\"sign\" => $sign));",
          "119:     return $url ;",
          "120:    }",
          "121:   }",
          "122:   return false;",
          "123:  }",
          "",
          "---------------"
        ],
        "server/Application/Home/Controller/UpdateController.class.php||server/Application/Home/Controller/UpdateController.class.php": [
          "File: server/Application/Home/Controller/UpdateController.class.php -> server/Application/Home/Controller/UpdateController.class.php"
        ],
        "web_src/src/components/attachment/Index.vue||web_src/src/components/attachment/Index.vue": [
          "File: web_src/src/components/attachment/Index.vue -> web_src/src/components/attachment/Index.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:           <el-form-item>",
          "22:             <el-button @click=\"onSubmit\">{{$t('search')}}</el-button>",
          "23:           </el-form-item>",
          "24:         </el-form>",
          "25:         <P>{{$t('accumulated_used_sapce')}} {{used}}M , {{$t('month_flow')}} {{used_flow}}M</P>",
          "26:         <el-table :data=\"dataList\" style=\"width: 100%\">",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24:           <el-form-item>",
          "25:             <el-upload",
          "26:               class=\"upload-file\"",
          "27:               :action=\"uploadUrl\"",
          "28:               :on-success=\"uploadCallback\"",
          "29:               :on-error=\"uploadCallback\"",
          "30:               ref=\"uploadFile\"",
          "31:             >",
          "32:               <el-button>{{$t('upload')}}</el-button>",
          "33:             </el-upload>",
          "34:           </el-form-item>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "69:       positive_type: '1',",
          "70:       attachment_type: '-1',",
          "71:       used: 0,",
          "73:     }",
          "74:   },",
          "75:   methods: {",
          "",
          "[Removed Lines]",
          "72:       used_flow: 0",
          "",
          "[Added Lines]",
          "83:       used_flow: 0,",
          "84:       uploadUrl: DocConfig.server + '/api/page/upload'",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "120:     },",
          "121:     goback() {",
          "122:       this.$router.push({ path: '/item/index' })",
          "123:     }",
          "124:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "135:     },",
          "136:     uploadCallback(data) {",
          "137:       if (data.error_message) {",
          "138:         this.$alert(data.error_message)",
          "139:       }",
          "140:       let childRef = this.$refs.uploadFile // \u83b7\u53d6\u5b50\u7ec4\u4ef6",
          "141:       childRef.clearFiles()",
          "142:       this.getList()",
          "",
          "---------------"
        ],
        "web_src/src/components/item/show/show_regular_item/Index.vue||web_src/src/components/item/show/show_regular_item/Index.vue": [
          "File: web_src/src/components/item/show/show_regular_item/Index.vue -> web_src/src/components/item/show/show_regular_item/Index.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:               v-show=\"showfullPageBtn\"",
          "31:               @click=\"clickFullPage\"",
          "32:             ></i>",
          "36:               id=\"attachment\"",
          "37:               v-if=\"attachment_count\"",
          "42:           </div>",
          "43:           <div id=\"doc-body\">",
          "44:             <div id=\"page_md_content\" class=\"page_content_main\">",
          "",
          "[Removed Lines]",
          "33:             <el-badge",
          "34:               :value=\"attachment_count\"",
          "35:               class=\"item\"",
          "38:               @click.native=\"ShowAttachment\"",
          "39:             >",
          "40:               <i class=\"el-icon-upload\"></i>",
          "41:             </el-badge>",
          "",
          "[Added Lines]",
          "33:             <i",
          "34:               class=\"el-icon-upload item\"",
          "37:               @click=\"ShowAttachment\"",
          "38:             ></i>",
          "",
          "---------------"
        ],
        "web_src/src/components/page/edit/AttachmentList.vue||web_src/src/components/page/edit/AttachmentList.vue": [
          "File: web_src/src/components/page/edit/AttachmentList.vue -> web_src/src/components/page/edit/AttachmentList.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:         :visible.sync=\"dialogTableVisible\"",
          "10:         :close-on-click-modal=\"false\"",
          "11:       >",
          "25:         <el-table :data=\"content\">",
          "26:           <el-table-column property=\"addtime\" :label=\"$t('add_time')\" width=\"170\"></el-table-column>",
          "",
          "[Removed Lines]",
          "12:         <el-upload",
          "13:           class=\"upload-file\"",
          "14:           :action=\"uploadUrl\"",
          "15:           :on-success=\"clearFiles\"",
          "16:           :on-error=\"clearFiles\"",
          "17:           :data=\"uploadData\"",
          "18:           ref=\"uploadFile\"",
          "19:           v-if=\"manage\"",
          "20:         >",
          "21:           <el-button size=\"small\" type=\"primary\">{{$t('upload_file')}}</el-button>",
          "22:           <small>&nbsp;&nbsp;&nbsp;{{$t('file_size_tips')}}</small>",
          "23:         </el-upload>",
          "",
          "[Added Lines]",
          "12:         <el-form :inline=\"true\" class=\"demo-form-inline\">",
          "13:           <el-form-item>",
          "14:             <el-button @click=\"showFilehub\">{{$t('from_file_gub')}}</el-button>",
          "15:           </el-form-item>",
          "16:           <el-form-item>",
          "17:             <el-upload",
          "18:               class=\"upload-file\"",
          "19:               :action=\"uploadUrl\"",
          "20:               :on-success=\"uploadCallback\"",
          "21:               :on-error=\"uploadCallback\"",
          "22:               :data=\"uploadData\"",
          "23:               ref=\"uploadFile\"",
          "24:               v-if=\"manage\"",
          "25:             >",
          "26:               <el-button>{{$t('upload')}}</el-button>",
          "27:               <small>&nbsp;&nbsp;&nbsp;{{$t('file_size_tips')}}</small>",
          "28:             </el-upload>",
          "29:           </el-form-item>",
          "30:         </el-form>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:         </el-table>",
          "50:       </el-dialog>",
          "51:     </el-container>",
          "52:     <Footer></Footer>",
          "53:     <div class></div>",
          "54:   </div>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59:     <filehub :callback=\"get_content\" :item_id=\"item_id\" :page_id=\"page_id\" ref=\"filehub\"></filehub>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "58: </style>",
          "60: <script>",
          "61: export default {",
          "62:   props: {",
          "63:     callback: '',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "69: import filehub from '@/components/page/edit/Filehub'",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "73:       uploadUrl: DocConfig.server + '/api/page/upload'",
          "74:     }",
          "75:   },",
          "77:   computed: {",
          "78:     uploadData: function() {",
          "79:       return {",
          "",
          "[Removed Lines]",
          "76:   components: {},",
          "",
          "[Added Lines]",
          "85:   components: {",
          "86:     filehub",
          "87:   },",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "119:         var url = DocConfig.server + '/api/page/deleteUploadFile'",
          "120:         var params = new URLSearchParams()",
          "121:         params.append('file_id', file_id)",
          "122:         that.axios.post(url, params).then(function(response) {",
          "123:           if (response.data.error_code === 0) {",
          "124:             that.get_content()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "133:         params.append('page_id', that.page_id)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "144:         '\")'",
          "145:       this.callback(val)",
          "146:       this.dialogTableVisible = false",
          "147:     }",
          "148:   },",
          "149:   mounted() {}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "159:     },",
          "160:     uploadCallback(data) {",
          "161:       if (data.error_message) {",
          "162:         this.$alert(data.error_message)",
          "163:       }",
          "164:       let childRef = this.$refs.uploadFile // \u83b7\u53d6\u5b50\u7ec4\u4ef6",
          "165:       childRef.clearFiles()",
          "166:       this.get_content()",
          "167:     },",
          "169:     showFilehub() {",
          "170:       let childRef = this.$refs.filehub // \u83b7\u53d6\u5b50\u7ec4\u4ef6",
          "171:       childRef.show()",
          "",
          "---------------"
        ],
        "web_src/src/components/page/edit/Filehub.vue||web_src/src/components/page/edit/Filehub.vue": [
          "File: web_src/src/components/page/edit/Filehub.vue -> web_src/src/components/page/edit/Filehub.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <!-- \u9644\u4ef6 -->",
          "2: <template>",
          "3:   <div class=\"hello\">",
          "4:     <Header></Header>",
          "6:     <el-container class=\"container-narrow\">",
          "7:       <el-dialog",
          "8:         :title=\"$t('file_gub')\"",
          "9:         :visible.sync=\"dialogTableVisible\"",
          "10:         :close-on-click-modal=\"false\"",
          "11:         width=\"65%\"",
          "12:       >",
          "13:         <el-form :inline=\"true\" class=\"demo-form-inline\">",
          "14:           <el-form-item label>",
          "15:             <el-input v-model=\"display_name\" :placeholder=\"$t('display_name')\"></el-input>",
          "16:           </el-form-item>",
          "17:           <el-form-item label>",
          "18:             <el-select v-model=\"attachment_type\" placeholder>",
          "19:               <el-option :label=\"$t('all_attachment_type')\" value=\"-1\"></el-option>",
          "20:               <el-option :label=\"$t('image')\" value=\"1\"></el-option>",
          "21:               <el-option :label=\"$t('general_attachment')\" value=\"2\"></el-option>",
          "22:             </el-select>",
          "23:           </el-form-item>",
          "24:           <el-form-item>",
          "25:             <el-button @click=\"onSubmit\">{{$t('search')}}</el-button>",
          "26:           </el-form-item>",
          "27:           <el-form-item>",
          "28:             <el-upload",
          "29:               class=\"upload-file\"",
          "30:               :action=\"uploadUrl\"",
          "31:               :on-success=\"uploadCallback\"",
          "32:               :on-error=\"uploadCallback\"",
          "33:               ref=\"uploadFile\"",
          "34:             >",
          "35:               <el-button>{{$t('upload')}}</el-button>",
          "36:             </el-upload>",
          "37:           </el-form-item>",
          "38:         </el-form>",
          "39:         <P>{{$t('accumulated_used_sapce')}} {{used}}M , {{$t('month_flow')}} {{used_flow}}M</P>",
          "40:         <el-table :data=\"dataList\" style=\"width: 100%\">",
          "41:           <el-table-column prop=\"file_id\" :label=\"$t('file_id')\"></el-table-column>",
          "42:           <el-table-column prop=\"display_name\" :label=\"$t('display_name')\"></el-table-column>",
          "43:           <el-table-column prop=\"file_type\" :label=\"$t('file_type')\" width=\"160\"></el-table-column>",
          "44:           <el-table-column prop=\"file_size_m\" :label=\"$t('file_size_m')\" width=\"160\"></el-table-column>",
          "45:           <el-table-column prop=\"visit_times\" :label=\"$t('visit_times')\"></el-table-column>",
          "46:           <el-table-column prop=\"addtime\" :label=\"$t('add_time')\" width=\"160\"></el-table-column>",
          "47:           <el-table-column prop :label=\"operation\">",
          "48:             <template slot-scope=\"scope\">",
          "49:               <el-button @click=\"select(scope.row)\" type=\"text\" size=\"small\">{{$t('select')}}</el-button>",
          "50:               <el-button @click=\"visit(scope.row)\" type=\"text\" size=\"small\">{{$t('visit')}}</el-button>",
          "51:               <el-button @click=\"delete_row(scope.row)\" type=\"text\" size=\"small\">{{$t('delete')}}</el-button>",
          "52:             </template>",
          "53:           </el-table-column>",
          "54:         </el-table>",
          "56:         <div class=\"block\">",
          "57:           <span class=\"demonstration\"></span>",
          "58:           <el-pagination",
          "59:             @current-change=\"handleCurrentChange\"",
          "60:             :page-size=\"count\"",
          "61:             layout=\"total, prev, pager, next\"",
          "62:             :total=\"total\"",
          "63:           ></el-pagination>",
          "64:         </div>",
          "65:       </el-dialog>",
          "66:     </el-container>",
          "67:     <Footer></Footer>",
          "68:     <div class></div>",
          "69:   </div>",
          "70: </template>",
          "72: <style>",
          "73: </style>",
          "75: <script>",
          "76: export default {",
          "77:   props: {",
          "78:     callback: '',",
          "79:     page_id: '',",
          "80:     item_id: '',",
          "81:     manage: true",
          "82:   },",
          "83:   data() {",
          "84:     return {",
          "85:       dialogTableVisible: false,",
          "86:       page: 1,",
          "87:       count: 5,",
          "88:       display_name: '',",
          "89:       username: '',",
          "90:       dataList: [],",
          "91:       total: 0,",
          "92:       positive_type: '1',",
          "93:       attachment_type: '-1',",
          "94:       used: 0,",
          "95:       used_flow: 0,",
          "96:       uploadUrl: DocConfig.server + '/api/page/upload'",
          "97:     }",
          "98:   },",
          "99:   components: {},",
          "100:   computed: {",
          "101:     uploadData: function() {",
          "102:       return {",
          "103:         page_id: this.page_id,",
          "104:         item_id: this.item_id",
          "105:       }",
          "106:     }",
          "107:   },",
          "108:   methods: {",
          "109:     getList() {",
          "110:       this.request('/api/attachment/getMyList', {",
          "111:         page: this.page,",
          "112:         count: this.count,",
          "113:         attachment_type: this.attachment_type,",
          "114:         display_name: this.display_name,",
          "115:         username: this.username",
          "116:       }).then(data => {",
          "117:         var json = data.data",
          "118:         this.dataList = json.list",
          "119:         this.total = parseInt(json.total)",
          "120:         this.used = json.used_m",
          "121:         this.used_flow = json.used_flow_m",
          "122:       })",
          "123:     },",
          "124:     show() {",
          "125:       this.dialogTableVisible = true",
          "126:       this.getList()",
          "127:     },",
          "128:     handleCurrentChange(currentPage) {",
          "129:       this.page = currentPage",
          "130:       this.getList()",
          "131:     },",
          "132:     onSubmit() {",
          "133:       this.page = 1",
          "134:       this.getList()",
          "135:     },",
          "136:     visit(row) {",
          "137:       window.open(row.url)",
          "138:     },",
          "139:     delete_row(row) {",
          "140:       this.$confirm(this.$t('confirm_delete'), ' ', {",
          "141:         confirmButtonText: this.$t('confirm'),",
          "142:         cancelButtonText: this.$t('cancel'),",
          "143:         type: 'warning'",
          "144:       }).then(() => {",
          "145:         this.request('/api/attachment/deleteMyAttachment', {",
          "146:           file_id: row.file_id",
          "147:         }).then(data => {",
          "148:           this.$message.success(this.$t('op_success'))",
          "149:           this.getList()",
          "150:         })",
          "151:       })",
          "152:     },",
          "153:     uploadCallback(data) {",
          "154:       if (data.error_message) {",
          "155:         this.$alert(data.error_message)",
          "156:       }",
          "157:       let childRef = this.$refs.uploadFile // \u83b7\u53d6\u5b50\u7ec4\u4ef6",
          "158:       childRef.clearFiles()",
          "159:       this.getList()",
          "160:     },",
          "161:     select(row) {",
          "162:       this.request('/api/attachment/bindingPage', {",
          "163:         file_id: row.file_id,",
          "164:         page_id: this.page_id",
          "165:       }).then(data => {",
          "166:         this.dialogTableVisible = false",
          "167:         this.callback()",
          "168:       })",
          "169:     }",
          "171:   },",
          "172:   mounted() {}",
          "173: }",
          "174: </script>",
          "",
          "---------------"
        ],
        "web_src/static/lang/en.js||web_src/static/lang/en.js": [
          "File: web_src/static/lang/en.js -> web_src/static/lang/en.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "396:   cancelSingle: 'Are you sure you want to cancel the single page link? After cancellation, the original link will be invalid immediately',",
          "397:   cancelSingleYes: 'Unlink single page',",
          "400: }",
          "",
          "[Removed Lines]",
          "398:   cancelSingleNo: 'Keep single page'",
          "",
          "[Added Lines]",
          "398:   cancelSingleNo: 'Keep single page',",
          "400:   from_file_gub: 'From FileHub',",
          "401:   file_gub: 'FileHub',",
          "402:   select: 'select'",
          "",
          "---------------"
        ],
        "web_src/static/lang/zh-CN.js||web_src/static/lang/zh-CN.js": [
          "File: web_src/static/lang/zh-CN.js -> web_src/static/lang/zh-CN.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "369:   attachment_manage: '\u9644\u4ef6\u7ba1\u7406',",
          "370:   op_success: '\u64cd\u4f5c\u6210\u529f',",
          "371:   display_name: '\u5c55\u793a\u540d\u5b57',",
          "373:   image: '\u56fe\u7247',",
          "375:   uploader: '\u4e0a\u4f20\u8005',",
          "376:   file_id: '\u6587\u4ef6id',",
          "377:   file_type: '\u6587\u4ef6\u7c7b\u578b',",
          "378:   file_size_m: '\u6587\u4ef6\u5927\u5c0f/mb',",
          "379:   visit: '\u67e5\u770b',",
          "380:   visit_times: '\u8bbf\u95ee\u6b21\u6570',",
          "382:   accumulated_used_sapce: '\u7d2f\u8ba1\u5df2\u4f7f\u7528\u7a7a\u95f4',",
          "383:   month_flow: '\u672c\u6708\u5df2\u4f7f\u7528\u6d41\u91cf',",
          "",
          "[Removed Lines]",
          "372:   all_attachment_type: '\u5168\u90e8\u9644\u4ef6\u7c7b\u578b',",
          "374:   general_attachment: '\u666e\u901a\u9644\u4ef6',",
          "381:   my_attachment: '\u6211\u7684\u9644\u4ef6',",
          "",
          "[Added Lines]",
          "372:   all_attachment_type: '\u5168\u90e8\u6587\u4ef6\u7c7b\u578b',",
          "374:   general_attachment: '\u5176\u5b83\u6587\u4ef6',",
          "381:   my_attachment: '\u6587\u4ef6\u5e93',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "387:   cancelSingle: '\u662f\u5426\u786e\u5b9a\u53d6\u6d88\u5355\u9875\u94fe\u63a5\uff1f\u53d6\u6d88\u540e\uff0c\u539f\u94fe\u63a5\u4f1a\u7acb\u9a6c\u5931\u6548',",
          "388:   cancelSingleYes: '\u53d6\u6d88\u5355\u9875\u94fe\u63a5',",
          "390: }",
          "",
          "[Removed Lines]",
          "389:   cancelSingleNo: '\u4fdd\u7559\u5355\u9875\u94fe\u63a5'",
          "",
          "[Added Lines]",
          "389:   cancelSingleNo: '\u4fdd\u7559\u5355\u9875\u94fe\u63a5',",
          "391:   from_file_gub: '\u4ece\u6587\u4ef6\u5e93\u9009\u62e9',",
          "392:   file_gub: '\u6587\u4ef6\u5e93',",
          "393:   select: '\u9009\u62e9'",
          "",
          "---------------"
        ]
      }
    }
  ]
}