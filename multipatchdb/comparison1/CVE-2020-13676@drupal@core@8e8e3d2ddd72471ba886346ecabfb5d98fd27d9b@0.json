{
  "cve_id": "CVE-2020-13676",
  "cve_desc": "The QuickEdit module does not properly check access to fields in some circumstances, which can lead to unintended disclosure of field data. Sites are only affected if the QuickEdit module (which comes with the Standard profile) is installed.",
  "repo": "drupal/core",
  "patch_hash": "8e8e3d2ddd72471ba886346ecabfb5d98fd27d9b",
  "patch_info": {
    "commit_hash": "8e8e3d2ddd72471ba886346ecabfb5d98fd27d9b",
    "repo": "drupal/core",
    "commit_url": "https://github.com/drupal/core/commit/8e8e3d2ddd72471ba886346ecabfb5d98fd27d9b",
    "files": [
      "modules/quickedit/src/MetadataGenerator.php",
      "modules/quickedit/tests/modules/src/MockQuickEditEntityFieldAccessCheck.php",
      "modules/quickedit/tests/src/FunctionalJavascript/LayoutBuilderQuickEditTest.php",
      "modules/quickedit/tests/src/FunctionalJavascript/QuickEditImageTest.php",
      "modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php",
      "modules/quickedit/tests/src/Kernel/EditorIntegrationTest.php",
      "modules/quickedit/tests/src/Kernel/MetadataGeneratorTest.php"
    ],
    "message": "SA-CORE-2021-009 by illeace, Wim Leers, xjm, effulgentsia, larowlan, pandaski, vijaycs85, phenaproxima, mcdruid",
    "before_after_code_files": [
      "modules/quickedit/src/MetadataGenerator.php||modules/quickedit/src/MetadataGenerator.php",
      "modules/quickedit/tests/modules/src/MockQuickEditEntityFieldAccessCheck.php||modules/quickedit/tests/modules/src/MockQuickEditEntityFieldAccessCheck.php",
      "modules/quickedit/tests/src/FunctionalJavascript/LayoutBuilderQuickEditTest.php||modules/quickedit/tests/src/FunctionalJavascript/LayoutBuilderQuickEditTest.php",
      "modules/quickedit/tests/src/FunctionalJavascript/QuickEditImageTest.php||modules/quickedit/tests/src/FunctionalJavascript/QuickEditImageTest.php",
      "modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php||modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php",
      "modules/quickedit/tests/src/Kernel/EditorIntegrationTest.php||modules/quickedit/tests/src/Kernel/EditorIntegrationTest.php",
      "modules/quickedit/tests/src/Kernel/MetadataGeneratorTest.php||modules/quickedit/tests/src/Kernel/MetadataGeneratorTest.php"
    ]
  },
  "patch_diff": {
    "modules/quickedit/src/MetadataGenerator.php||modules/quickedit/src/MetadataGenerator.php": [
      "File: modules/quickedit/src/MetadataGenerator.php -> modules/quickedit/src/MetadataGenerator.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "70:     $access = $this->accessChecker->accessEditEntityField($entity, $field_name);",
      "72:       return ['access' => FALSE];",
      "73:     }",
      "",
      "[Removed Lines]",
      "71:     if (!$access) {",
      "",
      "[Added Lines]",
      "71:     if (!$access->isAllowed()) {",
      "",
      "---------------"
    ],
    "modules/quickedit/tests/modules/src/MockQuickEditEntityFieldAccessCheck.php||modules/quickedit/tests/modules/src/MockQuickEditEntityFieldAccessCheck.php": [
      "File: modules/quickedit/tests/modules/src/MockQuickEditEntityFieldAccessCheck.php -> modules/quickedit/tests/modules/src/MockQuickEditEntityFieldAccessCheck.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: namespace Drupal\\quickedit_test;",
      "5: use Drupal\\Core\\Entity\\EntityInterface;",
      "6: use Drupal\\quickedit\\Access\\QuickEditEntityFieldAccessCheckInterface;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5: use Drupal\\Core\\Access\\AccessResult;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "16:   public function accessEditEntityField(EntityInterface $entity, $field_name) {",
      "18:   }",
      "20: }",
      "",
      "[Removed Lines]",
      "17:     return TRUE;",
      "",
      "[Added Lines]",
      "18:     switch (\\Drupal::state()->get('quickedit_test_field_access')) {",
      "19:       case 'allowed':",
      "20:         return AccessResult::allowed();",
      "22:       case 'neutral':",
      "23:         return AccessResult::neutral();",
      "25:       case 'forbidden':",
      "26:         return AccessResult::forbidden();",
      "28:       default:",
      "29:         throw new \\OutOfRangeException(\"The state for the 'quickedit_test_field_access' key must be either 'allowed', 'neutral' or 'forbidden'.\");",
      "30:     }",
      "",
      "---------------"
    ],
    "modules/quickedit/tests/src/FunctionalJavascript/LayoutBuilderQuickEditTest.php||modules/quickedit/tests/src/FunctionalJavascript/LayoutBuilderQuickEditTest.php": [
      "File: modules/quickedit/tests/src/FunctionalJavascript/LayoutBuilderQuickEditTest.php -> modules/quickedit/tests/src/FunctionalJavascript/LayoutBuilderQuickEditTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "113:     $this->drupalLogin($this->contentAuthorUser);",
      "114:     $this->usingLayoutBuilder = TRUE;",
      "115:     $this->assertQuickEditInit(['title', 'uid', 'created']);",
      "116:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "115:     $this->assertQuickEditInit(['title']);",
      "116:     $this->drupalLogin($this->drupalCreateUser([",
      "117:       'access contextual links',",
      "118:       'access in-place editing',",
      "119:       'access content',",
      "120:       'edit any article content',",
      "121:       'administer nodes',",
      "122:     ]));",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "127:     if (!$use_revisions) {",
      "128:       $content_type = NodeType::load('article');",
      "129:       $content_type->setNewRevision(FALSE);",
      "",
      "[Removed Lines]",
      "126:   public function testEnableDisableLayoutBuilder($use_revisions) {",
      "",
      "[Added Lines]",
      "134:   public function testEnableDisableLayoutBuilder($use_revisions, $admin_permission = FALSE) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "131:     }",
      "132:     $fields = [",
      "133:       'title',",
      "136:       'body',",
      "137:     ];",
      "140:     $this->assertQuickEditInit($fields);",
      "",
      "[Removed Lines]",
      "134:       'uid',",
      "135:       'created',",
      "",
      "[Added Lines]",
      "144:     if ($admin_permission) {",
      "145:       $fields = array_merge($fields, ['uid', 'created']);",
      "146:       $this->drupalLogin($this->drupalCreateUser([",
      "147:         'access contextual links',",
      "148:         'access in-place editing',",
      "149:         'access content',",
      "150:         'edit any article content',",
      "151:         'administer nodes',",
      "152:       ]));",
      "153:     }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "169:   public function providerEnableDisableLayoutBuilder() {",
      "170:     return [",
      "173:     ];",
      "174:   }",
      "",
      "[Removed Lines]",
      "171:       'use revisions' => [TRUE],",
      "172:       'do not use revisions' => [FALSE],",
      "",
      "[Added Lines]",
      "187:       'use revisions, not admin' => [TRUE],",
      "188:       'do not use revisions, not admin' => [FALSE],",
      "189:       'use revisions, admin' => [TRUE, TRUE],",
      "190:       'do not use revisions, admin' => [FALSE, TRUE],",
      "",
      "---------------"
    ],
    "modules/quickedit/tests/src/FunctionalJavascript/QuickEditImageTest.php||modules/quickedit/tests/src/FunctionalJavascript/QuickEditImageTest.php": [
      "File: modules/quickedit/tests/src/FunctionalJavascript/QuickEditImageTest.php -> modules/quickedit/tests/src/FunctionalJavascript/QuickEditImageTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "43:     $this->drupalCreateContentType(['type' => 'article', 'name' => 'Article']);",
      "47:       'access contextual links',",
      "48:       'access toolbar',",
      "49:       'access in-place editing',",
      "",
      "[Removed Lines]",
      "46:     $this->contentAuthorUser = $this->drupalCreateUser([",
      "",
      "[Added Lines]",
      "44:   }",
      "54:   public function testImageInPlaceEditor($admin_permission = FALSE) {",
      "56:     $permissions = [",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "51:       'create article content',",
      "52:       'edit any article content',",
      "53:       'delete any article content',",
      "55:     $this->drupalLogin($this->contentAuthorUser);",
      "66:     $field_name = strtolower($this->randomMachineName());",
      "67:     $field_settings = [",
      "",
      "[Removed Lines]",
      "54:     ]);",
      "56:   }",
      "64:   public function testImageInPlaceEditor() {",
      "",
      "[Added Lines]",
      "64:     ];",
      "65:     if ($admin_permission) {",
      "66:       $permissions[] = 'administer nodes';",
      "67:     }",
      "68:     $this->contentAuthorUser = $this->drupalCreateUser($permissions);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "126:     $this->assertEntityInstanceStates([",
      "127:       'node/1[0]' => 'closed',",
      "128:     ]);",
      "129:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
      "130:       'node/1/title/en/full'               => 'inactive',",
      "133:       'node/1/body/en/full'                => 'inactive',",
      "134:       'node/1/' . $field_name . '/en/full' => 'inactive',",
      "138:     $this->startQuickEditViaToolbar('node', 1, 0);",
      "",
      "[Removed Lines]",
      "131:       'node/1/uid/en/full'                 => 'inactive',",
      "132:       'node/1/created/en/full'             => 'inactive',",
      "135:     ]);",
      "",
      "[Added Lines]",
      "135:     $admin_inactive = [];",
      "136:     $admin_candidate = [];",
      "137:     if ($admin_permission) {",
      "138:       $admin_inactive = [",
      "139:         'node/1/uid/en/full' => 'inactive',",
      "140:         'node/1/created/en/full' => 'inactive',",
      "141:       ];",
      "142:       $admin_candidate = [",
      "143:         'node/1/uid/en/full' => 'candidate',",
      "144:         'node/1/created/en/full' => 'candidate',",
      "145:       ];",
      "146:     }",
      "152:     ] + $admin_inactive);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "142:     $this->assertQuickEditEntityToolbar((string) $node->label(), NULL);",
      "143:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
      "144:       'node/1/title/en/full'               => 'candidate',",
      "147:       'node/1/body/en/full'                => 'candidate',",
      "148:       'node/1/' . $field_name . '/en/full' => 'candidate',",
      "152:     $this->click($field_selector);",
      "",
      "[Removed Lines]",
      "145:       'node/1/uid/en/full'                 => 'candidate',",
      "146:       'node/1/created/en/full'             => 'candidate',",
      "149:     ]);",
      "",
      "[Added Lines]",
      "164:     ] + $admin_candidate);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "154:     $this->assertSession()->elementExists('css', $field_selector . ' .quickedit-image-dropzone');",
      "155:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
      "156:       'node/1/title/en/full'               => 'candidate',",
      "159:       'node/1/body/en/full'                => 'candidate',",
      "160:       'node/1/' . $field_name . '/en/full' => 'active',",
      "164:     $this->typeInImageEditorAltTextInput('New text');",
      "165:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
      "166:       'node/1/title/en/full'               => 'candidate',",
      "169:       'node/1/body/en/full'                => 'candidate',",
      "170:       'node/1/' . $field_name . '/en/full' => 'changed',",
      "174:     $this->dropImageOnImageEditor($valid_images[1]->uri);",
      "",
      "[Removed Lines]",
      "157:       'node/1/uid/en/full'                 => 'candidate',",
      "158:       'node/1/created/en/full'             => 'candidate',",
      "161:     ]);",
      "167:       'node/1/uid/en/full'                 => 'candidate',",
      "168:       'node/1/created/en/full'             => 'candidate',",
      "171:     ]);",
      "",
      "[Added Lines]",
      "174:     ] + $admin_candidate);",
      "182:     ] + $admin_candidate);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "184:     ]);",
      "185:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
      "186:       'node/1/title/en/full'               => 'candidate',",
      "189:       'node/1/body/en/full'                => 'candidate',",
      "190:       'node/1/' . $field_name . '/en/full' => 'saving',",
      "192:     $this->assertEntityInstanceFieldMarkup([",
      "193:       'node/1/' . $field_name . '/en/full' => '.quickedit-changed',",
      "194:     ]);",
      "",
      "[Removed Lines]",
      "187:       'node/1/uid/en/full'                 => 'candidate',",
      "188:       'node/1/created/en/full'             => 'candidate',",
      "191:     ]);",
      "",
      "[Added Lines]",
      "200:     ] + $admin_candidate);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "208:     $this->assertSession()->elementExists('css', $entity_selector . ' ' . $field_selector . ' ' . $new_image_selector);",
      "209:   }",
      "211: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "226:   public function providerTestImageInPlaceEditor(): array {",
      "227:     return [",
      "228:       'with permission' => [TRUE],",
      "229:       'without permission' => [FALSE],",
      "230:     ];",
      "231:   }",
      "",
      "---------------"
    ],
    "modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php||modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php": [
      "File: modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php -> modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "146:     ]);",
      "147:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
      "148:       'node/1/title/en/full'      => 'inactive',",
      "151:       'node/1/body/en/full'       => 'inactive',",
      "152:       'node/1/field_tags/en/full' => 'inactive',",
      "153:     ]);",
      "",
      "[Removed Lines]",
      "149:       'node/1/uid/en/full'        => 'inactive',",
      "150:       'node/1/created/en/full'    => 'inactive',",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "160:     $this->assertQuickEditEntityToolbar((string) $node->label(), NULL);",
      "161:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
      "162:       'node/1/title/en/full'      => 'candidate',",
      "165:       'node/1/body/en/full'       => 'candidate',",
      "166:       'node/1/field_tags/en/full' => 'candidate',",
      "167:     ]);",
      "",
      "[Removed Lines]",
      "163:       'node/1/uid/en/full'        => 'candidate',",
      "164:       'node/1/created/en/full'    => 'candidate',",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "174:     $this->assertQuickEditEntityToolbar((string) $node->label(), 'Title');",
      "175:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
      "176:       'node/1/title/en/full'      => 'active',",
      "179:       'node/1/body/en/full'       => 'candidate',",
      "180:       'node/1/field_tags/en/full' => 'candidate',",
      "181:     ]);",
      "",
      "[Removed Lines]",
      "177:       'node/1/uid/en/full'        => 'candidate',",
      "178:       'node/1/created/en/full'    => 'candidate',",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "188:     $this->awaitEntityInstanceFieldState('node', 1, 0, 'title', 'en', 'changed');",
      "189:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
      "190:       'node/1/title/en/full'      => 'changed',",
      "193:       'node/1/body/en/full'       => 'candidate',",
      "194:       'node/1/field_tags/en/full' => 'candidate',",
      "195:     ]);",
      "",
      "[Removed Lines]",
      "191:       'node/1/uid/en/full'        => 'candidate',",
      "192:       'node/1/created/en/full'    => 'candidate',",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "201:     $this->assertQuickEditEntityToolbar((string) $node->label(), 'Body');",
      "202:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
      "203:       'node/1/title/en/full'      => 'saving',",
      "206:       'node/1/body/en/full'       => 'active',",
      "207:       'node/1/field_tags/en/full' => 'candidate',",
      "208:     ]);",
      "",
      "[Removed Lines]",
      "204:       'node/1/uid/en/full'        => 'candidate',",
      "205:       'node/1/created/en/full'    => 'candidate',",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "223:     $assert_session->waitForElement('css', '.quickedit-toolbar-field div[id*=\"tags\"]');",
      "224:     $this->assertQuickEditEntityToolbar((string) $node->label(), 'Tags');",
      "225:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
      "228:       'node/1/body/en/full'       => 'candidate',",
      "229:       'node/1/field_tags/en/full' => 'activating',",
      "230:       'node/1/title/en/full'      => 'candidate',",
      "",
      "[Removed Lines]",
      "226:       'node/1/uid/en/full'        => 'candidate',",
      "227:       'node/1/created/en/full'    => 'candidate',",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "240:     $this->assertJsCondition('document.querySelector(\\'.quickedit-form-container > .quickedit-form[role=\"dialog\"] > .placeholder\\') === null');",
      "241:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
      "244:       'node/1/body/en/full'       => 'candidate',",
      "245:       'node/1/field_tags/en/full' => 'active',",
      "246:       'node/1/title/en/full'      => 'candidate',",
      "",
      "[Removed Lines]",
      "242:       'node/1/uid/en/full'        => 'candidate',",
      "243:       'node/1/created/en/full'    => 'candidate',",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "250:     $this->typeInFormEditorTextInputField('field_tags[target_id]', 'foo, bar');",
      "251:     $this->awaitEntityInstanceFieldState('node', 1, 0, 'field_tags', 'en', 'changed');",
      "252:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
      "255:       'node/1/body/en/full'       => 'candidate',",
      "256:       'node/1/field_tags/en/full' => 'changed',",
      "257:       'node/1/title/en/full'      => 'candidate',",
      "",
      "[Removed Lines]",
      "253:       'node/1/uid/en/full'        => 'candidate',",
      "254:       'node/1/created/en/full'    => 'candidate',",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "264:       'node/1[0]' => 'committing',",
      "265:     ]);",
      "266:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
      "269:       'node/1/body/en/full'       => 'candidate',",
      "270:       'node/1/field_tags/en/full' => 'saving',",
      "271:       'node/1/title/en/full'      => 'candidate',",
      "",
      "[Removed Lines]",
      "267:       'node/1/uid/en/full'        => 'candidate',",
      "268:       'node/1/created/en/full'    => 'candidate',",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "modules/quickedit/tests/src/Kernel/EditorIntegrationTest.php||modules/quickedit/tests/src/Kernel/EditorIntegrationTest.php": [
      "File: modules/quickedit/tests/src/Kernel/EditorIntegrationTest.php -> modules/quickedit/tests/src/Kernel/EditorIntegrationTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "181:     $items = $entity->get($this->fieldName);",
      "182:     $metadata = $this->metadataGenerator->generateFieldMetadata($items, 'default');",
      "183:     $expected = [",
      "184:       'access' => TRUE,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "182:     \\Drupal::state()->set('quickedit_test_field_access', 'forbidden');",
      "183:     $this->assertSame(['access' => FALSE], $this->metadataGenerator->generateFieldMetadata($items, 'default'));",
      "184:     \\Drupal::state()->set('quickedit_test_field_access', 'neutral');",
      "185:     $this->assertSame(['access' => FALSE], $this->metadataGenerator->generateFieldMetadata($items, 'default'));",
      "186:     \\Drupal::state()->set('quickedit_test_field_access', 'allowed');",
      "",
      "---------------"
    ],
    "modules/quickedit/tests/src/Kernel/MetadataGeneratorTest.php||modules/quickedit/tests/src/Kernel/MetadataGeneratorTest.php": [
      "File: modules/quickedit/tests/src/Kernel/MetadataGeneratorTest.php -> modules/quickedit/tests/src/Kernel/MetadataGeneratorTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "99:     $items_1 = $entity->get($field_1_name);",
      "100:     $metadata_1 = $this->metadataGenerator->generateFieldMetadata($items_1, 'default');",
      "101:     $expected_1 = [",
      "102:       'access' => TRUE,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "100:     \\Drupal::state()->set('quickedit_test_field_access', 'forbidden');",
      "101:     $this->assertSame(['access' => FALSE], $this->metadataGenerator->generateFieldMetadata($items_1, 'default'));",
      "102:     \\Drupal::state()->set('quickedit_test_field_access', 'neutral');",
      "103:     $this->assertSame(['access' => FALSE], $this->metadataGenerator->generateFieldMetadata($items_1, 'default'));",
      "104:     \\Drupal::state()->set('quickedit_test_field_access', 'allowed');",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "109:     $items_2 = $entity->get($field_2_name);",
      "110:     $metadata_2 = $this->metadataGenerator->generateFieldMetadata($items_2, 'default');",
      "111:     $expected_2 = [",
      "112:       'access' => TRUE,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "115:     \\Drupal::state()->set('quickedit_test_field_access', 'forbidden');",
      "116:     $this->assertSame(['access' => FALSE], $this->metadataGenerator->generateFieldMetadata($items_2, 'default'));",
      "117:     \\Drupal::state()->set('quickedit_test_field_access', 'neutral');",
      "118:     $this->assertSame(['access' => FALSE], $this->metadataGenerator->generateFieldMetadata($items_2, 'default'));",
      "119:     \\Drupal::state()->set('quickedit_test_field_access', 'allowed');",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "165:     $items = $entity->get($field_name);",
      "166:     $metadata = $this->metadataGenerator->generateFieldMetadata($items, 'default');",
      "167:     $expected = [",
      "168:       'access' => TRUE,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:     \\Drupal::state()->set('quickedit_test_field_access', 'forbidden');",
      "177:     $this->assertSame(['access' => FALSE], $this->metadataGenerator->generateFieldMetadata($items, 'default'));",
      "178:     \\Drupal::state()->set('quickedit_test_field_access', 'neutral');",
      "179:     $this->assertSame(['access' => FALSE], $this->metadataGenerator->generateFieldMetadata($items, 'default'));",
      "180:     \\Drupal::state()->set('quickedit_test_field_access', 'allowed');",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e2cc2de008bb1ba058e6859f5c74f827c8c2175c",
      "candidate_info": {
        "commit_hash": "e2cc2de008bb1ba058e6859f5c74f827c8c2175c",
        "repo": "drupal/core",
        "commit_url": "https://github.com/drupal/core/commit/e2cc2de008bb1ba058e6859f5c74f827c8c2175c",
        "files": [
          "modules/image/tests/src/FunctionalJavascript/QuickEditImageTest.php",
          "modules/layout_builder/tests/src/FunctionalJavascript/LayoutBuilderQuickEditTest.php",
          "modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php",
          "modules/quickedit/tests/src/FunctionalJavascript/QuickEditJavascriptTestBase.php",
          "modules/system/tests/modules/hold_test/hold_test.module",
          "modules/system/tests/modules/hold_test/src/EventSubscriber/HoldTestSubscriber.php",
          "tests/Drupal/FunctionalJavascriptTests/WebDriverCurlService.php"
        ],
        "message": "Issue #3037436 by alexpott, jonathan1055, Wim Leers, catch, tedbow, longwave: [random test failure] Make QuickEditIntegrationTest more robust and fail proof",
        "before_after_code_files": [
          "modules/image/tests/src/FunctionalJavascript/QuickEditImageTest.php||modules/image/tests/src/FunctionalJavascript/QuickEditImageTest.php",
          "modules/layout_builder/tests/src/FunctionalJavascript/LayoutBuilderQuickEditTest.php||modules/layout_builder/tests/src/FunctionalJavascript/LayoutBuilderQuickEditTest.php",
          "modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php||modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php",
          "modules/quickedit/tests/src/FunctionalJavascript/QuickEditJavascriptTestBase.php||modules/quickedit/tests/src/FunctionalJavascript/QuickEditJavascriptTestBase.php",
          "modules/system/tests/modules/hold_test/hold_test.module||modules/system/tests/modules/hold_test/hold_test.module",
          "modules/system/tests/modules/hold_test/src/EventSubscriber/HoldTestSubscriber.php||modules/system/tests/modules/hold_test/src/EventSubscriber/HoldTestSubscriber.php",
          "tests/Drupal/FunctionalJavascriptTests/WebDriverCurlService.php||tests/Drupal/FunctionalJavascriptTests/WebDriverCurlService.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php||modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php"
          ],
          "candidate": [
            "modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php||modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php"
          ]
        }
      },
      "candidate_diff": {
        "modules/image/tests/src/FunctionalJavascript/QuickEditImageTest.php||modules/image/tests/src/FunctionalJavascript/QuickEditImageTest.php": [
          "File: modules/image/tests/src/FunctionalJavascript/QuickEditImageTest.php -> modules/image/tests/src/FunctionalJavascript/QuickEditImageTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "23:   protected static $modules = ['node', 'image', 'field_ui'];",
          "",
          "[Added Lines]",
          "23:   protected static $modules = ['node', 'image', 'field_ui', 'hold_test'];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "178:     $this->prepareRequest();",
          "181:     $this->saveQuickEdit();",
          "182:     $this->assertEntityInstanceStates([",
          "183:       'node/1[0]' => 'committing',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "181:     hold_test_response(TRUE);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "189:       'node/1/body/en/full'                => 'candidate',",
          "190:       'node/1/' . $field_name . '/en/full' => 'saving',",
          "191:     ]);",
          "193:       'node/1/' . $field_name . '/en/full' => '.quickedit-changed',",
          "194:     ]);",
          "197:     $this->assertJsCondition(\"Drupal.quickedit.collections.entities.get('node/1[0]').get('state') === 'closed'\");",
          "",
          "[Removed Lines]",
          "192:     $this->assertEntityInstanceFieldMarkup('node', 1, 0, [",
          "",
          "[Added Lines]",
          "193:     $this->assertEntityInstanceFieldMarkup([",
          "196:     hold_test_response(FALSE);",
          "",
          "---------------"
        ],
        "modules/layout_builder/tests/src/FunctionalJavascript/LayoutBuilderQuickEditTest.php||modules/layout_builder/tests/src/FunctionalJavascript/LayoutBuilderQuickEditTest.php": [
          "File: modules/layout_builder/tests/src/FunctionalJavascript/LayoutBuilderQuickEditTest.php -> modules/layout_builder/tests/src/FunctionalJavascript/LayoutBuilderQuickEditTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "207:   }",
          "",
          "[Removed Lines]",
          "205:   protected function assertEntityInstanceFieldMarkup($entity_type_id, $entity_id, $entity_instance_id, array $expected_field_attributes) {",
          "206:     parent::assertEntityInstanceFieldMarkup($entity_type_id, $entity_id, $entity_instance_id, $this->replaceLayoutBuilderFieldIdKeys($expected_field_attributes));",
          "",
          "[Added Lines]",
          "205:   protected function assertEntityInstanceFieldMarkup($expected_field_attributes) {",
          "206:     if (func_num_args() === 4) {",
          "207:       $expected_field_attributes = func_get_arg(3);",
          "208:       @trigger_error('Calling ' . __METHOD__ . '() with 4 arguments is deprecated in drupal:9.1.0 and will throw an error in drupal:10.0.0. See https://www.drupal.org/project/drupal/issues/3037436', E_USER_DEPRECATED);",
          "209:     }",
          "210:     parent::assertEntityInstanceFieldMarkup($this->replaceLayoutBuilderFieldIdKeys($expected_field_attributes));",
          "",
          "---------------"
        ],
        "modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php||modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php": [
          "File: modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php -> modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "179:       'node/1/body/en/full'       => 'candidate',",
          "180:       'node/1/field_tags/en/full' => 'candidate',",
          "181:     ]);",
          "183:       'node/1/title/en/full' => '[contenteditable=\"true\"]',",
          "184:     ]);",
          "",
          "[Removed Lines]",
          "182:     $this->assertEntityInstanceFieldMarkup('node', 1, 0, [",
          "",
          "[Added Lines]",
          "182:     $this->assertEntityInstanceFieldMarkup([",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "208:     ]);",
          "209:     hold_test_response(FALSE);",
          "214:       'node/1/body/en/full'       => '.cke_editable_inline',",
          "215:       'node/1/field_tags/en/full' => ':not(.quickedit-editor-is-popup)',",
          "216:     ]);",
          "",
          "[Removed Lines]",
          "212:     $this->assertJsCondition('CKEDITOR.status === \"loaded\"');",
          "213:     $this->assertEntityInstanceFieldMarkup('node', 1, 0, [",
          "",
          "[Added Lines]",
          "211:     $this->assertEntityInstanceFieldMarkup([",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "231:       'node/1/field_tags/en/full' => 'activating',",
          "232:       'node/1/title/en/full'      => 'candidate',",
          "233:     ]);",
          "235:       'node/1/title/en/full'      => '.quickedit-changed',",
          "236:       'node/1/field_tags/en/full' => '.quickedit-editor-is-popup',",
          "237:     ]);",
          "",
          "[Removed Lines]",
          "234:     $this->assertEntityInstanceFieldMarkup('node', 1, 0, [",
          "",
          "[Added Lines]",
          "232:     $this->assertEntityInstanceFieldMarkup([",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "272:       'node/1/field_tags/en/full' => 'saving',",
          "273:       'node/1/title/en/full'      => 'candidate',",
          "274:     ]);",
          "277:       'node/1/title/en/full'      => '.quickedit-changed',",
          "278:       'node/1/field_tags/en/full' => '.quickedit-changed',",
          "279:     ]);",
          "282:     $this->assertJsCondition(\"Drupal.quickedit.collections.entities.get('node/1[0]').get('state') === 'closed'\");",
          "283:     $this->assertEntityInstanceStates([",
          "284:       'node/1[0]' => 'closed',",
          "285:     ]);",
          "286:   }",
          "",
          "[Removed Lines]",
          "275:     hold_test_response(FALSE);",
          "276:     $this->assertEntityInstanceFieldMarkup('node', 1, 0, [",
          "",
          "[Added Lines]",
          "273:     $this->assertEntityInstanceFieldMarkup([",
          "277:     hold_test_response(FALSE);",
          "286:     $this->drupalGet('node/' . $node->id());",
          "287:     $this->assertSession()->pageTextContains(' Llamas are awesome!');",
          "288:     $this->assertSession()->linkExists('foo');",
          "289:     $this->assertSession()->linkExists('bar');",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "336:     $this->assertEntityInstanceFieldStates('block_content', 1, 0, [",
          "337:       'block_content/1/body/en/full' => 'active',",
          "338:     ]);",
          "343:       'block_content/1/body/en/full' => '.cke_editable_inline',",
          "344:     ]);",
          "345:     $this->assertSession()->elementExists('css', '#quickedit-entity-toolbar .quickedit-toolgroup.wysiwyg-main > .cke_chrome .cke_top[role=\"presentation\"] .cke_toolbar[role=\"toolbar\"] .cke_toolgroup[role=\"presentation\"] > .cke_button[title~=\"Bold\"][role=\"button\"]');",
          "",
          "[Removed Lines]",
          "341:     $this->assertJsCondition('CKEDITOR.status === \"loaded\"');",
          "342:     $this->assertEntityInstanceFieldMarkup('block_content', 1, 0, [",
          "",
          "[Added Lines]",
          "343:     $this->assertEntityInstanceFieldMarkup([",
          "",
          "---------------"
        ],
        "modules/quickedit/tests/src/FunctionalJavascript/QuickEditJavascriptTestBase.php||modules/quickedit/tests/src/FunctionalJavascript/QuickEditJavascriptTestBase.php": [
          "File: modules/quickedit/tests/src/FunctionalJavascript/QuickEditJavascriptTestBase.php -> modules/quickedit/tests/src/FunctionalJavascript/QuickEditJavascriptTestBase.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "238:     foreach ($expected_field_states as $quickedit_field_id => $expected_field_state) {",
          "239:       $expected_field_attributes[$quickedit_field_id] = static::$expectedFieldStateAttributes[$expected_field_state];",
          "240:     }",
          "242:   }",
          "275:     foreach ($expected_field_attributes as $quickedit_field_id => $expectation) {",
          "277:     }",
          "278:   }",
          "",
          "[Removed Lines]",
          "241:     $this->assertEntityInstanceFieldMarkup($entity_type_id, $entity_id, $entity_instance_id, $expected_field_attributes);",
          "257:   protected function assertEntityInstanceFieldMarkup($entity_type_id, $entity_id, $entity_instance_id, array $expected_field_attributes) {",
          "258:     $entity_page_id = $entity_type_id . '/' . $entity_id . '[' . $entity_instance_id . ']';",
          "259:     $expected_field_attributes_json = json_encode($expected_field_attributes);",
          "260:     $js_match_field_element_attributes = <<<JS",
          "261: function () {",
          "262:   var expectations = $expected_field_attributes_json;",
          "263:   var entityCollection = Drupal.quickedit.collections.entities;",
          "264:   var entityModel = entityCollection.get('$entity_page_id');",
          "265:   return entityModel.get('fields').reduce(function (result, fieldModel) {",
          "266:     var fieldID = fieldModel.get('fieldID');",
          "267:     var element = fieldModel.get('el');",
          "268:     var matches = element.webkitMatchesSelector(expectations[fieldID]);",
          "269:     result[fieldID] = matches ? matches : element.outerHTML;",
          "270:     return result;",
          "271:   }, {});",
          "272: }()",
          "273: JS;",
          "274:     $result = $this->getSession()->evaluateScript($js_match_field_element_attributes);",
          "276:       $this->assertTrue($result[$quickedit_field_id], 'Field ' . $quickedit_field_id . ' did not match its expectation selector (' . $expectation . '), actual HTML: ' . $result[$quickedit_field_id]);",
          "",
          "[Added Lines]",
          "241:     $this->assertEntityInstanceFieldMarkup($expected_field_attributes);",
          "254:   protected function assertEntityInstanceFieldMarkup($expected_field_attributes) {",
          "255:     if (func_num_args() === 4) {",
          "256:       $expected_field_attributes = func_get_arg(3);",
          "257:       @trigger_error('Calling ' . __METHOD__ . '() with 4 arguments is deprecated in drupal:9.1.0 and will throw an error in drupal:10.0.0. See https://www.drupal.org/project/drupal/issues/3037436', E_USER_DEPRECATED);",
          "258:     }",
          "259:     if (!is_array($expected_field_attributes)) {",
          "260:       throw new \\InvalidArgumentException('The $expected_field_attributes argument must be an array.');",
          "261:     }",
          "263:       $element = $this->assertSession()->waitForElementVisible('css', '[data-quickedit-field-id=\"' . $quickedit_field_id . '\"]' . $expectation);",
          "264:       $this->assertNotEmpty($element, 'Field ' . $quickedit_field_id . ' did not match its expectation selector (' . $expectation . ')');",
          "",
          "---------------"
        ],
        "modules/system/tests/modules/hold_test/hold_test.module||modules/system/tests/modules/hold_test/hold_test.module": [
          "File: modules/system/tests/modules/hold_test/hold_test.module -> modules/system/tests/modules/hold_test/hold_test.module",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: use Drupal\\hold_test\\EventSubscriber\\HoldTestSubscriber;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "14: function hold_test_request($status) {",
          "15:   $site_path = \\Drupal::getContainer()->getParameter('site.path');",
          "16:   file_put_contents($site_path . '/hold_test_request.txt', $status);",
          "17: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21:   if (!$status) {",
          "22:     usleep(HoldTestSubscriber::WAIT * 2);",
          "23:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "25: function hold_test_response($status) {",
          "26:   $site_path = \\Drupal::getContainer()->getParameter('site.path');",
          "27:   file_put_contents($site_path . '/hold_test_response.txt', $status);",
          "28: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37:   if (!$status) {",
          "38:     usleep(HoldTestSubscriber::WAIT * 2);",
          "39:   }",
          "",
          "---------------"
        ],
        "modules/system/tests/modules/hold_test/src/EventSubscriber/HoldTestSubscriber.php||modules/system/tests/modules/hold_test/src/EventSubscriber/HoldTestSubscriber.php": [
          "File: modules/system/tests/modules/hold_test/src/EventSubscriber/HoldTestSubscriber.php -> modules/system/tests/modules/hold_test/src/EventSubscriber/HoldTestSubscriber.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:   const HOLD_REQUEST = 'request';",
          "14:   const HOLD_RESPONSE = 'response';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21:   const WAIT = 100000;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "54:     $path = \"{$this->sitePath}/hold_test_$type.txt\";",
          "55:     do {",
          "56:       $status = (bool) file_get_contents($path);",
          "58:   }",
          "",
          "[Removed Lines]",
          "57:     } while ($status && (NULL === usleep(100000)));",
          "",
          "[Added Lines]",
          "64:     } while ($status && (NULL === usleep(static::WAIT)));",
          "",
          "---------------"
        ],
        "tests/Drupal/FunctionalJavascriptTests/WebDriverCurlService.php||tests/Drupal/FunctionalJavascriptTests/WebDriverCurlService.php": [
          "File: tests/Drupal/FunctionalJavascriptTests/WebDriverCurlService.php -> tests/Drupal/FunctionalJavascriptTests/WebDriverCurlService.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:         $retries++;",
          "115:       }",
          "116:     }",
          "117:     throw WebDriverException::factory(WebDriverException::CURL_EXEC, sprintf(\"Curl error thrown for http %s to %s%s\\n\\n%s\", $requestMethod, $url, $parameters && is_array($parameters) ? ' with params: ' . json_encode($parameters) : '', $error));",
          "118:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117:     if (empty($error)) {",
          "118:       $error = \"Retries: $retries and last result:\\n\" . ($rawResult ?? '');",
          "119:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "04f8d1d7d0e6e8408b46bfa72cceea56eccbcbf0",
      "candidate_info": {
        "commit_hash": "04f8d1d7d0e6e8408b46bfa72cceea56eccbcbf0",
        "repo": "drupal/core",
        "commit_url": "https://github.com/drupal/core/commit/04f8d1d7d0e6e8408b46bfa72cceea56eccbcbf0",
        "files": [
          "modules/quickedit/js/models/EntityModel.es6.js",
          "modules/quickedit/js/models/EntityModel.js",
          "modules/quickedit/quickedit.module",
          "modules/quickedit/src/QuickEditController.php"
        ],
        "message": "SA-CORE-2021-007 by samuel.mortenson, Wim Leers, greggles, xjm, larowlan, vijaycs85, Heine, effulgentsia, phenaproxima, mcdruid, nod_",
        "before_after_code_files": [
          "modules/quickedit/js/models/EntityModel.es6.js||modules/quickedit/js/models/EntityModel.es6.js",
          "modules/quickedit/js/models/EntityModel.js||modules/quickedit/js/models/EntityModel.js",
          "modules/quickedit/quickedit.module||modules/quickedit/quickedit.module",
          "modules/quickedit/src/QuickEditController.php||modules/quickedit/src/QuickEditController.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/quickedit/js/models/EntityModel.es6.js||modules/quickedit/js/models/EntityModel.es6.js": [
          "File: modules/quickedit/js/models/EntityModel.es6.js -> modules/quickedit/js/models/EntityModel.es6.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "526:             options.success.call(entityModel);",
          "527:           }",
          "528:         };",
          "531:         entitySaverAjax.execute();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "529:         entitySaverAjax.options.headers = entitySaverAjax.options.headers || {};",
          "530:         entitySaverAjax.options.headers['X-Drupal-Quickedit-CSRF-Token'] =",
          "531:           drupalSettings.quickedit.csrf_token;",
          "",
          "---------------"
        ],
        "modules/quickedit/js/models/EntityModel.js||modules/quickedit/js/models/EntityModel.js": [
          "File: modules/quickedit/js/models/EntityModel.js -> modules/quickedit/js/models/EntityModel.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "235:         }",
          "236:       };",
          "238:       entitySaverAjax.execute();",
          "239:     },",
          "240:     validate: function validate(attrs, options) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "238:       entitySaverAjax.options.headers = entitySaverAjax.options.headers || {};",
          "239:       entitySaverAjax.options.headers['X-Drupal-Quickedit-CSRF-Token'] = drupalSettings.quickedit.csrf_token;",
          "",
          "---------------"
        ],
        "modules/quickedit/quickedit.module||modules/quickedit/quickedit.module": [
          "File: modules/quickedit/quickedit.module -> modules/quickedit/quickedit.module",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:     return;",
          "54:   }",
          "56:   $page['#attached']['library'][] = 'quickedit/quickedit';",
          "57: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56:   $page['#attached']['drupalSettings']['quickedit']['csrf_token'] = \\Drupal::csrfToken()->get('X-Drupal-Quickedit-CSRF-Token');",
          "",
          "---------------"
        ],
        "modules/quickedit/src/QuickEditController.php||modules/quickedit/src/QuickEditController.php": [
          "File: modules/quickedit/src/QuickEditController.php -> modules/quickedit/src/QuickEditController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: use Drupal\\Core\\Entity\\EntityRepositoryInterface;",
          "7: use Drupal\\Core\\Form\\FormState;",
          "8: use Drupal\\Core\\Render\\RendererInterface;",
          "9: use Drupal\\Core\\TempStore\\PrivateTempStoreFactory;",
          "10: use Symfony\\Component\\DependencyInjection\\ContainerInterface;",
          "11: use Symfony\\Component\\HttpFoundation\\JsonResponse;",
          "12: use Symfony\\Component\\HttpFoundation\\Request;",
          "13: use Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException;",
          "14: use Drupal\\Core\\Ajax\\AjaxResponse;",
          "15: use Drupal\\Core\\Entity\\EntityInterface;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9: use Drupal\\Core\\Session\\AccountInterface;",
          "14: use Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "157:     return new JsonResponse($metadata);",
          "158:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "170:   private static function checkCsrf(Request $request, AccountInterface $account) {",
          "171:     $header = 'X-Drupal-Quickedit-CSRF-Token';",
          "173:     if (!$request->headers->has($header)) {",
          "174:       throw new AccessDeniedHttpException();",
          "175:     }",
          "176:     if ($account->isAnonymous()) {",
          "179:       return;",
          "180:     }",
          "182:     $token = $request->headers->get($header);",
          "183:     if (!\\Drupal::csrfToken()->validate($token, $header)) {",
          "184:       throw new AccessDeniedHttpException();",
          "185:     }",
          "186:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "309:   public function entitySave(EntityInterface $entity) {",
          "312:     $tempstore = $this->tempStoreFactory->get('quickedit');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "338:     self::checkCsrf(\\Drupal::request(), \\Drupal::currentUser());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7a9bef4b4750d79ab42498e459012cabe4c4bd8b",
      "candidate_info": {
        "commit_hash": "7a9bef4b4750d79ab42498e459012cabe4c4bd8b",
        "repo": "drupal/core",
        "commit_url": "https://github.com/drupal/core/commit/7a9bef4b4750d79ab42498e459012cabe4c4bd8b",
        "files": [
          "modules/jsonapi/src/ResourceType/ResourceType.php"
        ],
        "message": "SA-CORE-2021-010 by bradjones1, xjm, bbrala, gabesullice, Wim Leers, e0ipso",
        "before_after_code_files": [
          "modules/jsonapi/src/ResourceType/ResourceType.php||modules/jsonapi/src/ResourceType/ResourceType.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/jsonapi/src/ResourceType/ResourceType.php||modules/jsonapi/src/ResourceType/ResourceType.php": [
          "File: modules/jsonapi/src/ResourceType/ResourceType.php -> modules/jsonapi/src/ResourceType/ResourceType.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "405:       $this->relatableResourceTypesByField = array_reduce(array_map(function (ResourceTypeRelationship $field) {",
          "406:         return [$field->getPublicName() => $field->getRelatableResourceTypes()];",
          "407:       }, array_filter($this->fields, function (ResourceTypeField $field) {",
          "409:       })), 'array_merge', []);",
          "410:     }",
          "411:     return $this->relatableResourceTypesByField;",
          "",
          "[Removed Lines]",
          "408:         return $field instanceof ResourceTypeRelationship;",
          "",
          "[Added Lines]",
          "408:         return $field instanceof ResourceTypeRelationship && $field->isFieldEnabled();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "425:   public function getRelatableResourceTypesByField($field_name) {",
          "427:       ? $field->getRelatableResourceTypes()",
          "428:       : [];",
          "429:   }",
          "",
          "[Removed Lines]",
          "426:     return ($field = $this->getFieldByPublicName($field_name)) && $field instanceof ResourceTypeRelationship",
          "",
          "[Added Lines]",
          "426:     return ($field = $this->getFieldByPublicName($field_name)) && $field instanceof ResourceTypeRelationship && $field->isFieldEnabled()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "32c4c413bcd03b2f91bb107283edb6a42f8c8f92",
      "candidate_info": {
        "commit_hash": "32c4c413bcd03b2f91bb107283edb6a42f8c8f92",
        "repo": "drupal/core",
        "commit_url": "https://github.com/drupal/core/commit/32c4c413bcd03b2f91bb107283edb6a42f8c8f92",
        "files": [
          "modules/quickedit/src/MetadataGenerator.php",
          "modules/quickedit/tests/modules/src/MockQuickEditEntityFieldAccessCheck.php",
          "modules/quickedit/tests/src/FunctionalJavascript/LayoutBuilderQuickEditTest.php",
          "modules/quickedit/tests/src/FunctionalJavascript/QuickEditImageTest.php",
          "modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php",
          "modules/quickedit/tests/src/Kernel/EditorIntegrationTest.php",
          "modules/quickedit/tests/src/Kernel/MetadataGeneratorTest.php"
        ],
        "message": "SA-CORE-2021-009 by illeace, Wim Leers, xjm, effulgentsia, larowlan, pandaski, vijaycs85, phenaproxima, mcdruid",
        "before_after_code_files": [
          "modules/quickedit/src/MetadataGenerator.php||modules/quickedit/src/MetadataGenerator.php",
          "modules/quickedit/tests/modules/src/MockQuickEditEntityFieldAccessCheck.php||modules/quickedit/tests/modules/src/MockQuickEditEntityFieldAccessCheck.php",
          "modules/quickedit/tests/src/FunctionalJavascript/LayoutBuilderQuickEditTest.php||modules/quickedit/tests/src/FunctionalJavascript/LayoutBuilderQuickEditTest.php",
          "modules/quickedit/tests/src/FunctionalJavascript/QuickEditImageTest.php||modules/quickedit/tests/src/FunctionalJavascript/QuickEditImageTest.php",
          "modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php||modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php",
          "modules/quickedit/tests/src/Kernel/EditorIntegrationTest.php||modules/quickedit/tests/src/Kernel/EditorIntegrationTest.php",
          "modules/quickedit/tests/src/Kernel/MetadataGeneratorTest.php||modules/quickedit/tests/src/Kernel/MetadataGeneratorTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "modules/quickedit/src/MetadataGenerator.php||modules/quickedit/src/MetadataGenerator.php",
            "modules/quickedit/tests/modules/src/MockQuickEditEntityFieldAccessCheck.php||modules/quickedit/tests/modules/src/MockQuickEditEntityFieldAccessCheck.php",
            "modules/quickedit/tests/src/FunctionalJavascript/LayoutBuilderQuickEditTest.php||modules/quickedit/tests/src/FunctionalJavascript/LayoutBuilderQuickEditTest.php",
            "modules/quickedit/tests/src/FunctionalJavascript/QuickEditImageTest.php||modules/quickedit/tests/src/FunctionalJavascript/QuickEditImageTest.php",
            "modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php||modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php",
            "modules/quickedit/tests/src/Kernel/EditorIntegrationTest.php||modules/quickedit/tests/src/Kernel/EditorIntegrationTest.php",
            "modules/quickedit/tests/src/Kernel/MetadataGeneratorTest.php||modules/quickedit/tests/src/Kernel/MetadataGeneratorTest.php"
          ],
          "candidate": [
            "modules/quickedit/src/MetadataGenerator.php||modules/quickedit/src/MetadataGenerator.php",
            "modules/quickedit/tests/modules/src/MockQuickEditEntityFieldAccessCheck.php||modules/quickedit/tests/modules/src/MockQuickEditEntityFieldAccessCheck.php",
            "modules/quickedit/tests/src/FunctionalJavascript/LayoutBuilderQuickEditTest.php||modules/quickedit/tests/src/FunctionalJavascript/LayoutBuilderQuickEditTest.php",
            "modules/quickedit/tests/src/FunctionalJavascript/QuickEditImageTest.php||modules/quickedit/tests/src/FunctionalJavascript/QuickEditImageTest.php",
            "modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php||modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php",
            "modules/quickedit/tests/src/Kernel/EditorIntegrationTest.php||modules/quickedit/tests/src/Kernel/EditorIntegrationTest.php",
            "modules/quickedit/tests/src/Kernel/MetadataGeneratorTest.php||modules/quickedit/tests/src/Kernel/MetadataGeneratorTest.php"
          ]
        }
      },
      "candidate_diff": {
        "modules/quickedit/src/MetadataGenerator.php||modules/quickedit/src/MetadataGenerator.php": [
          "File: modules/quickedit/src/MetadataGenerator.php -> modules/quickedit/src/MetadataGenerator.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:     $access = $this->accessChecker->accessEditEntityField($entity, $field_name);",
          "72:       return ['access' => FALSE];",
          "73:     }",
          "",
          "[Removed Lines]",
          "71:     if (!$access) {",
          "",
          "[Added Lines]",
          "71:     if (!$access->isAllowed()) {",
          "",
          "---------------"
        ],
        "modules/quickedit/tests/modules/src/MockQuickEditEntityFieldAccessCheck.php||modules/quickedit/tests/modules/src/MockQuickEditEntityFieldAccessCheck.php": [
          "File: modules/quickedit/tests/modules/src/MockQuickEditEntityFieldAccessCheck.php -> modules/quickedit/tests/modules/src/MockQuickEditEntityFieldAccessCheck.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: namespace Drupal\\quickedit_test;",
          "5: use Drupal\\Core\\Entity\\EntityInterface;",
          "6: use Drupal\\quickedit\\Access\\QuickEditEntityFieldAccessCheckInterface;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: use Drupal\\Core\\Access\\AccessResult;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "16:   public function accessEditEntityField(EntityInterface $entity, $field_name) {",
          "18:   }",
          "20: }",
          "",
          "[Removed Lines]",
          "17:     return TRUE;",
          "",
          "[Added Lines]",
          "18:     switch (\\Drupal::state()->get('quickedit_test_field_access')) {",
          "19:       case 'allowed':",
          "20:         return AccessResult::allowed();",
          "22:       case 'neutral':",
          "23:         return AccessResult::neutral();",
          "25:       case 'forbidden':",
          "26:         return AccessResult::forbidden();",
          "28:       default:",
          "29:         throw new \\OutOfRangeException(\"The state for the 'quickedit_test_field_access' key must be either 'allowed', 'neutral' or 'forbidden'.\");",
          "30:     }",
          "",
          "---------------"
        ],
        "modules/quickedit/tests/src/FunctionalJavascript/LayoutBuilderQuickEditTest.php||modules/quickedit/tests/src/FunctionalJavascript/LayoutBuilderQuickEditTest.php": [
          "File: modules/quickedit/tests/src/FunctionalJavascript/LayoutBuilderQuickEditTest.php -> modules/quickedit/tests/src/FunctionalJavascript/LayoutBuilderQuickEditTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "113:     $this->drupalLogin($this->contentAuthorUser);",
          "114:     $this->usingLayoutBuilder = TRUE;",
          "115:     $this->assertQuickEditInit(['title', 'uid', 'created']);",
          "116:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "115:     $this->assertQuickEditInit(['title']);",
          "116:     $this->drupalLogin($this->drupalCreateUser([",
          "117:       'access contextual links',",
          "118:       'access in-place editing',",
          "119:       'access content',",
          "120:       'edit any article content',",
          "121:       'administer nodes',",
          "122:     ]));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "127:     if (!$use_revisions) {",
          "128:       $content_type = NodeType::load('article');",
          "129:       $content_type->setNewRevision(FALSE);",
          "",
          "[Removed Lines]",
          "126:   public function testEnableDisableLayoutBuilder($use_revisions) {",
          "",
          "[Added Lines]",
          "134:   public function testEnableDisableLayoutBuilder($use_revisions, $admin_permission = FALSE) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "131:     }",
          "132:     $fields = [",
          "133:       'title',",
          "136:       'body',",
          "137:     ];",
          "140:     $this->assertQuickEditInit($fields);",
          "",
          "[Removed Lines]",
          "134:       'uid',",
          "135:       'created',",
          "",
          "[Added Lines]",
          "144:     if ($admin_permission) {",
          "145:       $fields = array_merge($fields, ['uid', 'created']);",
          "146:       $this->drupalLogin($this->drupalCreateUser([",
          "147:         'access contextual links',",
          "148:         'access in-place editing',",
          "149:         'access content',",
          "150:         'edit any article content',",
          "151:         'administer nodes',",
          "152:       ]));",
          "153:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "169:   public function providerEnableDisableLayoutBuilder() {",
          "170:     return [",
          "173:     ];",
          "174:   }",
          "",
          "[Removed Lines]",
          "171:       'use revisions' => [TRUE],",
          "172:       'do not use revisions' => [FALSE],",
          "",
          "[Added Lines]",
          "187:       'use revisions, not admin' => [TRUE],",
          "188:       'do not use revisions, not admin' => [FALSE],",
          "189:       'use revisions, admin' => [TRUE, TRUE],",
          "190:       'do not use revisions, admin' => [FALSE, TRUE],",
          "",
          "---------------"
        ],
        "modules/quickedit/tests/src/FunctionalJavascript/QuickEditImageTest.php||modules/quickedit/tests/src/FunctionalJavascript/QuickEditImageTest.php": [
          "File: modules/quickedit/tests/src/FunctionalJavascript/QuickEditImageTest.php -> modules/quickedit/tests/src/FunctionalJavascript/QuickEditImageTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:     $this->drupalCreateContentType(['type' => 'article', 'name' => 'Article']);",
          "47:       'access contextual links',",
          "48:       'access toolbar',",
          "49:       'access in-place editing',",
          "",
          "[Removed Lines]",
          "46:     $this->contentAuthorUser = $this->drupalCreateUser([",
          "",
          "[Added Lines]",
          "44:   }",
          "54:   public function testImageInPlaceEditor($admin_permission = FALSE) {",
          "56:     $permissions = [",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51:       'create article content',",
          "52:       'edit any article content',",
          "53:       'delete any article content',",
          "55:     $this->drupalLogin($this->contentAuthorUser);",
          "66:     $field_name = strtolower($this->randomMachineName());",
          "67:     $field_settings = [",
          "",
          "[Removed Lines]",
          "54:     ]);",
          "56:   }",
          "64:   public function testImageInPlaceEditor() {",
          "",
          "[Added Lines]",
          "64:     ];",
          "65:     if ($admin_permission) {",
          "66:       $permissions[] = 'administer nodes';",
          "67:     }",
          "68:     $this->contentAuthorUser = $this->drupalCreateUser($permissions);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "126:     $this->assertEntityInstanceStates([",
          "127:       'node/1[0]' => 'closed',",
          "128:     ]);",
          "129:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
          "130:       'node/1/title/en/full'               => 'inactive',",
          "133:       'node/1/body/en/full'                => 'inactive',",
          "134:       'node/1/' . $field_name . '/en/full' => 'inactive',",
          "138:     $this->startQuickEditViaToolbar('node', 1, 0);",
          "",
          "[Removed Lines]",
          "131:       'node/1/uid/en/full'                 => 'inactive',",
          "132:       'node/1/created/en/full'             => 'inactive',",
          "135:     ]);",
          "",
          "[Added Lines]",
          "135:     $admin_inactive = [];",
          "136:     $admin_candidate = [];",
          "137:     if ($admin_permission) {",
          "138:       $admin_inactive = [",
          "139:         'node/1/uid/en/full' => 'inactive',",
          "140:         'node/1/created/en/full' => 'inactive',",
          "141:       ];",
          "142:       $admin_candidate = [",
          "143:         'node/1/uid/en/full' => 'candidate',",
          "144:         'node/1/created/en/full' => 'candidate',",
          "145:       ];",
          "146:     }",
          "152:     ] + $admin_inactive);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "142:     $this->assertQuickEditEntityToolbar((string) $node->label(), NULL);",
          "143:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
          "144:       'node/1/title/en/full'               => 'candidate',",
          "147:       'node/1/body/en/full'                => 'candidate',",
          "148:       'node/1/' . $field_name . '/en/full' => 'candidate',",
          "152:     $this->click($field_selector);",
          "",
          "[Removed Lines]",
          "145:       'node/1/uid/en/full'                 => 'candidate',",
          "146:       'node/1/created/en/full'             => 'candidate',",
          "149:     ]);",
          "",
          "[Added Lines]",
          "164:     ] + $admin_candidate);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "154:     $this->assertSession()->elementExists('css', $field_selector . ' .quickedit-image-dropzone');",
          "155:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
          "156:       'node/1/title/en/full'               => 'candidate',",
          "159:       'node/1/body/en/full'                => 'candidate',",
          "160:       'node/1/' . $field_name . '/en/full' => 'active',",
          "164:     $this->typeInImageEditorAltTextInput('New text');",
          "165:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
          "166:       'node/1/title/en/full'               => 'candidate',",
          "169:       'node/1/body/en/full'                => 'candidate',",
          "170:       'node/1/' . $field_name . '/en/full' => 'changed',",
          "174:     $this->dropImageOnImageEditor($valid_images[1]->uri);",
          "",
          "[Removed Lines]",
          "157:       'node/1/uid/en/full'                 => 'candidate',",
          "158:       'node/1/created/en/full'             => 'candidate',",
          "161:     ]);",
          "167:       'node/1/uid/en/full'                 => 'candidate',",
          "168:       'node/1/created/en/full'             => 'candidate',",
          "171:     ]);",
          "",
          "[Added Lines]",
          "174:     ] + $admin_candidate);",
          "182:     ] + $admin_candidate);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "184:     ]);",
          "185:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
          "186:       'node/1/title/en/full'               => 'candidate',",
          "189:       'node/1/body/en/full'                => 'candidate',",
          "190:       'node/1/' . $field_name . '/en/full' => 'saving',",
          "192:     $this->assertEntityInstanceFieldMarkup([",
          "193:       'node/1/' . $field_name . '/en/full' => '.quickedit-changed',",
          "194:     ]);",
          "",
          "[Removed Lines]",
          "187:       'node/1/uid/en/full'                 => 'candidate',",
          "188:       'node/1/created/en/full'             => 'candidate',",
          "191:     ]);",
          "",
          "[Added Lines]",
          "200:     ] + $admin_candidate);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "208:     $this->assertSession()->elementExists('css', $entity_selector . ' ' . $field_selector . ' ' . $new_image_selector);",
          "209:   }",
          "211: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "226:   public function providerTestImageInPlaceEditor(): array {",
          "227:     return [",
          "228:       'with permission' => [TRUE],",
          "229:       'without permission' => [FALSE],",
          "230:     ];",
          "231:   }",
          "",
          "---------------"
        ],
        "modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php||modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php": [
          "File: modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php -> modules/quickedit/tests/src/FunctionalJavascript/QuickEditIntegrationTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "146:     ]);",
          "147:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
          "148:       'node/1/title/en/full'      => 'inactive',",
          "151:       'node/1/body/en/full'       => 'inactive',",
          "152:       'node/1/field_tags/en/full' => 'inactive',",
          "153:     ]);",
          "",
          "[Removed Lines]",
          "149:       'node/1/uid/en/full'        => 'inactive',",
          "150:       'node/1/created/en/full'    => 'inactive',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "160:     $this->assertQuickEditEntityToolbar((string) $node->label(), NULL);",
          "161:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
          "162:       'node/1/title/en/full'      => 'candidate',",
          "165:       'node/1/body/en/full'       => 'candidate',",
          "166:       'node/1/field_tags/en/full' => 'candidate',",
          "167:     ]);",
          "",
          "[Removed Lines]",
          "163:       'node/1/uid/en/full'        => 'candidate',",
          "164:       'node/1/created/en/full'    => 'candidate',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "174:     $this->assertQuickEditEntityToolbar((string) $node->label(), 'Title');",
          "175:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
          "176:       'node/1/title/en/full'      => 'active',",
          "179:       'node/1/body/en/full'       => 'candidate',",
          "180:       'node/1/field_tags/en/full' => 'candidate',",
          "181:     ]);",
          "",
          "[Removed Lines]",
          "177:       'node/1/uid/en/full'        => 'candidate',",
          "178:       'node/1/created/en/full'    => 'candidate',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "188:     $this->awaitEntityInstanceFieldState('node', 1, 0, 'title', 'en', 'changed');",
          "189:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
          "190:       'node/1/title/en/full'      => 'changed',",
          "193:       'node/1/body/en/full'       => 'candidate',",
          "194:       'node/1/field_tags/en/full' => 'candidate',",
          "195:     ]);",
          "",
          "[Removed Lines]",
          "191:       'node/1/uid/en/full'        => 'candidate',",
          "192:       'node/1/created/en/full'    => 'candidate',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "201:     $this->assertQuickEditEntityToolbar((string) $node->label(), 'Body');",
          "202:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
          "203:       'node/1/title/en/full'      => 'saving',",
          "206:       'node/1/body/en/full'       => 'active',",
          "207:       'node/1/field_tags/en/full' => 'candidate',",
          "208:     ]);",
          "",
          "[Removed Lines]",
          "204:       'node/1/uid/en/full'        => 'candidate',",
          "205:       'node/1/created/en/full'    => 'candidate',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "223:     $assert_session->waitForElement('css', '.quickedit-toolbar-field div[id*=\"tags\"]');",
          "224:     $this->assertQuickEditEntityToolbar((string) $node->label(), 'Tags');",
          "225:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
          "228:       'node/1/body/en/full'       => 'candidate',",
          "229:       'node/1/field_tags/en/full' => 'activating',",
          "230:       'node/1/title/en/full'      => 'candidate',",
          "",
          "[Removed Lines]",
          "226:       'node/1/uid/en/full'        => 'candidate',",
          "227:       'node/1/created/en/full'    => 'candidate',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "240:     $this->assertJsCondition('document.querySelector(\\'.quickedit-form-container > .quickedit-form[role=\"dialog\"] > .placeholder\\') === null');",
          "241:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
          "244:       'node/1/body/en/full'       => 'candidate',",
          "245:       'node/1/field_tags/en/full' => 'active',",
          "246:       'node/1/title/en/full'      => 'candidate',",
          "",
          "[Removed Lines]",
          "242:       'node/1/uid/en/full'        => 'candidate',",
          "243:       'node/1/created/en/full'    => 'candidate',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "250:     $this->typeInFormEditorTextInputField('field_tags[target_id]', 'foo, bar');",
          "251:     $this->awaitEntityInstanceFieldState('node', 1, 0, 'field_tags', 'en', 'changed');",
          "252:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
          "255:       'node/1/body/en/full'       => 'candidate',",
          "256:       'node/1/field_tags/en/full' => 'changed',",
          "257:       'node/1/title/en/full'      => 'candidate',",
          "",
          "[Removed Lines]",
          "253:       'node/1/uid/en/full'        => 'candidate',",
          "254:       'node/1/created/en/full'    => 'candidate',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "264:       'node/1[0]' => 'committing',",
          "265:     ]);",
          "266:     $this->assertEntityInstanceFieldStates('node', 1, 0, [",
          "269:       'node/1/body/en/full'       => 'candidate',",
          "270:       'node/1/field_tags/en/full' => 'saving',",
          "271:       'node/1/title/en/full'      => 'candidate',",
          "",
          "[Removed Lines]",
          "267:       'node/1/uid/en/full'        => 'candidate',",
          "268:       'node/1/created/en/full'    => 'candidate',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "modules/quickedit/tests/src/Kernel/EditorIntegrationTest.php||modules/quickedit/tests/src/Kernel/EditorIntegrationTest.php": [
          "File: modules/quickedit/tests/src/Kernel/EditorIntegrationTest.php -> modules/quickedit/tests/src/Kernel/EditorIntegrationTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "181:     $items = $entity->get($this->fieldName);",
          "182:     $metadata = $this->metadataGenerator->generateFieldMetadata($items, 'default');",
          "183:     $expected = [",
          "184:       'access' => TRUE,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "182:     \\Drupal::state()->set('quickedit_test_field_access', 'forbidden');",
          "183:     $this->assertSame(['access' => FALSE], $this->metadataGenerator->generateFieldMetadata($items, 'default'));",
          "184:     \\Drupal::state()->set('quickedit_test_field_access', 'neutral');",
          "185:     $this->assertSame(['access' => FALSE], $this->metadataGenerator->generateFieldMetadata($items, 'default'));",
          "186:     \\Drupal::state()->set('quickedit_test_field_access', 'allowed');",
          "",
          "---------------"
        ],
        "modules/quickedit/tests/src/Kernel/MetadataGeneratorTest.php||modules/quickedit/tests/src/Kernel/MetadataGeneratorTest.php": [
          "File: modules/quickedit/tests/src/Kernel/MetadataGeneratorTest.php -> modules/quickedit/tests/src/Kernel/MetadataGeneratorTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "99:     $items_1 = $entity->get($field_1_name);",
          "100:     $metadata_1 = $this->metadataGenerator->generateFieldMetadata($items_1, 'default');",
          "101:     $expected_1 = [",
          "102:       'access' => TRUE,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "100:     \\Drupal::state()->set('quickedit_test_field_access', 'forbidden');",
          "101:     $this->assertSame(['access' => FALSE], $this->metadataGenerator->generateFieldMetadata($items_1, 'default'));",
          "102:     \\Drupal::state()->set('quickedit_test_field_access', 'neutral');",
          "103:     $this->assertSame(['access' => FALSE], $this->metadataGenerator->generateFieldMetadata($items_1, 'default'));",
          "104:     \\Drupal::state()->set('quickedit_test_field_access', 'allowed');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "109:     $items_2 = $entity->get($field_2_name);",
          "110:     $metadata_2 = $this->metadataGenerator->generateFieldMetadata($items_2, 'default');",
          "111:     $expected_2 = [",
          "112:       'access' => TRUE,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "115:     \\Drupal::state()->set('quickedit_test_field_access', 'forbidden');",
          "116:     $this->assertSame(['access' => FALSE], $this->metadataGenerator->generateFieldMetadata($items_2, 'default'));",
          "117:     \\Drupal::state()->set('quickedit_test_field_access', 'neutral');",
          "118:     $this->assertSame(['access' => FALSE], $this->metadataGenerator->generateFieldMetadata($items_2, 'default'));",
          "119:     \\Drupal::state()->set('quickedit_test_field_access', 'allowed');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "165:     $items = $entity->get($field_name);",
          "166:     $metadata = $this->metadataGenerator->generateFieldMetadata($items, 'default');",
          "167:     $expected = [",
          "168:       'access' => TRUE,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "176:     \\Drupal::state()->set('quickedit_test_field_access', 'forbidden');",
          "177:     $this->assertSame(['access' => FALSE], $this->metadataGenerator->generateFieldMetadata($items, 'default'));",
          "178:     \\Drupal::state()->set('quickedit_test_field_access', 'neutral');",
          "179:     $this->assertSame(['access' => FALSE], $this->metadataGenerator->generateFieldMetadata($items, 'default'));",
          "180:     \\Drupal::state()->set('quickedit_test_field_access', 'allowed');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "10637684824a7c7e1209c88e1d53e7b4abaa8254",
      "candidate_info": {
        "commit_hash": "10637684824a7c7e1209c88e1d53e7b4abaa8254",
        "repo": "drupal/core",
        "commit_url": "https://github.com/drupal/core/commit/10637684824a7c7e1209c88e1d53e7b4abaa8254",
        "files": [
          "modules/file/src/Plugin/rest/resource/FileUploadResource.php",
          "modules/jsonapi/src/Controller/TemporaryJsonapiFileFieldUploader.php"
        ],
        "message": "SA-CORE-2021-008 by klausi, xjm, larowlan, alexpott, samuel.mortenson, mcdruid, kim.pepper",
        "before_after_code_files": [
          "modules/file/src/Plugin/rest/resource/FileUploadResource.php||modules/file/src/Plugin/rest/resource/FileUploadResource.php",
          "modules/jsonapi/src/Controller/TemporaryJsonapiFileFieldUploader.php||modules/jsonapi/src/Controller/TemporaryJsonapiFileFieldUploader.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/file/src/Plugin/rest/resource/FileUploadResource.php||modules/file/src/Plugin/rest/resource/FileUploadResource.php": [
          "File: modules/file/src/Plugin/rest/resource/FileUploadResource.php -> modules/file/src/Plugin/rest/resource/FileUploadResource.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "278:       $file->setMimeType($this->mimeTypeGuesser->guess($prepared_filename));",
          "279:       @trigger_error('\\Symfony\\Component\\HttpFoundation\\File\\MimeType\\MimeTypeGuesserInterface is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Implement \\Symfony\\Component\\Mime\\MimeTypeGuesserInterface instead. See https://www.drupal.org/node/3133341', E_USER_DEPRECATED);",
          "280:     }",
          "284:     $file->setSize(@filesize($temp_file_path));",
          "",
          "[Removed Lines]",
          "281:     $file->setFileUri($file_uri);",
          "288:     $this->validate($file, $validators);",
          "",
          "[Added Lines]",
          "281:     $file->setFileUri($temp_file_path);",
          "293:     $errors = file_validate($file, $validators);",
          "295:     if (!empty($errors)) {",
          "296:       $message = \"Unprocessable Entity: file validation failed.\\n\";",
          "297:       $message .= implode(\"\\n\", array_map([PlainTextOutput::class, 'renderFromHtml'], $errors));",
          "299:       throw new UnprocessableEntityHttpException($message);",
          "300:     }",
          "302:     $file->setFileUri($file_uri);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "297:       throw new HttpException(500, 'Temporary file could not be moved to file location');",
          "298:     }",
          "300:     $file->save();",
          "302:     $this->lock->release($lock_id);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "314:     $this->resourceValidate($file);",
          "",
          "---------------"
        ],
        "modules/jsonapi/src/Controller/TemporaryJsonapiFileFieldUploader.php||modules/jsonapi/src/Controller/TemporaryJsonapiFileFieldUploader.php": [
          "File: modules/jsonapi/src/Controller/TemporaryJsonapiFileFieldUploader.php -> modules/jsonapi/src/Controller/TemporaryJsonapiFileFieldUploader.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: use Drupal\\Core\\Session\\AccountInterface;",
          "20: use Drupal\\Core\\Utility\\Token;",
          "21: use Drupal\\Component\\Render\\PlainTextOutput;",
          "22: use Drupal\\file\\Entity\\File;",
          "23: use Drupal\\file\\Plugin\\Field\\FieldType\\FileFieldItemList;",
          "24: use Psr\\Log\\LoggerInterface;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: use Drupal\\Core\\Entity\\EntityConstraintViolationList;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "199:       @trigger_error('\\Symfony\\Component\\HttpFoundation\\File\\MimeType\\MimeTypeGuesserInterface is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Implement \\Symfony\\Component\\Mime\\MimeTypeGuesserInterface instead. See https://www.drupal.org/node/3133341', E_USER_DEPRECATED);",
          "200:       $file->setMimeType($this->mimeTypeGuesser->guess($prepared_filename));",
          "201:     }",
          "205:     $file->setSize(@filesize($temp_file_path));",
          "211:       return $violations;",
          "212:     }",
          "",
          "[Removed Lines]",
          "202:     $file->setFileUri($file_uri);",
          "209:     $violations = $this->validate($file, $validators);",
          "210:     if ($violations->count() > 0) {",
          "",
          "[Added Lines]",
          "203:     $file->setFileUri($temp_file_path);",
          "215:     $errors = file_validate($file, $validators);",
          "216:     if (!empty($errors)) {",
          "217:       $violations = new EntityConstraintViolationList($file);",
          "218:       $translator = new DrupalTranslator();",
          "219:       $entity = EntityAdapter::createFromEntity($file);",
          "220:       foreach ($errors as $error) {",
          "221:         $violation = new ConstraintViolation($translator->trans($error),",
          "222:           $error,",
          "223:           [],",
          "224:           $entity,",
          "225:           '',",
          "226:           NULL",
          "227:         );",
          "228:         $violations->add($violation);",
          "229:       }",
          "233:     $file->setFileUri($file_uri);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "221:       throw new HttpException(500, 'Temporary file could not be moved to file location');",
          "222:     }",
          "224:     $file->save();",
          "226:     $this->lock->release($lock_id);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "245:     $violations = $file->validate();",
          "249:     $violations->filterByFieldAccess();",
          "250:     if ($violations->count() > 0) {",
          "251:       return $violations;",
          "252:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}