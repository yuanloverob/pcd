{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7e7ef6023c4820e29c14eaae7783343c2baa7865",
      "candidate_info": {
        "commit_hash": "7e7ef6023c4820e29c14eaae7783343c2baa7865",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/7e7ef6023c4820e29c14eaae7783343c2baa7865",
        "files": [
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js"
        ],
        "message": "AMBARI-25379 Upgrade AMS Grafana version to 6.3.5\n\nFix ./query_ctrl name in datasource.js.\n\nChange-Id: Ie6f57bbec7c2adb0747a79a566b14c294a2d11cb",
        "before_after_code_files": [
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js||ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js||ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js": [
          "File: ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js -> ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:       'angular',",
          "20:       'lodash',",
          "21:       'jquery',",
          "23:     ],",
          "24:     function (angular, _) {",
          "25:       'use strict';",
          "",
          "[Removed Lines]",
          "22:       './queryCtrl'",
          "",
          "[Added Lines]",
          "22:       './query_ctrl'",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6a267b5aa13397cd044cbcd6f3644945ee644237",
      "candidate_info": {
        "commit_hash": "6a267b5aa13397cd044cbcd6f3644945ee644237",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/6a267b5aa13397cd044cbcd6f3644945ee644237",
        "files": [
          "ambari-web/app/styles/application.less",
          "ambari-web/app/templates/common/configs/services_config.hbs",
          "ambari-web/app/templates/wizard/step7/directories_tab.hbs",
          "ambari-web/app/views/common/configs/services_config.js",
          "ambari-web/app/views/wizard/step7/directories_tab_view.js"
        ],
        "message": "AMBARI-24314 UI Elements in Incorrect layout at Customize Services Page",
        "before_after_code_files": [
          "ambari-web/app/styles/application.less||ambari-web/app/styles/application.less",
          "ambari-web/app/templates/common/configs/services_config.hbs||ambari-web/app/templates/common/configs/services_config.hbs",
          "ambari-web/app/templates/wizard/step7/directories_tab.hbs||ambari-web/app/templates/wizard/step7/directories_tab.hbs",
          "ambari-web/app/views/common/configs/services_config.js||ambari-web/app/views/common/configs/services_config.js",
          "ambari-web/app/views/wizard/step7/directories_tab_view.js||ambari-web/app/views/wizard/step7/directories_tab_view.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/styles/application.less||ambari-web/app/styles/application.less": [
          "File: ambari-web/app/styles/application.less -> ambari-web/app/styles/application.less",
          "--- Hunk 1 ---",
          "[Context before]",
          "531:   visibility: hidden;",
          "532: }",
          "534: .show, .shown {",
          "535:   visibility: visible;",
          "536: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "534: .not-visible {",
          "535:   visibility: hidden;",
          "536: }",
          "",
          "---------------"
        ],
        "ambari-web/app/templates/common/configs/services_config.hbs||ambari-web/app/templates/common/configs/services_config.hbs": [
          "File: ambari-web/app/templates/common/configs/services_config.hbs -> ambari-web/app/templates/common/configs/services_config.hbs",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: }}",
          "18: {{#if controller.isInstallWizard}}",
          "19:   <div class=\"row one-row-tabs-container\">",
          "21:       <a href=\"#\"{{bindAttr class=\"view.isLeftArrowDisabled:disabled\"}} {{action \"scrollTabsLeft\" target=\"view\"}}> <i class=\"icon-angle-left\"></i>",
          "22:       </a>",
          "23:     </div>",
          "",
          "[Removed Lines]",
          "20:     <div class=\"left-arrow\">",
          "",
          "[Added Lines]",
          "20:     <div {{bindAttr class=\":left-arrow view.isNavArrowsHidden:not-visible\"}}>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36:         {{/each}}",
          "37:       </ul>",
          "38:     </div>",
          "40:       <a href=\"#\" {{bindAttr class=\"view.isRightArrowDisabled:disabled\"}} {{action \"scrollTabsRight\" target=\"view\"}}>",
          "41:         <i class=\"icon-angle-right\"></i>",
          "42:       </a>",
          "",
          "[Removed Lines]",
          "39:     <div class=\"right-arrow\">",
          "",
          "[Added Lines]",
          "39:     <div {{bindAttr class=\":right-arrow view.isNavArrowsHidden:not-visible\"}}>",
          "",
          "---------------"
        ],
        "ambari-web/app/templates/wizard/step7/directories_tab.hbs||ambari-web/app/templates/wizard/step7/directories_tab.hbs": [
          "File: ambari-web/app/templates/wizard/step7/directories_tab.hbs -> ambari-web/app/templates/wizard/step7/directories_tab.hbs",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: }}",
          "18: <div class=\"row one-row-tabs-container\">",
          "20:     <a href=\"#\"{{bindAttr class=\"view.isLeftArrowDisabled:disabled\"}} {{action \"scrollTabsLeft\" target=\"view\"}}> <i class=\"icon-angle-left\"></i>",
          "21:     </a>",
          "22:   </div>",
          "",
          "[Removed Lines]",
          "19:   <div class=\"left-arrow\">",
          "",
          "[Added Lines]",
          "19:   <div {{bindAttr class=\":left-arrow view.isNavArrowsHidden:not-visible\"}}>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "35:       {{/each}}",
          "36:     </ul>",
          "37:   </div>",
          "39:     <a href=\"#\" {{bindAttr class=\"view.isRightArrowDisabled:disabled\"}} {{action \"scrollTabsRight\" target=\"view\"}}>",
          "40:       <i class=\"icon-angle-right\"></i>",
          "41:     </a>",
          "",
          "[Removed Lines]",
          "38:   <div class=\"right-arrow\">",
          "",
          "[Added Lines]",
          "38:   <div {{bindAttr class=\":right-arrow view.isNavArrowsHidden:not-visible\"}}>",
          "",
          "---------------"
        ],
        "ambari-web/app/views/common/configs/services_config.js||ambari-web/app/views/common/configs/services_config.js": [
          "File: ambari-web/app/views/common/configs/services_config.js -> ambari-web/app/views/common/configs/services_config.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:       this.get('controller').selectProperService();",
          "32:       this.set('controller.selectedService.isActive', true);",
          "33:       this.get('controller').selectedServiceObserver();",
          "34:     }",
          "35:   },",
          "37:   getScrollInterval: function () {",
          "38:     var INTERVAL = 300;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34:       Em.run.next(this, function () {",
          "35:         this.enableRightArrow();",
          "36:       });",
          "40:   isLeftArrowDisabled: true,",
          "42:   isRightArrowDisabled: true,",
          "44:   isNavArrowsHidden: Em.computed.and('isLeftArrowDisabled', 'isRightArrowDisabled'),",
          "46:   enableRightArrow: function () {",
          "47:     var container = $(this.get('element')).find('.tabs-container');",
          "48:     var content = container.find('ul');",
          "49:     this.set('isRightArrowDisabled', container.width() >= content.width());",
          "50:   },",
          "",
          "---------------"
        ],
        "ambari-web/app/views/wizard/step7/directories_tab_view.js||ambari-web/app/views/wizard/step7/directories_tab_view.js": [
          "File: ambari-web/app/views/wizard/step7/directories_tab_view.js -> ambari-web/app/views/wizard/step7/directories_tab_view.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "82:   isLeftArrowDisabled: true,",
          "84:   isRightArrowDisabled: true,",
          "86:   enableRightArrow: function () {",
          "87:     var container = $(this.get('element')).find('.tabs-container');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "86:   isNavArrowsHidden: Em.computed.and('isLeftArrowDisabled', 'isRightArrowDisabled'),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f5cc6a46d1d56eebff294d2071a43b9f88b3d705",
      "candidate_info": {
        "commit_hash": "f5cc6a46d1d56eebff294d2071a43b9f88b3d705",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/f5cc6a46d1d56eebff294d2071a43b9f88b3d705",
        "files": [
          "ambari-agent/src/main/python/ambari_agent/ActionQueue.py",
          "ambari-agent/src/test/python/ambari_agent/TestActionQueue.py"
        ],
        "message": "AMBARI-25391 Ambari logging Grafana Password in ActionQueue.py (santal) (#3097)\n\n* AMBARI-25391 Ambari logging Grafana Password in ActionQueue.py (santal)\n\n* changed password replacement value",
        "before_after_code_files": [
          "ambari-agent/src/main/python/ambari_agent/ActionQueue.py||ambari-agent/src/main/python/ambari_agent/ActionQueue.py",
          "ambari-agent/src/test/python/ambari_agent/TestActionQueue.py||ambari-agent/src/test/python/ambari_agent/TestActionQueue.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-agent/src/main/python/ambari_agent/ActionQueue.py||ambari-agent/src/main/python/ambari_agent/ActionQueue.py": [
          "File: ambari-agent/src/main/python/ambari_agent/ActionQueue.py -> ambari-agent/src/main/python/ambari_agent/ActionQueue.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: import ambari_simplejson as json",
          "26: import time",
          "27: import signal",
          "29: from AgentException import AgentException",
          "30: from ambari_agent.BackgroundCommandExecutionHandle import BackgroundCommandExecutionHandle",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: import re",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38: MAX_SYMBOLS_PER_LOG_MESSAGE = 7900",
          "41: class ActionQueue(threading.Thread):",
          "42:   \"\"\" Action Queue for the agent. We pick one command at a time from the queue",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41: PASSWORD_REPLACEMENT = '[PROTECTED]'",
          "42: PASSWORD_PATTERN = re.compile(r\"('\\S*password':\\s*u?')(\\S+)(')\")",
          "44: def hide_passwords(text):",
          "45:   \"\"\" Replaces the matching passwords with **** in the given text \"\"\"",
          "46:   return None if text is None else PASSWORD_PATTERN.sub(r'\\1{}\\3'.format(PASSWORD_REPLACEMENT), text)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "393:     If logs are redirected to syslog (syslog_enabled=1), this is very useful for logging big messages.",
          "394:     As syslog usually truncates long messages.",
          "395:     \"\"\"",
          "397:     if len(chunks) > 1:",
          "398:       for i in range(len(chunks)):",
          "399:         logger.info(\"Cmd log for taskId={0} and chunk {1}/{2} of log for command: \\n\".format(taskId, i+1, len(chunks)) + chunks[i])",
          "400:     else:",
          "403:   def get_retry_delay(self, last_delay):",
          "404:     \"\"\"",
          "",
          "[Removed Lines]",
          "396:     chunks = split_on_chunks(text, MAX_SYMBOLS_PER_LOG_MESSAGE)",
          "401:       logger.info(\"Cmd log for taskId={0}: \".format(taskId) + text)",
          "",
          "[Added Lines]",
          "404:     chunks = split_on_chunks(hide_passwords(text), MAX_SYMBOLS_PER_LOG_MESSAGE)",
          "409:       logger.info(\"Cmd log for taskId={0}: \".format(taskId) + chunks[0])",
          "",
          "---------------"
        ],
        "ambari-agent/src/test/python/ambari_agent/TestActionQueue.py||ambari-agent/src/test/python/ambari_agent/TestActionQueue.py": [
          "File: ambari-agent/src/test/python/ambari_agent/TestActionQueue.py -> ambari-agent/src/test/python/ambari_agent/TestActionQueue.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: from unittest import TestCase",
          "23: from ambari_agent.LiveStatus import LiveStatus",
          "25: from ambari_agent.AmbariConfig import AmbariConfig",
          "26: import os, errno, time, pprint, tempfile, threading",
          "27: import sys",
          "",
          "[Removed Lines]",
          "24: from ambari_agent.ActionQueue import ActionQueue",
          "",
          "[Added Lines]",
          "24: from ambari_agent.ActionQueue import ActionQueue, hide_passwords",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1167:     },",
          "1168:   }",
          "1170: def patch_output_file(pythonExecutor):",
          "1171:   def windows_py(command, tmpout, tmperr):",
          "1172:     proc = MagicMock()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1170:   def test_hide_passwords_no_matching_password(self):",
          "1171:     self.assertEqual(hide_passwords(None), None)",
          "1172:     self.assertEqual(hide_passwords('No password in this text'), 'No password in this text')",
          "1173:     self.assertEqual(hide_passwords(\"No 'password' 'in' this text'\"), \"No 'password' 'in' this text'\")",
          "1174:     self.assertEqual(hide_passwords(\"No 'password': in this text\"), \"No 'password': in this text\")",
          "1175:     self.assertEqual(hide_passwords(\"No u'password': u'' in this text\"), \"No u'password': u'' in this text\")",
          "1177:   def test_hide_passwords(self):",
          "1178:     self.assertEqual(hide_passwords(\"u'password': u'changeIT!'\"), \"u'password': u'[PROTECTED]'\")",
          "1179:     self.assertEqual(hide_passwords(\"'password': 'password'\"), \"'password': '[PROTECTED]'\")",
          "1180:     self.assertEqual(hide_passwords(\"'some.password': 'password', 'other.password': 'password',\"), \"'some.password': '[PROTECTED]', 'other.password': '[PROTECTED]',\")",
          "1181:     self.assertEqual(hide_passwords(\"u'metrics_grafana_password': u'mypassword123!'\"), \"u'metrics_grafana_password': u'[PROTECTED]'\")",
          "1183:     self.assertEqual(hide_passwords(\"u'metrics_grafana_username': u'admin', u'metrics_grafana_password': u'mypassword123!', some text, u'clientssl.keystore.password': u'myKeyFilePassword', another text, \"),",
          "1184:                      \"u'metrics_grafana_username': u'admin', u'metrics_grafana_password': u'[PROTECTED]', some text, u'clientssl.keystore.password': u'[PROTECTED]', another text, \")",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9719e54fa944f48f04fa401c9c8a9669bf94b620",
      "candidate_info": {
        "commit_hash": "9719e54fa944f48f04fa401c9c8a9669bf94b620",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/9719e54fa944f48f04fa401c9c8a9669bf94b620",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/AmbariRuntimeException.java",
          "ambari-server/src/main/java/org/apache/ambari/server/actionmanager/Stage.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java",
          "ambari-server/src/main/java/org/apache/ambari/server/events/listeners/hostcomponents/HostComponentsUpdateListener.java",
          "ambari-server/src/main/java/org/apache/ambari/server/events/listeners/requests/STOMPUpdateListener.java",
          "ambari-server/src/main/java/org/apache/ambari/server/events/listeners/services/ServiceUpdateListener.java",
          "ambari-server/src/main/java/org/apache/ambari/server/events/listeners/upgrade/UpgradeUpdateListener.java",
          "ambari-server/src/main/java/org/apache/ambari/server/events/publishers/STOMPUpdatePublisher.java",
          "ambari-server/src/main/java/org/apache/ambari/server/metrics/system/impl/MetricsServiceImpl.java",
          "ambari-server/src/main/java/org/apache/ambari/server/state/svccomphost/ServiceComponentHostImpl.java"
        ],
        "message": "AMBARI-24291. Start All Services on 100-nodes cluster timed out after 1 hour. (#2449)\n\n* AMBARI-24291. Start All Services on 100-nodes cluster timed out after 1 hour. (mpapirkovskyy)\n\n* AMBARI-24291. Start All Services on 100-nodes cluster timed out after 1 hour. (mpapirkovskyy)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/AmbariRuntimeException.java||ambari-server/src/main/java/org/apache/ambari/server/AmbariRuntimeException.java",
          "ambari-server/src/main/java/org/apache/ambari/server/actionmanager/Stage.java||ambari-server/src/main/java/org/apache/ambari/server/actionmanager/Stage.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java||ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java",
          "ambari-server/src/main/java/org/apache/ambari/server/events/listeners/hostcomponents/HostComponentsUpdateListener.java||ambari-server/src/main/java/org/apache/ambari/server/events/listeners/hostcomponents/HostComponentsUpdateListener.java",
          "ambari-server/src/main/java/org/apache/ambari/server/events/listeners/requests/STOMPUpdateListener.java||ambari-server/src/main/java/org/apache/ambari/server/events/listeners/requests/STOMPUpdateListener.java",
          "ambari-server/src/main/java/org/apache/ambari/server/events/listeners/services/ServiceUpdateListener.java||ambari-server/src/main/java/org/apache/ambari/server/events/listeners/services/ServiceUpdateListener.java",
          "ambari-server/src/main/java/org/apache/ambari/server/events/listeners/upgrade/UpgradeUpdateListener.java||ambari-server/src/main/java/org/apache/ambari/server/events/listeners/upgrade/UpgradeUpdateListener.java",
          "ambari-server/src/main/java/org/apache/ambari/server/events/publishers/STOMPUpdatePublisher.java||ambari-server/src/main/java/org/apache/ambari/server/events/publishers/STOMPUpdatePublisher.java",
          "ambari-server/src/main/java/org/apache/ambari/server/metrics/system/impl/MetricsServiceImpl.java||ambari-server/src/main/java/org/apache/ambari/server/metrics/system/impl/MetricsServiceImpl.java",
          "ambari-server/src/main/java/org/apache/ambari/server/state/svccomphost/ServiceComponentHostImpl.java||ambari-server/src/main/java/org/apache/ambari/server/state/svccomphost/ServiceComponentHostImpl.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/AmbariRuntimeException.java||ambari-server/src/main/java/org/apache/ambari/server/AmbariRuntimeException.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/AmbariRuntimeException.java -> ambari-server/src/main/java/org/apache/ambari/server/AmbariRuntimeException.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:   public AmbariRuntimeException(String message, Throwable cause) {",
          "26:     super(message, cause);",
          "27:   }",
          "28: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:   public AmbariRuntimeException(String message) {",
          "30:     super(message);",
          "31:   }",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/actionmanager/Stage.java||ambari-server/src/main/java/org/apache/ambari/server/actionmanager/Stage.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/actionmanager/Stage.java -> ambari-server/src/main/java/org/apache/ambari/server/actionmanager/Stage.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "224:   void loadExecutionCommandWrappers() {",
          "225:     for (Map.Entry<String, Map<String, HostRoleCommand>> hostRoleCommandEntry : hostRoleCommands.entrySet()) {",
          "226:       String hostname = hostRoleCommandEntry.getKey();",
          "228:       Map<String, HostRoleCommand> roleCommandMap = hostRoleCommandEntry.getValue();",
          "229:       for (Map.Entry<String, HostRoleCommand> roleCommandEntry : roleCommandMap.entrySet()) {",
          "231:       }",
          "232:     }",
          "233:   }",
          "",
          "[Removed Lines]",
          "227:       commandsToSend.put(hostname, new ArrayList<>());",
          "230:         commandsToSend.get(hostname).add(roleCommandEntry.getValue().getExecutionCommandWrapper());",
          "",
          "[Added Lines]",
          "227:       List<ExecutionCommandWrapper> wrappers = new ArrayList<>();",
          "230:         wrappers.add(roleCommandEntry.getValue().getExecutionCommandWrapper());",
          "232:       commandsToSend.put(hostname, wrappers);",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java||ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "2554:     }",
          "2556:     Map<String, String> hostParams = new TreeMap<>();",
          "2559:     if (roleCommand.equals(RoleCommand.INSTALL)) {",
          "2560:       List<ServiceOsSpecific.Package> packages =",
          "",
          "[Removed Lines]",
          "2557:     hostParams.putAll(getRcaParameters());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/events/listeners/hostcomponents/HostComponentsUpdateListener.java||ambari-server/src/main/java/org/apache/ambari/server/events/listeners/hostcomponents/HostComponentsUpdateListener.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/events/listeners/hostcomponents/HostComponentsUpdateListener.java -> ambari-server/src/main/java/org/apache/ambari/server/events/listeners/hostcomponents/HostComponentsUpdateListener.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:   public HostComponentsUpdateListener(AmbariEventPublisher ambariEventPublisher,",
          "50:                                       STOMPUpdatePublisher STOMPUpdatePublisher) {",
          "51:     ambariEventPublisher.register(this);",
          "53:     this.STOMPUpdatePublisher = STOMPUpdatePublisher;",
          "54:   }",
          "",
          "[Removed Lines]",
          "52:     STOMPUpdatePublisher.register(this);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/events/listeners/requests/STOMPUpdateListener.java||ambari-server/src/main/java/org/apache/ambari/server/events/listeners/requests/STOMPUpdateListener.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/events/listeners/requests/STOMPUpdateListener.java -> ambari-server/src/main/java/org/apache/ambari/server/events/listeners/requests/STOMPUpdateListener.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "41:   public STOMPUpdateListener(Injector injector, Set<STOMPEvent.Type> typesToProcess) {",
          "42:     STOMPUpdatePublisher STOMPUpdatePublisher =",
          "43:       injector.getInstance(STOMPUpdatePublisher.class);",
          "45:     this.typesToProcess = typesToProcess == null ? Collections.emptySet() : typesToProcess;",
          "46:   }",
          "",
          "[Removed Lines]",
          "44:     STOMPUpdatePublisher.register(this);",
          "",
          "[Added Lines]",
          "44:     STOMPUpdatePublisher.registerAgent(this);",
          "45:     STOMPUpdatePublisher.registerAPI(this);",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/events/listeners/services/ServiceUpdateListener.java||ambari-server/src/main/java/org/apache/ambari/server/events/listeners/services/ServiceUpdateListener.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/events/listeners/services/ServiceUpdateListener.java -> ambari-server/src/main/java/org/apache/ambari/server/events/listeners/services/ServiceUpdateListener.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:   @Inject",
          "59:   public ServiceUpdateListener(STOMPUpdatePublisher STOMPUpdatePublisher, AmbariEventPublisher ambariEventPublisher) {",
          "61:     ambariEventPublisher.register(this);",
          "63:     this.STOMPUpdatePublisher = STOMPUpdatePublisher;",
          "",
          "[Removed Lines]",
          "60:     STOMPUpdatePublisher.register(this);",
          "",
          "[Added Lines]",
          "60:     STOMPUpdatePublisher.registerAPI(this);",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/events/listeners/upgrade/UpgradeUpdateListener.java||ambari-server/src/main/java/org/apache/ambari/server/events/listeners/upgrade/UpgradeUpdateListener.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/events/listeners/upgrade/UpgradeUpdateListener.java -> ambari-server/src/main/java/org/apache/ambari/server/events/listeners/upgrade/UpgradeUpdateListener.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:   @Inject",
          "50:   public UpgradeUpdateListener(STOMPUpdatePublisher STOMPUpdatePublisher, AmbariEventPublisher ambariEventPublisher) {",
          "53:     this.STOMPUpdatePublisher = STOMPUpdatePublisher;",
          "54:   }",
          "",
          "[Removed Lines]",
          "51:     STOMPUpdatePublisher.register(this);",
          "",
          "[Added Lines]",
          "51:     STOMPUpdatePublisher.registerAPI(this);",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/events/publishers/STOMPUpdatePublisher.java||ambari-server/src/main/java/org/apache/ambari/server/events/publishers/STOMPUpdatePublisher.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/events/publishers/STOMPUpdatePublisher.java -> ambari-server/src/main/java/org/apache/ambari/server/events/publishers/STOMPUpdatePublisher.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: package org.apache.ambari.server.events.publishers;",
          "20: import java.util.concurrent.Executors;",
          "22: import org.apache.ambari.server.events.HostComponentsUpdateEvent;",
          "23: import org.apache.ambari.server.events.RequestUpdateEvent;",
          "24: import org.apache.ambari.server.events.STOMPEvent;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: import java.util.concurrent.ExecutorService;",
          "23: import org.apache.ambari.server.AmbariRuntimeException;",
          "24: import org.apache.ambari.server.events.DefaultMessageEmitter;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27: import com.google.common.eventbus.AsyncEventBus;",
          "28: import com.google.common.eventbus.EventBus;",
          "29: import com.google.inject.Inject;",
          "30: import com.google.inject.Singleton;",
          "32: @Singleton",
          "33: public class STOMPUpdatePublisher {",
          "37:   @Inject",
          "38:   private RequestUpdateEventPublisher requestUpdateEventPublisher;",
          "",
          "[Removed Lines]",
          "35:   private final EventBus m_eventBus;",
          "",
          "[Added Lines]",
          "32: import com.google.common.util.concurrent.ThreadFactoryBuilder;",
          "39:   private final EventBus agentEventBus;",
          "40:   private final EventBus apiEventBus;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "43:   @Inject",
          "44:   private ServiceUpdateEventPublisher serviceUpdateEventPublisher;",
          "49:   }",
          "51:   public void publish(STOMPEvent event) {",
          "52:     if (event.getType().equals(STOMPEvent.Type.REQUEST)) {",
          "54:     } else if (event.getType().equals(STOMPEvent.Type.HOSTCOMPONENT)) {",
          "56:     } else if (event.getType().equals(STOMPEvent.Type.SERVICE)) {",
          "58:     } else {",
          "60:     }",
          "61:   }",
          "65:   }",
          "66: }",
          "",
          "[Removed Lines]",
          "46:   public STOMPUpdatePublisher() {",
          "47:     m_eventBus = new AsyncEventBus(\"ambari-update-bus\",",
          "48:       Executors.newSingleThreadExecutor());",
          "53:       requestUpdateEventPublisher.publish((RequestUpdateEvent) event, m_eventBus);",
          "55:       hostComponentUpdateEventPublisher.publish((HostComponentsUpdateEvent) event, m_eventBus);",
          "57:       serviceUpdateEventPublisher.publish((ServiceUpdateEvent) event, m_eventBus);",
          "59:       m_eventBus.post(event);",
          "63:   public void register(Object object) {",
          "64:     m_eventBus.register(object);",
          "",
          "[Added Lines]",
          "51:   private final ExecutorService threadPoolExecutorAgent = Executors.newSingleThreadExecutor(",
          "52:       new ThreadFactoryBuilder().setNameFormat(\"stomp-agent-bus-%d\").build());",
          "53:   private final ExecutorService threadPoolExecutorAPI = Executors.newSingleThreadExecutor(",
          "54:       new ThreadFactoryBuilder().setNameFormat(\"stomp-api-bus-%d\").build());",
          "56:   public STOMPUpdatePublisher() throws NoSuchFieldException, IllegalAccessException {",
          "57:     agentEventBus = new AsyncEventBus(\"agent-update-bus\",",
          "58:         threadPoolExecutorAgent);",
          "60:     apiEventBus = new AsyncEventBus(\"api-update-bus\",",
          "61:         threadPoolExecutorAPI);",
          "65:     if (DefaultMessageEmitter.DEFAULT_AGENT_EVENT_TYPES.contains(event.getType())) {",
          "66:       publishAgent(event);",
          "67:     } else if (DefaultMessageEmitter.DEFAULT_API_EVENT_TYPES.contains(event.getType())) {",
          "68:       publishAPI(event);",
          "69:     } else {",
          "71:       throw new AmbariRuntimeException(\"Event with type {\" + event.getType() + \"} can not be published.\");",
          "72:     }",
          "73:   }",
          "75:   private void publishAPI(STOMPEvent event) {",
          "77:       requestUpdateEventPublisher.publish((RequestUpdateEvent) event, apiEventBus);",
          "79:       hostComponentUpdateEventPublisher.publish((HostComponentsUpdateEvent) event, apiEventBus);",
          "81:       serviceUpdateEventPublisher.publish((ServiceUpdateEvent) event, apiEventBus);",
          "83:       apiEventBus.post(event);",
          "87:   private void publishAgent(STOMPEvent event) {",
          "88:     agentEventBus.post(event);",
          "89:   }",
          "91:   public void registerAgent(Object object) {",
          "92:     agentEventBus.register(object);",
          "93:   }",
          "95:   public void registerAPI(Object object) {",
          "96:     apiEventBus.register(object);",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/metrics/system/impl/MetricsServiceImpl.java||ambari-server/src/main/java/org/apache/ambari/server/metrics/system/impl/MetricsServiceImpl.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/metrics/system/impl/MetricsServiceImpl.java -> ambari-server/src/main/java/org/apache/ambari/server/metrics/system/impl/MetricsServiceImpl.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "116:         src.init(MetricsConfiguration.getSubsetConfiguration(configuration, \"source.\" + sourceName + \".\"), sink);",
          "117:         sources.put(sourceName, src);",
          "118:         if (src instanceof StompEventsMetricsSource) {",
          "120:         }",
          "121:         src.start();",
          "122:       }",
          "",
          "[Removed Lines]",
          "119:           STOMPUpdatePublisher.register(src);",
          "",
          "[Added Lines]",
          "119:           STOMPUpdatePublisher.registerAPI(src);",
          "120:           STOMPUpdatePublisher.registerAgent(src);",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/state/svccomphost/ServiceComponentHostImpl.java||ambari-server/src/main/java/org/apache/ambari/server/state/svccomphost/ServiceComponentHostImpl.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/state/svccomphost/ServiceComponentHostImpl.java -> ambari-server/src/main/java/org/apache/ambari/server/state/svccomphost/ServiceComponentHostImpl.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1280:       LOG.error(\"Could not determine stale config\", e);",
          "1281:     }",
          "1283:     return r;",
          "1284:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1283:     try {",
          "1284:       Cluster cluster = clusters.getCluster(clusterName);",
          "1285:       ServiceComponent serviceComponent = cluster.getService(serviceName).getServiceComponent(serviceComponentName);",
          "1286:       ServiceComponentHost sch = serviceComponent.getServiceComponentHost(hostName);",
          "1287:       String refreshConfigsCommand = helper.getRefreshConfigsCommand(cluster,sch);",
          "1288:       r.setReloadConfig(refreshConfigsCommand != null);",
          "1289:     } catch (Exception e) {",
          "1290:       LOG.error(\"Could not determine reload config flag\", e);",
          "1291:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1307:       r.setStaleConfig(false);",
          "1308:     }",
          "1320:     return r;",
          "1321:   }",
          "",
          "[Removed Lines]",
          "1310:     try {",
          "1311:       Cluster cluster = clusters.getCluster(clusterName);",
          "1312:       ServiceComponent serviceComponent = cluster.getService(serviceName).getServiceComponent(serviceComponentName);",
          "1313:       ServiceComponentHost sch = serviceComponent.getServiceComponentHost(hostName);",
          "1314:       String refreshConfigsCommand = helper.getRefreshConfigsCommand(cluster,sch);",
          "1315:       r.setReloadConfig(refreshConfigsCommand != null);",
          "1316:     } catch (Exception e) {",
          "1317:       LOG.error(\"Could not determine reload config flag\", e);",
          "1318:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e9f71dc37e08a08b5e9253b87efba6f28e1452b2",
      "candidate_info": {
        "commit_hash": "e9f71dc37e08a08b5e9253b87efba6f28e1452b2",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/e9f71dc37e08a08b5e9253b87efba6f28e1452b2",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog275.java"
        ],
        "message": "AMBARI-25379 fix import order for checkstyle\n\nChange-Id: Iabe8a67aff996c1c903efed80e06388c9ed11346",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog275.java||ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog275.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog275.java||ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog275.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog275.java -> ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog275.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: import org.apache.ambari.server.orm.dao.BlueprintDAO;",
          "28: import org.apache.ambari.server.orm.entities.BlueprintConfigEntity;",
          "29: import org.apache.ambari.server.orm.entities.BlueprintEntity;",
          "31: import com.google.gson.Gson;",
          "32: import com.google.inject.Inject;",
          "33: import com.google.inject.Injector;",
          "",
          "[Removed Lines]",
          "35: import org.slf4j.Logger;",
          "36: import org.slf4j.LoggerFactory;",
          "",
          "[Added Lines]",
          "30: import org.slf4j.Logger;",
          "31: import org.slf4j.LoggerFactory;",
          "",
          "---------------"
        ]
      }
    }
  ]
}