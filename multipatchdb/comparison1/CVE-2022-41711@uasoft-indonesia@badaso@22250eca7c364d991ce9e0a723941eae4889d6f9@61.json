{
  "cve_id": "CVE-2022-41711",
  "cve_desc": "Badaso version 2.6.0 allows an unauthenticated remote attacker to execute arbitrary code remotely on the server. This is possible because the application does not properly validate the data uploaded by users.",
  "repo": "uasoft-indonesia/badaso",
  "patch_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
  "patch_info": {
    "commit_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
    "repo": "uasoft-indonesia/badaso",
    "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/22250eca7c364d991ce9e0a723941eae4889d6f9",
    "files": [
      "src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue"
    ],
    "message": "Merge pull request #807 from uasoft-indonesia/bugfix/v2/filter-mimeType\n\nBugfix[v2] add filter mimeType",
    "before_after_code_files": [
      "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue"
    ]
  },
  "patch_diff": {
    "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue": [
      "File: src/resources/js/components/BadasoUploadFile.vue -> src/resources/js/components/BadasoUploadFile.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "336:           });",
      "337:           return;",
      "338:         }",
      "340:         this.uploadFile(files[0]);",
      "341:       }",
      "342:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "339:         if (!this.availableMimetypes.file.validMime.includes(files[0].type)) {",
      "340:           this.$vs.notify({",
      "341:             title: this.$t(\"alert.danger\"),",
      "342:             text: \"File type not allowed\",",
      "343:             color: \"danger\",",
      "344:           });",
      "345:           return;",
      "346:         }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadFileMultiple.vue -> src/resources/js/components/BadasoUploadFileMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "367:             });",
      "368:             return;",
      "369:           }",
      "371:           this.uploadFile(file);",
      "372:         }",
      "373:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "370:           if (!this.availableMimetypes.file.validMime.includes(file.type)) {",
      "371:             this.$vs.notify({",
      "372:               title: this.$t(\"alert.danger\"),",
      "373:               text: \"File type not allowed\",",
      "374:               color: \"danger\",",
      "375:             });",
      "376:             return;",
      "377:           }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue": [
      "File: src/resources/js/components/BadasoUploadImage.vue -> src/resources/js/components/BadasoUploadImage.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "380:           });",
      "381:           return;",
      "382:         }",
      "384:         this.uploadImage(files[0]);",
      "385:       }",
      "386:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "383:         if (!this.availableMimetypes.image.validMime.includes(files[0].type)){",
      "384:           this.$vs.notify({",
      "385:             title: this.$t(\"alert.danger\"),",
      "386:             text: \"File type not allowed\",",
      "387:             color: \"danger\",",
      "388:           });",
      "389:           return;",
      "390:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "421:     uploadImage(file) {",
      "422:       const files = new FormData();",
      "423:       files.append(\"upload\", file);",
      "425:       files.append(\"working_dir\", this.getActiveFolder);",
      "426:       this.$api.badasoFile",
      "427:         .uploadUsingLfm(files)",
      "",
      "[Removed Lines]",
      "424:       files.append(\"type\", \"image\");",
      "",
      "[Added Lines]",
      "431:       files.append(\"type\", file.type);",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadImageMultiple.vue -> src/resources/js/components/BadasoUploadImageMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:             });",
      "396:             return;",
      "397:           }",
      "399:           this.uploadImage(file);",
      "400:         }",
      "401:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "398:           if (!this.availableMimetypes.image.validMime.includes(file.type)) {",
      "399:             this.$vs.notify({",
      "400:               title: this.$t(\"alert.danger\"),",
      "401:               text: \"File type not allowed\",",
      "402:               color: \"danger\",",
      "403:             });",
      "404:             return;",
      "405:           }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "aad63b8aa7529f1d9fdbb4acc57c9d61bcdabeb0",
      "candidate_info": {
        "commit_hash": "aad63b8aa7529f1d9fdbb4acc57c9d61bcdabeb0",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/aad63b8aa7529f1d9fdbb4acc57c9d61bcdabeb0",
        "files": [
          "src/resources/js/pages/crud-generated/read.vue"
        ],
        "message": "delete comment",
        "before_after_code_files": [
          "src/resources/js/pages/crud-generated/read.vue||src/resources/js/pages/crud-generated/read.vue"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/resources/js/pages/crud-generated/read.vue||src/resources/js/pages/crud-generated/read.vue": [
          "File: src/resources/js/pages/crud-generated/read.vue -> src/resources/js/pages/crud-generated/read.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "262:         this.$closeLoader();",
          "263:         this.dataType = dataType;",
          "264:         this.record = response.data;",
          "267:         const dataRows = this.dataType.dataRows.map((data) => {",
          "268:           try {",
          "",
          "[Removed Lines]",
          "265:         console.log(this.record,'rec')",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "934297506c3472f728ab6dc322eef889b74b62fb",
      "candidate_info": {
        "commit_hash": "934297506c3472f728ab6dc322eef889b74b62fb",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/934297506c3472f728ab6dc322eef889b74b62fb",
        "files": [
          "src/Helpers/GetData.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "src/Helpers/GetData.php||src/Helpers/GetData.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Helpers/GetData.php||src/Helpers/GetData.php": [
          "File: src/Helpers/GetData.php -> src/Helpers/GetData.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "226:                         $upload_image_multiples = json_decode($record->{$data_row->field}, true);",
          "227:                         if (isset($upload_image_multiples)) {",
          "228:                             $upload_image_multiples = collect($upload_image_multiples)->map(function ($upload_image_multiple) {",
          "236:                                 }",
          "237:                                 $asset = asset('storage/'.$upload_image_multiple);",
          "",
          "[Removed Lines]",
          "229:                                 if(config('lfm.should_create_thumbnails') == true){",
          "230:                                 $put_thumbs = config('lfm.thumb_folder_name');",
          "231:                                 $upload_image_multiple = explode('/', $upload_image_multiple);",
          "232:                                 $file_name = $upload_image_multiple[count($upload_image_multiple) - 1];",
          "233:                                 $upload_image_multiple[count($upload_image_multiple) - 1] = $put_thumbs;",
          "234:                                 $upload_image_multiple[] = $file_name;",
          "235:                                 $upload_image_multiple = join('/', $upload_image_multiple);",
          "",
          "[Added Lines]",
          "229:                                 if (config('lfm.should_create_thumbnails') == true) {",
          "230:                                     $put_thumbs = config('lfm.thumb_folder_name');",
          "231:                                     $upload_image_multiple = explode('/', $upload_image_multiple);",
          "232:                                     $file_name = $upload_image_multiple[count($upload_image_multiple) - 1];",
          "233:                                     $upload_image_multiple[count($upload_image_multiple) - 1] = $put_thumbs;",
          "234:                                     $upload_image_multiple[] = $file_name;",
          "235:                                     $upload_image_multiple = join('/', $upload_image_multiple);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "246:                     if (isset($record->{$data_row->field})) {",
          "247:                         $upload_image = $record->{$data_row->field};",
          "248:                         if (isset($upload_image)) {",
          "256:                             }",
          "257:                             $upload_image = asset('storage/'.$upload_image);",
          "258:                             $record->{$data_row->field} = $upload_image;",
          "",
          "[Removed Lines]",
          "249:                             if(config('lfm.should_create_thumbnails') == true){",
          "250:                             $put_thumbs = config('lfm.thumb_folder_name');",
          "251:                             $upload_image = explode('/', $upload_image);",
          "252:                             $file_name = $upload_image[count($upload_image) - 1];",
          "253:                             $upload_image[count($upload_image) - 1] = $put_thumbs;",
          "254:                             $upload_image[] = $file_name;",
          "255:                             $upload_image = join('/', $upload_image);",
          "",
          "[Added Lines]",
          "249:                             if (config('lfm.should_create_thumbnails') == true) {",
          "250:                                 $put_thumbs = config('lfm.thumb_folder_name');",
          "251:                                 $upload_image = explode('/', $upload_image);",
          "252:                                 $file_name = $upload_image[count($upload_image) - 1];",
          "253:                                 $upload_image[count($upload_image) - 1] = $put_thumbs;",
          "254:                                 $upload_image[] = $file_name;",
          "255:                                 $upload_image = join('/', $upload_image);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6ad2e62f4778b7d16d48e733b14c03e2aa5c4b70",
      "candidate_info": {
        "commit_hash": "6ad2e62f4778b7d16d48e733b14c03e2aa5c4b70",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/6ad2e62f4778b7d16d48e733b14c03e2aa5c4b70",
        "files": [
          "src/Migrations/2022_03_08_090850_change_order_integer_data_type_in_menus_table.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "src/Migrations/2022_03_08_090850_change_order_integer_data_type_in_menus_table.php||src/Migrations/2022_03_08_090850_change_order_integer_data_type_in_menus_table.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Migrations/2022_03_08_090850_change_order_integer_data_type_in_menus_table.php||src/Migrations/2022_03_08_090850_change_order_integer_data_type_in_menus_table.php": [
          "File: src/Migrations/2022_03_08_090850_change_order_integer_data_type_in_menus_table.php -> src/Migrations/2022_03_08_090850_change_order_integer_data_type_in_menus_table.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:     public function up()",
          "15:     {",
          "18:                 $table->integer('order')->change();",
          "19:             }",
          "20:         });",
          "",
          "[Removed Lines]",
          "16:         Schema::table(config('badaso.database.prefix') . 'menus', function (Blueprint $table) {",
          "17:             if (Schema::hasColumn(config('badaso.database.prefix') . 'menus', 'order')) {",
          "",
          "[Added Lines]",
          "16:         Schema::table(config('badaso.database.prefix').'menus', function (Blueprint $table) {",
          "17:             if (Schema::hasColumn(config('badaso.database.prefix').'menus', 'order')) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "28:     public function down()",
          "29:     {",
          "32:                 $table->integer('order')->change();",
          "33:             }",
          "34:         });",
          "",
          "[Removed Lines]",
          "30:         Schema::table(config('badaso.database.prefix') . 'menus', function (Blueprint $table) {",
          "31:             if (Schema::hasColumn(config('badaso.database.prefix') . 'menus', 'order')) {",
          "",
          "[Added Lines]",
          "30:         Schema::table(config('badaso.database.prefix').'menus', function (Blueprint $table) {",
          "31:             if (Schema::hasColumn(config('badaso.database.prefix').'menus', 'order')) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b7994504bf85c185acfe9af9ddef2db2faeffa44",
      "candidate_info": {
        "commit_hash": "b7994504bf85c185acfe9af9ddef2db2faeffa44",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/b7994504bf85c185acfe9af9ddef2db2faeffa44",
        "files": [
          "src/Models/Configuration.php",
          "src/Models/DataRow.php",
          "src/Models/DataType.php",
          "src/Models/EmailReset.php",
          "src/Models/FirebaseCloudMessages.php",
          "src/Models/Menu.php",
          "src/Models/MenuItem.php",
          "src/Models/Permission.php",
          "src/Models/Role.php",
          "src/Models/RolePermission.php",
          "src/Models/User.php",
          "src/Models/UserRole.php",
          "src/Models/UserVerification.php"
        ],
        "message": "update model",
        "before_after_code_files": [
          "src/Models/Configuration.php||src/Models/Configuration.php",
          "src/Models/DataRow.php||src/Models/DataRow.php",
          "src/Models/DataType.php||src/Models/DataType.php",
          "src/Models/EmailReset.php||src/Models/EmailReset.php",
          "src/Models/FirebaseCloudMessages.php||src/Models/FirebaseCloudMessages.php",
          "src/Models/Menu.php||src/Models/Menu.php",
          "src/Models/MenuItem.php||src/Models/MenuItem.php",
          "src/Models/Permission.php||src/Models/Permission.php",
          "src/Models/Role.php||src/Models/Role.php",
          "src/Models/RolePermission.php||src/Models/RolePermission.php",
          "src/Models/User.php||src/Models/User.php",
          "src/Models/UserRole.php||src/Models/UserRole.php",
          "src/Models/UserVerification.php||src/Models/UserVerification.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Models/Configuration.php||src/Models/Configuration.php": [
          "File: src/Models/Configuration.php -> src/Models/Configuration.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: namespace Uasoft\\Badaso\\Models;",
          "5: use Illuminate\\Database\\Eloquent\\Model;",
          "6: use Spatie\\Activitylog\\Traits\\LogsActivity;",
          "8: class Configuration extends Model",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: use Spatie\\Activitylog\\LogOptions;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:     {",
          "46:         return $value == 1;",
          "47:     }",
          "48: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:     public function getActivitylogOptions(): LogOptions",
          "51:     {",
          "52:         return LogOptions::defaults();",
          "53:     }",
          "",
          "---------------"
        ],
        "src/Models/DataRow.php||src/Models/DataRow.php": [
          "File: src/Models/DataRow.php -> src/Models/DataRow.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: namespace Uasoft\\Badaso\\Models;",
          "5: use Illuminate\\Database\\Eloquent\\Model;",
          "6: use Spatie\\Activitylog\\Traits\\LogsActivity;",
          "8: class DataRow extends Model",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: use Spatie\\Activitylog\\LogOptions;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44:     {",
          "45:         return \"This model has been {$eventName}\";",
          "46:     }",
          "47: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:     public function getActivitylogOptions(): LogOptions",
          "50:     {",
          "51:         return LogOptions::defaults();",
          "52:     }",
          "",
          "---------------"
        ],
        "src/Models/DataType.php||src/Models/DataType.php": [
          "File: src/Models/DataType.php -> src/Models/DataType.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: namespace Uasoft\\Badaso\\Models;",
          "5: use Illuminate\\Database\\Eloquent\\Model;",
          "6: use Uasoft\\Badaso\\Facades\\Badaso;",
          "8: class DataType extends Model",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: use Spatie\\Activitylog\\LogOptions;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:     {",
          "44:         return $this->hasMany(Badaso::model('DataRow'))->orderBy('order', 'asc');",
          "45:     }",
          "46: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48:     public function getActivitylogOptions(): LogOptions",
          "49:     {",
          "50:         return LogOptions::defaults();",
          "51:     }",
          "",
          "---------------"
        ],
        "src/Models/EmailReset.php||src/Models/EmailReset.php": [
          "File: src/Models/EmailReset.php -> src/Models/EmailReset.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: namespace Uasoft\\Badaso\\Models;",
          "5: use Illuminate\\Database\\Eloquent\\Model;",
          "6: use Spatie\\Activitylog\\Traits\\LogsActivity;",
          "8: class EmailReset extends Model",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: use Spatie\\Activitylog\\LogOptions;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37:     {",
          "38:         return \"This model has been {$eventName}\";",
          "39:     }",
          "40: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42:     public function getActivitylogOptions(): LogOptions",
          "43:     {",
          "44:         return LogOptions::defaults();",
          "45:     }",
          "",
          "---------------"
        ],
        "src/Models/FirebaseCloudMessages.php||src/Models/FirebaseCloudMessages.php": [
          "File: src/Models/FirebaseCloudMessages.php -> src/Models/FirebaseCloudMessages.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: use Illuminate\\Database\\Eloquent\\Model;",
          "6: use Illuminate\\Support\\Str;",
          "7: use Spatie\\Activitylog\\Traits\\LogsActivity;",
          "9: class FirebaseCloudMessages extends Model",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: use Spatie\\Activitylog\\LogOptions;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44:             $model->setAttribute($model->getKeyName(), Str::uuid());",
          "45:         });",
          "46:     }",
          "47: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:     public function getActivitylogOptions(): LogOptions",
          "50:     {",
          "51:         return LogOptions::defaults();",
          "52:     }",
          "",
          "---------------"
        ],
        "src/Models/Menu.php||src/Models/Menu.php": [
          "File: src/Models/Menu.php -> src/Models/Menu.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: namespace Uasoft\\Badaso\\Models;",
          "5: use Illuminate\\Database\\Eloquent\\Model;",
          "6: use Spatie\\Activitylog\\Traits\\LogsActivity;",
          "8: class Menu extends Model",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: use Spatie\\Activitylog\\LogOptions;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33:     {",
          "34:         return \"This model has been {$eventName}\";",
          "35:     }",
          "36: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38:     public function getActivitylogOptions(): LogOptions",
          "39:     {",
          "40:         return LogOptions::defaults();",
          "41:     }",
          "",
          "---------------"
        ],
        "src/Models/MenuItem.php||src/Models/MenuItem.php": [
          "File: src/Models/MenuItem.php -> src/Models/MenuItem.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: namespace Uasoft\\Badaso\\Models;",
          "5: use Illuminate\\Database\\Eloquent\\Model;",
          "6: use Spatie\\Activitylog\\Traits\\LogsActivity;",
          "8: class MenuItem extends Model",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: use Spatie\\Activitylog\\LogOptions;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:         }",
          "48:         $item = $item->orderBy('order', 'DESC')",
          "51:         if (! is_null($item)) {",
          "52:             $order = intval($item->order) + 1;",
          "",
          "[Removed Lines]",
          "49:             ->first();",
          "",
          "[Added Lines]",
          "50:         ->first();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "71:     {",
          "72:         return \"This model has been {$eventName}\";",
          "73:     }",
          "74: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:     public function getActivitylogOptions(): LogOptions",
          "77:     {",
          "78:         return LogOptions::defaults();",
          "79:     }",
          "",
          "---------------"
        ],
        "src/Models/Permission.php||src/Models/Permission.php": [
          "File: src/Models/Permission.php -> src/Models/Permission.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: namespace Uasoft\\Badaso\\Models;",
          "5: use Illuminate\\Database\\Eloquent\\Model;",
          "6: use Spatie\\Activitylog\\Traits\\LogsActivity;",
          "8: class Permission extends Model",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: use Spatie\\Activitylog\\LogOptions;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "89:     {",
          "90:         return $this->belongsTo(RolePermission::class);",
          "91:     }",
          "92: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "95:     public function getActivitylogOptions(): LogOptions",
          "96:     {",
          "97:         return LogOptions::defaults();",
          "98:     }",
          "",
          "---------------"
        ],
        "src/Models/Role.php||src/Models/Role.php": [
          "File: src/Models/Role.php -> src/Models/Role.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: namespace Uasoft\\Badaso\\Models;",
          "5: use Illuminate\\Database\\Eloquent\\Model;",
          "6: use Spatie\\Activitylog\\Traits\\LogsActivity;",
          "8: class Role extends Model",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: use Spatie\\Activitylog\\LogOptions;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50:     {",
          "51:         return \"This model has been {$eventName}\";",
          "52:     }",
          "53: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55:     public function getActivitylogOptions(): LogOptions",
          "56:     {",
          "57:         return LogOptions::defaults();",
          "58:     }",
          "",
          "---------------"
        ],
        "src/Models/RolePermission.php||src/Models/RolePermission.php": [
          "File: src/Models/RolePermission.php -> src/Models/RolePermission.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: namespace Uasoft\\Badaso\\Models;",
          "5: use Illuminate\\Database\\Eloquent\\Model;",
          "6: use Spatie\\Activitylog\\Traits\\LogsActivity;",
          "8: class RolePermission extends Model",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: use Spatie\\Activitylog\\LogOptions;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:     {",
          "46:         return \"This model has been {$eventName}\";",
          "47:     }",
          "48: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:     public function getActivitylogOptions(): LogOptions",
          "51:     {",
          "52:         return LogOptions::defaults();",
          "53:     }",
          "",
          "---------------"
        ],
        "src/Models/User.php||src/Models/User.php": [
          "File: src/Models/User.php -> src/Models/User.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: namespace Uasoft\\Badaso\\Models;",
          "5: use Illuminate\\Foundation\\Auth\\User as Authenticatable;",
          "6: use Illuminate\\Notifications\\Notifiable;",
          "7: use Spatie\\Activitylog\\Traits\\LogsActivity;",
          "11: {",
          "16:     protected $table = null;",
          "",
          "[Removed Lines]",
          "8: use Tymon\\JWTAuth\\Contracts\\JWTSubject;",
          "10: class User extends Authenticatable implements JWTSubject",
          "13:     use Notifiable;",
          "14:     use LogsActivity;",
          "",
          "[Added Lines]",
          "5: use Illuminate\\Database\\Eloquent\\Factories\\HasFactory;",
          "8: use Laravel\\Sanctum\\HasApiTokens;",
          "9: use Spatie\\Activitylog\\LogOptions;",
          "12: class User extends Authenticatable",
          "15:     use HasApiTokens, HasFactory, Notifiable, LogsActivity;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58:         'email_verified_at' => 'datetime',",
          "59:     ];",
          "81:     protected static $logAttributes = [",
          "82:         'name',",
          "83:         'email',",
          "",
          "[Removed Lines]",
          "66:     public function getJWTIdentifier()",
          "67:     {",
          "68:         return $this->getKey();",
          "69:     }",
          "76:     public function getJWTCustomClaims()",
          "77:     {",
          "78:         return [];",
          "79:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "103:     {",
          "104:         return $this->belongsToMany(Role::class, config('badaso.database.prefix').'user_roles');",
          "105:     }",
          "106: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88:     public function getActivitylogOptions(): LogOptions {",
          "89:         return LogOptions::defaults();",
          "90:     }",
          "",
          "---------------"
        ],
        "src/Models/UserRole.php||src/Models/UserRole.php": [
          "File: src/Models/UserRole.php -> src/Models/UserRole.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: namespace Uasoft\\Badaso\\Models;",
          "5: use Illuminate\\Database\\Eloquent\\Model;",
          "6: use Spatie\\Activitylog\\Traits\\LogsActivity;",
          "8: class UserRole extends Model",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: use Spatie\\Activitylog\\LogOptions;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44:     {",
          "45:         return \"This model has been {$eventName}\";",
          "46:     }",
          "47: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:     public function getActivitylogOptions(): LogOptions",
          "50:     {",
          "51:         return LogOptions::defaults();",
          "52:     }",
          "",
          "---------------"
        ],
        "src/Models/UserVerification.php||src/Models/UserVerification.php": [
          "File: src/Models/UserVerification.php -> src/Models/UserVerification.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: namespace Uasoft\\Badaso\\Models;",
          "5: use Illuminate\\Database\\Eloquent\\Model;",
          "6: use Spatie\\Activitylog\\Traits\\LogsActivity;",
          "8: class UserVerification extends Model",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: use Spatie\\Activitylog\\LogOptions;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41:     {",
          "42:         return \"This model has been {$eventName}\";",
          "43:     }",
          "44: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46:     public function getActivitylogOptions(): LogOptions",
          "47:     {",
          "48:         return LogOptions::defaults();",
          "49:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f7ec5fcf8386fc3a98c1c9abbb8311822150c37a",
      "candidate_info": {
        "commit_hash": "f7ec5fcf8386fc3a98c1c9abbb8311822150c37a",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/f7ec5fcf8386fc3a98c1c9abbb8311822150c37a",
        "files": [
          "src/Controllers/BadasoActivityLogController.php",
          "src/Controllers/BadasoAuthController.php",
          "src/Controllers/BadasoBaseController.php",
          "src/Controllers/BadasoCRUDController.php",
          "src/Controllers/BadasoConfigurationsController.php",
          "src/Controllers/BadasoDatabaseController.php",
          "src/Controllers/BadasoMenuController.php",
          "src/Controllers/BadasoPermissionController.php",
          "src/Controllers/BadasoRoleController.php",
          "src/Controllers/BadasoRolePermissionController.php",
          "src/Controllers/BadasoTableController.php",
          "src/Controllers/BadasoUserController.php",
          "src/Controllers/BadasoUserRoleController.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "src/Controllers/BadasoActivityLogController.php||src/Controllers/BadasoActivityLogController.php",
          "src/Controllers/BadasoAuthController.php||src/Controllers/BadasoAuthController.php",
          "src/Controllers/BadasoBaseController.php||src/Controllers/BadasoBaseController.php",
          "src/Controllers/BadasoCRUDController.php||src/Controllers/BadasoCRUDController.php",
          "src/Controllers/BadasoConfigurationsController.php||src/Controllers/BadasoConfigurationsController.php",
          "src/Controllers/BadasoDatabaseController.php||src/Controllers/BadasoDatabaseController.php",
          "src/Controllers/BadasoMenuController.php||src/Controllers/BadasoMenuController.php",
          "src/Controllers/BadasoPermissionController.php||src/Controllers/BadasoPermissionController.php",
          "src/Controllers/BadasoRoleController.php||src/Controllers/BadasoRoleController.php",
          "src/Controllers/BadasoRolePermissionController.php||src/Controllers/BadasoRolePermissionController.php",
          "src/Controllers/BadasoTableController.php||src/Controllers/BadasoTableController.php",
          "src/Controllers/BadasoUserController.php||src/Controllers/BadasoUserController.php",
          "src/Controllers/BadasoUserRoleController.php||src/Controllers/BadasoUserRoleController.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Controllers/BadasoActivityLogController.php||src/Controllers/BadasoActivityLogController.php": [
          "File: src/Controllers/BadasoActivityLogController.php -> src/Controllers/BadasoActivityLogController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "15:     {",
          "16:         try {",
          "17:             $limit = $request->get('limit', 10);",
          "19:             $order_field = $request->get('order_field');",
          "20:             $order_direction = $request->get('order_direction');",
          "",
          "[Removed Lines]",
          "18:             $filter = '%' . $request->get('filter', '') . '%';",
          "",
          "[Added Lines]",
          "18:             $filter = '%'.$request->get('filter', '').'%';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:             foreach ($data->data as $index => $value) {",
          "46:                 $user = User::find($value->causer_id);",
          "48:                 if (isset($user)) {",
          "49:                     $causer_name = $user->name;",
          "50:                 }",
          "",
          "[Removed Lines]",
          "47:                 $causer_name = \"\";",
          "",
          "[Added Lines]",
          "46:                 $causer_name = '';",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoAuthController.php||src/Controllers/BadasoAuthController.php": [
          "File: src/Controllers/BadasoAuthController.php -> src/Controllers/BadasoAuthController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:                 'email' => [",
          "47:                     'required',",
          "48:                     function ($attribute, $value, $fail) use ($credentials) {",
          "50:                             $fail(__('badaso::validation.auth.invalid_credentials'));",
          "51:                         }",
          "52:                     },",
          "",
          "[Removed Lines]",
          "49:                         if (!$token = auth()->attempt($credentials)) {",
          "",
          "[Added Lines]",
          "49:                         if (! $token = auth()->attempt($credentials)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "118:             $user_role->save();",
          "120:             $should_verify_email = Config::get('adminPanelVerifyEmail') == '1' ? true : false;",
          "122:                 $ttl = $this->getTTL();",
          "123:                 $token = auth()->setTTL($ttl)->login($user);",
          "",
          "[Removed Lines]",
          "121:             if (!$should_verify_email) {",
          "",
          "[Added Lines]",
          "122:             if (! $should_verify_email) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "128:                     ->causedBy(auth()->user() ?? null)",
          "129:                     ->withProperties(['attributes' => [",
          "130:                         'user' => $user,",
          "132:                     ]])",
          "133:                     ->performedOn($user)",
          "134:                     ->event('created')",
          "",
          "[Removed Lines]",
          "131:                         'role' => $user_role",
          "",
          "[Added Lines]",
          "132:                         'role' => $user_role,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "180:     public function getAuthenticatedUser()",
          "181:     {",
          "182:         try {",
          "184:                 throw new SingleException(__('badaso::validation.auth.user_not_found'));",
          "185:             }",
          "",
          "[Removed Lines]",
          "183:             if (!$user = AuthenticatedUser::getUser()) {",
          "",
          "[Added Lines]",
          "184:             if (! $user = AuthenticatedUser::getUser()) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "246:     public function changePassword(Request $request)",
          "247:     {",
          "248:         try {",
          "250:                 throw new SingleException(__('badaso::validation.auth.user_not_found'));",
          "251:             }",
          "",
          "[Removed Lines]",
          "249:             if (!$user = auth()->user()) {",
          "",
          "[Added Lines]",
          "250:             if (! $user = auth()->user()) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "254:                 'old_password' => [",
          "255:                     'required',",
          "256:                     function ($attribute, $value, $fail) use ($user) {",
          "258:                             $fail(__('badaso::validation.auth.wrong_old_password'));",
          "259:                         }",
          "260:                     },",
          "",
          "[Removed Lines]",
          "257:                         if (!Hash::check($value, $user->password)) {",
          "",
          "[Added Lines]",
          "258:                         if (! Hash::check($value, $user->password)) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "395:             $user_verification = UserVerification::where('user_id', $user->id)",
          "396:                 ->first();",
          "399:                 throw new SingleException(__('badaso::validation.verification.verification_not_found'));",
          "400:             }",
          "",
          "[Removed Lines]",
          "398:             if (!$user_verification) {",
          "",
          "[Added Lines]",
          "399:             if (! $user_verification) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "440:         DB::beginTransaction();",
          "442:         try {",
          "444:                 throw new SingleException(__('badaso::validation.auth.user_not_found'));",
          "445:             }",
          "",
          "[Removed Lines]",
          "443:             if (!$user = auth()->user()) {",
          "",
          "[Added Lines]",
          "444:             if (! $user = auth()->user()) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "484:         DB::beginTransaction();",
          "486:         try {",
          "488:                 throw new SingleException(__('badaso::validation.auth.user_not_found'));",
          "489:             }",
          "",
          "[Removed Lines]",
          "487:             if (!$user = auth()->user()) {",
          "",
          "[Added Lines]",
          "488:             if (! $user = auth()->user()) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "552:     public function verifyEmail(Request $request)",
          "553:     {",
          "554:         try {",
          "556:                 throw new SingleException(__('badaso::validation.auth.user_not_found'));",
          "557:             }",
          "",
          "[Removed Lines]",
          "555:             if (!$user = auth()->user()) {",
          "",
          "[Added Lines]",
          "554:             if (! $user = auth()->user()) {",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoBaseController.php||src/Controllers/BadasoBaseController.php": [
          "File: src/Controllers/BadasoBaseController.php -> src/Controllers/BadasoBaseController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:             $slug = $this->getSlug($request);",
          "62:             $data_type = $this->getDataType($slug);",
          "63:             $request->validate([",
          "65:             ]);",
          "67:             $data = $this->getDataDetail($slug, $request->id);",
          "",
          "[Removed Lines]",
          "64:                 'id' => 'exists:' . $data_type->name,",
          "",
          "[Added Lines]",
          "64:                 'id' => 'exists:'.$data_type->name,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "105:                     'old' => $updated['old_data'],",
          "106:                     'attributes' => $updated['updated_data'],",
          "107:                 ])",
          "110:             $table_name = $data_type->name;",
          "111:             FCMNotification::notification(FCMNotification::$ACTIVE_EVENT_ON_UPDATE, $table_name);",
          "",
          "[Removed Lines]",
          "108:                 ->log($data_type->display_name_singular . ' has been updated');",
          "",
          "[Added Lines]",
          "106:                 ->log($data_type->display_name_singular.' has been updated');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "143:             activity($data_type->display_name_singular)",
          "144:                 ->causedBy(auth()->user() ?? null)",
          "145:                 ->withProperties(['attributes' => $stored_data])",
          "148:             DB::commit();",
          "",
          "[Removed Lines]",
          "146:                 ->log($data_type->display_name_singular . ' has been created');",
          "",
          "[Added Lines]",
          "144:                 ->log($data_type->display_name_singular.' has been created');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "184:             activity($data_type->display_name_singular)",
          "185:                 ->causedBy(auth()->user() ?? null)",
          "186:                 ->withProperties($data)",
          "189:             DB::commit();",
          "",
          "[Removed Lines]",
          "187:                 ->log($data_type->display_name_singular . ' has been deleted');",
          "",
          "[Added Lines]",
          "185:                 ->log($data_type->display_name_singular.' has been deleted');",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "223:             activity($data_type->display_name_singular)",
          "224:                 ->causedBy(auth()->user() ?? null)",
          "225:                 ->withProperties($data)",
          "228:             DB::commit();",
          "",
          "[Removed Lines]",
          "226:                 ->log($data_type->display_name_singular . ' has been restore');",
          "",
          "[Added Lines]",
          "224:                 ->log($data_type->display_name_singular.' has been restore');",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "265:             activity($data_type->display_name_singular)",
          "266:                 ->causedBy(auth()->user() ?? null)",
          "267:                 ->withProperties($data)",
          "270:             DB::commit();",
          "",
          "[Removed Lines]",
          "268:                 ->log($data_type->display_name_singular . ' has been bulk deleted');",
          "",
          "[Added Lines]",
          "266:                 ->log($data_type->display_name_singular.' has been bulk deleted');",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "305:             activity($data_type->display_name_singular)",
          "306:                 ->causedBy(auth()->user() ?? null)",
          "307:                 ->withProperties($data)",
          "310:             DB::commit();",
          "",
          "[Removed Lines]",
          "308:                 ->log($data_type->display_name_singular . ' has been bulk deleted');",
          "",
          "[Added Lines]",
          "306:                 ->log($data_type->display_name_singular.' has been bulk deleted');",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "343:                     activity($data_type->display_name_singular)",
          "344:                         ->causedBy(auth()->user() ?? null)",
          "345:                         ->withProperties(['attributes' => $single_data])",
          "347:                 }",
          "348:             } else {",
          "349:                 foreach ($request->data as $index => $row) {",
          "",
          "[Removed Lines]",
          "346:                         ->log($data_type->display_name_singular . ' has been sorted');",
          "",
          "[Added Lines]",
          "344:                         ->log($data_type->display_name_singular.' has been sorted');",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "353:                     activity($data_type->display_name_singular)",
          "354:                         ->causedBy(auth()->user() ?? null)",
          "355:                         ->withProperties(['attributes' => $updated_data])",
          "357:                 }",
          "358:             }",
          "",
          "[Removed Lines]",
          "356:                         ->log($data_type->display_name_singular . ' has been sorted');",
          "",
          "[Added Lines]",
          "354:                         ->log($data_type->display_name_singular.' has been sorted');",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoCRUDController.php||src/Controllers/BadasoCRUDController.php": [
          "File: src/Controllers/BadasoCRUDController.php -> src/Controllers/BadasoCRUDController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "264:                 ])",
          "265:                 ->performedOn($data_type)",
          "266:                 ->event('updated')",
          "269:             return ApiResponse::success($data_type);",
          "270:         } catch (Exception $e) {",
          "",
          "[Removed Lines]",
          "267:                 ->log('CRUD table ' . $data_type->slug . ' has been updated');",
          "",
          "[Added Lines]",
          "265:                 ->log('CRUD table '.$data_type->slug.' has been updated');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "394:             $this->generateAPIDocs($table_name, $data_rows, $new_data_type);",
          "396:             DB::commit();",
          "398:             activity('CRUD')",
          "399:                 ->causedBy(auth()->user() ?? null)",
          "400:                 ->withProperties(['attributes' => $new_data_type])",
          "401:                 ->performedOn($new_data_type)",
          "402:                 ->event('created')",
          "404:             return ApiResponse::success($new_data_type);",
          "405:         } catch (Exception $e) {",
          "406:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "403:                 ->log('CRUD table ' . $new_data_type->slug . ' has been created');",
          "",
          "[Added Lines]",
          "401:                 ->log('CRUD table '.$new_data_type->slug.' has been created');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "437:             ->withProperties(['attributes' => $data_type])",
          "438:             ->performedOn($data_type)",
          "439:             ->event('deleted')",
          "442:             return ApiResponse::success();",
          "443:         } catch (Exception $e) {",
          "",
          "[Removed Lines]",
          "440:             ->log('CRUD table ' . $data_type->slug . ' has been deleted');",
          "",
          "[Added Lines]",
          "439:             ->log('CRUD table '.$data_type->slug.' has been deleted');",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoConfigurationsController.php||src/Controllers/BadasoConfigurationsController.php": [
          "File: src/Controllers/BadasoConfigurationsController.php -> src/Controllers/BadasoConfigurationsController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "129:             ]);",
          "130:             $configuration = Configuration::find($request->id);",
          "133:                 $configuration->key = $request->key;",
          "134:                 $configuration->display_name = $request->display_name;",
          "135:                 $configuration->value = $request->value;",
          "",
          "[Removed Lines]",
          "132:             if (!is_null($configuration)) {",
          "",
          "[Added Lines]",
          "131:             if (! is_null($configuration)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "165:                     'id' => ['required'],",
          "166:                 ])->validate();",
          "167:                 $updated_configuration = Configuration::find($configuration['id']);",
          "169:                     $updated_configuration->key = $configuration['key'];",
          "170:                     $updated_configuration->display_name = $configuration['display_name'];",
          "171:                     $updated_configuration->value = $configuration['value'];",
          "",
          "[Removed Lines]",
          "168:                 if (!is_null($configuration)) {",
          "",
          "[Added Lines]",
          "166:                 if (! is_null($configuration)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "211:                         if (in_array($request->type, ['checkbox', 'radio', 'select', 'select_multiple'])) {",
          "212:                             json_decode($value);",
          "213:                             $is_json = (json_last_error() == JSON_ERROR_NONE);",
          "215:                                 $fail('The details must be a valid JSON string.');",
          "216:                             }",
          "217:                         }",
          "218:                     },",
          "219:                     function ($attribute, $value, $fail) use ($request) {",
          "220:                         if (in_array($request->type, ['checkbox', 'radio', 'select', 'select_multiple'])) {",
          "222:                                 $fail('Options is required for  Checkbox, Radio, Select, Select-multiple');",
          "223:                             }",
          "224:                         }",
          "",
          "[Removed Lines]",
          "214:                             if (!$is_json) {",
          "221:                             if (!isset($value) || is_null($value)) {",
          "",
          "[Added Lines]",
          "213:                             if (! $is_json) {",
          "220:                             if (! isset($value) || is_null($value)) {",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoDatabaseController.php||src/Controllers/BadasoDatabaseController.php": [
          "File: src/Controllers/BadasoDatabaseController.php -> src/Controllers/BadasoDatabaseController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: use Uasoft\\Badaso\\Database\\Schema\\SchemaManager;",
          "13: use Uasoft\\Badaso\\Facades\\Badaso;",
          "14: use Uasoft\\Badaso\\Helpers\\ApiResponse;",
          "16: use Uasoft\\Badaso\\Models\\Migration;",
          "18: class BadasoDatabaseController extends Controller",
          "",
          "[Removed Lines]",
          "15: use Uasoft\\Badaso\\Models\\DataType;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70:             switch ($exitCode) {",
          "71:                 case 0:",
          "72:                     $msg = __('badaso::validation.database.migration_success');",
          "74:                     activity('Database')",
          "75:                         ->causedBy(auth()->user() ?? null)",
          "76:                         ->withProperties(['attributes' => $request->all()])",
          "77:                         ->event('created')",
          "80:                     return ApiResponse::success($msg);",
          "82:                     break;",
          "83:                 default:",
          "84:                     if (isset($this->file_name)) {",
          "",
          "[Removed Lines]",
          "78:                         ->log('Add table ' . $request->table . ' has been created');",
          "",
          "[Added Lines]",
          "77:                         ->log('Add table '.$request->table.' has been created');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "177:                         'new' => [$table['modified_name'], $fields['modified_fields'], $relations['modified_relations']],",
          "178:                     ])",
          "179:                     ->event('updated')",
          "181:                     return ApiResponse::success(__('badaso::validation.database.alter_migration_created', ['table' => $table['modified_name']]));",
          "182:                     break;",
          "",
          "[Removed Lines]",
          "180:                     ->log('Edit table ' . $table['current_name'] . ' has been updated');",
          "",
          "[Added Lines]",
          "179:                     ->log('Edit table '.$table['current_name'].' has been updated');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "243:                     activity('Database')",
          "244:                     ->causedBy(auth()->user() ?? null)",
          "245:                     ->event('deleted')",
          "248:                     return ApiResponse::success(__('badaso::validation.database.migration_dropped', ['table' => $request->table]));",
          "249:                     break;",
          "250:                 default:",
          "",
          "[Removed Lines]",
          "246:                     ->log('Delete table ' . $request->table. ' has been deleted');",
          "",
          "[Added Lines]",
          "245:                     ->log('Delete table '.$request->table.' has been deleted');",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "367:                 }",
          "368:             }",
          "371:             activity('Database')",
          "372:                 ->causedBy(auth()->user() ?? null)",
          "373:                 ->event('deleted')",
          "376:             return ApiResponse::success(__('badaso::validation.database.migration_deleted'));",
          "377:         } catch (Exception $e) {",
          "",
          "[Removed Lines]",
          "370:             $file_name = join(\", \", $request->file_name);",
          "374:                 ->log('Migration ' . $file_name . ' has been deleted');",
          "",
          "[Added Lines]",
          "370:             $file_name = join(', ', $request->file_name);",
          "374:                 ->log('Migration '.$file_name.' has been deleted');",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoMenuController.php||src/Controllers/BadasoMenuController.php": [
          "File: src/Controllers/BadasoMenuController.php -> src/Controllers/BadasoMenuController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "297:                 ->withProperties(['attributes' => $new_menu])",
          "298:                 ->performedOn($new_menu)",
          "299:                 ->event('created')",
          "301:             return ApiResponse::success($new_menu);",
          "302:         } catch (Exception $e) {",
          "303:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "300:                 ->log('Menu ' . $new_menu->display_name . ' has been created');",
          "",
          "[Added Lines]",
          "300:                 ->log('Menu '.$new_menu->display_name.' has been created');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "341:                 ->withProperties(['attributes' => $new_menu_item])",
          "342:                 ->performedOn($new_menu_item)",
          "343:                 ->event('created')",
          "346:             return ApiResponse::success($new_menu_item);",
          "347:         } catch (Exception $e) {",
          "",
          "[Removed Lines]",
          "344:                 ->log('Menu ' . $new_menu_item->title . ' has been created');",
          "",
          "[Added Lines]",
          "345:                 ->log('Menu '.$new_menu_item->title.' has been created');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "373:             activity('Menu')",
          "374:                 ->causedBy(auth()->user() ?? null)",
          "375:                 ->withProperties(['attributes' => [",
          "379:                 ])",
          "380:                 ->performedOn($menu)",
          "381:                 ->event('updated')",
          "383:             return ApiResponse::success($menu);",
          "384:         } catch (Exception $e) {",
          "385:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "376:                         'old' => $old_menu,",
          "377:                         'new' => $menu",
          "378:                         ]",
          "382:                 ->log('Menu ' . $menu->display_name . ' has been updated');",
          "",
          "[Added Lines]",
          "377:                     'old' => $old_menu,",
          "378:                     'new' => $menu,",
          "379:                 ],",
          "383:                 ->log('Menu '.$menu->display_name.' has been updated');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "423:                 ->withProperties([",
          "424:                     'attributes' => [",
          "425:                         'old' => $old_menu_item,",
          "428:                 ])",
          "429:                 ->performedOn($menu_item)",
          "430:                 ->event('updated')",
          "433:             return ApiResponse::success($menu_item);",
          "434:         } catch (Exception $e) {",
          "",
          "[Removed Lines]",
          "426:                         'new' => $menu_item",
          "427:                     ]",
          "431:                 ->log('Menu item ' . $menu_item->title . ' has been updated');",
          "",
          "[Added Lines]",
          "428:                         'new' => $menu_item,",
          "429:                     ],",
          "433:                 ->log('Menu item '.$menu_item->title.' has been updated');",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "488:                 ->withProperties([",
          "489:                     'attributes' => [",
          "490:                         'old' => $old_order,",
          "493:                 ])",
          "494:                 ->performedOn($menu_items)",
          "495:                 ->event('updated')",
          "497:             return ApiResponse::success();",
          "498:         } catch (Exception $e) {",
          "499:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "491:                         'new' => $new_order",
          "492:                     ]",
          "496:                 ->log('Menu item order ' . $menu_item->title . ' has been updated');",
          "",
          "[Added Lines]",
          "493:                         'new' => $new_order,",
          "494:                     ],",
          "498:                 ->log('Menu item order '.$menu_item->title.' has been updated');",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "556:                 ->withProperties(['attributes' => $request->all()])",
          "557:                 ->performedOn($menus)",
          "558:                 ->event('deleted')",
          "561:             return ApiResponse::success();",
          "562:         } catch (Exception $e) {",
          "",
          "[Removed Lines]",
          "559:                 ->log('Menu ' . $menus->display_name . ' has been deleted');",
          "",
          "[Added Lines]",
          "562:                 ->log('Menu '.$menus->display_name.' has been deleted');",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "585:                 ->withProperties(['attributes' => $request->all()])",
          "586:                 ->performedOn($menu_items)",
          "587:                 ->event('deleted')",
          "590:             return ApiResponse::success();",
          "591:         } catch (Exception $e) {",
          "",
          "[Removed Lines]",
          "588:                 ->log('Menu item' . $menu_items->title . ' has been deleted');",
          "",
          "[Added Lines]",
          "591:                 ->log('Menu item'.$menu_items->title.' has been deleted');",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoPermissionController.php||src/Controllers/BadasoPermissionController.php": [
          "File: src/Controllers/BadasoPermissionController.php -> src/Controllers/BadasoPermissionController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: class BadasoPermissionController extends Controller",
          "12: {",
          "13:     public function browse(Request $request)",
          "15:         try {",
          "16:             $permissions = Permission::all();",
          "",
          "[Removed Lines]",
          "14:     {",
          "",
          "[Added Lines]",
          "14:     {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76:                 ]])",
          "77:                 ->performedOn($permission)",
          "78:                 ->event('edited')",
          "80:             return ApiResponse::success($permission);",
          "81:         } catch (Exception $e) {",
          "82:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "79:                 ->log('Permission ' . $permission->key . ' has been edited');",
          "",
          "[Added Lines]",
          "79:                 ->log('Permission '.$permission->key.' has been edited');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "111:                 ->withProperties(['attributes' => $permission])",
          "112:                 ->performedOn($permission)",
          "113:                 ->event('created')",
          "116:             return ApiResponse::success($permission);",
          "117:         } catch (Exception $e) {",
          "",
          "[Removed Lines]",
          "114:                 ->log('Permission ' . $permission->key . ' has been created');",
          "",
          "[Added Lines]",
          "115:                 ->log('Permission '.$permission->key.' has been created');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "142:                 ->withProperties(['attributes' => $request->all()])",
          "143:                 ->performedOn($permission)",
          "144:                 ->event('deleted')",
          "146:             return ApiResponse::success();",
          "147:         } catch (Exception $e) {",
          "148:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "145:                 ->log('Permission ' . $permission->key . ' has been deleted');",
          "",
          "[Added Lines]",
          "146:                 ->log('Permission '.$permission->key.' has been deleted');",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "170:                 $permission_keys[] = $permission->key;",
          "171:                 $permission->delete();",
          "172:             }",
          "174:             DB::commit();",
          "175:             activity('Permissions')",
          "176:                 ->causedBy(auth()->user() ?? null)",
          "177:                 ->withProperties(['attributes' => $request->all()])",
          "178:                 ->performedOn($permission)",
          "179:                 ->event('deleted')",
          "181:             return ApiResponse::success();",
          "182:         } catch (Exception $e) {",
          "183:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "173:            $permission_keys = join(\",\", $permission_keys);",
          "180:                 ->log('Permission ' . $permission_keys . ' has been deleted');",
          "",
          "[Added Lines]",
          "175:             $permission_keys = join(',', $permission_keys);",
          "182:                 ->log('Permission '.$permission_keys.' has been deleted');",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoRoleController.php||src/Controllers/BadasoRoleController.php": [
          "File: src/Controllers/BadasoRoleController.php -> src/Controllers/BadasoRoleController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:                 ->causedBy(auth()->user() ?? null)",
          "70:                 ->withProperties(['attributes' => [",
          "71:                     'old' => $old_role,",
          "73:                 ]])",
          "74:                 ->performedOn($role)",
          "75:                 ->event('updated')",
          "78:             return ApiResponse::success($role);",
          "79:         } catch (Exception $e) {",
          "",
          "[Removed Lines]",
          "72:                     'new' => $role",
          "76:                 ->log('Role ' . $role->name . ' has been updated');",
          "",
          "[Added Lines]",
          "72:                     'new' => $role,",
          "76:                 ->log('Role '.$role->name.' has been updated');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "106:                 ->withProperties(['attributes' => $role])",
          "107:                 ->performedOn($role)",
          "108:                 ->event('created')",
          "110:             return ApiResponse::success($role);",
          "111:         } catch (Exception $e) {",
          "112:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "109:                 ->log('Role ' . $role->name . ' has been created');",
          "",
          "[Added Lines]",
          "109:                 ->log('Role '.$role->name.' has been created');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "137:                 ->withProperties(['attributes' => $request->all()])",
          "138:                 ->performedOn($role)",
          "139:                 ->event('deleted')",
          "141:             return ApiResponse::success();",
          "142:         } catch (Exception $e) {",
          "143:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "140:                 ->log('Role ' . $role->name . ' has been deleted');",
          "",
          "[Added Lines]",
          "141:                 ->log('Role '.$role->name.' has been deleted');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "162:             $role_name = [];",
          "163:             foreach ($id_list as $key => $id) {",
          "164:                 $role = Role::find($id);",
          "166:                 $role->delete();",
          "167:             }",
          "169:             DB::commit();",
          "171:             activity('Role Controllers')",
          "",
          "[Removed Lines]",
          "165:                 $role_name[] = $role->name;",
          "168:             $role_name = join(\",\" , $role_name);",
          "",
          "[Added Lines]",
          "167:                 $role_name[] = $role->name;",
          "170:             $role_name = join(',', $role_name);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "173:                 ->withProperties(['attributes' => $request->all()])",
          "174:                 ->performedOn($role)",
          "175:                 ->event('deleted')",
          "177:             return ApiResponse::success();",
          "178:         } catch (Exception $e) {",
          "179:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "176:                 ->log('Role ' . $role->name . ' has been deleted');",
          "",
          "[Added Lines]",
          "178:                 ->log('Role '.$role->name.' has been deleted');",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoRolePermissionController.php||src/Controllers/BadasoRolePermissionController.php": [
          "File: src/Controllers/BadasoRolePermissionController.php -> src/Controllers/BadasoRolePermissionController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:                         WHEN B.role_id is not null then 1",
          "62:                         else 0",
          "63:                     END as selected",
          "66:             ';",
          "67:             $role_permissions = DB::select($query, [",
          "68:                 'role_id' => $request->role_id,",
          "",
          "[Removed Lines]",
          "64:                 FROM ' . $prefix . 'permissions A",
          "65:                 LEFT JOIN ' . $prefix . 'role_permissions B ON A.id = B.permission_id AND B.role_id = :role_id",
          "",
          "[Added Lines]",
          "64:                 FROM '.$prefix.'permissions A",
          "65:                 LEFT JOIN '.$prefix.'role_permissions B ON A.id = B.permission_id AND B.role_id = :role_id",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "86:             $permissions = $request->permissions;",
          "88:             $role = Role::find($request->role_id);",
          "90:                 $stored_permissions = [];",
          "91:                 foreach ($permissions as $key => $value) {",
          "92:                     $permission = Permission::find($value);",
          "94:                         $role_permission = [",
          "95:                             'role_id'       => $role->id,",
          "96:                             'permission_id' => $permission->id,",
          "",
          "[Removed Lines]",
          "89:             if (!is_null($role)) {",
          "93:                     if (!is_null($permission)) {",
          "",
          "[Added Lines]",
          "89:             if (! is_null($role)) {",
          "93:                     if (! is_null($permission)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "113:                 ->causedBy(auth()->user() ?? null)",
          "114:                 ->withProperties(['attributes' => $request->all()])",
          "115:                 ->event('created or updated')",
          "117:             return ApiResponse::success($data);",
          "118:         } catch (Exception $e) {",
          "119:             return ApiResponse::failed($e);",
          "",
          "[Removed Lines]",
          "116:                 ->log('Role ' . $role->name . ' has been created or updated');",
          "",
          "[Added Lines]",
          "116:                 ->log('Role '.$role->name.' has been created or updated');",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoTableController.php||src/Controllers/BadasoTableController.php": [
          "File: src/Controllers/BadasoTableController.php -> src/Controllers/BadasoTableController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "110:             activity('Generate Table')",
          "111:                 ->causedBy(auth()->user() ?? null)",
          "112:                 ->withProperties(['attributes' => [",
          "115:                 ]])",
          "116:                 ->event('created')",
          "118:             return ApiResponse::success();",
          "119:         } catch (Exception $e) {",
          "120:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "113:                         'data_type' => $new_data_type,",
          "114:                         'data_rows' => $new_data_row",
          "117:                 ->log('Table ' . $new_data_type->display_name_singular . ' has been created');",
          "",
          "[Added Lines]",
          "113:                     'data_type' => $new_data_type,",
          "114:                     'data_rows' => $new_data_row,",
          "117:                 ->log('Table '.$new_data_type->display_name_singular.' has been created');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "130:                 'table' => [",
          "131:                     'required',",
          "132:                     function ($attribute, $value, $fail) {",
          "134:                             $fail(__('badaso::validation.crud.table_not_found', ['table' => $value]));",
          "135:                         }",
          "136:                     },",
          "",
          "[Removed Lines]",
          "133:                         if (!Schema::hasTable($value)) {",
          "",
          "[Added Lines]",
          "134:                         if (! Schema::hasTable($value)) {",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoUserController.php||src/Controllers/BadasoUserController.php": [
          "File: src/Controllers/BadasoUserController.php -> src/Controllers/BadasoUserController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:             $user = User::find($request->id);",
          "41:             $data['user'] = $user;",
          "",
          "[Removed Lines]",
          "39:             $user->email_verified = !is_null($user->email_verified_at);",
          "",
          "[Added Lines]",
          "39:             $user->email_verified = ! is_null($user->email_verified_at);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80:                 ->causedBy(auth()->user() ?? null)",
          "81:                 ->withProperties(['attributes' => [",
          "82:                     'old' => $old_user,",
          "84:                 ]])",
          "85:                 ->performedOn($user)",
          "86:                 ->event('updated')",
          "88:             return ApiResponse::success($user);",
          "89:         } catch (Exception $e) {",
          "90:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "83:                     'new' => $user",
          "87:                 ->log('User ' . $user->name . ' has been updated');",
          "",
          "[Added Lines]",
          "83:                     'new' => $user,",
          "87:                 ->log('User '.$user->name.' has been updated');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "123:                 ->withProperties(['attributes' => $user])",
          "124:                 ->performedOn($user)",
          "125:                 ->event('created')",
          "127:             return ApiResponse::success($user);",
          "128:         } catch (Exception $e) {",
          "129:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "126:                 ->log('User ' . $user->name . ' has been created');",
          "",
          "[Added Lines]",
          "127:                 ->log('User '.$user->name.' has been created');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "153:                 ->causedBy(auth()->user() ?? null)",
          "154:                 ->performedOn($user)",
          "155:                 ->event('deleted')",
          "157:             return ApiResponse::success();",
          "158:         } catch (Exception $e) {",
          "159:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "156:                 ->log('User ' . $user->name . ' has been deleted');",
          "",
          "[Added Lines]",
          "158:                 ->log('User '.$user->name.' has been deleted');",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "182:                 $user_name[] = $user->name;",
          "183:                 $user->delete();",
          "184:             }",
          "186:             DB::commit();",
          "187:             activity('User')",
          "188:                 ->causedBy(auth()->user() ?? null)",
          "189:                 ->performedOn($user)",
          "190:                 ->event('deleted')",
          "192:             return ApiResponse::success();",
          "193:         } catch (Exception $e) {",
          "194:             DB::rollBack();",
          "",
          "[Removed Lines]",
          "185:             $user_name = join(\",\",$user_name);",
          "191:                 ->log('User ' . $user_name . ' has been deleted');",
          "",
          "[Added Lines]",
          "188:             $user_name = join(',', $user_name);",
          "194:                 ->log('User '.$user_name.' has been deleted');",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoUserRoleController.php||src/Controllers/BadasoUserRoleController.php": [
          "File: src/Controllers/BadasoUserRoleController.php -> src/Controllers/BadasoUserRoleController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "63:                         WHEN B.user_id is not null then 1",
          "64:                         else 0",
          "65:                     END as selected",
          "68:             ';",
          "69:             $user_roles = DB::select($query, [",
          "70:                 'user_id' => $request->user_id,",
          "",
          "[Removed Lines]",
          "66:                 FROM ' . $prefix . 'roles A",
          "67:                 LEFT JOIN ' . $prefix . 'user_roles B ON A.id = B.role_id AND B.user_id = :user_id",
          "",
          "[Added Lines]",
          "66:                 FROM '.$prefix.'roles A",
          "67:                 LEFT JOIN '.$prefix.'user_roles B ON A.id = B.role_id AND B.user_id = :user_id",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "87:             $roles = $request->get('roles', []);",
          "89:             $user = User::find($request->user_id);",
          "91:                 $stored_roles = [];",
          "92:                 foreach ($roles as $key => $value) {",
          "93:                     $role = Role::find($value);",
          "95:                         $user_role = [",
          "96:                             'user_id' => $user->id,",
          "97:                             'role_id' => $role->id,",
          "",
          "[Removed Lines]",
          "90:             if (!is_null($user)) {",
          "94:                     if (!is_null($role)) {",
          "",
          "[Added Lines]",
          "90:             if (! is_null($user)) {",
          "94:                     if (! is_null($role)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "113:                 ->causedBy(auth()->user() ?? null)",
          "114:                 ->performedOn($user)",
          "115:                 ->event('created or updated')",
          "117:             return ApiResponse::success($data);",
          "118:         } catch (Exception $e) {",
          "119:             return ApiResponse::failed($e);",
          "",
          "[Removed Lines]",
          "116:                 ->log('User ' . $user->name . ' has been created or updated');",
          "",
          "[Added Lines]",
          "116:                 ->log('User '.$user->name.' has been created or updated');",
          "",
          "---------------"
        ]
      }
    }
  ]
}