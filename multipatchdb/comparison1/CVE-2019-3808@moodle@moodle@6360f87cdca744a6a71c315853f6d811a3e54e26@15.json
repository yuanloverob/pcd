{
  "cve_id": "CVE-2019-3808",
  "cve_desc": "A flaw was found in Moodle versions 3.6 to 3.6.1, 3.5 to 3.5.3, 3.4 to 3.4.6, 3.1 to 3.1.15 and earlier unsupported versions. The 'manage groups' capability did not have the 'XSS risk' flag assigned to it, but does have that access in certain places. Note that the capability is intended for use by trusted users, and is only assigned to teachers and managers by default.",
  "repo": "moodle/moodle",
  "patch_hash": "6360f87cdca744a6a71c315853f6d811a3e54e26",
  "patch_info": {
    "commit_hash": "6360f87cdca744a6a71c315853f6d811a3e54e26",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/6360f87cdca744a6a71c315853f6d811a3e54e26",
    "files": [
      "lib/db/access.php",
      "version.php"
    ],
    "message": "MDL-64395 groups: Added XSS Risk to the manage groups capability",
    "before_after_code_files": [
      "lib/db/access.php||lib/db/access.php",
      "version.php||version.php"
    ]
  },
  "patch_diff": {
    "lib/db/access.php||lib/db/access.php": [
      "File: lib/db/access.php -> lib/db/access.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "1123:     ),",
      "1125:     'moodle/course:managegroups' => array(",
      "1127:         'captype' => 'write',",
      "1128:         'contextlevel' => CONTEXT_COURSE,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1126:         'riskbitmask' => RISK_XSS,",
      "",
      "---------------"
    ],
    "version.php||version.php": [
      "File: version.php -> version.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "30: defined('MOODLE_INTERNAL') || die();",
      "",
      "[Removed Lines]",
      "32: $version  = 2018122000.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
      "",
      "[Added Lines]",
      "32: $version  = 2018122000.02;              // YYYYMMDD      = weekly release date of this DEV branch.",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "52d3d6f54026f4d0590afd4a3ffc096c7c7e3a85",
      "candidate_info": {
        "commit_hash": "52d3d6f54026f4d0590afd4a3ffc096c7c7e3a85",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/52d3d6f54026f4d0590afd4a3ffc096c7c7e3a85",
        "files": [
          "version.php"
        ],
        "message": "Moodle release 3.8rc1",
        "before_after_code_files": [
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "36: $branch   = '38';                       // This version's branch.",
          "",
          "[Removed Lines]",
          "32: $version  = 2019111300.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "35: $release  = '3.8beta (Build: 20191112)'; // Human-friendly version name",
          "37: $maturity = MATURITY_BETA;             // This version's maturity level.",
          "",
          "[Added Lines]",
          "32: $version  = 2019111500.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "35: $release  = '3.8rc1 (Build: 20191115)'; // Human-friendly version name",
          "37: $maturity = MATURITY_RC;             // This version's maturity level.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "27963562784b33c270d92e5fe55bdfd25b348f8f",
      "candidate_info": {
        "commit_hash": "27963562784b33c270d92e5fe55bdfd25b348f8f",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/27963562784b33c270d92e5fe55bdfd25b348f8f",
        "files": [
          "admin/classes/form/purge_caches.php",
          "admin/settings/appearance.php",
          "config-dist.php",
          "lang/en/admin.php",
          "lib/amd/build/templates.min.js",
          "lib/amd/build/templates.min.js.map",
          "lib/amd/src/templates.js",
          "lib/db/install.php",
          "lib/moodlelib.php",
          "lib/outputrequirementslib.php",
          "lib/upgrade.txt",
          "version.php"
        ],
        "message": "Merge branch 'MDL-66367_master' of git://github.com/markn86/moodle",
        "before_after_code_files": [
          "admin/classes/form/purge_caches.php||admin/classes/form/purge_caches.php",
          "admin/settings/appearance.php||admin/settings/appearance.php",
          "config-dist.php||config-dist.php",
          "lang/en/admin.php||lang/en/admin.php",
          "lib/amd/src/templates.js||lib/amd/src/templates.js",
          "lib/db/install.php||lib/db/install.php",
          "lib/moodlelib.php||lib/moodlelib.php",
          "lib/outputrequirementslib.php||lib/outputrequirementslib.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/classes/form/purge_caches.php||admin/classes/form/purge_caches.php": [
          "File: admin/classes/form/purge_caches.php -> admin/classes/form/purge_caches.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:             $mform->createElement('advcheckbox', 'theme', '', get_string('purgethemecache', 'admin')),",
          "51:             $mform->createElement('advcheckbox', 'lang', '', get_string('purgelangcache', 'admin')),",
          "52:             $mform->createElement('advcheckbox', 'js', '', get_string('purgejscache', 'admin')),",
          "53:             $mform->createElement('advcheckbox', 'filter', '', get_string('purgefiltercache', 'admin')),",
          "54:             $mform->createElement('advcheckbox', 'muc', '', get_string('purgemuc', 'admin')),",
          "55:             $mform->createElement('advcheckbox', 'other', '', get_string('purgeothercaches', 'admin'))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53:             $mform->createElement('advcheckbox', 'template', '', get_string('purgetemplates', 'admin')),",
          "",
          "---------------"
        ],
        "admin/settings/appearance.php||admin/settings/appearance.php": [
          "File: admin/settings/appearance.php -> admin/settings/appearance.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "275:     $temp->add(new admin_setting_configtextarea('additionalhtmlfooter', new lang_string('additionalhtmlfooter', 'admin'), new lang_string('additionalhtmlfooter_desc', 'admin'), '', PARAM_RAW));",
          "276:     $ADMIN->add('appearance', $temp);",
          "278: } // end of speedup",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "278:     $setting = new admin_setting_configcheckbox('cachetemplates', new lang_string('cachetemplates', 'admin'),",
          "279:         new lang_string('cachetemplates_help', 'admin'), 1);",
          "280:     $setting->set_updatedcallback('template_reset_all_caches');",
          "281:     $temp = new admin_settingpage('templates', new lang_string('templates', 'admin'));",
          "282:     $temp->add($setting);",
          "283:     $ADMIN->add('appearance', $temp);",
          "",
          "---------------"
        ],
        "config-dist.php||config-dist.php": [
          "File: config-dist.php -> config-dist.php"
        ],
        "lang/en/admin.php||lang/en/admin.php": [
          "File: lang/en/admin.php -> lang/en/admin.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "104: $string['bookmarkthispage'] = 'Bookmark this page';",
          "105: $string['cachejs'] = 'Cache Javascript';",
          "106: $string['cachejs_help'] = 'Javascript caching and compression greatly improves page loading performance. it is strongly recommended for production sites. Developers will probably want to disable this feature.';",
          "107: $string['calendarexportsalt'] = 'Calendar export salt';",
          "108: $string['calendarsettings'] = 'Calendar';",
          "109: $string['calendartype'] = 'Calendar type';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "107: $string['cachetemplates'] = 'Cache Templates';",
          "108: $string['cachetemplates_help'] = 'Template caching will improve page loading performance and is strongly recommended for production sites. Developers will probably want to disable this feature.';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1041: $string['purgeothercaches'] = 'All file and miscellaneous caches';",
          "1042: $string['purgeselectedcaches'] = 'Purge selected caches';",
          "1043: $string['purgeselectedcachesfinished'] = 'The selected caches were purged.';",
          "1044: $string['purgethemecache'] = 'Themes';",
          "1045: $string['requestcategoryselection'] = 'Enable category selection';",
          "1046: $string['restorecourse'] = 'Restore course';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1046: $string['purgetemplates'] = 'Templates';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1264: $string['tasktagcron'] = 'Background processing for tags';",
          "1265: $string['tasktempfilecleanup'] = 'Delete stale temp files';",
          "1266: $string['tempdatafoldercleanup'] = 'Clean up temporary data files older than';",
          "1267: $string['testoutgoingmailconf'] = 'Test outgoing mail configuration';",
          "1268: $string['testoutgoingmaildetail'] = 'Note: Before testing, please save your configuration.<br />{$a}';",
          "1269: $string['testoutgoingmailconf_message'] = 'This is a test message to confirm that you have successfully configured your site\\'s outgoing mail.';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1270: $string['templates'] = 'Templates';",
          "",
          "---------------"
        ],
        "lib/amd/src/templates.js||lib/amd/src/templates.js": [
          "File: lib/amd/src/templates.js -> lib/amd/src/templates.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:     var getTemplatePromiseFromCache = function(searchKey) {",
          "83:         if (searchKey in templatePromises) {",
          "84:             return templatePromises[searchKey];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:         if (M.cfg.templaterev <= 0) {",
          "84:             return null;",
          "85:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "92:         }",
          "96:         if (cached) {",
          "98:             templateCache[searchKey] = cached;",
          "",
          "[Removed Lines]",
          "95:         var cached = storage.get('core_template/' + searchKey);",
          "",
          "[Added Lines]",
          "100:         var cached = storage.get('core_template/' + M.cfg.templaterev + ':' + searchKey);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "180:                                 templateCache[tempSearchKey] = data.value;",
          "183:                                 if (data.component == component && data.name == name) {",
          "",
          "[Removed Lines]",
          "181:                                 storage.set('core_template/' + tempSearchKey, data.value);",
          "",
          "[Added Lines]",
          "186:                                 storage.set('core_template/' + M.cfg.templaterev + ':' + tempSearchKey, data.value);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "224:         if (requests.length) {",
          "227:         } else {",
          "229:             serverRequestsDeferred.resolve();",
          "",
          "[Removed Lines]",
          "226:             serverRequestsDeferred.resolve(ajax.call(requests, true, false, false, 0, M.cfg.themerev));",
          "",
          "[Added Lines]",
          "231:             serverRequestsDeferred.resolve(ajax.call(requests, true, false, false, 0, M.cfg.templaterev));",
          "",
          "---------------"
        ],
        "lib/db/install.php||lib/db/install.php": [
          "File: lib/db/install.php -> lib/db/install.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "284:     set_role_contextlevels($guestrole,          get_default_contextlevels('guest'));",
          "285:     set_role_contextlevels($userrole,           get_default_contextlevels('user'));",
          "288:     set_config('themerev', time());",
          "289:     set_config('jsrev', time());",
          "292:     set_config('gdversion', 2);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "290:     set_config('templaterev', time());",
          "",
          "---------------"
        ],
        "lib/moodlelib.php||lib/moodlelib.php": [
          "File: lib/moodlelib.php -> lib/moodlelib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1650: function purge_caches($options = []) {",
          "1652:     if (empty(array_filter($options))) {",
          "1653:         $options = array_fill_keys(array_keys($defaults), true); // Set all options to true.",
          "1654:     } else {",
          "",
          "[Removed Lines]",
          "1651:     $defaults = array_fill_keys(['muc', 'theme', 'lang', 'js', 'filter', 'other'], false);",
          "",
          "[Added Lines]",
          "1651:     $defaults = array_fill_keys(['muc', 'theme', 'lang', 'js', 'template', 'filter', 'other'], false);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1666:     if ($options['js']) {",
          "1667:         js_reset_all_caches();",
          "1668:     }",
          "1669:     if ($options['filter']) {",
          "1670:         reset_text_filters_cache();",
          "1671:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1669:     if ($options['template']) {",
          "1670:         template_reset_all_caches();",
          "1671:     }",
          "",
          "---------------"
        ],
        "lib/outputrequirementslib.php||lib/outputrequirementslib.php": [
          "File: lib/outputrequirementslib.php -> lib/outputrequirementslib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "331:                 'svgicons'            => $page->theme->use_svg_icons(),",
          "332:                 'usertimezone'        => usertimezone(),",
          "333:                 'contextid'           => $contextid,",
          "335:             );",
          "336:             if ($CFG->debugdeveloper) {",
          "337:                 $this->M_cfg['developerdebug'] = true;",
          "",
          "[Removed Lines]",
          "334:                 'langrev'             => get_string_manager()->get_revision()",
          "",
          "[Added Lines]",
          "334:                 'langrev'             => get_string_manager()->get_revision(),",
          "335:                 'templaterev'         => $this->get_templaterev()",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "413:         return $jsrev;",
          "414:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "422:     protected function get_templaterev() {",
          "423:         global $CFG;",
          "425:         if (empty($CFG->cachetemplates)) {",
          "426:             $templaterev = -1;",
          "427:         } else if (empty($CFG->templaterev)) {",
          "428:             $templaterev = 1;",
          "429:         } else {",
          "430:             $templaterev = $CFG->templaterev;",
          "431:         }",
          "433:         return $templaterev;",
          "434:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2104:     }",
          "2105: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2130: function template_reset_all_caches() {",
          "2131:     global $CFG;",
          "2133:     $next = time();",
          "2134:     if (isset($CFG->templaterev) and $next <= $CFG->templaterev and $CFG->templaterev - $next < 60 * 60) {",
          "2138:         $next = $CFG->templaterev + 1;",
          "2139:     }",
          "2141:     set_config('templaterev', $next);",
          "2142: }",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2019083000.02;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2019083000.03;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c345aa721c6eb31bb1a5a761d3eddfaca0924296",
      "candidate_info": {
        "commit_hash": "c345aa721c6eb31bb1a5a761d3eddfaca0924296",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/c345aa721c6eb31bb1a5a761d3eddfaca0924296",
        "files": [
          "admin/tool/analytics/classes/output/form/edit_model.php",
          "admin/tool/analytics/classes/output/helper.php",
          "lib/db/install.xml",
          "lib/db/upgrade.php",
          "version.php"
        ],
        "message": "MDL-64739 core_analytics: New db field for model contexts",
        "before_after_code_files": [
          "admin/tool/analytics/classes/output/form/edit_model.php||admin/tool/analytics/classes/output/form/edit_model.php",
          "admin/tool/analytics/classes/output/helper.php||admin/tool/analytics/classes/output/helper.php",
          "lib/db/upgrade.php||lib/db/upgrade.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/tool/analytics/classes/output/form/edit_model.php||admin/tool/analytics/classes/output/form/edit_model.php": [
          "File: admin/tool/analytics/classes/output/form/edit_model.php -> admin/tool/analytics/classes/output/form/edit_model.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:             $mform->addHelpButton('indicators', 'indicators', 'tool_analytics');",
          "90:         }",
          "93:         if (!empty($this->_customdata['invalidcurrenttimesplitting'])) {",
          "94:             $mform->addElement('html', $OUTPUT->notification(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "93:         $contexts = array();",
          "94:         if ($this->_customdata['contexts']) {",
          "95:             $contexts = \\tool_analytics\\output\\helper::contexts_to_options($this->_customdata['contexts']);",
          "96:         }",
          "97:         $options = array(",
          "98:             'multiple' => true",
          "99:         );",
          "100:         $mform->addElement('autocomplete', 'contexts', get_string('contexts', 'tool_analytics'), $contexts, $options);",
          "101:         $mform->setType('contexts', PARAM_ALPHANUMEXT);",
          "102:         $mform->addHelpButton('contexts', 'indicators', 'tool_analytics');",
          "",
          "---------------"
        ],
        "admin/tool/analytics/classes/output/helper.php||admin/tool/analytics/classes/output/helper.php": [
          "File: admin/tool/analytics/classes/output/helper.php -> admin/tool/analytics/classes/output/helper.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "151:         $singleselect = new \\single_select($url, 'contextid', $contexts, $selected, $nothing);",
          "152:         return $singleselect->export_for_template($output);",
          "153:     }",
          "154: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "163:     public static function contexts_to_options(array $contexts, ?bool $includeall = false, ?bool $shortentext = true): array {",
          "165:         foreach ($contexts as $contextid) {",
          "166:             $context = \\context::instance_by_id($contextid);",
          "169:             if ($contextid == SYSCONTEXTID) {",
          "170:                 $contextname = get_string('allpredictions', 'tool_analytics');",
          "171:             } else {",
          "172:                 if ($shortentext) {",
          "173:                     $contextname = shorten_text($context->get_context_name(false, true), 40);",
          "174:                 } else {",
          "175:                     $contextname = $context->get_context_name(false, true);",
          "176:                 }",
          "177:             }",
          "178:             $contexts[$contextid] = $contextname;",
          "179:         }",
          "181:         if ($includeall) {",
          "182:             $contexts[0] = get_string('all');",
          "183:         }",
          "185:         \\core_collator::asort($contexts);",
          "187:         return $contexts;",
          "188:     }",
          "",
          "---------------"
        ],
        "lib/db/upgrade.php||lib/db/upgrade.php": [
          "File: lib/db/upgrade.php -> lib/db/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3619:         upgrade_main_savepoint(true, 2019101600.01);",
          "3620:     }",
          "3622:     return true;",
          "3623: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3622:     if ($oldversion < 2019101800.12) {",
          "3625:         $table = new xmldb_table('analytics_models');",
          "3626:         if ($dbman->table_exists($table)) {",
          "3629:             $field = new xmldb_field('contextids', XMLDB_TYPE_TEXT, null, null, null, null, null, 'version');",
          "3632:             if (!$dbman->field_exists($table, $field)) {",
          "3633:                 $dbman->add_field($table, $field);",
          "3634:             }",
          "3635:         }",
          "3638:         upgrade_main_savepoint(true, 2019101800.12);",
          "3639:     }",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2019101800.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2019101800.12;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c07f31ae2c1d0ce9f1c0d8aaf191dced60ac3bd6",
      "candidate_info": {
        "commit_hash": "c07f31ae2c1d0ce9f1c0d8aaf191dced60ac3bd6",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/c07f31ae2c1d0ce9f1c0d8aaf191dced60ac3bd6",
        "files": [
          "h5p/classes/framework.php",
          "h5p/classes/player.php",
          "h5p/tests/framework_test.php",
          "lang/en/h5p.php",
          "lang/en/role.php",
          "lib/db/access.php",
          "version.php"
        ],
        "message": "MDL-67057 core_h5p: Add capability to update content-type libraries",
        "before_after_code_files": [
          "h5p/classes/framework.php||h5p/classes/framework.php",
          "h5p/classes/player.php||h5p/classes/player.php",
          "h5p/tests/framework_test.php||h5p/tests/framework_test.php",
          "lang/en/h5p.php||lang/en/h5p.php",
          "lang/en/role.php||lang/en/role.php",
          "lib/db/access.php||lib/db/access.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/db/access.php||lib/db/access.php",
            "version.php||version.php"
          ],
          "candidate": [
            "lib/db/access.php||lib/db/access.php",
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "h5p/classes/framework.php||h5p/classes/framework.php": [
          "File: h5p/classes/framework.php -> h5p/classes/framework.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:     private $lastuploadedfile;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45:     private $file;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "636:     public function mayUpdateLibraries() {",
          "639:     }",
          "",
          "[Removed Lines]",
          "638:         return true;",
          "",
          "[Added Lines]",
          "640:         return helper::can_update_library($this->get_file());",
          "641:     }",
          "648:     public function get_file(): \\stored_file {",
          "649:         if (!isset($this->file)) {",
          "650:             throw new \\coding_exception('Using get_file() before file is set');",
          "651:         }",
          "653:         return $this->file;",
          "654:     }",
          "661:     public function set_file(\\stored_file $file): void {",
          "662:         $this->file = $file;",
          "",
          "---------------"
        ],
        "h5p/classes/player.php||h5p/classes/player.php": [
          "File: h5p/classes/player.php -> h5p/classes/player.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:     private $context;",
          "81:     private $factory;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "86:     private $messages;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95:         $this->factory = new \\core_h5p\\factory();",
          "98:         $this->core = $this->factory->get_core();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "102:         $this->messages = new \\stdClass();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "115:     public function get_messages() : \\stdClass {",
          "121:         }",
          "123:     }",
          "",
          "[Removed Lines]",
          "116:         $messages = new \\stdClass();",
          "117:         $messages->error = $this->core->h5pF->getMessages('error');",
          "119:         if (empty($messages->error)) {",
          "120:             $messages->error = false;",
          "122:         return $messages;",
          "",
          "[Added Lines]",
          "124:         if (empty($this->messages->error)) {",
          "125:             $this->messages->error = $this->core->h5pF->getMessages('error') ?: false;",
          "126:         } else {",
          "127:             $this->messages->error = array_merge($this->messages->error, $this->core->h5pF->getMessages('error'));",
          "128:         }",
          "130:         if (empty($this->messages->info)) {",
          "131:             $this->messages->info = $this->core->h5pF->getMessages('info') ?: false;",
          "132:         } else {",
          "133:             $this->messages->info = array_merge($this->messages->info, $this->core->h5pF->getMessages('info'));",
          "136:         return $this->messages;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "216:     private function get_h5p_id(string $url, \\stdClass $config) {",
          "219:         $fs = get_file_storage();",
          "",
          "[Removed Lines]",
          "217:         global $DB;",
          "",
          "[Added Lines]",
          "231:         global $DB, $USER;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "259:                 $this->core->h5pF->setErrorMessage(get_string('nopermissiontodeploy', 'core_h5p'));",
          "260:                 return false;",
          "261:             }",
          "265:         }",
          "266:     }",
          "",
          "[Removed Lines]",
          "258:             if (!has_capability('moodle/h5p:deploy', $this->context, $file->get_userid())) {",
          "264:             return $this->save_h5p($file, $config);",
          "",
          "[Added Lines]",
          "272:             if (!helper::can_deploy_package($file)) {",
          "279:             $onlyupdatelibs = !helper::can_update_library($file);",
          "282:             $this->core->h5pF->set_file($file);",
          "285:             $h5pid = helper::save_h5p($this->factory, $file, $config, $onlyupdatelibs, false);",
          "286:             if (!$h5pid && $file->get_userid() != $USER->id && has_capability('moodle/h5p:updatelibraries', $this->context)) {",
          "289:                 $missingliberror = false;",
          "290:                 $messages = $this->get_messages();",
          "291:                 if (!empty($messages->error)) {",
          "292:                     foreach ($messages->error as $error) {",
          "293:                         if ($error->code == 'missing-required-library') {",
          "294:                             $missingliberror = true;",
          "295:                             break;",
          "296:                         }",
          "297:                     }",
          "298:                 }",
          "299:                 if ($missingliberror) {",
          "301:                     $infomsg = \"Note that the libraries may exist in the file you uploaded, but you're not allowed to upload \" .",
          "302:                         \"new libraries. Contact the site administrator about this.\";",
          "303:                     if (($key = array_search($infomsg, $messages->info)) !== false) {",
          "304:                         unset($messages->info[$key]);",
          "305:                     }",
          "308:                     $this->core->h5pF->setInfoMessage(get_string('notrustablefile', 'core_h5p'));",
          "309:                 }",
          "310:                 return false;",
          "312:             }",
          "313:             return $h5pid;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "362:         return $fs->get_pathname_hash($contextid, $component, $filearea, $itemid, $filepath, $filename);",
          "363:     }",
          "",
          "[Removed Lines]",
          "373:     private function save_h5p($file, \\stdClass $config) : int {",
          "375:         \\core_php_time_limit::raise();",
          "377:         $path = $this->core->fs->getTmpPath();",
          "378:         $this->core->h5pF->getUploadedH5pFolderPath($path);",
          "380:         $path .= '.h5p';",
          "381:         $this->core->h5pF->getUploadedH5pPath($path);",
          "384:         $file->copy_content_to($path);",
          "387:         $h5pvalidator = $this->factory->get_validator();",
          "388:         if ($h5pvalidator->isValidPackage(false, false)) {",
          "389:             $h5pstorage = $this->factory->get_storage();",
          "391:             $options = ['disable' => $this->get_display_options($config)];",
          "392:             $content = [",
          "393:                 'pathnamehash' => $file->get_pathnamehash(),",
          "394:                 'contenthash' => $file->get_contenthash(),",
          "395:             ];",
          "397:             $h5pstorage->savePackage($content, null, false, $options);",
          "398:             return $h5pstorage->contentId;",
          "399:         }",
          "401:         return false;",
          "402:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "h5p/tests/framework_test.php||h5p/tests/framework_test.php": [
          "File: h5p/tests/framework_test.php -> h5p/tests/framework_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "706:         $mayupdatelib = $this->framework->mayUpdateLibraries();",
          "708:         $this->assertTrue($mayupdatelib);",
          "709:     }",
          "",
          "[Removed Lines]",
          "705:     public function test_mayUpdateLibraries() {",
          "",
          "[Added Lines]",
          "705:     public function test_mayUpdateLibraries(): void {",
          "706:         global $DB;",
          "708:         $this->resetAfterTest();",
          "711:         $contextsys = \\context_system::instance();",
          "712:         $user = $this->getDataGenerator()->create_user();",
          "713:         $admin = get_admin();",
          "714:         $managerrole = $DB->get_record('role', ['shortname' => 'manager'], '*', MUST_EXIST);",
          "715:         $studentrole = $DB->get_record('role', ['shortname' => 'student'], '*', MUST_EXIST);",
          "716:         $manager = $this->getDataGenerator()->create_user();",
          "717:         role_assign($managerrole->id, $manager->id, $contextsys);",
          "720:         $course = $this->getDataGenerator()->create_course();",
          "721:         $label = $this->getDataGenerator()->create_module('label', ['course' => $course->id]);",
          "722:         list(, $labelcm) = get_course_and_cm_from_instance($label->id, 'label');",
          "723:         $contextlabel = \\context_module::instance($labelcm->id);",
          "724:         $this->getDataGenerator()->enrol_user($user->id, $course->id, 'student');",
          "727:         $path = __DIR__ . '/fixtures/h5ptest.zip';",
          "730:         $file = helper::create_fake_stored_file_from_path($path, $admin->id, $contextsys);",
          "731:         $this->framework->set_file($file);",
          "732:         $mayupdatelib = $this->framework->mayUpdateLibraries();",
          "733:         $this->assertTrue($mayupdatelib);",
          "735:         $file = helper::create_fake_stored_file_from_path($path, $manager->id, $contextsys);",
          "736:         $this->framework->set_file($file);",
          "737:         $mayupdatelib = $this->framework->mayUpdateLibraries();",
          "738:         $this->assertTrue($mayupdatelib);",
          "741:         $file = helper::create_fake_stored_file_from_path($path, $user->id, $contextsys);",
          "742:         $this->framework->set_file($file);",
          "743:         $mayupdatelib = $this->framework->mayUpdateLibraries();",
          "744:         $this->assertFalse($mayupdatelib);",
          "746:         $file = helper::create_fake_stored_file_from_path($path, $user->id, $contextlabel);",
          "747:         $this->framework->set_file($file);",
          "749:         $this->assertFalse($mayupdatelib);",
          "753:         $file = helper::create_fake_stored_file_from_path($path, $admin->id, $contextlabel);",
          "754:         $this->framework->set_file($file);",
          "755:         $mayupdatelib = $this->framework->mayUpdateLibraries();",
          "756:         $this->assertTrue($mayupdatelib);",
          "760:         $file = helper::create_fake_stored_file_from_path($path, $user->id, $contextlabel);",
          "761:         $this->framework->set_file($file);",
          "762:         $mayupdatelib = $this->framework->mayUpdateLibraries();",
          "763:         $this->assertFalse($mayupdatelib);",
          "764:         assign_capability('moodle/h5p:updatelibraries', CAP_ALLOW, $studentrole->id, $contextlabel);",
          "765:         $mayupdatelib = $this->framework->mayUpdateLibraries();",
          "767:         $file = helper::create_fake_stored_file_from_path($path, $user->id, $contextsys);",
          "768:         $this->framework->set_file($file);",
          "769:         $mayupdatelib = $this->framework->mayUpdateLibraries();",
          "770:         $this->assertFalse($mayupdatelib);",
          "771:     }",
          "776:     public function test_get_file(): void {",
          "777:         $this->resetAfterTest();",
          "780:         $contextsys = \\context_system::instance();",
          "781:         $user = $this->getDataGenerator()->create_user();",
          "784:         $path = __DIR__ . '/fixtures/h5ptest.zip';",
          "787:         $this->expectException('coding_exception');",
          "788:         $this->expectExceptionMessage('Using get_file() before file is set');",
          "789:         $this->framework->get_file();",
          "792:         $file = helper::create_fake_stored_file_from_path($path, $user->id);",
          "793:         $this->framework->set_file($file);",
          "794:         $file = $this->framework->get_file();",
          "795:         $this->assertEquals($user->id, $$file->get_userid());",
          "796:         $this->assertEquals($contextsys->id, $file->get_contextid());",
          "799:         $course = $this->getDataGenerator()->create_course();",
          "800:         $contextcourse = \\context_course::instance($course->id);",
          "801:         $file = helper::create_fake_stored_file_from_path($path, $user->id, $contextcourse);",
          "802:         $this->framework->set_file($file);",
          "803:         $file = $this->framework->get_file();",
          "804:         $this->assertEquals($user->id, $$file->get_userid());",
          "805:         $this->assertEquals($contextcourse->id, $file->get_contextid());",
          "",
          "---------------"
        ],
        "lang/en/h5p.php||lang/en/h5p.php": [
          "File: lang/en/h5p.php -> lang/en/h5p.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "125: $string['noextension'] = 'The file you uploaded is not a valid HTML5 Package (It does not have the .h5p file extension)';",
          "126: $string['nopermissiontodeploy'] = 'This file can\\'t be displayed because it has been uploaded by a user without the required capability to deploy H5P content.';",
          "127: $string['nojson'] = 'The main h5p.json file is not valid';",
          "128: $string['nounzip'] = 'The file you uploaded is not a valid HTML5 Package (We are unable to unzip it)';",
          "129: $string['offlineDialogBody'] = 'We were unable to send information about your completion of this task. Please check your internet connection.';",
          "130: $string['offlineDialogHeader'] = 'Your connection to the server was lost';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "128: $string['notrustablefile'] = 'This file can\\'t be displayed because it has been uploaded by a user without the capability to update H5P content types.",
          "129:  Please contact your administrator to ask for the content type to be installed.';",
          "",
          "---------------"
        ],
        "lang/en/role.php||lang/en/role.php": [
          "File: lang/en/role.php -> lang/en/role.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "261: $string['grade:viewall'] = 'View grades of other users';",
          "262: $string['grade:viewhidden'] = 'View hidden grades for owner';",
          "263: $string['h5p:deploy'] = 'Deploy H5P content';",
          "264: $string['h5p:setdisplayoptions'] = 'Set H5P display options';",
          "265: $string['highlightedcellsshowdefault'] = 'The permissions highlighted in the table below are the defaults for the role archetype currently selected above.';",
          "266: $string['highlightedcellsshowinherit'] = 'The highlighted cells in the table below show the permission (if any) that will be inherited. Apart from the capabilities whose permission you actually want to alter, you should leave everything set to Inherit.';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "264: $string['h5p:updatelibraries'] = 'Manage H5P content types';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "496: $string['course:togglecompletion'] = 'Manually mark activities as complete';",
          "",
          "[Removed Lines]",
          "499: $string['eventrolecapabilitiesupdated'] = 'Role capabilities updated';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/db/access.php||lib/db/access.php": [
          "File: lib/db/access.php -> lib/db/access.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2450:             'editingteacher' => CAP_ALLOW,",
          "2451:         )",
          "2452:     ),",
          "2453: );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2455:     'moodle/h5p:updatelibraries' => [",
          "2456:         'riskbitmask' => RISK_XSS,",
          "2457:         'captype' => 'write',",
          "2458:         'contextlevel' => CONTEXT_MODULE,",
          "2459:         'archetypes' => [",
          "2460:             'manager' => CAP_ALLOW,",
          "2461:         ]",
          "2462:     ],",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2019110500.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2019110500.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "959e4f0e978f6652e8982ced066c1c443ff184f3",
      "candidate_info": {
        "commit_hash": "959e4f0e978f6652e8982ced066c1c443ff184f3",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/959e4f0e978f6652e8982ced066c1c443ff184f3",
        "files": [
          "admin/settings/courses.php",
          "course/lib.php",
          "course/request.php",
          "course/request_form.php",
          "course/tests/behat/course_request.feature",
          "course/tests/courselib_test.php",
          "course/tests/courserequest_test.php",
          "lang/en/admin.php",
          "lang/en/deprecated.txt",
          "lib/db/access.php",
          "lib/db/upgrade.php",
          "version.php"
        ],
        "message": "MDL-66740 core_course: change defaults for course request settings",
        "before_after_code_files": [
          "admin/settings/courses.php||admin/settings/courses.php",
          "course/lib.php||course/lib.php",
          "course/request.php||course/request.php",
          "course/request_form.php||course/request_form.php",
          "course/tests/behat/course_request.feature||course/tests/behat/course_request.feature",
          "course/tests/courselib_test.php||course/tests/courselib_test.php",
          "course/tests/courserequest_test.php||course/tests/courserequest_test.php",
          "lang/en/admin.php||lang/en/admin.php",
          "lib/db/access.php||lib/db/access.php",
          "lib/db/upgrade.php||lib/db/upgrade.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/db/access.php||lib/db/access.php",
            "version.php||version.php"
          ],
          "candidate": [
            "lib/db/access.php||lib/db/access.php",
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/settings/courses.php||admin/settings/courses.php": [
          "File: admin/settings/courses.php -> admin/settings/courses.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "165:     $temp = new admin_settingpage('courserequest', new lang_string('courserequest'));",
          "169:     $temp->add(new admin_setting_users_with_capability('courserequestnotify', new lang_string('courserequestnotify', 'admin'), new lang_string('configcourserequestnotify2', 'admin'), array(), 'moodle/site:approvecourse'));",
          "170:     $ADMIN->add('courses', $temp);",
          "",
          "[Removed Lines]",
          "166:     $temp->add(new admin_setting_configcheckbox('enablecourserequests', new lang_string('enablecourserequests', 'admin'), new lang_string('configenablecourserequests', 'admin'), 0));",
          "167:     $temp->add(new admin_settings_coursecat_select('defaultrequestcategory', new lang_string('defaultrequestcategory', 'admin'), new lang_string('configdefaultrequestcategory', 'admin'), 1));",
          "168:     $temp->add(new admin_setting_configcheckbox('requestcategoryselection', new lang_string('requestcategoryselection', 'admin'), new lang_string('configrequestcategoryselection', 'admin'), 0));",
          "",
          "[Added Lines]",
          "166:     $temp->add(new admin_setting_configcheckbox('enablecourserequests',",
          "167:         new lang_string('enablecourserequests', 'admin'),",
          "168:         new lang_string('configenablecourserequests', 'admin'), 1));",
          "169:     $temp->add(new admin_settings_coursecat_select('defaultrequestcategory',",
          "170:         new lang_string('defaultrequestcategory', 'admin'),",
          "171:         new lang_string('configdefaultrequestcategory', 'admin'), 1));",
          "172:     $temp->add(new admin_setting_configcheckbox('lockrequestcategory',",
          "173:         new lang_string('lockrequestcategory', 'admin'),",
          "174:         new lang_string('configlockrequestcategory', 'admin'), 0));",
          "",
          "---------------"
        ],
        "course/lib.php||course/lib.php": [
          "File: course/lib.php -> course/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2838:         $data->requester = $USER->id;",
          "2842:             $data->category = $CFG->defaultrequestcategory;",
          "2843:         }",
          "",
          "[Removed Lines]",
          "2841:         if (empty($data->category) || empty($CFG->requestcategoryselection)) {",
          "",
          "[Added Lines]",
          "2841:         if (empty($data->category) || !empty($CFG->lockrequestcategory)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3167:             return $defaultcontext &&",
          "3168:                 has_capability('moodle/course:request', $defaultcontext);",
          "3169:         } else if ($context instanceof context_coursecat) {",
          "3171:                 return has_capability('moodle/course:request', $context);",
          "3172:             }",
          "3173:         }",
          "",
          "[Removed Lines]",
          "3170:             if ($CFG->requestcategoryselection || $CFG->defaultrequestcategory == $context->instanceid) {",
          "",
          "[Added Lines]",
          "3170:             if (!$CFG->lockrequestcategory || $CFG->defaultrequestcategory == $context->instanceid) {",
          "",
          "---------------"
        ],
        "course/request.php||course/request.php": [
          "File: course/request.php -> course/request.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:     print_error('courserequestdisabled', '', $returnurl);",
          "50: }",
          "54:     $categoryid = null;",
          "55: } else if (!$categoryid) {",
          "",
          "[Removed Lines]",
          "52: if (!$CFG->requestcategoryselection) {",
          "",
          "[Added Lines]",
          "52: if ($CFG->lockrequestcategory) {",
          "",
          "---------------"
        ],
        "course/request_form.php||course/request_form.php": [
          "File: course/request_form.php -> course/request_form.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:         $mform->addRule('shortname', get_string('missingshortname'), 'required', null, 'client');",
          "69:         $mform->setType('shortname', PARAM_TEXT);",
          "72:             $displaylist = core_course_category::make_categories_list('moodle/course:request');",
          "73:             $mform->addElement('select', 'category', get_string('coursecategory'), $displaylist);",
          "74:             $mform->setDefault('category', $CFG->defaultrequestcategory);",
          "",
          "[Removed Lines]",
          "71:         if (!empty($CFG->requestcategoryselection)) {",
          "",
          "[Added Lines]",
          "71:         if (empty($CFG->lockrequestcategory)) {",
          "",
          "---------------"
        ],
        "course/tests/behat/course_request.feature||course/tests/behat/course_request.feature": [
          "File: course/tests/behat/course_request.feature -> course/tests/behat/course_request.feature",
          "--- Hunk 1 ---",
          "[Context before]",
          "17:       | user2 | Acceptance test site | manager |",
          "18:     Given I log in as \"admin\"",
          "19:     And I set the following administration settings values:",
          "21:     And I log out",
          "22:     When I log in as \"user1\"",
          "23:     And I am on course index",
          "",
          "[Removed Lines]",
          "20:       | enablecourserequests | 1 |",
          "",
          "[Added Lines]",
          "20:       | lockrequestcategory | 1 |",
          "21:     And I set the following system permissions of \"Authenticated user\" role:",
          "22:       | capability | permission |",
          "23:       | moodle/course:request | Allow |",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "65:       | user2 | manager         | Category     | SCI       |",
          "66:       | user3 | manager         | Category     | ENG       |",
          "67:     Given I log in as \"admin\"",
          "74:     And I set the following system permissions of \"Course requestor\" role:",
          "75:       | capability            | permission |",
          "76:       | moodle/course:request | Allow      |",
          "",
          "[Removed Lines]",
          "68:     And I set the following administration settings values:",
          "69:       | enablecourserequests     | 1 |",
          "70:       | requestcategoryselection | 1 |",
          "71:     And I set the following system permissions of \"Authenticated user\" role:",
          "72:       | capability            | permission |",
          "73:       | moodle/course:request | Prevent    |",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "course/tests/courselib_test.php||course/tests/courselib_test.php": [
          "File: course/tests/courselib_test.php -> course/tests/courselib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "6818:     public function test_can_request_course() {",
          "6820:         $this->resetAfterTest();",
          "6822:         $user = $this->getDataGenerator()->create_user();",
          "",
          "[Removed Lines]",
          "6819:         global $CFG;",
          "",
          "[Added Lines]",
          "6819:         global $CFG, $DB;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6828:         $context3 = context_coursecat::instance($cat3);",
          "6829:         $this->setUser($user);",
          "6832:         $this->assertFalse(course_request::can_request(context_system::instance()));",
          "6836:         $this->assertTrue(course_request::can_request(context_system::instance()));",
          "6837:         $this->assertTrue(course_request::can_request($context1));",
          "6838:         $this->assertFalse(course_request::can_request($context2));",
          "6839:         $this->assertFalse(course_request::can_request($context3));",
          "6843:         $this->assertTrue(course_request::can_request(context_system::instance()));",
          "6844:         $this->assertTrue(course_request::can_request($context1));",
          "6845:         $this->assertTrue(course_request::can_request($context2));",
          "",
          "[Removed Lines]",
          "6835:         $CFG->enablecourserequests = true;",
          "6842:         $CFG->requestcategoryselection = 1;",
          "",
          "[Added Lines]",
          "6833:         $this->assertFalse(course_request::can_request($context1));",
          "6834:         $this->assertFalse(course_request::can_request($context2));",
          "6835:         $this->assertFalse(course_request::can_request($context3));",
          "6838:         $userroleid = $DB->get_field('role', 'id', ['shortname' => 'user']);",
          "6839:         assign_capability('moodle/course:request', CAP_ALLOW, $userroleid,",
          "6840:             context_system::instance()->id);",
          "6841:         accesslib_clear_all_caches_for_unit_testing();",
          "6844:         $CFG->lockrequestcategory = 1;",
          "6853:         $CFG->lockrequestcategory = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "6856:         $this->assertTrue(course_request::can_request($context1));",
          "6857:         $this->assertFalse(course_request::can_request($context2));",
          "6858:         $this->assertTrue(course_request::can_request($context3));",
          "6859:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6872:         $CFG->enablecourserequests = false;",
          "6873:         $this->assertFalse(course_request::can_request(context_system::instance()));",
          "6874:         $this->assertFalse(course_request::can_request($context1));",
          "6875:         $this->assertFalse(course_request::can_request($context2));",
          "6876:         $this->assertFalse(course_request::can_request($context3));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "6875:         $CFG->enablecourserequests = true;",
          "6877:         $this->setUser($requestor);",
          "6878:         $requestdata = ['summary_editor' => ['text' => '', 'format' => 0], 'name' => 'Req', 'reason' => 'test'];",
          "6879:         $request1 = course_request::create((object)($requestdata));",
          "",
          "[Removed Lines]",
          "6876:         $CFG->requestcategoryselection = 1;",
          "",
          "[Added Lines]",
          "6894:         $CFG->lockrequestcategory = 0;",
          "",
          "---------------"
        ],
        "course/tests/courserequest_test.php||course/tests/courserequest_test.php": [
          "File: course/tests/courserequest_test.php -> course/tests/courserequest_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:         $defaultcategory = $DB->get_field_select('course_categories', \"MIN(id)\", \"parent=0\");",
          "39:         set_config('enablecourserequests', 1);",
          "41:         set_config('defaultrequestcategory', $defaultcategory);",
          "",
          "[Removed Lines]",
          "40:         set_config('requestcategoryselection', 0);",
          "",
          "[Added Lines]",
          "40:         set_config('lockrequestcategory', 1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72:         set_config('defaultrequestcategory', $cat3->id);",
          "74:         $data->category = $cat1->id;",
          "75:         $cr = course_request::create($data);",
          "76:         $this->assertEquals($cat1->id, $cr->category);",
          "",
          "[Removed Lines]",
          "73:         set_config('requestcategoryselection', 1);",
          "",
          "[Added Lines]",
          "73:         set_config('lockrequestcategory', 0);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "84:         $defaultcategory = $DB->get_field_select('course_categories', \"MIN(id)\", \"parent=0\");",
          "85:         set_config('enablecourserequests', 1);",
          "87:         set_config('defaultrequestcategory', $defaultcategory);",
          "90:         $cat1 = $this->getDataGenerator()->create_category();",
          "91:         $cat2 = $this->getDataGenerator()->create_category();",
          "93:         $requester = $this->getDataGenerator()->create_user();",
          "95:         $data = new stdClass();",
          "96:         $data->fullname = 'H\u0259llo World!';",
          "",
          "[Removed Lines]",
          "86:         set_config('requestcategoryselection', 0);",
          "",
          "[Added Lines]",
          "86:         set_config('lockrequestcategory', 1);",
          "95:         $roleid = create_role('Course requestor role', 'courserequestor', '');",
          "96:         assign_capability('moodle/course:request', CAP_ALLOW, $roleid,",
          "97:             context_system::instance()->id);",
          "98:         role_assign($roleid, $requester->id, context_system::instance()->id);",
          "99:         accesslib_clear_all_caches_for_unit_testing();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "116:         $this->assertEquals($defaultcategory, $course->category);",
          "120:         set_config('defaultrequestcategory', $cat2->id);",
          "121:         $data->shortname .= ' 2nd';",
          "122:         $data->category = $cat1->id;",
          "",
          "[Removed Lines]",
          "119:         set_config('requestcategoryselection', 1);",
          "",
          "[Added Lines]",
          "125:         set_config('lockrequestcategory', 0);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "139:         $this->setAdminUser();",
          "140:         set_config('enablecourserequests', 1);",
          "142:         set_config('defaultrequestcategory', $DB->get_field_select('course_categories', \"MIN(id)\", \"parent=0\"));",
          "144:         $requester = $this->getDataGenerator()->create_user();",
          "146:         $data = new stdClass();",
          "147:         $data->fullname = 'H\u0259llo World!';",
          "",
          "[Removed Lines]",
          "141:         set_config('requestcategoryselection', 0);",
          "",
          "[Added Lines]",
          "147:         set_config('lockrequestcategory', 1);",
          "152:         $roleid = create_role('Course requestor role', 'courserequestor', '');",
          "153:         assign_capability('moodle/course:request', CAP_ALLOW, $roleid,",
          "154:             context_system::instance()->id);",
          "155:         role_assign($roleid, $requester->id, context_system::instance()->id);",
          "156:         accesslib_clear_all_caches_for_unit_testing();",
          "",
          "---------------"
        ],
        "lang/en/admin.php||lang/en/admin.php": [
          "File: lang/en/admin.php -> lang/en/admin.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "203: $string['configdebugpageinfo'] = 'Enable if you want page information printed in page footer.';",
          "204: $string['configdebugvalidators'] = 'Enable if you want to have links to external validator servers in page footer. You may need to create new user with username <em>w3cvalidator</em>, and enable guest access. These changes may allow unauthorized access to server, do not enable on production sites!';",
          "205: $string['configdefaulthomepage'] = 'This determines the first link in the navigation for logged-in users.';",
          "207: $string['configdefaultrequestedcategory'] = 'Default category to put courses that were requested into, if they\\'re approved.';",
          "208: $string['configdefaultuserroleid'] = 'All logged in users will be given the capabilities of the role you specify here, at the site level, in ADDITION to any other roles they may have been given.  The default is the Authenticated user role.  Note that this will not conflict with other roles they have unless you prohibit capabilities, it just ensures that all users have capabilities that are not assignable at the course level (eg post blog entries, manage own calendar, etc).';",
          "209: $string['configdeleteincompleteusers'] = 'After this period, any account without the first name, last name or email field filled in is deleted.';",
          "",
          "[Removed Lines]",
          "206: $string['configdefaultrequestcategory'] = 'Courses requested by users will be automatically placed in this category.';",
          "",
          "[Added Lines]",
          "206: $string['configdefaultrequestcategory'] = 'Courses requested by users will be placed in this category if the category is not specified.';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "225: $string['configemailsubjectprefix'] = 'Text to be prefixed to the subject line of all outgoing mail.';",
          "226: $string['configenablecalendarexport'] = 'Enable exporting or subscribing to calendars.';",
          "227: $string['configenablecomments'] = 'Enable comments';",
          "229: $string['configenablemobilewebservice'] = 'Enable mobile service for the official Moodle app or other app requesting it. For more information, read the {$a}';",
          "230: $string['configenablerssfeeds'] = 'If enabled, RSS feeds are generated by various features across the site, such as blogs, forums, database activities and glossaries. Note that RSS feeds also need to be enabled for the particular activity modules.';",
          "231: $string['configenablerssfeedsdisabled'] = 'It is not available because RSS feeds are disabled in all the Site. To enable them, go to the Variables settings under Admin Configuration.';",
          "",
          "[Removed Lines]",
          "228: $string['configenablecourserequests'] = 'This will allow any user to request a course be created.';",
          "",
          "[Added Lines]",
          "228: $string['configenablecourserequests'] = 'Enable course request functionality. Users with capability to request courses but without capability to create courses will be able to request courses.';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "270: $string['configlangmenu'] = 'Choose whether or not you want to display the general-purpose language menu on the home page, login page etc.  This does not affect the user\\'s ability to set the preferred language in their own profile.';",
          "271: $string['configlatinexcelexport'] = 'Choose the encoding for Excel exports.';",
          "272: $string['configlocale'] = 'Choose a sitewide locale - this will override the format and language of dates for all language packs (though names of days in calendar are not affected). You need to have this locale data installed on your operating system (eg for linux en_US.UTF-8 or es_ES.UTF-8). In most cases this field should be left blank.';",
          "273: $string['configloglifetime'] = 'This specifies the length of time you want to keep logs about user activity.  Logs that are older than this age are automatically deleted.  It is best to keep logs as long as possible, in case you need them, but if you have a very busy server and are experiencing performance problems, then you may want to lower the log lifetime. Values lower than 30 are not recommended because statistics may not work properly.';",
          "274: $string['configlookahead'] = 'Days to look ahead';",
          "275: $string['configmailnewline'] = 'Newline characters used in mail messages. CRLF is required according to RFC 822bis, some mail servers do automatic conversion from LF to CRLF, other mail servers do incorrect conversion from CRLF to CRCRLF, yet others reject mails with bare LF (qmail for example). Try changing this setting if you are having problems with undelivered emails or double newlines.';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "273: $string['configlockrequestcategory'] = 'Only allow course requests in the default course request category. This is a legacy setting, it is better not to use it but instead assign capability to request courses in the appropriate course category context';",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "317: $string['configproxyuser'] = 'Username needed to access internet through proxy if required, empty if none (PHP cURL extension required).';",
          "318: $string['configrecaptchaprivatekey'] = 'String of characters (secret key) used to communicate between your Moodle server and the recaptcha server. ReCAPTCHA keys can be obtained from <a target=\"_blank\" href=\"https://www.google.com/recaptcha\">Google reCAPTCHA</a>.';",
          "319: $string['configrecaptchapublickey'] = 'String of characters (site key) used to display the reCAPTCHA element in the signup form. ReCAPTCHA keys can be obtained from <a target=\"_blank\" href=\"https://www.google.com/recaptcha\">Google reCAPTCHA</a>.';",
          "321: $string['configrequestedstudentname'] = 'Word for student used in requested courses';",
          "322: $string['configrequestedstudentsname'] = 'Word for students used in requested courses';",
          "323: $string['configrequestedteachername'] = 'Word for teacher used in requested courses';",
          "",
          "[Removed Lines]",
          "320: $string['configrequestcategoryselection'] = 'Allow the selection of a category when requesting a course.';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "716: $string['lockoutthreshold_desc'] = 'Select number of failed login attempts that result in account lockout. This feature may be abused in denial of service attacks.';",
          "717: $string['lockoutwindow'] = 'Account lockout observation window';",
          "718: $string['lockoutwindow_desc'] = 'Observation time for lockout threshold, if there are no failed attempts the threshold counter is reset after this time.';",
          "719: $string['log'] = 'Logs';",
          "720: $string['logguests'] = 'Log guest access';",
          "721: $string['logguests_help'] = 'This setting enables logging of actions by guest account and not logged in users. High profile sites may want to disable this logging for performance reasons. It is recommended to keep this setting enabled on production sites.';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "719: $string['lockrequestcategory'] = 'Lock category for the course requests';",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1045: $string['purgeselectedcachesfinished'] = 'The selected caches were purged.';",
          "1046: $string['purgetemplates'] = 'Templates';",
          "1047: $string['purgethemecache'] = 'Themes';",
          "1049: $string['restorecourse'] = 'Restore course';",
          "1050: $string['restorernewroleid'] = 'Restorers\\' role in courses';",
          "1051: $string['restorernewroleid_help'] = 'If the user does not already have the permission to manage the newly restored course, the user is automatically assigned this role and enrolled if necessary. Select \"None\" if you do not want restorers to be able to manage every restored course.';",
          "",
          "[Removed Lines]",
          "1048: $string['requestcategoryselection'] = 'Enable category selection';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1436: $string['registermoodleorgli1'] = 'You are added to a low-volume mailing list for important notifications such as security alerts and new releases of Moodle.';",
          "1437: $string['registermoodleorgli2'] = 'Statistics about your site will be added to the {$a} of the worldwide Moodle community.';",
          "1438: $string['registerwithmoodleorg'] = 'Register your site';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1439: $string['configrequestcategoryselection'] = 'Allow the selection of a category when requesting a course.';",
          "1440: $string['requestcategoryselection'] = 'Enable category selection';",
          "",
          "---------------"
        ],
        "lib/db/access.php||lib/db/access.php": [
          "File: lib/db/access.php -> lib/db/access.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "783:     'moodle/course:request' => array(",
          "784:         'captype' => 'write',",
          "785:         'contextlevel' => CONTEXT_COURSECAT,",
          "789:     ),",
          "791:     'moodle/course:delete' => array(",
          "",
          "[Removed Lines]",
          "786:         'archetypes' => array(",
          "787:             'user' => CAP_ALLOW,",
          "788:         )",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/db/upgrade.php||lib/db/upgrade.php": [
          "File: lib/db/upgrade.php -> lib/db/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3609:         upgrade_main_savepoint(true, 2019100900.00);",
          "3610:     }",
          "3612:     return true;",
          "3613: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3612:     if ($oldversion < 2019101200.01) {",
          "3615:         set_config('lockrequestcategory', !$CFG->requestcategoryselection);",
          "3617:         upgrade_main_savepoint(true, 2019101200.01);",
          "3618:     }",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2019101200.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2019101200.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    }
  ]
}