{
  "cve_id": "CVE-2021-23327",
  "cve_desc": "The package apexcharts before 3.24.0 are vulnerable to Cross-site Scripting (XSS) via lack of sanitization of graph legend fields.",
  "repo": "apexcharts/apexcharts.js",
  "patch_hash": "68f3f34d125719b4767614fe0a595cc65bde1d19",
  "patch_info": {
    "commit_hash": "68f3f34d125719b4767614fe0a595cc65bde1d19",
    "repo": "apexcharts/apexcharts.js",
    "commit_url": "https://github.com/apexcharts/apexcharts.js/commit/68f3f34d125719b4767614fe0a595cc65bde1d19",
    "files": [
      "src/modules/legend/Legend.js",
      "src/modules/tooltip/Labels.js",
      "src/utils/Utils.js"
    ],
    "message": "Merge pull request #2158 from 418sec/1-npm-apexcharts\n\nSecurity Fix for Cross-Site Scripting (XSS) - huntr.dev",
    "before_after_code_files": [
      "src/modules/legend/Legend.js||src/modules/legend/Legend.js",
      "src/modules/tooltip/Labels.js||src/modules/tooltip/Labels.js",
      "src/utils/Utils.js||src/utils/Utils.js"
    ]
  },
  "patch_diff": {
    "src/modules/legend/Legend.js||src/modules/legend/Legend.js": [
      "File: src/modules/legend/Legend.js -> src/modules/legend/Legend.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "190:       let elLegendText = document.createElement('span')",
      "191:       elLegendText.classList.add('apexcharts-legend-text')",
      "194:       let textColor = w.config.legend.labels.useSeriesColors",
      "195:         ? w.globals.colors[i]",
      "",
      "[Removed Lines]",
      "192:       elLegendText.innerHTML = Array.isArray(text) ? text.join(' ') : text",
      "",
      "[Added Lines]",
      "192:       elLegendText.innerHTML = Array.isArray(text) ? Utils.sanitizeDom(text.join(' ')) : Utils.sanitizeDom(text)",
      "",
      "---------------"
    ],
    "src/modules/tooltip/Labels.js||src/modules/tooltip/Labels.js": [
      "File: src/modules/tooltip/Labels.js -> src/modules/tooltip/Labels.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: import Formatters from '../Formatters'",
      "2: import DateTime from '../../utils/DateTime'",
      "3: import Utils from './Utils'",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4: import Utilities from '../../utils/Utils'",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "165:       if (w.globals.yLabelFormatters[0]) {",
      "166:         yLbFormatter = w.globals.yLabelFormatters[0]",
      "167:       } else {",
      "169:           return label",
      "170:         }",
      "171:       }",
      "172:     }",
      "174:     if (typeof yLbTitleFormatter !== 'function') {",
      "176:         return label",
      "177:       }",
      "178:     }",
      "",
      "[Removed Lines]",
      "168:         yLbFormatter = function(label) {",
      "175:       yLbTitleFormatter = function(label) {",
      "",
      "[Added Lines]",
      "169:         yLbFormatter = function (label) {",
      "176:       yLbTitleFormatter = function (label) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "197:     const w = this.w",
      "198:     const ttCtx = this.ttCtx",
      "200:     const { val, xVal, xAxisTTVal, zVal } = values",
      "202:     let ttItemsChildren = null",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "201:     Object.keys(values).forEach(key => {",
      "202:       if (typeof values[key] == 'string')",
      "203:         values[key] = Utilities.sanitizeDom(values[key])",
      "204:     })",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "226:     const ttYLabel = ttItems[t].querySelector('.apexcharts-tooltip-text-label')",
      "227:     if (ttYLabel) {",
      "229:     }",
      "230:     const ttYVal = ttItems[t].querySelector('.apexcharts-tooltip-text-value')",
      "231:     if (ttYVal) {",
      "",
      "[Removed Lines]",
      "228:       ttYLabel.innerHTML = seriesName ? seriesName : ''",
      "",
      "[Added Lines]",
      "234:       ttYLabel.innerHTML = seriesName ? Utilities.sanitizeDom(seriesName) : ''",
      "",
      "---------------"
    ],
    "src/utils/Utils.js||src/utils/Utils.js": [
      "File: src/utils/Utils.js -> src/utils/Utils.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: class Utils {",
      "6:   static bind(fn, me) {",
      "8:       return fn.apply(me, arguments)",
      "9:     }",
      "10:   }",
      "",
      "[Removed Lines]",
      "7:     return function() {",
      "",
      "[Added Lines]",
      "7:     return function () {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "29:   static extend(target, source) {",
      "30:     if (typeof Object.assign !== 'function') {",
      "33:           'use strict'",
      "35:           if (target === undefined || target === null) {",
      "",
      "[Removed Lines]",
      "31:       ;(function() {",
      "32:         Object.assign = function(target) {",
      "",
      "[Added Lines]",
      "31:       ; (function () {",
      "32:         Object.assign = function (target) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "218:     )",
      "219:     return rgb && rgb.length === 4",
      "220:       ? '#' +",
      "224:       : ''",
      "225:   }",
      "",
      "[Removed Lines]",
      "221:           ('0' + parseInt(rgb[1], 10).toString(16)).slice(-2) +",
      "222:           ('0' + parseInt(rgb[2], 10).toString(16)).slice(-2) +",
      "223:           ('0' + parseInt(rgb[3], 10).toString(16)).slice(-2)",
      "",
      "[Added Lines]",
      "221:       ('0' + parseInt(rgb[1], 10).toString(16)).slice(-2) +",
      "222:       ('0' + parseInt(rgb[2], 10).toString(16)).slice(-2) +",
      "223:       ('0' + parseInt(rgb[3], 10).toString(16)).slice(-2)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "381:     return false",
      "382:   }",
      "383: }",
      "385: export default Utils",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "389:   static sanitizeDom(string) {",
      "390:     return string",
      "391:       .replace(/\\&/g, '&amp;')",
      "392:       .replace(/\\</g, '&lt;')",
      "393:       .replace(/\\>/g, '&gt;')",
      "394:       .replace(/\\\"/g, '&quot;')",
      "395:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9a7425c0fcec4c7081f32ceceae2f11a90aed255",
      "candidate_info": {
        "commit_hash": "9a7425c0fcec4c7081f32ceceae2f11a90aed255",
        "repo": "apexcharts/apexcharts.js",
        "commit_url": "https://github.com/apexcharts/apexcharts.js/commit/9a7425c0fcec4c7081f32ceceae2f11a90aed255",
        "files": [
          "src/modules/legend/Legend.js",
          "src/modules/tooltip/Labels.js",
          "src/utils/Utils.js"
        ],
        "message": "Security fix for Cross-Site Scripting in apexcharts",
        "before_after_code_files": [
          "src/modules/legend/Legend.js||src/modules/legend/Legend.js",
          "src/modules/tooltip/Labels.js||src/modules/tooltip/Labels.js",
          "src/utils/Utils.js||src/utils/Utils.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apexcharts/apexcharts.js/pull/2158"
        ],
        "olp_code_files": {
          "patch": [
            "src/modules/legend/Legend.js||src/modules/legend/Legend.js",
            "src/modules/tooltip/Labels.js||src/modules/tooltip/Labels.js",
            "src/utils/Utils.js||src/utils/Utils.js"
          ],
          "candidate": [
            "src/modules/legend/Legend.js||src/modules/legend/Legend.js",
            "src/modules/tooltip/Labels.js||src/modules/tooltip/Labels.js",
            "src/utils/Utils.js||src/utils/Utils.js"
          ]
        }
      },
      "candidate_diff": {
        "src/modules/legend/Legend.js||src/modules/legend/Legend.js": [
          "File: src/modules/legend/Legend.js -> src/modules/legend/Legend.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "190:       let elLegendText = document.createElement('span')",
          "191:       elLegendText.classList.add('apexcharts-legend-text')",
          "194:       let textColor = w.config.legend.labels.useSeriesColors",
          "195:         ? w.globals.colors[i]",
          "",
          "[Removed Lines]",
          "192:       elLegendText.innerHTML = Array.isArray(text) ? text.join(' ') : text",
          "",
          "[Added Lines]",
          "192:       elLegendText.innerHTML = Array.isArray(text) ? Utils.sanitizeDom(text.join(' ')) : Utils.sanitizeDom(text)",
          "",
          "---------------"
        ],
        "src/modules/tooltip/Labels.js||src/modules/tooltip/Labels.js": [
          "File: src/modules/tooltip/Labels.js -> src/modules/tooltip/Labels.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import Formatters from '../Formatters'",
          "2: import DateTime from '../../utils/DateTime'",
          "3: import Utils from './Utils'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: import Utilities from '../../utils/Utils'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "165:       if (w.globals.yLabelFormatters[0]) {",
          "166:         yLbFormatter = w.globals.yLabelFormatters[0]",
          "167:       } else {",
          "169:           return label",
          "170:         }",
          "171:       }",
          "172:     }",
          "174:     if (typeof yLbTitleFormatter !== 'function') {",
          "176:         return label",
          "177:       }",
          "178:     }",
          "",
          "[Removed Lines]",
          "168:         yLbFormatter = function(label) {",
          "175:       yLbTitleFormatter = function(label) {",
          "",
          "[Added Lines]",
          "169:         yLbFormatter = function (label) {",
          "176:       yLbTitleFormatter = function (label) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "197:     const w = this.w",
          "198:     const ttCtx = this.ttCtx",
          "200:     const { val, xVal, xAxisTTVal, zVal } = values",
          "202:     let ttItemsChildren = null",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "201:     Object.keys(values).forEach(key => {",
          "202:       if (typeof values[key] == 'string')",
          "203:         values[key] = Utilities.sanitizeDom(values[key])",
          "204:     })",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "226:     const ttYLabel = ttItems[t].querySelector('.apexcharts-tooltip-text-label')",
          "227:     if (ttYLabel) {",
          "229:     }",
          "230:     const ttYVal = ttItems[t].querySelector('.apexcharts-tooltip-text-value')",
          "231:     if (ttYVal) {",
          "",
          "[Removed Lines]",
          "228:       ttYLabel.innerHTML = seriesName ? seriesName : ''",
          "",
          "[Added Lines]",
          "234:       ttYLabel.innerHTML = seriesName ? Utilities.sanitizeDom(seriesName) : ''",
          "",
          "---------------"
        ],
        "src/utils/Utils.js||src/utils/Utils.js": [
          "File: src/utils/Utils.js -> src/utils/Utils.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: class Utils {",
          "6:   static bind(fn, me) {",
          "8:       return fn.apply(me, arguments)",
          "9:     }",
          "10:   }",
          "",
          "[Removed Lines]",
          "7:     return function() {",
          "",
          "[Added Lines]",
          "7:     return function () {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29:   static extend(target, source) {",
          "30:     if (typeof Object.assign !== 'function') {",
          "33:           'use strict'",
          "35:           if (target === undefined || target === null) {",
          "",
          "[Removed Lines]",
          "31:       ;(function() {",
          "32:         Object.assign = function(target) {",
          "",
          "[Added Lines]",
          "31:       ; (function () {",
          "32:         Object.assign = function (target) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "218:     )",
          "219:     return rgb && rgb.length === 4",
          "220:       ? '#' +",
          "224:       : ''",
          "225:   }",
          "",
          "[Removed Lines]",
          "221:           ('0' + parseInt(rgb[1], 10).toString(16)).slice(-2) +",
          "222:           ('0' + parseInt(rgb[2], 10).toString(16)).slice(-2) +",
          "223:           ('0' + parseInt(rgb[3], 10).toString(16)).slice(-2)",
          "",
          "[Added Lines]",
          "221:       ('0' + parseInt(rgb[1], 10).toString(16)).slice(-2) +",
          "222:       ('0' + parseInt(rgb[2], 10).toString(16)).slice(-2) +",
          "223:       ('0' + parseInt(rgb[3], 10).toString(16)).slice(-2)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "381:     return false",
          "382:   }",
          "383: }",
          "385: export default Utils",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "389:   static sanitizeDom(string) {",
          "390:     return string",
          "391:       .replace(/\\&/g, '&amp;')",
          "392:       .replace(/\\</g, '&lt;')",
          "393:       .replace(/\\>/g, '&gt;')",
          "394:       .replace(/\\\"/g, '&quot;')",
          "395:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}