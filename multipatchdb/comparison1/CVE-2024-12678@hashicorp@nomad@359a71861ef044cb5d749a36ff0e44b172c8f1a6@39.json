{
  "cve_id": "CVE-2024-12678",
  "cve_desc": "Nomad Community and Nomad Enterprise (\"Nomad\") allocations are vulnerable to privilege escalation within a namespace through unredacted workload identity tokens. This vulnerability, identified as CVE-2024-12678, is fixed in Nomad Community Edition 1.9.4 and Nomad Enterprise 1.9.4, 1.8.8, and 1.7.16.",
  "repo": "hashicorp/nomad",
  "patch_hash": "359a71861ef044cb5d749a36ff0e44b172c8f1a6",
  "patch_info": {
    "commit_hash": "359a71861ef044cb5d749a36ff0e44b172c8f1a6",
    "repo": "hashicorp/nomad",
    "commit_url": "https://github.com/hashicorp/nomad/commit/359a71861ef044cb5d749a36ff0e44b172c8f1a6",
    "files": [
      ".changelog/24683.txt",
      "command/agent/node_endpoint.go",
      "nomad/alloc_endpoint.go",
      "nomad/structs/structs.go"
    ],
    "message": "Backport of sec: fix alloc workload identity namespace permission into release/1.9.x (#24685)\n\nCo-authored-by: Deniz Onur Duzgun <59659739+dduzgun-security@users.noreply.github.com>",
    "before_after_code_files": [
      "command/agent/node_endpoint.go||command/agent/node_endpoint.go",
      "nomad/alloc_endpoint.go||nomad/alloc_endpoint.go",
      "nomad/structs/structs.go||nomad/structs/structs.go"
    ]
  },
  "patch_diff": {
    "command/agent/node_endpoint.go||command/agent/node_endpoint.go": [
      "File: command/agent/node_endpoint.go -> command/agent/node_endpoint.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "105:   out.Allocs = make([]*structs.Allocation, 0)",
      "106:  }",
      "107:  for _, alloc := range out.Allocs {",
      "108:   alloc.SetEventDisplayMessages()",
      "109:  }",
      "110:  return out.Allocs, nil",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "108:   alloc = alloc.Sanitize()",
      "",
      "---------------"
    ],
    "nomad/alloc_endpoint.go||nomad/alloc_endpoint.go": [
      "File: nomad/alloc_endpoint.go -> nomad/alloc_endpoint.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "172:    }",
      "176:    if out != nil {",
      "178:     if !aclObj.AllowClientOp() && !allowNsOp(aclObj, out.Namespace) {",
      "179:      return structs.NewErrUnknownAllocation(args.AllocID)",
      "",
      "[Removed Lines]",
      "175:    reply.Alloc = out",
      "",
      "[Added Lines]",
      "176:     out = out.Sanitize()",
      "177:     reply.Alloc = out",
      "",
      "---------------"
    ],
    "nomad/structs/structs.go||nomad/structs/structs.go": [
      "File: nomad/structs/structs.go -> nomad/structs/structs.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "11199:  return a.ID",
      "11200: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "11205: func (a *Allocation) Sanitize() *Allocation {",
      "11206:  if a == nil {",
      "11207:   return nil",
      "11208:  }",
      "11210:  if a.SignedIdentities == nil {",
      "11211:   return a",
      "11212:  }",
      "11214:  clean := a.Copy()",
      "11215:  clean.SignedIdentities = nil",
      "11216:  return clean",
      "11217: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "824ce0c7b786959364d4a43aa6af973a332ffc1e",
      "candidate_info": {
        "commit_hash": "824ce0c7b786959364d4a43aa6af973a332ffc1e",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/824ce0c7b786959364d4a43aa6af973a332ffc1e",
        "files": [
          ".changelog/24513.txt",
          "command/agent/consul/service_client.go"
        ],
        "message": "Backport of consul: handle nil multierror pointer correctly into release/1.9.x (#24516)\n\nCo-authored-by: Tim Gross <tgross@hashicorp.com>",
        "before_after_code_files": [
          "command/agent/consul/service_client.go||command/agent/consul/service_client.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "command/agent/consul/service_client.go||command/agent/consul/service_client.go": [
          "File: command/agent/consul/service_client.go -> command/agent/consul/service_client.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1105:   if err != nil {",
          "1106:    metrics.IncrCounter([]string{\"client\", \"consul\", \"sync_failure\"}, 1)",
          "1107:    err = fmt.Errorf(\"failed to query Consul checks: %w\", err)",
          "1109:     return err",
          "1110:    } else {",
          "1111:     mErr = multierror.Append(mErr, err)",
          "",
          "[Removed Lines]",
          "1108:    if mErr.Len() == 0 {",
          "",
          "[Added Lines]",
          "1108:    if mErr == nil || mErr.Len() == 0 {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1b6c8cf7ce11d8af9783fbe7d4aebda6dacf0f66",
      "candidate_info": {
        "commit_hash": "1b6c8cf7ce11d8af9783fbe7d4aebda6dacf0f66",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/1b6c8cf7ce11d8af9783fbe7d4aebda6dacf0f66",
        "files": [
          "go.mod",
          "go.sum"
        ],
        "message": "deps: Update golang.org/x packages (#24742)\n\nCo-authored-by: James Rasell <jrasell@users.noreply.github.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "129:  go.etcd.io/bbolt v1.3.9",
          "130:  go.uber.org/goleak v1.2.1",
          "131:  golang.org/x/crypto v0.31.0",
          "133:  golang.org/x/sync v0.10.0",
          "134:  golang.org/x/sys v0.28.0",
          "136:  google.golang.org/grpc v1.68.0",
          "137:  google.golang.org/protobuf v1.34.2",
          "138:  gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7",
          "",
          "[Removed Lines]",
          "132:  golang.org/x/mod v0.21.0",
          "135:  golang.org/x/time v0.3.0",
          "",
          "[Added Lines]",
          "132:  golang.org/x/mod v0.22.0",
          "135:  golang.org/x/time v0.8.0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "297:  go.opentelemetry.io/otel/metric v1.30.0 // indirect",
          "298:  go.opentelemetry.io/otel/sdk v1.21.0 // indirect",
          "299:  go.opentelemetry.io/otel/trace v1.30.0 // indirect",
          "303:  golang.org/x/term v0.27.0 // indirect",
          "304:  golang.org/x/text v0.21.0 // indirect",
          "307:  google.golang.org/api v0.128.0 // indirect",
          "308:  google.golang.org/appengine v1.6.8 // indirect",
          "309:  google.golang.org/genproto v0.0.0-20230920204549-e6e6cdab5c13 // indirect",
          "",
          "[Removed Lines]",
          "300:  golang.org/x/exp v0.0.0-20240613232115-7f521ea00fb8 // indirect",
          "301:  golang.org/x/net v0.29.0 // indirect",
          "302:  golang.org/x/oauth2 v0.23.0 // indirect",
          "305:  golang.org/x/tools v0.22.0 // indirect",
          "306:  golang.org/x/xerrors v0.0.0-20220907171357-04be3eba64a2 // indirect",
          "",
          "[Added Lines]",
          "300:  golang.org/x/exp v0.0.0-20241217172543-b2144cdd0a67 // indirect",
          "301:  golang.org/x/net v0.33.0 // indirect",
          "302:  golang.org/x/oauth2 v0.24.0 // indirect",
          "305:  golang.org/x/tools v0.28.0 // indirect",
          "306:  golang.org/x/xerrors v0.0.0-20240903120638-7835f813f4da // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "1174: golang.org/x/exp v0.0.0-20200119233911-0405dc783f0a/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=",
          "1175: golang.org/x/exp v0.0.0-20200207192155-f17229e696bd/go.mod h1:J/WKrq2StrnmMY6+EHIKF9dgMWnmCNThgcyBT1FY9mM=",
          "1176: golang.org/x/exp v0.0.0-20200224162631-6cc2880d07d6/go.mod h1:3jZMyOhIsHpP37uCMkUooju7aAi5cS1Q23tOzKc+0MU=",
          "1179: golang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=",
          "1180: golang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=",
          "1181: golang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=",
          "",
          "[Removed Lines]",
          "1177: golang.org/x/exp v0.0.0-20240613232115-7f521ea00fb8 h1:yixxcjnhBmY0nkL253HFVIm0JsFHwrHdT3Yh6szTnfY=",
          "1178: golang.org/x/exp v0.0.0-20240613232115-7f521ea00fb8/go.mod h1:jj3sYF3dwk5D+ghuXyeI3r5MFf+NT2An6/9dOA95KSI=",
          "",
          "[Added Lines]",
          "1177: golang.org/x/exp v0.0.0-20241217172543-b2144cdd0a67 h1:1UoZQm6f0P/ZO0w1Ri+f+ifG/gXhegadRdwBIXEFWDo=",
          "1178: golang.org/x/exp v0.0.0-20241217172543-b2144cdd0a67/go.mod h1:qj5a5QZpwLU2NLQudwIN5koi3beDhSAlJwa67PuM98c=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1203: golang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=",
          "1204: golang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=",
          "1205: golang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=",
          "1208: golang.org/x/net v0.0.0-20170114055629-f2499483f923/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "1209: golang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "1210: golang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "",
          "[Removed Lines]",
          "1206: golang.org/x/mod v0.21.0 h1:vvrHzRwRfVKSiLrG+d4FMl/Qi4ukBCE6kZlTUkDYRT0=",
          "1207: golang.org/x/mod v0.21.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=",
          "",
          "[Added Lines]",
          "1206: golang.org/x/mod v0.22.0 h1:D4nJWe9zXqHOmWqj4VMOJhvzj7bEZg4wEYa759z1pH4=",
          "1207: golang.org/x/mod v0.22.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1265: golang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=",
          "1266: golang.org/x/net v0.7.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=",
          "1267: golang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=",
          "1270: golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=",
          "1271: golang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=",
          "1272: golang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=",
          "",
          "[Removed Lines]",
          "1268: golang.org/x/net v0.29.0 h1:5ORfpBpCs4HzDYoodCDBbwHzdR5UrLBZ3sOnUJmFoHo=",
          "1269: golang.org/x/net v0.29.0/go.mod h1:gLkgy8jTGERgjzMic6DS9+SP0ajcu6Xu3Orq/SpETg0=",
          "",
          "[Added Lines]",
          "1268: golang.org/x/net v0.33.0 h1:74SYHlV8BIgHIFC/LrYkOGIwL19eTYXQ5wc6TBuO36I=",
          "1269: golang.org/x/net v0.33.0/go.mod h1:HXLR5J+9DxmrqMwG9qjGCxZ+zKXxBru04zlTvWlWuN4=",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1292: golang.org/x/oauth2 v0.0.0-20220909003341-f21342109be1/go.mod h1:h4gKUeWbJ4rQPri7E0u6Gs4e9Ri2zaLxzw5DI5XGrYg=",
          "1293: golang.org/x/oauth2 v0.0.0-20221014153046-6fdb5e3db783/go.mod h1:h4gKUeWbJ4rQPri7E0u6Gs4e9Ri2zaLxzw5DI5XGrYg=",
          "1294: golang.org/x/oauth2 v0.1.0/go.mod h1:G9FE4dLTsbXUu90h/Pf85g4w1D+SSAgR+q46nJZ8M4A=",
          "1297: golang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "1298: golang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "1299: golang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "",
          "[Removed Lines]",
          "1295: golang.org/x/oauth2 v0.23.0 h1:PbgcYx2W7i4LvjJWEbf0ngHV6qJYr86PkAV3bXdLEbs=",
          "1296: golang.org/x/oauth2 v0.23.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=",
          "",
          "[Added Lines]",
          "1295: golang.org/x/oauth2 v0.24.0 h1:KTBBxWqUa0ykRPLtV69rRto9TLXcqYkeswu48x/gvNE=",
          "1296: golang.org/x/oauth2 v0.24.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1441: golang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "1442: golang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "1443: golang.org/x/time v0.0.0-20200416051211-89c76fbcd5d1/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "1446: golang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=",
          "1447: golang.org/x/tools v0.0.0-20181011042414-1f849cf54d09/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=",
          "1448: golang.org/x/tools v0.0.0-20181030221726-6c7e314b6563/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=",
          "",
          "[Removed Lines]",
          "1444: golang.org/x/time v0.3.0 h1:rg5rLMjNzMS1RkNLzCG38eapWhnYLFYXDXj2gOlr8j4=",
          "1445: golang.org/x/time v0.3.0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "",
          "[Added Lines]",
          "1444: golang.org/x/time v0.8.0 h1:9i3RxcPv3PZnitoVGMPDKZSq1xW1gK1Xy3ArNOGZfEg=",
          "1445: golang.org/x/time v0.8.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1503: golang.org/x/tools v0.1.5/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=",
          "1504: golang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=",
          "1505: golang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=",
          "1508: golang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "1509: golang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "1510: golang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "",
          "[Removed Lines]",
          "1506: golang.org/x/tools v0.22.0 h1:gqSGLZqv+AI9lIQzniJ0nZDRG5GBPsSi+DRNHWNz6yA=",
          "1507: golang.org/x/tools v0.22.0/go.mod h1:aCwcsjqvq7Yqt6TNyX7QMU2enbQ/Gt0bo6krSeEri+c=",
          "",
          "[Added Lines]",
          "1506: golang.org/x/tools v0.28.0 h1:WuB6qZ4RPCQo5aP3WdKZS7i595EdWqWR8vqJTlwTVK8=",
          "1507: golang.org/x/tools v0.28.0/go.mod h1:dcIOrVd3mfQKTgrDVQHqCPMWy6lnhfhtX3hLXYVLfRw=",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1512: golang.org/x/xerrors v0.0.0-20220411194840-2f41105eb62f/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "1513: golang.org/x/xerrors v0.0.0-20220517211312-f3a8303e98df/go.mod h1:K8+ghG5WaK9qNqU5K3HdILfMLy1f3aNYFI/wnl100a8=",
          "1514: golang.org/x/xerrors v0.0.0-20220609144429-65e65417b02f/go.mod h1:K8+ghG5WaK9qNqU5K3HdILfMLy1f3aNYFI/wnl100a8=",
          "1516: golang.org/x/xerrors v0.0.0-20220907171357-04be3eba64a2/go.mod h1:K8+ghG5WaK9qNqU5K3HdILfMLy1f3aNYFI/wnl100a8=",
          "1517: google.golang.org/api v0.4.0/go.mod h1:8k5glujaEP+g9n7WNsDg8QP6cUVNI86fCNMcbazEtwE=",
          "1518: google.golang.org/api v0.7.0/go.mod h1:WtwebWUNSVBH/HAw79HIFXZNqEvBhG+Ra+ax0hx3E3M=",
          "1519: google.golang.org/api v0.8.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=",
          "",
          "[Removed Lines]",
          "1515: golang.org/x/xerrors v0.0.0-20220907171357-04be3eba64a2 h1:H2TDz8ibqkAF6YGhCdN3jS9O0/s90v0rJh3X/OLHEUk=",
          "",
          "[Added Lines]",
          "1516: golang.org/x/xerrors v0.0.0-20240903120638-7835f813f4da h1:noIWHXmPHxILtqtCOPIhSt0ABwskkZKjD3bXGnZGpNY=",
          "1517: golang.org/x/xerrors v0.0.0-20240903120638-7835f813f4da/go.mod h1:NDW/Ps6MPRej6fsCIbMTohpP40sJ/P/vI1MoTEGwX90=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5c495ff04f2c4f95a544284fbfba63c4d80e4992",
      "candidate_info": {
        "commit_hash": "5c495ff04f2c4f95a544284fbfba63c4d80e4992",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/5c495ff04f2c4f95a544284fbfba63c4d80e4992",
        "files": [
          "website/content/api-docs/acl/auth-methods.mdx",
          "website/content/api-docs/acl/binding-rules.mdx",
          "website/content/api-docs/acl/policies.mdx",
          "website/content/api-docs/acl/roles.mdx",
          "website/content/api-docs/acl/tokens.mdx"
        ],
        "message": "backport of commit 715186f7c3fc884c1e78324a2548f96e67676adc (#25362)\n\nCo-authored-by: Habibi Mustafa <habibi@dicoding.com>",
        "before_after_code_files": [
          "website/content/api-docs/acl/auth-methods.mdx||website/content/api-docs/acl/auth-methods.mdx",
          "website/content/api-docs/acl/binding-rules.mdx||website/content/api-docs/acl/binding-rules.mdx",
          "website/content/api-docs/acl/policies.mdx||website/content/api-docs/acl/policies.mdx",
          "website/content/api-docs/acl/roles.mdx||website/content/api-docs/acl/roles.mdx",
          "website/content/api-docs/acl/tokens.mdx||website/content/api-docs/acl/tokens.mdx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "website/content/api-docs/acl/auth-methods.mdx||website/content/api-docs/acl/auth-methods.mdx": [
          "File: website/content/api-docs/acl/auth-methods.mdx -> website/content/api-docs/acl/auth-methods.mdx",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: This endpoint creates an ACL auth method. The request is always forwarded to the",
          "14: authoritative region.",
          "20: The table below shows this endpoint's support for",
          "21: [blocking queries](/nomad/api-docs#blocking-queries) and",
          "",
          "[Removed Lines]",
          "16: | Method | Path               | Produces           |",
          "17: | ------ | ------------------ | ------------------ |",
          "18: | `POST` | `/acl/auth-method` | `application/json` |",
          "",
          "[Added Lines]",
          "16: | Method | Path                  | Produces           |",
          "17: | ------ | --------------------- | ------------------ |",
          "18: | `POST` | `/v1/acl/auth-method` | `application/json` |",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "209: This endpoint updates an existing ACL auth method. The request is always",
          "210: forwarded to the authoritative region.",
          "216: The table below shows this endpoint's support for [blocking",
          "217: queries](/nomad/api-docs#blocking-queries) and [required ACLs](/nomad/api-docs#acls).",
          "",
          "[Removed Lines]",
          "212: | Method | Path                            | Produces           |",
          "213: | ------ | ------------------------------- | ------------------ |",
          "214: | `POST` | `/acl/auth-method/:method_name` | `application/json` |",
          "",
          "[Added Lines]",
          "212: | Method | Path                               | Produces           |",
          "213: | ------ | ---------------------------------- | ------------------ |",
          "214: | `POST` | `/v1/acl/auth-method/:method_name` | `application/json` |",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "377: This endpoint lists all ACL auth methods. This lists the auth methods that have",
          "378: been replicated to the region, and may lag behind the authoritative region.",
          "384: The table below shows this endpoint's support for",
          "385: [blocking queries](/nomad/api-docs#blocking-queries),",
          "",
          "[Removed Lines]",
          "380: | Method | Path                | Produces           |",
          "381: | ------ | ------------------- | ------------------ |",
          "382: | `GET`  | `/acl/auth-methods` | `application/json` |",
          "",
          "[Added Lines]",
          "380: | Method | Path                   | Produces           |",
          "381: | ------ | ---------------------- | ------------------ |",
          "382: | `GET`  | `/v1/acl/auth-methods` | `application/json` |",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "418: auth method that has been replicated to the region, and may lag behind the",
          "419: authoritative region.",
          "425: The table below shows this endpoint's support for",
          "426: [blocking queries](/nomad/api-docs#blocking-queries),",
          "",
          "[Removed Lines]",
          "421: | Method | Path                            | Produces           |",
          "422: | ------ | ------------------------------- | ------------------ |",
          "423: | `GET`  | `/acl/auth-method/:method_name` | `application/json` |",
          "",
          "[Added Lines]",
          "421: | Method | Path                               | Produces           |",
          "422: | ------ | ---------------------------------- | ------------------ |",
          "423: | `GET`  | `/v1/acl/auth-method/:method_name` | `application/json` |",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "487: This endpoint deletes the ACL auth method as identified by its name. This",
          "488: request is always forwarded to the authoritative region.",
          "494: The table below shows this endpoint's support for",
          "495: [blocking queries](/nomad/api-docs#blocking-queries) and",
          "",
          "[Removed Lines]",
          "490: | Method   | Path                            | Produces       |",
          "491: | -------- | ------------------------------- | -------------- |",
          "492: | `DELETE` | `/acl/auth-method/:method_name` | `(empty body)` |",
          "",
          "[Added Lines]",
          "490: | Method   | Path                               | Produces       |",
          "491: | -------- | ---------------------------------- | -------------- |",
          "492: | `DELETE` | `/v1/acl/auth-method/:method_name` | `(empty body)` |",
          "",
          "---------------"
        ],
        "website/content/api-docs/acl/binding-rules.mdx||website/content/api-docs/acl/binding-rules.mdx": [
          "File: website/content/api-docs/acl/binding-rules.mdx -> website/content/api-docs/acl/binding-rules.mdx",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: Binding Rule that has been replicated to the region, and may lag behind the",
          "15: authoritative region.",
          "21: The table below shows this endpoint's support for",
          "22: [blocking queries](/nomad/api-docs#blocking-queries),",
          "",
          "[Removed Lines]",
          "17: | Method | Path                         | Produces           |",
          "18: | ------ | ---------------------------- | ------------------ |",
          "19: | `GET`  | `/acl/binding-rule/:rule_id` | `application/json` |",
          "",
          "[Added Lines]",
          "17: | Method | Path                            | Produces           |",
          "18: | ------ | ------------------------------- | ------------------ |",
          "19: | `GET`  | `/v1/acl/binding-rule/:rule_id` | `application/json` |",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "62: This endpoint lists all ACL Binding Rules. This lists the Binding Rules that have",
          "63: been replicated to the region, and may lag behind the authoritative region.",
          "69: The table below shows this endpoint's support for",
          "70: [blocking queries](/nomad/api-docs#blocking-queries),",
          "",
          "[Removed Lines]",
          "65: | Method | Path                | Produces           |",
          "66: | ------ | ------------------- | ------------------ |",
          "67: | `GET`  | `/acl/binding-rules` | `application/json` |",
          "",
          "[Added Lines]",
          "65: | Method | Path                    | Produces           |",
          "66: | ------ | ----------------------- | ------------------ |",
          "67: | `GET`  | `/v1/acl/binding-rules` | `application/json` |",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "103: This endpoint creates an ACL Binding Rule. The request is always forwarded to the",
          "104: authoritative region.",
          "110: The table below shows this endpoint's support for",
          "111: [blocking queries](/nomad/api-docs#blocking-queries) and",
          "",
          "[Removed Lines]",
          "106: | Method | Path                | Produces           |",
          "107: | ------ | ------------------- | ------------------ |",
          "108: | `POST` | `/acl/binding-rule` | `application/json` |",
          "",
          "[Added Lines]",
          "106: | Method | Path                   | Produces           |",
          "107: | ------ | ---------------------- | ------------------ |",
          "108: | `POST` | `/v1/acl/binding-rule` | `application/json` |",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "189: This endpoint updates an existing ACL Binding Rule. The request is always",
          "190: forwarded to the authoritative region.",
          "196: The table below shows this endpoint's support for [blocking",
          "197: queries](/nomad/api-docs#blocking-queries) and [required ACLs](/nomad/api-docs#acls).",
          "",
          "[Removed Lines]",
          "192: | Method | Path                           | Produces           |",
          "193: | ------ | ------------------------------ | ------------------ |",
          "194: | `POST` | `/acl/binding-rule/:rule_id` | `application/json` |",
          "",
          "[Added Lines]",
          "192: | Method | Path                            | Produces           |",
          "193: | ------ | ------------------------------- | ------------------ |",
          "194: | `POST` | `/v1/acl/binding-rule/:rule_id` | `application/json` |",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "260: This endpoint deletes the ACL Binding Rule as identified by its ID. This request",
          "261: is always forwarded to the authoritative region.",
          "267: The table below shows this endpoint's support for",
          "268: [blocking queries](/nomad/api-docs#blocking-queries) and",
          "",
          "[Removed Lines]",
          "263: | Method   | Path                         | Produces       |",
          "264: | -------- | ---------------------------- | -------------- |",
          "265: | `DELETE` | `/acl/binding-rule/:rule_id` | `(empty body)` |",
          "",
          "[Added Lines]",
          "263: | Method   | Path                            | Produces       |",
          "264: | -------- | ------------------------------- | -------------- |",
          "265: | `DELETE` | `/v1/acl/binding-rule/:rule_id` | `(empty body)` |",
          "",
          "---------------"
        ],
        "website/content/api-docs/acl/policies.mdx||website/content/api-docs/acl/policies.mdx": [
          "File: website/content/api-docs/acl/policies.mdx -> website/content/api-docs/acl/policies.mdx",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: This endpoint lists all ACL policies. This lists the policies that have been replicated",
          "15: to the region, and may lag behind the authoritative region.",
          "21: The table below shows this endpoint's support for",
          "22: [blocking queries](/nomad/api-docs#blocking-queries), [consistency modes](/nomad/api-docs#consistency-modes) and",
          "",
          "[Removed Lines]",
          "17: | Method | Path            | Produces           |",
          "18: | ------ | --------------- | ------------------ |",
          "19: | `GET`  | `/acl/policies` | `application/json` |",
          "",
          "[Added Lines]",
          "17: | Method | Path               | Produces           |",
          "18: | ------ | -----   ---------- | ------------------ |",
          "19: | `GET`  | `/v1/acl/policies` | `application/json` |",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61: This endpoint creates or updates an ACL Policy. This request is always forwarded to the",
          "62: authoritative region.",
          "68: The table below shows this endpoint's support for",
          "69: [blocking queries](/nomad/api-docs#blocking-queries) and",
          "",
          "[Removed Lines]",
          "64: | Method | Path                       | Produces       |",
          "65: | ------ | -------------------------- | -------------- |",
          "66: | `POST` | `/acl/policy/:policy_name` | `(empty body)` |",
          "",
          "[Added Lines]",
          "64: | Method | Path                          | Produces       |",
          "65: | ------ | ----------------------------- | -------------- |",
          "66: | `POST` | `/v1/acl/policy/:policy_name` | `(empty body)` |",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "124: This endpoint reads an ACL policy with the given name. This queries the policy that have been",
          "125: replicated to the region, and may lag behind the authoritative region.",
          "131: The table below shows this endpoint's support for",
          "132: [blocking queries](/nomad/api-docs#blocking-queries), [consistency modes](/nomad/api-docs#consistency-modes) and",
          "",
          "[Removed Lines]",
          "127: | Method | Path                       | Produces           |",
          "128: | ------ | -------------------------- | ------------------ |",
          "129: | `GET`  | `/acl/policy/:policy_name` | `application/json` |",
          "",
          "[Added Lines]",
          "127: | Method | Path                          | Produces           |",
          "128: | ------ | ----------------------------- | ------------------ |",
          "129: | `GET`  | `/v1/acl/policy/:policy_name` | `application/json` |",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "160: This endpoint deletes the named ACL policy. This request is always forwarded to the",
          "161: authoritative region.",
          "167: The table below shows this endpoint's support for",
          "168: [blocking queries](/nomad/api-docs#blocking-queries) and",
          "",
          "[Removed Lines]",
          "163: | Method   | Path                       | Produces       |",
          "164: | -------- | -------------------------- | -------------- |",
          "165: | `DELETE` | `/acl/policy/:policy_name` | `(empty body)` |",
          "",
          "[Added Lines]",
          "163: | Method   | Path                          | Produces       |",
          "164: | -------- | ----------------------------- | -------------- |",
          "165: | `DELETE` | `/v1/acl/policy/:policy_name` | `(empty body)` |",
          "",
          "---------------"
        ],
        "website/content/api-docs/acl/roles.mdx||website/content/api-docs/acl/roles.mdx": [
          "File: website/content/api-docs/acl/roles.mdx -> website/content/api-docs/acl/roles.mdx",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: This endpoint creates an ACL Role. The request is always forwarded to the",
          "14: authoritative region.",
          "20: The table below shows this endpoint's support for",
          "21: [blocking queries](/nomad/api-docs#blocking-queries) and",
          "",
          "[Removed Lines]",
          "16: | Method | Path        | Produces           |",
          "17: | ------ | ----------- | ------------------ |",
          "18: | `POST` | `/acl/role` | `application/json` |",
          "",
          "[Added Lines]",
          "16: | Method | Path           | Produces           |",
          "17: | ------ | -------------- | ------------------ |",
          "18: | `POST` | `/v1/acl/role` | `application/json` |",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "84: This endpoint updates an existing ACL Role. The request is always forwarded to the",
          "85: authoritative region.",
          "91: The table below shows this endpoint's support for",
          "92: [blocking queries](/nomad/api-docs#blocking-queries) and",
          "",
          "[Removed Lines]",
          "87: | Method | Path                 | Produces           |",
          "88: | ------ | -------------------- | ------------------ |",
          "89: | `POST` | `/acl/role/:role_id` | `application/json` |",
          "",
          "[Added Lines]",
          "87: | Method | Path                    | Produces           |",
          "88: | ------ | ----------------------- | ------------------ |",
          "89: | `POST` | `/v1/acl/role/:role_id` | `application/json` |",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "159: This endpoint lists all ACL Roles. This lists the roles that have been replicated",
          "160: to the region, and may lag behind the authoritative region.",
          "166: The table below shows this endpoint's support for",
          "167: [blocking queries](/nomad/api-docs#blocking-queries),",
          "",
          "[Removed Lines]",
          "162: | Method | Path         | Produces           |",
          "163: | ------ | ------------ | ------------------ |",
          "164: | `GET`  | `/acl/roles` | `application/json` |",
          "",
          "[Added Lines]",
          "162: | Method | Path            | Produces           |",
          "163: | ------ | --------------- | ------------------ |",
          "164: | `GET`  | `/v1/acl/roles` | `application/json` |",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "265: This endpoint reads an ACL Role with the given name. This queries the role that",
          "266: has been replicated to the region, and may lag behind the authoritative region.",
          "272: The table below shows this endpoint's support for",
          "273: [blocking queries](/nomad/api-docs#blocking-queries),",
          "",
          "[Removed Lines]",
          "268: | Method | Path                        | Produces           |",
          "269: | ------ | --------------------------- | ------------------ |",
          "270: | `GET`  | `/acl/role/name/:role_name` | `application/json` |",
          "",
          "[Added Lines]",
          "268: | Method | Path                           | Produces           |",
          "269: | ------ | ------------------------------ | ------------------ |",
          "270: | `GET`  | `/v1/acl/role/name/:role_name` | `application/json` |",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "313: This endpoint deletes the ACL role as identified by the ID. This request is",
          "314: always forwarded to the authoritative region.",
          "320: The table below shows this endpoint's support for",
          "321: [blocking queries](/nomad/api-docs#blocking-queries) and",
          "",
          "[Removed Lines]",
          "316: | Method   | Path                 | Produces       |",
          "317: | -------- | -------------------- | -------------- |",
          "318: | `DELETE` | `/acl/role/:role_id` | `(empty body)` |",
          "",
          "[Added Lines]",
          "316: | Method   | Path                    | Produces       |",
          "317: | -------- | ----------------------- | -------------- |",
          "318: | `DELETE` | `/v1/acl/role/:role_id` | `(empty body)` |",
          "",
          "---------------"
        ],
        "website/content/api-docs/acl/tokens.mdx||website/content/api-docs/acl/tokens.mdx": [
          "File: website/content/api-docs/acl/tokens.mdx -> website/content/api-docs/acl/tokens.mdx",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: This request is always forwarded to the authoritative region. It can only be invoked once",
          "19: until a [bootstrap reset](/nomad/tutorials/access-control/access-control-bootstrap#re-bootstrap-acl-system) is performed.",
          "25: The table below shows this endpoint's support for",
          "26: [blocking queries](/nomad/api-docs#blocking-queries) and",
          "",
          "[Removed Lines]",
          "21: | Method | Path             | Produces           |",
          "22: | ------ | ---------------- | ------------------ |",
          "23: | `POST` | `/acl/bootstrap` | `application/json` |",
          "",
          "[Added Lines]",
          "21: | Method | Path                | Produces           |",
          "22: | ------ | ------------------- | ------------------ |",
          "23: | `POST` | `/v1/acl/bootstrap` | `application/json` |",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "92: This endpoint lists all ACL tokens. This lists the local tokens and the global",
          "93: tokens which have been replicated to the region, and may lag behind the authoritative region.",
          "99: The table below shows this endpoint's support for",
          "100: [blocking queries](/nomad/api-docs#blocking-queries), [consistency modes](/nomad/api-docs#consistency-modes) and",
          "",
          "[Removed Lines]",
          "95: | Method | Path          | Produces           |",
          "96: | ------ | ------------- | ------------------ |",
          "97: | `GET`  | `/acl/tokens` | `application/json` |",
          "",
          "[Added Lines]",
          "95: | Method | Path             | Produces           |",
          "96: | ------ | ---------------- | ------------------ |",
          "97: | `GET`  | `/v1/acl/tokens` | `application/json` |",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "168: This endpoint creates an ACL Token. If the token is a global token, the request",
          "169: is forwarded to the authoritative region.",
          "175: The table below shows this endpoint's support for",
          "176: [blocking queries](/nomad/api-docs#blocking-queries) and",
          "",
          "[Removed Lines]",
          "171: | Method | Path         | Produces           |",
          "172: | ------ | ------------ | ------------------ |",
          "173: | `POST` | `/acl/token` | `application/json` |",
          "",
          "[Added Lines]",
          "171: | Method | Path            | Produces           |",
          "172: | ------ | --------------- | ------------------ |",
          "173: | `POST` | `/v1/acl/token` | `application/json` |",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "246: is forwarded to the authoritative region. Note that a token cannot be switched from global",
          "247: to local or visa versa.",
          "253: The table below shows this endpoint's support for",
          "254: [blocking queries](/nomad/api-docs#blocking-queries) and",
          "",
          "[Removed Lines]",
          "249: | Method | Path                      | Produces           |",
          "250: | ------ | ------------------------- | ------------------ |",
          "251: | `POST` | `/acl/token/:accessor_id` | `application/json` |",
          "",
          "[Added Lines]",
          "249: | Method | Path                         | Produces           |",
          "250: | ------ | ---------------------------- | ------------------ |",
          "251: | `POST` | `/v1/acl/token/:accessor_id` | `application/json` |",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "309: This endpoint reads an ACL token with the given accessor. If the token is a global token",
          "310: which has been replicated to the region it may lag behind the authoritative region.",
          "316: The table below shows this endpoint's support for",
          "317: [blocking queries](/nomad/api-docs#blocking-queries), [consistency modes](/nomad/api-docs#consistency-modes) and",
          "",
          "[Removed Lines]",
          "312: | Method | Path                      | Produces           |",
          "313: | ------ | ------------------------- | ------------------ |",
          "314: | `GET`  | `/acl/token/:accessor_id` | `application/json` |",
          "",
          "[Added Lines]",
          "312: | Method | Path                         | Produces           |",
          "313: | ------ | ---------------------------- | ------------------ |",
          "314: | `GET`  | `/v1/acl/token/:accessor_id` | `application/json` |",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "349: This endpoint reads the ACL token given by the passed SecretID. If the token is a global token",
          "350: which has been replicated to the region it may lag behind the authoritative region.",
          "356: The table below shows this endpoint's support for",
          "357: [blocking queries](/nomad/api-docs#blocking-queries), [consistency modes](/nomad/api-docs#consistency-modes) and",
          "",
          "[Removed Lines]",
          "352: | Method | Path              | Produces           |",
          "353: | ------ | ----------------- | ------------------ |",
          "354: | `GET`  | `/acl/token/self` | `application/json` |",
          "",
          "[Added Lines]",
          "352: | Method | Path                 | Produces           |",
          "353: | ------ | -------------------- | ------------------ |",
          "354: | `GET`  | `/v1/acl/token/self` | `application/json` |",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "390: This endpoint deletes the ACL token by accessor. This request is forwarded to the",
          "391: authoritative region for global tokens.",
          "397: The table below shows this endpoint's support for",
          "398: [blocking queries](/nomad/api-docs#blocking-queries) and",
          "",
          "[Removed Lines]",
          "393: | Method   | Path                      | Produces       |",
          "394: | -------- | ------------------------- | -------------- |",
          "395: | `DELETE` | `/acl/token/:accessor_id` | `(empty body)` |",
          "",
          "[Added Lines]",
          "393: | Method   | Path                         | Produces       |",
          "394: | -------- | ---------------------------- | -------------- |",
          "395: | `DELETE` | `/v1/acl/token/:accessor_id` | `(empty body)` |",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "419: This endpoint creates a one-time token for the ACL token provided in the",
          "420: `X-Nomad-Token` header. Returns 403 if the token header is not set.",
          "426: The table below shows this endpoint's support for",
          "427: [blocking queries](/nomad/api-docs#blocking-queries) and",
          "",
          "[Removed Lines]",
          "422: | Method | Path                 | Produces           |",
          "423: | ------ | -------------------- | ------------------ |",
          "424: | `POST` | `/acl/token/onetime` | `application/json` |",
          "",
          "[Added Lines]",
          "422: | Method | Path                    | Produces           |",
          "423: | ------ | ----------------------- | ------------------ |",
          "424: | `POST` | `/v1/acl/token/onetime` | `application/json` |",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "460: This endpoint exchanges a one-time token for the original ACL token used to",
          "461: create it.",
          "467: The table below shows this endpoint's support for",
          "468: [blocking queries](/nomad/api-docs#blocking-queries) and",
          "",
          "[Removed Lines]",
          "463: | Method | Path                          | Produces           |",
          "464: | ------ | ----------------------------- | ------------------ |",
          "465: | `POST` | `/acl/token/onetime/exchange` | `application/json` |",
          "",
          "[Added Lines]",
          "463: | Method | Path                             | Produces           |",
          "464: | ------ | -------------------------------- | ------------------ |",
          "465: | `POST` | `/v1/acl/token/onetime/exchange` | `application/json` |",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "df40beab086919fe1e8b374c8fa60dfdd0230a48",
      "candidate_info": {
        "commit_hash": "df40beab086919fe1e8b374c8fa60dfdd0230a48",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/df40beab086919fe1e8b374c8fa60dfdd0230a48",
        "files": [
          "go.mod",
          "go.sum"
        ],
        "message": "backport of commit ed2b1d9646d61101240816b118ca064cc38b798c (#24473)\n\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "133:  golang.org/x/sync v0.8.0",
          "134:  golang.org/x/sys v0.27.0",
          "135:  golang.org/x/time v0.3.0",
          "137:  google.golang.org/protobuf v1.34.2",
          "138:  gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7",
          "139:  gopkg.in/tomb.v2 v2.0.0-20140626144623-14b3d72120e8",
          "",
          "[Removed Lines]",
          "136:  google.golang.org/grpc v1.59.0",
          "",
          "[Added Lines]",
          "136:  google.golang.org/grpc v1.68.0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "143: require (",
          "144:  cloud.google.com/go v0.110.8 // indirect",
          "146:  cloud.google.com/go/iam v1.1.2 // indirect",
          "147:  cloud.google.com/go/kms v1.15.2 // indirect",
          "148:  cloud.google.com/go/storage v1.30.1 // indirect",
          "",
          "[Removed Lines]",
          "145:  cloud.google.com/go/compute/metadata v0.3.0 // indirect",
          "",
          "[Added Lines]",
          "145:  cloud.google.com/go/compute/metadata v0.5.0 // indirect",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "306:  google.golang.org/api v0.128.0 // indirect",
          "307:  google.golang.org/appengine v1.6.8 // indirect",
          "308:  google.golang.org/genproto v0.0.0-20230920204549-e6e6cdab5c13 // indirect",
          "311:  gopkg.in/fsnotify.v1 v1.4.7 // indirect",
          "312:  gopkg.in/resty.v1 v1.12.0 // indirect",
          "313:  gopkg.in/yaml.v2 v2.4.0 // indirect",
          "",
          "[Removed Lines]",
          "309:  google.golang.org/genproto/googleapis/api v0.0.0-20230913181813-007df8e322eb // indirect",
          "310:  google.golang.org/genproto/googleapis/rpc v0.0.0-20231002182017-d307bd883b97 // indirect",
          "",
          "[Added Lines]",
          "309:  google.golang.org/genproto/googleapis/api v0.0.0-20240903143218-8af14fe29dc1 // indirect",
          "310:  google.golang.org/genproto/googleapis/rpc v0.0.0-20240903143218-8af14fe29dc1 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "68: cloud.google.com/go/compute v1.6.1/go.mod h1:g85FgpzFvNULZ+S8AYq87axRKuf2Kh7deLqV/jJ3thU=",
          "69: cloud.google.com/go/compute v1.7.0/go.mod h1:435lt8av5oL9P3fv1OEzSbSUe+ybHXGMPQHHZWZxy9U=",
          "70: cloud.google.com/go/compute v1.10.0/go.mod h1:ER5CLbMxl90o2jtNbGSbtfOpQKR0t15FOtRsugnLrlU=",
          "73: cloud.google.com/go/containeranalysis v0.5.1/go.mod h1:1D92jd8gRR/c0fGMlymRgxWD3Qw9C1ff6/T7mLgVL8I=",
          "74: cloud.google.com/go/containeranalysis v0.6.0/go.mod h1:HEJoiEIu+lEXM+k7+qLCci0h33lX3ZqoYFdmPcoO7s4=",
          "75: cloud.google.com/go/datacatalog v1.3.0/go.mod h1:g9svFY6tuR+j+hrTw3J2dNcmI0dzmSiyOzm8kpLq0a0=",
          "",
          "[Removed Lines]",
          "71: cloud.google.com/go/compute/metadata v0.3.0 h1:Tz+eQXMEqDIKRsmY3cHTL6FVaynIjX2QxYC4trgAKZc=",
          "72: cloud.google.com/go/compute/metadata v0.3.0/go.mod h1:zFmK7XCadkQkj6TtorcaGlCW1hT1fIilQDwofLpJ20k=",
          "",
          "[Added Lines]",
          "71: cloud.google.com/go/compute/metadata v0.5.0 h1:Zr0eK8JbFv6+Wi4ilXAR8FJ3wyNdpxHKJNPos6LTZOY=",
          "72: cloud.google.com/go/compute/metadata v0.5.0/go.mod h1:aHnloV2TPI38yx4s9+wAZhHykWvVCfu7hQbF+9CWoiY=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1675: google.golang.org/genproto v0.0.0-20221025140454-527a21cfbd71/go.mod h1:9qHF0xnpdSfF6knlcsnpzUu5y+rpwgbvsyGAZPBMg4s=",
          "1676: google.golang.org/genproto v0.0.0-20230920204549-e6e6cdab5c13 h1:vlzZttNJGVqTsRFU9AmdnrcO1Znh8Ew9kCD//yjigk0=",
          "1677: google.golang.org/genproto v0.0.0-20230920204549-e6e6cdab5c13/go.mod h1:CCviP9RmpZ1mxVr8MUjCnSiY09IbAXZxhLE6EhHIdPU=",
          "1682: google.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=",
          "1683: google.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=",
          "1684: google.golang.org/grpc v1.21.1/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=",
          "",
          "[Removed Lines]",
          "1678: google.golang.org/genproto/googleapis/api v0.0.0-20230913181813-007df8e322eb h1:lK0oleSc7IQsUxO3U5TjL9DWlsxpEBemh+zpB7IqhWI=",
          "1679: google.golang.org/genproto/googleapis/api v0.0.0-20230913181813-007df8e322eb/go.mod h1:KjSP20unUpOx5kyQUFa7k4OJg0qeJ7DEZflGDu2p6Bk=",
          "1680: google.golang.org/genproto/googleapis/rpc v0.0.0-20231002182017-d307bd883b97 h1:6GQBEOdGkX6MMTLT9V+TjtIRZCw9VPD5Z+yHY9wMgS0=",
          "1681: google.golang.org/genproto/googleapis/rpc v0.0.0-20231002182017-d307bd883b97/go.mod h1:v7nGkzlmW8P3n/bKmWBn2WpBjpOEx8Q6gMueudAmKfY=",
          "",
          "[Added Lines]",
          "1678: google.golang.org/genproto/googleapis/api v0.0.0-20240903143218-8af14fe29dc1 h1:hjSy6tcFQZ171igDaN5QHOw2n6vx40juYbC/x67CEhc=",
          "1679: google.golang.org/genproto/googleapis/api v0.0.0-20240903143218-8af14fe29dc1/go.mod h1:qpvKtACPCQhAdu3PyQgV4l3LMXZEtft7y8QcarRsp9I=",
          "1680: google.golang.org/genproto/googleapis/rpc v0.0.0-20240903143218-8af14fe29dc1 h1:pPJltXNxVzT4pK9yD8vR9X75DaWYYmLGMsEvBfFQZzQ=",
          "1681: google.golang.org/genproto/googleapis/rpc v0.0.0-20240903143218-8af14fe29dc1/go.mod h1:UqMtugtsSgubUsoxbuAoiCXvqvErP7Gf0so0mK9tHxU=",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1715: google.golang.org/grpc v1.49.0/go.mod h1:ZgQEeidpAuNRZ8iRrlBKXZQP1ghovWIVhdJRyCDK+GI=",
          "1716: google.golang.org/grpc v1.50.0/go.mod h1:ZgQEeidpAuNRZ8iRrlBKXZQP1ghovWIVhdJRyCDK+GI=",
          "1717: google.golang.org/grpc v1.50.1/go.mod h1:ZgQEeidpAuNRZ8iRrlBKXZQP1ghovWIVhdJRyCDK+GI=",
          "1720: google.golang.org/grpc/cmd/protoc-gen-go-grpc v1.1.0/go.mod h1:6Kw0yEErY5E/yWrBtf03jp27GLLJujG4z/JK95pnjjw=",
          "1721: google.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=",
          "1722: google.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=",
          "",
          "[Removed Lines]",
          "1718: google.golang.org/grpc v1.59.0 h1:Z5Iec2pjwb+LEOqzpB2MR12/eKFhDPhuqW91O+4bwUk=",
          "1719: google.golang.org/grpc v1.59.0/go.mod h1:aUPDwccQo6OTjy7Hct4AfBPD1GptF4fyUjIkQ9YtF98=",
          "",
          "[Added Lines]",
          "1718: google.golang.org/grpc v1.68.0 h1:aHQeeJbo8zAkAa3pRzrVjZlbz6uSfeOXlJNQM0RAbz0=",
          "1719: google.golang.org/grpc v1.68.0/go.mod h1:fmSPC5AsjSBCK54MyHRx48kpOti1/jRfOlwEWywNjWA=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "08cbe82b60fd82f8b9d28e7444451d159964498f",
      "candidate_info": {
        "commit_hash": "08cbe82b60fd82f8b9d28e7444451d159964498f",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/08cbe82b60fd82f8b9d28e7444451d159964498f",
        "files": [
          ".changelog/24556.txt",
          "client/allocrunner/alloc_runner.go",
          "client/allocrunner/alloc_runner_hooks.go",
          "client/allocrunner/alloc_runner_test.go",
          "client/allocrunner/hookstats/hookstats.go",
          "client/allocrunner/hookstats/hookstats_test.go",
          "client/allocrunner/interfaces/runner.go",
          "client/allocrunner/taskrunner/task_runner.go",
          "client/allocrunner/taskrunner/task_runner_hooks.go",
          "client/allocrunner/taskrunner/task_runner_test.go",
          "client/client.go",
          "client/client_test.go",
          "client/config/arconfig.go",
          "client/config/config.go",
          "command/agent/agent.go",
          "command/agent/agent_test.go",
          "command/agent/config.go",
          "command/agent/config_parse_test.go",
          "command/agent/config_test.go",
          "command/agent/testdata/basic.hcl",
          "command/agent/testdata/basic.json",
          "website/content/docs/configuration/telemetry.mdx",
          "website/content/docs/operations/metrics-reference.mdx"
        ],
        "message": "client: emit optional telemetry from prerun and prestart hooks (#24657)\n\nCo-authored-by: James Rasell <jrasell@users.noreply.github.com>",
        "before_after_code_files": [
          "client/allocrunner/alloc_runner.go||client/allocrunner/alloc_runner.go",
          "client/allocrunner/alloc_runner_hooks.go||client/allocrunner/alloc_runner_hooks.go",
          "client/allocrunner/alloc_runner_test.go||client/allocrunner/alloc_runner_test.go",
          "client/allocrunner/hookstats/hookstats.go||client/allocrunner/hookstats/hookstats.go",
          "client/allocrunner/hookstats/hookstats_test.go||client/allocrunner/hookstats/hookstats_test.go",
          "client/allocrunner/interfaces/runner.go||client/allocrunner/interfaces/runner.go",
          "client/allocrunner/taskrunner/task_runner.go||client/allocrunner/taskrunner/task_runner.go",
          "client/allocrunner/taskrunner/task_runner_hooks.go||client/allocrunner/taskrunner/task_runner_hooks.go",
          "client/allocrunner/taskrunner/task_runner_test.go||client/allocrunner/taskrunner/task_runner_test.go",
          "client/client.go||client/client.go",
          "client/client_test.go||client/client_test.go",
          "client/config/arconfig.go||client/config/arconfig.go",
          "client/config/config.go||client/config/config.go",
          "command/agent/agent.go||command/agent/agent.go",
          "command/agent/agent_test.go||command/agent/agent_test.go",
          "command/agent/config.go||command/agent/config.go",
          "command/agent/config_parse_test.go||command/agent/config_parse_test.go",
          "command/agent/config_test.go||command/agent/config_test.go",
          "command/agent/testdata/basic.hcl||command/agent/testdata/basic.hcl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "client/allocrunner/alloc_runner.go||client/allocrunner/alloc_runner.go": [
          "File: client/allocrunner/alloc_runner.go -> client/allocrunner/alloc_runner.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:  \"sync\"",
          "11:  \"time\"",
          "13:  log \"github.com/hashicorp/go-hclog\"",
          "14:  multierror \"github.com/hashicorp/go-multierror\"",
          "15:  \"github.com/hashicorp/nomad/client/allocdir\"",
          "16:  \"github.com/hashicorp/nomad/client/allocrunner/interfaces\"",
          "17:  \"github.com/hashicorp/nomad/client/allocrunner/state\"",
          "18:  \"github.com/hashicorp/nomad/client/allocrunner/tasklifecycle\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13:  \"github.com/armon/go-metrics\"",
          "17:  \"github.com/hashicorp/nomad/client/allocrunner/hookstats\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "54:  clientConfig *config.Config",
          "57:  stateUpdater cinterfaces.AllocStateHandler",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "66:  clientBaseLabels []metrics.Label",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "88:  vaultClientFunc vaultclient.VaultClientFunc",
          "91:  waitCh chan struct{}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "104:  hookStatsHandler interfaces.HookStatsHandler",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "230:   id:                       alloc.ID,",
          "231:   alloc:                    alloc,",
          "232:   clientConfig:             config.ClientConfig,",
          "233:   consulServicesHandler:    config.ConsulServices,",
          "234:   consulProxiesClientFunc:  config.ConsulProxiesFunc,",
          "235:   sidsClient:               config.ConsulSI,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "249:   clientBaseLabels:         config.BaseLabels,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "270:  ar.allocBroadcaster = cstructs.NewAllocBroadcaster(ar.logger)",
          "273:  ar.allocDir = allocdir.NewAllocDir(",
          "274:   ar.logger,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "289:  ar.setHookStatsHandler(alloc.Namespace)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "315:   trConfig := &taskrunner.Config{",
          "316:    Alloc:               ar.alloc,",
          "317:    ClientConfig:        ar.clientConfig,",
          "318:    Task:                task,",
          "319:    TaskDir:             ar.allocDir.NewTaskDir(task),",
          "320:    Logger:              ar.logger,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "337:    ClientBaseLabels:    ar.clientBaseLabels,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1549:  }",
          "1550:  return allocVols.CSIVolumes, nil",
          "1551: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1583: func (ar *allocRunner) setHookStatsHandler(ns string) {",
          "1584:  if ar.clientConfig.DisableAllocationHookMetrics {",
          "1585:   ar.hookStatsHandler = hookstats.NewNoOpHandler()",
          "1586:  } else {",
          "1587:   labels := ar.clientBaseLabels",
          "1588:   labels = append(labels, metrics.Label{Name: \"namespace\", Value: ns})",
          "1589:   ar.hookStatsHandler = hookstats.NewHandler(labels, \"alloc_hook\")",
          "1590:  }",
          "1591: }",
          "",
          "---------------"
        ],
        "client/allocrunner/alloc_runner_hooks.go||client/allocrunner/alloc_runner_hooks.go": [
          "File: client/allocrunner/alloc_runner_hooks.go -> client/allocrunner/alloc_runner_hooks.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "189:    ar.logger.Trace(\"running pre-run hook\", \"name\", name, \"start\", start)",
          "190:   }",
          "193:    return fmt.Errorf(\"pre-run hook %q failed: %v\", name, err)",
          "194:   }",
          "",
          "[Removed Lines]",
          "192:   if err := pre.Prerun(); err != nil {",
          "",
          "[Added Lines]",
          "194:   var hookExecutionStart time.Time",
          "196:   if !ar.clientConfig.DisableAllocationHookMetrics {",
          "197:    hookExecutionStart = time.Now()",
          "198:   }",
          "200:   err := pre.Prerun()",
          "201:   ar.hookStatsHandler.Emit(hookExecutionStart, name, \"prerun\", err)",
          "202:   if err != nil {",
          "",
          "---------------"
        ],
        "client/allocrunner/alloc_runner_test.go||client/allocrunner/alloc_runner_test.go": [
          "File: client/allocrunner/alloc_runner_test.go -> client/allocrunner/alloc_runner_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:  \"testing\"",
          "13:  \"time\"",
          "15:  \"github.com/hashicorp/consul/api\"",
          "16:  multierror \"github.com/hashicorp/go-multierror\"",
          "17:  \"github.com/hashicorp/nomad/ci\"",
          "18:  \"github.com/hashicorp/nomad/client/allochealth\"",
          "19:  \"github.com/hashicorp/nomad/client/allocrunner/interfaces\"",
          "20:  arstate \"github.com/hashicorp/nomad/client/allocrunner/state\"",
          "21:  \"github.com/hashicorp/nomad/client/allocrunner/tasklifecycle\"",
          "22:  \"github.com/hashicorp/nomad/client/allocrunner/taskrunner\"",
          "23:  \"github.com/hashicorp/nomad/client/allocwatcher\"",
          "24:  \"github.com/hashicorp/nomad/client/lib/proclib\"",
          "25:  \"github.com/hashicorp/nomad/client/serviceregistration\"",
          "26:  regMock \"github.com/hashicorp/nomad/client/serviceregistration/mock\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15:  \"github.com/armon/go-metrics\"",
          "20:  \"github.com/hashicorp/nomad/client/allocrunner/hookstats\"",
          "26:  client \"github.com/hashicorp/nomad/client/config\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2531:  calloc = ar.clientAlloc(map[string]*structs.TaskState{})",
          "2532:  must.Eq(t, cstructs.AllocUpdatePriorityUrgent, ar.GetUpdatePriority(calloc))",
          "2533: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2538: func TestAllocRunner_setHookStatsHandler(t *testing.T) {",
          "2539:  ci.Parallel(t)",
          "2543:  baseAllocRunner := &allocRunner{",
          "2544:   clientConfig:     &client.Config{},",
          "2545:   clientBaseLabels: []metrics.Label{},",
          "2546:  }",
          "2548:  baseAllocRunner.setHookStatsHandler(\"platform\")",
          "2549:  handler, ok := baseAllocRunner.hookStatsHandler.(*hookstats.Handler)",
          "2550:  must.True(t, ok)",
          "2551:  must.NotNil(t, handler)",
          "2555:  baseAllocRunner = &allocRunner{",
          "2556:   clientConfig:     &client.Config{DisableAllocationHookMetrics: true},",
          "2557:   clientBaseLabels: []metrics.Label{},",
          "2558:  }",
          "2560:  baseAllocRunner.setHookStatsHandler(\"platform\")",
          "2561:  noopHandler, ok := baseAllocRunner.hookStatsHandler.(*hookstats.NoOpHandler)",
          "2562:  must.True(t, ok)",
          "2563:  must.NotNil(t, noopHandler)",
          "2564: }",
          "",
          "---------------"
        ],
        "client/allocrunner/hookstats/hookstats.go||client/allocrunner/hookstats/hookstats.go": [
          "File: client/allocrunner/hookstats/hookstats.go -> client/allocrunner/hookstats/hookstats.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: package hookstats",
          "6: import (",
          "7:  \"time\"",
          "9:  \"github.com/armon/go-metrics\"",
          "10:  \"github.com/hashicorp/nomad/client/allocrunner/interfaces\"",
          "11: )",
          "15: type Handler struct {",
          "16:  baseLabels []metrics.Label",
          "17:  runnerType string",
          "18: }",
          "24: func NewHandler(base []metrics.Label, runnerType string) interfaces.HookStatsHandler {",
          "25:  return &Handler{",
          "26:   baseLabels: base,",
          "27:   runnerType: runnerType,",
          "28:  }",
          "29: }",
          "31: func (h *Handler) Emit(start time.Time, hookName, hookType string, err error) {",
          "36:  labels := h.baseLabels",
          "37:  labels = append(labels, metrics.Label{Name: \"hook_name\", Value: hookName})",
          "39:  metrics.MeasureSinceWithLabels([]string{\"client\", h.runnerType, hookType, \"elapsed\"}, start, labels)",
          "40:  if err != nil {",
          "41:   metrics.IncrCounterWithLabels([]string{\"client\", h.runnerType, hookType, \"failed\"}, 1, labels)",
          "42:  } else {",
          "43:   metrics.IncrCounterWithLabels([]string{\"client\", h.runnerType, hookType, \"success\"}, 1, labels)",
          "44:  }",
          "45: }",
          "49: type NoOpHandler struct{}",
          "51: func NewNoOpHandler() interfaces.HookStatsHandler { return &NoOpHandler{} }",
          "53: func (n *NoOpHandler) Emit(_ time.Time, _, _ string, _ error) {}",
          "",
          "---------------"
        ],
        "client/allocrunner/hookstats/hookstats_test.go||client/allocrunner/hookstats/hookstats_test.go": [
          "File: client/allocrunner/hookstats/hookstats_test.go -> client/allocrunner/hookstats/hookstats_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: package hookstats",
          "6: import (",
          "7:  \"errors\"",
          "8:  \"testing\"",
          "9:  \"time\"",
          "11:  \"github.com/armon/go-metrics\"",
          "12:  \"github.com/hashicorp/nomad/ci\"",
          "13:  \"github.com/shoenig/test/must\"",
          "14: )",
          "16: func TestHandler(t *testing.T) {",
          "17:  ci.Parallel(t)",
          "21:  baseLabels := []metrics.Label{",
          "22:   {Name: \"datacenter\", Value: \"dc1\"},",
          "23:   {Name: \"node_class\", Value: \"none\"},",
          "24:   {Name: \"node_pool\", Value: \"default\"},",
          "25:   {Name: \"namespace\", Value: \"default\"},",
          "26:   {Name: \"host\", Value: \"client-5d3c\"},",
          "27:   {Name: \"node_id\", Value: \"35db24e7-0a55-80d2-2279-e022c37cc591\"},",
          "28:  }",
          "29:  newHandler := NewHandler(baseLabels, \"test_hook\")",
          "33:  var metricKeySuffix, sampleName, counterSuccessName, counterFailureName string",
          "35:  for _, label := range baseLabels {",
          "36:   metricKeySuffix += \";\" + label.Name + \"=\" + label.Value",
          "37:  }",
          "39:  metricKeySuffix += \";\" + \"hook_name=test_hook_name\"",
          "40:  sampleName = \"nomad_test.client.test_hook.prerun.elapsed\" + metricKeySuffix",
          "41:  counterSuccessName = \"nomad_test.client.test_hook.prerun.success\" + metricKeySuffix",
          "42:  counterFailureName = \"nomad_test.client.test_hook.prerun.failed\" + metricKeySuffix",
          "46:  inMemorySink := metrics.NewInmemSink(10*time.Millisecond, 50*time.Millisecond)",
          "48:  _, err := metrics.NewGlobal(metrics.DefaultConfig(\"nomad_test\"), inMemorySink)",
          "49:  must.NoError(t, err)",
          "53:  newHandler.Emit(time.Now(), \"test_hook_name\", \"prerun\", nil)",
          "55:  sinkData := inMemorySink.Data()",
          "56:  must.Len(t, 1, sinkData)",
          "57:  must.MapContainsKey(t, sinkData[0].Counters, counterSuccessName)",
          "58:  must.MapContainsKey(t, sinkData[0].Samples, sampleName)",
          "60:  successCounter := sinkData[0].Counters[counterSuccessName]",
          "61:  must.Eq(t, 1, successCounter.Count)",
          "62:  must.Eq(t, 1, successCounter.Sum)",
          "64:  sample1 := sinkData[0].Samples[sampleName]",
          "65:  must.Eq(t, 1, sample1.Count)",
          "66:  must.True(t, sample1.Sum > 0)",
          "70:  inMemorySink = metrics.NewInmemSink(10*time.Millisecond, 50*time.Millisecond)",
          "72:  _, err = metrics.NewGlobal(metrics.DefaultConfig(\"nomad_test\"), inMemorySink)",
          "73:  must.NoError(t, err)",
          "77:  newHandler.Emit(time.Now(), \"test_hook_name\", \"prerun\", errors.New(\"test error\"))",
          "79:  sinkData = inMemorySink.Data()",
          "80:  must.Len(t, 1, sinkData)",
          "81:  must.MapContainsKey(t, sinkData[0].Counters, counterFailureName)",
          "82:  must.MapContainsKey(t, sinkData[0].Samples, sampleName)",
          "84:  failureCounter := sinkData[0].Counters[counterFailureName]",
          "85:  must.Eq(t, 1, failureCounter.Count)",
          "86:  must.Eq(t, 1, failureCounter.Sum)",
          "88:  sample2 := sinkData[0].Samples[sampleName]",
          "89:  must.Eq(t, 1, sample2.Count)",
          "90:  must.True(t, sample2.Sum > 0)",
          "91: }",
          "93: func TestNoOpHandler(t *testing.T) {",
          "94:  ci.Parallel(t)",
          "96:  newHandler := NewNoOpHandler()",
          "100:  inMemorySink := metrics.NewInmemSink(10*time.Millisecond, 50*time.Millisecond)",
          "102:  _, err := metrics.NewGlobal(metrics.DefaultConfig(\"nomad_test\"), inMemorySink)",
          "103:  must.NoError(t, err)",
          "107:  newHandler.Emit(time.Now(), \"test_hook_name\", \"prerun\", errors.New(\"test error\"))",
          "109:  sinkData := inMemorySink.Data()",
          "110:  must.Len(t, 1, sinkData)",
          "111:  must.MapLen(t, 0, sinkData[0].Counters)",
          "112:  must.MapLen(t, 0, sinkData[0].Samples)",
          "113: }",
          "",
          "---------------"
        ],
        "client/allocrunner/interfaces/runner.go||client/allocrunner/interfaces/runner.go": [
          "File: client/allocrunner/interfaces/runner.go -> client/allocrunner/interfaces/runner.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: package interfaces",
          "6: import (",
          "7:  \"github.com/hashicorp/nomad/client/allocdir\"",
          "8:  \"github.com/hashicorp/nomad/client/allocrunner/state\"",
          "9:  \"github.com/hashicorp/nomad/client/pluginmanager/csimanager\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7:  \"time\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "71:  SetCSIMounts(map[string]*csimanager.MountInfo)",
          "72:  GetCSIMounts(map[string]*csimanager.MountInfo)",
          "73: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "79: type HookStatsHandler interface {",
          "96:  Emit(start time.Time, hookName, hookType string, err error)",
          "97: }",
          "",
          "---------------"
        ],
        "client/allocrunner/taskrunner/task_runner.go||client/allocrunner/taskrunner/task_runner.go": [
          "File: client/allocrunner/taskrunner/task_runner.go -> client/allocrunner/taskrunner/task_runner.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "17:  multierror \"github.com/hashicorp/go-multierror\"",
          "18:  \"github.com/hashicorp/hcl/v2/hcldec\"",
          "19:  \"github.com/hashicorp/nomad/client/allocdir\"",
          "20:  \"github.com/hashicorp/nomad/client/allocrunner/interfaces\"",
          "21:  \"github.com/hashicorp/nomad/client/allocrunner/taskrunner/restarts\"",
          "22:  \"github.com/hashicorp/nomad/client/allocrunner/taskrunner/state\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20:  \"github.com/hashicorp/nomad/client/allocrunner/hookstats\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "214:  baseLabels []metrics.Label",
          "218:  logmonHookConfig *logmonHookConfig",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "223:  clientBaseLabels []metrics.Label",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "282:  users dynamic.Pool",
          "286:  pauser *pauseGate",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "295:  hookStatsHandler interfaces.HookStatsHandler",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "293:  TaskDir      *allocdir.TaskDir",
          "294:  Logger       log.Logger",
          "297:  ConsulServices serviceregistration.Handler",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "310:  ClientBaseLabels []metrics.Label",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "389:   alloc:                   config.Alloc,",
          "390:   allocID:                 config.Alloc.ID,",
          "391:   clientConfig:            config.ClientConfig,",
          "392:   task:                    config.Task,",
          "393:   taskDir:                 config.TaskDir,",
          "394:   taskName:                config.Task.Name,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "408:   clientBaseLabels:        config.ClientBaseLabels,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "434:  tr.pauser = newPauseGate(tr)",
          "437:  ares := tr.alloc.AllocatedResources",
          "438:  if ares == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "453:  tr.setHookStatsHandler(config.Alloc.Namespace)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1684: func (tr *TaskRunner) shutdownDelayCancel() {",
          "1685:  tr.shutdownDelayCancelFn()",
          "1686: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1717: func (tr *TaskRunner) setHookStatsHandler(ns string) {",
          "1718:  if tr.clientConfig.DisableAllocationHookMetrics {",
          "1719:   tr.hookStatsHandler = hookstats.NewNoOpHandler()",
          "1720:  } else {",
          "1721:   labels := tr.clientBaseLabels",
          "1722:   labels = append(labels, metrics.Label{Name: \"namespace\", Value: ns})",
          "1723:   tr.hookStatsHandler = hookstats.NewHandler(labels, \"task_hook\")",
          "1724:  }",
          "1725: }",
          "",
          "---------------"
        ],
        "client/allocrunner/taskrunner/task_runner_hooks.go||client/allocrunner/taskrunner/task_runner_hooks.go": [
          "File: client/allocrunner/taskrunner/task_runner_hooks.go -> client/allocrunner/taskrunner/task_runner_hooks.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "282:    tr.logger.Trace(\"running prestart hook\", \"name\", name, \"start\", start)",
          "283:   }",
          "286:   var resp interfaces.TaskPrestartResponse",
          "288:    tr.emitHookError(err, name)",
          "289:    return structs.WrapRecoverable(fmt.Sprintf(\"prestart hook %q failed: %v\", name, err), err)",
          "290:   }",
          "",
          "[Removed Lines]",
          "287:   if err := pre.Prestart(joinedCtx, &req, &resp); err != nil {",
          "",
          "[Added Lines]",
          "287:   var hookExecutionStart time.Time",
          "289:   if !tr.clientConfig.DisableAllocationHookMetrics {",
          "290:    hookExecutionStart = time.Now()",
          "291:   }",
          "295:   err := pre.Prestart(joinedCtx, &req, &resp)",
          "296:   tr.hookStatsHandler.Emit(hookExecutionStart, name, \"prestart\", err)",
          "297:   if err != nil {",
          "",
          "---------------"
        ],
        "client/allocrunner/taskrunner/task_runner_test.go||client/allocrunner/taskrunner/task_runner_test.go": [
          "File: client/allocrunner/taskrunner/task_runner_test.go -> client/allocrunner/taskrunner/task_runner_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:  \"testing\"",
          "19:  \"time\"",
          "21:  \"github.com/golang/snappy\"",
          "22:  consulapi \"github.com/hashicorp/consul/api\"",
          "23:  \"github.com/hashicorp/nomad/ci\"",
          "24:  \"github.com/hashicorp/nomad/client/allocdir\"",
          "25:  \"github.com/hashicorp/nomad/client/allocrunner/interfaces\"",
          "26:  \"github.com/hashicorp/nomad/client/allocrunner/taskrunner/getter\"",
          "27:  \"github.com/hashicorp/nomad/client/config\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21:  \"github.com/armon/go-metrics\"",
          "26:  \"github.com/hashicorp/nomad/client/allocrunner/hookstats\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3099:   })",
          "3100:  }",
          "3101: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3105: func TestTaskRunner_setHookStatsHandler(t *testing.T) {",
          "3106:  ci.Parallel(t)",
          "3110:  baseTaskRunner := &TaskRunner{",
          "3111:   clientConfig:     &config.Config{},",
          "3112:   clientBaseLabels: []metrics.Label{},",
          "3113:  }",
          "3115:  baseTaskRunner.setHookStatsHandler(\"platform\")",
          "3116:  handler, ok := baseTaskRunner.hookStatsHandler.(*hookstats.Handler)",
          "3117:  must.True(t, ok)",
          "3118:  must.NotNil(t, handler)",
          "3122:  baseTaskRunner = &TaskRunner{",
          "3123:   clientConfig:     &config.Config{DisableAllocationHookMetrics: true},",
          "3124:   clientBaseLabels: []metrics.Label{},",
          "3125:  }",
          "3127:  baseTaskRunner.setHookStatsHandler(\"platform\")",
          "3128:  noopHandler, ok := baseTaskRunner.hookStatsHandler.(*hookstats.NoOpHandler)",
          "3129:  must.True(t, ok)",
          "3130:  must.NotNil(t, noopHandler)",
          "3131: }",
          "",
          "---------------"
        ],
        "client/client.go||client/client.go": [
          "File: client/client.go -> client/client.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "622:  c.shutdownGroup.Go(c.allocSync)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "626:  c.setupStatsLabels()",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2783: ) *config.AllocRunnerConfig {",
          "2784:  return &config.AllocRunnerConfig{",
          "2785:   Alloc:               alloc,",
          "2786:   CSIManager:          c.csimanager,",
          "2787:   CheckStore:          c.checkStore,",
          "2788:   ClientConfig:        c.GetConfig(),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2790:   BaseLabels:          c.baseLabels,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3183:  return nil",
          "3184: }",
          "3189:  var emittedNodeClass string",
          "3190:  if emittedNodeClass = c.Node().NodeClass; emittedNodeClass == \"\" {",
          "3191:   emittedNodeClass = \"none\"",
          "3192:  }",
          "3196:  c.baseLabels = []metrics.Label{",
          "3197:   {Name: \"node_id\", Value: c.NodeID()},",
          "3198:   {Name: \"datacenter\", Value: c.Datacenter()},",
          "3199:   {Name: \"node_class\", Value: emittedNodeClass},",
          "3200:   {Name: \"node_pool\", Value: c.Node().NodePool},",
          "3201:  }",
          "",
          "[Removed Lines]",
          "3187: func (c *Client) emitStats() {",
          "",
          "[Added Lines]",
          "3194: func (c *Client) setupStatsLabels() {",
          "3214: }",
          "3217: func (c *Client) emitStats() {",
          "",
          "---------------"
        ],
        "client/client_test.go||client/client_test.go": [
          "File: client/client_test.go -> client/client_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:  \"testing\"",
          "15:  \"time\"",
          "17:  memdb \"github.com/hashicorp/go-memdb\"",
          "18:  \"github.com/hashicorp/nomad/ci\"",
          "19:  \"github.com/hashicorp/nomad/client/allocrunner\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17:  \"github.com/armon/go-metrics\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "91:  must.Eq(t, 0o711|fs.ModeDir, fi.Mode())",
          "92: }",
          "97:  ci.Parallel(t)",
          "103:  }",
          "118:  }",
          "119: }",
          "",
          "[Removed Lines]",
          "96: func TestClient_BaseLabels(t *testing.T) {",
          "98:  assert := assert.New(t)",
          "100:  client, cleanup := TestClient(t, nil)",
          "101:  if err := client.Shutdown(); err != nil {",
          "102:   t.Fatalf(\"err: %v\", err)",
          "104:  defer cleanup()",
          "108:  client.emitStats()",
          "110:  baseLabels := client.baseLabels",
          "111:  assert.NotEqual(0, len(baseLabels))",
          "113:  nodeID := client.Node().ID",
          "114:  for _, e := range baseLabels {",
          "115:   if e.Name == \"node_id\" {",
          "116:    assert.Equal(nodeID, e.Value)",
          "117:   }",
          "",
          "[Added Lines]",
          "95: func TestClient_setupStatsLabels(t *testing.T) {",
          "98:  testCases := []struct {",
          "99:   name           string",
          "100:   inputConfig    *config.Config",
          "101:   expectedLabels []metrics.Label",
          "102:  }{",
          "103:   {",
          "104:    name: \"empty node class\",",
          "105:    inputConfig: &config.Config{",
          "106:     Node: &structs.Node{",
          "107:      ID:         \"f57156f9-19c6-4954-a96e-5abb0b47a8b2\",",
          "108:      Datacenter: \"dc1\",",
          "109:      NodeClass:  \"\",",
          "110:      NodePool:   \"default\",",
          "111:     },",
          "112:    },",
          "113:    expectedLabels: []metrics.Label{",
          "114:     {Name: \"node_id\", Value: \"f57156f9-19c6-4954-a96e-5abb0b47a8b2\"},",
          "115:     {Name: \"datacenter\", Value: \"dc1\"},",
          "116:     {Name: \"node_class\", Value: \"none\"},",
          "117:     {Name: \"node_pool\", Value: \"default\"},",
          "118:    },",
          "119:   },",
          "120:   {",
          "121:    name: \"non-empty node class\",",
          "122:    inputConfig: &config.Config{",
          "123:     Node: &structs.Node{",
          "124:      ID:         \"f57156f9-19c6-4954-a96e-5abb0b47a8b2\",",
          "125:      Datacenter: \"dc1\",",
          "126:      NodeClass:  \"high-memory\",",
          "127:      NodePool:   \"default\",",
          "128:     },",
          "129:    },",
          "130:    expectedLabels: []metrics.Label{",
          "131:     {Name: \"node_id\", Value: \"f57156f9-19c6-4954-a96e-5abb0b47a8b2\"},",
          "132:     {Name: \"datacenter\", Value: \"dc1\"},",
          "133:     {Name: \"node_class\", Value: \"high-memory\"},",
          "134:     {Name: \"node_pool\", Value: \"default\"},",
          "135:    },",
          "136:   },",
          "139:  for _, tc := range testCases {",
          "140:   t.Run(tc.name, func(t *testing.T) {",
          "141:    lightClient := &Client{config: tc.inputConfig}",
          "142:    lightClient.setupStatsLabels()",
          "143:    must.SliceContainsAll(t, lightClient.baseLabels, tc.expectedLabels)",
          "144:   })",
          "",
          "---------------"
        ],
        "client/config/arconfig.go||client/config/arconfig.go": [
          "File: client/config/arconfig.go -> client/config/arconfig.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: import (",
          "7:  \"context\"",
          "9:  log \"github.com/hashicorp/go-hclog\"",
          "10:  \"github.com/hashicorp/nomad/client/allocdir\"",
          "11:  arinterfaces \"github.com/hashicorp/nomad/client/allocrunner/interfaces\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9:  \"github.com/armon/go-metrics\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48:  Alloc *structs.Allocation",
          "51:  StateDB cstate.StateDB",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "54:  BaseLabels []metrics.Label",
          "",
          "---------------"
        ],
        "client/config/config.go||client/config/config.go": [
          "File: client/config/config.go -> client/config/config.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "208:  IncludeAllocMetadataInMetrics bool",
          "212:  AllowedMetadataKeysInMetrics []string",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "212:  DisableAllocationHookMetrics bool",
          "",
          "---------------"
        ],
        "command/agent/agent.go||command/agent/agent.go": [
          "File: command/agent/agent.go -> command/agent/agent.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "863:  conf.PublishAllocationMetrics = agentConfig.Telemetry.PublishAllocationMetrics",
          "864:  conf.IncludeAllocMetadataInMetrics = agentConfig.Telemetry.IncludeAllocMetadataInMetrics",
          "865:  conf.AllowedMetadataKeysInMetrics = agentConfig.Telemetry.AllowedMetadataKeysInMetrics",
          "868:  conf.TLSConfig = agentConfig.TLSConfig",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "866:  conf.DisableAllocationHookMetrics = *agentConfig.Telemetry.DisableAllocationHookMetrics",
          "",
          "---------------"
        ],
        "command/agent/agent_test.go||command/agent/agent_test.go": [
          "File: command/agent/agent_test.go -> command/agent/agent_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "740:    },",
          "741:    expectErr: \"invalid bridge_network_subnet_ipv6: not an IPv6 address: 10.0.0.1/24\",",
          "742:   },",
          "743:  }",
          "744:  for _, tc := range cases {",
          "745:   t.Run(tc.name, func(t *testing.T) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "743:   {",
          "744:    name: \"hook metrics enabled (default value)\",",
          "745:    modConfig: func(c *Config) {",
          "746:     c.Telemetry.DisableAllocationHookMetrics = pointer.Of(false)",
          "747:    },",
          "748:    assert: func(t *testing.T, cc *clientconfig.Config) {",
          "749:     must.False(t, cc.DisableAllocationHookMetrics)",
          "750:    },",
          "751:   },",
          "752:   {",
          "753:    name: \"hook metrics disabled\",",
          "754:    modConfig: func(c *Config) {",
          "755:     c.Telemetry.DisableAllocationHookMetrics = pointer.Of(true)",
          "756:    },",
          "757:    assert: func(t *testing.T, cc *clientconfig.Config) {",
          "758:     must.True(t, cc.DisableAllocationHookMetrics)",
          "759:    },",
          "760:   },",
          "",
          "---------------"
        ],
        "command/agent/config.go||command/agent/config.go": [
          "File: command/agent/config.go -> command/agent/config.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1007:  DisableRPCRateMetricsLabels bool `hcl:\"disable_rpc_rate_metrics_labels\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1011:  DisableAllocationHookMetrics *bool `hcl:\"disable_allocation_hook_metrics\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1450:   },",
          "1451:   SyslogFacility: \"LOCAL0\",",
          "1452:   Telemetry: &Telemetry{",
          "1459:   },",
          "1460:   TLSConfig:          &config.TLSConfig{},",
          "1461:   Sentinel:           &config.SentinelConfig{},",
          "",
          "[Removed Lines]",
          "1453:    InMemoryCollectionInterval: \"10s\",",
          "1454:    inMemoryCollectionInterval: 10 * time.Second,",
          "1455:    InMemoryRetentionPeriod:    \"1m\",",
          "1456:    inMemoryRetentionPeriod:    1 * time.Minute,",
          "1457:    CollectionInterval:         \"1s\",",
          "1458:    collectionInterval:         1 * time.Second,",
          "",
          "[Added Lines]",
          "1457:    InMemoryCollectionInterval:   \"10s\",",
          "1458:    inMemoryCollectionInterval:   10 * time.Second,",
          "1459:    InMemoryRetentionPeriod:      \"1m\",",
          "1460:    inMemoryRetentionPeriod:      1 * time.Minute,",
          "1461:    CollectionInterval:           \"1s\",",
          "1462:    collectionInterval:           1 * time.Second,",
          "1463:    DisableAllocationHookMetrics: pointer.Of(false),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2589:  if b.DisableRPCRateMetricsLabels {",
          "2590:   result.DisableRPCRateMetricsLabels = b.DisableRPCRateMetricsLabels",
          "2591:  }",
          "2593:  return &result",
          "2594: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2597:  if b.DisableAllocationHookMetrics != nil {",
          "2598:   result.DisableAllocationHookMetrics = b.DisableAllocationHookMetrics",
          "2599:  }",
          "",
          "---------------"
        ],
        "command/agent/config_parse_test.go||command/agent/config_parse_test.go": [
          "File: command/agent/config_parse_test.go -> command/agent/config_parse_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "198:   },",
          "199:  },",
          "200:  Telemetry: &Telemetry{",
          "214:  },",
          "215:  LeaveOnInt:                true,",
          "216:  LeaveOnTerm:               true,",
          "",
          "[Removed Lines]",
          "201:   StatsiteAddr:               \"127.0.0.1:1234\",",
          "202:   StatsdAddr:                 \"127.0.0.1:2345\",",
          "203:   PrometheusMetrics:          true,",
          "204:   DisableHostname:            true,",
          "205:   UseNodeName:                false,",
          "206:   InMemoryCollectionInterval: \"1m\",",
          "207:   inMemoryCollectionInterval: 1 * time.Minute,",
          "208:   InMemoryRetentionPeriod:    \"24h\",",
          "209:   inMemoryRetentionPeriod:    24 * time.Hour,",
          "210:   CollectionInterval:         \"3s\",",
          "211:   collectionInterval:         3 * time.Second,",
          "212:   PublishAllocationMetrics:   true,",
          "213:   PublishNodeMetrics:         true,",
          "",
          "[Added Lines]",
          "201:   DisableAllocationHookMetrics: pointer.Of(true),",
          "202:   StatsiteAddr:                 \"127.0.0.1:1234\",",
          "203:   StatsdAddr:                   \"127.0.0.1:2345\",",
          "204:   PrometheusMetrics:            true,",
          "205:   DisableHostname:              true,",
          "206:   UseNodeName:                  false,",
          "207:   InMemoryCollectionInterval:   \"1m\",",
          "208:   inMemoryCollectionInterval:   1 * time.Minute,",
          "209:   InMemoryRetentionPeriod:      \"24h\",",
          "210:   inMemoryRetentionPeriod:      24 * time.Hour,",
          "211:   CollectionInterval:           \"3s\",",
          "212:   collectionInterval:           3 * time.Second,",
          "213:   PublishAllocationMetrics:     true,",
          "214:   PublishNodeMetrics:           true,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1141:  inputTelemetry2 := &Telemetry{",
          "1144:  }",
          "1145:  mergedTelemetry2 := mergedTelemetry1.Merge(inputTelemetry2)",
          "1146:  must.Eq(t, mergedTelemetry2.inMemoryCollectionInterval, 1*time.Second)",
          "1147:  must.Eq(t, mergedTelemetry2.inMemoryRetentionPeriod, 10*time.Second)",
          "1148: }",
          "1150: func TestConfig_Template(t *testing.T) {",
          "",
          "[Removed Lines]",
          "1142:   inMemoryCollectionInterval: 1 * time.Second,",
          "1143:   inMemoryRetentionPeriod:    10 * time.Second,",
          "",
          "[Added Lines]",
          "1143:   inMemoryCollectionInterval:   1 * time.Second,",
          "1144:   inMemoryRetentionPeriod:      10 * time.Second,",
          "1145:   DisableAllocationHookMetrics: pointer.Of(true),",
          "1150:  must.True(t, *mergedTelemetry2.DisableAllocationHookMetrics)",
          "",
          "---------------"
        ],
        "command/agent/config_test.go||command/agent/config_test.go": [
          "File: command/agent/config_test.go -> command/agent/config_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:    DataDogTags:                        []string{\"cat1:tag1\", \"cat2:tag2\"},",
          "74:    PrometheusMetrics:                  true,",
          "75:    DisableHostname:                    false,",
          "76:    CirconusAPIToken:                   \"0\",",
          "77:    CirconusAPIApp:                     \"nomadic\",",
          "78:    CirconusAPIURL:                     \"http://api.circonus.com/v2\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:    DisableAllocationHookMetrics:       pointer.Of(false),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "279:    DataDogTags:                        []string{\"cat1:tag1\", \"cat2:tag2\"},",
          "280:    PrometheusMetrics:                  true,",
          "281:    DisableHostname:                    true,",
          "282:    PublishNodeMetrics:                 true,",
          "283:    PublishAllocationMetrics:           true,",
          "284:    CirconusAPIToken:                   \"1\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "283:    DisableAllocationHookMetrics:       pointer.Of(true),",
          "",
          "---------------"
        ],
        "command/agent/testdata/basic.hcl||command/agent/testdata/basic.hcl": [
          "File: command/agent/testdata/basic.hcl -> command/agent/testdata/basic.hcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "201: }",
          "203: telemetry {",
          "213: }",
          "215: leave_on_interrupt = true",
          "",
          "[Removed Lines]",
          "204:   in_memory_collection_interval = \"1m\"",
          "205:   in_memory_retention_period    = \"24h\"",
          "206:   statsite_address              = \"127.0.0.1:1234\"",
          "207:   statsd_address                = \"127.0.0.1:2345\"",
          "208:   prometheus_metrics            = true",
          "209:   disable_hostname              = true",
          "210:   collection_interval           = \"3s\"",
          "211:   publish_allocation_metrics    = true",
          "212:   publish_node_metrics          = true",
          "",
          "[Added Lines]",
          "204:   disable_allocation_hook_metrics = true",
          "205:   in_memory_collection_interval   = \"1m\"",
          "206:   in_memory_retention_period      = \"24h\"",
          "207:   statsite_address                = \"127.0.0.1:1234\"",
          "208:   statsd_address                  = \"127.0.0.1:2345\"",
          "209:   prometheus_metrics              = true",
          "210:   disable_hostname                = true",
          "211:   collection_interval             = \"3s\"",
          "212:   publish_allocation_metrics      = true",
          "213:   publish_node_metrics            = true",
          "",
          "---------------"
        ]
      }
    }
  ]
}