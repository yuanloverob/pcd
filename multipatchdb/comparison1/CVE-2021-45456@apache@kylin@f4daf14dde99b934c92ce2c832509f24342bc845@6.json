{
  "cve_id": "CVE-2021-45456",
  "cve_desc": "Apache kylin checks the legitimacy of the project before executing some commands with the project name passed in by the user. There is a mismatch between what is being checked and what is being used as the shell command argument in DiagnosisService. This may cause an illegal project name to pass the check and perform the following steps, resulting in a command injection vulnerability. This issue affects Apache Kylin 4.0.0.",
  "repo": "apache/kylin",
  "patch_hash": "f4daf14dde99b934c92ce2c832509f24342bc845",
  "patch_info": {
    "commit_hash": "f4daf14dde99b934c92ce2c832509f24342bc845",
    "repo": "apache/kylin",
    "commit_url": "https://github.com/apache/kylin/commit/f4daf14dde99b934c92ce2c832509f24342bc845",
    "files": [
      "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
      "server/src/main/webapp/WEB-INF/web.xml"
    ],
    "message": "test fix",
    "before_after_code_files": [
      "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java"
    ]
  },
  "patch_diff": {
    "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java": [
      "File: core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java -> core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "3403:     public String getKerberosPrincipal() {",
      "3404:         return getOptional(\"kylin.kerberos.principal\");",
      "3405:     }",
      "3406: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3407:     public String getEncryptCipherIvSpec() {",
      "3408:         return getOptional(\"kylin.security.encrypt.cipher.ivSpec\", \"AAAAAAAAAAAAAAAA\");",
      "3409:     }",
      "",
      "---------------"
    ],
    "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java": [
      "File: core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java -> core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: import java.security.NoSuchAlgorithmException;",
      "27: import org.apache.commons.codec.binary.Base64;",
      "29: import javax.crypto.Cipher;",
      "30: import javax.crypto.NoSuchPaddingException;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28: import org.apache.kylin.common.KylinConfig;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "42:             InvalidKeyException, NoSuchPaddingException, NoSuchAlgorithmException, UnsupportedEncodingException {",
      "43:         Cipher cipher = Cipher.getInstance(\"AES/CFB/PKCS5Padding\");",
      "44:         final SecretKeySpec secretKey = new SecretKeySpec(key, \"AES\");",
      "46:         cipher.init(cipherMode, secretKey, ivSpec);",
      "47:         return cipher;",
      "48:     }",
      "",
      "[Removed Lines]",
      "45:         IvParameterSpec ivSpec = new IvParameterSpec(\"AAAAAAAAAAAAAAAA\".getBytes(\"UTF-8\"));",
      "",
      "[Added Lines]",
      "46:         IvParameterSpec ivSpec = new IvParameterSpec(KylinConfig.getInstanceFromEnv().getEncryptCipherIvSpec().getBytes(\"UTF-8\"));",
      "",
      "---------------"
    ],
    "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java": [
      "File: core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java -> core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: package org.apache.kylin.common.util;",
      "21: import org.junit.Assert;",
      "22: import org.junit.Test;",
      "26:     @Test",
      "27:     public void testAESEncrypt(){",
      "",
      "[Removed Lines]",
      "24: public class EncryptUtilTest {",
      "",
      "[Added Lines]",
      "21: import org.junit.After;",
      "23: import org.junit.Before;",
      "26: public class EncryptUtilTest extends LocalFileMetadataTestCase {",
      "27:     @Before",
      "28:     public void setUp() throws Exception {",
      "29:         this.createTestMetadata();",
      "30:     }",
      "32:     @After",
      "33:     public void after() throws Exception {",
      "34:         this.cleanupTestMetadata();",
      "35:     }",
      "",
      "---------------"
    ],
    "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java": [
      "File: server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java -> server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "87:     public String dumpProjectDiagnosisInfo(String project, File exportPath) throws IOException {",
      "88:         Message msg = MsgPicker.getMsg();",
      "89:         ProjectInstance projectInstance =",
      "90:                 ProjectManager.getInstance(KylinConfig.getInstanceFromEnv())",
      "92:         if (null == projectInstance) {",
      "93:             throw new BadRequestException(",
      "95:         }",
      "96:         aclEvaluate.checkProjectOperationPermission(projectInstance);",
      "98:         runDiagnosisCLI(args);",
      "99:         return getDiagnosisPackageName(exportPath);",
      "100:     }",
      "",
      "[Removed Lines]",
      "91:                         .getProject(ValidateUtil.convertStringToBeAlphanumericUnderscore(project));",
      "94:                     String.format(Locale.ROOT, msg.getDIAG_PROJECT_NOT_FOUND(), project));",
      "97:         String[] args = { project, exportPath.getAbsolutePath() };",
      "",
      "[Added Lines]",
      "89:         String projectName = ValidateUtil.convertStringToBeAlphanumericUnderscore(project);",
      "92:                         .getProject(projectName);",
      "95:                     String.format(Locale.ROOT, msg.getDIAG_PROJECT_NOT_FOUND(), projectName));",
      "98:         String[] args = { projectName, exportPath.getAbsolutePath() };",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5c71764b7f3cba60cc707f8e0086ebae04edf840",
      "candidate_info": {
        "commit_hash": "5c71764b7f3cba60cc707f8e0086ebae04edf840",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/5c71764b7f3cba60cc707f8e0086ebae04edf840",
        "files": [
          "server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java"
        ],
        "message": "KYLIN-4406 QueryRequestLimits limit should consider the queries hit/wait cache\n\n(cherry picked from commit d3788e08a20b61cf981b7949c3a204d7aaf1a415)",
        "before_after_code_files": [
          "server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java||server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java||server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java": [
          "File: server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java -> server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "450:             sql = result.getSecond();",
          "451:             sqlRequest.setSql(sql);",
          "469:                     sqlResponse = queryAndUpdateCache(sqlRequest, isQueryCacheEnabled);",
          "470:                 }",
          "471:             }",
          "",
          "[Removed Lines]",
          "454:             if (sqlResponse == null && isQueryInspect) {",
          "455:                 sqlResponse = new SQLResponse(null, null, 0, false, sqlRequest.getSql());",
          "456:             }",
          "458:             if (sqlResponse == null && isCreateTempStatement) {",
          "459:                 sqlResponse = new SQLResponse(null, null, 0, false, null);",
          "460:             }",
          "462:             if (sqlResponse == null && isQueryCacheEnabled) {",
          "463:                 sqlResponse = searchQueryInCache(sqlRequest);",
          "464:             }",
          "467:             if (sqlResponse == null) {",
          "468:                 try (QueryRequestLimits limit = new QueryRequestLimits(sqlRequest.getProject())) {",
          "",
          "[Added Lines]",
          "453:             try (QueryRequestLimits limit = new QueryRequestLimits(sqlRequest.getProject())) {",
          "455:                 if (sqlResponse == null && isQueryInspect) {",
          "456:                     sqlResponse = new SQLResponse(null, null, 0, false, sqlRequest.getSql());",
          "457:                 }",
          "459:                 if (sqlResponse == null && isCreateTempStatement) {",
          "460:                     sqlResponse = new SQLResponse(null, null, 0, false, null);",
          "461:                 }",
          "463:                 if (sqlResponse == null && isQueryCacheEnabled) {",
          "464:                     sqlResponse = searchQueryInCache(sqlRequest);",
          "465:                 }",
          "468:                 if (sqlResponse == null) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3d6db494526094c6f7f1134e9fe576d7e0c66307",
      "candidate_info": {
        "commit_hash": "3d6db494526094c6f7f1134e9fe576d7e0c66307",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/3d6db494526094c6f7f1134e9fe576d7e0c66307",
        "files": [
          "build-engine/src/main/java/org/apache/kylin/engine/mr/common/CubeStatsReader.java",
          "core-common/src/main/resources/kylin-defaults.properties",
          "core-metadata/src/main/java/org/apache/kylin/measure/hllc/HLLCounter.java",
          "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/CubeBuildJob.java",
          "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/CuboidStatisticsJob.scala",
          "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/ParentSourceChooser.scala",
          "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/ResourceDetectBeforeCubingJob.java",
          "kylin-spark-project/kylin-spark-metadata/src/main/scala/org/apache/kylin/engine/spark/metadata/MetadataConverter.scala",
          "server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java",
          "webapp/app/partials/cubes/cube_detail.html"
        ],
        "message": "KYLIN-4818 Support Cube Planner Phase One in Kylin 4\n\n- Use Spark to calculate cuboid's HllCounter for the first segment\n- Re-enable Cube planner by default\n- Change default precision from 10 to 14 for HLLCounter",
        "before_after_code_files": [
          "build-engine/src/main/java/org/apache/kylin/engine/mr/common/CubeStatsReader.java||build-engine/src/main/java/org/apache/kylin/engine/mr/common/CubeStatsReader.java",
          "core-common/src/main/resources/kylin-defaults.properties||core-common/src/main/resources/kylin-defaults.properties",
          "core-metadata/src/main/java/org/apache/kylin/measure/hllc/HLLCounter.java||core-metadata/src/main/java/org/apache/kylin/measure/hllc/HLLCounter.java",
          "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/CubeBuildJob.java||kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/CubeBuildJob.java",
          "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/CuboidStatistics.scala||kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/CuboidStatisticsJob.scala",
          "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/ParentSourceChooser.scala||kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/ParentSourceChooser.scala",
          "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/ResourceDetectBeforeCubingJob.java||kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/ResourceDetectBeforeCubingJob.java",
          "kylin-spark-project/kylin-spark-metadata/src/main/scala/org/apache/kylin/engine/spark/metadata/MetadataConverter.scala||kylin-spark-project/kylin-spark-metadata/src/main/scala/org/apache/kylin/engine/spark/metadata/MetadataConverter.scala",
          "server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java||server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java",
          "webapp/app/partials/cubes/cube_detail.html||webapp/app/partials/cubes/cube_detail.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "build-engine/src/main/java/org/apache/kylin/engine/mr/common/CubeStatsReader.java||build-engine/src/main/java/org/apache/kylin/engine/mr/common/CubeStatsReader.java": [
          "File: build-engine/src/main/java/org/apache/kylin/engine/mr/common/CubeStatsReader.java -> build-engine/src/main/java/org/apache/kylin/engine/mr/common/CubeStatsReader.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:     final double mapperOverlapRatioOfFirstBuild; // becomes meaningless after merge",
          "87:     final Map<Long, HLLCounter> cuboidRowEstimatesHLL;",
          "88:     final CuboidScheduler cuboidScheduler;",
          "91:     public CubeStatsReader(CubeSegment cubeSegment, KylinConfig kylinConfig) throws IOException {",
          "92:         this(cubeSegment, cubeSegment.getCuboidScheduler(), kylinConfig);",
          "",
          "[Removed Lines]",
          "89:     final long sourceRowCount;",
          "",
          "[Added Lines]",
          "89:     public final long sourceRowCount;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "106:         File tmpSeqFile = writeTmpSeqFile(resource.content());",
          "107:         Path path = new Path(HadoopUtil.fixWindowsPath(\"file://\" + tmpSeqFile.getAbsolutePath()));",
          "109:         CubeStatsResult cubeStatsResult = new CubeStatsResult(path, kylinConfig.getCubeStatsHLLPrecision());",
          "110:         tmpSeqFile.delete();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "108:         logger.info(\"Reading statistics from {}\", path);",
          "",
          "---------------"
        ],
        "core-common/src/main/resources/kylin-defaults.properties||core-common/src/main/resources/kylin-defaults.properties": [
          "File: core-common/src/main/resources/kylin-defaults.properties -> core-common/src/main/resources/kylin-defaults.properties",
          "--- Hunk 1 ---",
          "[Context before]",
          "154: kylin.cube.aggrgroup.max-combination=32768",
          "157: kylin.cube.cubeplanner.enabled-for-existing-cube=false",
          "158: kylin.cube.cubeplanner.expansion-threshold=15.0",
          "159: kylin.cube.cubeplanner.recommend-cache-max-size=200",
          "",
          "[Removed Lines]",
          "156: kylin.cube.cubeplanner.enabled=false",
          "",
          "[Added Lines]",
          "156: kylin.cube.cubeplanner.enabled=true",
          "",
          "---------------"
        ],
        "core-metadata/src/main/java/org/apache/kylin/measure/hllc/HLLCounter.java||core-metadata/src/main/java/org/apache/kylin/measure/hllc/HLLCounter.java": [
          "File: core-metadata/src/main/java/org/apache/kylin/measure/hllc/HLLCounter.java -> core-metadata/src/main/java/org/apache/kylin/measure/hllc/HLLCounter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:     private Register register;",
          "54:     public HLLCounter() {",
          "56:     }",
          "58:     public HLLCounter(int p) {",
          "",
          "[Removed Lines]",
          "55:         this(10, RegisterType.SINGLE_VALUE, Hashing.murmur3_128());",
          "",
          "[Added Lines]",
          "55:         this(14, RegisterType.SINGLE_VALUE, Hashing.murmur3_128());",
          "",
          "---------------"
        ],
        "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/CubeBuildJob.java||kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/CubeBuildJob.java": [
          "File: kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/CubeBuildJob.java -> kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/CubeBuildJob.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import java.util.ArrayList;",
          "23: import java.util.Collection;",
          "24: import java.util.Collections;",
          "25: import java.util.LinkedList;",
          "26: import java.util.List;",
          "27: import java.util.Map;",
          "28: import java.util.Set;",
          "29: import java.util.UUID;",
          "30: import java.util.concurrent.ConcurrentHashMap;",
          "31: import java.util.stream.Collectors;",
          "33: import org.apache.kylin.shaded.com.google.common.base.Joiner;",
          "34: import org.apache.kylin.shaded.com.google.common.collect.Maps;",
          "35: import org.apache.hadoop.fs.FileStatus;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: import java.util.HashMap;",
          "28: import java.util.Locale;",
          "35: import org.apache.hadoop.fs.FSDataInputStream;",
          "36: import org.apache.kylin.common.persistence.ResourceStore;",
          "37: import org.apache.kylin.engine.mr.JobBuilderSupport;",
          "38: import org.apache.kylin.engine.mr.common.BatchConstants;",
          "39: import org.apache.kylin.engine.mr.common.CubeStatsWriter;",
          "40: import org.apache.kylin.engine.mr.common.StatisticsDecisionUtil;",
          "41: import org.apache.kylin.measure.hllc.HLLCounter;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "74: import scala.Tuple2;",
          "75: import scala.collection.JavaConversions;",
          "77: public class CubeBuildJob extends SparkApplication {",
          "78:     protected static final Logger logger = LoggerFactory.getLogger(CubeBuildJob.class);",
          "79:     protected static String TEMP_DIR_SUFFIX = \"_temp\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "86: import static org.apache.kylin.engine.mr.common.BatchConstants.CFG_OUTPUT_STATISTICS;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "92:     protected void doExecute() throws Exception {",
          "94:         long start = System.currentTimeMillis();",
          "97:         Set<String> segmentIds = Sets.newHashSet(StringUtils.split(getParam(MetadataConstants.P_SEGMENT_IDS)));",
          "98:         cubeManager = CubeManager.getInstance(config);",
          "100:         List<String> persistedFlatTable = new ArrayList<>();",
          "101:         List<String> persistedViewFactTable = new ArrayList<>();",
          "102:         Path shareDir = config.getJobTmpShareDir(project, jobId);",
          "103:         try {",
          "105:             for (String segId : segmentIds) {",
          "108:                         JavaConversions.asJavaCollection(seg.toBuildLayouts()));",
          "109:                 logger.debug(\"There are {} cuboids to be built in segment {}.\",",
          "110:                         seg.toBuildLayouts().size(), seg.name());",
          "",
          "[Removed Lines]",
          "95:         logger.info(\"Start building cube job...\");",
          "96:         buildLayoutWithUpdate = new BuildLayoutWithUpdate();",
          "99:         cubeInstance = cubeManager.getCubeByUuid(getParam(MetadataConstants.P_CUBE_ID));",
          "106:                 SegmentInfo seg = ManagerHub.getSegmentInfo(config, getParam(MetadataConstants.P_CUBE_ID), segId);",
          "107:                 SpanningTree spanningTree = new ForestSpanningTree(",
          "",
          "[Added Lines]",
          "107:         logger.info(\"Start building cube job for {} ...\", getParam(MetadataConstants.P_SEGMENT_IDS));",
          "111:         Preconditions.checkArgument(segmentIds.size() == 1, \"Build one segment in one time.\");",
          "113:         String firstSegmentId = segmentIds.iterator().next();",
          "114:         String cubeName = getParam(MetadataConstants.P_CUBE_ID);",
          "115:         SegmentInfo seg = ManagerHub.getSegmentInfo(config, cubeName, firstSegmentId);",
          "117:         cubeInstance = cubeManager.getCubeByUuid(cubeName);",
          "118:         CubeSegment newSegment = cubeInstance.getSegmentById(firstSegmentId);",
          "119:         SpanningTree spanningTree ;",
          "120:         ParentSourceChooser sourceChooser;",
          "122:         boolean needStatistics = StatisticsDecisionUtil.isAbleToOptimizeCubingPlan(newSegment); // Cuboid Statistics is served for Cube Planner Phase One",
          "124:         if (needStatistics) {",
          "126:             long startMills = System.currentTimeMillis();",
          "127:             spanningTree = new ForestSpanningTree(JavaConversions.asJavaCollection(seg.toBuildLayouts()));",
          "128:             sourceChooser = new ParentSourceChooser(spanningTree, seg, jobId, ss, config, false);",
          "129:             sourceChooser.setNeedStatistics();",
          "130:             sourceChooser.decideFlatTableSource(null);",
          "131:             Map<Long, HLLCounter> hllMap = new HashMap<>();",
          "132:             for (Tuple2<String, AggInfo> cuboidData : sourceChooser.aggInfo()) {",
          "133:                 hllMap.put(Long.parseLong(cuboidData._1), cuboidData._2.cuboid().counter());",
          "134:             }",
          "135:             logger.info(\"Cuboid statistics return {} records and cost {} ms.\", hllMap.size(), (System.currentTimeMillis() - startMills));",
          "138:             String jobWorkingDirPath = JobBuilderSupport.getJobWorkingDir(cubeInstance.getConfig().getHdfsWorkingDirectory(), jobId);",
          "139:             CubeStatsWriter.writeCuboidStatistics(HadoopUtil.getCurrentConfiguration(), new Path(jobWorkingDirPath + \"/\" + firstSegmentId + \"/\" + CFG_OUTPUT_STATISTICS), hllMap, 1);",
          "141:             FileSystem fs = HadoopUtil.getWorkingFileSystem();",
          "142:             ResourceStore rs = ResourceStore.getStore(config);",
          "143:             String resPath = newSegment.getStatisticsResourcePath();",
          "144:             Path statisticsFile = new Path(jobWorkingDirPath + \"/\" + firstSegmentId + \"/\" + CFG_OUTPUT_STATISTICS + \"/\" + BatchConstants.CFG_STATISTICS_CUBOID_ESTIMATION_FILENAME);",
          "145:             FSDataInputStream is = fs.open(statisticsFile);",
          "146:             rs.putResource(resPath, is, System.currentTimeMillis());",
          "147:             logger.info(\"{} stats saved to resource {}\", newSegment, resPath);",
          "150:             logger.info(\"Trigger cube planner phase one .\");",
          "151:             StatisticsDecisionUtil.optimizeCubingPlan(newSegment);",
          "152:         }",
          "154:         buildLayoutWithUpdate = new BuildLayoutWithUpdate();",
          "161:                 seg = ManagerHub.getSegmentInfo(config, cubeName, segId);",
          "162:                 spanningTree = new ForestSpanningTree(",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "114:                 }",
          "118:                 sourceChooser.decideSources();",
          "120:                 NBuildSourceInfo buildFromFlatTable = sourceChooser.flatTableSource();",
          "121:                 Map<Long, NBuildSourceInfo> buildFromLayouts = sourceChooser.reuseSources();",
          "",
          "[Removed Lines]",
          "117:                 ParentSourceChooser sourceChooser = new ParentSourceChooser(spanningTree, seg, jobId, ss, config, true);",
          "119:                 Tuple2<String, AggInfo>[] aggInfos =  sourceChooser.getAggInfo();",
          "",
          "[Added Lines]",
          "172:                 sourceChooser = new ParentSourceChooser(spanningTree, seg, jobId, ss, config, true);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "167:         String template = \"{\\\"cuboid\\\":%d, \\\"rows\\\": %d, \\\"size\\\": %d}\";",
          "168:         for (LayoutEntity layoutEntity : segmentInfo.getAllLayoutJava()) {",
          "170:         }",
          "172:         JavaSparkContext jsc = JavaSparkContext.fromSparkContext(ss.sparkContext());",
          "",
          "[Removed Lines]",
          "169:             cuboidStatics.add(String.format(template, layoutEntity.getId(), layoutEntity.getRows(), layoutEntity.getByteSize()));",
          "",
          "[Added Lines]",
          "223:             cuboidStatics.add(String.format(Locale.getDefault(), template, layoutEntity.getId(), layoutEntity.getRows(), layoutEntity.getByteSize()));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "331:     }",
          "333:     private LayoutEntity buildCuboid(SegmentInfo seg, LayoutEntity cuboid, Dataset<Row> parent,",
          "335:         String parentName = String.valueOf(parentId);",
          "336:         if (parentId == ParentSourceChooser.FLAT_TABLE_FLAG()) {",
          "337:             parentName = \"flat table\";",
          "",
          "[Removed Lines]",
          "334:                                     SpanningTree spanningTree, long parentId) throws IOException {",
          "",
          "[Added Lines]",
          "388:                                      SpanningTree spanningTree, long parentId) throws IOException {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "399:         }",
          "400:         int shardNum = BuildUtils.repartitionIfNeed(layout, storage, path, tempPath, cubeInstance.getConfig(), ss);",
          "401:         layout.setShardNum(shardNum);",
          "403:         ss.sparkContext().setLocalProperty(QueryExecutionCache.N_EXECUTION_ID_KEY(), null);",
          "404:         QueryExecutionCache.removeQueryExecution(queryExecutionId);",
          "405:         BuildUtils.fillCuboidInfo(layout, path);",
          "",
          "[Removed Lines]",
          "402:         cuboidShardNum.put(layoutId, (short)shardNum);",
          "",
          "[Added Lines]",
          "456:         cuboidShardNum.put(layoutId, (short) shardNum);",
          "",
          "---------------"
        ],
        "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/CuboidStatistics.scala||kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/CuboidStatisticsJob.scala": [
          "File: kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/CuboidStatistics.scala -> kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/CuboidStatisticsJob.scala",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: import scala.collection.mutable",
          "34:     val rkc = seg.allColumns.count(c => c.rowKey)",
          "37:     val l = res.map(a => (a.key, a)).reduceByKey((a, b) => a.merge(b)).collect()",
          "39:     l",
          "40:   }",
          "41: }",
          "44:   private val info = mutable.Map[String, AggInfo]()",
          "45:   val allCuboidsBitSet: Array[Array[Integer]] = getCuboidBitSet(ids, rkc)",
          "46:   private val hf: HashFunction = Hashing.murmur3_128",
          "47:   private val rowHashCodesLong = new Array[Long](rkc)",
          "50:     init()",
          "51:     rows.foreach(update)",
          "52:     info.valuesIterator",
          "",
          "[Removed Lines]",
          "30: object CuboidStatistics {",
          "32:   def sample(inputDs: Dataset[Row], seg: SegmentInfo): Array[(String, AggInfo)] = {",
          "33:     seg.getAllLayout.map(x => x.getId)",
          "35:     val res = inputDs.rdd //.sample(withReplacement = false, 0.3)",
          "36:       .mapPartitions(new CuboidStatistics(seg.getAllLayout.map(x => x.getId), rkc).statisticsInPartition)",
          "38:     l.foreach(x => println(x._1 + \" >>><<< \" + x._2.cuboid.counter.getCountEstimate))",
          "43: class CuboidStatistics(ids: List[Long], rkc: Int) extends Serializable {",
          "49:   def statisticsInPartition(rows: Iterator[Row]): Iterator[AggInfo] = {",
          "",
          "[Added Lines]",
          "32: object CuboidStatisticsJob {",
          "38:   def statistics(inputDs: Dataset[Row], seg: SegmentInfo): Array[(String, AggInfo)] = {",
          "42:     val res = inputDs.rdd",
          "43:       .mapPartitions(new CuboidStatisticsJob(seg.getAllLayout.map(x => x.getId), rkc).statisticsWithinPartition)",
          "50: class CuboidStatisticsJob(ids: List[Long], rkc: Int) extends Serializable {",
          "55:   private var idx = 0",
          "57:   def statisticsWithinPartition(rows: Iterator[Row]): Iterator[AggInfo] = {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "57:   }",
          "59:   def update(r: Row): Unit = {",
          "61:     updateCuboid(r)",
          "62:   }",
          "",
          "[Removed Lines]",
          "60:     println(r)",
          "",
          "[Added Lines]",
          "68:     idx += 1",
          "69:     if (idx <= 5 || idx % 300 == 0)",
          "70:       println(r)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "122:   }",
          "123: }",
          "127: case class SampleInfo(data: Array[String] = new Array(3))",
          "129: case class DimensionInfo(range: mutable.Map[String, String] = mutable.Map[String, String]())",
          "",
          "[Removed Lines]",
          "125: case class CuboidInfo(counter: HLLCounter = new HLLCounter(14))",
          "",
          "[Added Lines]",
          "138: case class CuboidInfo(counter: HLLCounter = new HLLCounter())",
          "",
          "---------------"
        ],
        "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/ParentSourceChooser.scala||kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/ParentSourceChooser.scala": [
          "File: kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/ParentSourceChooser.scala -> kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/ParentSourceChooser.scala",
          "--- Hunk 1 ---",
          "[Context before]",
          "48:   var flatTableSource: NBuildSourceInfo = _",
          "55:     MetadataConverter.getCubeDesc(seg.getCube),",
          "60:   def getAggInfo : Array[(String, AggInfo)] = aggInfo",
          "",
          "[Removed Lines]",
          "50:   var detectStep = false",
          "57:   def setDetectStep(): Unit =",
          "58:     detectStep = true",
          "",
          "[Added Lines]",
          "50:   private var needStatistics = false",
          "57:   def setNeedStatistics(): Unit =",
          "58:     needStatistics = true",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70:     }",
          "71:   }",
          "74:     if (flatTableSource == null) {",
          "75:       if (needEncoding) {",
          "",
          "[Removed Lines]",
          "73:   private def decideFlatTableSource(entity: LayoutEntity): Unit = {",
          "",
          "[Added Lines]",
          "73:   def decideFlatTableSource(entity: LayoutEntity): Unit = {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "83:       flatTableSource = getFlatTable",
          "85:       val rowKeyColumns: Seq[String] = seg.allColumns.filter(c => c.rowKey).map(c => c.id.toString)",
          "88:         val coreDs = flatTableSource.getFlatTableDS.select(rowKeyColumns.head, rowKeyColumns.tail: _*)",
          "93:       } else {",
          "94:         logInfo(\"Skip sampling ...\")",
          "95:       }",
          "96:     }",
          "98:   }",
          "100:   private def decideParentLayoutSource(entity: LayoutEntity, parentLayout: LayoutEntity): Unit = {",
          "",
          "[Removed Lines]",
          "86:       if (aggInfo == null && !detectStep) {",
          "87:         logInfo(\"Start  sampling ...\")",
          "89:         aggInfo = CuboidStatistics.sample(coreDs, seg)",
          "90:         logInfo(\"Finish sampling ...\")",
          "91:         val statisticsStr = aggInfo.sortBy(x => x._1).map(x => x._1 + \":\" + x._2.cuboid.counter.getCountEstimate).mkString(\"\\n\")",
          "92:         logInfo(statisticsStr)",
          "97:     flatTableSource.addCuboid(entity)",
          "",
          "[Added Lines]",
          "86:       if (aggInfo == null && needStatistics) {",
          "87:         val startMs = System.currentTimeMillis()",
          "88:         logInfo(\"Sampling start ...\")",
          "90:         aggInfo = CuboidStatisticsJob.statistics(coreDs, seg)",
          "91:         logInfo(\"Sampling finished and cost \" + (System.currentTimeMillis() - startMs) + \" s .\")",
          "92:         val statisticsStr = aggInfo.sortBy(x => x._1).map(x => x._1 + \":\" + x._2.cuboid.counter.getCountEstimate).mkString(\", \")",
          "93:         logInfo(\"Cuboid Statistics results : \\t\" + statisticsStr)",
          "98:     if (entity != null)",
          "99:       flatTableSource.addCuboid(entity)",
          "",
          "---------------"
        ],
        "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/ResourceDetectBeforeCubingJob.java||kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/ResourceDetectBeforeCubingJob.java": [
          "File: kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/ResourceDetectBeforeCubingJob.java -> kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/ResourceDetectBeforeCubingJob.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:             ResourceDetectUtils.write(new Path(config.getJobTmpShareDir(project, jobId), ResourceDetectUtils.countDistinctSuffix()),",
          "59:                     ResourceDetectUtils.findCountDistinctMeasure(JavaConversions.asJavaCollection(seg.toBuildLayouts())));",
          "60:             ParentSourceChooser datasetChooser = new ParentSourceChooser(spanningTree, seg, jobId, ss, config, false);",
          "62:             datasetChooser.decideSources();",
          "63:             NBuildSourceInfo buildFromFlatTable = datasetChooser.flatTableSource();",
          "64:             if (buildFromFlatTable != null) {",
          "",
          "[Removed Lines]",
          "61:             datasetChooser.setDetectStep();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "kylin-spark-project/kylin-spark-metadata/src/main/scala/org/apache/kylin/engine/spark/metadata/MetadataConverter.scala||kylin-spark-project/kylin-spark-metadata/src/main/scala/org/apache/kylin/engine/spark/metadata/MetadataConverter.scala": [
          "File: kylin-spark-project/kylin-spark-metadata/src/main/scala/org/apache/kylin/engine/spark/metadata/MetadataConverter.scala -> kylin-spark-project/kylin-spark-metadata/src/main/scala/org/apache/kylin/engine/spark/metadata/MetadataConverter.scala",
          "--- Hunk 1 ---",
          "[Context before]",
          "123:   def extractEntityAndMeasures(cubeInstance: CubeInstance): (List[LayoutEntity], Map[Integer, FunctionDesc]) = {",
          "124:     val (columnIndexes, shardByColumnsId, idToColumnMap, measureId) = genIDToColumnMap(cubeInstance)",
          "126:       .getAllCuboidIds",
          "127:       .asScala",
          "128:       .map { long =>",
          "",
          "[Removed Lines]",
          "125:     (cubeInstance.getDescriptor.getInitialCuboidScheduler",
          "",
          "[Added Lines]",
          "125:     (cubeInstance.getCuboidScheduler",
          "",
          "---------------"
        ],
        "server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java||server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java": [
          "File: server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java -> server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: import org.apache.kylin.cube.model.RowKeyColDesc;",
          "48: import org.apache.kylin.dimension.DimensionEncoding;",
          "49: import org.apache.kylin.dimension.DimensionEncodingFactory;",
          "50: import org.apache.kylin.job.JobInstance;",
          "51: import org.apache.kylin.job.JoinedFlatTable;",
          "52: import org.apache.kylin.job.exception.JobException;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50: import org.apache.kylin.engine.mr.common.CuboidStatsReaderUtil;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "880:         }",
          "881:     }",
          "909:     @RequestMapping(value = \"/{cubeName}/cuboids/recommend\", method = RequestMethod.GET)",
          "910:     @ResponseBody",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "884:     @RequestMapping(value = \"/{cubeName}/cuboids/current\", method = RequestMethod.GET)",
          "885:     @ResponseBody",
          "886:     public CuboidTreeResponse getCurrentCuboids(@PathVariable String cubeName) {",
          "887:         checkCubeExists(cubeName);",
          "888:         CubeInstance cube = cubeService.getCubeManager().getCube(cubeName);",
          "890:         CuboidScheduler cuboidScheduler = cube.getCuboidScheduler();",
          "891:         Map<Long, Long> cuboidStatsMap = cube.getCuboids();",
          "892:         if (cuboidStatsMap == null) {",
          "893:             cuboidStatsMap = CuboidStatsReaderUtil.readCuboidStatsFromCube(cuboidScheduler.getAllCuboidIds(), cube);",
          "894:         }",
          "896:         Map<Long, Long> hitFrequencyMap = null;",
          "897:         Map<Long, Long> queryMatchMap = null;",
          "898:         try {",
          "899:             hitFrequencyMap = getTargetCuboidHitFrequency(cubeName);",
          "900:             queryMatchMap = cubeService.getCuboidQueryMatchCount(cubeName);",
          "901:         } catch (Exception e) {",
          "902:             logger.warn(\"Fail to query on system cube due to \" + e);",
          "903:         }",
          "905:         Set<Long> currentCuboidSet = cube.getCuboidScheduler().getAllCuboidIds();",
          "906:         return cubeService.getCuboidTreeResponse(cuboidScheduler, cuboidStatsMap, hitFrequencyMap, queryMatchMap,",
          "907:                 currentCuboidSet);",
          "908:     }",
          "",
          "---------------"
        ],
        "webapp/app/partials/cubes/cube_detail.html||webapp/app/partials/cubes/cube_detail.html": [
          "File: webapp/app/partials/cubes/cube_detail.html -> webapp/app/partials/cubes/cube_detail.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "41:             ng-if=\"userService.hasRole('ROLE_ADMIN')  || hasPermission('cube' ,cube, permissions.ADMINISTRATION.mask) && !newAccess\">",
          "42:             <a href=\"\" ng-click=\"cube.visiblePage='hbase';getStorageInfo(cube)\">Storage</a>",
          "43:         </li>",
          "45:             <a href=\"\" ng-click=\"cube.visiblePage='planner';getCubePlanner(cube);\">Planner</a>",
          "46:         </li>",
          "47:         <li class=\"{{cube.visiblePage=='streaming'? 'active':''}}\" ng-if=\"(userService.hasRole('ROLE_ADMIN') || hasPermission('cube', cube, permissions.ADMINISTRATION.mask)  && !newAccess) && cube.streamingV2\">",
          "",
          "[Removed Lines]",
          "44:         <li class=\"{{cube.visiblePage=='planner'? 'active':''}}\" ng-if=\"(userService.hasRole('ROLE_ADMIN') || hasPermission('cube', cube, permissions.ADMINISTRATION.mask) && !newAccess) && isShowCubeplanner && cube.detail.engine_type != 6\">",
          "",
          "[Added Lines]",
          "44:         <li class=\"{{cube.visiblePage=='planner'? 'active':''}}\" ng-if=\"(userService.hasRole('ROLE_ADMIN') || hasPermission('cube', cube, permissions.ADMINISTRATION.mask) && !newAccess) && isShowCubeplanner && cube.detail.engine_type != 0\">",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "92b77fdaa819844519b2baa019472bed0edc3819",
      "candidate_info": {
        "commit_hash": "92b77fdaa819844519b2baa019472bed0edc3819",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/92b77fdaa819844519b2baa019472bed0edc3819",
        "files": [
          "kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkCubingJob.java",
          "kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkMergingJob.java",
          "kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkOptimizingJob.java"
        ],
        "message": "KYLIN-5188, fix email notification after cubing and merging job",
        "before_after_code_files": [
          "kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkCubingJob.java||kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkCubingJob.java",
          "kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkMergingJob.java||kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkMergingJob.java",
          "kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkOptimizingJob.java||kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkOptimizingJob.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkCubingJob.java||kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkCubingJob.java": [
          "File: kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkCubingJob.java -> kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkCubingJob.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "98:         job.setParam(MetadataConstants.P_DATA_RANGE_END, String.valueOf(endTime));",
          "99:         job.setParam(MetadataConstants.P_OUTPUT_META_URL, job.cube.getConfig().getMetadataUrl().toString());",
          "100:         job.setParam(MetadataConstants.P_CUBOID_NUMBER, String.valueOf(job.cube.getDescriptor().getAllCuboids().size()));",
          "103:         job.setParam(MetadataConstants.P_JOB_TYPE, jobType.toString());",
          "104:         JobStepFactory.addStep(job, JobStepType.RESOURCE_DETECT, job.cube);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101:         job.setDeployEnvName(KylinConfig.getInstanceFromEnv().getDeployEnv());",
          "102:         job.setNotifyList(job.cube.getDescriptor().getNotifyList());",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "114:         return MetaDumpUtil.collectCubeMetadata(cubeInstance);",
          "115:     }",
          "117:     public String getDeployEnvName() {",
          "118:         return getParam(DEPLOY_ENV_NAME);",
          "119:     }",
          "121:     public long findSourceRecordCount() {",
          "122:         return Long.parseLong(findExtraInfo(SOURCE_RECORD_COUNT, \"0\"));",
          "123:     }",
          "125:     public long getMapReduceWaitTime() {",
          "126:         return getExtraInfoAsLong(MAP_REDUCE_WAIT_TIME, 0L);",
          "127:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "118:     @Override",
          "123:     @Override",
          "128:     @Override",
          "",
          "---------------"
        ],
        "kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkMergingJob.java||kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkMergingJob.java": [
          "File: kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkMergingJob.java -> kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkMergingJob.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "84:         job.setParam(MetadataConstants.P_OUTPUT_META_URL, cube.getConfig().getMetadataUrl().toString());",
          "85:         job.setParam(MetadataConstants.P_JOB_TYPE, String.valueOf(jobType));",
          "86:         job.setParam(MetadataConstants.P_CUBOID_NUMBER, String.valueOf(cube.getDescriptor().getAllCuboids().size()));",
          "88:         JobStepFactory.addStep(job, JobStepType.RESOURCE_DETECT, cube);",
          "89:         JobStepFactory.addStep(job, JobStepType.MERGING, cube);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "87:         job.setDeployEnvName(KylinConfig.getInstanceFromEnv().getDeployEnv());",
          "88:         job.setNotifyList(cube.getDescriptor().getNotifyList());",
          "",
          "---------------"
        ],
        "kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkOptimizingJob.java||kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkOptimizingJob.java": [
          "File: kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkOptimizingJob.java -> kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkOptimizingJob.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "82:         job.setParam(MetadataConstants.P_OUTPUT_META_URL, cube.getConfig().getMetadataUrl().toString());",
          "83:         job.setParam(MetadataConstants.P_JOB_TYPE, String.valueOf(jobType));",
          "84:         job.setParam(MetadataConstants.P_CUBOID_NUMBER, String.valueOf(cube.getDescriptor().getAllCuboids().size()));",
          "87:         JobStepFactory.addStep(job, JobStepType.FILTER_RECOMMEND_CUBOID, cube);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "85:         job.setDeployEnvName(KylinConfig.getInstanceFromEnv().getDeployEnv());",
          "86:         job.setNotifyList(cube.getDescriptor().getNotifyList());",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "102:         return MetaDumpUtil.collectCubeMetadata(cubeInstance);",
          "103:     }",
          "105:     public String getDeployEnvName() {",
          "106:         return getParam(DEPLOY_ENV_NAME);",
          "107:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "107:     @Override",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3f20bb3cafe5f086d611521ce2df34274b57a5bc",
      "candidate_info": {
        "commit_hash": "3f20bb3cafe5f086d611521ce2df34274b57a5bc",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/3f20bb3cafe5f086d611521ce2df34274b57a5bc",
        "files": [
          "build/bin/build-incremental-cube.sh",
          "build/bin/system-cube.sh"
        ],
        "message": "KYLIN-4855 kylin.metrics.prefix bug fix (#1536)\n\n* KYLIN-4855 kylin.metrics.prefix bug fix\n\n* KYLIN-4855 kylin.metrics.prefix bug fix\n\n(cherry picked from commit d1c99d754e8d6fe1fe820fe75a89dae1d18c2dc9)",
        "before_after_code_files": [
          "build/bin/build-incremental-cube.sh||build/bin/build-incremental-cube.sh",
          "build/bin/system-cube.sh||build/bin/system-cube.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "build/bin/build-incremental-cube.sh||build/bin/build-incremental-cube.sh": [
          "File: build/bin/build-incremental-cube.sh -> build/bin/build-incremental-cube.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: source ${KYLIN_HOME:-\"$(cd -P -- \"$(dirname -- \"$0\")\" && pwd -P)/../\"}/bin/header.sh",
          "22: if [ ! $1 ]; then",
          "25: fi",
          "27: tomcat_root=${dir}/../tomcat",
          "",
          "[Removed Lines]",
          "23:  echo \"usage: build-incremental-cube.sh CUBE INTERVAL DELAY\"",
          "24:  exit 1",
          "",
          "[Added Lines]",
          "23:     echo \"usage: build-incremental-cube.sh CUBE INTERVAL DELAY\"",
          "24:     exit 1",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41: ID=\"$END\"",
          "42: echo \"Building for ${CUBE}_${ID}\" | tee ${KYLIN_HOME}/logs/build_trace.log",
          "43: echo \"Check the log at ${KYLIN_HOME}/logs/incremental_cube_${CUBE}_${END}.log\"",
          "",
          "[Removed Lines]",
          "44: curl -X PUT --user ADMIN:KYLIN -H \"Content-Type: application/json;charset=utf-8\" -d \"{\\\"endTime\\\": ${END}, \\\"buildType\\\": \\\"BUILD\\\"}\" http://${kylin_rest_address}/kylin/api/cubes/${CUBE}/rebuild  > ${KYLIN_HOME}/logs/incremental_cube_${CUBE}_${END}.log 2>&1 &",
          "",
          "[Added Lines]",
          "44: curl -X PUT -H \"Authorization: Basic %Auth%\" -H \"Content-Type: application/json;charset=utf-8\" -d \"{\\\"endTime\\\": ${END}, \\\"buildType\\\": \\\"BUILD\\\"}\" http://${kylin_rest_address}/kylin/api/cubes/${CUBE}/rebuild  > ${KYLIN_HOME}/logs/incremental_cube_${CUBE}_${END}.log 2>&1 &",
          "",
          "---------------"
        ],
        "build/bin/system-cube.sh||build/bin/system-cube.sh": [
          "File: build/bin/system-cube.sh -> build/bin/system-cube.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: source ${KYLIN_HOME:-\"$(cd -P -- \"$(dirname -- \"$0\")\" && pwd -P)/../\"}/bin/header.sh",
          "23: function printHelp {",
          "24:     echo \"usage: system-cube.sh setup\"",
          "25:     echo \"       system-cube.sh build [INTERVAL:600000] [DELAY:0]\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: build_incremental_cube=\"${KYLIN_HOME}/bin/build-incremental-cube.sh\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "28:     exit 1",
          "29: }",
          "31: if [[ \"$@\" == *\"help\"* ]]",
          "32: then",
          "33:     printHelp",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33: function authorization {",
          "34:     authed=$(grep %Auth% \"$build_incremental_cube\"|wc -l)",
          "35:     if [ $authed -eq 1 ]",
          "36:     then",
          "37:         read -p $'Please Enter the ADMIN\\'password or \\'N\\' to exit: ' pwd",
          "38:         if [ $pwd == \"N\"  ]",
          "39:         then",
          "40:             return 1",
          "41:         else",
          "42:             base64_auth=$(echo -n \"ADMIN:$pwd\"|base64)",
          "43:             tomcat_root=${dir}/../tomcat",
          "44:             kylin_rest_address=`hostname -f`\":\"`grep \"<Connector port=\" ${tomcat_root}/conf/server.xml |grep protocol=\\\"HTTP/1.1\\\" | cut -d '=' -f 2 | cut -d \\\" -f 2`",
          "45:             http_code=$(curl -I -m 10 -o /dev/null -s -w %{http_code} -X POST -H \"Authorization: Basic $base64_auth\" -H 'Content-Type: application/json' http://${kylin_rest_address}/kylin/api/user/authentication)",
          "46:             if [ $http_code -eq 200  ]",
          "47:             then",
          "48:                 sed -i \"s/%Auth%/${base64_auth}/g\" $build_incremental_cube",
          "49:                 return 0",
          "50:             else",
          "51:                 echo `setColor 31 \"Unauthorized,password error.\"`",
          "52:                 authorization",
          "53:             fi",
          "54:         fi",
          "55:     else",
          "56:         return 0",
          "57:     fi",
          "58: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "38: KYLIN_ENV=`grep \"^kylin.env=\" $KYLIN_HOME/conf/kylin.properties | cut -d \"=\" -f 2`",
          "39: KYLIN_ENV=${KYLIN_ENV:-\"QA\"}",
          "41: SC_NAME_1=\"KYLIN_HIVE_METRICS_QUERY_EXECUTION_${KYLIN_ENV}\"",
          "42: SC_NAME_2=\"KYLIN_HIVE_METRICS_QUERY_SPARK_JOB_${KYLIN_ENV}\"",
          "43: SC_NAME_3=\"KYLIN_HIVE_METRICS_QUERY_SPARK_STAGE_${KYLIN_ENV}\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70: KYLIN_METRICS_PREFIX=`grep \"^kylin.metrics.prefix=\" $KYLIN_HOME/conf/kylin.properties | cut -d \"=\" -f 2`",
          "71: KYLIN_METRICS_PREFIX=${KYLIN_METRICS_PREFIX:-\"KYLIN\"}",
          "72: KYLIN_METRICS_PREFIX=`echo \"$KYLIN_METRICS_PREFIX\"| tr '[a-z]' '[A-Z]'`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "50:     then",
          "51:         BUILD_INTERVAL=${2:-\"600000\"}",
          "52:         BUILD_DELAY=${3:-\"0\"}",
          "54:         echo \"build system cubes, build_interval:${BUILD_INTERVAL}, build_delay:${BUILD_DELAY}\"",
          "61:     else",
          "64:     fi",
          "65: elif [ \"$1\" == \"setup\" ]",
          "66: then",
          "85:   $KYLIN_HOME/bin/kylin.sh org.apache.kylin.tool.metrics.systemcube.SCCreator \\",
          "86:   -inputConfig ${SINK_TOOLS_FILE} \\",
          "87:   -output ${OUTPUT_FORDER}",
          "91:   # Get Database",
          "92:   system_database_tmp=`bash ${KYLIN_HOME}/bin/get-properties.sh kylin.metrics.prefix`",
          "93:   system_database=${system_database_tmp:-\"KYLIN\"}",
          "94:   system_database=`echo ${system_database} | tr [a-z] [A-Z]`",
          "123: elif [ \"$1\" == \"cron\" ]",
          "124: then",
          "139: else",
          "140:     printHelp",
          "141: fi",
          "",
          "[Removed Lines]",
          "56:   sh ${KYLIN_HOME}/bin/build-incremental-cube.sh ${SC_NAME_1} ${BUILD_INTERVAL} ${BUILD_DELAY}",
          "57:   sh ${KYLIN_HOME}/bin/build-incremental-cube.sh ${SC_NAME_2} ${BUILD_INTERVAL} ${BUILD_DELAY}",
          "58:   sh ${KYLIN_HOME}/bin/build-incremental-cube.sh ${SC_NAME_3} ${BUILD_INTERVAL} ${BUILD_DELAY}",
          "59:   sh ${KYLIN_HOME}/bin/build-incremental-cube.sh ${SC_NAME_4} ${BUILD_INTERVAL} ${BUILD_DELAY}",
          "60:   sh ${KYLIN_HOME}/bin/build-incremental-cube.sh ${SC_NAME_5} ${BUILD_INTERVAL} ${BUILD_DELAY}",
          "62:      echo \"Please setup system cube first.\"",
          "63:   exit 1",
          "67:  #creat SCSinkTools.json",
          "68:  SINK_TOOLS_FILE=$KYLIN_HOME/SCSinkTools.json",
          "70:  echo \"setup system cubes\"",
          "72:  rm -rf $SINK_TOOLS_FILE $OUTPUT_FORDER",
          "74:  cat <<-EOF > ${SINK_TOOLS_FILE}",
          "75:  [",
          "76:     {",
          "77:        \"sink\": \"hive\",",
          "78:        \"storage_type\": 4,",
          "79:        \"cube_desc_override_properties\": {",
          "80:          \"kylin.cube.max-building-segments\": \"1\"",
          "81:        }",
          "82:     }",
          "83:  ]",
          "84:  EOF",
          "89:   hive_client_mode=`bash ${KYLIN_HOME}/bin/get-properties.sh kylin.source.hive.client`",
          "96:   # 'create database' failed will not exit when donot have permission to create database;",
          "97:   sed -i -e 's/CREATE DATABASE /-- CREATE DATABASE /g' ${OUTPUT_FORDER}/create_hive_tables_for_system_cubes.sql",
          "99:   if [ \"${hive_client_mode}\" == \"beeline\" ]",
          "100:   then",
          "101:       beeline_params=`bash ${KYLIN_HOME}/bin/get-properties.sh kylin.source.hive.beeline-params`",
          "102:       beeline ${beeline_params} -e \"CREATE DATABASE IF NOT EXISTS \"$system_database",
          "104:       hive2_url=`expr match \"${beeline_params}\" '.*\\(hive2:.*:[0-9]\\{4,6\\}\\/\\)'`",
          "105:       if [ -z ${hive2_url} ]; then",
          "106:           hive2_url=`expr match \"${beeline_params}\" '.*\\(hive2:.*:[0-9]\\{4,6\\}\\)'`",
          "107:           beeline_params=${beeline_params/${hive2_url}/${hive2_url}/${system_database}}",
          "108:       else",
          "109:           beeline_params=${beeline_params/${hive2_url}/${hive2_url}${system_database}}",
          "110:       fi",
          "112:       beeline ${beeline_params} -f ${OUTPUT_FORDER}/create_hive_tables_for_system_cubes.sql  || { exit 1; }",
          "113:   else",
          "114:       hive -e \"CREATE DATABASE IF NOT EXISTS \"$system_database",
          "115:       hive --database $system_database -f ${OUTPUT_FORDER}/create_hive_tables_for_system_cubes.sql  || { exit 1; }",
          "116:   fi",
          "118:   $KYLIN_HOME/bin/metastore.sh restore ${OUTPUT_FORDER}",
          "120:   #refresh signature",
          "121:   $KYLIN_HOME/bin/kylin.sh org.apache.kylin.cube.cli.CubeSignatureRefresher ${SC_NAME_1},${SC_NAME_2},${SC_NAME_3},${SC_NAME_4},${SC_NAME_5}",
          "125:     #add a crontab job",
          "126:     echo \"add to a crontab job\"",
          "128:     CRONTAB_FILE=$KYLIN_HOME/crontabJob",
          "129:      crontab -l >> ${CRONTAB_FILE}",
          "130:  cat <<-EOF >> ${CRONTAB_FILE}",
          "131:     0 */2 * * * sh ${KYLIN_HOME}/bin/build-incremental-cube.sh ${SC_NAME_1} 3600000 1200000",
          "132:     20 */2 * * * sh ${KYLIN_HOME}/bin/build-incremental-cube.sh ${SC_NAME_2} 3600000 1200000",
          "133:     40 */4 * * * sh ${KYLIN_HOME}/bin/build-incremental-cube.sh ${SC_NAME_3} 3600000 1200000",
          "134:     30 */4 * * * sh ${KYLIN_HOME}/bin/build-incremental-cube.sh ${SC_NAME_4} 3600000 1200000",
          "135:     50 */12 * * * sh ${KYLIN_HOME}/bin/build-incremental-cube.sh ${SC_NAME_5} 3600000 1200000",
          "136:  EOF",
          "137:     crontab ${CRONTAB_FILE}",
          "138:     rm ${CRONTAB_FILE}",
          "",
          "[Added Lines]",
          "87:         sh $build_incremental_cube ${SC_NAME_1} ${BUILD_INTERVAL} ${BUILD_DELAY}",
          "88:         sh $build_incremental_cube ${SC_NAME_2} ${BUILD_INTERVAL} ${BUILD_DELAY}",
          "89:         sh $build_incremental_cube ${SC_NAME_3} ${BUILD_INTERVAL} ${BUILD_DELAY}",
          "90:         sh $build_incremental_cube ${SC_NAME_4} ${BUILD_INTERVAL} ${BUILD_DELAY}",
          "91:         sh $build_incremental_cube ${SC_NAME_5} ${BUILD_INTERVAL} ${BUILD_DELAY}",
          "93:        echo \"Please setup system cube first.\"",
          "94:       exit 1",
          "98:     #creat SCSinkTools.json",
          "99:     SINK_TOOLS_FILE=$KYLIN_HOME/SCSinkTools.json",
          "101:     echo \"setup system cubes\"",
          "103:     rm -rf $SINK_TOOLS_FILE $OUTPUT_FORDER",
          "105: cat <<-EOF > ${SINK_TOOLS_FILE}",
          "106: [",
          "107:   {",
          "108:      \"sink\": \"hive\",",
          "109:      \"storage_type\": 4,",
          "110:      \"cube_desc_override_properties\": {",
          "111:        \"kylin.cube.max-building-segments\": \"1\"",
          "112:      }",
          "113:   }",
          "114: ]",
          "115: EOF",
          "121:     hive_client_mode=`bash ${KYLIN_HOME}/bin/get-properties.sh kylin.source.hive.client`",
          "128:     # 'create database' failed will not exit when donot have permission to create database;",
          "129:     sed -i -e 's/CREATE DATABASE /-- CREATE DATABASE /g' ${OUTPUT_FORDER}/create_hive_tables_for_system_cubes.sql",
          "131:     if [ \"${hive_client_mode}\" == \"beeline\" ]",
          "132:     then",
          "133:         beeline_params=`bash ${KYLIN_HOME}/bin/get-properties.sh kylin.source.hive.beeline-params`",
          "134:         beeline ${beeline_params} -e \"CREATE DATABASE IF NOT EXISTS \"$system_database",
          "136:         hive2_url=`expr match \"${beeline_params}\" '.*\\(hive2:.*:[0-9]\\{4,6\\}\\/\\)'`",
          "137:         if [ -z ${hive2_url} ]; then",
          "138:             hive2_url=`expr match \"${beeline_params}\" '.*\\(hive2:.*:[0-9]\\{4,6\\}\\)'`",
          "139:             beeline_params=${beeline_params/${hive2_url}/${hive2_url}/${system_database}}",
          "140:         else",
          "141:             beeline_params=${beeline_params/${hive2_url}/${hive2_url}${system_database}}",
          "142:         fi",
          "144:         beeline ${beeline_params} -f ${OUTPUT_FORDER}/create_hive_tables_for_system_cubes.sql  || { exit 1; }",
          "145:     else",
          "146:         hive -e \"CREATE DATABASE IF NOT EXISTS \"$system_database",
          "147:         hive --database $system_database -f ${OUTPUT_FORDER}/create_hive_tables_for_system_cubes.sql  || { exit 1; }",
          "148:     fi",
          "150:     $KYLIN_HOME/bin/metastore.sh restore ${OUTPUT_FORDER}",
          "152:     #refresh signature",
          "153:     $KYLIN_HOME/bin/kylin.sh org.apache.kylin.cube.cli.CubeSignatureRefresher ${SC_NAME_1},${SC_NAME_2},${SC_NAME_3},${SC_NAME_4},${SC_NAME_5}",
          "157:     #check exists",
          "158:     cron_count=$(crontab -l | grep \"${KYLIN_METRICS_PREFIX}_HIVE_METRICS\" | wc -l)",
          "159:     if [ $cron_count -eq 5 ]",
          "160:     then",
          "161:         echo `setColor 33 \"system cube already exists in crontab\"`",
          "162:         exit 0",
          "163:     else",
          "164:         #add a crontab job",
          "165:         echo \"add to a crontab job\"",
          "166:         authorization",
          "167:         if [[ $? == 1 ]]",
          "168:         then",
          "169:             echo \"add to a crontab job exit.\"",
          "170:             exit 0",
          "171:         else",
          "172:             CRONTAB_FILE=$KYLIN_HOME/crontabJob",
          "173:             crontab -l >> ${CRONTAB_FILE}",
          "175: cat <<-EOF >> ${CRONTAB_FILE}",
          "176: 0 */2 * * * sh $build_incremental_cube ${SC_NAME_1} 3600000 1200000",
          "177: 20 */2 * * * sh $build_incremental_cube ${SC_NAME_2} 3600000 1200000",
          "178: 40 */4 * * * sh $build_incremental_cube ${SC_NAME_3} 3600000 1200000",
          "179: 30 */4 * * * sh $build_incremental_cube ${SC_NAME_4} 3600000 1200000",
          "180: 50 */12 * * * sh $build_incremental_cube ${SC_NAME_5} 3600000 1200000",
          "181: EOF",
          "182:             crontab ${CRONTAB_FILE}",
          "183:             rm ${CRONTAB_FILE}",
          "184:             echo \"add to a crontab job successful.\"",
          "185:         fi",
          "186:     fi",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ec962036bd84cff9934ca28ba5d859683f0307d6",
      "candidate_info": {
        "commit_hash": "ec962036bd84cff9934ca28ba5d859683f0307d6",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/ec962036bd84cff9934ca28ba5d859683f0307d6",
        "files": [
          "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "server-base/src/main/java/org/apache/kylin/rest/controller/AdminController.java"
        ],
        "message": "KYLIN-4355 add ut\n\n(cherry picked from commit faa15ad8b13f6ccf9161b6bb59af84f29b9bf958)",
        "before_after_code_files": [
          "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "server-base/src/main/java/org/apache/kylin/rest/controller/AdminController.java||server-base/src/main/java/org/apache/kylin/rest/controller/AdminController.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [
            "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java"
          ],
          "candidate": [
            "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java"
          ]
        }
      },
      "candidate_diff": {
        "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java": [
          "File: core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java -> core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "2282:         return Boolean.parseBoolean(getOptional(\"kylin.web.set-config-enable\", FALSE));",
          "2283:     }",
          "2285:     public String getPropertiesWhiteList() {",
          "2286:         return getOptional(\"kylin.web.properties.whitelist\", \"kylin.web.timezone,kylin.query.cache-enabled,kylin.env,\"",
          "2287:                 + \"kylin.web.hive-limit,kylin.storage.default,\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2288:     public String getPropertiesWhiteListForModification() {",
          "2289:         return getOptional(\"kylin.web.properties.whitelist\", \"kylin.query.cache-enabled\");",
          "2290:     }",
          "",
          "---------------"
        ],
        "server-base/src/main/java/org/apache/kylin/rest/controller/AdminController.java||server-base/src/main/java/org/apache/kylin/rest/controller/AdminController.java": [
          "File: server-base/src/main/java/org/apache/kylin/rest/controller/AdminController.java -> server-base/src/main/java/org/apache/kylin/rest/controller/AdminController.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import java.io.IOException;",
          "22: import java.io.UnsupportedEncodingException;",
          "24: import org.apache.commons.configuration.ConfigurationException;",
          "25: import org.apache.kylin.common.KylinConfig;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: import java.util.Arrays;",
          "24: import java.util.HashSet;",
          "25: import java.util.Set;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51: @RequestMapping(value = \"/admin\")",
          "52: public class AdminController extends BasicController {",
          "54:     @Autowired",
          "55:     @Qualifier(\"adminService\")",
          "56:     private AdminService adminService;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57:     private Set<String> propertiesWhiteList = new HashSet<>();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "128:         adminService.cleanupStorage();",
          "129:     }",
          "132:     public void updateKylinConfig(@RequestBody UpdateConfigRequest updateConfigRequest) {",
          "134:             throw new BadRequestException(\"Update configuration from API is not allowed.\");",
          "135:         }",
          "136:         adminService.updateConfig(updateConfigRequest.getKey(), updateConfigRequest.getValue());",
          "",
          "[Removed Lines]",
          "131:     @RequestMapping(value = \"/config\", method = { RequestMethod.PUT }, produces = { \"application/json\" })",
          "133:         if (!adminService.configWritableStatus()) {",
          "",
          "[Added Lines]",
          "136:     @RequestMapping(value = \"/config\", method = {RequestMethod.PUT}, produces = {\"application/json\"})",
          "138:         if (propertiesWhiteList.isEmpty()) {",
          "139:             propertiesWhiteList.addAll(Arrays.asList(KylinConfig.getInstanceFromEnv().getPropertiesWhiteListForModification().split(\",\")));",
          "140:         }",
          "141:         if (!adminService.configWritableStatus() && !propertiesWhiteList.contains(updateConfigRequest.getKey())) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}