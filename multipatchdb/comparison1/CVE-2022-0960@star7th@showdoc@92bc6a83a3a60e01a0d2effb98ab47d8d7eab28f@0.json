{
  "cve_id": "CVE-2022-0960",
  "cve_desc": "Stored XSS viva .properties file upload in GitHub repository star7th/showdoc prior to 2.10.4.",
  "repo": "star7th/showdoc",
  "patch_hash": "92bc6a83a3a60e01a0d2effb98ab47d8d7eab28f",
  "patch_info": {
    "commit_hash": "92bc6a83a3a60e01a0d2effb98ab47d8d7eab28f",
    "repo": "star7th/showdoc",
    "commit_url": "https://github.com/star7th/showdoc/commit/92bc6a83a3a60e01a0d2effb98ab47d8d7eab28f",
    "files": [
      "server/Application/Api/Model/AttachmentModel.class.php"
    ],
    "message": "file upload bug",
    "before_after_code_files": [
      "server/Application/Api/Model/AttachmentModel.class.php||server/Application/Api/Model/AttachmentModel.class.php"
    ]
  },
  "patch_diff": {
    "server/Application/Api/Model/AttachmentModel.class.php||server/Application/Api/Model/AttachmentModel.class.php": [
      "File: server/Application/Api/Model/AttachmentModel.class.php -> server/Application/Api/Model/AttachmentModel.class.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "324:  public function isAllowedFilename($filename){",
      "325:   $allow_array = array(",
      "326:    '.jpg','.jpeg','.png','.bmp','.gif','.ico','.webp',",
      "328:    '.mov','.webmv','.flac','.mkv',",
      "330:    '.pdf','.ofd','.swf','.epub','.xps',",
      "332:    '.ppt','.pptx','.xls','.xlsx','.txt','.psd','.csv',",
      "334:    ) ;",
      "336:   $ext = strtolower(substr($filename,strripos($filename,'.')) ); //\u83b7\u53d6\u6587\u4ef6\u6269\u5c55\u540d\uff08\u8f6c\u4e3a\u5c0f\u5199\u540e\uff09",
      "",
      "[Removed Lines]",
      "327:    '.mp3','.wav','.m4a','.ogg','.webma','.mp4','.flv',",
      "329:    '.zip','.tar','.gz','.tgz','.ipa','.apk','.rar','.iso','.bz2','.epub',",
      "331:    '.doc','.docx','.odt','.rtf','.docm','.dotm','.dot','.dotx','.wps',",
      "333:    '.cer','.ppt','.pub','.properties','.json','.css',",
      "",
      "[Added Lines]",
      "327:    '.mp3','.wav','.mp4',",
      "329:    '.zip','.tar','.gz','.tgz','.ipa','.apk','.rar','.iso',",
      "331:    '.doc','.docx','.wps',",
      "333:    '.cer','.ppt','.pub','.json','.css',",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "afa3cacc8c54d2018e41499c64cab1b575179059",
      "candidate_info": {
        "commit_hash": "afa3cacc8c54d2018e41499c64cab1b575179059",
        "repo": "star7th/showdoc",
        "commit_url": "https://github.com/star7th/showdoc/commit/afa3cacc8c54d2018e41499c64cab1b575179059",
        "files": [
          "server/Application/Api/Model/AttachmentModel.class.php"
        ],
        "message": "bug",
        "before_after_code_files": [
          "server/Application/Api/Model/AttachmentModel.class.php||server/Application/Api/Model/AttachmentModel.class.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "server/Application/Api/Model/AttachmentModel.class.php||server/Application/Api/Model/AttachmentModel.class.php"
          ],
          "candidate": [
            "server/Application/Api/Model/AttachmentModel.class.php||server/Application/Api/Model/AttachmentModel.class.php"
          ]
        }
      },
      "candidate_diff": {
        "server/Application/Api/Model/AttachmentModel.class.php||server/Application/Api/Model/AttachmentModel.class.php": [
          "File: server/Application/Api/Model/AttachmentModel.class.php -> server/Application/Api/Model/AttachmentModel.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "328:    '.mov','.webmv','.m3u8a','.flac','.mkv',",
          "329:    '.zip','.tar','.gz','.tgz','.ipa','.apk','.rar','.iso','.bz2','.epub',",
          "330:    '.pdf','.ofd','.swf','.epub','.xps',",
          "332:    '.ppt','.pptx','.xls','.xlsx','.txt','.psd','.csv',",
          "333:    '.cer','.ppt','.pub','.properties','.json','.css',",
          "334:    ) ;",
          "",
          "[Removed Lines]",
          "331:    '.doc','.docx','.odt','.rtf','.docm','.dotm','.dot','.dotx','.wps','.wpt',",
          "",
          "[Added Lines]",
          "331:    '.doc','.docx','.odt','.rtf','.docm','.dotm','.dot','.dotx','.wps',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3caa32334db0c277b84e993eaca2036f5d1dbef8",
      "candidate_info": {
        "commit_hash": "3caa32334db0c277b84e993eaca2036f5d1dbef8",
        "repo": "star7th/showdoc",
        "commit_url": "https://github.com/star7th/showdoc/commit/3caa32334db0c277b84e993eaca2036f5d1dbef8",
        "files": [
          "server/Application/Api/Model/AttachmentModel.class.php"
        ],
        "message": "Upload file vulnerability",
        "before_after_code_files": [
          "server/Application/Api/Model/AttachmentModel.class.php||server/Application/Api/Model/AttachmentModel.class.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "server/Application/Api/Model/AttachmentModel.class.php||server/Application/Api/Model/AttachmentModel.class.php"
          ],
          "candidate": [
            "server/Application/Api/Model/AttachmentModel.class.php||server/Application/Api/Model/AttachmentModel.class.php"
          ]
        }
      },
      "candidate_diff": {
        "server/Application/Api/Model/AttachmentModel.class.php||server/Application/Api/Model/AttachmentModel.class.php": [
          "File: server/Application/Api/Model/AttachmentModel.class.php -> server/Application/Api/Model/AttachmentModel.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:  }",
          "58:   $uploadFile = $_files[$file_key] ;",
          "61:    return false;",
          "62:   }",
          "",
          "[Removed Lines]",
          "57:  public function upload($_files , $file_key , $uid , $item_id = 0  , $page_id = 0  ){",
          "60:   if( !$this->isAllowedFilename($_files[$file_key]['name']) ){",
          "",
          "[Added Lines]",
          "57:  public function upload($_files , $file_key , $uid , $item_id = 0  , $page_id = 0 , $check_filename = true  ){",
          "60:   if( $check_filename && !$this->isAllowedFilename($_files[$file_key]['name']) ){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "324:  public function isAllowedFilename($filename){",
          "325:   $allow_array = array(",
          "326:    '.jpg','.jpeg','.png','.bmp','.gif','.ico','.webp',",
          "329:    '.zip','.tar','.gz','.tgz','.ipa','.apk','.rar','.iso',",
          "332:    '.ppt','.pptx','.xls','.xlsx','.txt','.psd','.csv',",
          "333:    '.cer','.ppt','.pub','.json','.css',",
          "336:   $ext = strtolower(substr($filename,strripos($filename,'.')) ); //\u83b7\u53d6\u6587\u4ef6\u6269\u5c55\u540d\uff08\u8f6c\u4e3a\u5c0f\u5199\u540e\uff09",
          "337:   if(in_array( $ext , $allow_array ) ){",
          "",
          "[Removed Lines]",
          "327:    '.mp3','.wav','.mp4',",
          "328:    '.mov','.webmv','.flac','.mkv',",
          "330:    '.pdf','.ofd','.swf','.epub','.xps',",
          "331:    '.doc','.docx','.wps',",
          "334:    ) ;",
          "",
          "[Added Lines]",
          "327:    '.mp3','.wav','.mp4','.mov','.flac','.mkv',",
          "329:    '.pdf','.epub','.xps','.doc','.docx','.wps',",
          "332:   ) ;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "237ac6d43bf3728bf3587c486a23b4a48ea7acb3",
      "candidate_info": {
        "commit_hash": "237ac6d43bf3728bf3587c486a23b4a48ea7acb3",
        "repo": "star7th/showdoc",
        "commit_url": "https://github.com/star7th/showdoc/commit/237ac6d43bf3728bf3587c486a23b4a48ea7acb3",
        "files": [
          "server/Application/Api/Controller/AttachmentController.class.php",
          "server/Application/Api/Model/AttachmentModel.class.php"
        ],
        "message": "file upload bug",
        "before_after_code_files": [
          "server/Application/Api/Controller/AttachmentController.class.php||server/Application/Api/Controller/AttachmentController.class.php",
          "server/Application/Api/Model/AttachmentModel.class.php||server/Application/Api/Model/AttachmentModel.class.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "server/Application/Api/Model/AttachmentModel.class.php||server/Application/Api/Model/AttachmentModel.class.php"
          ],
          "candidate": [
            "server/Application/Api/Model/AttachmentModel.class.php||server/Application/Api/Model/AttachmentModel.class.php"
          ]
        }
      },
      "candidate_diff": {
        "server/Application/Api/Controller/AttachmentController.class.php||server/Application/Api/Controller/AttachmentController.class.php": [
          "File: server/Application/Api/Controller/AttachmentController.class.php -> server/Application/Api/Controller/AttachmentController.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:            return false;",
          "80:         }",
          "83:             return false;",
          "84:         }",
          "",
          "[Removed Lines]",
          "82:         if(D(\"Attachment\")->isDangerFilename($_FILES['editormd-image-file']['name'])){",
          "",
          "[Added Lines]",
          "82:         if(!D(\"Attachment\")->isAllowedFilename($_FILES['editormd-image-file']['name'])){",
          "83:             $message = \"\u4e0d\u652f\u6301\u4e0a\u4f20\u8be5\u6587\u4ef6\u7c7b\u578b\u3002\u5982\u6709\u9700\u8981\u8bf7\u8054\u7cfb\u7f51\u7ad9\u7ba1\u7406\u5458\" ;",
          "84:             echo json_encode(array(\"message\"=>$message,\"success\"=>0));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "109:            return false;",
          "110:         }",
          "114:             return false;",
          "115:         }",
          "",
          "[Removed Lines]",
          "112:         if(D(\"Attachment\")->isDangerFilename($uploadFile['name'])){",
          "113:             $this->sendError(10100,'\u4e0d\u652f\u6301\u6b64\u6587\u4ef6\u7c7b\u578b');",
          "",
          "[Added Lines]",
          "114:         if(!D(\"Attachment\")->isAllowedFilename($uploadFile['name'])){",
          "115:             $this->sendError(10101,'\u4e0d\u652f\u6301\u4e0a\u4f20\u8be5\u6587\u4ef6\u7c7b\u578b\u3002\u5982\u6709\u9700\u8981\u8bf7\u8054\u7cfb\u7f51\u7ad9\u7ba1\u7406\u5458');",
          "",
          "---------------"
        ],
        "server/Application/Api/Model/AttachmentModel.class.php||server/Application/Api/Model/AttachmentModel.class.php": [
          "File: server/Application/Api/Model/AttachmentModel.class.php -> server/Application/Api/Model/AttachmentModel.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:  public function upload($_files , $file_key , $uid , $item_id = 0  , $page_id = 0  ){",
          "58:   $uploadFile = $_files[$file_key] ;",
          "61:    return false;",
          "62:   }",
          "",
          "[Removed Lines]",
          "60:   if($this->isDangerFilename($uploadFile['name'])){",
          "",
          "[Added Lines]",
          "60:   if( !$this->isAllowedFilename($_files[$file_key]['name']) ){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "319:   return false;",
          "320:  }",
          "324: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "324:  public function isAllowedFilename($filename){",
          "325:   $allow_array = array(",
          "326:    '.jpg','.jpeg','.png','.bmp','.gif','.ico','.webp',",
          "327:    '.mp3','.wav','.m4a','.ogg','.webma','.mp4','.flv',",
          "328:    '.mov','.webmv','.m3u8a','.flac','.mkv',",
          "329:    '.zip','.tar','.gz','.tgz','.ipa','.apk','.rar','.iso','.bz2','.epub',",
          "330:    '.pdf','.ofd','.swf','.epub','.xps',",
          "331:    '.doc','.docx','.odt','.rtf','.docm','.dotm','.dot','.dotx','.wps','.wpt',",
          "332:    '.ppt','.pptx','.xls','.xlsx','.txt','.md','.psd','.csv',",
          "333:    '.cer','.ppt','.pub','.properties','.json','.css',",
          "334:    ) ;",
          "336:   $ext = strtolower(substr($filename,strripos($filename,'.')) ); //\u83b7\u53d6\u6587\u4ef6\u6269\u5c55\u540d\uff08\u8f6c\u4e3a\u5c0f\u5199\u540e\uff09",
          "337:   if(in_array( $ext , $allow_array ) ){",
          "338:    return true ;",
          "339:   }",
          "340:   return false;",
          "341:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8f2d1246f4fb068d813ff43b09aa315e7cc7063f",
      "candidate_info": {
        "commit_hash": "8f2d1246f4fb068d813ff43b09aa315e7cc7063f",
        "repo": "star7th/showdoc",
        "commit_url": "https://github.com/star7th/showdoc/commit/8f2d1246f4fb068d813ff43b09aa315e7cc7063f",
        "files": [
          "server/Application/Api/Model/AttachmentModel.class.php",
          "web_src/src/components/admin/setting/Index.vue",
          "web_src/static/lang/en.js",
          "web_src/static/lang/zh-CN.js"
        ],
        "message": "Support S3 storage / \u652f\u6301S3\u5b58\u50a8",
        "before_after_code_files": [
          "server/Application/Api/Model/AttachmentModel.class.php||server/Application/Api/Model/AttachmentModel.class.php",
          "web_src/src/components/admin/setting/Index.vue||web_src/src/components/admin/setting/Index.vue",
          "web_src/static/lang/en.js||web_src/static/lang/en.js",
          "web_src/static/lang/zh-CN.js||web_src/static/lang/zh-CN.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "server/Application/Api/Model/AttachmentModel.class.php||server/Application/Api/Model/AttachmentModel.class.php"
          ],
          "candidate": [
            "server/Application/Api/Model/AttachmentModel.class.php||server/Application/Api/Model/AttachmentModel.class.php"
          ]
        }
      },
      "candidate_diff": {
        "server/Application/Api/Model/AttachmentModel.class.php||server/Application/Api/Model/AttachmentModel.class.php": [
          "File: server/Application/Api/Model/AttachmentModel.class.php -> server/Application/Api/Model/AttachmentModel.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?php",
          "2: namespace Api\\Model;",
          "3: use Api\\Model\\BaseModel;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: use Aws\\S3\\S3Client;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44:   if (file_exists($file_path)) {",
          "45:    @unlink($file_path);",
          "46:   }",
          "47:   D(\"UploadFile\")->where(\" file_id = '$file_id' \")->delete();",
          "48:   D(\"FilePage\")->where(\" file_id = '$file_id' \")->delete();",
          "49:   return true ;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:   $this->deleteOss($real_url);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "126:   return false;",
          "127:  }",
          "130:  public function uploadOss($uploadFile){",
          "131:   $oss_setting_json = D(\"Options\")->get(\"oss_setting\") ;",
          "132:   $oss_setting = json_decode($oss_setting_json,1);",
          "154:   }",
          "156:   if ($oss_setting && $oss_setting['oss_type'] && $oss_setting['oss_type'] == 'qiniu') {",
          "176:   }",
          "179:   if ($oss_setting && $oss_setting['oss_type'] && $oss_setting['oss_type'] == 'qcloud') {",
          "199:   }",
          "202:   return false ;",
          "203:  }",
          "205: }",
          "",
          "[Removed Lines]",
          "133:   if ($oss_setting && $oss_setting['oss_type'] && $oss_setting['oss_type'] == 'aliyun') {",
          "134:     $config = array(",
          "135:       \"key\" => $oss_setting['key'],",
          "136:       \"secret\"=> $oss_setting['secret'],",
          "137:       \"endpoint\"=> $oss_setting['endpoint'],",
          "138:       \"bucket\"=> $oss_setting['bucket'],",
          "139:     );",
          "141:     include_once VENDOR_PATH .'Alioss/autoload.php';",
          "142:     $oss = new \\OSS\\OssClient($config['key'] ,  $config['secret'] , $config['endpoint'] , false );",
          "143:     $ext = strrchr($uploadFile['name'], '.'); //\u83b7\u53d6\u6269\u5c55\u540d",
          "144:     $oss_path = \"showdoc_\".time().rand().$ext;",
          "145:     $res = $oss->uploadFile($config['bucket'],$oss_path,$uploadFile['tmp_name']);",
          "146:     if ($res && $res['info'] && $res['info']['url']) {",
          "147:       if ($oss_setting['domain']) {",
          "148:         return $oss_setting['protocol'] . '://'.$oss_setting['domain'].\"/\".$oss_path ;",
          "149:       }else{",
          "150:         return $res['info']['url'] ;",
          "151:       }",
          "153:     }",
          "157:     $config = array(",
          "158:           'rootPath' => './',",
          "159:           'saveName' => array('uniqid', ''),",
          "160:           'driver' => 'Qiniu',",
          "161:           'driverConfig' => array(",
          "162:               'accessKey' => $oss_setting['key'],",
          "163:               'secrectKey' => $oss_setting['secret'],",
          "164:               'protocol'=>$oss_setting['protocol'],",
          "165:               'domain' => $oss_setting['domain'],",
          "166:               'bucket' => $oss_setting['bucket'],",
          "167:             )",
          "168:      );",
          "170:      $Upload = new \\Think\\Upload($config);",
          "171:      $info = $Upload->uploadOne($uploadFile);",
          "172:      if ($info && $info['url']) {",
          "173:        return $info['url'] ;",
          "174:      }",
          "180:    $cosClient = new \\Qcloud\\Cos\\Client(array('region' => $oss_setting['region'],",
          "181:    'credentials'=> array(",
          "182:      'secretId'    => $oss_setting['secretId'],",
          "183:      'secretKey' => $oss_setting['secretKey']",
          "184:     )));",
          "185:     $ext = strrchr($uploadFile['name'], '.'); //\u83b7\u53d6\u6269\u5c55\u540d",
          "186:     $oss_path = \"showdoc_\".time().rand().rand().$ext;",
          "187:     $result = $cosClient->putObject(array(",
          "188:      'Bucket' => $oss_setting['bucket'],",
          "189:      'Key' => $oss_path ,",
          "190:      'Body' => fopen($uploadFile['tmp_name'], 'rb')));",
          "191:     if ($result && $result['ObjectURL']) {",
          "192:       if ($oss_setting['domain']) {",
          "193:         return $oss_setting['protocol'] . '://'.$oss_setting['domain'].\"/\".$oss_path ;",
          "194:       }else{",
          "195:         return $result['ObjectURL'] ;",
          "196:       }",
          "198:     }",
          "",
          "[Added Lines]",
          "137:   if ($oss_setting && $oss_setting['oss_type'] && ( $oss_setting['oss_type'] == 's3_storage' || $oss_setting['oss_type'] == 'aliyun') ) {",
          "139:    return $this->uploadS3($uploadFile , $oss_setting);",
          "145:    $oss_setting['endpoint'] = $this->getQiuniuEndpointByKey($oss_setting['key'] , $oss_setting['bucket']);",
          "146:    return $this->uploadS3($uploadFile , $oss_setting);",
          "148:   }",
          "150:   if ($oss_setting && $oss_setting['oss_type'] && $oss_setting['oss_type'] == 'qcloud') {",
          "152:    $oss_setting['endpoint'] = \"https://cos.{$oss_setting['region']}.myqcloud.com\";",
          "154:    $oss_setting['key'] = $oss_setting['secretId']  ;",
          "155:    $oss_setting['secret'] = $oss_setting['secretKey']  ;",
          "156:    return $this->uploadS3($uploadFile , $oss_setting);",
          "157:   }",
          "160:   return false ;",
          "161:  }",
          "165:  public function uploadS3($uploadFile , $oss_setting){",
          "167:   $ext = strrchr($uploadFile['name'], '.'); //\u83b7\u53d6\u6269\u5c55\u540d",
          "168:   $oss_path = \"showdoc_\".get_rand_str().$ext;",
          "171:   if(!strstr($oss_setting['endpoint'] , '://')){",
          "172:    $oss_setting['endpoint'] = 'https://'.$oss_setting['endpoint'] ;",
          "173:   }",
          "174:   $s3 = new S3Client([",
          "175:    'version' => 'latest',",
          "176:    'region'  => 'us-east-1',",
          "177:    'endpoint' => $oss_setting['endpoint'] ,",
          "178:    'use_virtual_hosted_style_endpoint' => true,",
          "179:    'credentials' => [",
          "180:      'key'    => $oss_setting['key'],",
          "181:      'secret' => $oss_setting['secret'],",
          "182:     ],",
          "183:   ]);",
          "186:   $resObj = $s3->putObject([",
          "187:    'Bucket' => $oss_setting['bucket'],",
          "188:    'Key'    => $oss_path,",
          "189:    'Body'   => fopen($uploadFile['tmp_name'], 'rb')",
          "190:   ]);",
          "191:   $res = (array)$resObj ;",
          "192:   $resultdata = current($res) ;// \u83b7\u53d6\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u503c",
          "194:   if ($res && $resultdata && $resultdata['ObjectURL']) {",
          "195:    if ($oss_setting['domain']) {",
          "196:      return $oss_setting['protocol'] . '://'.$oss_setting['domain'].\"/\".$oss_path ;",
          "197:    }else{",
          "198:      return $resultdata['ObjectURL'];",
          "199:    }",
          "201:   }else{",
          "203:   }",
          "204:  }",
          "207:  public function deleteOss($file_url){",
          "208:   $oss_setting_json = D(\"Options\")->get(\"oss_setting\") ;",
          "209:   $oss_setting = json_decode($oss_setting_json,1);",
          "210:   if ($oss_setting && $oss_setting['oss_type'] && ( $oss_setting['oss_type'] == 's3_storage' || $oss_setting['oss_type'] == 'aliyun') ) {",
          "211:    return $this->deleteS3($file_url , $oss_setting);",
          "212:   }",
          "214:   if ($oss_setting && $oss_setting['oss_type'] && $oss_setting['oss_type'] == 'qiniu') {",
          "215:    $oss_setting['endpoint'] = $this->getQiuniuEndpointByKey($oss_setting['key'] , $oss_setting['bucket']);",
          "216:    return $this->deleteS3($file_url , $oss_setting);",
          "223:    $oss_setting['endpoint'] = \"https://cos.{$oss_setting['region']}.myqcloud.com\";",
          "225:    $oss_setting['key'] = $oss_setting['secretId']  ;",
          "226:    $oss_setting['secret'] = $oss_setting['secretKey']  ;",
          "227:    return $this->deleteS3($file_url , $oss_setting);",
          "237:  public function deleteS3($file_url , $oss_setting){",
          "239:   $array = parse_url($file_url) ;",
          "240:   $file = $array['path'] ;  // \u5f97\u5230\u7684\u662furl\u4e2d\u7684\u8def\u5f84\uff0c\u4f8b\u5982/path_.txt",
          "241:   $file = substr($file, 1); // \u8981\u628a\u8def\u5f84\u524d\u7684/\u53bb\u6389\uff0c\u624d\u662f\u5f97\u5230\u6587\u4ef6\u540dpath_.txt",
          "243:   if(!strstr($oss_setting['endpoint'] , '://')){",
          "244:    $oss_setting['endpoint'] = 'https://'.$oss_setting['endpoint'] ;",
          "245:   }",
          "246:   $s3 = new S3Client([",
          "247:    'version' => 'latest',",
          "248:    'region'  => 'us-east-1',",
          "249:    'endpoint' => $oss_setting['endpoint'] ,",
          "250:    'use_virtual_hosted_style_endpoint' => true,",
          "251:    'credentials' => [",
          "252:      'key'    => $oss_setting['key'],",
          "253:      'secret' => $oss_setting['secret'],",
          "254:     ],",
          "255:   ]);",
          "258:   $resObj = $s3->deleteObject([",
          "259:    'Bucket' => $oss_setting['bucket'],",
          "260:    'Key'    => $file,",
          "261:   ]);",
          "262:   $res = (array)$resObj ;",
          "263:   $resultdata = current($res) ;// \u83b7\u53d6\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u503c",
          "265:  }",
          "269:  public function getQiuniuEndpointByKey($key,$bucket){",
          "271:   $query_url = \"https://api.qiniu.com/v2/query?ak={$key}&bucket={$bucket}\";",
          "272:   $res = http_post($query_url,array());",
          "274:   $array = json_decode($res,true) ;",
          "276:   if($array && $array['region'] ){",
          "277:    switch ($array['region']) {",
          "278:     case 'z0':",
          "279:      return 'https://s3-cn-east-1.qiniucs.com';",
          "280:      break;",
          "281:     case 'z1':",
          "282:      return 'https://s3-cn-north-1.qiniucs.com';",
          "283:      break;",
          "284:     case 'z2':",
          "285:      return 'https://s3-cn-south-1.qiniucs.com';",
          "286:      break;",
          "287:     case 'na0':",
          "288:      return 'https://s3-us-north-1.qiniucs.com';",
          "289:      break;",
          "290:     case 'as0':",
          "291:      return 'https://s3-ap-southeast-1.qiniucs.com';",
          "292:      break;",
          "293:     default:",
          "294:      return false;",
          "295:      break;",
          "296:    }",
          "298:   }",
          "300:  }",
          "",
          "---------------"
        ],
        "web_src/src/components/admin/setting/Index.vue||web_src/src/components/admin/setting/Index.vue": [
          "File: web_src/src/components/admin/setting/Index.vue -> web_src/src/components/admin/setting/Index.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "93:             <el-option :label=\"$t('aliyun')\" value=\"aliyun\"></el-option>",
          "94:             <el-option :label=\"$t('qiniu')\" value=\"qiniu\"></el-option>",
          "95:             <el-option :label=\"$t('qcloud')\" value=\"qcloud\"></el-option>",
          "96:           </el-select>",
          "97:         </el-form-item>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "96:             <el-option :label=\"$t('s3_storage')\" value=\"s3_storage\"></el-option>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "113:         <el-form-item",
          "114:           label=\"endpoint\"",
          "116:         >",
          "117:           <el-input",
          "118:             v-model=\"form.oss_setting.endpoint\"",
          "",
          "[Removed Lines]",
          "115:           v-if=\"form.oss_setting.oss_type == 'aliyun'\"",
          "",
          "[Added Lines]",
          "116:           v-if=\"",
          "117:             form.oss_setting.oss_type == 'aliyun' ||",
          "118:               form.oss_setting.oss_type == 's3_storage'",
          "119:           \"",
          "",
          "---------------"
        ],
        "web_src/static/lang/en.js||web_src/static/lang/en.js": [
          "File: web_src/static/lang/en.js -> web_src/static/lang/en.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "459:   site_url: 'Site url',",
          "460:   site_url_tips: 'Site url',",
          "463: }",
          "",
          "[Removed Lines]",
          "462:   about_site: 'About site'",
          "",
          "[Added Lines]",
          "462:   about_site: 'About site',",
          "464:   s3_storage: 'S3 Storage(Amazon S3/Minio and so on\uff09'",
          "",
          "---------------"
        ],
        "web_src/static/lang/zh-CN.js||web_src/static/lang/zh-CN.js": [
          "File: web_src/static/lang/zh-CN.js -> web_src/static/lang/zh-CN.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "440:   site_url_tips:",
          "441:     '\u4f60\u4e0a\u4f20\u56fe\u7247/\u9644\u4ef6\u7b49\u8d44\u6e90\u65f6\uff0c\u5176\u751f\u6210\u7684url\u81ea\u52a8\u7531\u7a0b\u5e8f\u5224\u65ad\u586b\u5145\u3002\u5982\u679c\u7a0b\u5e8f\u5224\u65ad\u9519\u8bef\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u624b\u52a8\u586b\u4e0a\u8bbf\u95eeurl\uff0c\u5f53\u4f60\u586b\u5199\u540e\uff0c\u4e0a\u4f20\u8d44\u6e90\u540e\u7684\u8bbf\u95eeurl\u5c06\u4f7f\u7528\u8fd9\u91cc\u586b\u5199\u7684\u503c\u4f5c\u4e3a\u8bbf\u95ee\u524d\u7f00\u3002\u586b\u5199\u793a\u4f8b\u503c\"https://www.showdoc.com.cn\"\u3002\u5982\u679c\u4f60\u4e0d\u7406\u89e3\u6b64\u503c\u542b\u4e49\uff0c\u8bf7\u9ed8\u8ba4\u7559\u7a7a\uff0c\u4e0d\u8981\u586b\u5199',",
          "444: }",
          "",
          "[Removed Lines]",
          "443:   about_site: '\u5173\u4e8e\u672c\u7ad9'",
          "",
          "[Added Lines]",
          "443:   about_site: '\u5173\u4e8e\u672c\u7ad9',",
          "445:   s3_storage: '\u901a\u7528S3\u5b58\u50a8(\u4e9a\u9a6c\u900as3/minio\u7b49\uff09'",
          "",
          "---------------"
        ]
      }
    }
  ]
}