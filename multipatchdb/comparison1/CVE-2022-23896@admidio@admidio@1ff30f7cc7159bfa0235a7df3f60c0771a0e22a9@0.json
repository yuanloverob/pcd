{
  "cve_id": "CVE-2022-23896",
  "cve_desc": "Admidio 4.1.2 version is affected by stored cross-site scripting (XSS).",
  "repo": "admidio/admidio",
  "patch_hash": "1ff30f7cc7159bfa0235a7df3f60c0771a0e22a9",
  "patch_info": {
    "commit_hash": "1ff30f7cc7159bfa0235a7df3f60c0771a0e22a9",
    "repo": "admidio/admidio",
    "commit_url": "https://github.com/admidio/admidio/commit/1ff30f7cc7159bfa0235a7df3f60c0771a0e22a9",
    "files": [
      "adm_program/modules/photos/photo_album_new.php",
      "adm_program/system/classes/TableAccess.php",
      "adm_program/system/classes/TablePhotos.php"
    ],
    "message": "fix database type identification",
    "before_after_code_files": [
      "adm_program/modules/photos/photo_album_new.php||adm_program/modules/photos/photo_album_new.php",
      "adm_program/system/classes/TableAccess.php||adm_program/system/classes/TableAccess.php",
      "adm_program/system/classes/TablePhotos.php||adm_program/system/classes/TablePhotos.php"
    ]
  },
  "patch_diff": {
    "adm_program/modules/photos/photo_album_new.php||adm_program/modules/photos/photo_album_new.php": [
      "File: adm_program/modules/photos/photo_album_new.php -> adm_program/modules/photos/photo_album_new.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "115: $form->addInput(",
      "116:     'pho_name',",
      "117:     $gL10n->get('PHO_ALBUM'),",
      "119:     array('property' => HtmlForm::FIELD_REQUIRED, 'maxLength' => 50)",
      "120: );",
      "121: subfolder(0, '', $photoAlbum, $photoAlbum->getValue('pho_id'));",
      "",
      "[Removed Lines]",
      "118:     $photoAlbum->getValue('pho_name'),",
      "",
      "[Added Lines]",
      "118:     $photoAlbum->getValue('pho_name', 'database'),",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "145: $form->addInput(",
      "146:     'pho_photographers',",
      "147:     $gL10n->get('PHO_PHOTOGRAPHER'),",
      "149:     array('maxLength' => 100)",
      "150: );",
      "151: $form->addMultilineTextInput(",
      "152:     'pho_description',",
      "153:     $gL10n->get('SYS_DESCRIPTION'),",
      "155:     6,",
      "156:     array('maxLength' => 4000)",
      "157: );",
      "",
      "[Removed Lines]",
      "148:     $photoAlbum->getValue('pho_photographers'),",
      "154:     $photoAlbum->getValue('pho_description'),",
      "",
      "[Added Lines]",
      "148:     $photoAlbum->getValue('pho_photographers', 'database'),",
      "154:     $photoAlbum->getValue('pho_description', 'database'),",
      "",
      "---------------"
    ],
    "adm_program/system/classes/TableAccess.php||adm_program/system/classes/TableAccess.php": [
      "File: adm_program/system/classes/TableAccess.php -> adm_program/system/classes/TableAccess.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "627:                     }",
      "628:                 }",
      "629:                 $this->columnsInfos[$columnName]['changed'] = false;",
      "631:                 $this->columnsInfos[$columnName]['null'] = $property['null'];",
      "632:                 $this->columnsInfos[$columnName]['key'] = $property['key'];",
      "633:                 $this->columnsInfos[$columnName]['serial'] = $property['serial'];",
      "",
      "[Removed Lines]",
      "630:                 $this->columnsInfos[$columnName]['type'] = $property['type'];",
      "",
      "[Added Lines]",
      "630:                 if(strpos($property['type'], '(') > 0) {",
      "631:                     $this->columnsInfos[$columnName]['type'] = substr($property['type'], 0, strpos($property['type'], '('));",
      "632:                 } else {",
      "633:                     $this->columnsInfos[$columnName]['type'] = $property['type'];",
      "634:                 }",
      "",
      "---------------"
    ],
    "adm_program/system/classes/TablePhotos.php||adm_program/system/classes/TablePhotos.php": [
      "File: adm_program/system/classes/TablePhotos.php -> adm_program/system/classes/TablePhotos.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "180:     public function getValue($columnName, $format = '')",
      "181:     {",
      "184:         if ($columnName === 'pho_description' && $format === 'html') {",
      "185:             $value = nl2br(parent::getValue($columnName));",
      "186:         } else {",
      "",
      "[Removed Lines]",
      "182:         global $gL10n;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "faa1afc3dbe5467b91e103917e199caff19f840e",
      "candidate_info": {
        "commit_hash": "faa1afc3dbe5467b91e103917e199caff19f840e",
        "repo": "admidio/admidio",
        "commit_url": "https://github.com/admidio/admidio/commit/faa1afc3dbe5467b91e103917e199caff19f840e",
        "files": [
          "adm_program/system/classes/ComponentUpdateSteps.php",
          "adm_program/system/classes/Database.php",
          "adm_program/system/classes/TableAccess.php"
        ],
        "message": "read column infos of connected tables too",
        "before_after_code_files": [
          "adm_program/system/classes/ComponentUpdateSteps.php||adm_program/system/classes/ComponentUpdateSteps.php",
          "adm_program/system/classes/Database.php||adm_program/system/classes/Database.php",
          "adm_program/system/classes/TableAccess.php||adm_program/system/classes/TableAccess.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "adm_program/system/classes/TableAccess.php||adm_program/system/classes/TableAccess.php"
          ],
          "candidate": [
            "adm_program/system/classes/TableAccess.php||adm_program/system/classes/TableAccess.php"
          ]
        }
      },
      "candidate_diff": {
        "adm_program/system/classes/ComponentUpdateSteps.php||adm_program/system/classes/ComponentUpdateSteps.php": [
          "File: adm_program/system/classes/ComponentUpdateSteps.php -> adm_program/system/classes/ComponentUpdateSteps.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "262:                 self::$db->queryPrepared($sql, array($uuid, $row[$tableUuid['column_id']]));",
          "263:             }",
          "264:         }",
          "265:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "266:      self::$db->initializeTableColumnProperties();",
          "",
          "---------------"
        ],
        "adm_program/system/classes/Database.php||adm_program/system/classes/Database.php": [
          "File: adm_program/system/classes/Database.php -> adm_program/system/classes/Database.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "533:         $this->dbStructure[$table] = $tableColumnsProperties;",
          "534:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "541:     public function initializeTableColumnProperties()",
          "542:     {",
          "543:         $this->dbStructure = array();",
          "544:     }",
          "",
          "---------------"
        ],
        "adm_program/system/classes/TableAccess.php||adm_program/system/classes/TableAccess.php": [
          "File: adm_program/system/classes/TableAccess.php -> adm_program/system/classes/TableAccess.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "140:         }",
          "141:         else",
          "142:         {",
          "160:         }",
          "161:     }",
          "",
          "[Removed Lines]",
          "144:             $tableColumnsProperties = $this->db->getTableColumnsProperties($this->tableName);",
          "146:             foreach ($tableColumnsProperties as $columnName => $property)",
          "147:             {",
          "148:                 $this->dbColumns[$columnName] = '';",
          "149:                 $this->columnsInfos[$columnName]['changed'] = false;",
          "150:                 $this->columnsInfos[$columnName]['type']    = $property['type'];",
          "151:                 $this->columnsInfos[$columnName]['null']    = $property['null'];",
          "152:                 $this->columnsInfos[$columnName]['key']     = $property['key'];",
          "153:                 $this->columnsInfos[$columnName]['serial']  = $property['serial'];",
          "155:                 if ($property['serial'])",
          "156:                 {",
          "157:                     $this->keyColumnName = $columnName;",
          "158:                 }",
          "159:             }",
          "",
          "[Added Lines]",
          "143:             $this->setColumnsInfos();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "368:                 foreach ($row as $key => $value) {",
          "372:                         $this->dbColumns[$key] = (bool) $value;",
          "376:                         $this->dbColumns[$key] = (int) $value;",
          "377:                     } else {",
          "378:                         $this->dbColumns[$key] = $value;",
          "",
          "[Removed Lines]",
          "369:                     if(str_starts_with($key, $this->columnPrefix . '_')",
          "370:                     && ($this->columnsInfos[$key]['type'] === 'boolean'",
          "371:                             || $this->columnsInfos[$key]['type'] === 'tinyint')) {",
          "373:                     } elseif(str_starts_with($key, $this->columnPrefix . '_')",
          "374:                     && ($this->columnsInfos[$key]['type'] === 'integer'",
          "375:                             || $this->columnsInfos[$key]['type'] === 'smallint')) {",
          "",
          "[Added Lines]",
          "353:                     if($this->columnsInfos[$key]['type'] === 'boolean'",
          "354:                             || $this->columnsInfos[$key]['type'] === 'tinyint') {",
          "356:                     } elseif($this->columnsInfos[$key]['type'] === 'integer'",
          "357:                             || $this->columnsInfos[$key]['type'] === 'smallint') {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "649:         $this->newRecord = empty($this->dbColumns[$this->keyColumnName]);",
          "650:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "638:     protected function setColumnsInfos()",
          "639:     {",
          "641:         $tables = array($this->tableName);",
          "643:         foreach($this->additionalTables as $values) {",
          "644:             $tables[] = $values['table'];",
          "645:         }",
          "647:         foreach($tables as $table) {",
          "648:             $tableColumnsProperties = $this->db->getTableColumnsProperties($table);",
          "650:             foreach ($tableColumnsProperties as $columnName => $property) {",
          "652:                 if (str_starts_with($columnName, $this->columnPrefix . '_')) {",
          "653:                     $this->dbColumns[$columnName] = '';",
          "655:                     if ($property['serial']) {",
          "656:                         $this->keyColumnName = $columnName;",
          "657:                     }",
          "658:                 }",
          "659:                 $this->columnsInfos[$columnName]['changed'] = false;",
          "660:                 $this->columnsInfos[$columnName]['type'] = $property['type'];",
          "661:                 $this->columnsInfos[$columnName]['null'] = $property['null'];",
          "662:                 $this->columnsInfos[$columnName]['key'] = $property['key'];",
          "663:                 $this->columnsInfos[$columnName]['serial'] = $property['serial'];",
          "664:             }",
          "665:         }",
          "666:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "666:             return false;",
          "667:         }",
          "670:         if ($checkValue && $newValue !== '')",
          "671:         {",
          "672:             switch ($this->columnsInfos[$columnName]['type'])",
          "673:             {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "688:             $GLOBALS['gLogger']->error($columnName.'::'.$this->tableName.'::'.$newValue.'::'.$this->columnsInfos[$columnName]['type']);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "380983e33108d8fb3a657a4110cdf8bef085bc88",
      "candidate_info": {
        "commit_hash": "380983e33108d8fb3a657a4110cdf8bef085bc88",
        "repo": "admidio/admidio",
        "commit_url": "https://github.com/admidio/admidio/commit/380983e33108d8fb3a657a4110cdf8bef085bc88",
        "files": [
          "adm_program/modules/photos/photo_album_new.php",
          "adm_program/system/classes/TableAccess.php",
          "adm_program/system/classes/TablePhotos.php"
        ],
        "message": "fix database type identification",
        "before_after_code_files": [
          "adm_program/modules/photos/photo_album_new.php||adm_program/modules/photos/photo_album_new.php",
          "adm_program/system/classes/TableAccess.php||adm_program/system/classes/TableAccess.php",
          "adm_program/system/classes/TablePhotos.php||adm_program/system/classes/TablePhotos.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "adm_program/modules/photos/photo_album_new.php||adm_program/modules/photos/photo_album_new.php",
            "adm_program/system/classes/TableAccess.php||adm_program/system/classes/TableAccess.php",
            "adm_program/system/classes/TablePhotos.php||adm_program/system/classes/TablePhotos.php"
          ],
          "candidate": [
            "adm_program/modules/photos/photo_album_new.php||adm_program/modules/photos/photo_album_new.php",
            "adm_program/system/classes/TableAccess.php||adm_program/system/classes/TableAccess.php",
            "adm_program/system/classes/TablePhotos.php||adm_program/system/classes/TablePhotos.php"
          ]
        }
      },
      "candidate_diff": {
        "adm_program/modules/photos/photo_album_new.php||adm_program/modules/photos/photo_album_new.php": [
          "File: adm_program/modules/photos/photo_album_new.php -> adm_program/modules/photos/photo_album_new.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "115: $form->addInput(",
          "116:     'pho_name',",
          "117:     $gL10n->get('PHO_ALBUM'),",
          "119:     array('property' => HtmlForm::FIELD_REQUIRED, 'maxLength' => 50)",
          "120: );",
          "121: subfolder(0, '', $photoAlbum, $photoAlbum->getValue('pho_id'));",
          "",
          "[Removed Lines]",
          "118:     $photoAlbum->getValue('pho_name'),",
          "",
          "[Added Lines]",
          "118:     $photoAlbum->getValue('pho_name', 'database'),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "145: $form->addInput(",
          "146:     'pho_photographers',",
          "147:     $gL10n->get('PHO_PHOTOGRAPHER'),",
          "149:     array('maxLength' => 100)",
          "150: );",
          "151: $form->addMultilineTextInput(",
          "152:     'pho_description',",
          "153:     $gL10n->get('SYS_DESCRIPTION'),",
          "155:     6,",
          "156:     array('maxLength' => 4000)",
          "157: );",
          "",
          "[Removed Lines]",
          "148:     $photoAlbum->getValue('pho_photographers'),",
          "154:     $photoAlbum->getValue('pho_description'),",
          "",
          "[Added Lines]",
          "148:     $photoAlbum->getValue('pho_photographers', 'database'),",
          "154:     $photoAlbum->getValue('pho_description', 'database'),",
          "",
          "---------------"
        ],
        "adm_program/system/classes/TableAccess.php||adm_program/system/classes/TableAccess.php": [
          "File: adm_program/system/classes/TableAccess.php -> adm_program/system/classes/TableAccess.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "627:                     }",
          "628:                 }",
          "629:                 $this->columnsInfos[$columnName]['changed'] = false;",
          "631:                 $this->columnsInfos[$columnName]['null'] = $property['null'];",
          "632:                 $this->columnsInfos[$columnName]['key'] = $property['key'];",
          "633:                 $this->columnsInfos[$columnName]['serial'] = $property['serial'];",
          "",
          "[Removed Lines]",
          "630:                 $this->columnsInfos[$columnName]['type'] = $property['type'];",
          "",
          "[Added Lines]",
          "630:                 if(strpos($property['type'], '(') > 0) {",
          "631:                     $this->columnsInfos[$columnName]['type'] = substr($property['type'], 0, strpos($property['type'], '('));",
          "632:                 } else {",
          "633:                     $this->columnsInfos[$columnName]['type'] = $property['type'];",
          "634:                 }",
          "",
          "---------------"
        ],
        "adm_program/system/classes/TablePhotos.php||adm_program/system/classes/TablePhotos.php": [
          "File: adm_program/system/classes/TablePhotos.php -> adm_program/system/classes/TablePhotos.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "180:     public function getValue($columnName, $format = '')",
          "181:     {",
          "184:         if ($columnName === 'pho_description' && $format === 'html') {",
          "185:             $value = nl2br(parent::getValue($columnName));",
          "186:         } else {",
          "",
          "[Removed Lines]",
          "182:         global $gL10n;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}