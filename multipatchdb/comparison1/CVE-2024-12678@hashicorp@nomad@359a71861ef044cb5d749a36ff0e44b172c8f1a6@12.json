{
  "cve_id": "CVE-2024-12678",
  "cve_desc": "Nomad Community and Nomad Enterprise (\"Nomad\") allocations are vulnerable to privilege escalation within a namespace through unredacted workload identity tokens. This vulnerability, identified as CVE-2024-12678, is fixed in Nomad Community Edition 1.9.4 and Nomad Enterprise 1.9.4, 1.8.8, and 1.7.16.",
  "repo": "hashicorp/nomad",
  "patch_hash": "359a71861ef044cb5d749a36ff0e44b172c8f1a6",
  "patch_info": {
    "commit_hash": "359a71861ef044cb5d749a36ff0e44b172c8f1a6",
    "repo": "hashicorp/nomad",
    "commit_url": "https://github.com/hashicorp/nomad/commit/359a71861ef044cb5d749a36ff0e44b172c8f1a6",
    "files": [
      ".changelog/24683.txt",
      "command/agent/node_endpoint.go",
      "nomad/alloc_endpoint.go",
      "nomad/structs/structs.go"
    ],
    "message": "Backport of sec: fix alloc workload identity namespace permission into release/1.9.x (#24685)\n\nCo-authored-by: Deniz Onur Duzgun <59659739+dduzgun-security@users.noreply.github.com>",
    "before_after_code_files": [
      "command/agent/node_endpoint.go||command/agent/node_endpoint.go",
      "nomad/alloc_endpoint.go||nomad/alloc_endpoint.go",
      "nomad/structs/structs.go||nomad/structs/structs.go"
    ]
  },
  "patch_diff": {
    "command/agent/node_endpoint.go||command/agent/node_endpoint.go": [
      "File: command/agent/node_endpoint.go -> command/agent/node_endpoint.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "105:   out.Allocs = make([]*structs.Allocation, 0)",
      "106:  }",
      "107:  for _, alloc := range out.Allocs {",
      "108:   alloc.SetEventDisplayMessages()",
      "109:  }",
      "110:  return out.Allocs, nil",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "108:   alloc = alloc.Sanitize()",
      "",
      "---------------"
    ],
    "nomad/alloc_endpoint.go||nomad/alloc_endpoint.go": [
      "File: nomad/alloc_endpoint.go -> nomad/alloc_endpoint.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "172:    }",
      "176:    if out != nil {",
      "178:     if !aclObj.AllowClientOp() && !allowNsOp(aclObj, out.Namespace) {",
      "179:      return structs.NewErrUnknownAllocation(args.AllocID)",
      "",
      "[Removed Lines]",
      "175:    reply.Alloc = out",
      "",
      "[Added Lines]",
      "176:     out = out.Sanitize()",
      "177:     reply.Alloc = out",
      "",
      "---------------"
    ],
    "nomad/structs/structs.go||nomad/structs/structs.go": [
      "File: nomad/structs/structs.go -> nomad/structs/structs.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "11199:  return a.ID",
      "11200: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "11205: func (a *Allocation) Sanitize() *Allocation {",
      "11206:  if a == nil {",
      "11207:   return nil",
      "11208:  }",
      "11210:  if a.SignedIdentities == nil {",
      "11211:   return a",
      "11212:  }",
      "11214:  clean := a.Copy()",
      "11215:  clean.SignedIdentities = nil",
      "11216:  return clean",
      "11217: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d198560e208f6a4c0b978fc10bfac67ad4231268",
      "candidate_info": {
        "commit_hash": "d198560e208f6a4c0b978fc10bfac67ad4231268",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/d198560e208f6a4c0b978fc10bfac67ad4231268",
        "files": [
          ".changelog/24540.txt",
          "command/agent/host/host.go",
          "command/agent/host/host_test.go",
          "website/content/docs/configuration/client.mdx",
          "website/content/docs/upgrade/upgrade-specific.mdx"
        ],
        "message": "backport of commit 368241dbf25e95a65751c24217fccce7f5931953 (#24543)\n\nCo-authored-by: Piotr Kazmierczak <470696+pkazmierczak@users.noreply.github.com>",
        "before_after_code_files": [
          "command/agent/host/host.go||command/agent/host/host.go",
          "command/agent/host/host_test.go||command/agent/host/host_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "command/agent/host/host.go||command/agent/host/host.go": [
          "File: command/agent/host/host.go -> command/agent/host/host.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "98: var DefaultEnvDenyList = []string{",
          "105: }",
          "",
          "[Removed Lines]",
          "99:  \"CONSUL_TOKEN\",",
          "100:  \"CONSUL_HTTP_TOKEN\",",
          "101:  \"VAULT_TOKEN\",",
          "102:  \"NOMAD_LICENSE\",",
          "103:  \"AWS_ACCESS_KEY_ID\", \"AWS_SECRET_ACCESS_KEY\", \"AWS_SESSION_TOKEN\",",
          "104:  \"GOOGLE_APPLICATION_CREDENTIALS\",",
          "",
          "[Added Lines]",
          "100:  \"CONSUL_TOKEN\", \"CONSUL_HTTP_TOKEN\", \"CONSUL_HTTP_TOKEN_FILE\", \"NOMAD_TOKEN\", \"VAULT_TOKEN\",",
          "102:  \"CONSUL_LICENSE\", \"NOMAD_LICENSE\", \"VAULT_LICENSE\",",
          "104:  \"CONSUL_LICENSE_PATH\", \"NOMAD_LICENSE_PATH\", \"VAULT_LICENSE_PATH\",",
          "106:  \"AWS_ACCESS_KEY_ID\", \"AWS_SECRET_ACCESS_KEY\", \"AWS_SESSION_TOKEN\", \"AWS_METADATA_URL\",",
          "108:  \"GOOGLE_APPLICATION_CREDENTIALS\", \"GOOGLE_OAUTH_ACCESS_TOKEN\",",
          "",
          "---------------"
        ],
        "command/agent/host/host_test.go||command/agent/host/host_test.go": [
          "File: command/agent/host/host_test.go -> command/agent/host/host_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:  t.Setenv(\"BOGUS_TOKEN\", \"foo\")",
          "26:  t.Setenv(\"BOGUS_SECRET\", \"foo\")",
          "27:  t.Setenv(\"ryanSECRETS\", \"foo\")",
          "29:  host, err := MakeHostData()",
          "30:  must.NoError(t, err)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28:  t.Setenv(\"CONSUL_LICENSE_PATH\", \"foo\")",
          "29:  t.Setenv(\"AWS_ACCESS_KEY_ID\", \"foo\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38:  must.Eq(t, \"<redacted>\", host.Environment[\"BOGUS_TOKEN\"])",
          "39:  must.Eq(t, \"<redacted>\", host.Environment[\"BOGUS_SECRET\"])",
          "40:  must.Eq(t, \"<redacted>\", host.Environment[\"ryanSECRETS\"])",
          "41: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43:  must.Eq(t, \"<redacted>\", host.Environment[\"CONSUL_LICENSE_PATH\"])",
          "44:  must.Eq(t, \"<redacted>\", host.Environment[\"AWS_ACCESS_KEY_ID\"])",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d584eb80575858d9c8ec291be7918f0935944e86",
      "candidate_info": {
        "commit_hash": "d584eb80575858d9c8ec291be7918f0935944e86",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/d584eb80575858d9c8ec291be7918f0935944e86",
        "files": [
          ".changelog/25441.txt",
          "command/agent/agent.go",
          "command/agent/agent_endpoint_test.go",
          "command/agent/agent_test.go",
          "nomad/leader_test.go",
          "nomad/server.go",
          "nomad/server_test.go"
        ],
        "message": "server: Validate config num schedulers is between 0 and num CPUs (#25457)\n\nbackport of commit 5a157eb1230f97152300912d954ba33d1e5125eb\n\nCo-authored-by: James Rasell <jrasell@users.noreply.github.com>",
        "before_after_code_files": [
          "command/agent/agent.go||command/agent/agent.go",
          "command/agent/agent_endpoint_test.go||command/agent/agent_endpoint_test.go",
          "command/agent/agent_test.go||command/agent/agent_test.go",
          "nomad/leader_test.go||nomad/leader_test.go",
          "nomad/server.go||nomad/server.go",
          "nomad/server_test.go||nomad/server_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "command/agent/agent.go||command/agent/agent.go": [
          "File: command/agent/agent.go -> command/agent/agent.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "617:  conf.KEKProviderConfigs = agentConfig.KEKProviders",
          "619:  return conf, nil",
          "620: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "623:  if conf.NumSchedulers < 0 || conf.NumSchedulers > runtime.NumCPU() {",
          "624:   return nil, fmt.Errorf(\"number of schedulers should be between 0 and %d\",",
          "625:    runtime.NumCPU())",
          "626:  }",
          "",
          "---------------"
        ],
        "command/agent/agent_endpoint_test.go||command/agent/agent_endpoint_test.go": [
          "File: command/agent/agent_endpoint_test.go -> command/agent/agent_endpoint_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "15:  \"net/url\"",
          "16:  \"os\"",
          "17:  \"reflect\"",
          "18:  \"strconv\"",
          "19:  \"strings\"",
          "20:  \"sync\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18:  \"runtime\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1715: func schedulerWorkerConfigTest_testCases() []scheduleWorkerConfigTest_workerRequestTest {",
          "1716:  forbidden := schedulerWorkerConfigTest_testExpect{",
          "1717:   expectedResponseCode: http.StatusForbidden,",
          "1718:   expectedResponse:     structs.ErrPermissionDenied.Error(),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1718:  numCPU := runtime.NumCPU()",
          "1720:  halfCPU := numCPU / 2",
          "1721:  if halfCPU == 0 {",
          "1722:   halfCPU = 1",
          "1723:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1727:  }",
          "1728:  success1 := schedulerWorkerConfigTest_testExpect{",
          "1729:   expectedResponseCode: http.StatusOK,",
          "1731:  }",
          "1733:  success2 := schedulerWorkerConfigTest_testExpect{",
          "1734:   expectedResponseCode: http.StatusOK,",
          "1736:  }",
          "1738:  return []scheduleWorkerConfigTest_workerRequestTest{",
          "",
          "[Removed Lines]",
          "1730:   expectedResponse:     &api.AgentSchedulerWorkerConfigResponse{EnabledSchedulers: []string{\"_core\", \"batch\"}, NumSchedulers: 8},",
          "1735:   expectedResponse:     &api.AgentSchedulerWorkerConfigResponse{EnabledSchedulers: []string{\"_core\", \"batch\"}, NumSchedulers: 9},",
          "",
          "[Added Lines]",
          "1739:   expectedResponse:     &api.AgentSchedulerWorkerConfigResponse{EnabledSchedulers: []string{\"_core\", \"batch\"}, NumSchedulers: numCPU},",
          "1743:   expectedResponse:     &api.AgentSchedulerWorkerConfigResponse{EnabledSchedulers: []string{\"_core\", \"batch\"}, NumSchedulers: halfCPU},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1791:    request: schedulerWorkerConfigTest_testRequest{",
          "1792:     verb:        http.MethodPost,",
          "1793:     aclToken:    \"\",",
          "1795:    },",
          "1796:    whenACLNotEnabled: success2,",
          "1797:    whenACLEnabled:    forbidden,",
          "",
          "[Removed Lines]",
          "1794:     requestBody: `{\"num_schedulers\":9,\"enabled_schedulers\":[\"_core\", \"batch\"]}`,",
          "",
          "[Added Lines]",
          "1802:     requestBody: fmt.Sprintf(`{\"num_schedulers\":%d,\"enabled_schedulers\":[\"_core\", \"batch\"]}`, halfCPU),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1801:    request: schedulerWorkerConfigTest_testRequest{",
          "1802:     verb:        http.MethodPut,",
          "1803:     aclToken:    \"\",",
          "1805:    },",
          "1806:    whenACLNotEnabled: success1,",
          "1807:    whenACLEnabled:    forbidden,",
          "",
          "[Removed Lines]",
          "1804:     requestBody: `{\"num_schedulers\":8,\"enabled_schedulers\":[\"_core\", \"batch\"]}`,",
          "",
          "[Added Lines]",
          "1812:     requestBody: fmt.Sprintf(`{\"num_schedulers\":%d,\"enabled_schedulers\":[\"_core\", \"batch\"]}`, numCPU),",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1811:    request: schedulerWorkerConfigTest_testRequest{",
          "1812:     verb:        http.MethodPost,",
          "1813:     aclToken:    \"node_write\",",
          "1815:    },",
          "1816:    whenACLNotEnabled: success2,",
          "1817:    whenACLEnabled:    forbidden,",
          "",
          "[Removed Lines]",
          "1814:     requestBody: `{\"num_schedulers\":9,\"enabled_schedulers\":[\"_core\", \"batch\"]}`,",
          "",
          "[Added Lines]",
          "1822:     requestBody: fmt.Sprintf(`{\"num_schedulers\":%d,\"enabled_schedulers\":[\"_core\", \"batch\"]}`, halfCPU),",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1821:    request: schedulerWorkerConfigTest_testRequest{",
          "1822:     verb:        http.MethodPut,",
          "1823:     aclToken:    \"node_write\",",
          "1825:    },",
          "1826:    whenACLNotEnabled: success1,",
          "1827:    whenACLEnabled:    forbidden,",
          "",
          "[Removed Lines]",
          "1824:     requestBody: `{\"num_schedulers\":8,\"enabled_schedulers\":[\"_core\", \"batch\"]}`,",
          "",
          "[Added Lines]",
          "1832:     requestBody: fmt.Sprintf(`{\"num_schedulers\":%d,\"enabled_schedulers\":[\"_core\", \"batch\"]}`, numCPU),",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1831:    request: schedulerWorkerConfigTest_testRequest{",
          "1832:     verb:        http.MethodPost,",
          "1833:     aclToken:    \"agent_write\",",
          "1835:    },",
          "1836:    whenACLNotEnabled: success2,",
          "1837:    whenACLEnabled:    success2,",
          "",
          "[Removed Lines]",
          "1834:     requestBody: `{\"num_schedulers\":9,\"enabled_schedulers\":[\"_core\", \"batch\"]}`,",
          "",
          "[Added Lines]",
          "1842:     requestBody: fmt.Sprintf(`{\"num_schedulers\":%d,\"enabled_schedulers\":[\"_core\", \"batch\"]}`, halfCPU),",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1841:    request: schedulerWorkerConfigTest_testRequest{",
          "1842:     verb:        http.MethodPut,",
          "1843:     aclToken:    \"agent_write\",",
          "1845:    },",
          "1846:    whenACLNotEnabled: success1,",
          "1847:    whenACLEnabled:    success1,",
          "",
          "[Removed Lines]",
          "1844:     requestBody: `{\"num_schedulers\":8,\"enabled_schedulers\":[\"_core\", \"batch\"]}`,",
          "",
          "[Added Lines]",
          "1852:     requestBody: fmt.Sprintf(`{\"num_schedulers\":%d,\"enabled_schedulers\":[\"_core\", \"batch\"]}`, numCPU),",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1906:    whenACLNotEnabled: invalidRequest,",
          "1907:    whenACLEnabled:    invalidRequest,",
          "1908:   },",
          "1909:  }",
          "1910: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1917:   {",
          "1918:    name: \"post with too many schedulers\",",
          "1919:    request: schedulerWorkerConfigTest_testRequest{",
          "1920:     verb:        http.MethodPost,",
          "1921:     aclToken:    \"agent_write\",",
          "1922:     requestBody: `{\"num_schedulers\":9223372036854775807,\"enabled_schedulers\":[\"_core\", \"batch\"]}`,",
          "1923:    },",
          "1924:    whenACLNotEnabled: invalidRequest,",
          "1925:    whenACLEnabled:    invalidRequest,",
          "1926:   },",
          "1927:   {",
          "1928:    name: \"put with too many schedulers\",",
          "1929:    request: schedulerWorkerConfigTest_testRequest{",
          "1930:     verb:        http.MethodPut,",
          "1931:     aclToken:    \"agent_write\",",
          "1932:     requestBody: `{\"num_schedulers\":9223372036854775807,\"enabled_schedulers\":[\"_core\", \"batch\"]}`,",
          "1933:    },",
          "1934:    whenACLNotEnabled: invalidRequest,",
          "1935:    whenACLEnabled:    invalidRequest,",
          "1936:   },",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1913:  ci.Parallel(t)",
          "1915:  configFn := func(c *Config) {",
          "1918:   c.Server.EnabledSchedulers = []string{\"_core\", \"batch\"}",
          "1919:   c.Client.Enabled = false",
          "1920:  }",
          "",
          "[Removed Lines]",
          "1916:   var numSchedulers = 8",
          "1917:   c.Server.NumSchedulers = &numSchedulers",
          "",
          "[Added Lines]",
          "1944:   c.Server.NumSchedulers = pointer.Of(runtime.NumCPU())",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1946:  ci.Parallel(t)",
          "1948:  configFn := func(c *Config) {",
          "1951:   c.Server.EnabledSchedulers = []string{\"_core\", \"batch\"}",
          "1952:   c.Client.Enabled = false",
          "1953:  }",
          "",
          "[Removed Lines]",
          "1949:   var numSchedulers = 8",
          "1950:   c.Server.NumSchedulers = &numSchedulers",
          "",
          "[Added Lines]",
          "1976:   c.Server.NumSchedulers = pointer.Of(runtime.NumCPU())",
          "",
          "---------------"
        ],
        "command/agent/agent_test.go||command/agent/agent_test.go": [
          "File: command/agent/agent_test.go -> command/agent/agent_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:  \"math\"",
          "9:  \"os\"",
          "10:  \"path/filepath\"",
          "11:  \"strings\"",
          "12:  \"testing\"",
          "13:  \"time\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11:  \"runtime\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "678:  }",
          "679: }",
          "681: func TestConvertClientConfig(t *testing.T) {",
          "682:  ci.Parallel(t)",
          "683:  cases := []struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "682: func Test_convertServerConfig_errors(t *testing.T) {",
          "683:  ci.Parallel(t)",
          "688:  overlayDefaultFunc := func(cb func(*Config)) *Config {",
          "689:   defaultConfig := DevConfig(nil)",
          "690:   if cb != nil {",
          "691:    cb(defaultConfig)",
          "692:   }",
          "693:   _ = defaultConfig.normalizeAddrs()",
          "694:   return defaultConfig",
          "695:  }",
          "697:  testCases := []struct {",
          "698:   name        string",
          "699:   inputConfig *Config",
          "700:   expectErr   bool",
          "701:  }{",
          "702:   {",
          "703:    name: \"num schedulers too big\",",
          "704:    inputConfig: overlayDefaultFunc(func(config *Config) {",
          "705:     config.Server.NumSchedulers = pointer.Of(1<<63 - 1)",
          "706:    }),",
          "707:    expectErr: true,",
          "708:   },",
          "709:   {",
          "710:    name: \"num schedulers negative\",",
          "711:    inputConfig: overlayDefaultFunc(func(config *Config) {",
          "712:     config.Server.NumSchedulers = pointer.Of(-100)",
          "713:    }),",
          "714:    expectErr: true,",
          "715:   },",
          "716:   {",
          "717:    name: \"valid\",",
          "718:    inputConfig: overlayDefaultFunc(func(config *Config) {",
          "719:     config.Server.NumSchedulers = pointer.Of(runtime.NumCPU())",
          "720:    }),",
          "721:    expectErr: false,",
          "722:   },",
          "723:  }",
          "725:  for _, tc := range testCases {",
          "726:   t.Run(tc.name, func(t *testing.T) {",
          "727:    _, actualErr := convertServerConfig(tc.inputConfig)",
          "728:    if tc.expectErr {",
          "729:     must.Error(t, actualErr)",
          "730:    } else {",
          "731:     must.NoError(t, actualErr)",
          "732:    }",
          "733:   })",
          "734:  }",
          "735: }",
          "",
          "---------------"
        ],
        "nomad/leader_test.go||nomad/leader_test.go": [
          "File: nomad/leader_test.go -> nomad/leader_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: import (",
          "7:  \"errors\"",
          "8:  \"fmt\"",
          "9:  \"sort\"",
          "10:  \"strconv\"",
          "11:  \"testing\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9:  \"runtime\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1512:  ci.Parallel(t)",
          "1514:  s1, cleanupS1 := TestServer(t, func(c *Config) {",
          "1516:  })",
          "1517:  defer cleanupS1()",
          "1518:  testutil.WaitForLeader(t, s1.RPC)",
          "1522:  checkPaused := func(count int) func() bool {",
          "",
          "[Removed Lines]",
          "1515:   c.NumSchedulers = 12",
          "1519:  require.Len(t, s1.workers, 12)",
          "",
          "[Added Lines]",
          "1516:   c.NumSchedulers = runtime.NumCPU()",
          "1520:  require.Len(t, s1.workers, runtime.NumCPU())",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1536:  }",
          "1541:  err := s1.revokeLeadership()",
          "1542:  require.NoError(t, err)",
          "",
          "[Removed Lines]",
          "1539:  require.Eventually(t, checkPaused(9), 1*time.Second, 10*time.Millisecond, \"scheduler workers did not pause within a second at leadership change\")",
          "",
          "[Added Lines]",
          "1540:  require.Eventually(t, checkPaused(3*runtime.NumCPU()/4), 1*time.Second, 10*time.Millisecond, \"scheduler workers did not pause within a second at leadership change\")",
          "",
          "---------------"
        ],
        "nomad/server.go||nomad/server.go": [
          "File: nomad/server.go -> nomad/server.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:  \"net/rpc\"",
          "15:  \"os\"",
          "16:  \"path/filepath\"",
          "17:  \"sort\"",
          "18:  \"strconv\"",
          "19:  \"strings\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17:  \"runtime\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1698:  return !swpa.IsValid()",
          "1699: }",
          "1704: func (swpa SchedulerWorkerPoolArgs) IsValid() bool {",
          "1707:   return false",
          "1708:  }",
          "",
          "[Removed Lines]",
          "1705:  if swpa.NumSchedulers < 0 {",
          "",
          "[Added Lines]",
          "1707:  if swpa.NumSchedulers < 0 || swpa.NumSchedulers > runtime.NumCPU() {",
          "",
          "---------------"
        ],
        "nomad/server_test.go||nomad/server_test.go": [
          "File: nomad/server_test.go -> nomad/server_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  \"context\"",
          "8:  \"fmt\"",
          "9:  \"path\"",
          "10:  \"strings\"",
          "11:  \"testing\"",
          "12:  \"time\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10:  \"runtime\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "597:  ci.Parallel(t)",
          "599:  s1, cleanupS1 := TestServer(t, func(c *Config) {",
          "601:  })",
          "602:  defer cleanupS1()",
          "604:  require.Equal(t, s1.config.NumSchedulers, len(s1.workers))",
          "606:  config := DefaultConfig()",
          "608:  require.NoError(t, s1.Reload(config))",
          "610:  time.Sleep(1 * time.Second)",
          "",
          "[Removed Lines]",
          "600:   c.NumSchedulers = 8",
          "607:  config.NumSchedulers = 4",
          "",
          "[Added Lines]",
          "601:   c.NumSchedulers = runtime.NumCPU()",
          "608:  config.NumSchedulers = runtime.NumCPU() / 2",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "07b3719dc232d91fa32a270e7c62ce18e6d94142",
      "candidate_info": {
        "commit_hash": "07b3719dc232d91fa32a270e7c62ce18e6d94142",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/07b3719dc232d91fa32a270e7c62ce18e6d94142",
        "files": [
          "go.mod",
          "go.sum"
        ],
        "message": "Backport of chore(deps): bump github.com/prometheus/common from 0.45.0 to 0.60.1 into release/1.9.x (#24428)\n\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:  github.com/opencontainers/runc v1.1.14",
          "115:  github.com/opencontainers/runtime-spec v1.2.0",
          "116:  github.com/posener/complete v1.2.3",
          "119:  github.com/rs/cors v1.8.3",
          "120:  github.com/ryanuber/columnize v2.1.2+incompatible",
          "121:  github.com/ryanuber/go-glob v1.0.0",
          "",
          "[Removed Lines]",
          "117:  github.com/prometheus/client_golang v1.18.0",
          "118:  github.com/prometheus/common v0.45.0",
          "",
          "[Added Lines]",
          "117:  github.com/prometheus/client_golang v1.20.4",
          "118:  github.com/prometheus/common v0.60.1",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "143: require (",
          "144:  cloud.google.com/go v0.110.8 // indirect",
          "147:  cloud.google.com/go/iam v1.1.2 // indirect",
          "148:  cloud.google.com/go/kms v1.15.2 // indirect",
          "149:  cloud.google.com/go/storage v1.30.1 // indirect",
          "",
          "[Removed Lines]",
          "145:  cloud.google.com/go/compute v1.23.0 // indirect",
          "146:  cloud.google.com/go/compute/metadata v0.2.3 // indirect",
          "",
          "[Added Lines]",
          "145:  cloud.google.com/go/compute/metadata v0.3.0 // indirect",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "182:  github.com/bmatcuk/doublestar v1.1.5 // indirect",
          "183:  github.com/boltdb/bolt v1.3.1 // indirect",
          "184:  github.com/cenkalti/backoff/v3 v3.2.2 // indirect",
          "186:  github.com/checkpoint-restore/go-criu/v5 v5.3.0 // indirect",
          "187:  github.com/cheggaaa/pb/v3 v3.0.5 // indirect",
          "188:  github.com/cilium/ebpf v0.7.0 // indirect",
          "",
          "[Removed Lines]",
          "185:  github.com/cespare/xxhash/v2 v2.2.0 // indirect",
          "",
          "[Added Lines]",
          "184:  github.com/cespare/xxhash/v2 v2.3.0 // indirect",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "243:  github.com/jmespath/go-jmespath v0.4.0 // indirect",
          "244:  github.com/joyent/triton-go v0.0.0-20190112182421-51ffac552869 // indirect",
          "245:  github.com/json-iterator/go v1.1.12 // indirect",
          "247:  github.com/kylelemons/godebug v1.1.0 // indirect",
          "248:  github.com/linode/linodego v0.7.1 // indirect",
          "249:  github.com/lufia/plan9stats v0.0.0-20211012122336-39d0f177ccd0 // indirect",
          "250:  github.com/mattn/go-isatty v0.0.20 // indirect",
          "251:  github.com/mattn/go-runewidth v0.0.12 // indirect",
          "253:  github.com/mitchellh/go-wordwrap v1.0.1 // indirect",
          "254:  github.com/moby/docker-image-spec v1.3.1 // indirect",
          "255:  github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect",
          "256:  github.com/modern-go/reflect2 v1.0.2 // indirect",
          "257:  github.com/morikuni/aec v1.0.0 // indirect",
          "258:  github.com/mrunalp/fileutils v0.5.1 // indirect",
          "259:  github.com/nicolai86/scaleway-sdk v1.10.2-0.20180628010248-798f60e20bb2 // indirect",
          "260:  github.com/oklog/run v1.1.0 // indirect",
          "261:  github.com/opencontainers/go-digest v1.0.0 // indirect",
          "",
          "[Removed Lines]",
          "246:  github.com/klauspost/compress v1.16.0 // indirect",
          "252:  github.com/matttproud/golang_protobuf_extensions/v2 v2.0.0 // indirect",
          "",
          "[Added Lines]",
          "245:  github.com/klauspost/compress v1.17.9 // indirect",
          "257:  github.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 // indirect",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "265:  github.com/pkg/errors v0.9.1 // indirect",
          "266:  github.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 // indirect",
          "267:  github.com/power-devops/perfstat v0.0.0-20210106213030-5aafc221ea8c // indirect",
          "270:  github.com/renier/xmlrpc v0.0.0-20170708154548-ce4a1a486c03 // indirect",
          "271:  github.com/rivo/uniseg v0.2.0 // indirect",
          "272:  github.com/rogpeppe/go-internal v1.12.0 // indirect",
          "",
          "[Removed Lines]",
          "268:  github.com/prometheus/client_model v0.5.0 // indirect",
          "269:  github.com/prometheus/procfs v0.12.0 // indirect",
          "",
          "[Added Lines]",
          "267:  github.com/prometheus/client_model v0.6.1 // indirect",
          "268:  github.com/prometheus/procfs v0.15.1 // indirect",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "298:  go.opentelemetry.io/otel/sdk v1.21.0 // indirect",
          "299:  go.opentelemetry.io/otel/trace v1.30.0 // indirect",
          "300:  golang.org/x/exp v0.0.0-20240613232115-7f521ea00fb8 // indirect",
          "303:  golang.org/x/term v0.24.0 // indirect",
          "304:  golang.org/x/text v0.18.0 // indirect",
          "305:  golang.org/x/tools v0.22.0 // indirect",
          "",
          "[Removed Lines]",
          "301:  golang.org/x/net v0.26.0 // indirect",
          "302:  golang.org/x/oauth2 v0.18.0 // indirect",
          "",
          "[Added Lines]",
          "300:  golang.org/x/net v0.29.0 // indirect",
          "301:  golang.org/x/oauth2 v0.23.0 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "68: cloud.google.com/go/compute v1.6.1/go.mod h1:g85FgpzFvNULZ+S8AYq87axRKuf2Kh7deLqV/jJ3thU=",
          "69: cloud.google.com/go/compute v1.7.0/go.mod h1:435lt8av5oL9P3fv1OEzSbSUe+ybHXGMPQHHZWZxy9U=",
          "70: cloud.google.com/go/compute v1.10.0/go.mod h1:ER5CLbMxl90o2jtNbGSbtfOpQKR0t15FOtRsugnLrlU=",
          "75: cloud.google.com/go/containeranalysis v0.5.1/go.mod h1:1D92jd8gRR/c0fGMlymRgxWD3Qw9C1ff6/T7mLgVL8I=",
          "76: cloud.google.com/go/containeranalysis v0.6.0/go.mod h1:HEJoiEIu+lEXM+k7+qLCci0h33lX3ZqoYFdmPcoO7s4=",
          "77: cloud.google.com/go/datacatalog v1.3.0/go.mod h1:g9svFY6tuR+j+hrTw3J2dNcmI0dzmSiyOzm8kpLq0a0=",
          "",
          "[Removed Lines]",
          "71: cloud.google.com/go/compute v1.23.0 h1:tP41Zoavr8ptEqaW6j+LQOnyBBhO7OkOMAGrgLopTwY=",
          "72: cloud.google.com/go/compute v1.23.0/go.mod h1:4tCnrn48xsqlwSAiLf1HXMQk8CONslYbdiEZc9FEIbM=",
          "73: cloud.google.com/go/compute/metadata v0.2.3 h1:mg4jlk7mCAj6xXp9UJ4fjI9VUI5rubuGBW5aJ7UnBMY=",
          "74: cloud.google.com/go/compute/metadata v0.2.3/go.mod h1:VAV5nSsACxMJvgaAuX6Pk2AawlZn8kiOGuCv6gTkwuA=",
          "",
          "[Added Lines]",
          "71: cloud.google.com/go/compute/metadata v0.3.0 h1:Tz+eQXMEqDIKRsmY3cHTL6FVaynIjX2QxYC4trgAKZc=",
          "72: cloud.google.com/go/compute/metadata v0.3.0/go.mod h1:zFmK7XCadkQkj6TtorcaGlCW1hT1fIilQDwofLpJ20k=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "319: github.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=",
          "320: github.com/cespare/xxhash v1.1.0/go.mod h1:XrSqR1VqqWfGrhpAt58auRo0WTKS1nRRg3ghfAqPWnc=",
          "321: github.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=",
          "324: github.com/checkpoint-restore/go-criu/v5 v5.3.0 h1:wpFFOoomK3389ue2lAb0Boag6XPht5QYpipxmSNL4d8=",
          "325: github.com/checkpoint-restore/go-criu/v5 v5.3.0/go.mod h1:E/eQpaFtUKGOOSEBZgmKAcn+zUUwWxqcaKZlF54wK8E=",
          "326: github.com/cheggaaa/pb v1.0.27/go.mod h1:pQciLPpbU0oxA0h+VJYYLxO+XeDQb5pZijXscXHm81s=",
          "",
          "[Removed Lines]",
          "322: github.com/cespare/xxhash/v2 v2.2.0 h1:DC2CZ1Ep5Y4k3ZQ899DldepgrayRUGE6BBZ/cd9Cj44=",
          "323: github.com/cespare/xxhash/v2 v2.2.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=",
          "",
          "[Added Lines]",
          "320: github.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=",
          "321: github.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "817: github.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=",
          "818: github.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=",
          "819: github.com/klauspost/compress v1.15.11/go.mod h1:QPwzmACJjUTFsnSHH934V6woptycfrDDJnH7hvFVbGM=",
          "822: github.com/klauspost/cpuid/v2 v2.2.8 h1:+StwCXwm9PdpiEkPyzBXIy+M9KUb4ODm0Zarf1kS5BM=",
          "823: github.com/klauspost/cpuid/v2 v2.2.8/go.mod h1:Lcz8mBdAVJIBVzewtcLocK12l3Y+JytZYpaMropDUws=",
          "824: github.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=",
          "",
          "[Removed Lines]",
          "820: github.com/klauspost/compress v1.16.0 h1:iULayQNOReoYUe+1qtKOqw9CwJv3aNQu8ivo7lw1HU4=",
          "821: github.com/klauspost/compress v1.16.0/go.mod h1:ntbaceVETuRiXiv4DpjP66DpAtAGkEQskQzEyD//IeE=",
          "",
          "[Added Lines]",
          "818: github.com/klauspost/compress v1.17.9 h1:6KIumPrER1LHsvBVuDa0r5xaG0Es51mhhB9BQB2qeMA=",
          "819: github.com/klauspost/compress v1.17.9/go.mod h1:Di0epgTjJY877eYKx5yC51cX2A2Vl2ibi7bDH9ttBbw=",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "861: github.com/mattn/go-runewidth v0.0.12 h1:Y41i/hVW3Pgwr8gV+J23B9YEY0zxjptBuCWEaxmAOow=",
          "862: github.com/mattn/go-runewidth v0.0.12/go.mod h1:RAqKPSqVFrSLVXbA8x7dzmKdmGzieGRCM46jaSJTDAk=",
          "863: github.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=",
          "866: github.com/miekg/dns v1.0.14/go.mod h1:W1PPwlIAgtquWBMBEV9nkV9Cazfe8ScdGz/Lj7v3Nrg=",
          "867: github.com/miekg/dns v1.1.41/go.mod h1:p6aan82bvRIyn+zDIv9xYNUpwa73JcSh9BKwknJysuI=",
          "868: github.com/miekg/dns v1.1.56 h1:5imZaSeoRNvpM9SzWNhEcP9QliKiz20/dA2QabIGVnE=",
          "",
          "[Removed Lines]",
          "864: github.com/matttproud/golang_protobuf_extensions/v2 v2.0.0 h1:jWpvCLoY8Z/e3VKvlsiIGKtc+UG6U5vzxaoagmhXfyg=",
          "865: github.com/matttproud/golang_protobuf_extensions/v2 v2.0.0/go.mod h1:QUyp042oQthUoa9bqDv0ER0wrtXnBruoNd7aNjkbP+k=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "923: github.com/muesli/reflow v0.3.0 h1:IFsN6K9NfGtjeggFP+68I4chLZV2yIKsXJFNZ+eWh6s=",
          "924: github.com/muesli/reflow v0.3.0/go.mod h1:pbwTDkVPibjO2kyvBQRBxTWEEGDGq0FlB1BIKtnHY/8=",
          "925: github.com/munnerz/goautoneg v0.0.0-20120707110453-a547fc61f48d/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=",
          "926: github.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=",
          "927: github.com/mwitkow/go-conntrack v0.0.0-20190716064945-2f068394615f h1:KUppIJq7/+SVif2QVs3tOP0zanoHgBEVAwHxUSIzRqU=",
          "928: github.com/mwitkow/go-conntrack v0.0.0-20190716064945-2f068394615f/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "922: github.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=",
          "923: github.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "977: github.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=",
          "978: github.com/prometheus/client_golang v1.1.0/go.mod h1:I1FGZT9+L76gKKOs5djB6ezCbFQP1xR9D75/vuwEF3g=",
          "979: github.com/prometheus/client_golang v1.4.0/go.mod h1:e9GMxYsXl05ICDXkRhurwBS4Q3OK1iX/F2sw+iXX5zU=",
          "982: github.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=",
          "983: github.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=",
          "984: github.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=",
          "985: github.com/prometheus/client_model v0.2.0/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=",
          "988: github.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=",
          "989: github.com/prometheus/common v0.6.0/go.mod h1:eBmuwkDJBwy6iBfxCBob6t6dR6ENT/y+J+Zk0j9GMYc=",
          "990: github.com/prometheus/common v0.9.1/go.mod h1:yhUN8i9wzaXS3w1O07YhxHEBxD+W35wd8bs7vj7HSQ4=",
          "993: github.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=",
          "994: github.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=",
          "995: github.com/prometheus/procfs v0.0.3/go.mod h1:4A/X28fw3Fc593LaREMrKMqOKvUAntwMDaekg4FpcdQ=",
          "996: github.com/prometheus/procfs v0.0.8/go.mod h1:7Qr8sr6344vo1JqZ6HhLceV9o3AJ1Ff+GxbHq6oeK9A=",
          "999: github.com/renier/xmlrpc v0.0.0-20170708154548-ce4a1a486c03 h1:Wdi9nwnhFNAlseAOekn6B5G/+GMtks9UKbvRU/CMM/o=",
          "1000: github.com/renier/xmlrpc v0.0.0-20170708154548-ce4a1a486c03/go.mod h1:gRAiPF5C5Nd0eyyRdqIu9qTiFSoZzpTq727b5B8fkkU=",
          "1001: github.com/rivo/uniseg v0.1.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=",
          "",
          "[Removed Lines]",
          "980: github.com/prometheus/client_golang v1.18.0 h1:HzFfmkOzH5Q8L8G+kSJKUx5dtG87sewO+FoDDqP5Tbk=",
          "981: github.com/prometheus/client_golang v1.18.0/go.mod h1:T+GXkCk5wSJyOqMIzVgvvjFDlkOQntgjkJWKrN5txjA=",
          "986: github.com/prometheus/client_model v0.5.0 h1:VQw1hfvPvk3Uv6Qf29VrPF32JB6rtbgI6cYPYQjL0Qw=",
          "987: github.com/prometheus/client_model v0.5.0/go.mod h1:dTiFglRmd66nLR9Pv9f0mZi7B7fk5Pm3gvsjB5tr+kI=",
          "991: github.com/prometheus/common v0.45.0 h1:2BGz0eBc2hdMDLnO/8n0jeB3oPrt2D08CekT0lneoxM=",
          "992: github.com/prometheus/common v0.45.0/go.mod h1:YJmSTw9BoKxJplESWWxlbyttQR4uaEcGyv9MZjVOJsY=",
          "997: github.com/prometheus/procfs v0.12.0 h1:jluTpSng7V9hY0O2R9DzzJHYb2xULk9VTR1V1R/k6Bo=",
          "998: github.com/prometheus/procfs v0.12.0/go.mod h1:pcuDEFsWDnvcgNzo4EEweacyhjeA9Zk3cnaOZAZEfOo=",
          "",
          "[Added Lines]",
          "978: github.com/prometheus/client_golang v1.20.4 h1:Tgh3Yr67PaOv/uTqloMsCEdeuFTatm5zIq5+qNN23vI=",
          "979: github.com/prometheus/client_golang v1.20.4/go.mod h1:PIEt8X02hGcP8JWbeHyeZ53Y/jReSnHgO035n//V5WE=",
          "984: github.com/prometheus/client_model v0.6.1 h1:ZKSh/rekM+n3CeS952MLRAdFwIKqeY8b62p8ais2e9E=",
          "985: github.com/prometheus/client_model v0.6.1/go.mod h1:OrxVMOVHjw3lKMa8+x6HeMGkHMQyHDk9E3jmP2AmGiY=",
          "989: github.com/prometheus/common v0.60.1 h1:FUas6GcOw66yB/73KC+BOZoFJmbo/1pojoILArPAaSc=",
          "990: github.com/prometheus/common v0.60.1/go.mod h1:h0LYf1R1deLSKtD4Vdg8gy4RuOvENW2J/h19V5NADQw=",
          "995: github.com/prometheus/procfs v0.15.1 h1:YagwOFzUgYfKKHX6Dr+sHT7km/hxC76UB0learggepc=",
          "996: github.com/prometheus/procfs v0.15.1/go.mod h1:fB45yRUv8NstnjriLhBQLuOUt+WW4BsoGhij/e3PBqk=",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1265: golang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=",
          "1266: golang.org/x/net v0.7.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=",
          "1267: golang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=",
          "1270: golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=",
          "1271: golang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=",
          "1272: golang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=",
          "",
          "[Removed Lines]",
          "1268: golang.org/x/net v0.26.0 h1:soB7SVo0PWrY4vPW/+ay0jKDNScG2X9wFeYlXIvJsOQ=",
          "1269: golang.org/x/net v0.26.0/go.mod h1:5YKkiSynbBIh3p6iOc/vibscux0x38BZDkn8sCUPxHE=",
          "",
          "[Added Lines]",
          "1266: golang.org/x/net v0.29.0 h1:5ORfpBpCs4HzDYoodCDBbwHzdR5UrLBZ3sOnUJmFoHo=",
          "1267: golang.org/x/net v0.29.0/go.mod h1:gLkgy8jTGERgjzMic6DS9+SP0ajcu6Xu3Orq/SpETg0=",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1292: golang.org/x/oauth2 v0.0.0-20220909003341-f21342109be1/go.mod h1:h4gKUeWbJ4rQPri7E0u6Gs4e9Ri2zaLxzw5DI5XGrYg=",
          "1293: golang.org/x/oauth2 v0.0.0-20221014153046-6fdb5e3db783/go.mod h1:h4gKUeWbJ4rQPri7E0u6Gs4e9Ri2zaLxzw5DI5XGrYg=",
          "1294: golang.org/x/oauth2 v0.1.0/go.mod h1:G9FE4dLTsbXUu90h/Pf85g4w1D+SSAgR+q46nJZ8M4A=",
          "1297: golang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "1298: golang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "1299: golang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "",
          "[Removed Lines]",
          "1295: golang.org/x/oauth2 v0.18.0 h1:09qnuIAgzdx1XplqJvW6CQqMCtGZykZWcXzPMPUusvI=",
          "1296: golang.org/x/oauth2 v0.18.0/go.mod h1:Wf7knwG0MPoWIMMBgFlEaSUDaKskp0dCfrlJRJXbBi8=",
          "",
          "[Added Lines]",
          "1293: golang.org/x/oauth2 v0.23.0 h1:PbgcYx2W7i4LvjJWEbf0ngHV6qJYr86PkAV3bXdLEbs=",
          "1294: golang.org/x/oauth2 v0.23.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9a3c74afb88b58b4c3c0f8a6c6f48835c693e34e",
      "candidate_info": {
        "commit_hash": "9a3c74afb88b58b4c3c0f8a6c6f48835c693e34e",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/9a3c74afb88b58b4c3c0f8a6c6f48835c693e34e",
        "files": [
          ".changelog/25198.txt",
          "drivers/shared/executor/executor_basic.go",
          "drivers/shared/executor/executor_universal_linux.go",
          "drivers/shared/executor/procstats/list_default.go",
          "drivers/shared/executor/procstats/list_windows.go"
        ],
        "message": "backport of commit 73ceacd236480105b53325613209a01c6ebd78b7 (#25304)\n\nCo-authored-by: Simon Zou <simon_zcs@hotmail.com>",
        "before_after_code_files": [
          "drivers/shared/executor/executor_basic.go||drivers/shared/executor/executor_basic.go",
          "drivers/shared/executor/executor_universal_linux.go||drivers/shared/executor/executor_universal_linux.go",
          "drivers/shared/executor/procstats/list_default.go||drivers/shared/executor/procstats/list_default.go",
          "drivers/shared/executor/procstats/list_windows.go||drivers/shared/executor/procstats/list_windows.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/shared/executor/executor_basic.go||drivers/shared/executor/executor_basic.go": [
          "File: drivers/shared/executor/executor_basic.go -> drivers/shared/executor/executor_basic.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: func setCmdUser(*exec.Cmd, string) error { return nil }",
          "40: func (e *UniversalExecutor) ListProcesses() set.Collection[int] {",
          "42: }",
          "44: func (e *UniversalExecutor) setSubCmdCgroup(*exec.Cmd, string) (func(), error) {",
          "",
          "[Removed Lines]",
          "41:  return procstats.List(e.childCmd.Process.Pid)",
          "",
          "[Added Lines]",
          "41:  return procstats.ListByPid(e.childCmd.Process.Pid)",
          "",
          "---------------"
        ],
        "drivers/shared/executor/executor_universal_linux.go||drivers/shared/executor/executor_universal_linux.go": [
          "File: drivers/shared/executor/executor_universal_linux.go -> drivers/shared/executor/executor_universal_linux.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "103: }",
          "105: func (e *UniversalExecutor) ListProcesses() set.Collection[procstats.ProcessID] {",
          "107: }",
          "109: func (e *UniversalExecutor) statCG(cgroup string) (int, func(), error) {",
          "",
          "[Removed Lines]",
          "106:  return procstats.List(e.command)",
          "",
          "[Added Lines]",
          "106:  switch cgroupslib.GetMode() {",
          "107:  case cgroupslib.OFF:",
          "109:   return procstats.ListByPid(e.childCmd.Process.Pid)",
          "110:  default:",
          "111:   return procstats.List(e.command)",
          "112:  }",
          "",
          "---------------"
        ],
        "drivers/shared/executor/procstats/list_default.go||drivers/shared/executor/procstats/list_default.go": [
          "File: drivers/shared/executor/procstats/list_default.go -> drivers/shared/executor/procstats/list_default.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: )",
          "19:  result := set.New[ProcessID](10)",
          "21:  ctx, cancel := context.WithTimeout(context.Background(), 30*time.Second)",
          "",
          "[Removed Lines]",
          "18: func List(executorPID int) set.Collection[ProcessID] {",
          "",
          "[Added Lines]",
          "18: func ListByPid(executorPID int) set.Collection[ProcessID] {",
          "",
          "---------------"
        ],
        "drivers/shared/executor/procstats/list_windows.go||drivers/shared/executor/procstats/list_windows.go": [
          "File: drivers/shared/executor/procstats/list_windows.go -> drivers/shared/executor/procstats/list_windows.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "29:  procs := list(executorPID, ps.Processes)",
          "30:  return procs",
          "31: }",
          "",
          "[Removed Lines]",
          "28: func List(executorPID int) set.Collection[ProcessID] {",
          "",
          "[Added Lines]",
          "28: func ListByPid(executorPID int) set.Collection[ProcessID] {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ab53990d964ced9a05f7866260320b5d57d9b66d",
      "candidate_info": {
        "commit_hash": "ab53990d964ced9a05f7866260320b5d57d9b66d",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/ab53990d964ced9a05f7866260320b5d57d9b66d",
        "files": [
          "go.mod",
          "go.sum"
        ],
        "message": "backport of commit dab7e49a3f41dd6c3d858aa39aeb95b8b5f1f8f9 (#25381)\n\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "326:  go.opentelemetry.io/otel/sdk/metric v1.34.0 // indirect",
          "327:  go.opentelemetry.io/otel/trace v1.34.0 // indirect",
          "328:  golang.org/x/exp v0.0.0-20241217172543-b2144cdd0a67 // indirect",
          "330:  golang.org/x/oauth2 v0.27.0 // indirect",
          "331:  golang.org/x/term v0.30.0 // indirect",
          "332:  golang.org/x/text v0.23.0 // indirect",
          "",
          "[Removed Lines]",
          "329:  golang.org/x/net v0.34.0 // indirect",
          "",
          "[Added Lines]",
          "329:  golang.org/x/net v0.36.0 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "1899: golang.org/x/net v0.15.0/go.mod h1:idbUs1IY1+zTqbi8yxTbhexhEEk5ur9LInksu6HrEpk=",
          "1900: golang.org/x/net v0.21.0/go.mod h1:bIjVDfnllIU7BJ2DNgfnXvpSvtn8VRwhlsaeUTyUS44=",
          "1901: golang.org/x/net v0.25.0/go.mod h1:JkAGAh7GEvH74S6FOH42FLoXpXbE/aqXSrIQjXgsiwM=",
          "1903: golang.org/x/net v0.34.0/go.mod h1:di0qlW3YNM5oh6GqDGQr92MyTozJPmybPK4Ev/Gm31k=",
          "1904: golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=",
          "1905: golang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=",
          "1906: golang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=",
          "",
          "[Removed Lines]",
          "1902: golang.org/x/net v0.34.0 h1:Mb7Mrk043xzHgnRM88suvJFwzVrRfHEHJEl5/71CKw0=",
          "",
          "[Added Lines]",
          "1903: golang.org/x/net v0.36.0 h1:vWF2fRbw4qslQsQzgFqZff+BItCvGFQqKzKIzx1rmoA=",
          "1904: golang.org/x/net v0.36.0/go.mod h1:bFmbeoIPfrw4sMHNhb4J9f6+tPziuGjq7Jk/38fxi1I=",
          "",
          "---------------"
        ]
      }
    }
  ]
}