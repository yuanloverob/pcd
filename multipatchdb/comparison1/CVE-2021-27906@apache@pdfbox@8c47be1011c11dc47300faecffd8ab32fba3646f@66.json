{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9b55e6aa2697217ff0aa6b9cfadba5b391de262b",
      "candidate_info": {
        "commit_hash": "9b55e6aa2697217ff0aa6b9cfadba5b391de262b",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/9b55e6aa2697217ff0aa6b9cfadba5b391de262b",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java"
        ],
        "message": "PDFBOX-4892: always grow to maximum, as suggested by valerybokov; remove super()\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1892739 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:     public PDPageFitDestination()",
          "43:     {",
          "45:         array.growToSize(2);",
          "46:         array.setName( 1, TYPE );",
          "",
          "[Removed Lines]",
          "44:         super();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:     public PDPageFitHeightDestination()",
          "43:     {",
          "45:         array.growToSize(3);",
          "46:         array.setName( 1, TYPE );",
          "",
          "[Removed Lines]",
          "44:         super();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "104:     public void setFitBoundingBox( boolean fitBoundingBox )",
          "105:     {",
          "107:         if( fitBoundingBox )",
          "108:         {",
          "109:             array.setName( 1, TYPE_BOUNDED );",
          "",
          "[Removed Lines]",
          "106:         array.growToSize( 2 );",
          "",
          "[Added Lines]",
          "105:         array.growToSize(3);",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:     public PDPageFitRectangleDestination()",
          "39:     {",
          "41:         array.growToSize(6);",
          "42:         array.setName( 1, TYPE );",
          "",
          "[Removed Lines]",
          "40:         super();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72:     public void setLeft( int x )",
          "73:     {",
          "75:         if( x == -1 )",
          "76:         {",
          "77:             array.set(2, null);",
          "",
          "[Removed Lines]",
          "74:         array.growToSize( 3 );",
          "",
          "[Added Lines]",
          "73:         array.growToSize(6);",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:     public PDPageFitWidthDestination()",
          "44:     {",
          "46:         array.growToSize(3);",
          "47:         array.setName( 1, TYPE );",
          "",
          "[Removed Lines]",
          "45:         super();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "106:     public void setFitBoundingBox( boolean fitBoundingBox )",
          "107:     {",
          "109:         if( fitBoundingBox )",
          "110:         {",
          "111:             array.setName( 1, TYPE_BOUNDED );",
          "",
          "[Removed Lines]",
          "108:         array.growToSize( 2 );",
          "",
          "[Added Lines]",
          "107:         array.growToSize(3);",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:     public PDPageXYZDestination()",
          "43:     {",
          "45:         array.growToSize(5);",
          "46:         array.setName( 1, TYPE );",
          "47:     }",
          "",
          "[Removed Lines]",
          "44:         super();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "75:     public void setLeft( int x )",
          "76:     {",
          "78:         if( x == -1 )",
          "79:         {",
          "80:             array.set(2, null);",
          "",
          "[Removed Lines]",
          "77:         array.growToSize( 3 );",
          "",
          "[Added Lines]",
          "76:         array.growToSize(5);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "104:     public void setTop( int y )",
          "105:     {",
          "107:         if( y == -1 )",
          "108:         {",
          "109:             array.set(3, null);",
          "",
          "[Removed Lines]",
          "106:         array.growToSize( 4 );",
          "",
          "[Added Lines]",
          "105:         array.growToSize(5);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f4f6acf21afc11922b5a5ff2126daab4dd65d59d",
      "candidate_info": {
        "commit_hash": "f4f6acf21afc11922b5a5ff2126daab4dd65d59d",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/f4f6acf21afc11922b5a5ff2126daab4dd65d59d",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/cert/OcspHelper.java"
        ],
        "message": "PDFBOX-4892: respect naming convention\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1885728 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/cert/OcspHelper.java||examples/src/main/java/org/apache/pdfbox/examples/signature/cert/OcspHelper.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/signature/cert/OcspHelper.java||examples/src/main/java/org/apache/pdfbox/examples/signature/cert/OcspHelper.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/signature/cert/OcspHelper.java -> examples/src/main/java/org/apache/pdfbox/examples/signature/cert/OcspHelper.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:     private final JcaX509CertificateConverter certificateConverter = new JcaX509CertificateConverter();",
          "",
          "[Removed Lines]",
          "91:     private static final Random rand = new SecureRandom();",
          "",
          "[Added Lines]",
          "91:     private static final Random RANDOM = new SecureRandom();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "588:     private byte[] create16BytesNonce()",
          "589:     {",
          "590:         byte[] nonce = new byte[16];",
          "592:         return nonce;",
          "593:     }",
          "",
          "[Removed Lines]",
          "591:         rand.nextBytes(nonce);",
          "",
          "[Added Lines]",
          "591:         RANDOM.nextBytes(nonce);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "53b560b0c5a640a9ddfebc7caf77ce381d823860",
      "candidate_info": {
        "commit_hash": "53b560b0c5a640a9ddfebc7caf77ce381d823860",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/53b560b0c5a640a9ddfebc7caf77ce381d823860",
        "files": [
          "debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java"
        ],
        "message": "PDFBOX-4892: set inner class static + improve javadoc, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1888022 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java||debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java||debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java": [
          "File: debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java -> debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1392:     {",
          "1393:         String password;",
          "",
          "[Removed Lines]",
          "1391:     abstract class DocumentOpener",
          "",
          "[Added Lines]",
          "1391:     abstract static class DocumentOpener",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8e9b620679a00455572220476e18385d0d8fbd1c",
      "candidate_info": {
        "commit_hash": "8e9b620679a00455572220476e18385d0d8fbd1c",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/8e9b620679a00455572220476e18385d0d8fbd1c",
        "files": [
          "tools/src/main/java/org/apache/pdfbox/tools/ExtractImages.java"
        ],
        "message": "PDFBOX-4892: optimize, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890877 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "tools/src/main/java/org/apache/pdfbox/tools/ExtractImages.java||tools/src/main/java/org/apache/pdfbox/tools/ExtractImages.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/src/main/java/org/apache/pdfbox/tools/ExtractImages.java||tools/src/main/java/org/apache/pdfbox/tools/ExtractImages.java": [
          "File: tools/src/main/java/org/apache/pdfbox/tools/ExtractImages.java -> tools/src/main/java/org/apache/pdfbox/tools/ExtractImages.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: import java.io.IOException;",
          "24: import java.io.InputStream;",
          "25: import java.util.Arrays;",
          "26: import java.util.HashSet;",
          "27: import java.util.List;",
          "28: import java.util.Set;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: import java.util.Collections;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46: import org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern;",
          "47: import org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern;",
          "48: import org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState;",
          "49: import org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask;",
          "50: import org.apache.pdfbox.pdmodel.graphics.state.RenderingMode;",
          "51: import org.apache.pdfbox.tools.imageio.ImageIOUtil;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50: import org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "325:                                  int code,",
          "326:                                  Vector displacement) throws IOException",
          "327:         {",
          "329:             if (renderingMode.isFill())",
          "330:             {",
          "332:             }",
          "333:             if (renderingMode.isStroke())",
          "334:             {",
          "336:             }",
          "337:         }",
          "",
          "[Removed Lines]",
          "328:             RenderingMode renderingMode = getGraphicsState().getTextState().getRenderingMode();",
          "331:                 processColor(getGraphicsState().getNonStrokingColor());",
          "335:                 processColor(getGraphicsState().getStrokingColor());",
          "",
          "[Added Lines]",
          "330:             PDGraphicsState graphicsState = getGraphicsState();",
          "331:             RenderingMode renderingMode = graphicsState.getTextState().getRenderingMode();",
          "334:                 processColor(graphicsState.getNonStrokingColor());",
          "338:                 processColor(graphicsState.getStrokingColor());",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "464:                     {",
          "466:                         InputStream data = pdImage.createInputStream(",
          "468:                         IOUtils.copy(data, out);",
          "469:                         IOUtils.closeQuietly(data);",
          "470:                     }",
          "",
          "[Removed Lines]",
          "467:                                 Arrays.asList(COSName.JPX_DECODE.getName()));",
          "",
          "[Added Lines]",
          "470:                                 Collections.singletonList(COSName.JPX_DECODE.getName()));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "632b9335317f983c7ed11f191ff15f3ec5d810c0",
      "candidate_info": {
        "commit_hash": "632b9335317f983c7ed11f191ff15f3ec5d810c0",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/632b9335317f983c7ed11f191ff15f3ec5d810c0",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/pdmodel/ExtractEmbeddedFiles.java"
        ],
        "message": "PDFBOX-5138: support nesting; change parameter to base type; create directory when needed\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887928 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/pdmodel/ExtractEmbeddedFiles.java||examples/src/main/java/org/apache/pdfbox/examples/pdmodel/ExtractEmbeddedFiles.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/pdmodel/ExtractEmbeddedFiles.java||examples/src/main/java/org/apache/pdfbox/examples/pdmodel/ExtractEmbeddedFiles.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/pdmodel/ExtractEmbeddedFiles.java -> examples/src/main/java/org/apache/pdfbox/examples/pdmodel/ExtractEmbeddedFiles.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:         }",
          "106:     }",
          "109:     {",
          "110:         Map<String, PDComplexFileSpecification> names = efTree.getNames();",
          "111:         if (names != null)",
          "",
          "[Removed Lines]",
          "108:     private static void extractFilesFromEFTree(PDEmbeddedFilesNameTreeNode efTree, String filePath) throws IOException",
          "",
          "[Added Lines]",
          "108:     private static void extractFilesFromEFTree(PDNameTreeNode efTree, String filePath) throws IOException",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "121:             }",
          "122:             for (PDNameTreeNode<PDComplexFileSpecification> node : kids)",
          "123:             {",
          "126:             }",
          "127:         }",
          "128:     }",
          "",
          "[Removed Lines]",
          "124:                 names = node.getNames();",
          "125:                 extractFiles(names, filePath);",
          "",
          "[Added Lines]",
          "124:                 extractFilesFromEFTree(node, filePath);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "145:             throws IOException",
          "146:     {",
          "147:         String embeddedFilename = filePath + filename;",
          "149:         System.out.println(\"Writing \" + embeddedFilename);",
          "150:         FileOutputStream fos = null;",
          "151:         try",
          "",
          "[Removed Lines]",
          "148:         File file = new File(filePath + filename);",
          "",
          "[Added Lines]",
          "147:         File file = new File(embeddedFilename);",
          "148:         File parentDir = file.getParentFile();",
          "149:         if (!parentDir.exists())",
          "150:         {",
          "152:             System.out.println(\"Creating \" + parentDir);",
          "153:             parentDir.mkdirs();",
          "154:         }",
          "",
          "---------------"
        ]
      }
    }
  ]
}