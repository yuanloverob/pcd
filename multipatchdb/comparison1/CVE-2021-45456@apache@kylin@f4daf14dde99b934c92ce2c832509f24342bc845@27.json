{
  "cve_id": "CVE-2021-45456",
  "cve_desc": "Apache kylin checks the legitimacy of the project before executing some commands with the project name passed in by the user. There is a mismatch between what is being checked and what is being used as the shell command argument in DiagnosisService. This may cause an illegal project name to pass the check and perform the following steps, resulting in a command injection vulnerability. This issue affects Apache Kylin 4.0.0.",
  "repo": "apache/kylin",
  "patch_hash": "f4daf14dde99b934c92ce2c832509f24342bc845",
  "patch_info": {
    "commit_hash": "f4daf14dde99b934c92ce2c832509f24342bc845",
    "repo": "apache/kylin",
    "commit_url": "https://github.com/apache/kylin/commit/f4daf14dde99b934c92ce2c832509f24342bc845",
    "files": [
      "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
      "server/src/main/webapp/WEB-INF/web.xml"
    ],
    "message": "test fix",
    "before_after_code_files": [
      "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java"
    ]
  },
  "patch_diff": {
    "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java": [
      "File: core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java -> core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "3403:     public String getKerberosPrincipal() {",
      "3404:         return getOptional(\"kylin.kerberos.principal\");",
      "3405:     }",
      "3406: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3407:     public String getEncryptCipherIvSpec() {",
      "3408:         return getOptional(\"kylin.security.encrypt.cipher.ivSpec\", \"AAAAAAAAAAAAAAAA\");",
      "3409:     }",
      "",
      "---------------"
    ],
    "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java": [
      "File: core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java -> core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: import java.security.NoSuchAlgorithmException;",
      "27: import org.apache.commons.codec.binary.Base64;",
      "29: import javax.crypto.Cipher;",
      "30: import javax.crypto.NoSuchPaddingException;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28: import org.apache.kylin.common.KylinConfig;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "42:             InvalidKeyException, NoSuchPaddingException, NoSuchAlgorithmException, UnsupportedEncodingException {",
      "43:         Cipher cipher = Cipher.getInstance(\"AES/CFB/PKCS5Padding\");",
      "44:         final SecretKeySpec secretKey = new SecretKeySpec(key, \"AES\");",
      "46:         cipher.init(cipherMode, secretKey, ivSpec);",
      "47:         return cipher;",
      "48:     }",
      "",
      "[Removed Lines]",
      "45:         IvParameterSpec ivSpec = new IvParameterSpec(\"AAAAAAAAAAAAAAAA\".getBytes(\"UTF-8\"));",
      "",
      "[Added Lines]",
      "46:         IvParameterSpec ivSpec = new IvParameterSpec(KylinConfig.getInstanceFromEnv().getEncryptCipherIvSpec().getBytes(\"UTF-8\"));",
      "",
      "---------------"
    ],
    "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java": [
      "File: core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java -> core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: package org.apache.kylin.common.util;",
      "21: import org.junit.Assert;",
      "22: import org.junit.Test;",
      "26:     @Test",
      "27:     public void testAESEncrypt(){",
      "",
      "[Removed Lines]",
      "24: public class EncryptUtilTest {",
      "",
      "[Added Lines]",
      "21: import org.junit.After;",
      "23: import org.junit.Before;",
      "26: public class EncryptUtilTest extends LocalFileMetadataTestCase {",
      "27:     @Before",
      "28:     public void setUp() throws Exception {",
      "29:         this.createTestMetadata();",
      "30:     }",
      "32:     @After",
      "33:     public void after() throws Exception {",
      "34:         this.cleanupTestMetadata();",
      "35:     }",
      "",
      "---------------"
    ],
    "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java": [
      "File: server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java -> server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "87:     public String dumpProjectDiagnosisInfo(String project, File exportPath) throws IOException {",
      "88:         Message msg = MsgPicker.getMsg();",
      "89:         ProjectInstance projectInstance =",
      "90:                 ProjectManager.getInstance(KylinConfig.getInstanceFromEnv())",
      "92:         if (null == projectInstance) {",
      "93:             throw new BadRequestException(",
      "95:         }",
      "96:         aclEvaluate.checkProjectOperationPermission(projectInstance);",
      "98:         runDiagnosisCLI(args);",
      "99:         return getDiagnosisPackageName(exportPath);",
      "100:     }",
      "",
      "[Removed Lines]",
      "91:                         .getProject(ValidateUtil.convertStringToBeAlphanumericUnderscore(project));",
      "94:                     String.format(Locale.ROOT, msg.getDIAG_PROJECT_NOT_FOUND(), project));",
      "97:         String[] args = { project, exportPath.getAbsolutePath() };",
      "",
      "[Added Lines]",
      "89:         String projectName = ValidateUtil.convertStringToBeAlphanumericUnderscore(project);",
      "92:                         .getProject(projectName);",
      "95:                     String.format(Locale.ROOT, msg.getDIAG_PROJECT_NOT_FOUND(), projectName));",
      "98:         String[] args = { projectName, exportPath.getAbsolutePath() };",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5312bac727e5d64bfa7be999de0d2bddc273a3b8",
      "candidate_info": {
        "commit_hash": "5312bac727e5d64bfa7be999de0d2bddc273a3b8",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/5312bac727e5d64bfa7be999de0d2bddc273a3b8",
        "files": [
          "build/bin/kylin.sh",
          "core-common/src/main/resources/kylin-defaults.properties",
          "docker/dockerfile/standalone/conf/bin/kylin.sh",
          "kylin-spark-project/kylin-spark-classloader/src/main/java/org/apache/kylin/spark/classloader/SparkClassLoader.java",
          "kylin-spark-project/kylin-spark-common/src/main/java/org/apache/kylin/engine/spark/metadata/cube/PathManager.java",
          "kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkExecutable.java",
          "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/conf/rule/SparkConfRule.scala",
          "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/utils/ResourceUtils.scala",
          "kylin-spark-project/kylin-spark-query/src/main/scala/org/apache/spark/sql/KylinSession.scala",
          "pom.xml",
          "server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java"
        ],
        "message": "HOTFIX for spark3",
        "before_after_code_files": [
          "build/bin/kylin.sh||build/bin/kylin.sh",
          "core-common/src/main/resources/kylin-defaults.properties||core-common/src/main/resources/kylin-defaults.properties",
          "docker/dockerfile/standalone/conf/bin/kylin.sh||docker/dockerfile/standalone/conf/bin/kylin.sh",
          "kylin-spark-project/kylin-spark-classloader/src/main/java/org/apache/kylin/spark/classloader/SparkClassLoader.java||kylin-spark-project/kylin-spark-classloader/src/main/java/org/apache/kylin/spark/classloader/SparkClassLoader.java",
          "kylin-spark-project/kylin-spark-common/src/main/java/org/apache/kylin/engine/spark/metadata/cube/PathManager.java||kylin-spark-project/kylin-spark-common/src/main/java/org/apache/kylin/engine/spark/metadata/cube/PathManager.java",
          "kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkExecutable.java||kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkExecutable.java",
          "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/conf/rule/SparkConfRule.scala||kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/conf/rule/SparkConfRule.scala",
          "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/utils/ResourceUtils.scala||kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/utils/ResourceUtils.scala",
          "kylin-spark-project/kylin-spark-query/src/main/scala/org/apache/spark/sql/KylinSession.scala||kylin-spark-project/kylin-spark-query/src/main/scala/org/apache/spark/sql/KylinSession.scala",
          "server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java||server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "build/bin/kylin.sh||build/bin/kylin.sh": [
          "File: build/bin/kylin.sh -> build/bin/kylin.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "144:     # compose hadoop_dependencies",
          "145:     hadoop_dependencies=${hadoop_dependencies}:`hadoop classpath`",
          "149:     if [ -n \"${hive_dependency}\" ]; then",
          "151:     fi",
          "152:     if [ -n \"${kafka_dependency}\" ]; then",
          "153:         hadoop_dependencies=${hadoop_dependencies}:${kafka_dependency}",
          "154:     fi",
          "159:     # compose KYLIN_TOMCAT_CLASSPATH",
          "160:     tomcat_classpath=${tomcat_root}/bin/bootstrap.jar:${tomcat_root}/bin/tomcat-juli.jar:${tomcat_root}/lib/*",
          "",
          "[Removed Lines]",
          "146: #    if [ -n \"${hbase_dependency}\" ]; then",
          "147: #        hadoop_dependencies=${hadoop_dependencies}:${hbase_dependency}",
          "148: #    fi",
          "150:         hadoop_dependencies=${hadoop_dependencies}:${hive_dependency}",
          "155:     if [ -n \"${spark_dependency}\" ]; then",
          "156:         hadoop_dependencies=${hadoop_dependencies}:${spark_dependency}",
          "157:     fi",
          "",
          "[Added Lines]",
          "147:         hadoop_dependencies=${hive_dependency}:${hadoop_dependencies}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "305:     verbose \"java opts is ${KYLIN_EXTRA_START_OPTS} ${KYLIN_TOMCAT_OPTS}\"",
          "306:     verbose \"java classpath is ${KYLIN_TOMCAT_CLASSPATH}\"",
          "307:     classpathDebug ${KYLIN_TOMCAT_CLASSPATH}",
          "308:     $JAVA ${KYLIN_EXTRA_START_OPTS} ${KYLIN_TOMCAT_OPTS} -classpath ${KYLIN_TOMCAT_CLASSPATH}  org.apache.catalina.startup.Bootstrap start >> ${KYLIN_HOME}/logs/kylin.out 2>&1 & echo $! > ${KYLIN_HOME}/pid &",
          "309: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "302:     # For Sparder",
          "303:     if [ -z ${HADOOP_CONF_DIR} ]",
          "304:     then",
          "305:       export HADOOP_CONF_DIR=${kylin_hadoop_conf_dir}",
          "306:     fi",
          "",
          "---------------"
        ],
        "core-common/src/main/resources/kylin-defaults.properties||core-common/src/main/resources/kylin-defaults.properties": [
          "File: core-common/src/main/resources/kylin-defaults.properties -> core-common/src/main/resources/kylin-defaults.properties",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: ### METADATA | ENV ###",
          "20: # The metadata store has two implementations(RDBMS/HBase), while RDBMS is recommended in Kylin 4.X",
          "22: kylin.metadata.url=kylin_metadata@jdbc,url=jdbc:mysql://localhost:3306/kylin,username=XXXX,password=XXXXXX,maxActive=10,maxIdle=10",
          "24: # metadata cache sync retry times",
          "",
          "[Removed Lines]",
          "21: # Please refer to https://cwiki.apache.org/confluence/display/KYLIN/How+to+use+HBase+metastore+in+Kylin+4.0 if you prefer HBase",
          "",
          "[Added Lines]",
          "21: # Please check https://kylin.apache.org/docs/tutorial/mysql_metastore.html",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "244: # Spark conf (default is in spark/conf/spark-defaults.conf)",
          "245: kylin.engine.spark-conf.spark.master=yarn",
          "247: kylin.engine.spark-conf.spark.yarn.queue=default",
          "248: #kylin.engine.spark-conf.spark.executor.cores=1",
          "249: #kylin.engine.spark-conf.spark.executor.memory=4G",
          "250: #kylin.engine.spark-conf.spark.executor.instances=1",
          "251: #kylin.engine.spark-conf.spark.executor.memoryOverhead=1024M",
          "255: kylin.engine.spark-conf.spark.eventLog.enabled=true",
          "256: kylin.engine.spark-conf.spark.eventLog.dir=hdfs\\:///kylin/spark-history",
          "257: kylin.engine.spark-conf.spark.history.fs.logDirectory=hdfs\\:///kylin/spark-history",
          "",
          "[Removed Lines]",
          "246: #kylin.engine.spark-conf.spark.submit.deployMode=client",
          "252: kylin.engine.spark-conf.spark.driver.cores=1",
          "253: kylin.engine.spark-conf.spark.driver.memory=1G",
          "254: kylin.engine.spark-conf.spark.shuffle.service.enabled=true",
          "",
          "[Added Lines]",
          "246: kylin.engine.spark-conf.spark.submit.deployMode=client",
          "252: #kylin.engine.spark-conf.spark.driver.cores=1",
          "253: #kylin.engine.spark-conf.spark.driver.memory=2G",
          "254: #kylin.engine.spark-conf.spark.driver.memoryOverhead=512M",
          "255: #kylin.engine.spark-conf.spark.shuffle.service.enabled=false",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "266: # uncomment for HDP",
          "267: #kylin.engine.spark-conf.spark.driver.extraJavaOptions=-Dhdp.version=current",
          "268: #kylin.engine.spark-conf.spark.yarn.am.extraJavaOptions=-Dhdp.version=current",
          "270: ### SPARK QUERY ENGINE CONFIGS (a.k.a. Sparder Context) ###",
          "271: # Enlarge cores and memory to improve query performance in production env, please check https://cwiki.apache.org/confluence/display/KYLIN/User+Manual+4.X",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "270: kylin.engine.spark-conf.spark.driver.extraJavaOptions=-XX:+CrashOnOutOfMemoryError",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "282: kylin.query.spark-conf.spark.serializer=org.apache.spark.serializer.JavaSerializer",
          "283: #kylin.query.spark-conf.spark.sql.shuffle.partitions=40",
          "284: #kylin.query.spark-conf.spark.yarn.jars=hdfs://localhost:9000/spark2_jars/*",
          "287: # uncomment for HDP",
          "288: #kylin.query.spark-conf.spark.driver.extraJavaOptions=-Dhdp.version=current",
          "289: #kylin.query.spark-conf.spark.yarn.am.extraJavaOptions=-Dhdp.version=current",
          "",
          "[Removed Lines]",
          "286: kylin.query.spark-conf.spark.executor.extraJavaOptions=-Dhdp.version=current -Dlog4j.configuration=spark-executor-log4j.properties -Dlog4j.debug -Dkylin.hdfs.working.dir=${kylin.env.hdfs-working-dir} -Dkylin.metadata.identifier=${kylin.metadata.url.identifier} -Dkylin.spark.category=sparder -Dkylin.spark.project=${job.project}",
          "",
          "[Added Lines]",
          "287: kylin.query.spark-conf.spark.hadoop.yarn.timeline-service.enabled=false",
          "289: kylin.query.spark-conf.spark.executor.extraJavaOptions=-Dhdp.version=current -Dlog4j.configuration=spark-executor-log4j.properties -Dlog4j.debug -Dkylin.hdfs.working.dir=${kylin.env.hdfs-working-dir} -Dkylin.metadata.identifier=${kylin.metadata.url.identifier} -Dkylin.spark.category=sparder",
          "",
          "---------------"
        ],
        "docker/dockerfile/standalone/conf/bin/kylin.sh||docker/dockerfile/standalone/conf/bin/kylin.sh": [
          "File: docker/dockerfile/standalone/conf/bin/kylin.sh -> docker/dockerfile/standalone/conf/bin/kylin.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "144:     # compose hadoop_dependencies",
          "145:     hadoop_dependencies=${hadoop_dependencies}:`hadoop classpath`",
          "149:     if [ -n \"${hive_dependency}\" ]; then",
          "151:         hadoop_dependencies=${hive_dependency}:${hadoop_dependencies}",
          "152:     fi",
          "153:     if [ -n \"${kafka_dependency}\" ]; then",
          "154:         hadoop_dependencies=${hadoop_dependencies}:${kafka_dependency}",
          "155:     fi",
          "161:     # compose KYLIN_TOMCAT_CLASSPATH",
          "162:     tomcat_classpath=${tomcat_root}/bin/bootstrap.jar:${tomcat_root}/bin/tomcat-juli.jar:${tomcat_root}/lib/*",
          "",
          "[Removed Lines]",
          "146: #    if [ -n \"${hbase_dependency}\" ]; then",
          "147: #        hadoop_dependencies=${hadoop_dependencies}:${hbase_dependency}",
          "148: #    fi",
          "150:         #hadoop_dependencies=${hadoop_dependencies}:${hive_dependency}",
          "156:     if [ -n \"${spark_dependency}\" ]; then",
          "157:         #hadoop_dependencies=${hadoop_dependencies}:${spark_dependency}",
          "158:         hadoop_dependencies=${spark_dependency}:${hadoop_dependencies}",
          "159:     fi",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "271:     exec $JAVA ${KYLIN_EXTRA_START_OPTS} ${KYLIN_TOOL_OPTS} -classpath ${KYLIN_TOOL_CLASSPATH}  \"$@\"",
          "272: }",
          "279: # start command",
          "282:     if [ -f \"${KYLIN_HOME}/pid\" ]",
          "283:     then",
          "284:         PID=`cat $KYLIN_HOME/pid`",
          "",
          "[Removed Lines]",
          "274: if [ \"$2\" == \"--reload-dependency\" ]",
          "275: then",
          "276:     reload_dependency=1",
          "277: fi",
          "280: if [ \"$1\" == \"start\" ]",
          "281: then",
          "",
          "[Added Lines]",
          "267: function retrieveStartCommand() {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "313:     verbose \"java opts is ${KYLIN_EXTRA_START_OPTS} ${KYLIN_TOMCAT_OPTS}\"",
          "314:     verbose \"java classpath is ${KYLIN_TOMCAT_CLASSPATH}\"",
          "315:     classpathDebug ${KYLIN_TOMCAT_CLASSPATH}",
          "316:     $JAVA ${KYLIN_EXTRA_START_OPTS} ${KYLIN_TOMCAT_OPTS} -classpath ${KYLIN_TOMCAT_CLASSPATH}  org.apache.catalina.startup.Bootstrap start >> ${KYLIN_HOME}/logs/kylin.out 2>&1 & echo $! > ${KYLIN_HOME}/pid &",
          "333:     if [ -f \"${KYLIN_HOME}/pid\" ]",
          "334:     then",
          "335:         PID=`cat $KYLIN_HOME/pid`",
          "",
          "[Removed Lines]",
          "318:     echo \"\"",
          "319:     echo \"A new Kylin instance is started by $USER. To stop it, run 'kylin.sh stop'\"",
          "320:     echo \"Check the log at ${KYLIN_HOME}/logs/kylin.log\"",
          "321:     echo \"Web UI is at http://${KYLIN_REST_ADDRESS}/kylin\"",
          "322:     exit 0",
          "324: # run command",
          "325: elif [ \"$1\" == \"run\" ]",
          "326: then",
          "327:     retrieveStartCommand",
          "328:     ${start_command}",
          "330: # stop command",
          "331: elif [ \"$1\" == \"stop\" ]",
          "332: then",
          "",
          "[Added Lines]",
          "302:     # For Sparder",
          "303:     if [ -z ${HADOOP_CONF_DIR} ]",
          "304:     then",
          "305:       export HADOOP_CONF_DIR=${kylin_hadoop_conf_dir}",
          "306:     fi",
          "308: }",
          "310: function retrieveStopCommand() {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "343:             for ((i=0; i<$LOOP_COUNTER; i++))",
          "344:             do",
          "346:                 sleep $WAIT_TIME",
          "347:                 if ps -p $PID > /dev/null ; then",
          "348:                     echo \"Stopping in progress. Will check after $WAIT_TIME secs again...\"",
          "",
          "[Removed Lines]",
          "345:                 # wait to process stopped",
          "",
          "[Added Lines]",
          "323:                 # wait to process stopped",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "364:                 fi",
          "365:             fi",
          "368:             rm -rf ${KYLIN_HOME}/pid",
          "369:             echo \"Kylin with pid ${PID} has been stopped.\"",
          "371:         else",
          "373:         fi",
          "374:     else",
          "376:     fi",
          "380: then",
          "473:     then",
          "486:         exit 0",
          "487:     fi",
          "489: elif [ \"$1\" = \"version\" ]",
          "490: then",
          "491:     runTool org.apache.kylin.common.KylinVersion",
          "",
          "[Removed Lines]",
          "367:             # process is killed , remove pid file",
          "370:             exit 0",
          "372:            quit \"Kylin with pid ${PID} is not running\"",
          "375:         quit \"Kylin is not running\"",
          "378: # streaming command",
          "379: elif [ \"$1\" == \"streaming\" ]",
          "381:     if [ $# -lt 2 ]",
          "382:     then",
          "383:         echo \"Invalid input args $@\"",
          "384:         exit -1",
          "385:     fi",
          "386:     if [ \"$2\" == \"start\" ]",
          "387:     then",
          "388:         if [ -f \"${KYLIN_HOME}/streaming_receiver_pid\" ]",
          "389:         then",
          "390:             PID=`cat $KYLIN_HOME/streaming_receiver_pid`",
          "391:             if ps -p $PID > /dev/null",
          "392:             then",
          "393:               echo \"Kylin streaming receiver is running, stop it first\"",
          "394:             exit 1",
          "395:             fi",
          "396:         fi",
          "397:         #retrive $hbase_dependency",
          "398:         metadataUrl=`${dir}/get-properties.sh kylin.metadata.url`",
          "399:         if [[ \"${metadataUrl##*@}\" == \"hbase\" ]]",
          "400:         then",
          "401:             source ${dir}/find-hbase-dependency.sh",
          "402:         fi",
          "403:         #retrive $KYLIN_EXTRA_START_OPTS",
          "404:         if [ -f \"${KYLIN_HOME}/conf/setenv.sh\" ]",
          "405:             then source ${KYLIN_HOME}/conf/setenv.sh",
          "406:         fi",
          "408:         mkdir -p ${KYLIN_HOME}/ext",
          "409:         HBASE_CLASSPATH=`hbase classpath`",
          "410:         #echo \"hbase class path:\"$HBASE_CLASSPATH",
          "411:         STREAM_CLASSPATH=${KYLIN_HOME}/lib/streaming/*:${KYLIN_HOME}/ext/*:${HBASE_CLASSPATH}",
          "413:         # KYLIN_EXTRA_START_OPTS is for customized settings, checkout bin/setenv.sh",
          "414:         $JAVA -cp $STREAM_CLASSPATH ${KYLIN_EXTRA_START_OPTS} \\",
          "415:         -Dlog4j.configuration=stream-receiver-log4j.properties\\",
          "416:         -DKYLIN_HOME=${KYLIN_HOME}\\",
          "417:         -Dkylin.hbase.dependency=${hbase_dependency} \\",
          "418:         org.apache.kylin.stream.server.StreamingReceiver $@ > ${KYLIN_HOME}/logs/streaming_receiver.out 2>&1 & echo $! > ${KYLIN_HOME}/streaming_receiver_pid &",
          "419:         exit 0",
          "420:     elif [ \"$2\" == \"stop\" ]",
          "421:     then",
          "422:         if [ ! -f \"${KYLIN_HOME}/streaming_receiver_pid\" ]",
          "423:         then",
          "424:             echo \"Streaming receiver is not running, please check\"",
          "425:             exit 1",
          "426:         fi",
          "427:         PID=`cat ${KYLIN_HOME}/streaming_receiver_pid`",
          "428:         if [ \"$PID\" = \"\" ]",
          "429:         then",
          "430:             echo \"Streaming receiver is not running, please check\"",
          "431:             exit 1",
          "432:         else",
          "433:             echo \"Stopping streaming receiver: $PID\"",
          "434:             WAIT_TIME=2",
          "435:             LOOP_COUNTER=20",
          "436:             if ps -p $PID > /dev/null",
          "437:             then",
          "438:                 kill $PID",
          "440:                 for ((i=0; i<$LOOP_COUNTER; i++))",
          "441:                 do",
          "442:                     # wait to process stopped",
          "443:                     sleep $WAIT_TIME",
          "444:                     if ps -p $PID > /dev/null ; then",
          "445:                         echo \"Stopping in progress. Will check after $WAIT_TIME secs again...\"",
          "446:                         continue;",
          "447:                     else",
          "448:                         break;",
          "449:                     fi",
          "450:                 done",
          "452:                 # if process is still around, use kill -9",
          "453:                 if ps -p $PID > /dev/null",
          "454:                 then",
          "455:                     echo \"Initial kill failed, getting serious now...\"",
          "456:                     kill -9 $PID",
          "457:                     sleep 1 #give kill -9  sometime to \"kill\"",
          "458:                     if ps -p $PID > /dev/null",
          "459:                     then",
          "460:                        quit \"Warning, even kill -9 failed, giving up! Sorry...\"",
          "461:                     fi",
          "462:                 fi",
          "464:                 # process is killed , remove pid file",
          "465:                 rm -rf ${KYLIN_HOME}/streaming_receiver_pid",
          "466:                 echo \"Kylin streaming receiver with pid ${PID} has been stopped.\"",
          "467:                 exit 0",
          "468:             else",
          "469:                quit \"Kylin streaming receiver with pid ${PID} is not running\"",
          "470:             fi",
          "471:         fi",
          "472:     elif [[ \"$2\" = org.apache.kylin.* ]]",
          "474:         source ${KYLIN_HOME}/conf/setenv.sh",
          "475:         HBASE_CLASSPATH=`hbase classpath`",
          "476:         #echo \"hbase class path:\"$HBASE_CLASSPATH",
          "477:         STREAM_CLASSPATH=${KYLIN_HOME}/lib/streaming/*:${KYLIN_HOME}/ext/*:${HBASE_CLASSPATH}",
          "479:         shift",
          "480:         # KYLIN_EXTRA_START_OPTS is for customized settings, checkout bin/setenv.sh",
          "481:         $JAVA -cp $STREAM_CLASSPATH ${KYLIN_EXTRA_START_OPTS} \\",
          "482:         -Dlog4j.configuration=stream-receiver-log4j.properties\\",
          "483:         -DKYLIN_HOME=${KYLIN_HOME}\\",
          "484:         -Dkylin.hbase.dependency=${hbase_dependency} \\",
          "485:         \"$@\"",
          "",
          "[Added Lines]",
          "345:             # process is killed , remove pid file",
          "348:             return 0",
          "350:            echo \"Kylin with pid ${PID} is not running\"",
          "351:            return 1",
          "354:         return 1",
          "356: }",
          "358: if [ \"$2\" == \"--reload-dependency\" ]",
          "360:     reload_dependency=1",
          "361: fi",
          "363: # start command",
          "364: if [ \"$1\" == \"start\" ]",
          "365: then",
          "366:     retrieveStartCommand",
          "368:     echo \"\"",
          "369:     echo \"A new Kylin instance is started by $USER. To stop it, run 'kylin.sh stop'\"",
          "370:     echo \"Check the log at ${KYLIN_HOME}/logs/kylin.log\"",
          "371:     echo \"Web UI is at http://${KYLIN_REST_ADDRESS}/kylin\"",
          "372:     exit 0",
          "374: # run command",
          "375: elif [ \"$1\" == \"run\" ]",
          "376: then",
          "377:     retrieveStartCommand",
          "378:     ${start_command}",
          "380: # stop command",
          "381: elif [ \"$1\" == \"stop\" ]",
          "382: then",
          "383:     retrieveStopCommand",
          "384:     if [[ $? == 0 ]]",
          "387:     else",
          "388:         quit \"Kylin is not running\"",
          "391: # restart command",
          "392: elif [ \"$1\" == \"restart\" ]",
          "393: then",
          "394:     echo \"Restarting kylin...\"",
          "395:     echo \"--> Stopping kylin first if it's running...\"",
          "396:     retrieveStopCommand",
          "397:     if [[ $? != 0 ]]",
          "398:     then",
          "399:         echo \"Kylin is not running, now start it\"",
          "400:     fi",
          "401:     echo \"--> Start kylin...\"",
          "402:     retrieveStartCommand",
          "404:     echo \"\"",
          "405:     echo \"A new Kylin instance is started by $USER. To stop it, run 'kylin.sh stop'\"",
          "406:     echo \"Check the log at ${KYLIN_HOME}/logs/kylin.log\"",
          "407:     echo \"Web UI is at http://${KYLIN_REST_ADDRESS}/kylin\"",
          "408:     exit 0",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "500: then",
          "501:     runTool \"$@\"",
          "502: else",
          "504: fi",
          "",
          "[Removed Lines]",
          "503:     quit \"Usage: 'kylin.sh [-v] start' or 'kylin.sh [-v] stop'\"",
          "",
          "[Added Lines]",
          "424:     quit \"Usage: 'kylin.sh [-v] start' or 'kylin.sh [-v] stop' or 'kylin.sh [-v] restart'\"",
          "",
          "---------------"
        ],
        "kylin-spark-project/kylin-spark-classloader/src/main/java/org/apache/kylin/spark/classloader/SparkClassLoader.java||kylin-spark-project/kylin-spark-classloader/src/main/java/org/apache/kylin/spark/classloader/SparkClassLoader.java": [
          "File: kylin-spark-project/kylin-spark-classloader/src/main/java/org/apache/kylin/spark/classloader/SparkClassLoader.java -> kylin-spark-project/kylin-spark-classloader/src/main/java/org/apache/kylin/spark/classloader/SparkClassLoader.java"
        ],
        "kylin-spark-project/kylin-spark-common/src/main/java/org/apache/kylin/engine/spark/metadata/cube/PathManager.java||kylin-spark-project/kylin-spark-common/src/main/java/org/apache/kylin/engine/spark/metadata/cube/PathManager.java": [
          "File: kylin-spark-project/kylin-spark-common/src/main/java/org/apache/kylin/engine/spark/metadata/cube/PathManager.java -> kylin-spark-project/kylin-spark-common/src/main/java/org/apache/kylin/engine/spark/metadata/cube/PathManager.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:     public static boolean deleteSegmentParquetStoragePath(CubeInstance cube, String segmentName, String identifier) throws IOException {",
          "63:             return false;",
          "64:         }",
          "65:         String path = getSegmentParquetStoragePath(cube, segmentName, identifier);",
          "",
          "[Removed Lines]",
          "62:         if (cube == null || StringUtils.isNoneBlank(segmentName)|| StringUtils.isNoneBlank(identifier)) {",
          "",
          "[Added Lines]",
          "62:         if (cube == null || StringUtils.isBlank(segmentName) || StringUtils.isBlank(identifier)) {",
          "",
          "---------------"
        ],
        "kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkExecutable.java||kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkExecutable.java": [
          "File: kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkExecutable.java -> kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/job/NSparkExecutable.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "400:                 String.format(Locale.ROOT, \"%s:%s\", APP_JAR_NAME,",
          "401:                         Paths.get(kylinJobJar).getFileName().toString()) : kylinJobJar);",
          "406:         String sparkUploadFiles = config.sparkUploadFiles(isLocalMaster(sparkConfs), isYarnCluster);",
          "407:         if (StringUtils.isNotBlank(sparkUploadFiles)) {",
          "408:             sb.append(\"--files \").append(sparkUploadFiles).append(\" \");",
          "",
          "[Removed Lines]",
          "403:         if (sparkConfs.containsKey(\"spark.sql.hive.metastore.jars\")) {",
          "404:             jars = jars + \",\" + sparkConfs.get(\"spark.sql.hive.metastore.jars\");",
          "405:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/conf/rule/SparkConfRule.scala||kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/conf/rule/SparkConfRule.scala": [
          "File: kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/conf/rule/SparkConfRule.scala -> kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/conf/rule/SparkConfRule.scala",
          "--- Hunk 1 ---",
          "[Context before]",
          "107:     logInfo(s\"The number of instances calculated by cuboids \" +",
          "108:       s\"is: $calculateExecutorInsByLayoutSize\")",
          "112:     val executorMem = (Utils.byteStringAsMb(helper.getConf(SparkConfHelper.EXECUTOR_MEMORY)) +",
          "113:       Utils.byteStringAsMb(helper.getConf(SparkConfHelper.EXECUTOR_OVERHEAD)))",
          "",
          "[Removed Lines]",
          "110:     val availableMem = helper.getFetcher.fetchQueueAvailableResource(queue).available.memory",
          "111:     val availableCore = helper.getFetcher.fetchQueueAvailableResource(queue).available.vCores",
          "",
          "[Added Lines]",
          "110:     var availableMem = Int.MaxValue",
          "111:     try {",
          "112:       availableMem = helper.getFetcher.fetchQueueAvailableResource(queue).available.memory",
          "113:     } catch {",
          "114:       case throwable: Throwable =>",
          "115:         logWarning(s\"Error when getting available memory from cluster, ignore it.\")",
          "116:     }",
          "117:     var availableCore = Int.MaxValue",
          "118:     try {",
          "119:       availableCore = helper.getFetcher.fetchQueueAvailableResource(queue).available.vCores",
          "120:     } catch {",
          "121:       case throwable: Throwable =>",
          "122:         logWarning(s\"Error when getting available cpus from cluster, ignore it.\")",
          "123:     }",
          "",
          "---------------"
        ],
        "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/utils/ResourceUtils.scala||kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/utils/ResourceUtils.scala": [
          "File: kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/utils/ResourceUtils.scala -> kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/utils/ResourceUtils.scala",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:   def checkResource(sparkConf: SparkConf, clusterInfo: ClusterInfoFetcher): Boolean = {",
          "69:     val queue = sparkConf.get(\"spark.yarn.queue\", \"default\")",
          "72:     val queueAvailable = minusDriverResource(clusterInfo.fetchQueueAvailableResource(queue), driverMemory, driverCores)",
          "73:     val instances = sparkConf.get(EXECUTOR_INSTANCES).toInt",
          "74:     val executorMemory = (Utils.byteStringAsMb(sparkConf.get(EXECUTOR_MEMORY))",
          "",
          "[Removed Lines]",
          "70:     val driverMemory = (Utils.byteStringAsMb(sparkConf.get(DRIVER_MEMORY)) + Utils.byteStringAsMb(sparkConf.get(DRIVER_OVERHEAD))).toInt",
          "71:     val driverCores = sparkConf.get(DRIVER_CORES).toInt",
          "",
          "[Added Lines]",
          "70:     var driverMemory = Utils.byteStringAsMb(sparkConf.get(DRIVER_MEMORY)).toInt",
          "71:     if (sparkConf.contains(DRIVER_OVERHEAD)) {",
          "72:       driverMemory = driverMemory + Utils.byteStringAsMb(sparkConf.get(DRIVER_OVERHEAD)).toInt",
          "73:     }",
          "74:     val driverCores = sparkConf.get(DRIVER_CORES, \"1\").toInt",
          "",
          "---------------"
        ],
        "kylin-spark-project/kylin-spark-query/src/main/scala/org/apache/spark/sql/KylinSession.scala||kylin-spark-project/kylin-spark-query/src/main/scala/org/apache/spark/sql/KylinSession.scala": [
          "File: kylin-spark-project/kylin-spark-query/src/main/scala/org/apache/spark/sql/KylinSession.scala -> kylin-spark-project/kylin-spark-query/src/main/scala/org/apache/spark/sql/KylinSession.scala",
          "--- Hunk 1 ---",
          "[Context before]",
          "136:     private lazy val conf: KylinConfig = KylinConfig.getInstanceFromEnv",
          "138:     def initSparkConf(sparkConf: SparkConf): SparkConf = {",
          "139:       if (sparkConf.getBoolean(\"user.kylin.session\", false)) {",
          "140:         return sparkConf",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "138:     def setDistJarFiles(sparkConf: SparkConf, key: String, value: String): Unit = {",
          "139:       if (sparkConf.contains(key)) {",
          "140:         sparkConf.set(key, value + \",\" + sparkConf.get(key))",
          "141:       } else {",
          "142:         sparkConf.set(key, value)",
          "143:       }",
          "144:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "173:       if (!\"true\".equalsIgnoreCase(System.getProperty(\"spark.local\"))) {",
          "174:         if (sparkConf.get(\"spark.master\").startsWith(\"yarn\")) {",
          "176:             KylinConfig.getInstanceFromEnv.getKylinParquetJobJarPath)",
          "178:         } else {",
          "181:         }",
          "183:         val fileName = KylinConfig.getInstanceFromEnv.getKylinParquetJobJarPath",
          "",
          "[Removed Lines]",
          "175:           sparkConf.set(\"spark.yarn.dist.jars\",",
          "177:           sparkConf.set(\"spark.yarn.dist.files\", conf.sparkUploadFiles())",
          "179:           sparkConf.set(\"spark.jars\", conf.sparderJars)",
          "180:           sparkConf.set(\"spark.files\", conf.sparkUploadFiles())",
          "",
          "[Added Lines]",
          "183:           setDistJarFiles(sparkConf, \"spark.yarn.dist.jars\",",
          "185:           setDistJarFiles(sparkConf, \"spark.yarn.dist.files\", conf.sparkUploadFiles())",
          "187:           setDistJarFiles(sparkConf, \"spark.jars\",",
          "188:             KylinConfig.getInstanceFromEnv.getKylinParquetJobJarPath)",
          "189:           setDistJarFiles(sparkConf, \"spark.files\", conf.sparkUploadFiles())",
          "",
          "---------------"
        ],
        "server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java||server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java": [
          "File: server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java -> server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "82: import org.apache.kylin.rest.service.QueryService;",
          "83: import org.apache.kylin.rest.util.AclEvaluate;",
          "84: import org.apache.kylin.rest.util.ValidateUtil;",
          "85: import org.slf4j.Logger;",
          "86: import org.slf4j.LoggerFactory;",
          "87: import org.springframework.beans.factory.annotation.Autowired;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "85: import org.apache.kylin.shaded.com.google.common.collect.Maps;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "174:     @RequestMapping(value = \"validEncodings\", method = { RequestMethod.GET }, produces = { \"application/json\" })",
          "175:     @ResponseBody",
          "176:     public Map<String, Integer> getValidEncodings() {",
          "178:     }",
          "180:     @RequestMapping(value = \"/{cubeName}\", method = { RequestMethod.GET }, produces = { \"application/json\" })",
          "",
          "[Removed Lines]",
          "177:         throw new UnsupportedOperationException(\"Unsupported in Kylin 4.0 .\");",
          "",
          "[Added Lines]",
          "178:         Map<String, Integer> encodings;",
          "179:         try {",
          "180:             encodings = DimensionEncodingFactory.getValidEncodings();",
          "181:         } catch (Exception e) {",
          "182:             logger.error(\"Error when getting valid encodings\", e);",
          "183:             return Maps.newHashMap();",
          "184:         }",
          "185:         return encodings;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a6941e35bda6a4d819b966c0c040b0931c84630f",
      "candidate_info": {
        "commit_hash": "a6941e35bda6a4d819b966c0c040b0931c84630f",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/a6941e35bda6a4d819b966c0c040b0931c84630f",
        "files": [
          "core-common/src/main/java/org/apache/kylin/common/KylinConfig.java",
          "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "core-common/src/main/java/org/apache/kylin/common/util/AbstractApplication.java",
          "core-common/src/main/java/org/apache/kylin/common/util/OptionsHelper.java",
          "docker/dockerfile/standalone/conf/bin/kylin.sh",
          "server-base/src/main/java/org/apache/kylin/rest/job/StorageCleanupJob.java"
        ],
        "message": "KYLIN-5179, fix StorageCleanupJob remove invalid segement",
        "before_after_code_files": [
          "core-common/src/main/java/org/apache/kylin/common/KylinConfig.java||core-common/src/main/java/org/apache/kylin/common/KylinConfig.java",
          "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "core-common/src/main/java/org/apache/kylin/common/util/AbstractApplication.java||core-common/src/main/java/org/apache/kylin/common/util/AbstractApplication.java",
          "core-common/src/main/java/org/apache/kylin/common/util/OptionsHelper.java||core-common/src/main/java/org/apache/kylin/common/util/OptionsHelper.java",
          "docker/dockerfile/standalone/conf/bin/kylin.sh||docker/dockerfile/standalone/conf/bin/kylin.sh",
          "server-base/src/main/java/org/apache/kylin/rest/job/StorageCleanupJob.java||server-base/src/main/java/org/apache/kylin/rest/job/StorageCleanupJob.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [
            "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java"
          ],
          "candidate": [
            "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java"
          ]
        }
      },
      "candidate_diff": {
        "core-common/src/main/java/org/apache/kylin/common/KylinConfig.java||core-common/src/main/java/org/apache/kylin/common/KylinConfig.java": [
          "File: core-common/src/main/java/org/apache/kylin/common/KylinConfig.java -> core-common/src/main/java/org/apache/kylin/common/KylinConfig.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "356:     static File getSitePropertiesFile() {",
          "358:         if (!StringUtils.isEmpty(kylinConfHome)) {",
          "359:             logger.info(\"Use KYLIN_CONF={}\", kylinConfHome);",
          "360:             return existFile(kylinConfHome);",
          "",
          "[Removed Lines]",
          "357:         String kylinConfHome = System.getProperty(KYLIN_CONF);",
          "",
          "[Added Lines]",
          "357:         String kylinConfHome = getKylinConfHome();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "363:         logger.debug(\"KYLIN_CONF property was not set, will seek KYLIN_HOME env variable\");",
          "365:         String kylinHome = getKylinHome();",
          "367:             throw new KylinConfigCannotInitException(\"Didn't find KYLIN_CONF or KYLIN_HOME, please set one of them\");",
          "369:         logger.info(\"Use KYLIN_HOME={}\", kylinHome);",
          "370:         String path = kylinHome + File.separator + \"conf\";",
          "",
          "[Removed Lines]",
          "366:         if (StringUtils.isEmpty(kylinHome))",
          "",
          "[Added Lines]",
          "366:         if (StringUtils.isEmpty(kylinHome)) {",
          "368:         }",
          "",
          "---------------"
        ],
        "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java": [
          "File: core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java -> core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "103:         this.properties = force ? props : BCC.check(props);",
          "104:     }",
          "106:     public static String getKylinHome() {",
          "107:         String kylinHome = getKylinHomeWithoutWarn();",
          "108:         if (StringUtils.isEmpty(kylinHome)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "106:     public static String getKylinConfHome() {",
          "107:         String kylinConfHome = getKylinConfHomeWithoutWarn();",
          "108:         if (StringUtils.isEmpty(kylinConfHome)) {",
          "109:             logger.warn(\"KYLIN_CONF was not set\");",
          "110:         }",
          "111:         return kylinConfHome;",
          "112:     }",
          "114:     public static String getKylinConfHomeWithoutWarn() {",
          "115:         String kylinConfHome = System.getenv(\"KYLIN_CONF\");",
          "116:         if (StringUtils.isEmpty(kylinConfHome)) {",
          "117:             kylinConfHome = System.getProperty(\"KYLIN_CONF\");",
          "118:         }",
          "119:         return kylinConfHome;",
          "120:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "279:         return result;",
          "280:     }",
          "282:     public String toString() {",
          "283:         return getMetadataUrl().toString();",
          "284:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "298:     @Override",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "298:     }",
          "300:     public String getHdfsWorkingDirectory() {",
          "302:             return cachedHdfsWorkingDirectory;",
          "304:         String root = getOptional(\"kylin.env.hdfs-working-dir\", \"/kylin\");",
          "",
          "[Removed Lines]",
          "301:         if (cachedHdfsWorkingDirectory != null)",
          "",
          "[Added Lines]",
          "318:         if (cachedHdfsWorkingDirectory != null) {",
          "320:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "325:         root = new Path(path, metaId).toString();",
          "328:             root += \"/\";",
          "330:         cachedHdfsWorkingDirectory = root;",
          "331:         if (cachedHdfsWorkingDirectory.startsWith(FILE_SCHEME)) {",
          "",
          "[Removed Lines]",
          "327:         if (!root.endsWith(\"/\"))",
          "",
          "[Added Lines]",
          "345:         if (!root.endsWith(\"/\")) {",
          "347:         }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "348:         }",
          "350:         Path path = new Path(root);",
          "352:             throw new IllegalArgumentException(",
          "353:                     \"kylin.env.hdfs-metastore-bigcell-dir must be absolute, but got \" + root);",
          "356:         try {",
          "",
          "[Removed Lines]",
          "351:         if (!path.isAbsolute())",
          "",
          "[Added Lines]",
          "370:         if (!path.isAbsolute()) {",
          "373:         }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3136:     private String getLogPropertyFile(String filename) {",
          "3137:         if (isDevEnv()) {",
          "3138:             return Paths.get(getKylinHomeWithoutWarn(),",
          "3140:         } else {",
          "3141:             return Paths.get(getKylinHomeWithoutWarn(),",
          "3143:         }",
          "3144:     }",
          "",
          "[Removed Lines]",
          "3139:                     \"build\", \"conf\").toString() + File.separator + filename;",
          "3142:                     \"conf\").toString() + File.separator + filename;",
          "",
          "[Added Lines]",
          "3159:                     \"build\", \"conf\") + File.separator + filename;",
          "3162:                     \"conf\") + File.separator + filename;",
          "",
          "---------------"
        ],
        "core-common/src/main/java/org/apache/kylin/common/util/AbstractApplication.java||core-common/src/main/java/org/apache/kylin/common/util/AbstractApplication.java": [
          "File: core-common/src/main/java/org/apache/kylin/common/util/AbstractApplication.java -> core-common/src/main/java/org/apache/kylin/common/util/AbstractApplication.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:         System.out.println(\"Running \" + this.getClass().getName() + \" \" + StringUtils.join(args, \" \"));",
          "35:         try {",
          "36:             optionsHelper.parseOptions(getOptions(), args);",
          "37:             execute(optionsHelper);",
          "38:         } catch (ParseException e) {",
          "39:             optionsHelper.printUsage(this.getClass().getName(), getOptions());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37:             if (optionsHelper.isHelpOption()) {",
          "38:                 optionsHelper.printUsage(this.getClass().getName(), getOptions());",
          "39:                 return;",
          "40:             }",
          "",
          "---------------"
        ],
        "core-common/src/main/java/org/apache/kylin/common/util/OptionsHelper.java||core-common/src/main/java/org/apache/kylin/common/util/OptionsHelper.java": [
          "File: core-common/src/main/java/org/apache/kylin/common/util/OptionsHelper.java -> core-common/src/main/java/org/apache/kylin/common/util/OptionsHelper.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:         formatter.printHelp(programName, options);",
          "69:     }",
          "71:     public static String convertToFileURL(String path) {",
          "72:         if (File.separatorChar != '/') {",
          "73:             path = path.replace(File.separatorChar, '/');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71:     public boolean isHelpOption() throws ParseException {",
          "72:         return commandLine.hasOption(\"help\");",
          "73:     }",
          "",
          "---------------"
        ],
        "docker/dockerfile/standalone/conf/bin/kylin.sh||docker/dockerfile/standalone/conf/bin/kylin.sh": [
          "File: docker/dockerfile/standalone/conf/bin/kylin.sh -> docker/dockerfile/standalone/conf/bin/kylin.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "153:     # compose KYLIN_TOMCAT_CLASSPATH",
          "154:     tomcat_classpath=${tomcat_root}/bin/bootstrap.jar:${tomcat_root}/bin/tomcat-juli.jar:${tomcat_root}/lib/*",
          "157:     # compose KYLIN_TOOL_CLASSPATH",
          "160:     # compose kylin_common_opts",
          "161:     kylin_common_opts=\"-Dkylin.hive.dependency=${hive_dependency} \\",
          "",
          "[Removed Lines]",
          "155:     export KYLIN_TOMCAT_CLASSPATH=${tomcat_classpath}:${KYLIN_HOME}/conf:${KYLIN_HOME}/lib/*:${KYLIN_HOME}/ext/*:${hadoop_dependencies}:${flink_dependency}",
          "158:     export KYLIN_TOOL_CLASSPATH=${KYLIN_HOME}/conf:${KYLIN_HOME}/tool/*:${KYLIN_HOME}/ext/*:${hadoop_dependencies}",
          "",
          "[Added Lines]",
          "155:     export KYLIN_TOMCAT_CLASSPATH=${tomcat_classpath}:${KYLIN_HOME}/conf:${KYLIN_HOME}/lib/*:${KYLIN_HOME}/ext/*:${hadoop_dependencies}",
          "158:     export KYLIN_TOOL_CLASSPATH=${KYLIN_HOME}/conf:${KYLIN_HOME}/hadoop_conf:${KYLIN_HOME}/tool/*:${KYLIN_HOME}/ext/*:${hadoop_dependencies}",
          "",
          "---------------"
        ],
        "server-base/src/main/java/org/apache/kylin/rest/job/StorageCleanupJob.java||server-base/src/main/java/org/apache/kylin/rest/job/StorageCleanupJob.java": [
          "File: server-base/src/main/java/org/apache/kylin/rest/job/StorageCleanupJob.java -> server-base/src/main/java/org/apache/kylin/rest/job/StorageCleanupJob.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:     private static final String GLOBAL_DICT_PREFIX = \"/dict/global_dict/\";",
          "67:     private static final String TABLE_SNAPSHOT_PREFIX = \"/table_snapshot/\";",
          "69:     @SuppressWarnings(\"static-access\")",
          "70:     protected static final Option OPTION_DELETE = OptionBuilder.withArgName(\"delete\")",
          "71:             .hasArg().isRequired(false)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "69:     @SuppressWarnings(\"static-access\")",
          "70:     protected static final Option OPTION_HELP = OptionBuilder",
          "71:             .hasArg(false)",
          "72:             .isRequired(false)",
          "73:             .withDescription(\"Print supported operations.\")",
          "74:             .create(\"help\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "130:     @Override",
          "131:     protected Options getOptions() {",
          "132:         Options options = new Options();",
          "133:         options.addOption(OPTION_DELETE);",
          "134:         options.addOption(OPTION_CLEANUP_GLOBAL_DICT);",
          "135:         options.addOption(OPTION_CLEANUP_TABLE_SNAPSHOT);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "140:         options.addOption(OPTION_HELP);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "156db2afaa06dcfd7990e9d828cc9db0e6344ec9",
      "candidate_info": {
        "commit_hash": "156db2afaa06dcfd7990e9d828cc9db0e6344ec9",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/156db2afaa06dcfd7990e9d828cc9db0e6344ec9",
        "files": [
          "webapp/app/partials/cubes/cubes.html"
        ],
        "message": "Correct grammar of message when there are no cubes\n\n(cherry picked from commit 2a734f166bbebd77b673399ed321110dfb19cb98)",
        "before_after_code_files": [
          "webapp/app/partials/cubes/cubes.html||webapp/app/partials/cubes/cubes.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "webapp/app/partials/cubes/cubes.html||webapp/app/partials/cubes/cubes.html": [
          "File: webapp/app/partials/cubes/cubes.html -> webapp/app/partials/cubes/cubes.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:     </div>",
          "38:     <div ng-if=\"!loading && cubeList.cubes.length == 0\">",
          "40:     </div>",
          "41:     <table ng-if=\"cubeList.cubes.length > 0\" class=\"table table-striped table-bordered table-hover dataTable no-footer\">",
          "42:         <!--Header-->",
          "",
          "[Removed Lines]",
          "39:         <div no-result text=\"No Cube.\"></div>",
          "",
          "[Added Lines]",
          "39:         <div no-result text=\"No Cubes.\"></div>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7294e6dd4d7b546f1bc480e7c074c3518cbcd97c",
      "candidate_info": {
        "commit_hash": "7294e6dd4d7b546f1bc480e7c074c3518cbcd97c",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/7294e6dd4d7b546f1bc480e7c074c3518cbcd97c",
        "files": [
          "core-storage/src/main/java/org/apache/kylin/storage/gtrecord/CubeTupleConverter.java"
        ],
        "message": "KYLIN-4731 Kylin query failing with 'NPE while executing SQL'\n\nPlease see the detailed info: https://issues.apache.org/jira/projects/KYLIN/issues/KYLIN-4731\n\n(cherry picked from commit e6d9fb0c3d5684d391ea1c8085e2e4bfe8f303db)",
        "before_after_code_files": [
          "core-storage/src/main/java/org/apache/kylin/storage/gtrecord/CubeTupleConverter.java||core-storage/src/main/java/org/apache/kylin/storage/gtrecord/CubeTupleConverter.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "core-storage/src/main/java/org/apache/kylin/storage/gtrecord/CubeTupleConverter.java||core-storage/src/main/java/org/apache/kylin/storage/gtrecord/CubeTupleConverter.java": [
          "File: core-storage/src/main/java/org/apache/kylin/storage/gtrecord/CubeTupleConverter.java -> core-storage/src/main/java/org/apache/kylin/storage/gtrecord/CubeTupleConverter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "299:                     for (int i = 0; i < hostTmpIdx.length; i++) {",
          "300:                         lookupKey.data[i] = CubeTupleConverter.toString(gtValues[hostTmpIdx[i]]);",
          "303:                             lookupKey.data[i] = String.valueOf(DateFormat.stringToMillis(lookupKey.data[i]));",
          "304:                         }",
          "305:                     }",
          "",
          "[Removed Lines]",
          "302:                         if (deriveInfo.join.getPrimaryKeyColumns()[i].getType().isDateTimeFamily()) {",
          "",
          "[Added Lines]",
          "302:                         if (lookupKey.data[i] != null && deriveInfo.join.getPrimaryKeyColumns()[i].getType().isDateTimeFamily()) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f5ec8f3dd1a70c5e1125966e144d492248030de4",
      "candidate_info": {
        "commit_hash": "f5ec8f3dd1a70c5e1125966e144d492248030de4",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/f5ec8f3dd1a70c5e1125966e144d492248030de4",
        "files": [
          "core-metadata/src/main/java/org/apache/kylin/metadata/util/ModelUtil.java",
          "server-base/src/main/java/org/apache/kylin/rest/service/ModelService.java",
          "server/src/test/java/org/apache/kylin/rest/service/ModelServiceTest.java"
        ],
        "message": "[KYLIN-4554] validate filter condition on model saving, fix bug added all the columns of all tables to the validate collection",
        "before_after_code_files": [
          "core-metadata/src/main/java/org/apache/kylin/metadata/util/ModelUtil.java||core-metadata/src/main/java/org/apache/kylin/metadata/util/ModelUtil.java",
          "server-base/src/main/java/org/apache/kylin/rest/service/ModelService.java||server-base/src/main/java/org/apache/kylin/rest/service/ModelService.java",
          "server/src/test/java/org/apache/kylin/rest/service/ModelServiceTest.java||server/src/test/java/org/apache/kylin/rest/service/ModelServiceTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "core-metadata/src/main/java/org/apache/kylin/metadata/util/ModelUtil.java||core-metadata/src/main/java/org/apache/kylin/metadata/util/ModelUtil.java": [
          "File: core-metadata/src/main/java/org/apache/kylin/metadata/util/ModelUtil.java -> core-metadata/src/main/java/org/apache/kylin/metadata/util/ModelUtil.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: package org.apache.kylin.metadata.util;",
          "21: import java.util.List;",
          "22: import java.util.Locale;",
          "24: import org.apache.calcite.sql.SqlCall;",
          "25: import org.apache.calcite.sql.SqlIdentifier;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: import java.util.Arrays;",
          "24: import java.util.stream.Collectors;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27: import org.apache.calcite.sql.SqlSelect;",
          "28: import org.apache.calcite.sql.parser.SqlParser;",
          "29: import org.apache.calcite.sql.util.SqlBasicVisitor;",
          "31: import org.slf4j.Logger;",
          "32: import org.slf4j.LoggerFactory;",
          "",
          "[Removed Lines]",
          "30: import org.apache.kylin.metadata.model.TableDesc;",
          "",
          "[Added Lines]",
          "32: import org.apache.kylin.metadata.TableMetadataManager;",
          "33: import org.apache.kylin.metadata.model.ColumnDesc;",
          "34: import org.apache.kylin.metadata.model.DataModelDesc;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "38:     private static final Logger logger = LoggerFactory.getLogger(ModelUtil.class);",
          "42:         StringBuilder checkSql = new StringBuilder();",
          "45:         SqlCall inputToNode = (SqlCall) parse(doubleQuoteKeywordDefault(checkSql.toString()));",
          "47:         sqlVerify.visit(inputToNode);",
          "49:     }",
          "51:     public static SqlNode parse(String sql) throws Exception {",
          "",
          "[Removed Lines]",
          "40:     public static void verifyFilterCondition(String factTableName, String filterCondition, TableDesc tableDesc)",
          "41:             throws Exception {",
          "43:         checkSql.append(\"select * from \").append(factTableName).append(\" where \").append(filterCondition);",
          "46:         SqlVerify sqlVerify = new SqlVerify(tableDesc);",
          "",
          "[Added Lines]",
          "44:     public static void verifyFilterCondition(String project, TableMetadataManager tableManager, DataModelDesc modelDesc,",
          "45:             String filterCondition) throws Exception {",
          "47:         checkSql.append(\"select * from \").append(modelDesc.getRootFactTableName()).append(\" where \")",
          "48:                 .append(filterCondition);",
          "51:         SqlVerify sqlVerify = new SqlVerify(project, tableManager, modelDesc);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "57:     private static class SqlVerify extends SqlBasicVisitor {",
          "63:         }",
          "65:         @Override",
          "66:         public Object visit(SqlCall call) {",
          "67:             SqlSelect select = (SqlSelect) call;",
          "69:             return null;",
          "70:         }",
          "71:     }",
          "",
          "[Removed Lines]",
          "59:         private TableDesc tableDesc;",
          "61:         SqlVerify(TableDesc tableDesc) {",
          "62:             this.tableDesc = tableDesc;",
          "68:             WhereColumnVerify.verify(select.getWhere(), tableDesc);",
          "",
          "[Added Lines]",
          "63:         private DataModelDesc modelDesc;",
          "64:         private TableMetadataManager tableManager;",
          "65:         private String project;",
          "67:         SqlVerify(String project, TableMetadataManager tableManager, DataModelDesc modelDesc) {",
          "68:             this.modelDesc = modelDesc;",
          "69:             this.tableManager = tableManager;",
          "70:             this.project = project;",
          "76:             WhereColumnVerify.verify(project, select.getWhere(), modelDesc, tableManager);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "75:         private List<String> allSqlIdentifier = Lists.newArrayList();",
          "78:             WhereColumnVerify whereColumnVerify = new WhereColumnVerify();",
          "79:             whereNode.accept(whereColumnVerify);",
          "80:             whereColumnVerify.allSqlIdentifier.stream().forEach(col -> {",
          "82:                     String verifyError = String.format(Locale.ROOT,",
          "83:                             \"filter condition col: %s is not a column in the table \", col);",
          "84:                     logger.error(verifyError);",
          "",
          "[Removed Lines]",
          "77:         static void verify(SqlNode whereNode, TableDesc tableDesc) {",
          "81:                 if (tableDesc.findColumnByName(col) == null) {",
          "",
          "[Added Lines]",
          "85:         static void verify(String project, SqlNode whereNode, DataModelDesc modelDesc,",
          "86:                 TableMetadataManager tableManager) {",
          "90:             List<ColumnDesc> columnDesc = Arrays.stream(modelDesc.getJoinTables()).flatMap(table -> {",
          "91:                 return Arrays.stream(tableManager.getTableDesc(table.getTable(), project).getColumns());",
          "92:             }).collect(Collectors.toList());",
          "93:             columnDesc.addAll(",
          "94:                     Arrays.asList(tableManager.getTableDesc(modelDesc.getRootFactTableName(), project).getColumns()));",
          "95:             List<String> allColumn = columnDesc.stream().map(cd -> cd.getName().toLowerCase(Locale.ROOT))",
          "96:                     .collect(Collectors.toList());",
          "98:                 if (!allColumn.contains(col.toLowerCase(Locale.ROOT))) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "88:         }",
          "90:         public Object visit(SqlIdentifier id) {",
          "92:             return null;",
          "93:         }",
          "94:     }",
          "",
          "[Removed Lines]",
          "91:             allSqlIdentifier.add(id.names.get(0));",
          "",
          "[Added Lines]",
          "108:             if (id.names.size() == 1) {",
          "109:                 allSqlIdentifier.add(id.names.get(0));",
          "110:             } else if (id.names.size() == 2) {",
          "111:                 allSqlIdentifier.add(id.names.get(1));",
          "112:             }",
          "",
          "---------------"
        ],
        "server-base/src/main/java/org/apache/kylin/rest/service/ModelService.java||server-base/src/main/java/org/apache/kylin/rest/service/ModelService.java": [
          "File: server-base/src/main/java/org/apache/kylin/rest/service/ModelService.java -> server-base/src/main/java/org/apache/kylin/rest/service/ModelService.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "159:         if (!StringUtils.isEmpty(desc.getFilterCondition())) {",
          "160:             try {",
          "161:                 JoinedFormatter formatter = new JoinedFormatter(true);",
          "164:             } catch (Exception e) {",
          "165:                 throw new BadRequestException(e.toString());",
          "166:             }",
          "",
          "[Removed Lines]",
          "162:                 ModelUtil.verifyFilterCondition(factTableName, formatter.formatSentence(desc.getFilterCondition()),",
          "163:                         tableDesc);",
          "",
          "[Added Lines]",
          "162:                 ModelUtil.verifyFilterCondition(project, getTableManager(), desc,",
          "163:                         formatter.formatSentence(desc.getFilterCondition()));",
          "",
          "---------------"
        ],
        "server/src/test/java/org/apache/kylin/rest/service/ModelServiceTest.java||server/src/test/java/org/apache/kylin/rest/service/ModelServiceTest.java": [
          "File: server/src/test/java/org/apache/kylin/rest/service/ModelServiceTest.java -> server/src/test/java/org/apache/kylin/rest/service/ModelServiceTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:         deserialize.setFilterCondition(\"TRANS_ID = 1\");",
          "80:         modelService.validateModel(\"default\", deserialize);",
          "81:         try {",
          "83:             modelService.validateModel(\"default\", deserialize);",
          "84:             Assert.fail(\"should throw an exception\");",
          "85:         } catch (Exception e){",
          "",
          "[Removed Lines]",
          "82:             deserialize.setFilterCondition(\"TRANS_IDD = 1\");",
          "",
          "[Added Lines]",
          "82:             deserialize.setFilterCondition(\"kylin_account.TRANS_IDD = 1\");",
          "",
          "---------------"
        ]
      }
    }
  ]
}