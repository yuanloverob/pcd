{
  "cve_id": "CVE-2024-30850",
  "cve_desc": "An issue in tiagorlampert CHAOS v5.0.1 allows a remote attacker to execute arbitrary code via the BuildClient function within client_service.go",
  "repo": "tiagorlampert/CHAOS",
  "patch_hash": "24c9e109b5be34df7b2bce8368eae669c481ed5e",
  "patch_info": {
    "commit_hash": "24c9e109b5be34df7b2bce8368eae669c481ed5e",
    "repo": "tiagorlampert/CHAOS",
    "commit_url": "https://github.com/tiagorlampert/CHAOS/commit/24c9e109b5be34df7b2bce8368eae669c481ed5e",
    "files": [
      "internal/utils/validation.go"
    ],
    "message": "r",
    "before_after_code_files": [
      "internal/utils/validation.go||internal/utils/validation.go"
    ]
  },
  "patch_diff": {
    "internal/utils/validation.go||internal/utils/validation.go": [
      "File: internal/utils/validation.go -> internal/utils/validation.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: }",
      "12: func IsValidURL(s string) bool {",
      "16:   return false",
      "17:  }",
      "18:  return true",
      "",
      "[Removed Lines]",
      "13:  u, err := url.ParseRequestURI(s)",
      "14:  _ = u",
      "15:  if err != nil {",
      "",
      "[Added Lines]",
      "13:  if _, err := url.ParseRequestURI(s); err != nil {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1b451cf62582295b7225caf5a7b506f0bad56f6b",
      "candidate_info": {
        "commit_hash": "1b451cf62582295b7225caf5a7b506f0bad56f6b",
        "repo": "tiagorlampert/CHAOS",
        "commit_url": "https://github.com/tiagorlampert/CHAOS/commit/1b451cf62582295b7225caf5a7b506f0bad56f6b",
        "files": [
          "cmd/chaos/main.go",
          "delivery/http/handler.go",
          "internal/middleware/jwt.go",
          "internal/utilities/base64.go",
          "internal/utilities/byte.go",
          "internal/utilities/checkbox.go",
          "internal/utilities/constants/constants.go",
          "internal/utilities/image/png.go",
          "internal/utilities/jwt/jwt.go",
          "internal/utilities/network/address.go",
          "internal/utilities/network/http.go",
          "internal/utilities/password.go",
          "internal/utilities/string.go",
          "internal/utilities/system/directory.go",
          "internal/utilities/system/os.go",
          "internal/utilities/template/template.go",
          "internal/utilities/ui/logo.go",
          "internal/utils/base64.go",
          "internal/utils/byte.go",
          "internal/utils/checkbox.go",
          "internal/utils/constants/constants.go",
          "internal/utils/image/png.go",
          "internal/utils/jwt/jwt.go",
          "internal/utils/network/address.go",
          "internal/utils/network/http.go",
          "internal/utils/password.go",
          "internal/utils/string.go",
          "internal/utils/system/directory.go",
          "internal/utils/system/os.go",
          "internal/utils/template/template.go",
          "internal/utils/ui/logo.go",
          "internal/utils/validation.go",
          "services/auth_service.go",
          "services/client.go",
          "services/client_service.go",
          "services/device_service.go",
          "services/user_service.go",
          "web/static/js/app/generate.js"
        ],
        "message": "validate input values",
        "before_after_code_files": [
          "cmd/chaos/main.go||cmd/chaos/main.go",
          "delivery/http/handler.go||delivery/http/handler.go",
          "internal/middleware/jwt.go||internal/middleware/jwt.go",
          "internal/utilities/string.go||internal/utilities/string.go",
          "internal/utilities/base64.go||internal/utils/base64.go",
          "internal/utilities/byte.go||internal/utils/byte.go",
          "internal/utilities/checkbox.go||internal/utils/checkbox.go",
          "internal/utilities/image/png.go||internal/utils/image/png.go",
          "internal/utilities/password.go||internal/utils/password.go",
          "internal/utils/string.go||internal/utils/string.go",
          "internal/utils/validation.go||internal/utils/validation.go",
          "services/auth_service.go||services/auth_service.go",
          "services/client.go||services/client.go",
          "services/client_service.go||services/client_service.go",
          "services/device_service.go||services/device_service.go",
          "services/user_service.go||services/user_service.go",
          "web/static/js/app/generate.js||web/static/js/app/generate.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "internal/utils/validation.go||internal/utils/validation.go"
          ],
          "candidate": [
            "internal/utils/validation.go||internal/utils/validation.go"
          ]
        }
      },
      "candidate_diff": {
        "cmd/chaos/main.go||cmd/chaos/main.go": [
          "File: cmd/chaos/main.go -> cmd/chaos/main.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:  \"github.com/tiagorlampert/CHAOS/infrastructure/database\"",
          "10:  \"github.com/tiagorlampert/CHAOS/internal/environment\"",
          "11:  \"github.com/tiagorlampert/CHAOS/internal/middleware\"",
          "16:  \"github.com/tiagorlampert/CHAOS/repositories/sqlite\"",
          "17:  \"github.com/tiagorlampert/CHAOS/services\"",
          "18:  \"net/http\"",
          "",
          "[Removed Lines]",
          "12:  \"github.com/tiagorlampert/CHAOS/internal/utilities/constants\"",
          "13:  \"github.com/tiagorlampert/CHAOS/internal/utilities/system\"",
          "14:  \"github.com/tiagorlampert/CHAOS/internal/utilities/template\"",
          "15:  \"github.com/tiagorlampert/CHAOS/internal/utilities/ui\"",
          "",
          "[Added Lines]",
          "12:  \"github.com/tiagorlampert/CHAOS/internal/utils/constants\"",
          "13:  \"github.com/tiagorlampert/CHAOS/internal/utils/system\"",
          "14:  \"github.com/tiagorlampert/CHAOS/internal/utils/template\"",
          "15:  \"github.com/tiagorlampert/CHAOS/internal/utils/ui\"",
          "",
          "---------------"
        ],
        "delivery/http/handler.go||delivery/http/handler.go": [
          "File: delivery/http/handler.go -> delivery/http/handler.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:  \"github.com/sirupsen/logrus\"",
          "11:  \"github.com/tiagorlampert/CHAOS/delivery/http/request\"",
          "12:  \"github.com/tiagorlampert/CHAOS/entities\"",
          "17:  \"github.com/tiagorlampert/CHAOS/services\"",
          "18:  \"net/http\"",
          "19:  \"path/filepath\"",
          "",
          "[Removed Lines]",
          "13:  \"github.com/tiagorlampert/CHAOS/internal/utilities\"",
          "14:  \"github.com/tiagorlampert/CHAOS/internal/utilities/constants\"",
          "15:  \"github.com/tiagorlampert/CHAOS/internal/utilities/network\"",
          "16:  \"github.com/tiagorlampert/CHAOS/internal/utilities/system\"",
          "",
          "[Added Lines]",
          "13:  \"github.com/tiagorlampert/CHAOS/internal/utils\"",
          "14:  \"github.com/tiagorlampert/CHAOS/internal/utils/constants\"",
          "15:  \"github.com/tiagorlampert/CHAOS/internal/utils/network\"",
          "16:  \"github.com/tiagorlampert/CHAOS/internal/utils/system\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "186: func (h *httpController) getCommandHandler(c *gin.Context) {",
          "187:  address := c.Query(\"address\")",
          "189:  if err != nil {",
          "190:   c.String(http.StatusBadRequest, err.Error())",
          "191:   return",
          "",
          "[Removed Lines]",
          "188:  decoded, err := utilities.DecodeBase64(address)",
          "",
          "[Added Lines]",
          "188:  decoded, err := utils.DecodeBase64(address)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "239:   ServerPort:    req.Port,",
          "240:   OSTarget:      system.OSTargetIntMap[osTarget],",
          "241:   Filename:      req.Filename,",
          "243:  })",
          "244:  if err != nil {",
          "245:   h.Logger.Error(err)",
          "247:   return",
          "248:  }",
          "249:  c.String(http.StatusOK, binary)",
          "",
          "[Removed Lines]",
          "242:   RunHidden:     utilities.ParseCheckboxBoolean(req.RunHidden),",
          "246:   c.String(http.StatusInternalServerError, err.Error())",
          "",
          "[Added Lines]",
          "242:   RunHidden:     utils.ParseCheckboxBoolean(req.RunHidden),",
          "246:   c.JSON(http.StatusInternalServerError, gin.H{\"error\": err.Error()})",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "274:   c.String(http.StatusBadRequest, err.Error())",
          "275:   return",
          "276:  }",
          "278:  if err != nil {",
          "279:   c.String(http.StatusBadRequest, err.Error())",
          "280:   return",
          "",
          "[Removed Lines]",
          "277:  path, err := utilities.DecodeBase64(req.Path)",
          "",
          "[Added Lines]",
          "277:  path, err := utils.DecodeBase64(req.Path)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "293:  }",
          "295:  var fileExplorer entities.FileExplorer",
          "297:  if err != nil {",
          "298:   c.JSON(http.StatusInternalServerError, gin.H{\"error\": err.Error()})",
          "299:   return",
          "",
          "[Removed Lines]",
          "296:  err = json.Unmarshal(utilities.StringToByte(payload.Response), &fileExplorer)",
          "",
          "[Added Lines]",
          "296:  err = json.Unmarshal(utils.StringToByte(payload.Response), &fileExplorer)",
          "",
          "---------------"
        ],
        "internal/middleware/jwt.go||internal/middleware/jwt.go": [
          "File: internal/middleware/jwt.go -> internal/middleware/jwt.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:  \"github.com/appleboy/gin-jwt/v2\"",
          "5:  \"github.com/gin-gonic/gin\"",
          "6:  \"github.com/tiagorlampert/CHAOS/entities\"",
          "8:  \"github.com/tiagorlampert/CHAOS/services\"",
          "9:  \"net/http\"",
          "10:  \"time\"",
          "",
          "[Removed Lines]",
          "7:  jwtUtil \"github.com/tiagorlampert/CHAOS/internal/utilities/jwt\"",
          "",
          "[Added Lines]",
          "7:  jwtUtil \"github.com/tiagorlampert/CHAOS/internal/utils/jwt\"",
          "",
          "---------------"
        ],
        "internal/utilities/string.go||internal/utilities/string.go": [
          "File: internal/utilities/string.go -> internal/utilities/string.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "internal/utilities/base64.go||internal/utils/base64.go": [
          "File: internal/utilities/base64.go -> internal/utils/base64.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import \"encoding/base64\"",
          "",
          "[Removed Lines]",
          "1: package utilities",
          "",
          "[Added Lines]",
          "1: package utils",
          "",
          "---------------"
        ],
        "internal/utilities/byte.go||internal/utils/byte.go": [
          "File: internal/utilities/byte.go -> internal/utils/byte.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: func ByteToString(value []byte) string {",
          "4:  return string(value)",
          "",
          "[Removed Lines]",
          "1: package utilities",
          "",
          "[Added Lines]",
          "1: package utils",
          "",
          "---------------"
        ],
        "internal/utilities/checkbox.go||internal/utils/checkbox.go": [
          "File: internal/utilities/checkbox.go -> internal/utils/checkbox.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: func ParseCheckboxBoolean(value string) bool {",
          "4:  if value == \"true\" {",
          "",
          "[Removed Lines]",
          "1: package utilities",
          "",
          "[Added Lines]",
          "1: package utils",
          "",
          "---------------"
        ],
        "internal/utilities/image/png.go||internal/utils/image/png.go": [
          "File: internal/utilities/image/png.go -> internal/utils/image/png.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"fmt\"",
          "5:  \"github.com/google/uuid\"",
          "7:  \"os\"",
          "8: )",
          "",
          "[Removed Lines]",
          "6:  \"github.com/tiagorlampert/CHAOS/internal/utilities/constants\"",
          "",
          "[Added Lines]",
          "6:  \"github.com/tiagorlampert/CHAOS/internal/utils/constants\"",
          "",
          "---------------"
        ],
        "internal/utilities/password.go||internal/utils/password.go": [
          "File: internal/utilities/password.go -> internal/utils/password.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"golang.org/x/crypto/bcrypt\"",
          "",
          "[Removed Lines]",
          "1: package utilities",
          "",
          "[Added Lines]",
          "1: package utils",
          "",
          "---------------"
        ],
        "internal/utils/string.go||internal/utils/string.go": [
          "File: internal/utils/string.go -> internal/utils/string.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package utils",
          "3: import (",
          "4:  \"crypto/rand\"",
          "5:  \"regexp\"",
          "6:  \"strconv\"",
          "7:  \"strings\"",
          "8: )",
          "10: const characters = `0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz`",
          "13: func GenerateRandomString(size int) string {",
          "14:  var bytes = make([]byte, size)",
          "15:  rand.Read(bytes)",
          "16:  for i, x := range bytes {",
          "17:   bytes[i] = characters[x%byte(len(characters))]",
          "18:  }",
          "19:  return string(bytes)",
          "20: }",
          "22: func NormalizeString(s string) (string, error) {",
          "23:  re, err := regexp.Compile(`\\W`)",
          "24:  if err != nil {",
          "25:   return \"\", err",
          "26:  }",
          "27:  return strings.TrimSpace(re.ReplaceAllString(s, \"\")), nil",
          "28: }",
          "30: func StringIsNumber(s string) bool {",
          "31:  if _, err := strconv.Atoi(s); err == nil {",
          "32:   return true",
          "33:  }",
          "34:  return false",
          "35: }",
          "",
          "---------------"
        ],
        "internal/utils/validation.go||internal/utils/validation.go": [
          "File: internal/utils/validation.go -> internal/utils/validation.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package utils",
          "3: import (",
          "4:  \"net\"",
          "5:  \"net/url\"",
          "6: )",
          "8: func IsValidIPAddress(s string) bool {",
          "9:  return net.ParseIP(s) != nil",
          "10: }",
          "12: func IsValidURL(s string) bool {",
          "13:  u, err := url.ParseRequestURI(s)",
          "14:  _ = u",
          "15:  if err != nil {",
          "16:   return false",
          "17:  }",
          "18:  return true",
          "19: }",
          "",
          "---------------"
        ],
        "services/auth_service.go||services/auth_service.go": [
          "File: services/auth_service.go -> services/auth_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5:  \"fmt\"",
          "6:  \"github.com/sirupsen/logrus\"",
          "7:  \"github.com/tiagorlampert/CHAOS/entities\"",
          "9:  \"github.com/tiagorlampert/CHAOS/repositories\"",
          "10:  \"strings\"",
          "11: )",
          "",
          "[Removed Lines]",
          "8:  \"github.com/tiagorlampert/CHAOS/internal/utilities\"",
          "",
          "[Added Lines]",
          "8:  \"github.com/tiagorlampert/CHAOS/internal/utils\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47:   if hasProvidedSecretKey {",
          "48:    dummyAuth.SecretKey = s.secretKey",
          "49:   } else {",
          "51:   }",
          "52:   return &dummyAuth, s.authRepository.Insert(dummyAuth)",
          "53:  }",
          "",
          "[Removed Lines]",
          "50:    dummyAuth.SecretKey = utilities.GenerateRandomString(secretKeySize)",
          "",
          "[Added Lines]",
          "50:    dummyAuth.SecretKey = utils.GenerateRandomString(secretKeySize)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "74:  }",
          "75:  if err := s.authRepository.Update(entities.Auth{",
          "76:   DBModel:   auth.DBModel,",
          "78:  }); err != nil {",
          "79:   return \"\", err",
          "80:  }",
          "",
          "[Removed Lines]",
          "77:   SecretKey: utilities.GenerateRandomString(secretKeySize),",
          "",
          "[Added Lines]",
          "77:   SecretKey: utils.GenerateRandomString(secretKeySize),",
          "",
          "---------------"
        ],
        "services/client.go||services/client.go": [
          "File: services/client.go -> services/client.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"context\"",
          "6: )",
          "8: type (",
          "",
          "[Removed Lines]",
          "5:  \"github.com/tiagorlampert/CHAOS/internal/utilities/system\"",
          "",
          "[Added Lines]",
          "5:  \"errors\"",
          "6:  \"github.com/tiagorlampert/CHAOS/internal/utils/system\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "21:  }",
          "22: )",
          "24: type Client interface {",
          "25:  SendCommand(ctx context.Context, input SendCommandInput) (SendCommandOutput, error)",
          "26:  BuildClient(BuildClientBinaryInput) (string, error)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: var (",
          "26:  ErrInvalidServerAddress = errors.New(\"the server address provided is invalid\")",
          "27:  ErrInvalidServerPort    = errors.New(\"the server port provided is invalid\")",
          "28: )",
          "",
          "---------------"
        ],
        "services/client_service.go||services/client_service.go": [
          "File: services/client_service.go -> services/client_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:  \"context\"",
          "5:  \"fmt\"",
          "6:  \"github.com/google/uuid\"",
          "12:  repo \"github.com/tiagorlampert/CHAOS/repositories\"",
          "13:  \"os/exec\"",
          "14:  \"strings\"",
          "",
          "[Removed Lines]",
          "7:  \"github.com/tiagorlampert/CHAOS/internal/utilities\"",
          "8:  \"github.com/tiagorlampert/CHAOS/internal/utilities/constants\"",
          "9:  \"github.com/tiagorlampert/CHAOS/internal/utilities/image\"",
          "10:  \"github.com/tiagorlampert/CHAOS/internal/utilities/jwt\"",
          "11:  \"github.com/tiagorlampert/CHAOS/internal/utilities/system\"",
          "",
          "[Added Lines]",
          "7:  \"github.com/tiagorlampert/CHAOS/internal/utils\"",
          "8:  \"github.com/tiagorlampert/CHAOS/internal/utils/constants\"",
          "9:  \"github.com/tiagorlampert/CHAOS/internal/utils/image\"",
          "10:  \"github.com/tiagorlampert/CHAOS/internal/utils/jwt\"",
          "11:  \"github.com/tiagorlampert/CHAOS/internal/utils/system\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38: }",
          "40: func (c clientService) SendCommand(ctx context.Context, input SendCommandInput) (SendCommandOutput, error) {",
          "42:  if err != nil {",
          "43:   return SendCommandOutput{}, fmt.Errorf(`error decoding base64: %w`, err)",
          "44:  }",
          "",
          "[Removed Lines]",
          "41:  addr, err := utilities.DecodeBase64(input.MacAddress)",
          "",
          "[Added Lines]",
          "41:  addr, err := utils.DecodeBase64(input.MacAddress)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "60:   }",
          "61:  }",
          "64:  if payload.HasError {",
          "65:   return SendCommandOutput{}, fmt.Errorf(res)",
          "66:  }",
          "",
          "[Removed Lines]",
          "63:  res := utilities.ByteToString(payload.Response)",
          "",
          "[Added Lines]",
          "63:  res := utils.ByteToString(payload.Response)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "77:   if err != nil {",
          "78:    return nil, err",
          "79:   }",
          "81:   break",
          "82:  default:",
          "83:   return payload, nil",
          "",
          "[Removed Lines]",
          "80:   payload.Response = utilities.StringToByte(file)",
          "",
          "[Added Lines]",
          "80:   payload.Response = utils.StringToByte(file)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "86: }",
          "88: func (c clientService) BuildClient(input BuildClientBinaryInput) (string, error) {",
          "89:  token, err := c.GenerateNewToken()",
          "90:  if err != nil {",
          "91:   return \"\", err",
          "92:  }",
          "94:  const buildStr = `GO_ENABLED=1 GOOS=%s GOARCH=amd64 go build -ldflags '%s -s -w -X main.Version=%s -X main.ServerPort=%s -X main.ServerAddress=%s -X main.Token=%s -extldflags \"-static\"' -o ../temp/%s main.go`",
          "96:  buildCmd := fmt.Sprintf(buildStr, handleOSType(input.OSTarget), runHidden(input.RunHidden), c.appVersion, input.ServerPort, input.ServerAddress, token, filename)",
          "97:  cmd := exec.Command(\"sh\", \"-c\", buildCmd)",
          "98:  cmd.Dir = \"client/\"",
          "",
          "[Removed Lines]",
          "95:  filename := handleFilename(input.OSTarget, input.Filename)",
          "",
          "[Added Lines]",
          "89:  if !utils.IsValidIPAddress(input.ServerAddress) &&",
          "90:   !utils.IsValidURL(input.ServerAddress) {",
          "91:   return \"\", ErrInvalidServerAddress",
          "92:  }",
          "94:  if !utils.StringIsNumber(input.ServerPort) {",
          "95:   return \"\", ErrInvalidServerPort",
          "96:  }",
          "98:  filename, err := utils.NormalizeString(input.Filename)",
          "99:  if err != nil {",
          "100:   return \"\", err",
          "101:  }",
          "109:  filename = handleFilename(input.OSTarget, filename)",
          "",
          "---------------"
        ],
        "services/device_service.go||services/device_service.go": [
          "File: services/device_service.go -> services/device_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"errors\"",
          "5:  \"github.com/tiagorlampert/CHAOS/entities\"",
          "7:  \"github.com/tiagorlampert/CHAOS/repositories\"",
          "8:  \"time\"",
          "9: )",
          "",
          "[Removed Lines]",
          "6:  \"github.com/tiagorlampert/CHAOS/internal/utilities\"",
          "",
          "[Added Lines]",
          "6:  \"github.com/tiagorlampert/CHAOS/internal/utils\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30:   return nil, err",
          "31:  }",
          "32:  for index, device := range devices {",
          "34:  }",
          "35:  return devices, nil",
          "36: }",
          "",
          "[Removed Lines]",
          "33:   devices[index].MacAddressBase64 = utilities.EncodeBase64(device.MacAddress)",
          "",
          "[Added Lines]",
          "33:   devices[index].MacAddressBase64 = utils.EncodeBase64(device.MacAddress)",
          "",
          "---------------"
        ],
        "services/user_service.go||services/user_service.go": [
          "File: services/user_service.go -> services/user_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"github.com/tiagorlampert/CHAOS/entities\"",
          "6:  repo \"github.com/tiagorlampert/CHAOS/repositories\"",
          "7: )",
          "",
          "[Removed Lines]",
          "5:  \"github.com/tiagorlampert/CHAOS/internal/utilities\"",
          "",
          "[Added Lines]",
          "5:  \"github.com/tiagorlampert/CHAOS/internal/utils\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24:  if err != nil {",
          "25:   return false",
          "26:  }",
          "28: }",
          "30: func (u userService) Insert(input entities.User) error {",
          "",
          "[Removed Lines]",
          "27:  return utilities.PasswordsMatch(user.Password, password)",
          "",
          "[Added Lines]",
          "27:  return utils.PasswordsMatch(user.Password, password)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "42:  if err != nil {",
          "43:   return err",
          "44:  }",
          "46:   return ErrInvalidPassword",
          "47:  }",
          "50:  if err != nil {",
          "51:   return err",
          "52:  }",
          "",
          "[Removed Lines]",
          "45:  if !utilities.PasswordsMatch(user.Password, input.OldPassword) {",
          "49:  passwordHash, err := utilities.HashAndSalt(input.NewPassword)",
          "",
          "[Added Lines]",
          "45:  if !utils.PasswordsMatch(user.Password, input.OldPassword) {",
          "49:  passwordHash, err := utils.HashAndSalt(input.NewPassword)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "63:   return err",
          "64:  }",
          "67:  if err != nil {",
          "68:   return err",
          "69:  }",
          "",
          "[Removed Lines]",
          "66:  passwordHash, err := utilities.HashAndSalt(defaultPassword)",
          "",
          "[Added Lines]",
          "66:  passwordHash, err := utils.HashAndSalt(defaultPassword)",
          "",
          "---------------"
        ],
        "web/static/js/app/generate.js||web/static/js/app/generate.js": [
          "File: web/static/js/app/generate.js -> web/static/js/app/generate.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:         .then(response => {",
          "22:             if (!response.ok) {",
          "23:                 return response.text().then(err => {",
          "25:                 });",
          "26:             }",
          "27:             return response.text();",
          "",
          "[Removed Lines]",
          "24:                     throw new Error(err.message);",
          "",
          "[Added Lines]",
          "24:                     throw new Error(err);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32:         })",
          "33:         .catch(err => {",
          "34:             console.log('Error: ', err);",
          "35:             ShowNotification('danger', 'Ops!', 'Failed building client binary.\\n' + JSON.parse(err.message).error)",
          "36:         });",
          "37: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35:             Swal.close();",
          "",
          "---------------"
        ]
      }
    }
  ]
}