{
  "cve_id": "CVE-2024-1726",
  "cve_desc": "A flaw was discovered in the RESTEasy Reactive implementation in Quarkus. Due to security checks for some JAX-RS endpoints being performed after serialization, more processing resources are consumed while the HTTP request is checked. In certain configurations, if an attacker has knowledge of any POST, PUT, or PATCH request paths, they can potentially identify vulnerable endpoints and trigger excessive resource usage as the endpoints process the requests. This can result in a denial of service.",
  "repo": "quarkusio/quarkus",
  "patch_hash": "34c1a63baf5401d0d578a23a1a4deb4b841ce65b",
  "patch_info": {
    "commit_hash": "34c1a63baf5401d0d578a23a1a4deb4b841ce65b",
    "repo": "quarkusio/quarkus",
    "commit_url": "https://github.com/quarkusio/quarkus/commit/34c1a63baf5401d0d578a23a1a4deb4b841ce65b",
    "files": [
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/DenyAllJaxRsTest.java",
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredParentResource.java",
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResource.java",
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResourceInterface.java",
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/runtime/src/main/java/io/quarkus/resteasy/reactive/server/runtime/security/EagerSecurityHandler.java",
      "independent-projects/resteasy-reactive/server/processor/src/main/java/org/jboss/resteasy/reactive/server/processor/ServerEndpointIndexer.java",
      "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/core/startup/RuntimeResourceDeployment.java",
      "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/model/ServerResourceMethod.java",
      "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/spi/ResteasyReactiveResourceInfo.java"
    ],
    "message": "Perform security checks eagerly in RR on inherited endpoints\n\n(cherry picked from commit 37834cb44a0bc5101cdf60922c8dd0301efac822)",
    "before_after_code_files": [
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/DenyAllJaxRsTest.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/DenyAllJaxRsTest.java",
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredParentResource.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredParentResource.java",
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResource.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResource.java",
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResourceInterface.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResourceInterface.java",
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/runtime/src/main/java/io/quarkus/resteasy/reactive/server/runtime/security/EagerSecurityHandler.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/runtime/src/main/java/io/quarkus/resteasy/reactive/server/runtime/security/EagerSecurityHandler.java",
      "independent-projects/resteasy-reactive/server/processor/src/main/java/org/jboss/resteasy/reactive/server/processor/ServerEndpointIndexer.java||independent-projects/resteasy-reactive/server/processor/src/main/java/org/jboss/resteasy/reactive/server/processor/ServerEndpointIndexer.java",
      "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/core/startup/RuntimeResourceDeployment.java||independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/core/startup/RuntimeResourceDeployment.java",
      "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/model/ServerResourceMethod.java||independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/model/ServerResourceMethod.java",
      "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/spi/ResteasyReactiveResourceInfo.java||independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/spi/ResteasyReactiveResourceInfo.java"
    ]
  },
  "patch_diff": {
    "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/DenyAllJaxRsTest.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/DenyAllJaxRsTest.java": [
      "File: extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/DenyAllJaxRsTest.java -> extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/DenyAllJaxRsTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "91:         assertStatus(path, 403, 401);",
      "92:     }",
      "94:     @Test",
      "95:     public void shouldDenyUnannotatedOnInterface() {",
      "96:         String path = \"/unsecured/defaultSecurityInterface\";",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "94:     @Test",
      "95:     public void shouldAllowAnnotatedParentEndpoint() {",
      "97:         String path = \"/unsecured/parent-annotated\";",
      "98:         assertStatus(path, 200, 401);",
      "99:     }",
      "101:     @Test",
      "102:     public void shouldAllowAnnotatedEndpointOnInterface() {",
      "104:         String path = \"/unsecured/interface-annotated\";",
      "105:         assertStatus(path, 200, 401);",
      "106:     }",
      "108:     @Test",
      "109:     public void shouldDenyUnannotatedOverriddenOnInterfaceImplementor() {",
      "111:         String path = \"/unsecured/interface-overridden-declared-on-implementor\";",
      "112:         assertStatus(path, 403, 401);",
      "113:     }",
      "115:     @Test",
      "116:     public void shouldAllowAnnotatedOverriddenEndpointDeclaredOnInterface() {",
      "118:         String path = \"/unsecured/interface-overridden-declared-on-interface\";",
      "119:         assertStatus(path, 200, 401);",
      "121:         given().auth().preemptive()",
      "122:                 .basic(\"admin\", \"admin\").get(path)",
      "123:                 .then()",
      "124:                 .body(Matchers.is(\"implementor-response\"));",
      "125:     }",
      "",
      "---------------"
    ],
    "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredParentResource.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredParentResource.java": [
      "File: extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredParentResource.java -> extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredParentResource.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: package io.quarkus.resteasy.reactive.server.test.security;",
      "3: import jakarta.ws.rs.GET;",
      "4: import jakarta.ws.rs.Path;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3: import jakarta.annotation.security.RolesAllowed;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "11:         return \"defaultSecurityParent\";",
      "12:     }",
      "14: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "15:     @RolesAllowed({ \"admin\", \"user\" })",
      "16:     @GET",
      "17:     @Path(\"/parent-annotated\")",
      "18:     public String parentAnnotated() {",
      "19:         return \"parent-annotated\";",
      "20:     }",
      "",
      "---------------"
    ],
    "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResource.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResource.java": [
      "File: extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResource.java -> extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResource.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "57:     public UnsecuredSubResource permitAllSub() {",
      "58:         return new UnsecuredSubResource();",
      "59:     }",
      "60: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "61:     @Override",
      "62:     public String interfaceOverriddenDeclaredOnInterface() {",
      "63:         return \"implementor-response\";",
      "64:     }",
      "66:     @GET",
      "67:     @Path(\"/interface-overridden-declared-on-implementor\")",
      "68:     @Override",
      "69:     public String interfaceOverriddenDeclaredOnImplementor() {",
      "70:         return \"implementor-response\";",
      "71:     }",
      "",
      "---------------"
    ],
    "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResourceInterface.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResourceInterface.java": [
      "File: extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResourceInterface.java -> extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResourceInterface.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: package io.quarkus.resteasy.reactive.server.test.security;",
      "3: import jakarta.ws.rs.GET;",
      "4: import jakarta.ws.rs.Path;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3: import jakarta.annotation.security.RolesAllowed;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "11:         return \"defaultSecurityInterface\";",
      "12:     }",
      "14: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "15:     @RolesAllowed({ \"admin\", \"user\" })",
      "16:     @GET",
      "17:     @Path(\"/interface-annotated\")",
      "18:     default String interfaceAnnotated() {",
      "19:         return \"interface-annotated\";",
      "20:     }",
      "22:     @RolesAllowed({ \"admin\", \"user\" })",
      "23:     @GET",
      "24:     @Path(\"/interface-overridden-declared-on-interface\")",
      "25:     default String interfaceOverriddenDeclaredOnInterface() {",
      "27:         return \"interface-overridden-declared-on-interface\";",
      "28:     }",
      "30:     @RolesAllowed({ \"admin\", \"user\" })",
      "31:     @GET",
      "32:     @Path(\"/interface-overridden-declared-on-implementor\")",
      "33:     default String interfaceOverriddenDeclaredOnImplementor() {",
      "35:         return \"interface-overridden-declared-on-implementor\";",
      "36:     }",
      "",
      "---------------"
    ],
    "extensions/resteasy-reactive/quarkus-resteasy-reactive/runtime/src/main/java/io/quarkus/resteasy/reactive/server/runtime/security/EagerSecurityHandler.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/runtime/src/main/java/io/quarkus/resteasy/reactive/server/runtime/security/EagerSecurityHandler.java": [
      "File: extensions/resteasy-reactive/quarkus-resteasy-reactive/runtime/src/main/java/io/quarkus/resteasy/reactive/server/runtime/security/EagerSecurityHandler.java -> extensions/resteasy-reactive/quarkus-resteasy-reactive/runtime/src/main/java/io/quarkus/resteasy/reactive/server/runtime/security/EagerSecurityHandler.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "187:     }",
      "189:     static MethodDescription lazyMethodToMethodDescription(ResteasyReactiveResourceInfo lazyMethod) {",
      "191:                 lazyMethod.getName(), MethodDescription.typesAsStrings(lazyMethod.getParameterTypes()));",
      "192:     }",
      "",
      "[Removed Lines]",
      "190:         return new MethodDescription(lazyMethod.getResourceClass().getName(),",
      "",
      "[Added Lines]",
      "190:         return new MethodDescription(lazyMethod.getActualDeclaringClassName(),",
      "",
      "---------------"
    ],
    "independent-projects/resteasy-reactive/server/processor/src/main/java/org/jboss/resteasy/reactive/server/processor/ServerEndpointIndexer.java||independent-projects/resteasy-reactive/server/processor/src/main/java/org/jboss/resteasy/reactive/server/processor/ServerEndpointIndexer.java": [
      "File: independent-projects/resteasy-reactive/server/processor/src/main/java/org/jboss/resteasy/reactive/server/processor/ServerEndpointIndexer.java -> independent-projects/resteasy-reactive/server/processor/src/main/java/org/jboss/resteasy/reactive/server/processor/ServerEndpointIndexer.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "183:             }",
      "184:         }",
      "185:         serverResourceMethod.setHandlerChainCustomizers(methodCustomizers);",
      "186:         return serverResourceMethod;",
      "187:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "186:         serverResourceMethod.setActualDeclaringClassName(methodInfo.declaringClass().name().toString());",
      "",
      "---------------"
    ],
    "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/core/startup/RuntimeResourceDeployment.java||independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/core/startup/RuntimeResourceDeployment.java": [
      "File: independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/core/startup/RuntimeResourceDeployment.java -> independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/core/startup/RuntimeResourceDeployment.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "190:         ResteasyReactiveResourceInfo lazyMethod = new ResteasyReactiveResourceInfo(method.getName(), resourceClass,",
      "191:                 parameterDeclaredUnresolvedTypes, classAnnotationNames, method.getMethodAnnotationNames(),",
      "194:         RuntimeInterceptorDeployment.MethodInterceptorContext interceptorDeployment = runtimeInterceptorDeployment",
      "195:                 .forMethod(method, lazyMethod);",
      "",
      "[Removed Lines]",
      "192:                 !defaultBlocking && !method.isBlocking());",
      "",
      "[Added Lines]",
      "192:                 !defaultBlocking && !method.isBlocking(), method.getActualDeclaringClassName());",
      "",
      "---------------"
    ],
    "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/model/ServerResourceMethod.java||independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/model/ServerResourceMethod.java": [
      "File: independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/model/ServerResourceMethod.java -> independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/model/ServerResourceMethod.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19:     private List<HandlerChainCustomizer> handlerChainCustomizers = new ArrayList<>();",
      "20:     private ParameterExtractor customerParameterExtractor;",
      "22:     public ServerResourceMethod() {",
      "23:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "21:     private String actualDeclaringClassName;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "70:         this.customerParameterExtractor = customerParameterExtractor;",
      "71:         return this;",
      "72:     }",
      "73: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "75:     public String getActualDeclaringClassName() {",
      "76:         return actualDeclaringClassName;",
      "77:     }",
      "79:     public void setActualDeclaringClassName(String actualDeclaringClassName) {",
      "80:         this.actualDeclaringClassName = actualDeclaringClassName;",
      "81:     }",
      "",
      "---------------"
    ],
    "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/spi/ResteasyReactiveResourceInfo.java||independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/spi/ResteasyReactiveResourceInfo.java": [
      "File: independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/spi/ResteasyReactiveResourceInfo.java -> independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/spi/ResteasyReactiveResourceInfo.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "28:     public final boolean isNonBlocking;",
      "30:     private volatile Annotation[] classAnnotations;",
      "31:     private volatile Method method;",
      "32:     private volatile Annotation[] annotations;",
      "33:     private volatile Type returnType;",
      "34:     private volatile String methodId;",
      "36:     public ResteasyReactiveResourceInfo(String name, Class<?> declaringClass, Class[] parameterTypes,",
      "37:             Set<String> classAnnotationNames, Set<String> methodAnnotationNames, boolean isNonBlocking) {",
      "38:         this.name = name;",
      "39:         this.declaringClass = declaringClass;",
      "40:         this.parameterTypes = parameterTypes;",
      "41:         this.classAnnotationNames = classAnnotationNames;",
      "42:         this.methodAnnotationNames = methodAnnotationNames;",
      "43:         this.isNonBlocking = isNonBlocking;",
      "44:     }",
      "46:     public String getName() {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "32:     private final String actualDeclaringClassName;",
      "39:     @Deprecated",
      "42:         this(name, declaringClass, parameterTypes, classAnnotationNames, methodAnnotationNames, isNonBlocking,",
      "43:                 declaringClass.getName());",
      "44:     }",
      "46:     public ResteasyReactiveResourceInfo(String name, Class<?> declaringClass, Class[] parameterTypes,",
      "47:             Set<String> classAnnotationNames, Set<String> methodAnnotationNames, boolean isNonBlocking,",
      "48:             String actualDeclaringClassName) {",
      "55:         this.actualDeclaringClassName = actualDeclaringClassName;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "119:         }",
      "120:         return methodId;",
      "121:     }",
      "122: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "135:     public String getActualDeclaringClassName() {",
      "136:         return actualDeclaringClassName;",
      "137:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "404b337028ae78f1d1f079660433cda06206a8fb",
      "candidate_info": {
        "commit_hash": "404b337028ae78f1d1f079660433cda06206a8fb",
        "repo": "quarkusio/quarkus",
        "commit_url": "https://github.com/quarkusio/quarkus/commit/404b337028ae78f1d1f079660433cda06206a8fb",
        "files": [
          "integration-tests/injectmock/src/main/java/io/quarkus/it/mockbean/SuffixServiceSingletonProducer.java",
          "integration-tests/injectmock/src/test/java/io/quarkus/it/mockbean/UnusedServiceTest.java",
          "test-framework/junit5-mockito/src/main/java/io/quarkus/test/junit/mockito/internal/SingletonToApplicationScopedTestBuildChainCustomizerProducer.java"
        ],
        "message": "Testing: fix @MockitoConfig(convertScopes=true) with auto-producers\n\nThe annotation transformer in `SingletonToApplicationScopedTestBuildChainCustomizerProducer`\nhas to:\n\n- look for the `@Produces` annotation in ArC's `AnnotationStore`, not in Jandex;\n- run _after_ the annotation transformer in `AutoProducerMethodsProcessor`.\n\nThis is enough to recognize an auto-producer (producer without `@Produces`).\n\n(cherry picked from commit 5aebe5a348d71aebde8e36336c787f2fc4bfee01)",
        "before_after_code_files": [
          "integration-tests/injectmock/src/main/java/io/quarkus/it/mockbean/SuffixServiceSingletonProducer.java||integration-tests/injectmock/src/main/java/io/quarkus/it/mockbean/SuffixServiceSingletonProducer.java",
          "integration-tests/injectmock/src/test/java/io/quarkus/it/mockbean/UnusedServiceTest.java||integration-tests/injectmock/src/test/java/io/quarkus/it/mockbean/UnusedServiceTest.java",
          "test-framework/junit5-mockito/src/main/java/io/quarkus/test/junit/mockito/internal/SingletonToApplicationScopedTestBuildChainCustomizerProducer.java||test-framework/junit5-mockito/src/main/java/io/quarkus/test/junit/mockito/internal/SingletonToApplicationScopedTestBuildChainCustomizerProducer.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/quarkusio/quarkus/pull/38864"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "integration-tests/injectmock/src/main/java/io/quarkus/it/mockbean/SuffixServiceSingletonProducer.java||integration-tests/injectmock/src/main/java/io/quarkus/it/mockbean/SuffixServiceSingletonProducer.java": [
          "File: integration-tests/injectmock/src/main/java/io/quarkus/it/mockbean/SuffixServiceSingletonProducer.java -> integration-tests/injectmock/src/main/java/io/quarkus/it/mockbean/SuffixServiceSingletonProducer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package io.quarkus.it.mockbean;",
          "4: import jakarta.inject.Singleton;",
          "6: public class SuffixServiceSingletonProducer {",
          "9:     @Singleton",
          "10:     public SuffixServiceSingleton dummyService() {",
          "11:         return new SuffixServiceSingleton();",
          "",
          "[Removed Lines]",
          "3: import jakarta.enterprise.inject.Produces;",
          "8:     @Produces",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "integration-tests/injectmock/src/test/java/io/quarkus/it/mockbean/UnusedServiceTest.java||integration-tests/injectmock/src/test/java/io/quarkus/it/mockbean/UnusedServiceTest.java": [
          "File: integration-tests/injectmock/src/test/java/io/quarkus/it/mockbean/UnusedServiceTest.java -> integration-tests/injectmock/src/test/java/io/quarkus/it/mockbean/UnusedServiceTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:     }",
          "23:     @Test",
          "25:         Assertions.assertFalse(Arc.container().instance(OtherUnusedService.class).isAvailable());",
          "26:     }",
          "27: }",
          "",
          "[Removed Lines]",
          "24:     public void testNonInjectedUnusedBeanIsNotRemoved() {",
          "",
          "[Added Lines]",
          "24:     public void testNonInjectedUnusedBeanIsRemoved() {",
          "",
          "---------------"
        ],
        "test-framework/junit5-mockito/src/main/java/io/quarkus/test/junit/mockito/internal/SingletonToApplicationScopedTestBuildChainCustomizerProducer.java||test-framework/junit5-mockito/src/main/java/io/quarkus/test/junit/mockito/internal/SingletonToApplicationScopedTestBuildChainCustomizerProducer.java": [
          "File: test-framework/junit5-mockito/src/main/java/io/quarkus/test/junit/mockito/internal/SingletonToApplicationScopedTestBuildChainCustomizerProducer.java -> test-framework/junit5-mockito/src/main/java/io/quarkus/test/junit/mockito/internal/SingletonToApplicationScopedTestBuildChainCustomizerProducer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:                                 continue;",
          "60:                             }",
          "61:                             AnnotationValue allowScopeConversionValue = instance.value(\"convertScopes\");",
          "64:                                 mockTypes.add(instance.target().asField().type().name());",
          "65:                             }",
          "",
          "[Removed Lines]",
          "62:                             if ((allowScopeConversionValue != null) && allowScopeConversionValue.asBoolean()) {",
          "",
          "[Added Lines]",
          "62:                             if (allowScopeConversionValue != null && allowScopeConversionValue.asBoolean()) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "84:                         context.produce(new AnnotationsTransformerBuildItem(new AnnotationsTransformer() {",
          "85:                             @Override",
          "86:                             public boolean appliesTo(AnnotationTarget.Kind kind) {",
          "88:                             }",
          "90:                             @Override",
          "",
          "[Removed Lines]",
          "87:                                 return (kind == AnnotationTarget.Kind.CLASS) || (kind == AnnotationTarget.Kind.METHOD);",
          "",
          "[Added Lines]",
          "87:                                 return kind == AnnotationTarget.Kind.CLASS || kind == AnnotationTarget.Kind.METHOD;",
          "88:                             }",
          "90:                             @Override",
          "91:                             public int getPriority() {",
          "95:                                 return DEFAULT_PRIORITY - 10;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "100:                                     }",
          "101:                                 } else if (target.kind() == AnnotationTarget.Kind.METHOD) { // CDI producer case",
          "102:                                     MethodInfo methodInfo = target.asMethod();",
          "106:                                                     || hasSingletonBeanDefiningAnnotation(transformationContext))) {",
          "107:                                         DotName returnType = methodInfo.returnType().name();",
          "108:                                         if (mockTypes.contains(returnType)) {",
          "",
          "[Removed Lines]",
          "103:                                     if ((methodInfo.annotation(DotNames.PRODUCES) != null)",
          "104:                                             && (Annotations.contains(transformationContext.getAnnotations(),",
          "105:                                                     DotNames.SINGLETON)",
          "",
          "[Added Lines]",
          "111:                                     if (Annotations.contains(transformationContext.getAnnotations(), DotNames.PRODUCES)",
          "112:                                             && (Annotations.contains(transformationContext.getAnnotations(), DotNames.SINGLETON)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "943784b27ed68a07c1f8fa3b9c7bb927a12e2b35",
      "candidate_info": {
        "commit_hash": "943784b27ed68a07c1f8fa3b9c7bb927a12e2b35",
        "repo": "quarkusio/quarkus",
        "commit_url": "https://github.com/quarkusio/quarkus/commit/943784b27ed68a07c1f8fa3b9c7bb927a12e2b35",
        "files": [
          "extensions/kubernetes-client/deployment/src/main/java/io/quarkus/kubernetes/client/deployment/KubernetesClientProcessor.java"
        ],
        "message": "Ignore `ValidationSchema` that results in registering all models\n\n`ValidationSchema` is annotated with `@JsonDeserialize` which leads in\nits entire type hierarchy being registered for reflective access along\nwith the corresponding methods. This essentially ends up registering all\nmodels as in kubernetes-client 6.9.0 ValidationSchema was augmented to\nimplement `Editable<ValidationSchemaBuilder>`, which increases the\nreachable types in comparison to previous versions.\n\nIgnoring registrations for `ValidationSchema` aligns with what we\nalready do for `KubeSchema`.\n\nFixes https://github.com/quarkusio/quarkus/issues/38683\n\n(cherry picked from commit 637ebeae5ecc85b33a0baf5d976b0e2a683d83f7)",
        "before_after_code_files": [
          "extensions/kubernetes-client/deployment/src/main/java/io/quarkus/kubernetes/client/deployment/KubernetesClientProcessor.java||extensions/kubernetes-client/deployment/src/main/java/io/quarkus/kubernetes/client/deployment/KubernetesClientProcessor.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/quarkusio/quarkus/pull/38864"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "extensions/kubernetes-client/deployment/src/main/java/io/quarkus/kubernetes/client/deployment/KubernetesClientProcessor.java||extensions/kubernetes-client/deployment/src/main/java/io/quarkus/kubernetes/client/deployment/KubernetesClientProcessor.java": [
          "File: extensions/kubernetes-client/deployment/src/main/java/io/quarkus/kubernetes/client/deployment/KubernetesClientProcessor.java -> extensions/kubernetes-client/deployment/src/main/java/io/quarkus/kubernetes/client/deployment/KubernetesClientProcessor.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: import io.fabric8.kubernetes.api.model.KubeSchema;",
          "26: import io.fabric8.kubernetes.api.model.KubernetesResource;",
          "27: import io.fabric8.kubernetes.api.model.KubernetesResourceList;",
          "28: import io.fabric8.kubernetes.client.Config;",
          "29: import io.fabric8.kubernetes.client.CustomResource;",
          "30: import io.fabric8.kubernetes.client.DefaultKubernetesClient;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: import io.fabric8.kubernetes.api.model.ValidationSchema;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "66:     private static final DotName RESOURCE_EVENT_HANDLER = DotName",
          "67:             .createSimple(io.fabric8.kubernetes.client.informers.ResourceEventHandler.class.getName());",
          "68:     private static final DotName KUBERNETES_RESOURCE = DotName.createSimple(KubernetesResource.class.getName());",
          "69:     private static final DotName KUBERNETES_RESOURCE_LIST = DotName",
          "70:             .createSimple(KubernetesResourceList.class.getName());",
          "71:     private static final DotName KUBE_SCHEMA = DotName.createSimple(KubeSchema.class.getName());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70:     private static final DotName VALIDATION_SCHEMA = DotName.createSimple(ValidationSchema.class.getName());",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "190:         ignoredJsonDeserializationClasses.produce(",
          "191:                 new IgnoreJsonDeserializeClassBuildItem(KUBERNETES_RESOURCE_LIST));",
          "192:         ignoredJsonDeserializationClasses.produce(new IgnoreJsonDeserializeClassBuildItem(KUBERNETES_RESOURCE));",
          "194:         final String[] deserializerClasses = combinedIndexBuildItem.getIndex()",
          "195:                 .getAllKnownSubclasses(DotName.createSimple(\"com.fasterxml.jackson.databind.JsonDeserializer\"))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "195:         ignoredJsonDeserializationClasses.produce(new IgnoreJsonDeserializeClassBuildItem(VALIDATION_SCHEMA));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ca7c1bd37e57db17a8c4a0f9edbfae80bf0b5bf7",
      "candidate_info": {
        "commit_hash": "ca7c1bd37e57db17a8c4a0f9edbfae80bf0b5bf7",
        "repo": "quarkusio/quarkus",
        "commit_url": "https://github.com/quarkusio/quarkus/commit/ca7c1bd37e57db17a8c4a0f9edbfae80bf0b5bf7",
        "files": [
          "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/AbstractJsonObjectResponse.java",
          "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcIdentityProvider.java",
          "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcTokenCredentialProducer.java",
          "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcUtils.java",
          "integration-tests/oidc-wiremock/src/main/java/io/quarkus/it/keycloak/CodeFlowTokenIntrospectionResource.java",
          "integration-tests/oidc-wiremock/src/test/java/io/quarkus/it/keycloak/CodeFlowAuthorizationTest.java"
        ],
        "message": "Check the code flow access token after ID token\n\n(cherry picked from commit b8bdad1004716ab473f377f06fb01a58349fccc9)",
        "before_after_code_files": [
          "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/AbstractJsonObjectResponse.java||extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/AbstractJsonObjectResponse.java",
          "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcIdentityProvider.java||extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcIdentityProvider.java",
          "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcTokenCredentialProducer.java||extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcTokenCredentialProducer.java",
          "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcUtils.java||extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcUtils.java",
          "integration-tests/oidc-wiremock/src/main/java/io/quarkus/it/keycloak/CodeFlowTokenIntrospectionResource.java||integration-tests/oidc-wiremock/src/main/java/io/quarkus/it/keycloak/CodeFlowTokenIntrospectionResource.java",
          "integration-tests/oidc-wiremock/src/test/java/io/quarkus/it/keycloak/CodeFlowAuthorizationTest.java||integration-tests/oidc-wiremock/src/test/java/io/quarkus/it/keycloak/CodeFlowAuthorizationTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/quarkusio/quarkus/pull/38864"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/AbstractJsonObjectResponse.java||extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/AbstractJsonObjectResponse.java": [
          "File: extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/AbstractJsonObjectResponse.java -> extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/AbstractJsonObjectResponse.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:     }",
          "60:     public boolean contains(String propertyName) {",
          "62:     }",
          "64:     public Set<String> getPropertyNames() {",
          "",
          "[Removed Lines]",
          "61:         return json.containsKey(propertyName) && !json.isNull(propertyName);",
          "",
          "[Added Lines]",
          "61:         return json != null && json.containsKey(propertyName) && !json.isNull(propertyName);",
          "",
          "---------------"
        ],
        "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcIdentityProvider.java||extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcIdentityProvider.java": [
          "File: extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcIdentityProvider.java -> extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcIdentityProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:     static final String NEW_AUTHENTICATION = \"new_authentication\";",
          "48:     private static final Uni<TokenVerificationResult> NULL_CODE_ACCESS_TOKEN_UNI = Uni.createFrom().nullItem();",
          "51:     protected final DefaultTenantConfigResolver tenantResolver;",
          "52:     private final BlockingTaskRunner<Void> uniVoidOidcContext;",
          "",
          "[Removed Lines]",
          "49:     private static final String CODE_ACCESS_TOKEN_RESULT = \"code_flow_access_token_result\";",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "149:                         isIdToken(request), null);",
          "150:             }",
          "176:         }",
          "177:     }",
          "",
          "[Removed Lines]",
          "154:             Uni<TokenVerificationResult> codeAccessTokenUni = verifyCodeFlowAccessTokenUni(requestData, request,",
          "155:                     resolvedContext,",
          "156:                     null);",
          "157:             return codeAccessTokenUni.onItemOrFailure().transformToUni(",
          "158:                     new BiFunction<TokenVerificationResult, Throwable, Uni<? extends SecurityIdentity>>() {",
          "159:                         @Override",
          "160:                         public Uni<SecurityIdentity> apply(TokenVerificationResult codeAccessTokenResult, Throwable t) {",
          "161:                             if (t != null) {",
          "162:                                 return Uni.createFrom().failure(t instanceof AuthenticationFailedException ? t",
          "163:                                         : new AuthenticationFailedException(t));",
          "164:                             }",
          "165:                             if (codeAccessTokenResult != null) {",
          "166:                                 if (tokenAutoRefreshPrepared(codeAccessTokenResult, requestData,",
          "167:                                         resolvedContext.oidcConfig)) {",
          "168:                                     return Uni.createFrom().failure(new TokenAutoRefreshException(null));",
          "169:                                 }",
          "170:                                 requestData.put(CODE_ACCESS_TOKEN_RESULT, codeAccessTokenResult);",
          "171:                             }",
          "172:                             return getUserInfoAndCreateIdentity(primaryTokenUni, requestData, request, resolvedContext);",
          "173:                         }",
          "174:                     });",
          "",
          "[Added Lines]",
          "151:             return getUserInfoAndCreateIdentity(primaryTokenUni, requestData, request, resolvedContext);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "191:                         }",
          "193:                         if (codeAccessToken != null) {",
          "195:                         }",
          "197:                         Uni<TokenVerificationResult> tokenUni = verifyTokenUni(requestData, resolvedContext,",
          "",
          "[Removed Lines]",
          "194:                             requestData.put(CODE_ACCESS_TOKEN_RESULT, codeAccessToken);",
          "",
          "[Added Lines]",
          "170:                             requestData.put(OidcUtils.CODE_ACCESS_TOKEN_RESULT, codeAccessToken);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "217:     }",
          "219:     private Uni<SecurityIdentity> getUserInfoAndCreateIdentity(Uni<TokenVerificationResult> tokenUni,",
          "221:             TenantConfigContext resolvedContext) {",
          "223:         return tokenUni.onItemOrFailure()",
          "",
          "[Removed Lines]",
          "220:             Map<String, Object> requestData, TokenAuthenticationRequest request,",
          "",
          "[Added Lines]",
          "196:             Map<String, Object> requestData,",
          "197:             TokenAuthenticationRequest request,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "227:                         if (t != null) {",
          "228:                             return Uni.createFrom().failure(new AuthenticationFailedException(t));",
          "229:                         }",
          "237:                                             }",
          "238:                                             return createSecurityIdentityWithOidcServer(result, requestData, request,",
          "240:                                         }",
          "246:                     }",
          "247:                 });",
          "",
          "[Removed Lines]",
          "230:                         if (resolvedContext.oidcConfig.authentication.isUserInfoRequired().orElse(false)) {",
          "231:                             return getUserInfoUni(requestData, request, resolvedContext).onItemOrFailure().transformToUni(",
          "232:                                     new BiFunction<UserInfo, Throwable, Uni<? extends SecurityIdentity>>() {",
          "233:                                         @Override",
          "234:                                         public Uni<SecurityIdentity> apply(UserInfo userInfo, Throwable t) {",
          "235:                                             if (t != null) {",
          "236:                                                 return Uni.createFrom().failure(new AuthenticationFailedException(t));",
          "239:                                                     resolvedContext, userInfo);",
          "241:                                     });",
          "242:                         } else {",
          "243:                             return createSecurityIdentityWithOidcServer(result, requestData, request, resolvedContext, null);",
          "244:                         }",
          "",
          "[Added Lines]",
          "208:                         Uni<TokenVerificationResult> codeAccessTokenUni = verifyCodeFlowAccessTokenUni(requestData, request,",
          "209:                                 resolvedContext,",
          "210:                                 null);",
          "211:                         return codeAccessTokenUni.onItemOrFailure().transformToUni(",
          "212:                                 new BiFunction<TokenVerificationResult, Throwable, Uni<? extends SecurityIdentity>>() {",
          "213:                                     @Override",
          "214:                                     public Uni<SecurityIdentity> apply(TokenVerificationResult codeAccessTokenResult,",
          "215:                                             Throwable t) {",
          "216:                                         if (t != null) {",
          "217:                                             return Uni.createFrom().failure(t instanceof AuthenticationFailedException ? t",
          "218:                                                     : new AuthenticationFailedException(t));",
          "219:                                         }",
          "220:                                         if (codeAccessTokenResult != null) {",
          "221:                                             if (tokenAutoRefreshPrepared(codeAccessTokenResult, requestData,",
          "222:                                                     resolvedContext.oidcConfig)) {",
          "223:                                                 return Uni.createFrom().failure(new TokenAutoRefreshException(null));",
          "225:                                             requestData.put(OidcUtils.CODE_ACCESS_TOKEN_RESULT, codeAccessTokenResult);",
          "226:                                         }",
          "228:                                         if (resolvedContext.oidcConfig.authentication.isUserInfoRequired().orElse(false)) {",
          "229:                                             return getUserInfoUni(requestData, request, resolvedContext).onItemOrFailure()",
          "230:                                                     .transformToUni(",
          "231:                                                             new BiFunction<UserInfo, Throwable, Uni<? extends SecurityIdentity>>() {",
          "232:                                                                 @Override",
          "233:                                                                 public Uni<SecurityIdentity> apply(UserInfo userInfo,",
          "234:                                                                         Throwable t) {",
          "235:                                                                     if (t != null) {",
          "236:                                                                         return Uni.createFrom()",
          "237:                                                                                 .failure(new AuthenticationFailedException(t));",
          "238:                                                                     }",
          "239:                                                                     return createSecurityIdentityWithOidcServer(result,",
          "240:                                                                             requestData, request,",
          "241:                                                                             resolvedContext, userInfo);",
          "242:                                                                 }",
          "243:                                                             });",
          "244:                                         } else {",
          "246:                                                     resolvedContext, null);",
          "248:                                     }",
          "249:                                 });",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "405:                 rolesJson = new JsonObject(userInfo.getJsonObject().toString());",
          "406:             } else if (tokenCred instanceof IdTokenCredential",
          "407:                     && resolvedContext.oidcConfig.roles.source.get() == Source.accesstoken) {",
          "409:                 if (rolesJson == null) {",
          "",
          "[Removed Lines]",
          "408:                 rolesJson = ((TokenVerificationResult) requestData.get(CODE_ACCESS_TOKEN_RESULT)).localVerificationResult;",
          "",
          "[Added Lines]",
          "413:                 rolesJson = ((TokenVerificationResult) requestData",
          "414:                         .get(OidcUtils.CODE_ACCESS_TOKEN_RESULT)).localVerificationResult;",
          "",
          "---------------"
        ],
        "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcTokenCredentialProducer.java||extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcTokenCredentialProducer.java": [
          "File: extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcTokenCredentialProducer.java -> extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcTokenCredentialProducer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: import org.jboss.logging.Logger;",
          "11: import io.quarkus.oidc.AccessTokenCredential;",
          "12: import io.quarkus.oidc.IdTokenCredential;",
          "13: import io.quarkus.oidc.RefreshToken;",
          "14: import io.quarkus.oidc.TokenIntrospection;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12: import io.quarkus.oidc.IdToken;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "78:     }",
          "85:     @Produces",
          "86:     @RequestScoped",
          "88:         TokenIntrospection introspection = (TokenIntrospection) identity.getAttribute(OidcUtils.INTROSPECTION_ATTRIBUTE);",
          "89:         if (introspection == null) {",
          "90:             LOG.trace(\"TokenIntrospection is null\");",
          "",
          "[Removed Lines]",
          "87:     TokenIntrospection currentTokenIntrospection() {",
          "",
          "[Added Lines]",
          "88:     @IdToken",
          "89:     TokenIntrospection idTokenIntrospection() {",
          "90:         return tokenIntrospectionFromIdentityAttribute();",
          "91:     }",
          "106:     @Produces",
          "107:     @RequestScoped",
          "108:     TokenIntrospection tokenIntrospection() {",
          "109:         TokenVerificationResult codeFlowAccessTokenResult = (TokenVerificationResult) identity",
          "110:                 .getAttribute(OidcUtils.CODE_ACCESS_TOKEN_RESULT);",
          "111:         if (codeFlowAccessTokenResult == null) {",
          "112:             return tokenIntrospectionFromIdentityAttribute();",
          "113:         } else {",
          "114:             return codeFlowAccessTokenResult.introspectionResult;",
          "115:         }",
          "116:     }",
          "118:     TokenIntrospection tokenIntrospectionFromIdentityAttribute() {",
          "",
          "---------------"
        ],
        "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcUtils.java||extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcUtils.java": [
          "File: extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcUtils.java -> extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:     public static final Integer MAX_COOKIE_VALUE_LENGTH = 4096;",
          "82:     public static final String POST_LOGOUT_COOKIE_NAME = \"q_post_logout\";",
          "83:     static final String UNDERSCORE = \"_\";",
          "84:     static final Uni<Void> VOID_UNI = Uni.createFrom().voidItem();",
          "85:     static final BlockingTaskRunner<Void> deleteTokensRequestContext = new BlockingTaskRunner<Void>();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84:     static final String CODE_ACCESS_TOKEN_RESULT = \"code_flow_access_token_result\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "347:         setSecurityIdentityConfigMetadata(builder, resolvedContext);",
          "348:         setBlockingApiAttribute(builder, vertxContext);",
          "349:         setTenantIdAttribute(builder, config);",
          "350:         return builder.build();",
          "351:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "351:         TokenVerificationResult codeFlowAccessTokenResult = (TokenVerificationResult) requestData.get(CODE_ACCESS_TOKEN_RESULT);",
          "352:         if (codeFlowAccessTokenResult != null) {",
          "353:             builder.addAttribute(CODE_ACCESS_TOKEN_RESULT, codeFlowAccessTokenResult);",
          "354:         }",
          "",
          "---------------"
        ],
        "integration-tests/oidc-wiremock/src/main/java/io/quarkus/it/keycloak/CodeFlowTokenIntrospectionResource.java||integration-tests/oidc-wiremock/src/main/java/io/quarkus/it/keycloak/CodeFlowTokenIntrospectionResource.java": [
          "File: integration-tests/oidc-wiremock/src/main/java/io/quarkus/it/keycloak/CodeFlowTokenIntrospectionResource.java -> integration-tests/oidc-wiremock/src/main/java/io/quarkus/it/keycloak/CodeFlowTokenIntrospectionResource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: import jakarta.ws.rs.GET;",
          "5: import jakarta.ws.rs.Path;",
          "7: import io.quarkus.security.Authenticated;",
          "8: import io.quarkus.security.identity.SecurityIdentity;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: import io.quarkus.oidc.TokenIntrospection;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "14:     @Inject",
          "15:     SecurityIdentity identity;",
          "17:     @GET",
          "18:     public String access() {",
          "20:     }",
          "21: }",
          "",
          "[Removed Lines]",
          "19:         return identity.getPrincipal().getName();",
          "",
          "[Added Lines]",
          "18:     @Inject",
          "19:     TokenIntrospection tokenIntrospection;",
          "23:         return identity.getPrincipal().getName() + \":\" + tokenIntrospection.getUsername();",
          "",
          "---------------"
        ],
        "integration-tests/oidc-wiremock/src/test/java/io/quarkus/it/keycloak/CodeFlowAuthorizationTest.java||integration-tests/oidc-wiremock/src/test/java/io/quarkus/it/keycloak/CodeFlowAuthorizationTest.java": [
          "File: integration-tests/oidc-wiremock/src/test/java/io/quarkus/it/keycloak/CodeFlowAuthorizationTest.java -> integration-tests/oidc-wiremock/src/test/java/io/quarkus/it/keycloak/CodeFlowAuthorizationTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "288:             TextPage textPage = form.getInputByValue(\"login\").click();",
          "293:             Thread.sleep(3000);",
          "294:             textPage = webClient.getPage(\"http://localhost:8081/code-flow-token-introspection\");",
          "297:             webClient.getCookieManager().clearCookies();",
          "298:         }",
          "",
          "[Removed Lines]",
          "290:             assertEquals(\"alice\", textPage.getContent());",
          "295:             assertEquals(\"admin\", textPage.getContent());",
          "",
          "[Added Lines]",
          "290:             assertEquals(\"alice:alice\", textPage.getContent());",
          "295:             assertEquals(\"admin:admin\", textPage.getContent());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f1cb0ef5bc3c75cb6a4cf34666d58c89b80136a1",
      "candidate_info": {
        "commit_hash": "f1cb0ef5bc3c75cb6a4cf34666d58c89b80136a1",
        "repo": "quarkusio/quarkus",
        "commit_url": "https://github.com/quarkusio/quarkus/commit/f1cb0ef5bc3c75cb6a4cf34666d58c89b80136a1",
        "files": [
          "devtools/maven/src/main/java/io/quarkus/maven/CreateProjectMojo.java"
        ],
        "message": "Ensure that generated project GAV is always set\n\nFixes: #38837\n(cherry picked from commit 8178c7fd3dc1c5323cadcd308a5962f5e5ce45b7)",
        "before_after_code_files": [
          "devtools/maven/src/main/java/io/quarkus/maven/CreateProjectMojo.java||devtools/maven/src/main/java/io/quarkus/maven/CreateProjectMojo.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/quarkusio/quarkus/pull/38864"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "devtools/maven/src/main/java/io/quarkus/maven/CreateProjectMojo.java||devtools/maven/src/main/java/io/quarkus/maven/CreateProjectMojo.java": [
          "File: devtools/maven/src/main/java/io/quarkus/maven/CreateProjectMojo.java -> devtools/maven/src/main/java/io/quarkus/maven/CreateProjectMojo.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "276:         }",
          "278:         askTheUserForMissingValues();",
          "280:             throw new MojoExecutionException(String.format(BAD_IDENTIFIER, \"artifactId\", projectArtifactId));",
          "281:         }",
          "283:             throw new MojoExecutionException(String.format(BAD_IDENTIFIER, \"groupId\", projectGroupId));",
          "284:         }",
          "",
          "[Removed Lines]",
          "279:         if (projectArtifactId != DEFAULT_ARTIFACT_ID && !OK_ID.matcher(projectArtifactId).matches()) {",
          "282:         if (projectGroupId != DEFAULT_GROUP_ID && !OK_ID.matcher(projectGroupId).matches()) {",
          "",
          "[Added Lines]",
          "279:         if (!DEFAULT_ARTIFACT_ID.equals(projectArtifactId) && !OK_ID.matcher(projectArtifactId).matches()) {",
          "282:         if (!DEFAULT_GROUP_ID.equals(projectGroupId) && !OK_ID.matcher(projectGroupId).matches()) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "391:         if (!session.getRequest().isInteractiveMode() || shouldUseDefaults()) {",
          "402:             return;",
          "403:         }",
          "",
          "[Removed Lines]",
          "392:             if (isBlank(projectArtifactId)) {",
          "394:                 projectArtifactId = DEFAULT_ARTIFACT_ID;",
          "395:             }",
          "396:             if (isBlank(projectGroupId)) {",
          "397:                 projectGroupId = DEFAULT_GROUP_ID;",
          "398:             }",
          "399:             if (isBlank(projectVersion)) {",
          "400:                 projectVersion = DEFAULT_VERSION;",
          "401:             }",
          "",
          "[Added Lines]",
          "392:             setProperDefaults();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "427:                         input -> noCode = input.startsWith(\"n\"));",
          "429:                 prompter.collectInput();",
          "430:             }",
          "431:         } catch (IOException e) {",
          "432:             throw new MojoExecutionException(\"Unable to get user input\", e);",
          "433:         }",
          "434:     }",
          "436:     private boolean shouldUseDefaults() {",
          "438:         return projectArtifactId != null;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "421:             } else {",
          "422:                 setProperDefaults();",
          "429:     private void setProperDefaults() {",
          "430:         if (isBlank(projectArtifactId)) {",
          "432:             projectArtifactId = DEFAULT_ARTIFACT_ID;",
          "433:         }",
          "434:         if (isBlank(projectGroupId)) {",
          "435:             projectGroupId = DEFAULT_GROUP_ID;",
          "436:         }",
          "437:         if (isBlank(projectVersion)) {",
          "438:             projectVersion = DEFAULT_VERSION;",
          "439:         }",
          "440:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bdac5c745117936594dfd1e10acb4312c1a55fa7",
      "candidate_info": {
        "commit_hash": "bdac5c745117936594dfd1e10acb4312c1a55fa7",
        "repo": "quarkusio/quarkus",
        "commit_url": "https://github.com/quarkusio/quarkus/commit/bdac5c745117936594dfd1e10acb4312c1a55fa7",
        "files": [
          "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/BearerAuthenticationMechanism.java",
          "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcAuthenticationMechanism.java"
        ],
        "message": "Log resolved OIDC tenant id and how the bearer token is found\n\n(cherry picked from commit ff84d5d07e2e731f47863702505023baf29cfd70)",
        "before_after_code_files": [
          "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/BearerAuthenticationMechanism.java||extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/BearerAuthenticationMechanism.java",
          "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcAuthenticationMechanism.java||extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcAuthenticationMechanism.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/quarkusio/quarkus/pull/38864"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/BearerAuthenticationMechanism.java||extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/BearerAuthenticationMechanism.java": [
          "File: extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/BearerAuthenticationMechanism.java -> extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/BearerAuthenticationMechanism.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import java.util.function.Function;",
          "5: import io.netty.handler.codec.http.HttpHeaderNames;",
          "6: import io.netty.handler.codec.http.HttpResponseStatus;",
          "7: import io.quarkus.oidc.AccessTokenCredential;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: import org.jboss.logging.Logger;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15: import io.vertx.ext.web.RoutingContext;",
          "17: public class BearerAuthenticationMechanism extends AbstractOidcAuthenticationMechanism {",
          "19:     public Uni<SecurityIdentity> authenticate(RoutingContext context,",
          "20:             IdentityProviderManager identityProviderManager, OidcTenantConfig oidcTenantConfig) {",
          "21:         String token = extractBearerToken(context, oidcTenantConfig);",
          "23:         if (token != null) {",
          "24:             return authenticate(identityProviderManager, context, new AccessTokenCredential(token));",
          "25:         }",
          "26:         return Uni.createFrom().nullItem();",
          "27:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20:     private static final Logger LOG = Logger.getLogger(BearerAuthenticationMechanism.class);",
          "24:         LOG.debug(\"Starting a bearer access token authentication\");",
          "30:         LOG.debug(\"Bearer access token is not available\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "41:         final HttpServerRequest request = context.request();",
          "42:         String header = oidcConfig.token.header.isPresent() ? oidcConfig.token.header.get()",
          "43:                 : HttpHeaders.AUTHORIZATION.toString();",
          "44:         final String headerValue = request.headers().get(header);",
          "46:         if (headerValue == null) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:         LOG.debugf(\"Looking for a token in the %s header\", header);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "50:         int idx = headerValue.indexOf(' ');",
          "51:         final String scheme = idx > 0 ? headerValue.substring(0, idx) : null;",
          "53:         if (scheme == null && !header.equalsIgnoreCase(HttpHeaders.AUTHORIZATION.toString())) {",
          "54:             return headerValue;",
          "55:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59:         if (scheme != null) {",
          "60:             LOG.debugf(\"Authorization scheme: %s\", scheme);",
          "61:         }",
          "",
          "---------------"
        ],
        "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcAuthenticationMechanism.java||extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcAuthenticationMechanism.java": [
          "File: extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcAuthenticationMechanism.java -> extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcAuthenticationMechanism.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: import jakarta.enterprise.context.ApplicationScoped;",
          "9: import io.quarkus.oidc.OIDCException;",
          "10: import io.quarkus.oidc.OidcTenantConfig;",
          "11: import io.quarkus.oidc.OidcTenantConfig.ApplicationType;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9: import org.jboss.logging.Logger;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24: @ApplicationScoped",
          "25: public class OidcAuthenticationMechanism implements HttpAuthenticationMechanism {",
          "26:     private static HttpCredentialTransport OIDC_WEB_APP_TRANSPORT = new HttpCredentialTransport(",
          "27:             HttpCredentialTransport.Type.AUTHORIZATION_CODE, OidcConstants.CODE_FLOW_CODE);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28:     private static final Logger LOG = Logger.getLogger(OidcAuthenticationMechanism.class);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "75:                 if (oidcTenantConfig == null) {",
          "76:                     throw new OIDCException(\"Tenant configuration has not been resolved\");",
          "77:                 }",
          "78:                 return oidcTenantConfig;",
          "79:             };",
          "80:         });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82:                 LOG.debugf(\"Resolved OIDC tenant id: %s\", oidcTenantConfig.tenantId.orElse(OidcUtils.DEFAULT_TENANT_ID));",
          "",
          "---------------"
        ]
      }
    }
  ]
}