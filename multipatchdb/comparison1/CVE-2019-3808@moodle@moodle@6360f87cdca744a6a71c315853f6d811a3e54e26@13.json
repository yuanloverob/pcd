{
  "cve_id": "CVE-2019-3808",
  "cve_desc": "A flaw was found in Moodle versions 3.6 to 3.6.1, 3.5 to 3.5.3, 3.4 to 3.4.6, 3.1 to 3.1.15 and earlier unsupported versions. The 'manage groups' capability did not have the 'XSS risk' flag assigned to it, but does have that access in certain places. Note that the capability is intended for use by trusted users, and is only assigned to teachers and managers by default.",
  "repo": "moodle/moodle",
  "patch_hash": "6360f87cdca744a6a71c315853f6d811a3e54e26",
  "patch_info": {
    "commit_hash": "6360f87cdca744a6a71c315853f6d811a3e54e26",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/6360f87cdca744a6a71c315853f6d811a3e54e26",
    "files": [
      "lib/db/access.php",
      "version.php"
    ],
    "message": "MDL-64395 groups: Added XSS Risk to the manage groups capability",
    "before_after_code_files": [
      "lib/db/access.php||lib/db/access.php",
      "version.php||version.php"
    ]
  },
  "patch_diff": {
    "lib/db/access.php||lib/db/access.php": [
      "File: lib/db/access.php -> lib/db/access.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "1123:     ),",
      "1125:     'moodle/course:managegroups' => array(",
      "1127:         'captype' => 'write',",
      "1128:         'contextlevel' => CONTEXT_COURSE,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1126:         'riskbitmask' => RISK_XSS,",
      "",
      "---------------"
    ],
    "version.php||version.php": [
      "File: version.php -> version.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "30: defined('MOODLE_INTERNAL') || die();",
      "",
      "[Removed Lines]",
      "32: $version  = 2018122000.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
      "",
      "[Added Lines]",
      "32: $version  = 2018122000.02;              // YYYYMMDD      = weekly release date of this DEV branch.",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7ec1804935c0681d6da08d47cb23492c39332a56",
      "candidate_info": {
        "commit_hash": "7ec1804935c0681d6da08d47cb23492c39332a56",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/7ec1804935c0681d6da08d47cb23492c39332a56",
        "files": [
          "version.php"
        ],
        "message": "weekly release 3.8dev",
        "before_after_code_files": [
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "38: $branch   = '38';                       // This version's branch.",
          "39: $maturity = MATURITY_ALPHA;             // This version's maturity level.",
          "",
          "[Removed Lines]",
          "32: $version  = 2019062000.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "36: $release  = '3.8dev (Build: 20190620)'; // Human-friendly version name",
          "",
          "[Added Lines]",
          "32: $version  = 2019062800.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "36: $release  = '3.8dev (Build: 20190628)'; // Human-friendly version name",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fdb45f7943643a0ebc93b5b50df57468cc833597",
      "candidate_info": {
        "commit_hash": "fdb45f7943643a0ebc93b5b50df57468cc833597",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/fdb45f7943643a0ebc93b5b50df57468cc833597",
        "files": [
          "admin/settings/subsystems.php",
          "lang/en/admin.php",
          "lib/db/upgrade.php",
          "version.php"
        ],
        "message": "MDL-63279 messaging: Add admin setting for toggling site-wide messaging",
        "before_after_code_files": [
          "admin/settings/subsystems.php||admin/settings/subsystems.php",
          "lang/en/admin.php||lang/en/admin.php",
          "lib/db/upgrade.php||lib/db/upgrade.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/settings/subsystems.php||admin/settings/subsystems.php": [
          "File: admin/settings/subsystems.php -> admin/settings/subsystems.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "16:     $optionalsubsystems->add(new admin_setting_configcheckbox('messaging', new lang_string('messaging', 'admin'), new lang_string('configmessaging','admin'), 1));",
          "18:     $optionalsubsystems->add(new admin_setting_configcheckbox('messaginghidereadnotifications', new lang_string('messaginghidereadnotifications', 'admin'), new lang_string('configmessaginghidereadnotifications','admin'), 0));",
          "20:     $options = array(DAYSECS=>new lang_string('secondstotime86400'), WEEKSECS=>new lang_string('secondstotime604800'), 2620800=>new lang_string('nummonths', 'moodle', 1), 15724800=>new lang_string('nummonths', 'moodle', 6),0=>new lang_string('never'));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18:     $optionalsubsystems->add(new admin_setting_configcheckbox('messagingallusers',",
          "19:         new lang_string('messagingallusers', 'admin'),",
          "20:         new lang_string('configmessagingallusers', 'admin'),",
          "21:         0)",
          "22:     );",
          "",
          "---------------"
        ],
        "lang/en/admin.php||lang/en/admin.php": [
          "File: lang/en/admin.php -> lang/en/admin.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "272: $string['configmaxconsecutiveidentchars'] = 'Passwords must not have more than this number of consecutive identical characters. Use 0 to disable this check.';",
          "273: $string['configmaxeditingtime'] = 'This specifies the amount of time people have to re-edit forum postings, glossary comments etc.  Usually 30 minutes is a good value.';",
          "274: $string['configmaxevents'] = 'Events to Lookahead';",
          "276: $string['configmessagingallowemailoverride'] = 'Allow users to have email message notifications sent to an email address other than the email address in their profile';",
          "277: $string['configmessaginghidereadnotifications'] = 'Hide read notifications of events like forum posts when viewing messaging history';",
          "278: $string['configmessagingdeletereadnotificationsdelay'] = 'Read notifications can be deleted to save space. How long after a notification is read can it be deleted?';",
          "279: $string['configminpassworddigits'] = 'Passwords must have at least these many digits.';",
          "280: $string['configminpasswordlength'] = 'Passwords must be at least these many characters long.';",
          "281: $string['configminpasswordlower'] = 'Passwords must have at least these many lower case letters.';",
          "",
          "[Removed Lines]",
          "275: $string['configmessaging'] = 'Should the messaging system between site users be enabled?';",
          "",
          "[Added Lines]",
          "275: $string['configmessaging'] = 'If enabled, users can send messages to other users on the site.';",
          "279: $string['configmessagingallusers'] = 'If enabled, users can choose to allow anyone on the site to send them a message. Otherwise, users can choose to allow only their contacts or others in their courses to send them messages.';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "748: $string['messaging'] = 'Enable messaging system';",
          "749: $string['messagingallowemailoverride'] = 'Notification email override';",
          "750: $string['messaginghidereadnotifications'] = 'Hide read notifications';",
          "751: $string['messagingdeletereadnotificationsdelay'] = 'Delete read notifications';",
          "752: $string['minpassworddigits'] = 'Digits';",
          "753: $string['minpasswordlength'] = 'Password length';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "752: $string['messagingallusers'] = 'Allow messages from anyone on the site';",
          "",
          "---------------"
        ],
        "lib/db/upgrade.php||lib/db/upgrade.php": [
          "File: lib/db/upgrade.php -> lib/db/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2329:     }",
          "2331:     if ($oldversion < 2018091200.00) {",
          "2333:             unset_all_config_for_plugin('cachestore_memcache');",
          "2334:         }",
          "2336:         upgrade_main_savepoint(true, 2018091200.00);",
          "2337:     }",
          "2339:     return true;",
          "2340: }",
          "",
          "[Removed Lines]",
          "2332:         if (!file_exists($CFG->dirroot.'/cache/stores/memcache/settings.php')) {",
          "",
          "[Added Lines]",
          "2332:         if (!file_exists($CFG->dirroot . '/cache/stores/memcache/settings.php')) {",
          "2339:     if ($oldversion < 2018091400.01) {",
          "2340:         if (!isset($CFG->messagingallusers)) {",
          "2342:             if (isset($CFG->messaging)) {",
          "2343:                 set_config('messagingallusers', $CFG->messaging);",
          "2344:             } else {",
          "2347:                 set_config('messagingallusers', 1);",
          "2348:             }",
          "2349:         }",
          "2352:         upgrade_main_savepoint(true, 2018091400.01);",
          "2353:     }",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2018091400.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2018091400.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "52eb2da84485b42d8b55f9f0b6c130816c37d952",
      "candidate_info": {
        "commit_hash": "52eb2da84485b42d8b55f9f0b6c130816c37d952",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/52eb2da84485b42d8b55f9f0b6c130816c37d952",
        "files": [
          "version.php"
        ],
        "message": "weekly release 3.7.3+",
        "before_after_code_files": [
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "38: $branch   = '37';                       // This version's branch.",
          "39: $maturity = MATURITY_STABLE;             // This version's maturity level.",
          "",
          "[Removed Lines]",
          "32: $version  = 2019052003.01;              // 20190520      = branching date YYYYMMDD - do not modify!",
          "36: $release  = '3.7.3+ (Build: 20191115)'; // Human-friendly version name",
          "",
          "[Added Lines]",
          "32: $version  = 2019052003.02;              // 20190520      = branching date YYYYMMDD - do not modify!",
          "36: $release  = '3.7.3+ (Build: 20191122)'; // Human-friendly version name",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "680d5c5be62da6bcc4162d45870be132f500a96a",
      "candidate_info": {
        "commit_hash": "680d5c5be62da6bcc4162d45870be132f500a96a",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/680d5c5be62da6bcc4162d45870be132f500a96a",
        "files": [
          "lib/db/services.php",
          "question/classes/external.php",
          "version.php"
        ],
        "message": "MDL-61133 core_question: new submit_tags_form webservice",
        "before_after_code_files": [
          "lib/db/services.php||lib/db/services.php",
          "question/classes/external.php||question/classes/external.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/db/services.php||lib/db/services.php": [
          "File: lib/db/services.php -> lib/db/services.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1114:         'capabilities'  => 'moodle/question:flag',",
          "1115:         'services'      => array(MOODLE_OFFICIAL_MOBILE_SERVICE),",
          "1116:     ),",
          "1117:     'core_rating_get_item_ratings' => array(",
          "1118:         'classname' => 'core_rating_external',",
          "1119:         'methodname' => 'get_item_ratings',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1117:     'core_question_submit_tags_form' => array(",
          "1118:         'classname'     => 'core_question_external',",
          "1119:         'methodname'    => 'submit_tags_form',",
          "1120:         'description'   => 'Update the question tags.',",
          "1121:         'type'          => 'write',",
          "1122:         'ajax' => true,",
          "1123:     ),",
          "",
          "---------------"
        ],
        "question/classes/external.php||question/classes/external.php": [
          "File: question/classes/external.php -> question/classes/external.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:             )",
          "115:         );",
          "116:     }",
          "117: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123:     public static function submit_tags_form_parameters() {",
          "124:         return new external_function_parameters([",
          "125:                 'formdata' => new external_value(PARAM_RAW, 'The data from the tag form'),",
          "126:         ]);",
          "127:     }",
          "136:     public static function submit_tags_form($formdata) {",
          "137:         global $USER, $DB, $CFG;",
          "139:         $data = [];",
          "140:         $result = ['status' => false];",
          "143:         $params = self::validate_parameters(self::submit_tags_form_parameters(), ['formdata' => $formdata]);",
          "144:         $context = \\context_user::instance($USER->id);",
          "146:         self::validate_context($context);",
          "147:         parse_str($params['formdata'], $data);",
          "149:         if (!empty($data['id'])) {",
          "150:             $questionid = clean_param($data['id'], PARAM_INT);",
          "151:             $question = $DB->get_record('question', array('id' => $questionid));",
          "153:             require_once($CFG->libdir . '/questionlib.php');",
          "154:             $canedit = question_has_capability_on($question, 'edit');",
          "156:             require_once($CFG->dirroot . '/question/type/tags_form.php');",
          "157:             $mform = new \\core_question\\form\\tags(null, null, 'post', '', null, $canedit, $data);",
          "159:             if ($validateddata = $mform->get_data()) {",
          "162:                 if ($canedit) {",
          "163:                     if (is_array($validateddata->tags)) {",
          "164:                         $categorycontext = context::instance_by_id($validateddata->contextid);",
          "166:                         core_tag_tag::set_item_tags('core_question', 'question', $validateddata->id,",
          "167:                             $categorycontext, $validateddata->tags);",
          "169:                         $result['status'] = true;",
          "170:                     } else {",
          "173:                         core_tag_tag::remove_all_item_tags('core_question', 'question', $validateddata->id);",
          "175:                         $result['status'] = true;",
          "176:                     }",
          "177:                 }",
          "178:             }",
          "179:         }",
          "181:         return $result;",
          "182:     }",
          "187:     public static function  submit_tags_form_returns() {",
          "188:         return new external_single_structure([",
          "189:                 'status' => new external_value(PARAM_BOOL, 'status: true if success')",
          "190:         ]);",
          "191:     }",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2018020100.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2018020100.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1a89704b056d459b3b57e1d42b5177f619073ac3",
      "candidate_info": {
        "commit_hash": "1a89704b056d459b3b57e1d42b5177f619073ac3",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/1a89704b056d459b3b57e1d42b5177f619073ac3",
        "files": [
          "version.php"
        ],
        "message": "weekly release 3.7.1+",
        "before_after_code_files": [
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "38: $branch   = '37';                       // This version's branch.",
          "39: $maturity = MATURITY_STABLE;             // This version's maturity level.",
          "",
          "[Removed Lines]",
          "32: $version  = 2019052001.02;              // 20190520      = branching date YYYYMMDD - do not modify!",
          "36: $release  = '3.7.1+ (Build: 20190718)'; // Human-friendly version name",
          "",
          "[Added Lines]",
          "32: $version  = 2019052001.03;              // 20190520      = branching date YYYYMMDD - do not modify!",
          "36: $release  = '3.7.1+ (Build: 20190725)'; // Human-friendly version name",
          "",
          "---------------"
        ]
      }
    }
  ]
}