{
  "cve_id": "CVE-2023-1001",
  "cve_desc": "A vulnerability, which was classified as problematic, has been found in xuliangzhan vxe-table up to 3.7.9. This issue affects the function export of the file packages/textarea/src/textarea.js of the component vxe-textarea. The manipulation of the argument inputValue leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 3.7.10 is able to address this issue. The patch is named d70b0e089740b65a22c89c106ebc4627ac48a22d. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-266123.",
  "repo": "x-extends/vxe-table",
  "patch_hash": "d70b0e089740b65a22c89c106ebc4627ac48a22d",
  "patch_info": {
    "commit_hash": "d70b0e089740b65a22c89c106ebc4627ac48a22d",
    "repo": "x-extends/vxe-table",
    "commit_url": "https://github.com/x-extends/vxe-table/commit/d70b0e089740b65a22c89c106ebc4627ac48a22d",
    "files": [
      "packages/table/src/body.js",
      "packages/textarea/src/textarea.js"
    ],
    "message": "textarea \u4fee\u590d\u6ce8\u5165xss\u95ee\u9898 #I8O21R",
    "before_after_code_files": [
      "packages/table/src/body.js||packages/table/src/body.js",
      "packages/textarea/src/textarea.js||packages/textarea/src/textarea.js"
    ]
  },
  "patch_diff": {
    "packages/table/src/body.js||packages/table/src/body.js": [
      "File: packages/table/src/body.js -> packages/table/src/body.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "499:     elemStore[`${prefix}xSpace`] = $refs.xSpace",
      "500:     elemStore[`${prefix}ySpace`] = $refs.ySpace",
      "501:     elemStore[`${prefix}emptyBlock`] = $refs.emptyBlock",
      "504:   },",
      "505:   beforeDestroy () {",
      "506:     clearTimeout(this.wheelTime)",
      "",
      "[Removed Lines]",
      "502:     this.$el.onscroll = this.scrollEvent",
      "503:     this.$el._onscroll = this.scrollEvent",
      "",
      "[Added Lines]",
      "502:     if (this.$el) {",
      "503:       this.$el.onscroll = this.scrollEvent",
      "504:       this.$el._onscroll = this.scrollEvent",
      "505:     }",
      "",
      "---------------"
    ],
    "packages/textarea/src/textarea.js||packages/textarea/src/textarea.js": [
      "File: packages/textarea/src/textarea.js -> packages/textarea/src/textarea.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "188:         autoTxtElem.className = ['vxe-textarea--autosize', size ? `size--${size}` : ''].join(' ')",
      "189:         autoTxtElem.style.width = `${textElem.clientWidth}px`",
      "190:         autoTxtElem.style.padding = textStyle.padding",
      "192:       }",
      "193:     },",
      "194:     handleResize () {",
      "",
      "[Removed Lines]",
      "191:         autoTxtElem.innerHTML = ('' + (inputValue || '\u3000')).replace(/\\n$/, '\\n\u3000')",
      "",
      "[Added Lines]",
      "191:         autoTxtElem.innerText = ('' + (inputValue || '\u3000')).replace(/\\n$/, '\\n\u3000')",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fc4ecaaae9ee8a4dc4c7c1cb56d70fd60dfc7199",
      "candidate_info": {
        "commit_hash": "fc4ecaaae9ee8a4dc4c7c1cb56d70fd60dfc7199",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/fc4ecaaae9ee8a4dc4c7c1cb56d70fd60dfc7199",
        "files": [
          "helper/vetur/attributes.json",
          "helper/vetur/tags.json",
          "package.json",
          "packages/custom/src/panel.js",
          "packages/locale/lang/en-US.js",
          "packages/locale/lang/es-ES.js",
          "packages/locale/lang/ja-JP.js",
          "packages/locale/lang/pt-BR.js",
          "packages/locale/lang/zh-CN.js",
          "packages/locale/lang/zh-TC.js",
          "styles/custom.scss"
        ],
        "message": "releases 3.8.23",
        "before_after_code_files": [
          "packages/custom/src/panel.js||packages/custom/src/panel.js",
          "packages/locale/lang/en-US.js||packages/locale/lang/en-US.js",
          "packages/locale/lang/es-ES.js||packages/locale/lang/es-ES.js",
          "packages/locale/lang/ja-JP.js||packages/locale/lang/ja-JP.js",
          "packages/locale/lang/pt-BR.js||packages/locale/lang/pt-BR.js",
          "packages/locale/lang/zh-CN.js||packages/locale/lang/zh-CN.js",
          "packages/locale/lang/zh-TC.js||packages/locale/lang/zh-TC.js",
          "styles/custom.scss||styles/custom.scss"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/custom/src/panel.js||packages/custom/src/panel.js": [
          "File: packages/custom/src/panel.js -> packages/custom/src/panel.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "44:       const isColGroup = column.children && column.children.length",
          "45:       const colTitle = formatText(column.getTitle(), 1)",
          "46:       const isDisabled = checkMethod ? !checkMethod({ column }) : false",
          "47:       colVNs.push(",
          "48:         h('li', {",
          "49:           key: column.id,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47:       const isHidden = !isChecked",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51:             colid: column.id",
          "52:           },",
          "53:           class: ['vxe-table-custom--option', `level--${column.level}`, {",
          "54:             'is--group': isColGroup",
          "55:           }],",
          "56:           on: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55:             'is--hidden': isHidden,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "85:               class: 'vxe-table-custom--sort-option'",
          "86:             }, [",
          "87:               h('span', {",
          "89:                 attrs: {",
          "90:                   title: GlobalConfig.i18n('vxe.custom.setting.sortHelpTip')",
          "91:                 },",
          "93:                   mousedown: _vm.sortMousedownEvent,",
          "94:                   mouseup: _vm.sortMouseupEvent",
          "95:                 }",
          "",
          "[Removed Lines]",
          "88:                 class: 'vxe-table-custom--sort-btn',",
          "92:                 on: {",
          "",
          "[Added Lines]",
          "90:                 class: ['vxe-table-custom--sort-btn', {",
          "91:                   'is--disabled': isHidden",
          "92:                 }],",
          "96:                 on: isHidden ? {} : {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "118:             ? h('div', {",
          "119:               class: 'vxe-table-custom--fixed-option'",
          "120:             }, [",
          "127:                   title: GlobalConfig.i18n(column.renderFixed === 'left' ? 'vxe.toolbar.cancelFixed' : 'vxe.toolbar.fixedLeft')",
          "128:                 },",
          "129:                 on: {",
          "",
          "[Removed Lines]",
          "121:               h('span', {",
          "122:                 class: ['vxe-table-custom--fixed-left-option', column.renderFixed === 'left' ? GlobalConfig.icon.TOOLBAR_TOOLS_FIXED_LEFT_ACTIVE : GlobalConfig.icon.TOOLBAR_TOOLS_FIXED_LEFT, {",
          "123:                   'is--checked': column.renderFixed === 'left',",
          "124:                   'is--disabled': isMaxFixedColumn && !column.renderFixed",
          "125:                 }],",
          "126:                 attrs: {",
          "",
          "[Added Lines]",
          "125:               h(VxeButtonComponent, {",
          "126:                 props: {",
          "127:                   mode: 'text',",
          "128:                   icon: column.renderFixed === 'left' ? GlobalConfig.icon.TOOLBAR_TOOLS_FIXED_LEFT_ACTIVE : GlobalConfig.icon.TOOLBAR_TOOLS_FIXED_LEFT,",
          "129:                   status: column.renderFixed === 'left' ? 'primary' : '',",
          "130:                   disabled: isHidden || (isMaxFixedColumn && !column.renderFixed),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "132:                   }",
          "133:                 }",
          "134:               }),",
          "141:                   title: GlobalConfig.i18n(column.renderFixed === 'right' ? 'vxe.toolbar.cancelFixed' : 'vxe.toolbar.fixedRight')",
          "142:                 },",
          "143:                 on: {",
          "145:                   click: () => {",
          "146:                     _vm.changeFixedOption(column, 'right')",
          "147:                   }",
          "",
          "[Removed Lines]",
          "135:               h('span', {",
          "136:                 class: ['vxe-table-custom--fixed-right-option', column.renderFixed === 'right' ? GlobalConfig.icon.TOOLBAR_TOOLS_FIXED_RIGHT_ACTIVE : GlobalConfig.icon.TOOLBAR_TOOLS_FIXED_RIGHT, {",
          "137:                   'is--checked': column.renderFixed === 'right',",
          "138:                   'is--disabled': isMaxFixedColumn && !column.renderFixed",
          "139:                 }],",
          "140:                 attrs: {",
          "",
          "[Added Lines]",
          "139:               h(VxeButtonComponent, {",
          "140:                 props: {",
          "141:                   mode: 'text',",
          "142:                   icon: column.renderFixed === 'right' ? GlobalConfig.icon.TOOLBAR_TOOLS_FIXED_RIGHT_ACTIVE : GlobalConfig.icon.TOOLBAR_TOOLS_FIXED_RIGHT,",
          "143:                   status: column.renderFixed === 'right' ? 'primary' : '',",
          "144:                   disabled: isHidden || (isMaxFixedColumn && !column.renderFixed),",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "279:       const colTitle = formatText(column.getTitle(), 1)",
          "280:       const isColGroup = column.children && column.children.length",
          "281:       const isDisabled = checkMethod ? !checkMethod({ column }) : false",
          "282:       trVNs.push(",
          "283:         h('tr', {",
          "284:           key: column.id,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "285:       const isHidden = !isChecked",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "325:             }, [",
          "326:               column.level === 1",
          "327:                 ? h('span', {",
          "329:                   attrs: {",
          "330:                     title: GlobalConfig.i18n('vxe.custom.setting.sortHelpTip')",
          "331:                   },",
          "333:                     mousedown: _vm.sortMousedownEvent,",
          "334:                     mouseup: _vm.sortMouseupEvent",
          "335:                   }",
          "",
          "[Removed Lines]",
          "328:                   class: 'vxe-table-custom-popup--column-sort-btn',",
          "332:                   on: {",
          "",
          "[Added Lines]",
          "332:                   class: ['vxe-table-custom-popup--column-sort-btn', {",
          "333:                     'is--disabled': isHidden",
          "334:                   }],",
          "338:                   on: isHidden ? {} : {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "363:             ? h('td', {",
          "364:               class: 'vxe-table-custom-popup--column-item col--resizable'",
          "365:             }, [",
          "367:                 ? h('span', '-')",
          "368:                 : h('vxe-input', {",
          "369:                   props: {",
          "370:                     type: 'integer',",
          "371:                     value: column.renderResizeWidth",
          "372:                   },",
          "373:                   on: {",
          "",
          "[Removed Lines]",
          "366:               !isChecked || (column.children && column.children.length)",
          "",
          "[Added Lines]",
          "372:               column.children && column.children.length",
          "377:                     disabled: isHidden,",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "389:                     value: column.renderFixed || '',",
          "390:                     type: 'button',",
          "391:                     size: 'mini',",
          "392:                     options: [",
          "396:                     ]",
          "397:                   },",
          "398:                   on: {",
          "",
          "[Removed Lines]",
          "393:                       { label: GlobalConfig.i18n('vxe.custom.setting.fixedLeft'), value: 'left', disabled: isMaxFixedColumn },",
          "394:                       { label: GlobalConfig.i18n('vxe.custom.setting.fixedUnset'), value: '' },",
          "395:                       { label: GlobalConfig.i18n('vxe.custom.setting.fixedRight'), value: 'right', disabled: isMaxFixedColumn }",
          "",
          "[Added Lines]",
          "399:                     disabled: isHidden,",
          "401:                       { label: GlobalConfig.i18n('vxe.custom.setting.fixedLeft'), value: 'left', disabled: isHidden || isMaxFixedColumn },",
          "402:                       { label: GlobalConfig.i18n('vxe.custom.setting.fixedUnset'), value: '', disabled: isHidden },",
          "403:                       { label: GlobalConfig.i18n('vxe.custom.setting.fixedRight'), value: 'right', disabled: isHidden || isMaxFixedColumn }",
          "",
          "---------------"
        ],
        "packages/locale/lang/en-US.js||packages/locale/lang/en-US.js": [
          "File: packages/locale/lang/en-US.js -> packages/locale/lang/en-US.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "2:   vxe: {",
          "3:     base: {",
          "4:       pleaseInput: 'Please input',",
          "6:     },",
          "7:     loading: {",
          "8:       text: 'Loading...'",
          "9:     },",
          "10:     error: {",
          "11:       groupFixed: 'If you use group headers, the freeze columns must be set by group.',",
          "12:       groupMouseRange: 'Grouping headers and \"{0}\" cannot be used at the same time, which may cause errors.',",
          "13:       groupTag: 'Grouping column header should use \"{0}\" instead of \"{1}\", which may cause errors.',",
          "",
          "[Removed Lines]",
          "5:       pleaseSelect: 'Select'",
          "",
          "[Added Lines]",
          "5:       pleaseSelect: 'Select',",
          "6:       comma: ',',",
          "7:       fullStop: '.'",
          "13:       downErr: 'Download failed.',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "17:       useErr: 'Error installing \"{0}\" module, possibly in the wrong order, dependent modules need to be installed before Table.',",
          "18:       barUnableLink: 'Toolbar cannot associate table.',",
          "19:       expandContent: 'Expand row slot should be \"content\", please check if it is correct.',",
          "20:       reqModule: 'require \"{0}\" module.',",
          "21:       reqProp: 'Missing the necessary \"{0}\" parameter, which can cause error.',",
          "22:       emptyProp: 'The property \"{0}\" is not allowed to be empty.',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23:       reqComp: 'Require \"{0}\" component, check whether the install is correct. https://vxeui.com/#/start/useGlobal',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "31:       noTree: 'The tree structure does not support \"{0}\".',",
          "32:       notProp: 'Unsupported parameters \"{0}\"',",
          "33:       checkProp: 'The checkbox may stall when the amount of data is too large, it is recommended to set the parameter \"{0}\" to increase the rendering speed ',",
          "35:       delFunc: 'The function \"{0}\" is deprecated, please use \"{1}\".',",
          "36:       delProp: 'The property \"{0}\" is deprecated, please use \"{1}\".',",
          "37:       delEvent: 'The event \"{0}\" is deprecated, please use \"{1}\"',",
          "",
          "[Removed Lines]",
          "34:       coverProp: 'The parameter \"{1}\" to \"{0}\" is repeatedly defined. This may cause an error',",
          "",
          "[Added Lines]",
          "38:       coverProp: 'The parameter \"{1}\" to \"{0}\" is repeatedly defined. This may cause an error.',",
          "39:       uniField: 'The field \"{0}\" is repeatedly defined, which may cause an error.',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "45:     table: {",
          "46:       emptyText: 'No Data',",
          "47:       allTitle: 'Select all / cancel',",
          "49:       confirmFilter: 'Confirm',",
          "50:       resetFilter: 'Reset',",
          "51:       allFilter: 'All',",
          "",
          "[Removed Lines]",
          "48:       seqTitle: 'S/N',",
          "",
          "[Added Lines]",
          "53:       seqTitle: 'N/S',",
          "54:       actionTitle: 'Action',",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "62:       customConfirm: 'Confirm',",
          "63:       customClose: 'Close',",
          "64:       customCancel: 'Cancel',",
          "66:       maxFixedCol: 'The maximum number of Freeze columns cannot exceed {0}'",
          "67:     },",
          "68:     grid: {",
          "",
          "[Removed Lines]",
          "65:       customRestore: 'Restore default',",
          "",
          "[Added Lines]",
          "71:       customRestore: 'Restore',",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "120:         sortHelpTip: 'Click and drag the icon to adjust the order of the columns.',",
          "121:         colTitle: 'Title',",
          "122:         colResizable: 'Column width (px)',",
          "124:         colFixed: 'Freeze columns',",
          "125:         colFixedMax: 'Freeze columns (Max. {0})',",
          "126:         fixedLeft: 'Left',",
          "",
          "[Removed Lines]",
          "123:         colVisible: 'Visible',",
          "",
          "[Added Lines]",
          "129:         colVisible: 'Display',",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "189:       expCancel: 'Cancel'",
          "190:     },",
          "191:     modal: {",
          "193:       zoomOut: 'Reduction',",
          "194:       close: 'Close'",
          "195:     },",
          "196:     form: {",
          "",
          "[Removed Lines]",
          "192:       zoomIn: 'Maximization',",
          "",
          "[Added Lines]",
          "198:       errTitle: 'Error',",
          "199:       zoomMin: 'Minimize',",
          "200:       zoomIn: 'Maximize',",
          "202:       close: 'Close',",
          "203:       miniMaxSize: 'The number of minimized Windows cannot exceed {0}.'",
          "204:     },",
          "205:     drawer: {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "270:         }",
          "271:       }",
          "272:     },",
          "273:     formDesign: {",
          "274:       widget: {",
          "278:       }",
          "279:     },",
          "",
          "[Removed Lines]",
          "275:         input: 'Input',",
          "276:         textarea: 'Textarea',",
          "277:         select: 'Select'",
          "",
          "[Added Lines]",
          "285:     imagePreview: {",
          "286:       popupTitle: 'Preview',",
          "287:       operBtn: {",
          "288:         zoomOut: 'Reduce',",
          "289:         zoomIn: 'Enlarge',",
          "290:         pctFull: 'Proportional scaling',",
          "291:         pct11: 'Show original size',",
          "292:         rotateLeft: 'Rotate left',",
          "293:         rotateRight: 'Rotate right',",
          "294:         print: 'Click to print',",
          "295:         download: 'Click to download'",
          "296:       }",
          "297:     },",
          "298:     upload: {",
          "299:       fileBtnText: 'Click or drag',",
          "300:       imgBtnText: 'Click or drag',",
          "301:       dragPlaceholder: 'Please drag and drop the file into this area to upload it.',",
          "302:       imgSizeHint: 'Single {0}',",
          "303:       imgCountHint: 'Up to {0}',",
          "304:       fileTypeHint: 'Support {0} file types',",
          "305:       fileSizeHint: 'Single file size does not exceed {0}',",
          "306:       fileCountHint: 'Up to {0} file can be uploaded',",
          "307:       overCountErr: 'You can only choose {0} file!',",
          "308:       overCountExtraErr: 'It has exceeded the maximum number {0}, and more than {0} file will be ignored!\u8d85\u51fa\u6700\u5927\u6570\u91cf 1 \u4e2a\uff0c\u8d85\u51fa\u7684 1 \u4e2a\u6587\u4ef6\u5c06\u88ab\u5ffd\u7565\uff01',",
          "309:       overSizeErr: 'The size of the file is not more than {0}}!',",
          "310:       reUpload: 'Re upload',",
          "311:       uploadProgress: 'Uploading {0}%',",
          "312:       uploadErr: 'Fail to upload',",
          "313:       uploadSuccess: 'Successfully upload',",
          "314:       moreBtnText: 'More ({0})',",
          "315:       viewItemTitle: 'click to view'",
          "316:     },",
          "318:       formName: 'Form name',",
          "319:       defFormTitle: 'Unnamed form',",
          "320:       widgetPropTab: 'Field property',",
          "321:       widgetFormTab: 'Form property',",
          "322:       error: {",
          "323:         wdFormUni: 'Only one control of this type is allowed to be added to the form.',",
          "324:         wdSubUni: 'Only one control of this type is allowed to be added to a sub table.'",
          "325:       },",
          "326:       styleSetting: {",
          "327:         btn: 'Style setting',",
          "328:         title: 'Form style setting',",
          "329:         layoutTitle: 'Field layout',",
          "330:         verticalLayout: 'Vertical layout',",
          "331:         horizontalLayout: 'Horizontal layout',",
          "332:         styleTitle: 'Title style',",
          "333:         boldTitle: 'Bold title',",
          "334:         fontBold: 'Bold',",
          "335:         fontNormal: 'Normal',",
          "336:         colonTitle: 'Display colon',",
          "337:         colonVisible: 'Visible',",
          "338:         colonHidden: 'Hidden',",
          "339:         alignTitle: 'Title align',",
          "340:         widthTitle: 'Title width',",
          "341:         alignLeft: 'Left',",
          "342:         alignRight: 'Right',",
          "343:         unitPx: 'Px',",
          "344:         unitPct: 'Pct'",
          "345:       },",
          "347:         group: {",
          "348:           base: 'Base control',",
          "349:           layout: 'Layout control',",
          "350:           system: 'System control',",
          "351:           module: 'Module control',",
          "352:           chart: 'Chart control',",
          "353:           advanced: 'Advanced control'",
          "354:         },",
          "355:         copyTitle: 'Copy_{0}',",
          "356:         component: {",
          "357:           input: 'Input',",
          "358:           textarea: 'Textarea',",
          "359:           select: 'Select',",
          "360:           row: 'Row/column',",
          "361:           title: 'Title',",
          "362:           text: 'Text',",
          "363:           subtable: 'Subtable',",
          "364:           VxeSwitch: 'Yes/no',",
          "365:           VxeInput: 'Input',",
          "366:           VxeNumberInput: 'Number',",
          "367:           VxeDatePicker: 'Date',",
          "368:           VxeTextarea: 'Textarea',",
          "369:           VxeSelect: 'Select',",
          "370:           VxeTreeSelect: 'Tree select',",
          "371:           VxeRadioGroup: 'Radio',",
          "372:           VxeCheckboxGroup: 'Checkbox',",
          "373:           VxeUploadFile: 'File',",
          "374:           VxeUploadImage: 'Image'",
          "375:         }",
          "376:       },",
          "377:       widgetProp: {",
          "378:         name: 'Field name',",
          "379:         placeholder: 'Field placeholder',",
          "380:         required: 'Required',",
          "381:         multiple: 'Allow to select multiple',",
          "382:         displaySetting: {",
          "383:           name: 'Display setting',",
          "384:           pc: 'PC',",
          "385:           mobile: 'Mobile',",
          "386:           visible: 'Visible',",
          "387:           hidden: 'Hidden'",
          "388:         },",
          "389:         dataSource: {",
          "390:           name: 'Data source',",
          "391:           defValue: 'Option {0}',",
          "392:           addOption: 'Add option',",
          "393:           batchEditOption: 'Batch edit',",
          "394:           batchEditTip: 'Each row corresponds to an option, supporting direct copying and pasting from tables, Excel, and WPS.',",
          "395:           batchEditSubTip: 'Each row corresponds to an option. If grouped, the sub items can start with spaces or tab keys, and can be directly copied and pasted from tables, Excel, or WPS.',",
          "396:           buildOption: 'Build option'",
          "397:         },",
          "398:         rowProp: {",
          "399:           colSize: 'Number of columns',",
          "400:           col2: 'Two columns',",
          "401:           col3: 'Three columns',",
          "402:           col4: 'Four columns',",
          "403:           col6: 'Six columns',",
          "404:           layout: 'Layout'",
          "405:         },",
          "406:         textProp: {",
          "407:           name: 'Content',",
          "408:           alignTitle: 'Align',",
          "409:           alignLeft: 'Left',",
          "410:           alignCenter: 'Center',",
          "411:           alignRight: 'Right',",
          "412:           colorTitle: 'Color',",
          "413:           sizeTitle: 'Font size',",
          "414:           boldTitle: 'Font bold',",
          "415:           fontNormal: 'Normal',",
          "416:           fontBold: 'Bold'",
          "417:         },",
          "418:         subtableProp: {",
          "419:           seqTitle: 'S/N',",
          "420:           showSeq: 'Display serial number',",
          "421:           showCheckbox: 'Allow multiple selections',",
          "422:           errSubDrag: 'The sub table does not support this control. Please use another control.',",
          "423:           colPlace: 'Drag the control in.'",
          "424:         },",
          "425:         uploadProp: {",
          "426:           limitFileCount: 'File quantity limitation',",
          "427:           limitFileSize: 'File size limitation',",
          "428:           multiFile: 'Allows multiple files',",
          "429:           limitImgCount: 'Image quantity limitation',",
          "430:           limitImgSize: 'Image size limitation',",
          "431:           multiImg: 'Allows multiple images'",
          "432:         }",
          "433:       }",
          "434:     },",
          "435:     listDesign: {",
          "436:       fieldSettingTab: 'Field',",
          "437:       listSettingTab: 'Parameter',",
          "438:       searchTitle: 'Search',",
          "439:       listTitle: 'List',",
          "440:       searchField: 'Search field',",
          "441:       listField: 'List field',",
          "442:       activeBtn: {",
          "443:         ActionButtonUpdate: 'Edit',",
          "444:         ActionButtonDelete: 'Delete'",
          "445:       },",
          "446:       search: {",
          "447:         addBtn: 'Edit',",
          "448:         emptyText: 'No filter condition is configured.',",
          "449:         editPopupTitle: 'Edit search fields'",
          "450:       },",
          "451:       searchPopup: {",
          "452:         colTitle: 'Title',",
          "453:         saveBtn: 'Save'",
          "454:       }",
          "455:     },",
          "456:     text: {",
          "457:       copySuccess: 'Successfully copied to clipboard.',",
          "458:       copyError: 'The current environment does not support this operation.'",
          "459:     },",
          "460:     countdown: {",
          "461:       formats: {",
          "462:         yyyy: 'Year',",
          "463:         MM: 'Moon',",
          "464:         dd: 'Day',",
          "465:         HH: 'Hour',",
          "466:         mm: 'Minute',",
          "467:         ss: 'Second'",
          "",
          "---------------"
        ],
        "packages/locale/lang/es-ES.js||packages/locale/lang/es-ES.js": [
          "File: packages/locale/lang/es-ES.js -> packages/locale/lang/es-ES.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "2:   vxe: {",
          "3:     base: {",
          "4:       pleaseInput: 'Please input',",
          "6:     },",
          "7:     loading: {",
          "8:       text: 'Cargando...'",
          "9:     },",
          "10:     error: {",
          "11:       groupFixed: 'If you use group headers, the freeze columns must be set by group.',",
          "12:       groupMouseRange: 'Los encabezados de agrupaci\u00f3n y \"{0}\" no pueden ser utilizados al mismo tiempo, lo que puede causar errores.',",
          "13:       groupTag: 'El encabezado de columna de agrupaci\u00f3n deber\u00eda utilizar \"{0}\" en lugar de \"{1}\", lo que puede causar errores.',",
          "",
          "[Removed Lines]",
          "5:       pleaseSelect: 'Select'",
          "",
          "[Added Lines]",
          "5:       pleaseSelect: 'Select',",
          "6:       comma: ',',",
          "7:       fullStop: '.'",
          "13:       downErr: 'Download failed.',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "17:       useErr: 'Error al instalar el m\u00f3dulo \"{0}\", posiblemente en el orden equivocado, los m\u00f3dulos dependientes deben ser instalados antes de la tabla.',",
          "18:       barUnableLink: 'La barra de herramientas no puede asociarse con la tabla.',",
          "19:       expandContent: 'La ranura de fila expandible deber\u00eda ser \"contenido\", por favor revise si est\u00e1 correcta.',",
          "20:       reqModule: 'Requerir el m\u00f3dulo \"{0}\".',",
          "21:       reqProp: 'Falta el par\u00e1metro necesario \"{0}\", lo que puede causar errores.',",
          "22:       emptyProp: 'La propiedad \"{0}\" no se permite estar vac\u00eda.',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23:       reqComp: 'Require \"{0}\" component, check whether the install is correct. https://vxeui.com/#/start/useGlobal',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "31:       noTree: 'La estructura de \u00e1rbol no soporta \"{0}\".',",
          "32:       notProp: 'Par\u00e1metros no compatibles \"{0}\"',",
          "33:       checkProp: 'La casilla de verificaci\u00f3n puede detenerse cuando la cantidad de datos es demasiado grande, se recomienda establecer el par\u00e1metro \"{0}\" para aumentar la velocidad de representaci\u00f3n',",
          "35:       delFunc: 'La funci\u00f3n \"{0}\" est\u00e1 en desuso, por favor use \"{1}\".',",
          "36:       delProp: 'La propiedad \"{0}\" est\u00e1 en desuso, por favor use \"{1}\".',",
          "37:       delEvent: 'El evento \"{0}\" est\u00e1 en desuso, por favor use \"{1}\"',",
          "",
          "[Removed Lines]",
          "34:       coverProp: 'The parameter \"{1}\" to \"{0}\" is repeatedly defined. This may cause an error',",
          "",
          "[Added Lines]",
          "38:       coverProp: 'The parameter \"{1}\" to \"{0}\" is repeatedly defined. This may cause an error.',",
          "39:       uniField: 'The field \"{0}\" is repeatedly defined, which may cause an error.',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "45:     table: {",
          "46:       emptyText: 'No hay datos',",
          "47:       allTitle: 'Seleccionar todo / cancelar',",
          "49:       confirmFilter: 'Confirmar',",
          "50:       resetFilter: 'Restablecer',",
          "51:       allFilter: 'Todo',",
          "",
          "[Removed Lines]",
          "48:       seqTitle: 'S/N',",
          "",
          "[Added Lines]",
          "53:       seqTitle: 'N/S',",
          "54:       actionTitle: 'Action',",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "59:       expOriginFilename: 'Exportar_original_{0}',",
          "60:       customTitle: 'Configuraciones de columna',",
          "61:       customAll: 'Todo',",
          "63:       customClose: 'Close',",
          "64:       customCancel: 'Cancel',",
          "66:       maxFixedCol: 'The maximum number of Freeze columns cannot exceed {0}'",
          "67:     },",
          "68:     grid: {",
          "",
          "[Removed Lines]",
          "62:       customConfirm: 'Confirmar',",
          "65:       customRestore: 'Restore default',",
          "",
          "[Added Lines]",
          "68:       customConfirm: 'Confirm',",
          "71:       customRestore: 'Restore',",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "120:         sortHelpTip: 'Click and drag the icon to adjust the order of the columns.',",
          "121:         colTitle: 'Title',",
          "122:         colResizable: 'Column width (px)',",
          "124:         colFixed: 'Freeze columns',",
          "125:         colFixedMax: 'Freeze columns (Max {0})',",
          "126:         fixedLeft: 'Left',",
          "",
          "[Removed Lines]",
          "123:         colVisible: 'Visible',",
          "",
          "[Added Lines]",
          "129:         colVisible: 'Display',",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "189:       expCancel: 'Cancelar'",
          "190:     },",
          "191:     modal: {",
          "193:       zoomOut: 'Reducir',",
          "194:       close: 'Cerrar'",
          "195:     },",
          "196:     form: {",
          "",
          "[Removed Lines]",
          "192:       zoomIn: 'Maximizar',",
          "",
          "[Added Lines]",
          "198:       errTitle: 'Error',",
          "199:       zoomMin: 'Minimize',",
          "200:       zoomIn: 'Maximize',",
          "202:       close: 'Cerrar',",
          "203:       miniMaxSize: 'The number of minimized Windows cannot exceed {0}.'",
          "204:     },",
          "205:     drawer: {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "270:         }",
          "271:       }",
          "272:     },",
          "273:     formDesign: {",
          "274:       widget: {",
          "278:       }",
          "279:     },",
          "",
          "[Removed Lines]",
          "275:         input: 'Input',",
          "276:         textarea: 'Textarea',",
          "277:         select: 'Select'",
          "",
          "[Added Lines]",
          "285:     imagePreview: {",
          "286:       popupTitle: 'Preview',",
          "287:       operBtn: {",
          "288:         zoomOut: 'Reduce',",
          "289:         zoomIn: 'Enlarge',",
          "290:         pctFull: 'Proportional scaling',",
          "291:         pct11: 'Show original size',",
          "292:         rotateLeft: 'Rotate left',",
          "293:         rotateRight: 'Rotate right',",
          "294:         print: 'Click to print',",
          "295:         download: 'Click to download'",
          "296:       }",
          "297:     },",
          "298:     upload: {",
          "299:       fileBtnText: 'Click or drag',",
          "300:       imgBtnText: 'Click or drag',",
          "301:       dragPlaceholder: 'Please drag and drop the file into this area to upload it.',",
          "302:       imgSizeHint: 'Single {0}',",
          "303:       imgCountHint: 'Up to {0}',",
          "304:       fileTypeHint: 'Support {0} file types',",
          "305:       fileSizeHint: 'Single file size does not exceed {0}',",
          "306:       fileCountHint: 'Up to {0} file can be uploaded',",
          "307:       overCountErr: 'You can only choose {0} file!',",
          "308:       overCountExtraErr: 'It has exceeded the maximum number {0}, and more than {0} file will be ignored!\u8d85\u51fa\u6700\u5927\u6570\u91cf 1 \u4e2a\uff0c\u8d85\u51fa\u7684 1 \u4e2a\u6587\u4ef6\u5c06\u88ab\u5ffd\u7565\uff01',",
          "309:       overSizeErr: 'The size of the file is not more than {0}}!',",
          "310:       reUpload: 'Re upload',",
          "311:       uploadProgress: 'Uploading {0}%',",
          "312:       uploadErr: 'Fail to upload',",
          "313:       uploadSuccess: 'Successfully upload',",
          "314:       moreBtnText: 'More ({0})',",
          "315:       viewItemTitle: 'click to view'",
          "316:     },",
          "318:       formName: 'Form name',",
          "319:       defFormTitle: 'Unnamed form',",
          "320:       widgetPropTab: 'Field property',",
          "321:       widgetFormTab: 'Form property',",
          "322:       error: {",
          "323:         wdFormUni: '\u8be5\u7c7b\u578b\u7684\u63a7\u4ef6\u5728\u8868\u5355\u4e2d\u53ea\u5141\u8bb8\u6dfb\u52a0\u4e00\u4e2a',",
          "324:         wdSubUni: '\u8be5\u7c7b\u578b\u7684\u63a7\u4ef6\u5728\u5b50\u8868\u4e2d\u53ea\u5141\u8bb8\u6dfb\u52a0\u4e00\u4e2a'",
          "325:       },",
          "326:       styleSetting: {",
          "327:         btn: 'Style setting',",
          "328:         title: 'Form style setting',",
          "329:         layoutTitle: 'Field layout',",
          "330:         verticalLayout: 'Vertical layout',",
          "331:         horizontalLayout: 'Horizontal layout',",
          "332:         styleTitle: 'Title style',",
          "333:         boldTitle: 'Bold title',",
          "334:         fontBold: 'Bold',",
          "335:         fontNormal: 'Normal',",
          "336:         colonTitle: 'Display colon',",
          "337:         colonVisible: 'Visible',",
          "338:         colonHidden: 'Hidden',",
          "339:         alignTitle: 'Title align',",
          "340:         widthTitle: 'Title width',",
          "341:         alignLeft: 'Left',",
          "342:         alignRight: 'Right',",
          "343:         unitPx: 'Px',",
          "344:         unitPct: 'Pct'",
          "345:       },",
          "347:         group: {",
          "348:           base: 'Base control',",
          "349:           layout: 'Layout control',",
          "350:           system: 'System control',",
          "351:           module: 'Module control',",
          "352:           chart: 'Chart control',",
          "353:           advanced: 'Advanced control'",
          "354:         },",
          "355:         copyTitle: 'Copy_{0}',",
          "356:         component: {",
          "357:           input: 'Input',",
          "358:           textarea: 'Textarea',",
          "359:           select: 'Select',",
          "360:           row: 'Row/column',",
          "361:           title: 'Title',",
          "362:           text: 'Text',",
          "363:           subtable: 'Subtable',",
          "364:           VxeSwitch: 'Yes/no',",
          "365:           VxeInput: 'Input',",
          "366:           VxeNumberInput: 'Number',",
          "367:           VxeDatePicker: 'Date',",
          "368:           VxeTextarea: 'Textarea',",
          "369:           VxeSelect: 'Select',",
          "370:           VxeTreeSelect: 'Tree select',",
          "371:           VxeRadioGroup: 'Radio',",
          "372:           VxeCheckboxGroup: 'Checkbox',",
          "373:           VxeUploadFile: 'File',",
          "374:           VxeUploadImage: 'Image'",
          "375:         }",
          "376:       },",
          "377:       widgetProp: {",
          "378:         name: 'Field name',",
          "379:         placeholder: 'Field placeholder',",
          "380:         required: 'Required',",
          "381:         multiple: 'Allow to select multiple',",
          "382:         displaySetting: {",
          "383:           name: 'Display setting',",
          "384:           pc: 'PC',",
          "385:           mobile: 'Mobile',",
          "386:           visible: 'Visible',",
          "387:           hidden: 'Hidden'",
          "388:         },",
          "389:         dataSource: {",
          "390:           name: 'Data source',",
          "391:           defValue: 'Option {0}',",
          "392:           addOption: 'Add option',",
          "393:           batchEditOption: 'Batch edit',",
          "394:           batchEditTip: 'Each row corresponds to an option, supporting direct copying and pasting from tables, Excel, and WPS.',",
          "395:           batchEditSubTip: 'Each row corresponds to an option. If grouped, the sub items can start with spaces or tab keys, and can be directly copied and pasted from tables, Excel, or WPS.',",
          "396:           buildOption: 'Build option'",
          "397:         },",
          "398:         rowProp: {",
          "399:           colSize: 'Number of columns',",
          "400:           col2: 'Two columns',",
          "401:           col3: 'Three columns',",
          "402:           col4: 'Four columns',",
          "403:           col6: 'Six columns',",
          "404:           layout: 'Layout'",
          "405:         },",
          "406:         textProp: {",
          "407:           name: 'Content',",
          "408:           alignTitle: 'Align',",
          "409:           alignLeft: 'Left',",
          "410:           alignCenter: 'Center',",
          "411:           alignRight: 'Right',",
          "412:           colorTitle: 'Color',",
          "413:           sizeTitle: 'Font size',",
          "414:           boldTitle: 'Font bold',",
          "415:           fontNormal: 'Normal',",
          "416:           fontBold: 'Bold'",
          "417:         },",
          "418:         subtableProp: {",
          "419:           seqTitle: 'S/N',",
          "420:           showSeq: 'Display serial number',",
          "421:           showCheckbox: 'Allow multiple selections',",
          "422:           errSubDrag: 'The sub table does not support this control. Please use another control.',",
          "423:           colPlace: 'Drag the control in.'",
          "424:         },",
          "425:         uploadProp: {",
          "426:           limitFileCount: 'File quantity limitation',",
          "427:           limitFileSize: 'File size limitation',",
          "428:           multiFile: 'Allows multiple files',",
          "429:           limitImgCount: 'Image quantity limitation',",
          "430:           limitImgSize: 'Image size limitation',",
          "431:           multiImg: 'Allows multiple images'",
          "432:         }",
          "433:       }",
          "434:     },",
          "435:     listDesign: {",
          "436:       fieldSettingTab: 'Field',",
          "437:       listSettingTab: 'Parameter',",
          "438:       searchTitle: 'Search',",
          "439:       listTitle: 'List',",
          "440:       searchField: 'Search field',",
          "441:       listField: 'List field',",
          "442:       activeBtn: {",
          "443:         ActionButtonUpdate: 'Edit',",
          "444:         ActionButtonDelete: 'Delete'",
          "445:       },",
          "446:       search: {",
          "447:         addBtn: 'Edit',",
          "448:         emptyText: 'No filter condition is configured.',",
          "449:         editPopupTitle: 'Edit search fields'",
          "450:       },",
          "451:       searchPopup: {",
          "452:         colTitle: 'Title',",
          "453:         saveBtn: 'Save'",
          "454:       }",
          "455:     },",
          "456:     text: {",
          "457:       copySuccess: 'Successfully copied to clipboard.',",
          "458:       copyError: 'The current environment does not support this operation.'",
          "459:     },",
          "460:     countdown: {",
          "461:       formats: {",
          "462:         yyyy: 'Year',",
          "463:         MM: 'Moon',",
          "464:         dd: 'Day',",
          "465:         HH: 'Hour',",
          "466:         mm: 'Minute',",
          "467:         ss: 'Second'",
          "",
          "---------------"
        ],
        "packages/locale/lang/ja-JP.js||packages/locale/lang/ja-JP.js": [
          "File: packages/locale/lang/ja-JP.js -> packages/locale/lang/ja-JP.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: export default {",
          "2:   vxe: {",
          "3:     base: {",
          "6:     },",
          "7:     loading: {",
          "8:       text: 'Loading...'",
          "9:     },",
          "10:     error: {",
          "14:       scrollErrProp: '\u4eee\u60f3\u30b9\u30af\u30ed\u30fc\u30eb\u306f\u3053\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f7f\u3048\u307e\u305b\u3093\uff1a \"{0}\"',",
          "15:       errConflicts: '\u30d1\u30e9\u30e1\u30fc\u30bf \"{0}\" \u3068 \"{1}\" \u306f\u540c\u6642\u306b\u4f7f\u3048\u307e\u305b\u3093',",
          "16:       unableInsert: '\u6307\u5b9a\u3055\u308c\u305f\u4f4d\u7f6e\u306b\u633f\u5165\u3067\u304d\u306a\u3044',",
          "17:       useErr: '\"{0}\" \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u969b\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u3001\u9806\u5e8f\u304c\u6b63\u3057\u304f\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\u4f9d\u5b58\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u306fTable\u306e\u524d\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b',",
          "18:       barUnableLink: '\u30c4\u30fc\u30eb\u30d0\u30fc\u306f\u30d5\u30a9\u30fc\u30e0\u3092\u95a2\u9023\u4ed8\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044',",
          "19:       expandContent: '\u62e1\u5f35\u884c\u30b9\u30ed\u30c3\u30c8\u306f \"content\" \u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044',",
          "20:       reqModule: '\"{0}\" \u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u5fc5\u8981\u3067\u3059',",
          "21:       reqProp: '\u5fc5\u8981\u306a \"{0}\" \u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u304c\u6b20\u843d\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059',",
          "22:       emptyProp: '\"{0}\" \u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u7a7a\u767d\u304c\u8a31\u53ef\u3055\u308c\u3066\u3044\u307e\u305b\u3093',",
          "",
          "[Removed Lines]",
          "4:       pleaseInput: 'Please input',",
          "5:       pleaseSelect: 'Select'",
          "11:       groupFixed: '\u30b0\u30eb\u30fc\u30d7\u5316\u30d8\u30c3\u30c0\u30fc\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u3001\u56fa\u5b9a\u5217\u306f\u30b0\u30eb\u30fc\u30d7\u3067\u8a2d\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093',",
          "12:       groupMouseRange: '\u30b0\u30eb\u30fc\u30d7\u5316\u30d8\u30c3\u30c0\u30fc\u3068\u300c{0}\u300d\u306f\u540c\u6642\u306b\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002\u3053\u308c\u306b\u3088\u308a\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059',",
          "13:       groupTag: '\u30b0\u30eb\u30fc\u30d7\u5316\u30d8\u30c3\u30c0\u30fc\u306f \"{0}\" \u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002 \"{1}\" \u306f\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059',",
          "",
          "[Added Lines]",
          "4:       pleaseInput: '\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044',",
          "5:       pleaseSelect: '\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044',",
          "6:       comma: ',',",
          "7:       fullStop: '.'",
          "13:       downErr: '\u4e0b\u8f7d\u5931\u8d25',",
          "14:       groupFixed: '\u30d8\u30c3\u30c0\u30fc\u7d50\u5408\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u3001\u56fa\u5b9a\u5217\u306f\u30b0\u30eb\u30fc\u30d7\u3067\u8a2d\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093',",
          "15:       groupMouseRange: '\u30d8\u30c3\u30c0\u30fc\u7d50\u5408\u3068\u300c{0}\u300d\u306f\u540c\u6642\u306b\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002\u3053\u308c\u306b\u3088\u308a\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059',",
          "16:       groupTag: '\u30d8\u30c3\u30c0\u30fc\u7d50\u5408\u306f \"{0}\" \u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002 \"{1}\" \u306f\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059',",
          "23:       reqComp: 'Require \"{0}\" component, check whether the install is correct. https://vxeui.com/#/start/useGlobal',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32:       notProp: '\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u30d1\u30e9\u30e1\u30fc\u30bf \"{0}\"',",
          "33:       checkProp: '\u30d1\u30d5\u30de\u30f3\u30b9\u4f4e\u4e0b\u306b\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u30d1\u30e9\u30e1\u30fc\u30bf \"{0}\" \u306e\u5024\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044',",
          "34:       coverProp: 'The parameter \"{1}\" to \"{0}\" is repeatedly defined. This may cause an error',",
          "35:       delFunc: '\"{0}\" function\u304c\u975e\u63a8\u5968\u3067\u3059\u3002\"{1}\"\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044',",
          "36:       delProp: '\"{0}\" property\u304c\u975e\u63a8\u5968\u3067\u3059\u3002\"{1}\"\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044',",
          "37:       delEvent: '\u30a4\u30d9\u30f3\u30c8 \"{0}\" \u304c\u5ec3\u6b62\u3055\u308c\u307e\u3057\u305f\u3002 \"{1}\" \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39:       uniField: '\u5b57\u6bb5\u540d \"{0}\" \u91cd\u590d\u5b9a\u4e49\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "45:     table: {",
          "46:       emptyText: '\u30c7\u30fc\u30bf\u304c\u3042\u308a\u307e\u305b\u3093',",
          "47:       allTitle: '\u5168\u3066\u9078\u629e/\u53d6\u6d88',",
          "49:       confirmFilter: 'OK',",
          "50:       resetFilter: '\u30ea\u30bb\u30c3\u30c8',",
          "51:       allFilter: '\u5168\u3066',",
          "",
          "[Removed Lines]",
          "48:       seqTitle: 'S/N',",
          "",
          "[Added Lines]",
          "53:       seqTitle: 'N/S',",
          "54:       actionTitle: 'Action',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "62:       customConfirm: 'OK',",
          "63:       customClose: '\u5173\u95ed',",
          "64:       customCancel: 'Cancel',",
          "66:       maxFixedCol: '\u6700\u5927\u56fa\u5b9a\u5217\u6570\u304c {0} \u3067\u3059\u3002'",
          "67:     },",
          "68:     grid: {",
          "70:       deleteSelectRecord: '\u30ec\u30b3\u30fc\u30c9\u3092\u524a\u9664\u3057\u3066\u3082\u3088\u308d\u3057\u3044\u3067\u3059\u304b\uff1f',",
          "71:       removeSelectRecord: '\u30ec\u30b3\u30fc\u30c9\u3092\u524a\u9664\u3057\u3066\u3082\u3088\u308d\u3057\u3044\u3067\u3059\u304b\uff1f',",
          "72:       dataUnchanged: '\u30c7\u30fc\u30bf\u304c\u5909\u66f4\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f',",
          "",
          "[Removed Lines]",
          "65:       customRestore: 'Restore default',",
          "69:       selectOneRecord: '1\u3064\u4ee5\u4e0a\u306e\u306e\u30ec\u30b3\u30fc\u30c9\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044',",
          "",
          "[Added Lines]",
          "71:       customRestore: '\u30ea\u30bb\u30c3\u30c8',",
          "75:       selectOneRecord: '1\u3064\u4ee5\u4e0a\u306e\u30ec\u30b3\u30fc\u30c9\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044',",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "99:       endPageTitle: '\u6700\u5f8c\u30da\u30fc\u30b8'",
          "100:     },",
          "101:     alert: {",
          "103:     },",
          "104:     button: {",
          "105:       confirm: 'OK',",
          "",
          "[Removed Lines]",
          "102:       title: 'System messages'",
          "",
          "[Added Lines]",
          "108:       title: '\u78ba\u8a8d'",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "117:       cstmDragTarget: '\u79fb\u52d5\u30bf\u30fc\u30b2\u30c3\u30c8: {0}',",
          "118:       setting: {",
          "119:         colSort: '\u30bd\u30fc\u30c8',",
          "121:         colTitle: '\u30bf\u30a4\u30c8\u30eb',",
          "126:         fixedLeft: '\u5de6\u5074',",
          "127:         fixedUnset: '\u6307\u5b9a\u3057\u306a\u3044',",
          "128:         fixedRight: '\u53f3\u5074'",
          "",
          "[Removed Lines]",
          "120:         sortHelpTip: 'Click and drag the icon to adjust the order of the columns.',",
          "122:         colResizable: 'Column width (px)',",
          "123:         colVisible: '\u8868\u793a',",
          "124:         colFixed: '\u51bb\u7ed3\u5217',",
          "125:         colFixedMax: '\u51bb\u7ed3\u5217\uff08\u6700\u591a {0} \u5217\uff09',",
          "",
          "[Added Lines]",
          "126:         sortHelpTip: '\u30c9\u30e9\u30c3\u30b0\u3057\u3066\u5217\u3092\u4e26\u3079\u66ff\u3048\u307e\u3059',",
          "128:         colResizable: '\u5217\u306e\u5e45 (px)',",
          "129:         colVisible: '\u8868\u793a\u3059\u308b',",
          "130:         colFixed: '\u5217\u56fa\u5b9a',",
          "131:         colFixedMax: '\u5217\u56fa\u5b9a\uff08\u6700\u5927 {0} \u5217\uff09',",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "130:     },",
          "131:     import: {",
          "132:       modes: {",
          "137:       },",
          "138:       impTitle: '\u30c7\u30fc\u30bf\u30a4\u30f3\u30dd\u30fc\u30c8',",
          "139:       impFile: '\u30d5\u30a1\u30a4\u30eb\u540d',",
          "140:       impSelect: '\u30d5\u30a1\u30a4\u30eb\u9078\u629e',",
          "141:       impType: '\u30d5\u30a1\u30a4\u30eb\u306e\u7a2e\u985e',",
          "142:       impOpts: '\u30d1\u30e9\u30e1\u30fc\u30bf\u6307\u5b9a',",
          "144:       impConfirm: '\u30a4\u30f3\u30dd\u30fc\u30c8',",
          "145:       impCancel: '\u30ad\u30e3\u30f3\u30bb\u30eb'",
          "146:     },",
          "",
          "[Removed Lines]",
          "133:         covering: 'Overwrite mode (directly overwrite table data)',",
          "134:         insert: 'Bottom append (appends new data to the bottom of the table)',",
          "135:         insertTop: 'Top append (appends new data to the top of the table)',",
          "136:         insertBottom: 'Bottom append (appends new data to the bottom of the table)'",
          "143:       impMode: 'Import mode',",
          "",
          "[Added Lines]",
          "139:         covering: '\u4e0a\u66f8\u304d\u30e2\u30fc\u30c9',",
          "140:         insert: '\u8ffd\u52a0\u30e2\u30fc\u30c9\uff08\u6700\u5f8c\u884c\u306b\u8ffd\u52a0\uff09',",
          "141:         insertTop: '\u8ffd\u52a0\u30e2\u30fc\u30c9\uff08\u5148\u982d\u884c\u306b\u8ffd\u52a0\uff09',",
          "142:         insertBottom: '\u8ffd\u52a0\u30e2\u30fc\u30c9\uff08\u6700\u5f8c\u884c\u306b\u8ffd\u52a0\uff09'",
          "149:       impMode: '\u30a4\u30f3\u30dd\u30fc\u30c8\u30e2\u30fc\u30c9',",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "189:       expCancel: '\u30ad\u30e3\u30f3\u30bb\u30eb'",
          "190:     },",
          "191:     modal: {",
          "192:       zoomIn: '\u6700\u5927\u5316',",
          "193:       zoomOut: '\u7e2e\u5c0f',",
          "194:       close: '\u9589\u3058\u308b'",
          "195:     },",
          "196:     form: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "198:       errTitle: '\u30a8\u30e9\u30fc',",
          "199:       zoomMin: '\u6700\u5c0f\u5316',",
          "202:       close: '\u9589\u3058\u308b',",
          "203:       miniMaxSize: 'The number of minimized Windows cannot exceed {0}.'",
          "204:     },",
          "205:     drawer: {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "270:         }",
          "271:       }",
          "272:     },",
          "273:     formDesign: {",
          "274:       widget: {",
          "278:       }",
          "279:     },",
          "",
          "[Removed Lines]",
          "275:         input: 'Input',",
          "276:         textarea: 'Textarea',",
          "277:         select: 'Select'",
          "",
          "[Added Lines]",
          "285:     imagePreview: {",
          "286:       popupTitle: 'Preview',",
          "287:       operBtn: {",
          "288:         zoomOut: 'Reduce',",
          "289:         zoomIn: 'Enlarge',",
          "290:         pctFull: 'Proportional scaling',",
          "291:         pct11: 'Show original size',",
          "292:         rotateLeft: 'Rotate left',",
          "293:         rotateRight: 'Rotate right',",
          "294:         print: 'Click to print',",
          "295:         download: 'Click to download'",
          "296:       }",
          "297:     },",
          "298:     upload: {",
          "299:       fileBtnText: 'Click or drag',",
          "300:       imgBtnText: 'Click or drag',",
          "301:       dragPlaceholder: 'Please drag and drop the file into this area to upload it.',",
          "302:       imgSizeHint: 'Single {0}',",
          "303:       imgCountHint: 'Up to {0}',",
          "304:       fileTypeHint: 'Support {0} file types',",
          "305:       fileSizeHint: 'Single file size does not exceed {0}',",
          "306:       fileCountHint: 'Up to {0} file can be uploaded',",
          "307:       overCountErr: 'You can only choose {0} file!',",
          "308:       overCountExtraErr: 'It has exceeded the maximum number {0}, and more than {0} file will be ignored!\u8d85\u51fa\u6700\u5927\u6570\u91cf 1 \u4e2a\uff0c\u8d85\u51fa\u7684 1 \u4e2a\u6587\u4ef6\u5c06\u88ab\u5ffd\u7565\uff01',",
          "309:       overSizeErr: 'The size of the file is not more than {0}}!',",
          "310:       reUpload: 'Re upload',",
          "311:       uploadProgress: 'Uploading {0}%',",
          "312:       uploadErr: 'Fail to upload',",
          "313:       uploadSuccess: 'Successfully upload',",
          "314:       moreBtnText: 'More ({0})',",
          "315:       viewItemTitle: 'click to view'",
          "316:     },",
          "318:       formName: 'Form name',",
          "319:       defFormTitle: 'Unnamed form',",
          "320:       widgetPropTab: 'Field property',",
          "321:       widgetFormTab: 'Form property',",
          "322:       error: {",
          "323:         wdFormUni: '\u8be5\u7c7b\u578b\u7684\u63a7\u4ef6\u5728\u8868\u5355\u4e2d\u53ea\u5141\u8bb8\u6dfb\u52a0\u4e00\u4e2a',",
          "324:         wdSubUni: '\u8be5\u7c7b\u578b\u7684\u63a7\u4ef6\u5728\u5b50\u8868\u4e2d\u53ea\u5141\u8bb8\u6dfb\u52a0\u4e00\u4e2a'",
          "325:       },",
          "326:       styleSetting: {",
          "327:         btn: 'Style setting',",
          "328:         title: 'Form style setting',",
          "329:         layoutTitle: 'Field layout',",
          "330:         verticalLayout: 'Vertical layout',",
          "331:         horizontalLayout: 'Horizontal layout',",
          "332:         styleTitle: 'Title style',",
          "333:         boldTitle: 'Bold title',",
          "334:         fontBold: 'Bold',",
          "335:         fontNormal: 'Normal',",
          "336:         colonTitle: 'Display colon',",
          "337:         colonVisible: 'Visible',",
          "338:         colonHidden: 'Hidden',",
          "339:         alignTitle: 'Title align',",
          "340:         widthTitle: 'Title width',",
          "341:         alignLeft: 'Left',",
          "342:         alignRight: 'Right',",
          "343:         unitPx: 'Px',",
          "344:         unitPct: 'Pct'",
          "345:       },",
          "347:         group: {",
          "348:           base: 'Base control',",
          "349:           layout: 'Layout control',",
          "350:           system: 'System control',",
          "351:           module: 'Module control',",
          "352:           chart: 'Chart control',",
          "353:           advanced: 'Advanced control'",
          "354:         },",
          "355:         copyTitle: 'Copy_{0}',",
          "356:         component: {",
          "357:           input: 'Input',",
          "358:           textarea: 'Textarea',",
          "359:           select: 'Select',",
          "360:           row: 'Row/column',",
          "361:           title: 'Title',",
          "362:           text: 'Text',",
          "363:           subtable: 'Subtable',",
          "364:           VxeSwitch: 'Yes/no',",
          "365:           VxeInput: 'Input',",
          "366:           VxeNumberInput: 'Number',",
          "367:           VxeDatePicker: 'Date',",
          "368:           VxeTextarea: 'Textarea',",
          "369:           VxeSelect: 'Select',",
          "370:           VxeTreeSelect: 'Tree select',",
          "371:           VxeRadioGroup: 'Radio',",
          "372:           VxeCheckboxGroup: 'Checkbox',",
          "373:           VxeUploadFile: 'File',",
          "374:           VxeUploadImage: 'Image'",
          "375:         }",
          "376:       },",
          "377:       widgetProp: {",
          "378:         name: 'Field name',",
          "379:         placeholder: 'Field placeholder',",
          "380:         required: 'Required',",
          "381:         multiple: 'Allow to select multiple',",
          "382:         displaySetting: {",
          "383:           name: 'Display setting',",
          "384:           pc: 'PC',",
          "385:           mobile: 'Mobile',",
          "386:           visible: 'Visible',",
          "387:           hidden: 'Hidden'",
          "388:         },",
          "389:         dataSource: {",
          "390:           name: 'Data source',",
          "391:           defValue: 'Option {0}',",
          "392:           addOption: 'Add option',",
          "393:           batchEditOption: 'Batch edit',",
          "394:           batchEditTip: 'Each row corresponds to an option, supporting direct copying and pasting from tables, Excel, and WPS.',",
          "395:           batchEditSubTip: 'Each row corresponds to an option. If grouped, the sub items can start with spaces or tab keys, and can be directly copied and pasted from tables, Excel, or WPS.',",
          "396:           buildOption: 'Build option'",
          "397:         },",
          "398:         rowProp: {",
          "399:           colSize: 'Number of columns',",
          "400:           col2: 'Two columns',",
          "401:           col3: 'Three columns',",
          "402:           col4: 'Four columns',",
          "403:           col6: 'Six columns',",
          "404:           layout: 'Layout'",
          "405:         },",
          "406:         textProp: {",
          "407:           name: 'Content',",
          "408:           alignTitle: 'Align',",
          "409:           alignLeft: 'Left',",
          "410:           alignCenter: 'Center',",
          "411:           alignRight: 'Right',",
          "412:           colorTitle: 'Color',",
          "413:           sizeTitle: 'Font size',",
          "414:           boldTitle: 'Font bold',",
          "415:           fontNormal: 'Normal',",
          "416:           fontBold: 'Bold'",
          "417:         },",
          "418:         subtableProp: {",
          "419:           seqTitle: 'S/N',",
          "420:           showSeq: 'Display serial number',",
          "421:           showCheckbox: 'Allow multiple selections',",
          "422:           errSubDrag: 'The sub table does not support this control. Please use another control.',",
          "423:           colPlace: '\u5c06\u63a7\u4ef6\u62d6\u62fd\u8fdb\u6765'",
          "424:         },",
          "425:         uploadProp: {",
          "426:           limitFileCount: 'File quantity limitation',",
          "427:           limitFileSize: 'File size limitation',",
          "428:           multiFile: 'Allows multiple files',",
          "429:           limitImgCount: 'Image quantity limitation',",
          "430:           limitImgSize: 'Image size limitation',",
          "431:           multiImg: 'Allows multiple images'",
          "432:         }",
          "433:       }",
          "434:     },",
          "435:     listDesign: {",
          "436:       fieldSettingTab: 'Field',",
          "437:       listSettingTab: 'Parameter',",
          "438:       searchTitle: 'Search',",
          "439:       listTitle: 'List',",
          "440:       searchField: 'Search field',",
          "441:       listField: 'List field',",
          "442:       activeBtn: {",
          "443:         ActionButtonUpdate: 'Edit',",
          "444:         ActionButtonDelete: 'Delete'",
          "445:       },",
          "446:       search: {",
          "447:         addBtn: 'Edit',",
          "448:         emptyText: 'No filter condition is configured.',",
          "449:         editPopupTitle: '\u7f16\u8f91\u67e5\u8be2\u5b57\u6bb5'",
          "450:       },",
          "451:       searchPopup: {",
          "452:         colTitle: '\u6807\u9898',",
          "453:         saveBtn: '\u4fdd\u5b58'",
          "454:       }",
          "455:     },",
          "456:     text: {",
          "457:       copySuccess: 'Successfully copied to clipboard.',",
          "458:       copyError: 'The current environment does not support this operation.'",
          "459:     },",
          "460:     countdown: {",
          "461:       formats: {",
          "462:         yyyy: '\u5e74',",
          "463:         MM: '\u6708',",
          "464:         dd: '\u5929',",
          "465:         HH: '\u65f6',",
          "466:         mm: '\u5206',",
          "467:         ss: '\u79d2'",
          "",
          "---------------"
        ],
        "packages/locale/lang/pt-BR.js||packages/locale/lang/pt-BR.js": [
          "File: packages/locale/lang/pt-BR.js -> packages/locale/lang/pt-BR.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "2:   vxe: {",
          "3:     base: {",
          "4:       pleaseInput: 'Por favor, insira',",
          "6:     },",
          "7:     loading: {",
          "8:       text: 'Carregando...'",
          "9:     },",
          "10:     error: {",
          "11:       groupFixed: 'If you use group headers, the freeze columns must be set by group.',",
          "12:       groupMouseRange: 'Agrupar cabe\u00e7alhos e \"{0}\" n\u00e3o podem ser usados ao mesmo tempo, o que pode causar erros.',",
          "13:       groupTag: 'O cabe\u00e7alho da coluna de agrupamento deve usar \"{0}\" em vez de \"{1}\", o que pode causar erros.',",
          "",
          "[Removed Lines]",
          "5:       pleaseSelect: 'Selecione'",
          "",
          "[Added Lines]",
          "5:       pleaseSelect: 'Selecione',",
          "6:       comma: ',',",
          "7:       fullStop: '.'",
          "13:       downErr: '\u4e0b\u8f7d\u5931\u8d25',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "17:       useErr: 'Erro ao instalar o m\u00f3dulo \"{0}\", possivelmente na ordem errada, os m\u00f3dulos dependentes precisam ser instalados antes da Tabela.',",
          "18:       barUnableLink: 'A barra de ferramentas n\u00e3o pode ser associada \u00e0 tabela.',",
          "19:       expandContent: 'O slot de linha expandida deve ser \"content\", verifique se est\u00e1 correto.',",
          "20:       reqModule: 'requerir o m\u00f3dulo \"{0}\".',",
          "21:       reqProp: 'Faltando o par\u00e2metro necess\u00e1rio \"{0}\", o que pode causar um erro.',",
          "22:       emptyProp: 'A propriedade \"{0}\" n\u00e3o pode estar vazia.',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23:       reqComp: 'Require \"{0}\" component, check whether the install is correct. https://vxeui.com/#/start/useGlobal',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "32:       notProp: 'Par\u00e2metros n\u00e3o suportados \"{0}\"',",
          "33:       checkProp: 'A caixa de sele\u00e7\u00e3o pode travar quando a quantidade de dados \u00e9 muito grande, \u00e9 recomendado definir o par\u00e2metro \"{0}\" para aumentar a velocidade de renderiza\u00e7\u00e3o ',",
          "34:       coverProp: 'The parameter \"{1}\" to \"{0}\" is repeatedly defined. This may cause an error',",
          "35:       delFunc: 'A fun\u00e7\u00e3o \"{0}\" est\u00e1 obsoleta, por favor, use \"{1}\".',",
          "36:       delProp: 'A propriedade \"{0}\" est\u00e1 obsoleta, por favor, use \"{1}\".',",
          "37:       delEvent: 'O evento \"{0}\" est\u00e1 obsoleto, por favor, use \"{1}\".',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39:       uniField: '\u5b57\u6bb5\u540d \"{0}\" \u91cd\u590d\u5b9a\u4e49\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "45:     table: {",
          "46:       emptyText: 'Sem dados',",
          "47:       allTitle: 'Selecionar todos / cancelar',",
          "49:       confirmFilter: 'Confirmar',",
          "50:       resetFilter: 'Redefinir',",
          "51:       allFilter: 'Todos',",
          "",
          "[Removed Lines]",
          "48:       seqTitle: 'S/N',",
          "",
          "[Added Lines]",
          "53:       seqTitle: 'N/S',",
          "54:       actionTitle: 'Action',",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "59:       expOriginFilename: 'Exportar_original_{0}',",
          "60:       customTitle: 'Configura\u00e7\u00f5es de coluna',",
          "61:       customAll: 'Todos',",
          "63:       customClose: '\u5173\u95ed',",
          "64:       customCancel: 'Cancel',",
          "66:       maxFixedCol: 'The maximum number of Freeze columns cannot exceed {0}'",
          "67:     },",
          "68:     grid: {",
          "",
          "[Removed Lines]",
          "62:       customConfirm: 'Confirmar',",
          "65:       customRestore: 'Restore default',",
          "",
          "[Added Lines]",
          "68:       customConfirm: 'Confirm',",
          "71:       customRestore: 'Restore',",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "120:         sortHelpTip: 'Click and drag the icon to adjust the order of the columns.',",
          "121:         colTitle: 'Title',",
          "122:         colResizable: 'Column width (px)',",
          "124:         colFixed: 'Freeze columns',",
          "125:         colFixedMax: 'Freeze columns (Max {0})',",
          "126:         fixedLeft: 'Left',",
          "",
          "[Removed Lines]",
          "123:         colVisible: 'Visible',",
          "",
          "[Added Lines]",
          "129:         colVisible: 'Display',",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "189:       expCancel: 'Cancelar'",
          "190:     },",
          "191:     modal: {",
          "193:       zoomOut: 'Restaurar',",
          "194:       close: 'Fechar'",
          "195:     },",
          "196:     form: {",
          "",
          "[Removed Lines]",
          "192:       zoomIn: 'Maximizar',",
          "",
          "[Added Lines]",
          "198:       errTitle: 'Error',",
          "199:       zoomMin: 'Minimize',",
          "200:       zoomIn: 'Maximize',",
          "202:       close: 'Fechar',",
          "203:       miniMaxSize: 'The number of minimized Windows cannot exceed {0}.'",
          "204:     },",
          "205:     drawer: {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "270:         }",
          "271:       }",
          "272:     },",
          "273:     formDesign: {",
          "274:       widget: {",
          "278:       }",
          "279:     },",
          "",
          "[Removed Lines]",
          "275:         input: 'Input',",
          "276:         textarea: 'Textarea',",
          "277:         select: 'Select'",
          "",
          "[Added Lines]",
          "285:     imagePreview: {",
          "286:       popupTitle: 'Preview',",
          "287:       operBtn: {",
          "288:         zoomOut: 'Reduce',",
          "289:         zoomIn: 'Enlarge',",
          "290:         pctFull: 'Proportional scaling',",
          "291:         pct11: 'Show original size',",
          "292:         rotateLeft: 'Rotate left',",
          "293:         rotateRight: 'Rotate right',",
          "294:         print: 'Click to print',",
          "295:         download: 'Click to download'",
          "296:       }",
          "297:     },",
          "298:     upload: {",
          "299:       fileBtnText: 'Click or drag',",
          "300:       imgBtnText: 'Click or drag',",
          "301:       dragPlaceholder: 'Please drag and drop the file into this area to upload it.',",
          "302:       imgSizeHint: 'Single {0}',",
          "303:       imgCountHint: 'Up to {0}',",
          "304:       fileTypeHint: 'Support {0} file types',",
          "305:       fileSizeHint: 'Single file size does not exceed {0}',",
          "306:       fileCountHint: 'Up to {0} file can be uploaded',",
          "307:       overCountErr: 'You can only choose {0} file!',",
          "308:       overCountExtraErr: 'It has exceeded the maximum number {0}, and more than {0} file will be ignored!\u8d85\u51fa\u6700\u5927\u6570\u91cf 1 \u4e2a\uff0c\u8d85\u51fa\u7684 1 \u4e2a\u6587\u4ef6\u5c06\u88ab\u5ffd\u7565\uff01',",
          "309:       overSizeErr: 'The size of the file is not more than {0}}!',",
          "310:       reUpload: 'Re upload',",
          "311:       uploadProgress: 'Uploading {0}%',",
          "312:       uploadErr: 'Fail to upload',",
          "313:       uploadSuccess: 'Successfully upload',",
          "314:       moreBtnText: 'More ({0})',",
          "315:       viewItemTitle: 'click to view'",
          "316:     },",
          "318:       formName: 'Form name',",
          "319:       defFormTitle: 'Unnamed form',",
          "320:       widgetPropTab: 'Field property',",
          "321:       widgetFormTab: 'Form property',",
          "322:       error: {",
          "323:         wdFormUni: '\u8be5\u7c7b\u578b\u7684\u63a7\u4ef6\u5728\u8868\u5355\u4e2d\u53ea\u5141\u8bb8\u6dfb\u52a0\u4e00\u4e2a',",
          "324:         wdSubUni: '\u8be5\u7c7b\u578b\u7684\u63a7\u4ef6\u5728\u5b50\u8868\u4e2d\u53ea\u5141\u8bb8\u6dfb\u52a0\u4e00\u4e2a'",
          "325:       },",
          "326:       styleSetting: {",
          "327:         btn: 'Style setting',",
          "328:         title: 'Form style setting',",
          "329:         layoutTitle: 'Field layout',",
          "330:         verticalLayout: 'Vertical layout',",
          "331:         horizontalLayout: 'Horizontal layout',",
          "332:         styleTitle: 'Title style',",
          "333:         boldTitle: 'Bold title',",
          "334:         fontBold: 'Bold',",
          "335:         fontNormal: 'Normal',",
          "336:         colonTitle: 'Display colon',",
          "337:         colonVisible: 'Visible',",
          "338:         colonHidden: 'Hidden',",
          "339:         alignTitle: 'Title align',",
          "340:         widthTitle: 'Title width',",
          "341:         alignLeft: 'Left',",
          "342:         alignRight: 'Right',",
          "343:         unitPx: 'Px',",
          "344:         unitPct: 'Pct'",
          "345:       },",
          "347:         group: {",
          "348:           base: 'Base control',",
          "349:           layout: 'Layout control',",
          "350:           system: 'System control',",
          "351:           module: 'Module control',",
          "352:           chart: 'Chart control',",
          "353:           advanced: 'Advanced control'",
          "354:         },",
          "355:         copyTitle: 'Copy_{0}',",
          "356:         component: {",
          "357:           input: 'Input',",
          "358:           textarea: 'Textarea',",
          "359:           select: 'Select',",
          "360:           row: 'Row/column',",
          "361:           title: 'Title',",
          "362:           text: 'Text',",
          "363:           subtable: 'Subtable',",
          "364:           VxeSwitch: 'Yes/no',",
          "365:           VxeInput: 'Input',",
          "366:           VxeNumberInput: 'Number',",
          "367:           VxeDatePicker: 'Date',",
          "368:           VxeTextarea: 'Textarea',",
          "369:           VxeSelect: 'Select',",
          "370:           VxeTreeSelect: 'Tree select',",
          "371:           VxeRadioGroup: 'Radio',",
          "372:           VxeCheckboxGroup: 'Checkbox',",
          "373:           VxeUploadFile: 'File',",
          "374:           VxeUploadImage: 'Image'",
          "375:         }",
          "376:       },",
          "377:       widgetProp: {",
          "378:         name: 'Field name',",
          "379:         placeholder: 'Field placeholder',",
          "380:         required: 'Required',",
          "381:         multiple: 'Allow to select multiple',",
          "382:         displaySetting: {",
          "383:           name: 'Display setting',",
          "384:           pc: 'PC',",
          "385:           mobile: 'Mobile',",
          "386:           visible: 'Visible',",
          "387:           hidden: 'Hidden'",
          "388:         },",
          "389:         dataSource: {",
          "390:           name: 'Data source',",
          "391:           defValue: 'Option {0}',",
          "392:           addOption: 'Add option',",
          "393:           batchEditOption: 'Batch edit',",
          "394:           batchEditTip: 'Each row corresponds to an option, supporting direct copying and pasting from tables, Excel, and WPS.',",
          "395:           batchEditSubTip: 'Each row corresponds to an option. If grouped, the sub items can start with spaces or tab keys, and can be directly copied and pasted from tables, Excel, or WPS.',",
          "396:           buildOption: 'Build option'",
          "397:         },",
          "398:         rowProp: {",
          "399:           colSize: 'Number of columns',",
          "400:           col2: 'Two columns',",
          "401:           col3: 'Three columns',",
          "402:           col4: 'Four columns',",
          "403:           col6: 'Six columns',",
          "404:           layout: 'Layout'",
          "405:         },",
          "406:         textProp: {",
          "407:           name: 'Content',",
          "408:           alignTitle: 'Align',",
          "409:           alignLeft: 'Left',",
          "410:           alignCenter: 'Center',",
          "411:           alignRight: 'Right',",
          "412:           colorTitle: 'Color',",
          "413:           sizeTitle: 'Font size',",
          "414:           boldTitle: 'Font bold',",
          "415:           fontNormal: 'Normal',",
          "416:           fontBold: 'Bold'",
          "417:         },",
          "418:         subtableProp: {",
          "419:           seqTitle: 'S/N',",
          "420:           showSeq: 'Display serial number',",
          "421:           showCheckbox: 'Allow multiple selections',",
          "422:           errSubDrag: 'The sub table does not support this control. Please use another control.',",
          "423:           colPlace: '\u5c06\u63a7\u4ef6\u62d6\u62fd\u8fdb\u6765'",
          "424:         },",
          "425:         uploadProp: {",
          "426:           limitFileCount: 'File quantity limitation',",
          "427:           limitFileSize: 'File size limitation',",
          "428:           multiFile: 'Allows multiple files',",
          "429:           limitImgCount: 'Image quantity limitation',",
          "430:           limitImgSize: 'Image size limitation',",
          "431:           multiImg: 'Allows multiple images'",
          "432:         }",
          "433:       }",
          "434:     },",
          "435:     listDesign: {",
          "436:       fieldSettingTab: 'Field setting',",
          "437:       listSettingTab: 'Parameter setting',",
          "438:       searchTitle: 'Search',",
          "439:       listTitle: 'List',",
          "440:       searchField: 'Search field',",
          "441:       listField: 'List field',",
          "442:       activeBtn: {",
          "443:         ActionButtonUpdate: 'Edit',",
          "444:         ActionButtonDelete: 'Delete'",
          "445:       },",
          "446:       search: {",
          "447:         addBtn: 'Edit',",
          "448:         emptyText: 'No filter condition is configured.',",
          "449:         editPopupTitle: '\u7f16\u8f91\u67e5\u8be2\u5b57\u6bb5'",
          "450:       },",
          "451:       searchPopup: {",
          "452:         colTitle: '\u6807\u9898',",
          "453:         saveBtn: '\u4fdd\u5b58'",
          "454:       }",
          "455:     },",
          "456:     text: {",
          "457:       copySuccess: 'Successfully copied to clipboard.',",
          "458:       copyError: 'The current environment does not support this operation.'",
          "459:     },",
          "460:     countdown: {",
          "461:       formats: {",
          "462:         yyyy: '\u5e74',",
          "463:         MM: '\u6708',",
          "464:         dd: '\u5929',",
          "465:         HH: '\u65f6',",
          "466:         mm: '\u5206',",
          "467:         ss: '\u79d2'",
          "",
          "---------------"
        ],
        "packages/locale/lang/zh-CN.js||packages/locale/lang/zh-CN.js": [
          "File: packages/locale/lang/zh-CN.js -> packages/locale/lang/zh-CN.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "2:   vxe: {",
          "3:     base: {",
          "4:       pleaseInput: '\u8bf7\u8f93\u5165',",
          "6:     },",
          "7:     loading: {",
          "8:       text: '\u52a0\u8f7d\u4e2d...'",
          "9:     },",
          "10:     error: {",
          "11:       groupFixed: '\u5982\u679c\u4f7f\u7528\u5206\u7ec4\u8868\u5934\uff0c\u51bb\u7ed3\u5217\u5fc5\u987b\u6309\u7ec4\u8bbe\u7f6e',",
          "12:       groupMouseRange: '\u5206\u7ec4\u8868\u5934\u4e0e \"{0}\" \u4e0d\u80fd\u540c\u65f6\u4f7f\u7528\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "13:       groupTag: '\u5206\u7ec4\u5217\u5934\u5e94\u8be5\u4f7f\u7528 \"{0}\" \u800c\u4e0d\u662f \"{1}\"\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "",
          "[Removed Lines]",
          "5:       pleaseSelect: '\u8bf7\u9009\u62e9'",
          "",
          "[Added Lines]",
          "5:       pleaseSelect: '\u8bf7\u9009\u62e9',",
          "6:       comma: '\uff0c',",
          "7:       fullStop: '\u3002'",
          "13:       downErr: '\u4e0b\u8f7d\u5931\u8d25',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "17:       useErr: '\u5b89\u88c5 \"{0}\" \u6a21\u5757\u65f6\u53d1\u751f\u9519\u8bef\uff0c\u53ef\u80fd\u987a\u5e8f\u4e0d\u6b63\u786e\uff0c\u4f9d\u8d56\u7684\u6a21\u5757\u9700\u8981\u5728 Table \u4e4b\u524d\u5b89\u88c5',",
          "18:       barUnableLink: '\u5de5\u5177\u680f\u65e0\u6cd5\u5173\u8054\u8868\u683c',",
          "19:       expandContent: '\u5c55\u5f00\u884c\u7684\u63d2\u69fd\u5e94\u8be5\u662f \"content\"\uff0c\u8bf7\u68c0\u67e5\u662f\u5426\u6b63\u786e',",
          "20:       reqModule: '\u7f3a\u5c11 \"{0}\" \u6a21\u5757',",
          "21:       reqProp: '\u7f3a\u5c11\u5fc5\u8981\u7684 \"{0}\" \u53c2\u6570\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u51fa\u73b0\u9519\u8bef',",
          "22:       emptyProp: '\u53c2\u6570 \"{0}\" \u4e0d\u5141\u8bb8\u4e3a\u7a7a',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23:       reqComp: '\u7f3a\u5c11 \"{0}\" \u7ec4\u4ef6\uff0c\u8bf7\u68c0\u67e5\u662f\u5426\u6b63\u786e\u5b89\u88c5\u3002 https://vxeui.com/#/start/useGlobal',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "32:       notProp: '\u4e0d\u652f\u6301\u7684\u53c2\u6570 \"{0}\"',",
          "33:       checkProp: '\u5f53\u6570\u636e\u91cf\u8fc7\u5927\u65f6\u53ef\u80fd\u4f1a\u5bfc\u81f4\u590d\u9009\u6846\u5361\u987f\uff0c\u5efa\u8bae\u8bbe\u7f6e\u53c2\u6570 \"{0}\" \u63d0\u5347\u6e32\u67d3\u901f\u5ea6',",
          "34:       coverProp: '\"{0}\" \u7684\u53c2\u6570 \"{1}\" \u91cd\u590d\u5b9a\u4e49\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "35:       delFunc: '\u65b9\u6cd5 \"{0}\" \u5df2\u5e9f\u5f03\uff0c\u8bf7\u4f7f\u7528 \"{1}\"',",
          "36:       delProp: '\u53c2\u6570 \"{0}\" \u5df2\u5e9f\u5f03\uff0c\u8bf7\u4f7f\u7528 \"{1}\"',",
          "37:       delEvent: '\u4e8b\u4ef6 \"{0}\" \u5df2\u5e9f\u5f03\uff0c\u8bf7\u4f7f\u7528 \"{1}\"',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39:       uniField: '\u5b57\u6bb5\u540d \"{0}\" \u91cd\u590d\u5b9a\u4e49\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "46:       emptyText: '\u6682\u65e0\u6570\u636e',",
          "47:       allTitle: '\u5168\u9009/\u53d6\u6d88',",
          "48:       seqTitle: '\u5e8f\u53f7',",
          "49:       confirmFilter: '\u7b5b\u9009',",
          "50:       resetFilter: '\u91cd\u7f6e',",
          "51:       allFilter: '\u5168\u90e8',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "54:       actionTitle: '\u64cd\u4f5c',",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "189:       expCancel: '\u53d6\u6d88'",
          "190:     },",
          "191:     modal: {",
          "192:       zoomIn: '\u6700\u5927\u5316',",
          "193:       zoomOut: '\u8fd8\u539f',",
          "194:       close: '\u5173\u95ed'",
          "195:     },",
          "196:     form: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "198:       errTitle: '\u9519\u8bef\u63d0\u793a',",
          "199:       zoomMin: '\u6700\u5c0f\u5316',",
          "202:       close: '\u5173\u95ed',",
          "203:       miniMaxSize: '\u6700\u5c0f\u5316\u7a97\u53e3\u7684\u6570\u91cf\u4e0d\u80fd\u8d85\u8fc7 {0} \u4e2a'",
          "204:     },",
          "205:     drawer: {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "270:         }",
          "271:       }",
          "272:     },",
          "273:     formDesign: {",
          "274:       widget: {",
          "278:       }",
          "279:     },",
          "",
          "[Removed Lines]",
          "275:         input: '\u8f93\u5165\u6846',",
          "276:         textarea: '\u6587\u672c\u57df',",
          "277:         select: '\u4e0b\u62c9\u6846'",
          "",
          "[Added Lines]",
          "285:     imagePreview: {",
          "286:       popupTitle: '\u9884\u89c8',",
          "287:       operBtn: {",
          "288:         zoomOut: '\u7f29\u5c0f',",
          "289:         zoomIn: '\u653e\u5927',",
          "290:         pctFull: '\u7b49\u6bd4\u4f8b\u7f29\u653e',",
          "291:         pct11: '\u663e\u793a\u539f\u59cb\u5c3a\u5bf8',",
          "292:         rotateLeft: '\u5411\u5de6\u65cb\u8f6c',",
          "293:         rotateRight: '\u5411\u53f3\u65cb\u8f6c',",
          "294:         print: '\u70b9\u51fb\u6253\u5370\u56fe\u7247',",
          "295:         download: '\u70b9\u51fb\u4e0b\u8f7d\u56fe\u7247'",
          "296:       }",
          "297:     },",
          "298:     upload: {",
          "299:       fileBtnText: '\u70b9\u51fb\u6216\u62d6\u62fd\u4e0a\u4f20',",
          "300:       imgBtnText: '\u70b9\u51fb\u6216\u62d6\u62fd\u4e0a\u4f20',",
          "301:       dragPlaceholder: '\u8bf7\u628a\u6587\u4ef6\u62d6\u653e\u5230\u8fd9\u4e2a\u533a\u57df\u5373\u53ef\u4e0a\u4f20',",
          "302:       imgSizeHint: '\u5355\u5f20{0}',",
          "303:       imgCountHint: '\u6700\u591a{0}\u5f20',",
          "304:       fileTypeHint: '\u652f\u6301 {0} \u6587\u4ef6\u7c7b\u578b',",
          "305:       fileSizeHint: '\u5355\u4e2a\u6587\u4ef6\u5927\u5c0f\u4e0d\u8d85\u8fc7{0}',",
          "306:       fileCountHint: '\u6700\u591a\u53ef\u4e0a\u4f20{0}\u4e2a\u6587\u4ef6',",
          "307:       overCountErr: '\u6700\u591a\u53ea\u80fd\u9009\u62e9{0}\u4e2a\u6587\u4ef6\uff01',",
          "308:       overCountExtraErr: '\u5df2\u8d85\u51fa\u6700\u5927\u6570\u91cf{0}\u4e2a\uff0c\u8d85\u51fa\u7684{1}\u4e2a\u6587\u4ef6\u5c06\u88ab\u5ffd\u7565\uff01',",
          "309:       overSizeErr: '\u6587\u4ef6\u5927\u5c0f\u6700\u5927\u4e0d\u80fd\u8d85\u8fc7{0}\uff01',",
          "310:       reUpload: '\u91cd\u65b0\u4e0a\u4f20',",
          "311:       uploadProgress: '\u4e0a\u4f20\u4e2d {0}%',",
          "312:       uploadErr: '\u4e0a\u4f20\u5931\u8d25',",
          "313:       uploadSuccess: '\u4e0a\u4f20\u6210\u529f',",
          "314:       moreBtnText: '\u66f4\u591a\uff08{0}\uff09',",
          "315:       viewItemTitle: '\u70b9\u51fb\u67e5\u770b'",
          "316:     },",
          "318:       formName: '\u8868\u5355\u540d\u79f0',",
          "319:       defFormTitle: '\u672a\u547d\u540d\u7684\u8868\u5355',",
          "320:       widgetPropTab: '\u63a7\u4ef6\u5c5e\u6027',",
          "321:       widgetFormTab: '\u8868\u5355\u5c5e\u6027',",
          "322:       error: {",
          "323:         wdFormUni: '\u8be5\u7c7b\u578b\u7684\u63a7\u4ef6\u5728\u8868\u5355\u4e2d\u53ea\u5141\u8bb8\u6dfb\u52a0\u4e00\u4e2a',",
          "324:         wdSubUni: '\u8be5\u7c7b\u578b\u7684\u63a7\u4ef6\u5728\u5b50\u8868\u4e2d\u53ea\u5141\u8bb8\u6dfb\u52a0\u4e00\u4e2a'",
          "325:       },",
          "326:       styleSetting: {",
          "327:         btn: '\u6837\u5f0f\u8bbe\u7f6e',",
          "328:         title: '\u8868\u5355\u7684\u6837\u5f0f\u8bbe\u7f6e',",
          "329:         layoutTitle: '\u63a7\u4ef6\u5e03\u5c40',",
          "330:         verticalLayout: '\u4e0a\u4e0b\u5e03\u5c40',",
          "331:         horizontalLayout: '\u6a2a\u5411\u5e03\u5c40',",
          "332:         styleTitle: '\u6807\u9898\u6837\u5f0f',",
          "333:         boldTitle: '\u6807\u9898\u52a0\u7c97',",
          "334:         fontBold: '\u52a0\u7c97',",
          "335:         fontNormal: '\u5e38\u89c4',",
          "336:         colonTitle: '\u663e\u793a\u5192\u53f7',",
          "337:         colonVisible: '\u663e\u793a',",
          "338:         colonHidden: '\u9690\u85cf',",
          "339:         alignTitle: '\u5bf9\u9f50\u65b9\u5f0f',",
          "340:         widthTitle: '\u6807\u9898\u5bbd\u5ea6',",
          "341:         alignLeft: '\u5c45\u5de6',",
          "342:         alignRight: '\u5c45\u53f3',",
          "343:         unitPx: '\u50cf\u7d20',",
          "344:         unitPct: '\u767e\u5206\u6bd4'",
          "345:       },",
          "347:         group: {",
          "348:           base: '\u57fa\u7840\u63a7\u4ef6',",
          "349:           layout: '\u5e03\u5c40\u63a7\u4ef6',",
          "350:           system: '\u7cfb\u7edf\u63a7\u4ef6',",
          "351:           module: '\u6a21\u5757\u63a7\u4ef6',",
          "352:           chart: '\u56fe\u8868\u63a7\u4ef6',",
          "353:           advanced: '\u9ad8\u7ea7\u63a7\u4ef6'",
          "354:         },",
          "355:         copyTitle: '\u526f\u672c_{0}',",
          "356:         component: {",
          "357:           input: '\u8f93\u5165\u6846',",
          "358:           textarea: '\u6587\u672c\u57df',",
          "359:           select: '\u4e0b\u62c9\u9009\u62e9',",
          "360:           row: '\u4e00\u884c\u591a\u5217',",
          "361:           title: '\u6807\u9898',",
          "362:           text: '\u6587\u672c',",
          "363:           subtable: '\u5b50\u8868',",
          "364:           VxeSwitch: '\u662f/\u5426',",
          "365:           VxeInput: '\u8f93\u5165\u6846',",
          "366:           VxeNumberInput: '\u6570\u5b57',",
          "367:           VxeDatePicker: '\u65e5\u671f',",
          "368:           VxeTextarea: '\u6587\u672c\u57df',",
          "369:           VxeSelect: '\u4e0b\u62c9\u9009\u62e9',",
          "370:           VxeTreeSelect: '\u6811\u5f62\u9009\u62e9',",
          "371:           VxeRadioGroup: '\u5355\u9009\u6846',",
          "372:           VxeCheckboxGroup: '\u590d\u9009\u6846',",
          "373:           VxeUploadFile: '\u6587\u4ef6',",
          "374:           VxeUploadImage: '\u56fe\u7247'",
          "375:         }",
          "376:       },",
          "377:       widgetProp: {",
          "378:         name: '\u63a7\u4ef6\u540d\u79f0',",
          "379:         placeholder: '\u63d0\u793a\u8bed',",
          "380:         required: '\u5fc5\u586b\u6821\u9a8c',",
          "381:         multiple: '\u5141\u8bb8\u591a\u9009',",
          "382:         displaySetting: {",
          "383:           name: '\u663e\u793a\u8bbe\u7f6e',",
          "384:           pc: '\u7535\u8111\u7aef',",
          "385:           mobile: '\u624b\u673a\u7aef',",
          "386:           visible: '\u663e\u793a',",
          "387:           hidden: '\u9690\u85cf'",
          "388:         },",
          "389:         dataSource: {",
          "390:           name: '\u6570\u636e\u6e90',",
          "391:           defValue: '\u9009\u9879{0}',",
          "392:           addOption: '\u6dfb\u52a0\u9009\u9879',",
          "393:           batchEditOption: '\u6279\u91cf\u7f16\u8f91',",
          "394:           batchEditTip: '\u6bcf\u884c\u5bf9\u5e94\u4e00\u4e2a\u9009\u9879\uff0c\u652f\u6301\u4ece\u8868\u683c\u3001Excel\u3001WPS \u4e2d\u76f4\u63a5\u590d\u5236\u7c98\u8d34\u3002',",
          "395:           batchEditSubTip: '\u6bcf\u884c\u5bf9\u5e94\u4e00\u4e2a\u9009\u9879\uff0c\u5982\u679c\u662f\u5206\u7ec4\uff0c\u5b50\u9879\u53ef\u4ee5\u662f\u7a7a\u683c\u6216\u5236\u8868\u952e\u5f00\u5934\uff0c\u652f\u6301\u4ece\u8868\u683c\u3001Excel\u3001WPS \u4e2d\u76f4\u63a5\u590d\u5236\u7c98\u8d34\u3002',",
          "396:           buildOption: '\u751f\u6210\u9009\u9879'",
          "397:         },",
          "398:         rowProp: {",
          "399:           colSize: '\u5217\u6570',",
          "400:           col2: '\u4e24\u5217',",
          "401:           col3: '\u4e09\u5217',",
          "402:           col4: '\u56db\u5217',",
          "403:           col6: '\u516d\u5217',",
          "404:           layout: '\u5e03\u5c40'",
          "405:         },",
          "406:         textProp: {",
          "407:           name: '\u5185\u5bb9',",
          "408:           alignTitle: '\u5bf9\u9f50\u65b9\u5f0f',",
          "409:           alignLeft: '\u5c45\u5de6',",
          "410:           alignCenter: '\u5c45\u4e2d',",
          "411:           alignRight: '\u5c45\u53f3',",
          "412:           colorTitle: '\u5b57\u4f53\u989c\u8272',",
          "413:           sizeTitle: '\u5b57\u4f53\u5927\u5c0f',",
          "414:           boldTitle: '\u5b57\u4f53\u52a0\u7c97',",
          "415:           fontNormal: '\u5e38\u89c4',",
          "416:           fontBold: '\u52a0\u7c97'",
          "417:         },",
          "418:         subtableProp: {",
          "419:           seqTitle: '\u5e8f\u53f7',",
          "420:           showSeq: '\u663e\u793a\u5e8f\u53f7',",
          "421:           showCheckbox: '\u5141\u8bb8\u591a\u9009',",
          "422:           errSubDrag: '\u5b50\u8868\u4e0d\u652f\u6301\u8be5\u63a7\u4ef6\uff0c\u8bf7\u4f7f\u7528\u5176\u4ed6\u63a7\u4ef6',",
          "423:           colPlace: '\u5c06\u63a7\u4ef6\u62d6\u62fd\u8fdb\u6765'",
          "424:         },",
          "425:         uploadProp: {",
          "426:           limitFileCount: '\u6587\u4ef6\u6570\u91cf\u9650\u5236',",
          "427:           limitFileSize: '\u6587\u4ef6\u5927\u5c0f\u9650\u5236',",
          "428:           multiFile: '\u5141\u8bb8\u4e0a\u4f20\u591a\u4e2a\u6587\u4ef6',",
          "429:           limitImgCount: '\u56fe\u7247\u6570\u91cf\u9650\u5236',",
          "430:           limitImgSize: '\u56fe\u7247\u5927\u5c0f\u9650\u5236',",
          "431:           multiImg: '\u5141\u8bb8\u4e0a\u4f20\u591a\u5f20\u56fe\u7247'",
          "432:         }",
          "433:       }",
          "434:     },",
          "435:     listDesign: {",
          "436:       fieldSettingTab: '\u5b57\u6bb5\u8bbe\u7f6e',",
          "437:       listSettingTab: '\u53c2\u6570\u8bbe\u7f6e',",
          "438:       searchTitle: '\u67e5\u8be2\u6761\u4ef6',",
          "439:       listTitle: '\u5217\u8868\u5b57\u6bb5',",
          "440:       searchField: '\u67e5\u8be2\u5b57\u6bb5',",
          "441:       listField: '\u5217\u8868\u5b57\u6bb5',",
          "442:       activeBtn: {",
          "443:         ActionButtonUpdate: '\u7f16\u8f91',",
          "444:         ActionButtonDelete: '\u5220\u9664'",
          "445:       },",
          "446:       search: {",
          "447:         addBtn: '\u7f16\u8f91',",
          "448:         emptyText: '\u672a\u914d\u7f6e\u67e5\u8be2\u6761\u4ef6',",
          "449:         editPopupTitle: '\u7f16\u8f91\u67e5\u8be2\u5b57\u6bb5'",
          "450:       },",
          "451:       searchPopup: {",
          "452:         colTitle: '\u6807\u9898',",
          "453:         saveBtn: '\u4fdd\u5b58'",
          "454:       }",
          "455:     },",
          "456:     text: {",
          "457:       copySuccess: '\u5df2\u590d\u5236\u5230\u526a\u8d34\u677f',",
          "458:       copyError: '\u5f53\u524d\u73af\u5883\u4e0d\u652f\u6301\u8be5\u64cd\u4f5c'",
          "459:     },",
          "460:     countdown: {",
          "461:       formats: {",
          "462:         yyyy: '\u5e74',",
          "463:         MM: '\u6708',",
          "464:         dd: '\u5929',",
          "465:         HH: '\u65f6',",
          "466:         mm: '\u5206',",
          "467:         ss: '\u79d2'",
          "",
          "---------------"
        ],
        "packages/locale/lang/zh-TC.js||packages/locale/lang/zh-TC.js": [
          "File: packages/locale/lang/zh-TC.js -> packages/locale/lang/zh-TC.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "2:   vxe: {",
          "3:     base: {",
          "4:       pleaseInput: '\u8bf7\u8f93\u5165',",
          "6:     },",
          "7:     loading: {",
          "8:       text: '\u52a0\u8f09\u4e2d...'",
          "9:     },",
          "10:     error: {",
          "11:       groupFixed: '\u5982\u679c\u4f7f\u7528\u5206\u7d44\u8868\u982d\uff0c\u56fa\u51bb\u7ed3\u5217\u5fc5\u9808\u6309\u7d44\u8a2d\u5b9a',",
          "12:       groupMouseRange: '\u5206\u7ec4\u8868\u982d\u8207 \"{0}\" \u4e0d\u80fd\u540c\u6642\u4f7f\u7528\uff0c\u9019\u53ef\u80fd\u6703\u51fa\u73fe\u932f\u8aa4',",
          "13:       groupTag: '\u5206\u7d44\u5217\u982d\u61c9\u8a72\u4f7f\u7528 \"{0}\" \u800c\u4e0d\u662f \"{1}\"\uff0c\u9019\u53ef\u80fd\u6703\u51fa\u73fe\u932f\u8aa4',",
          "",
          "[Removed Lines]",
          "5:       pleaseSelect: '\u8bf7\u9009\u62e9'",
          "",
          "[Added Lines]",
          "5:       pleaseSelect: '\u8bf7\u9009\u62e9',",
          "6:       comma: '\uff0c',",
          "7:       fullStop: '\u3002'",
          "13:       downErr: '\u4e0b\u8f7d\u5931\u8d25',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "17:       useErr: '\u5b89\u88dd \"{0}\" \u6a21\u7d44\u6642\u767c\u751f\u932f\u8aa4\uff0c\u53ef\u80fd\u9806\u5e8f\u4e0d\u6b63\u78ba\uff0c\u4f9d\u8cf4\u7684\u6a21\u7d44\u9700\u8981\u5728Table\u4e4b\u524d\u5b89\u88dd',",
          "18:       barUnableLink: '\u5de5\u5177\u6b04\u7121\u6cd5\u95dc\u806f\u8868\u683c',",
          "19:       expandContent: '\u5c55\u958b\u884c\u7684\u63d2\u69fd\u61c9\u8a72\u662f \u201ccontent\u201d\uff0c\u8acb\u6aa2\u67e5\u662f\u5426\u6b63\u78ba',",
          "20:       reqModule: '\u7f3a\u5c11 \"{0}\" \u6a21\u7d44',",
          "21:       reqProp: '\u7f3a\u5c11\u5fc5\u8981\u7684 \"{0}\" \u53c3\u6578\uff0c\u53ef\u80fd\u6703\u5c0e\u81f4\u51fa\u73fe\u932f\u8aa4',",
          "22:       emptyProp: '\u53c3\u6578 \"{0}\" \u4e0d\u5141\u8a31\u70ba\u7a7a',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23:       reqComp: '\u7f3a\u5c11 \"{0}\" \u7d44\u4ef6\uff0c\u8bf7\u68c0\u67e5\u662f\u5426\u6b63\u786e\u5b89\u88c5\u3002 https://vxeui.com/#/start/useGlobal',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "32:       notProp: '\u4e0d\u652f\u6301\u7684\u53c3\u6578 \"{0}\"',",
          "33:       checkProp: '\u7576\u6578\u64da\u91cf\u904e\u5927\u6642\u53ef\u80fd\u6703\u5c0e\u81f4\u8907\u9078\u6846\u5361\u9813\uff0c\u5efa\u8b70\u8a2d\u7f6e\u53c3\u6578 \"{0}\" \u63d0\u5347\u6e32\u67d3\u901f\u5ea6',",
          "34:       coverProp: '\"{0}\" \u7684\u53c3\u6578 \"{1}\" \u91cd\u8907\u5b9a\u7fa9\uff0c\u9019\u53ef\u80fd\u6703\u51fa\u73fe\u932f\u8aa4',",
          "35:       delFunc: '\u65b9\u6cd5 \"{0}\" \u5df2\u505c\u7528\uff0c\u8acb\u4f7f\u7528 \"{1}\"',",
          "36:       delProp: '\u53c3\u6578 \"{0}\" \u5df2\u505c\u7528\uff0c\u8acb\u4f7f\u7528 \"{1}\"',",
          "37:       delEvent: '\u4e8b\u4ef6 \"{0}\" \u5df2\u505c\u7528\uff0c\u8acb\u4f7f\u7528 \"{1}\"',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39:       uniField: '\u5b57\u6bb5\u540d \"{0}\" \u91cd\u8907\u5b9a\u7fa9\uff0c\u9019\u53ef\u80fd\u6703\u51fa\u73fe\u932f\u8aa4',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "45:     table: {",
          "46:       emptyText: '\u66ab\u7121\u8cc7\u6599',",
          "47:       allTitle: '\u5168\u9078/\u53d6\u6d88',",
          "49:       confirmFilter: '\u7be9\u9078',",
          "50:       resetFilter: '\u91cd\u7f6e',",
          "51:       allFilter: '\u5168\u90e8',",
          "",
          "[Removed Lines]",
          "48:       seqTitle: '\u5e8f\u865f',",
          "",
          "[Added Lines]",
          "53:       seqTitle: '\u5e8f\u53f7',",
          "54:       actionTitle: '\u64cd\u4f5c',",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "59:       expSrcFilename: '\u532f\u51fa_\u5f9e_{0}',",
          "60:       customTitle: '\u5217\u8a2d\u5b9a',",
          "61:       customAll: '\u5168\u90e8',",
          "63:       customClose: '\u5173\u95ed',",
          "64:       customCancel: '\u53d6\u6d88',",
          "65:       customRestore: '\u6062\u590d\u9ed8\u8ba4',",
          "",
          "[Removed Lines]",
          "62:       customConfirm: '\u78ba\u8a8d',",
          "",
          "[Added Lines]",
          "68:       customConfirm: '\u786e\u8ba4',",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "189:       expCancel: '\u53d6\u6d88'",
          "190:     },",
          "191:     modal: {",
          "192:       zoomIn: '\u6700\u5927\u5316',",
          "193:       zoomOut: '\u9084\u539f',",
          "194:       close: '\u95dc\u9589'",
          "195:     },",
          "196:     form: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "198:       errTitle: '\u932f\u8aa4\u63d0\u793a',",
          "199:       zoomMin: '\u6700\u5c0f\u5316',",
          "202:       close: '\u95dc\u9589',",
          "203:       miniMaxSize: '\u6700\u5c0f\u5316\u7a97\u53e3\u7684\u6578\u91cf\u4e0d\u80fd\u8d85\u904e {0} \u500b'",
          "204:     },",
          "205:     drawer: {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "206:       zoomOut: '\u9084\u539f',",
          "207:       custom: '\u5217\u8a2d\u5b9a',",
          "208:       customAll: '\u5168\u90e8',",
          "211:       fixedLeft: '\u51bb\u7ed3\u5728\u5de6\u5074',",
          "212:       fixedRight: '\u51bb\u7ed3\u5728\u53f3\u5074',",
          "213:       cancelFixed: '\u53d6\u6d88\u51bb\u7ed3\u5217'",
          "",
          "[Removed Lines]",
          "209:       customConfirm: '\u78ba\u8a8d',",
          "210:       customRestore: '\u91cd\u7f6e',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "270:         }",
          "271:       }",
          "272:     },",
          "273:     formDesign: {",
          "274:       widget: {",
          "278:       }",
          "279:     },",
          "",
          "[Removed Lines]",
          "275:         input: '\u8f38\u5165\u6846',",
          "276:         textarea: '\u6587\u672c\u57df',",
          "277:         select: '\u4e0b\u62c9\u6846'",
          "",
          "[Added Lines]",
          "283:     imagePreview: {",
          "284:       popupTitle: '\u9810\u89bd',",
          "285:       operBtn: {",
          "286:         zoomOut: '\u7e2e\u5c0f',",
          "287:         zoomIn: '\u653e\u5927',",
          "288:         pctFull: '\u7b49\u6bd4\u4f8b\u7e2e\u653e',",
          "289:         pct11: '\u986f\u793a\u539f\u59cb\u5c3a\u5bf8',",
          "290:         rotateLeft: '\u5411\u5de6\u65cb\u8f49',",
          "291:         rotateRight: '\u5411\u53f3\u65cb\u8f49',",
          "292:         print: '\u9ede\u64ca\u6253\u5370\u5716\u7247',",
          "293:         download: '\u9ede\u64ca\u4e0b\u8f09\u5716\u7247'",
          "294:       }",
          "295:     },",
          "296:     upload: {",
          "297:       fileBtnText: '\u9ede\u64ca\u6216\u62d6\u62fd\u4e0a\u50b3',",
          "298:       imgBtnText: '\u9ede\u64ca\u6216\u62d6\u62fd\u4e0a\u50b3',",
          "299:       dragPlaceholder: '\u8acb\u628a\u6587\u4ef6\u62d6\u653e\u5230\u9019\u500b\u5340\u57df\u5373\u53ef\u4e0a\u50b3',",
          "300:       imgSizeHint: '\u55ae\u5f35{0}',",
          "301:       imgCountHint: '\u6700\u591a{0}\u5f35',",
          "302:       fileTypeHint: '\u652f\u6301 {0} \u6587\u4ef6\u985e\u578b',",
          "303:       fileSizeHint: '\u55ae\u500b\u6587\u4ef6\u5927\u5c0f\u4e0d\u8d85\u904e{0}',",
          "304:       fileCountHint: '\u6700\u591a\u53ef\u4e0a\u50b3{0}\u4e2a\u6587\u4ef6',",
          "305:       overCountErr: '\u6700\u591a\u96bb\u80fd\u9078\u64c7{0}\u4e2a\u6587\u4ef6\uff01',",
          "306:       overCountExtraErr: '\u5df2\u8d85\u51fa\u6700\u5927\u6578\u91cf{0}\u500b\uff0c\u8d85\u51fa\u7684{1}\u500b\u6587\u4ef6\u5c07\u88ab\u5ffd\u7565\uff01',",
          "307:       overSizeErr: '\u6587\u4ef6\u5927\u5c0f\u6700\u5927\u4e0d\u80fd\u8d85\u904e{0}\uff01',",
          "308:       reUpload: '\u91cd\u65b0\u4e0a\u50b3',",
          "309:       uploadProgress: '\u4e0a\u50b3\u4e2d {0}%',",
          "310:       uploadErr: '\u4e0a\u50b3\u5931\u6557',",
          "311:       uploadSuccess: '\u4e0a\u50b3\u6210\u529f',",
          "312:       moreBtnText: '\u66f4\u591a\uff08{0}\uff09',",
          "313:       viewItemTitle: '\u9ede\u64ca\u67e5\u770b'",
          "314:     },",
          "316:       formName: '\u8868\u55ae\u540d\u7a31',",
          "317:       defFormTitle: '\u672a\u547d\u540d\u7684\u8868\u55ae',",
          "318:       widgetPropTab: '\u63a7\u4ef6\u5c6c\u6027',",
          "319:       widgetFormTab: '\u8868\u55ae\u5c6c\u6027',",
          "320:       error: {",
          "321:         wdFormUni: '\u8a72\u985e\u578b\u7684\u63a7\u4ef6\u5728\u8868\u55ae\u4e2d\u53ea\u5141\u8a31\u6dfb\u52a0\u4e00\u500b',",
          "322:         wdSubUni: '\u8a72\u985e\u578b\u7684\u63a7\u4ef6\u5728\u5b50\u8868\u4e2d\u53ea\u5141\u8a31\u6dfb\u52a0\u4e00\u500b'",
          "323:       },",
          "324:       styleSetting: {",
          "325:         btn: '\u6a23\u5f0f\u8a2d\u7f6e',",
          "326:         title: '\u8868\u55ae\u7684\u6a23\u5f0f\u8a2d\u7f6e',",
          "327:         layoutTitle: '\u63a7\u4ef6\u4f48\u5c40',",
          "328:         verticalLayout: '\u4e0a\u4e0b\u4f48\u5c40',",
          "329:         horizontalLayout: '\u6a6b\u5411\u4f48\u5c40',",
          "330:         styleTitle: '\u6a19\u984c\u6a23\u5f0f',",
          "331:         boldTitle: '\u6a19\u984c\u52a0\u7c97',",
          "332:         fontBold: '\u52a0\u7c97',",
          "333:         fontNormal: '\u5e38\u898f',",
          "334:         colonTitle: '\u986f\u793a\u5192\u865f',",
          "335:         colonVisible: '\u986f\u793a',",
          "336:         colonHidden: '\u96b1\u85cf',",
          "337:         alignTitle: '\u5c0d\u9f4a\u65b9\u5f0f',",
          "338:         widthTitle: '\u6a19\u984c\u5bec\u5ea6',",
          "339:         alignLeft: '\u5c45\u5de6',",
          "340:         alignRight: '\u5c45\u53f3',",
          "341:         unitPx: '\u50cf\u7d20',",
          "342:         unitPct: '\u767e\u5206\u6bd4'",
          "343:       },",
          "345:         group: {",
          "346:           base: '\u57fa\u790e\u63a7\u4ef6',",
          "347:           layout: '\u4f48\u5c40\u63a7\u4ef6',",
          "348:           system: '\u7cfb\u7d71\u63a7\u4ef6',",
          "349:           module: '\u6a21\u584a\u63a7\u4ef6',",
          "350:           chart: '\u5716\u8868\u63a7\u4ef6',",
          "351:           advanced: '\u9ad8\u7d1a\u63a7\u4ef6'",
          "352:         },",
          "353:         copyTitle: '\u526f\u672c_{0}',",
          "354:         component: {",
          "355:           input: '\u8f38\u5165\u6846',",
          "356:           textarea: '\u6587\u672c\u57df',",
          "357:           select: '\u4e0b\u62c9\u9078\u64c7',",
          "358:           row: '\u4e00\u884c\u591a\u5217',",
          "359:           title: '\u6a19\u984c',",
          "360:           text: '\u6587\u672c',",
          "361:           subtable: '\u5b50\u8868',",
          "362:           VxeSwitch: '\u662f/\u5426',",
          "363:           VxeInput: '\u8f38\u5165\u6846',",
          "364:           VxeNumberInput: '\u6578\u5b57',",
          "365:           VxeDatePicker: '\u65e5\u671f',",
          "366:           VxeTextarea: '\u6587\u672c\u57df',",
          "367:           VxeSelect: '\u4e0b\u62c9\u9078\u64c7',",
          "368:           VxeTreeSelect: '\u6a39\u5f62\u9078\u64c7',",
          "369:           VxeRadioGroup: '\u55ae\u9078\u6846',",
          "370:           VxeCheckboxGroup: '\u8907\u9078\u6846',",
          "371:           VxeUploadFile: '\u6587\u4ef6',",
          "372:           VxeUploadImage: '\u5716\u7247'",
          "373:         }",
          "374:       },",
          "375:       widgetProp: {",
          "376:         name: '\u63a7\u4ef6\u540d\u7a31',",
          "377:         placeholder: '\u63a7\u4ef6\u63d0\u793a',",
          "378:         required: '\u5fc5\u586b\u6821\u9a57',",
          "379:         multiple: '\u5141\u8a31\u591a\u9078',",
          "380:         displaySetting: {",
          "381:           name: '\u986f\u793a\u8a2d\u7f6e',",
          "382:           pc: '\u96fb\u8166\u7aef',",
          "383:           mobile: '\u624b\u6a5f\u7aef',",
          "384:           visible: '\u986f\u793a',",
          "385:           hidden: '\u96b1\u85cf'",
          "386:         },",
          "387:         dataSource: {",
          "388:           name: '\u6578\u64da\u6e90',",
          "389:           defValue: '\u9078\u9805{0}',",
          "390:           addOption: '\u6dfb\u52a0\u9078\u9805',",
          "391:           batchEditOption: '\u6279\u91cf\u7de8\u8f2f',",
          "392:           batchEditTip: '\u6bcf\u884c\u5c0d\u61c9\u4e00\u500b\u9078\u9805\uff0c\u652f\u6301\u5f9e\u8868\u683c\u3001Excel\u3001WPS \u4e2d\u76f4\u63a5\u8907\u88fd\u7c98\u8cbc\u3002',",
          "393:           batchEditSubTip: '\u6bcf\u884c\u5c0d\u61c9\u4e00\u500b\u9078\u9805\uff0c\u5982\u679c\u662f\u5206\u7d44\uff0c\u5b50\u9805\u53ef\u4ee5\u662f\u7a7a\u683c\u6216\u88fd\u8868\u9375\u958b\u982d\uff0c\u652f\u6301\u5f9e\u8868\u683c\u3001Excel\u3001WPS \u4e2d\u76f4\u63a5\u8907\u88fd\u7c98\u8cbc\u3002',",
          "394:           buildOption: '\u751f\u6210\u9078\u9805'",
          "395:         },",
          "396:         rowProp: {",
          "397:           colSize: '\u5217\u6578',",
          "398:           col2: '\u4e24\u5217',",
          "399:           col3: '\u4e09\u5217',",
          "400:           col4: '\u56db\u5217',",
          "401:           col6: '\u516d\u5217',",
          "402:           layout: '\u4f48\u5c40'",
          "403:         },",
          "404:         textProp: {",
          "405:           name: '\u5185\u5bb9',",
          "406:           alignTitle: '\u5c0d\u9f4a\u65b9\u5f0f',",
          "407:           alignLeft: '\u5c45\u5de6',",
          "408:           alignCenter: '\u5c45\u4e2d',",
          "409:           alignRight: '\u5c45\u53f3',",
          "410:           colorTitle: '\u5b57\u9ad4\u984f\u8272',",
          "411:           sizeTitle: '\u5b57\u9ad4\u5927\u5c0f',",
          "412:           boldTitle: '\u5b57\u9ad4\u52a0\u7c97',",
          "413:           fontNormal: '\u5e38\u898f',",
          "414:           fontBold: '\u52a0\u7c97'",
          "415:         },",
          "416:         subtableProp: {",
          "417:           seqTitle: '\u5e8f\u865f',",
          "418:           showSeq: '\u986f\u793a\u5e8f\u865f',",
          "419:           showCheckbox: '\u5141\u8a31\u591a\u9078',",
          "420:           errSubDrag: '\u5b50\u8868\u4e0d\u652f\u6301\u8a72\u63a7\u4ef6\uff0c\u8acb\u4f7f\u7528\u5176\u4ed6\u63a7\u4ef6',",
          "421:           colPlace: '\u5c06\u63a7\u4ef6\u62d6\u62fd\u8fdb\u6765'",
          "422:         },",
          "423:         uploadProp: {",
          "424:           uploadProp: {",
          "425:             limitFileCount: '\u6587\u4ef6\u6578\u91cf\u9650\u5236',",
          "426:             limitFileSize: '\u6587\u4ef6\u5927\u5c0f\u9650\u5236',",
          "427:             multiFile: '\u5141\u8a31\u4e0a\u50b3\u591a\u500b\u6587\u4ef6',",
          "428:             limitImgCount: '\u5716\u7247\u6578\u91cf\u9650\u5236',",
          "429:             limitImgSize: '\u5716\u7247\u5927\u5c0f\u9650\u5236',",
          "430:             multiImg: '\u5141\u8a31\u4e0a\u50b3\u591a\u5f35\u5716\u7247'",
          "431:           }",
          "432:         }",
          "433:       }",
          "434:     },",
          "435:     listDesign: {",
          "436:       fieldSettingTab: '\u5b57\u6bb5\u8a2d\u7f6e',",
          "437:       listSettingTab: '\u53c2\u6570\u8bbe\u7f6e',",
          "438:       searchTitle: '\u67e5\u8be2\u6761\u4ef6',",
          "439:       listTitle: '\u5217\u8868\u5b57\u6bb5',",
          "440:       searchField: '\u67e5\u8be2\u5b57\u6bb5',",
          "441:       listField: '\u5217\u8868\u5b57\u6bb5',",
          "442:       activeBtn: {",
          "443:         ActionButtonUpdate: '\u7de8\u8f2f',",
          "444:         ActionButtonDelete: '\u522a\u9664'",
          "445:       },",
          "446:       search: {",
          "447:         addBtn: '\u7f16\u8f91',",
          "448:         emptyText: '\u672a\u914d\u7f6e\u67e5\u8be2\u6761\u4ef6',",
          "449:         editPopupTitle: '\u7f16\u8f91\u67e5\u8be2\u5b57\u6bb5'",
          "450:       },",
          "451:       searchPopup: {",
          "452:         colTitle: '\u6807\u9898',",
          "453:         saveBtn: '\u4fdd\u5b58'",
          "454:       }",
          "455:     },",
          "456:     text: {",
          "457:       copySuccess: '\u5df2\u8907\u88fd\u5230\u526a\u8cbc\u677f',",
          "458:       copyError: '\u7576\u524d\u74b0\u5883\u4e0d\u652f\u6301\u8a72\u64cd\u4f5c'",
          "459:     },",
          "460:     countdown: {",
          "461:       formats: {",
          "462:         yyyy: '\u5e74',",
          "463:         MM: '\u6708',",
          "464:         dd: '\u5929',",
          "465:         HH: '\u65f6',",
          "466:         mm: '\u5206',",
          "467:         ss: '\u79d2'",
          "",
          "---------------"
        ],
        "styles/custom.scss||styles/custom.scss": [
          "File: styles/custom.scss -> styles/custom.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "170: .vxe-table-custom--sort-btn {",
          "171:   padding-left: 0.2em;",
          "172:   padding-right: 0.4em;",
          "176:   }",
          "177: }",
          "178: .vxe-table-custom--checkbox-label  {",
          "",
          "[Removed Lines]",
          "173:   cursor: grabbing;",
          "174:   &:hover {",
          "175:     color: $vxe-primary-color;",
          "",
          "[Added Lines]",
          "173:   &:not(.is--disabled) {",
          "174:     cursor: grabbing;",
          "175:     &:hover {",
          "176:       color: $vxe-primary-color;",
          "177:     }",
          "178:   }",
          "179:   &.is--disabled {",
          "180:     color: $vxe-input-disabled-color;",
          "181:     cursor: not-allowed;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "191:   user-select: none;",
          "192: }",
          "210: .vxe-table-custom-popup--body {",
          "211:   overflow: auto;",
          "212:   height: 100%;",
          "",
          "[Removed Lines]",
          "194: .vxe-table-custom--fixed-left-option,",
          "195: .vxe-table-custom--fixed-right-option {",
          "196:   line-height: 1.34em;",
          "197:   font-size: 1.1em;",
          "198:   padding: 0 0.2em;",
          "199:   cursor: pointer;",
          "200:   &.is--checked,",
          "201:   &:hover {",
          "202:     color: $vxe-primary-color;",
          "203:   }",
          "204:   &.is--disabled {",
          "205:     cursor: no-drop;",
          "206:     color: $vxe-input-disabled-color;",
          "207:   }",
          "208: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "371: .vxe-table-custom-popup--column-sort-btn {",
          "372:   font-size: 1.2em;",
          "373:   padding: 0.2em 0.5em;",
          "377:   }",
          "380:   }",
          "381: }",
          "",
          "[Removed Lines]",
          "374:   cursor: grab;",
          "375:   &:hover {",
          "376:     color:  $vxe-primary-color;",
          "378:   &:active {",
          "379:     cursor: grabbing;",
          "",
          "[Added Lines]",
          "364:   &:not(.is--disabled) {",
          "365:     cursor: grab;",
          "366:     &:hover {",
          "367:       color:  $vxe-primary-color;",
          "368:     }",
          "369:     &:active {",
          "370:       cursor: grabbing;",
          "371:     }",
          "373:   &.is--disabled {",
          "374:     color: $vxe-input-disabled-color;",
          "375:     cursor: not-allowed;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2d510b2bea6836e823286ee169611af3689221ff",
      "candidate_info": {
        "commit_hash": "2d510b2bea6836e823286ee169611af3689221ff",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/2d510b2bea6836e823286ee169611af3689221ff",
        "files": [
          "package.json",
          "packages/table/src/body.ts",
          "packages/table/src/props.ts",
          "packages/table/src/table.ts",
          "styles/components/table.scss"
        ],
        "message": "releases 3.10.0",
        "before_after_code_files": [
          "packages/table/src/body.ts||packages/table/src/body.ts",
          "packages/table/src/props.ts||packages/table/src/props.ts",
          "packages/table/src/table.ts||packages/table/src/table.ts",
          "styles/components/table.scss||styles/components/table.scss"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/table/src/body.ts||packages/table/src/body.ts": [
          "File: packages/table/src/body.ts -> packages/table/src/body.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "90:     columnOpts,",
          "91:     validErrorMaps",
          "92:   } = $xetable",
          "93:   const { type, cellRender, editRender, align, showOverflow, className, treeNode, slots } = column",
          "94:   const { actived } = editStore",
          "95:   const { rHeight: scrollYRHeight } = sYOpts",
          "96:   const { height: rowHeight } = rowOpts",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "93:   const cellOpts = $xetable.computeCellOpts",
          "95:   const { verticalAlign } = cellOpts",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "272:       column.id,",
          "273:       {",
          "274:         [`col--${cellAlign}`]: cellAlign,",
          "275:         [`col--${type}`]: type,",
          "276:         'col--last': $columnIndex === columns.length - 1,",
          "277:         'col--tree-node': treeNode,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "277:         [`col--vertical-${verticalAlign}`]: verticalAlign,",
          "",
          "---------------"
        ],
        "packages/table/src/props.ts||packages/table/src/props.ts": [
          "File: packages/table/src/props.ts -> packages/table/src/props.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "161:   resizeConfig: Object,",
          "163:   columnConfig: Object,",
          "165:   rowConfig: Object,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "165:   cellConfig: Object as PropType<VxeTablePropTypes.CellConfig>,",
          "",
          "---------------"
        ],
        "packages/table/src/table.ts||packages/table/src/table.ts": [
          "File: packages/table/src/table.ts -> packages/table/src/table.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "401:     computeColumnOpts () {",
          "402:       return Object.assign({}, getConfig().table.columnConfig, this.columnConfig)",
          "403:     },",
          "404:     rowOpts () {",
          "405:       return this.computeRowOpts",
          "406:     },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "403:     },",
          "404:     computeCellOpts () {",
          "405:       return Object.assign({}, getConfig().table.cellConfig, this.rowConfig)",
          "",
          "---------------"
        ],
        "styles/components/table.scss||styles/components/table.scss": [
          "File: styles/components/table.scss -> styles/components/table.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "131:   }",
          "132: }",
          "133: .vxe-body--column {",
          "135:     &.col--active {",
          "136:       & > .vxe-cell {",
          "137:         height: 100%;",
          "138:       }",
          "139:     }",
          "146:   }",
          "147:   .vxe-cell--label {",
          "148:     &.is--textarea {",
          "",
          "[Removed Lines]",
          "134:   &.col--height {",
          "140:     & > .vxe-cell {",
          "141:       & > .vxe-textarea,",
          "142:       & > .vxe-default-textarea {",
          "143:         height: 100%;",
          "144:       }",
          "145:     }",
          "",
          "[Added Lines]",
          "134:   &.col--vertical-top {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fca4a9fec5790b2007331a8dbc55bfe81500156f",
      "candidate_info": {
        "commit_hash": "fca4a9fec5790b2007331a8dbc55bfe81500156f",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/fca4a9fec5790b2007331a8dbc55bfe81500156f",
        "files": [
          "examples/plugins/table/index.js"
        ],
        "message": "fix",
        "before_after_code_files": [
          "examples/plugins/table/index.js||examples/plugins/table/index.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/plugins/table/index.js||examples/plugins/table/index.js": [
          "File: examples/plugins/table/index.js -> examples/plugins/table/index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: import {",
          "6:   VXETable,",
          "9:   Filter,",
          "10:   Menu,",
          "11:   Edit,",
          "12:   Export,",
          "13:   Keyboard,",
          "14:   Validator,",
          "18:   Column,",
          "19:   Colgroup,",
          "20:   Grid,",
          "21:   Toolbar,",
          "22:   Pager,",
          "",
          "[Removed Lines]",
          "8:   Icon,",
          "15:   Header,",
          "16:   Footer,",
          "",
          "[Added Lines]",
          "15:   Icon,",
          "18:   Table,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38:   Option,",
          "39:   Switch,",
          "40:   List,",
          "44: } from '../../../packages/all'",
          "46: import './renderer'",
          "",
          "[Removed Lines]",
          "41:   Pulldown,",
          "43:   Table",
          "",
          "[Added Lines]",
          "40:   Pulldown",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "58: })",
          "63:   .use(Menu)",
          "64:   .use(Edit)",
          "65:   .use(Export)",
          "66:   .use(Keyboard)",
          "67:   .use(Validator)",
          "72:   .use(Column)",
          "73:   .use(Colgroup)",
          "74:   .use(Grid)",
          "75:   .use(Toolbar)",
          "76:   .use(Pager)",
          "",
          "[Removed Lines]",
          "61: Vue.use(Icon)",
          "62:   .use(Filter)",
          "68:   .use(Header)",
          "69:   .use(Footer)",
          "",
          "[Added Lines]",
          "58: Vue.use(Filter)",
          "66: Vue.use(Icon)",
          "69:   .use(Table)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "94:   .use(List)",
          "95:   .use(Pulldown)",
          "101: Vue.prototype.$XModal = VXETable.modal",
          "",
          "[Removed Lines]",
          "98:   .use(Table)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b740764640e237d3e38a25e33da03c271e32ad34",
      "candidate_info": {
        "commit_hash": "b740764640e237d3e38a25e33da03c271e32ad34",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/b740764640e237d3e38a25e33da03c271e32ad34",
        "files": [
          "packages/custom/src/panel.js",
          "packages/edit/src/mixin.js",
          "packages/export/src/mixin.js",
          "packages/filter/src/mixin.js",
          "packages/filter/src/panel.js",
          "packages/form/src/form-config-item.js",
          "packages/form/src/form-item.js",
          "packages/form/src/form.js",
          "packages/form/src/render.js",
          "packages/form/src/util.js",
          "packages/locale/lang/en-US.js",
          "packages/locale/lang/es-ES.js",
          "packages/locale/lang/ja-JP.js",
          "packages/locale/lang/pt-BR.js",
          "packages/locale/lang/zh-CN.js",
          "packages/locale/lang/zh-TC.js",
          "packages/table/src/body.js",
          "packages/table/src/cell.js",
          "packages/table/src/methods.js",
          "packages/table/src/table.js",
          "types/v-x-e-table/renderer.d.ts"
        ],
        "message": "\u8c03\u6574\u6e32\u67d3\u5668",
        "before_after_code_files": [
          "packages/custom/src/panel.js||packages/custom/src/panel.js",
          "packages/edit/src/mixin.js||packages/edit/src/mixin.js",
          "packages/export/src/mixin.js||packages/export/src/mixin.js",
          "packages/filter/src/mixin.js||packages/filter/src/mixin.js",
          "packages/filter/src/panel.js||packages/filter/src/panel.js",
          "packages/form/src/form-config-item.js||packages/form/src/form-config-item.js",
          "packages/form/src/form-item.js||packages/form/src/form-item.js",
          "packages/form/src/form.js||packages/form/src/form.js",
          "packages/form/src/render.js||packages/form/src/render.js",
          "packages/form/src/util.js||packages/form/src/util.js",
          "packages/locale/lang/en-US.js||packages/locale/lang/en-US.js",
          "packages/locale/lang/es-ES.js||packages/locale/lang/es-ES.js",
          "packages/locale/lang/ja-JP.js||packages/locale/lang/ja-JP.js",
          "packages/locale/lang/pt-BR.js||packages/locale/lang/pt-BR.js",
          "packages/locale/lang/zh-CN.js||packages/locale/lang/zh-CN.js",
          "packages/locale/lang/zh-TC.js||packages/locale/lang/zh-TC.js",
          "packages/table/src/body.js||packages/table/src/body.js",
          "packages/table/src/cell.js||packages/table/src/cell.js",
          "packages/table/src/methods.js||packages/table/src/methods.js",
          "packages/table/src/table.js||packages/table/src/table.js",
          "types/v-x-e-table/renderer.d.ts||types/v-x-e-table/renderer.d.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [
            "packages/table/src/body.js||packages/table/src/body.js"
          ],
          "candidate": [
            "packages/table/src/body.js||packages/table/src/body.js"
          ]
        }
      },
      "candidate_diff": {
        "packages/custom/src/panel.js||packages/custom/src/panel.js": [
          "File: packages/custom/src/panel.js -> packages/custom/src/panel.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "238: const renderPopupPanel = (h, _vm) => {",
          "239:   const { _e, $xetable, customStore } = _vm",
          "240:   const { customOpts, customColumnList, columnOpts, isMaxFixedColumn } = $xetable",
          "242:   const trVNs = []",
          "243:   XEUtils.eachTree(customColumnList, (column, index, items, path, parent) => {",
          "244:     const isVisible = visibleMethod ? visibleMethod({ column }) : true",
          "",
          "[Removed Lines]",
          "241:   const { allowVisible, allowSort, allowFixed, allowResizable, checkMethod, visibleMethod } = customOpts",
          "",
          "[Added Lines]",
          "241:   const { modalOptions, allowVisible, allowSort, allowFixed, allowResizable, checkMethod, visibleMethod } = customOpts",
          "242:   const modalOpts = Object.assign({}, modalOptions)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "377:   return h('vxe-modal', {",
          "378:     key: 'popup',",
          "379:     props: {",
          "381:       value: customStore.visible,",
          "387:       mask: true,",
          "388:       lockView: true,",
          "389:       showFooter: true,",
          "",
          "[Removed Lines]",
          "380:       className: 'vxe-table-custom-popup-wrapper vxe-table--ignore-clear',",
          "382:       title: GlobalConfig.i18n('vxe.custom.cstmTitle'),",
          "383:       width: 700,",
          "384:       minWidth: 700,",
          "385:       height: 400,",
          "386:       minHeight: 400,",
          "",
          "[Added Lines]",
          "381:       className: ['vxe-table-custom-popup-wrapper', 'vxe-table--ignore-clear', modalOpts.className || ''].join(' '),",
          "383:       title: modalOpts.title || GlobalConfig.i18n('vxe.custom.cstmTitle'),",
          "384:       width: modalOpts.width || '50vw',",
          "385:       minWidth: modalOpts.minWidth || 700,",
          "386:       height: modalOpts.height || '50vh',",
          "387:       minHeight: modalOpts.minHeight || 400,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "618:           if (column.renderVisible && (!column.children || column.children.length)) {",
          "619:             if (column.renderResizeWidth !== column.renderWidth) {",
          "620:               column.resizeWidth = column.renderResizeWidth",
          "621:             }",
          "622:           }",
          "623:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "622:               column.renderWidth = column.renderResizeWidth",
          "",
          "---------------"
        ],
        "packages/edit/src/mixin.js||packages/edit/src/mixin.js": [
          "File: packages/edit/src/mixin.js -> packages/edit/src/mixin.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "615:         let { autofocus, autoselect } = editRender",
          "616:         let inputElem",
          "617:         if (!autofocus && compRender) {",
          "619:         }",
          "620:         if (!autoselect && compRender) {",
          "622:         }",
          "624:         if (XEUtils.isFunction(autofocus)) {",
          "",
          "[Removed Lines]",
          "618:           autofocus = compRender.autofocus",
          "621:           autoselect = compRender.autoselect",
          "",
          "[Added Lines]",
          "618:           autofocus = compRender.tableAutofocus || compRender.autofocus",
          "621:           autoselect = compRender.tableAutoSelect || compRender.autoselect",
          "",
          "---------------"
        ],
        "packages/export/src/mixin.js||packages/export/src/mixin.js": [
          "File: packages/export/src/mixin.js -> packages/export/src/mixin.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:           if (!bodyExportMethod && renderOpts && renderOpts.name) {",
          "106:             const compConf = VXETable.renderer.get(renderOpts.name)",
          "107:             if (compConf) {",
          "109:             }",
          "110:           }",
          "111:           if (!bodyExportMethod) {",
          "",
          "[Removed Lines]",
          "108:               bodyExportMethod = compConf.exportMethod || compConf.cellExportMethod",
          "",
          "[Added Lines]",
          "108:               bodyExportMethod = compConf.tableExportMethod || compConf.exportMethod || compConf.cellExportMethod",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "233:   if (!footLabelMethod && renderOpts && renderOpts.name) {",
          "234:     const compConf = VXETable.renderer.get(renderOpts.name)",
          "235:     if (compConf) {",
          "237:     }",
          "238:   }",
          "239:   if (!footLabelMethod) {",
          "",
          "[Removed Lines]",
          "236:       footLabelMethod = compConf.footerExportMethod || compConf.footerCellExportMethod",
          "",
          "[Added Lines]",
          "236:       footLabelMethod = compConf.tableFooterExportMethod || compConf.footerExportMethod || compConf.footerCellExportMethod",
          "",
          "---------------"
        ],
        "packages/filter/src/mixin.js||packages/filter/src/mixin.js": [
          "File: packages/filter/src/mixin.js -> packages/filter/src/mixin.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:         const { target: targetElem, pageX } = evnt",
          "59:         const { filters, filterMultiple, filterRender } = column",
          "60:         const compConf = filterRender ? VXETable.renderer.get(filterRender.name) : null",
          "62:         const { visibleWidth } = DomTools.getDomNode()",
          "63:         Object.assign(filterStore, {",
          "64:           args: params,",
          "",
          "[Removed Lines]",
          "61:         const filterRecoverMethod = column.filterRecoverMethod || (compConf ? compConf.filterRecoverMethod : null)",
          "",
          "[Added Lines]",
          "61:         const filterRecoverMethod = column.filterRecoverMethod || (compConf ? (compConf.tableFilterRecoverMethod || compConf.filterRecoverMethod) : null)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "206:         const { filters, filterRender } = column",
          "207:         if (filters) {",
          "208:           const compConf = filterRender ? VXETable.renderer.get(filterRender.name) : null",
          "210:           filters.forEach((item) => {",
          "211:             item._checked = false",
          "212:             item.checked = false",
          "",
          "[Removed Lines]",
          "209:           const filterResetMethod = column.filterResetMethod || (compConf ? compConf.filterResetMethod : null)",
          "",
          "[Added Lines]",
          "209:           const filterResetMethod = column.filterResetMethod || (compConf ? (compConf.tableFilterResetMethod || compConf.filterResetMethod) : null)",
          "",
          "---------------"
        ],
        "packages/filter/src/panel.js||packages/filter/src/panel.js": [
          "File: packages/filter/src/panel.js -> packages/filter/src/panel.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import GlobalConfig from '../../v-x-e-table/src/conf'",
          "2: import VXETable from '../../v-x-e-table'",
          "3: import UtilTools from '../../tools/utils'",
          "5: import { getSlotVNs } from '../../tools/vn'",
          "7: export default {",
          "",
          "[Removed Lines]",
          "4: import XEUtils from 'xe-utils'",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "20:     const { args, column } = filterStore",
          "21:     const filterRender = column ? column.filterRender : null",
          "22:     const compConf = filterRender ? VXETable.renderer.get(filterRender.name) : null",
          "24:     return h('div', {",
          "25:       class: [",
          "26:         'vxe-table--filter-wrapper',",
          "",
          "[Removed Lines]",
          "23:     const filterClassName = compConf ? compConf.filterClassName : ''",
          "",
          "[Added Lines]",
          "22:     const filterClassName = compConf ? (compConf.tableFilterClassName || compConf.filterClassName) : ''",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "41:       const { $parent: $xetable, filterStore } = this",
          "42:       const { args, column, multiple, maxHeight } = filterStore",
          "43:       const { slots } = column",
          "44:       if (slots && slots.filter) {",
          "45:         return [",
          "46:           h('div', {",
          "47:             class: 'vxe-table--filter-template'",
          "48:           }, $xetable.callSlot(slots.filter, Object.assign({ $panel: this, context: this }, args), h))",
          "49:         ]",
          "51:         return [",
          "52:           h('div', {",
          "53:             class: 'vxe-table--filter-template'",
          "55:         ]",
          "56:       }",
          "57:       const isAllChecked = multiple ? filterStore.isAllSelected : !filterStore.options.some(item => item._checked)",
          "",
          "[Removed Lines]",
          "50:       } else if (compConf && compConf.renderFilter) {",
          "54:           }, getSlotVNs(compConf.renderFilter.call($xetable, h, filterRender, Object.assign({ $panel: this, context: this }, args))))",
          "",
          "[Added Lines]",
          "43:       const rtFilter = compConf ? (compConf.renderTableFilter || compConf.renderFilter) : null",
          "50:       } else if (rtFilter) {",
          "54:           }, getSlotVNs(rtFilter.call($xetable, h, filterRender, Object.assign({ $panel: this, context: this }, args))))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "122:       const filterRender = column.filterRender",
          "123:       const compConf = filterRender ? VXETable.renderer.get(filterRender.name) : null",
          "124:       const isDisabled = !hasCheckOption && !filterStore.isAllSelected && !filterStore.isIndeterminate",
          "126:         h('div', {",
          "127:           class: 'vxe-table--filter-footer'",
          "128:         }, [",
          "",
          "[Removed Lines]",
          "125:       return multiple && (!compConf || (XEUtils.isBoolean(compConf.showFilterFooter) ? compConf.showFilterFooter !== false : compConf.isFooter !== false)) ? [",
          "",
          "[Added Lines]",
          "125:       return multiple(compConf ? !(compConf.showTableFilterFooter === false || compConf.showFilterFooter === false || compConf.isFooter === false) : true) ? [",
          "",
          "---------------"
        ],
        "packages/form/src/form-config-item.js||packages/form/src/form-config-item.js": [
          "File: packages/form/src/form-config-item.js -> packages/form/src/form-config-item.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:     const { rules, data, collapseAll, validOpts, titleAlign: allTitleAlign, titleWidth: allTitleWidth, titleColon: allTitleColon, titleAsterisk: allTitleAsterisk, titleOverflow: allTitleOverflow, vertical: allVertical } = $xeform",
          "31:     const { slots, title, folding, visible, field, collapseNode, itemRender, showError, errRule, className, titleOverflow, vertical, children, showTitle, contentClassName, contentStyle, titleClassName, titleStyle } = item",
          "32:     const compConf = isEnableConf(itemRender) ? VXETable.renderer.get(itemRender.name) : null",
          "39:     const span = item.span || $xeform.span",
          "40:     const align = item.align || $xeform.align",
          "41:     const titleAlign = XEUtils.eqNull(item.titleAlign) ? allTitleAlign : item.titleAlign",
          "",
          "[Removed Lines]",
          "33:     const itemClassName = compConf ? compConf.itemClassName : ''",
          "34:     const itemStyle = compConf ? compConf.itemStyle : null",
          "35:     const itemContentClassName = compConf ? compConf.itemContentClassName : ''",
          "36:     const itemContentStyle = compConf ? compConf.itemContentStyle : null",
          "37:     const itemTitleClassName = compConf ? compConf.itemTitleClassName : ''",
          "38:     const itemTitleStyle = compConf ? compConf.itemTitleStyle : null",
          "",
          "[Added Lines]",
          "33:     const itemClassName = compConf ? (compConf.formItemClassName || compConf.itemClassName) : ''",
          "34:     const itemStyle = compConf ? (compConf.formItemStyle || compConf.itemStyle) : null",
          "35:     const itemContentClassName = compConf ? (compConf.formItemContentClassName || compConf.itemContentClassName) : ''",
          "36:     const itemContentStyle = compConf ? (compConf.formItemContentStyle || compConf.itemContentStyle) : null",
          "37:     const itemTitleClassName = compConf ? (compConf.formItemTitleClassName || compConf.itemTitleClassName) : ''",
          "38:     const itemTitleStyle = compConf ? (compConf.formItemTitleStyle || compConf.itemTitleStyle) : null",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "75:       }",
          "76:     }",
          "77:     let contentVNs = []",
          "78:     if (slots && slots.default) {",
          "79:       contentVNs = $xeform.callSlot(slots.default, params, h)",
          "82:     } else if (compConf && compConf.renderItem) {",
          "83:       contentVNs = getSlotVNs(compConf.renderItem.call($xeform, h, itemRender, params))",
          "84:     } else if (field) {",
          "",
          "[Removed Lines]",
          "80:     } else if (compConf && compConf.renderItemContent) {",
          "81:       contentVNs = getSlotVNs(compConf.renderItemContent.call($xeform, h, itemRender, params))",
          "",
          "[Added Lines]",
          "78:     const rfiContent = compConf ? (compConf.renderFormItemContent || compConf.renderItemContent) : null",
          "81:     } else if (rfiContent) {",
          "82:       contentVNs = getSlotVNs(rfiContent.call($xeform, h, itemRender, params))",
          "",
          "---------------"
        ],
        "packages/form/src/form-item.js||packages/form/src/form-item.js": [
          "File: packages/form/src/form-item.js -> packages/form/src/form-item.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:   const { _e, rules, data, collapseAll, validOpts, titleAlign: allTitleAlign, titleWidth: allTitleWidth, titleColon: allTitleColon, titleAsterisk: allTitleAsterisk, titleOverflow: allTitleOverflow, vertical: allVertical } = _vm",
          "68:   const { title, folding, visible, field, collapseNode, itemRender, showError, errRule, className, titleOverflow, vertical, showTitle, contentClassName, contentStyle, titleClassName, titleStyle } = item",
          "69:   const compConf = isEnableConf(itemRender) ? VXETable.renderer.get(itemRender.name) : null",
          "76:   const span = item.span || _vm.span",
          "77:   const align = item.align || _vm.align",
          "78:   const titleAlign = XEUtils.eqNull(item.titleAlign) ? allTitleAlign : item.titleAlign",
          "",
          "[Removed Lines]",
          "70:   const itemClassName = compConf ? compConf.itemClassName : ''",
          "71:   const itemStyle = compConf ? compConf.itemStyle : null",
          "72:   const itemContentClassName = compConf ? compConf.itemContentClassName : ''",
          "73:   const itemContentStyle = compConf ? compConf.itemContentStyle : null",
          "74:   const itemTitleClassName = compConf ? compConf.itemTitleClassName : ''",
          "75:   const itemTitleStyle = compConf ? compConf.itemTitleStyle : null",
          "",
          "[Added Lines]",
          "70:   const itemClassName = compConf ? (compConf.formItemClassName || compConf.itemClassName) : ''",
          "71:   const itemStyle = compConf ? (compConf.formItemStyle || compConf.itemStyle) : null",
          "72:   const itemContentClassName = compConf ? (compConf.formItemContentClassName || compConf.itemContentClassName) : ''",
          "73:   const itemContentStyle = compConf ? (compConf.formItemContentStyle || compConf.itemContentStyle) : null",
          "74:   const itemTitleClassName = compConf ? (compConf.formItemTitleClassName || compConf.itemTitleClassName) : ''",
          "75:   const itemTitleStyle = compConf ? (compConf.formItemTitleStyle || compConf.itemTitleStyle) : null",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "97:     }",
          "98:   }",
          "99:   let contentVNs = []",
          "100:   if (slots && slots.default) {",
          "101:     contentVNs = _vm.callSlot(slots.default, params, h)",
          "104:   } else if (compConf && compConf.renderItem) {",
          "105:     contentVNs = getSlotVNs(compConf.renderItem.call(_vm, h, itemRender, params))",
          "106:   } else if (field) {",
          "",
          "[Removed Lines]",
          "102:   } else if (compConf && compConf.renderItemContent) {",
          "103:     contentVNs = getSlotVNs(compConf.renderItemContent.call(_vm, h, itemRender, params))",
          "",
          "[Added Lines]",
          "100:   const rfiContent = compConf ? (compConf.renderFormItemContent || compConf.renderItemContent) : null",
          "103:   } else if (rfiContent) {",
          "104:     contentVNs = getSlotVNs(rfiContent.call(_vm, h, itemRender, params))",
          "",
          "---------------"
        ],
        "packages/form/src/form.js||packages/form/src/form.js": [
          "File: packages/form/src/form.js -> packages/form/src/form.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "271:           const { field, resetValue, itemRender } = item",
          "272:           if (isEnableConf(itemRender)) {",
          "273:             const compConf = VXETable.renderer.get(itemRender.name)",
          "276:             } else if (field) {",
          "277:               XEUtils.set(data, field, resetValue === null ? getResetValue(XEUtils.get(data, field), undefined) : XEUtils.clone(resetValue, true))",
          "278:             }",
          "",
          "[Removed Lines]",
          "274:             if (compConf && compConf.itemResetMethod) {",
          "275:               compConf.itemResetMethod({ data, field, property: field, item, $form: this, $grid: this.xegrid })",
          "",
          "[Added Lines]",
          "274:             const fiResetMethod = compConf ? (compConf.formItemResetMethod || compConf.itemResetMethod) : null",
          "275:             if (compConf && fiResetMethod) {",
          "276:               fiResetMethod({ data, field, property: field, item, $form: this, $grid: this.xegrid })",
          "",
          "---------------"
        ],
        "packages/form/src/render.js||packages/form/src/render.js": [
          "File: packages/form/src/render.js -> packages/form/src/render.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:         : renderPrefixIcon(h, titlePrefix)",
          "46:     )",
          "47:   }",
          "48:   titVNs.push(",
          "49:     h('span', {",
          "50:       class: 'vxe-form--item-title-label'",
          "52:   )",
          "53:   contVNs.push(",
          "54:     h('div', {",
          "",
          "[Removed Lines]",
          "51:     }, compConf && compConf.renderItemTitle ? getSlotVNs(compConf.renderItemTitle(itemRender, params)) : (slots && slots.title ? _vm.callSlot(slots.title, params, h) : getFuncText(item.title)))",
          "",
          "[Added Lines]",
          "48:   const rfiTitle = compConf ? (compConf.renderFormItemTitle || compConf.renderItemTitle) : null",
          "52:     }, rfiTitle ? getSlotVNs(rfiTitle(itemRender, params)) : (slots && slots.title ? _vm.callSlot(slots.title, params, h) : getFuncText(item.title)))",
          "",
          "---------------"
        ],
        "packages/form/src/util.js||packages/form/src/util.js": [
          "File: packages/form/src/util.js -> packages/form/src/util.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:     })",
          "40:     if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "41:       const compConf = item.itemRender ? VXETable.renderer.get(item.itemRender.name) : null",
          "44:       }",
          "45:     }",
          "46:   }",
          "",
          "[Removed Lines]",
          "42:       if (compConf && !compConf.renderItemContent && compConf.renderItem) {",
          "43:         warnLog('vxe.error.delProp', ['item-render.renderItem', 'item-render.renderItemContent'])",
          "",
          "[Added Lines]",
          "42:       if (compConf && !(compConf.renderFormItemContent || compConf.renderItemContent) && compConf.renderItem) {",
          "43:         warnLog('vxe.error.delProp', ['item-render.renderItem', 'item-render.renderFormItemContent'])",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "77:     return visible",
          "78:   }",
          "79:   const compConf = isEnableConf(itemRender) ? VXETable.renderer.get(itemRender.name) : null",
          "82:   }",
          "83:   if (!visibleMethod) {",
          "84:     return true",
          "",
          "[Removed Lines]",
          "80:   if (!visibleMethod && compConf && compConf.itemVisibleMethod) {",
          "81:     visibleMethod = compConf.itemVisibleMethod",
          "",
          "[Added Lines]",
          "80:   const fiVisibleMethod = compConf ? (compConf.formItemVisibleMethod || compConf.itemVisibleMethod) : null",
          "81:   if (!visibleMethod && fiVisibleMethod) {",
          "82:     visibleMethod = fiVisibleMethod",
          "",
          "---------------"
        ],
        "packages/locale/lang/en-US.js||packages/locale/lang/en-US.js": [
          "File: packages/locale/lang/en-US.js -> packages/locale/lang/en-US.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:     table: {",
          "46:       emptyText: 'No Data',",
          "47:       allTitle: 'Select all / cancel',",
          "49:       confirmFilter: 'Confirm',",
          "50:       resetFilter: 'Reset',",
          "51:       allFilter: 'All',",
          "",
          "[Removed Lines]",
          "48:       seqTitle: '#',",
          "",
          "[Added Lines]",
          "48:       seqTitle: 'S/N',",
          "",
          "---------------"
        ],
        "packages/locale/lang/es-ES.js||packages/locale/lang/es-ES.js": [
          "File: packages/locale/lang/es-ES.js -> packages/locale/lang/es-ES.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:     table: {",
          "46:       emptyText: 'No hay datos',",
          "47:       allTitle: 'Seleccionar todo / cancelar',",
          "49:       confirmFilter: 'Confirmar',",
          "50:       resetFilter: 'Restablecer',",
          "51:       allFilter: 'Todo',",
          "",
          "[Removed Lines]",
          "48:       seqTitle: '#',",
          "",
          "[Added Lines]",
          "48:       seqTitle: 'S/N',",
          "",
          "---------------"
        ],
        "packages/locale/lang/ja-JP.js||packages/locale/lang/ja-JP.js": [
          "File: packages/locale/lang/ja-JP.js -> packages/locale/lang/ja-JP.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:     table: {",
          "46:       emptyText: '\u30c7\u30fc\u30bf\u304c\u3042\u308a\u307e\u305b\u3093',",
          "47:       allTitle: '\u5168\u3066\u9078\u629e/\u53d6\u6d88',",
          "49:       confirmFilter: 'OK',",
          "50:       resetFilter: '\u30ea\u30bb\u30c3\u30c8',",
          "51:       allFilter: '\u5168\u3066',",
          "",
          "[Removed Lines]",
          "48:       seqTitle: '#',",
          "",
          "[Added Lines]",
          "48:       seqTitle: 'S/N',",
          "",
          "---------------"
        ],
        "packages/locale/lang/pt-BR.js||packages/locale/lang/pt-BR.js": [
          "File: packages/locale/lang/pt-BR.js -> packages/locale/lang/pt-BR.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:     table: {",
          "46:       emptyText: 'Sem dados',",
          "47:       allTitle: 'Selecionar todos / cancelar',",
          "49:       confirmFilter: 'Confirmar',",
          "50:       resetFilter: 'Redefinir',",
          "51:       allFilter: 'Todos',",
          "",
          "[Removed Lines]",
          "48:       seqTitle: '#',",
          "",
          "[Added Lines]",
          "48:       seqTitle: 'S/N',",
          "",
          "---------------"
        ],
        "packages/locale/lang/zh-CN.js||packages/locale/lang/zh-CN.js": [
          "File: packages/locale/lang/zh-CN.js -> packages/locale/lang/zh-CN.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:     table: {",
          "46:       emptyText: '\u6682\u65e0\u6570\u636e',",
          "47:       allTitle: '\u5168\u9009/\u53d6\u6d88',",
          "49:       confirmFilter: '\u7b5b\u9009',",
          "50:       resetFilter: '\u91cd\u7f6e',",
          "51:       allFilter: '\u5168\u90e8',",
          "",
          "[Removed Lines]",
          "48:       seqTitle: '#',",
          "",
          "[Added Lines]",
          "48:       seqTitle: '\u5e8f\u53f7',",
          "",
          "---------------"
        ],
        "packages/locale/lang/zh-TC.js||packages/locale/lang/zh-TC.js": [
          "File: packages/locale/lang/zh-TC.js -> packages/locale/lang/zh-TC.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:     table: {",
          "46:       emptyText: '\u66ab\u7121\u8cc7\u6599',",
          "47:       allTitle: '\u5168\u9078/\u53d6\u6d88',",
          "49:       confirmFilter: '\u7be9\u9078',",
          "50:       resetFilter: '\u91cd\u7f6e',",
          "51:       allFilter: '\u5168\u90e8',",
          "",
          "[Removed Lines]",
          "48:       seqTitle: '#',",
          "",
          "[Added Lines]",
          "48:       seqTitle: '\u5e8f\u865f',",
          "",
          "---------------"
        ],
        "packages/table/src/body.js||packages/table/src/body.js": [
          "File: packages/table/src/body.js -> packages/table/src/body.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:   const { height: rowHeight } = rowOpts",
          "95:   const renderOpts = editRender || cellRender",
          "96:   const compConf = renderOpts ? VXETable.renderer.get(renderOpts.name) : null",
          "99:   const showAllTip = tooltipOpts.showAll || tooltipOpts.enabled",
          "100:   const columnIndex = $xetable.getColumnIndex(column)",
          "101:   const _columnIndex = $xetable.getVTColumnIndex(column)",
          "",
          "[Removed Lines]",
          "97:   const compCellClassName = compConf ? compConf.cellClassName : ''",
          "98:   const compCellStyle = compConf ? compConf.cellStyle : ''",
          "",
          "[Added Lines]",
          "97:   const compCellClassName = compConf ? (compConf.tableCellClassName || compConf.cellClassName) : ''",
          "98:   const compCellStyle = compConf ? (compConf.tableCellStyle || compConf.cellStyle) : ''",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "561:       emptyContent = $scopedSlots.empty.call(this, { $table: $xetable }, h)",
          "562:     } else {",
          "563:       const compConf = emptyOpts.name ? VXETable.renderer.get(emptyOpts.name) : null",
          "565:       if (renderTableEmptyView) {",
          "566:         emptyContent = getSlotVNs(renderTableEmptyView.call(this, h, emptyOpts, { $table: $xetable }))",
          "567:       } else {",
          "",
          "[Removed Lines]",
          "564:       const renderTableEmptyView = compConf ? compConf.renderTableEmptyView || compConf.renderEmpty : null",
          "",
          "[Added Lines]",
          "564:       const renderTableEmptyView = compConf ? (compConf.renderTableEmptyView || compConf.renderEmpty) : null",
          "",
          "---------------"
        ],
        "packages/table/src/cell.js||packages/table/src/cell.js": [
          "File: packages/table/src/cell.js -> packages/table/src/cell.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:   }",
          "97:   if (renderOpts) {",
          "98:     const compConf = VXETable.renderer.get(renderOpts.name)",
          "101:     }",
          "102:   }",
          "",
          "[Removed Lines]",
          "99:     if (compConf && compConf.renderFooter) {",
          "100:       return getSlotVNs(compConf.renderFooter.call($table, h, renderOpts, params))",
          "",
          "[Added Lines]",
          "99:     const rtFooter = compConf ? (compConf.renderTableFooter || compConf.renderFooter) : null",
          "100:     if (rtFooter) {",
          "101:       return getSlotVNs(rtFooter.call($table, h, renderOpts, params))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "174:     }",
          "175:     if (renderOpts) {",
          "176:       const compConf = VXETable.renderer.get(renderOpts.name)",
          "179:       }",
          "180:     }",
          "181:     return renderTitleContent(h, params, UtilTools.formatText(column.getTitle(), 1))",
          "",
          "[Removed Lines]",
          "177:       if (compConf && compConf.renderHeader) {",
          "178:         return getSlotVNs(renderTitleContent(h, params, compConf.renderHeader.call($table, h, renderOpts, params)))",
          "",
          "[Added Lines]",
          "178:       const rtHeader = compConf ? (compConf.renderTableHeader || compConf.renderHeader) : null",
          "179:       if (rtHeader) {",
          "180:         return getSlotVNs(renderTitleContent(h, params, rtHeader.call($table, h, renderOpts, params)))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "191:       return $table.callSlot(slots.default, params, h)",
          "192:     }",
          "193:     if (renderOpts) {",
          "195:       const compConf = VXETable.renderer.get(renderOpts.name)",
          "198:       }",
          "199:     }",
          "200:     const cellValue = $table.getCellLabel(row, column)",
          "",
          "[Removed Lines]",
          "194:       const funName = editRender ? 'renderCell' : 'renderDefault'",
          "196:       if (compConf && compConf[funName]) {",
          "197:         return getSlotVNs(compConf[funName].call($table, h, renderOpts, Object.assign({ $type: editRender ? 'edit' : 'cell' }, params)))",
          "",
          "[Added Lines]",
          "197:       const rtDefault = compConf ? (compConf.renderTableDefault || compConf.renderDefault) : null",
          "198:       const rtCell = compConf ? (compConf.renderTableCell || compConf.renderCell) : null",
          "199:       const renderFn = editRender ? rtCell : rtDefault",
          "200:       if (renderFn) {",
          "201:         return getSlotVNs(renderFn.call($table, h, renderOpts, Object.assign({ $type: editRender ? 'edit' : 'cell' }, params)))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "610:     }",
          "611:     if (contentRender) {",
          "612:       const compConf = VXETable.renderer.get(contentRender.name)",
          "615:       }",
          "616:     }",
          "617:     return []",
          "",
          "[Removed Lines]",
          "613:       if (compConf && compConf.renderExpand) {",
          "614:         return getSlotVNs(compConf.renderExpand.call($table, h, contentRender, params))",
          "",
          "[Added Lines]",
          "617:       const rtExpand = compConf ? (compConf.renderTableExpand || compConf.renderExpand) : null",
          "618:       if (rtExpand) {",
          "619:         return getSlotVNs(rtExpand.call($table, h, contentRender, params))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "775:     const { $table, column } = params",
          "776:     const { slots, editRender, formatter } = column",
          "777:     const compConf = VXETable.renderer.get(editRender.name)",
          "778:     if (isEdit) {",
          "779:       if (slots && slots.edit) {",
          "780:         return $table.callSlot(slots.edit, params, h)",
          "781:       }",
          "784:       }",
          "785:       return []",
          "786:     }",
          "",
          "[Removed Lines]",
          "782:       if (compConf && compConf.renderEdit) {",
          "783:         return getSlotVNs(compConf.renderEdit.call($table, h, editRender, Object.assign({ $type: 'edit' }, params)))",
          "",
          "[Added Lines]",
          "783:     const rtEdit = compConf ? (compConf.renderTableEdit || compConf.renderEdit) : null",
          "788:       if (rtEdit) {",
          "789:         return getSlotVNs(rtEdit.call($table, h, editRender, Object.assign({ $type: 'edit' }, params)))",
          "",
          "---------------"
        ],
        "packages/table/src/methods.js||packages/table/src/methods.js": [
          "File: packages/table/src/methods.js -> packages/table/src/methods.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1287:           if (valueList.length && !allRemoteFilter) {",
          "1288:             const { filterMethod, filterRender, field } = column",
          "1289:             const compConf = filterRender ? VXETable.renderer.get(filterRender.name) : null",
          "1292:             const cellValue = UtilTools.getCellValue(row, column)",
          "1293:             if (filterMethod) {",
          "1294:               return itemList.some((item) => filterMethod({ value: item.value, option: item, cellValue, row, column, $table: this }))",
          "",
          "[Removed Lines]",
          "1290:             const compFilterMethod = compConf && compConf.renderFilter ? compConf.filterMethod : null",
          "1291:             const defaultFilterMethod = compConf ? compConf.defaultFilterMethod : null",
          "",
          "[Added Lines]",
          "1290:             const compFilterMethod = compConf && compConf.renderFilter ? (compConf.tableFilterMethod || compConf.filterMethod) : null",
          "1291:             const defaultFilterMethod = compConf ? (compConf.defaultTableFilterMethod || compConf.defaultFilterMethod) : null",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1620:         this.clearCopyCellArea()",
          "1621:       }",
          "1622:     }",
          "1625:     this.analyColumnWidth()",
          "1626:     return this.refreshColumn(true)",
          "1627:   },",
          "",
          "[Removed Lines]",
          "1623:     this.saveCustomVisible()",
          "1624:     this.saveCustomSort()",
          "",
          "[Added Lines]",
          "1623:     this.saveCustomStore()",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1854:     })",
          "1855:     return storeData",
          "1856:   },",
          "1857:   saveCustomResizable (isReset) {",
          "1858:     const { id, collectColumn, customConfig, customOpts } = this",
          "1859:     const { storage } = customOpts",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1856:   saveCustomStore () {",
          "1857:     this.saveCustomVisible()",
          "1858:     this.saveCustomSort()",
          "1859:     this.saveCustomFixed()",
          "1860:     this.saveCustomResizable()",
          "1861:   },",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3394:   },",
          "3395:   handleToggleCheckRowEvent (evnt, params) {",
          "3396:     const { selectCheckboxMaps, checkboxOpts } = this",
          "3398:     const { row } = params",
          "3399:     let value = false",
          "3400:     if (checkField) {",
          "3401:       value = !XEUtils.get(row, checkField)",
          "",
          "[Removed Lines]",
          "3397:     const { checkField } = checkboxOpts",
          "",
          "[Added Lines]",
          "3402:     const { checkField, trigger } = checkboxOpts",
          "3404:     if (trigger === 'manual') {",
          "3405:       return",
          "3406:     }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3410:   },",
          "3411:   triggerCheckRowEvent (evnt, params, value) {",
          "3412:     const { checkboxOpts, afterFullData } = this",
          "3414:     const { row } = params",
          "3415:     if (checkboxOpts.isShiftKey && evnt.shiftKey && !this.treeConfig) {",
          "3416:       const checkboxRecords = this.getCheckboxRecords()",
          "3417:       if (checkboxRecords.length) {",
          "",
          "[Removed Lines]",
          "3413:     const { checkMethod } = checkboxOpts",
          "",
          "[Added Lines]",
          "3421:     const { checkMethod, trigger } = checkboxOpts",
          "3423:     if (trigger === 'manual') {",
          "3424:       return",
          "3425:     }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3771:       }",
          "3772:     }",
          "3773:   },",
          "3777:   triggerCheckAllEvent (evnt, value) {",
          "3780:   },",
          "3784:   toggleAllCheckboxRow () {",
          "3786:     return this.$nextTick()",
          "3787:   },",
          "",
          "[Removed Lines]",
          "3778:     this.handleCheckedAllCheckboxRow(value)",
          "3779:     this.emitEvent('checkbox-all', { records: this.getCheckboxRecords(), reserves: this.getCheckboxReserveRecords(), indeterminates: this.getCheckboxIndeterminateRecords(), checked: value }, evnt)",
          "3785:     this.triggerCheckAllEvent(null, !this.isAllSelected)",
          "",
          "[Added Lines]",
          "3785:   handleCheckAllEvent (evnt, value) {",
          "3786:     this.handleCheckedAllCheckboxRow(value)",
          "3787:     if (evnt) {",
          "3788:       this.emitEvent('checkbox-all', { records: this.getCheckboxRecords(), reserves: this.getCheckboxReserveRecords(), indeterminates: this.getCheckboxIndeterminateRecords(), checked: value }, evnt)",
          "3789:     }",
          "3790:   },",
          "3795:     const { checkboxOpts } = this",
          "3796:     const { trigger } = checkboxOpts",
          "3797:     if (trigger === 'manual') {",
          "3798:       return",
          "3799:     }",
          "3800:     this.handleCheckAllEvent(evnt, value)",
          "3806:     this.handleCheckAllEvent(null, !this.isAllSelected)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3838:   triggerRadioRowEvent (evnt, params) {",
          "3839:     const { selectRadioRow: oldValue, radioOpts } = this",
          "3840:     const { row } = params",
          "3841:     let newValue = row",
          "3842:     let isChange = oldValue !== newValue",
          "3843:     if (isChange) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3862:     const { trigger } = radioOpts",
          "3863:     if (trigger === 'manual') {",
          "3864:       return",
          "3865:     }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "4413:   triggerRowExpandEvent (evnt, params) {",
          "4414:     const { expandOpts, rowExpandLazyLoadedMaps, expandColumn: column } = this",
          "4415:     const { row } = params",
          "4417:     const rowid = getRowid(this, row)",
          "4418:     if (!lazy || !rowExpandLazyLoadedMaps[rowid]) {",
          "4419:       const expanded = !this.isRowExpandByRow(row)",
          "",
          "[Removed Lines]",
          "4416:     const { lazy } = expandOpts",
          "",
          "[Added Lines]",
          "4441:     const { lazy, trigger } = expandOpts",
          "4442:     if (trigger === 'manual') {",
          "4443:       return",
          "4444:     }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "4688:   triggerTreeExpandEvent (evnt, params) {",
          "4689:     const { treeOpts, treeExpandLazyLoadedMaps } = this",
          "4690:     const { row, column } = params",
          "4692:     const rowid = getRowid(this, row)",
          "4693:     if (!lazy || !treeExpandLazyLoadedMaps[rowid]) {",
          "4694:       const expanded = !this.isTreeExpandByRow(row)",
          "",
          "[Removed Lines]",
          "4691:     const { lazy } = treeOpts",
          "",
          "[Added Lines]",
          "4719:     const { lazy, trigger } = treeOpts",
          "4720:     if (trigger === 'manual') {",
          "4721:       return",
          "4722:     }",
          "",
          "---------------"
        ],
        "packages/table/src/table.js||packages/table/src/table.js": [
          "File: packages/table/src/table.js -> packages/table/src/table.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:     emptyContent = $scopedSlots.empty.call(_vm, params, h)",
          "71:   } else {",
          "72:     const compConf = emptyOpts.name ? VXETable.renderer.get(emptyOpts.name) : null",
          "74:     if (renderTableEmptyView) {",
          "75:       emptyContent = getSlotVNs(renderTableEmptyView.call(_vm, h, emptyOpts, params))",
          "76:     } else {",
          "",
          "[Removed Lines]",
          "73:     const renderTableEmptyView = compConf ? compConf.renderTableEmptyView || compConf.renderEmpty : null",
          "",
          "[Added Lines]",
          "73:     const renderTableEmptyView = compConf ? (compConf.renderTableEmptyView || compConf.renderEmpty) : null",
          "",
          "---------------"
        ],
        "types/v-x-e-table/renderer.d.ts||types/v-x-e-table/renderer.d.ts": [
          "File: types/v-x-e-table/renderer.d.ts -> types/v-x-e-table/renderer.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:   isFooter?: boolean;",
          "37:   filterClassName?: string | ((params: ColumnFilterRenderParams) => string | VNodeClassName)",
          "38:   showFilterFooter?: boolean;",
          "39:   renderFilter?(h: CreateElement, renderOpts: ColumnFilterRenderOptions, params: ColumnFilterRenderParams): SlotVNodeType | SlotVNodeType[];",
          "40:   filterMethod?(params: ColumnFilterMethodParams): boolean;",
          "41:   filterResetMethod?(params: ColumnFilterResetParams): void;",
          "43:   defaultFilterMethod?(params: ColumnFilterMethodParams): boolean;",
          "46:   cellClassName?: string | ((params: ColumnCellRenderParams | ColumnEditRenderParams) => string | VNodeClassName)",
          "47:   cellStyle?: VNodeStyle | ((params: ColumnCellRenderParams | ColumnEditRenderParams) => VNodeStyle)",
          "48:   renderHeader?(h: CreateElement, renderOpts: ColumnCellRenderOptions | ColumnEditRenderOptions, params: ColumnCellRenderParams | ColumnEditRenderParams): SlotVNodeType | SlotVNodeType[];",
          "49:   renderDefault?(h: CreateElement, renderOpts: ColumnCellRenderOptions | ColumnEditRenderOptions, params: ColumnCellRenderParams | ColumnEditRenderParams): SlotVNodeType | SlotVNodeType[];",
          "50:   renderFooter?(h: CreateElement, renderOpts: ColumnCellRenderOptions | ColumnEditRenderOptions, params: any): SlotVNodeType | SlotVNodeType[];",
          "51:   exportMethod?(params: ColumnExportCellRenderParams): string;",
          "52:   footerExportMethod?(params: ColumnExportFooterRenderParams): string;",
          "55:   autofocus?: string | ((params: ColumnCellRenderParams | ColumnEditRenderParams) => HTMLElement | null);",
          "56:   renderEdit?(h: CreateElement, renderOpts: ColumnCellRenderOptions | ColumnEditRenderOptions, params: ColumnCellRenderParams | ColumnEditRenderParams): SlotVNodeType | SlotVNodeType[];",
          "57:   renderCell?(h: CreateElement, renderOpts: ColumnCellRenderOptions | ColumnEditRenderOptions, params: ColumnCellRenderParams | ColumnEditRenderParams): SlotVNodeType | SlotVNodeType[];",
          "60:   renderExpand?(h: CreateElement, renderOpts: ColumnContentRenderOptions, params: ColumnCellRenderParams | ColumnEditRenderParams): SlotVNodeType | SlotVNodeType[];",
          "63:   toolbarButtonClassName?: string | ((params: ToolbarButtonRenderParams) => string | VNodeClassName)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41:   tableFilterClassName?: string | ((params: ColumnFilterRenderParams) => string | VNodeClassName)",
          "48:   showTableFilterFooter?: boolean;",
          "55:   renderTableFilter?(h: CreateElement, renderOpts: ColumnFilterRenderOptions, params: ColumnFilterRenderParams): SlotVNodeType | SlotVNodeType[];",
          "62:   tableFilterMethod?(params: ColumnFilterMethodParams): boolean;",
          "69:   tableFilterResetMethod?(params: ColumnFilterResetParams): void;",
          "76:   defaultTableFilterMethod?(params: ColumnFilterMethodParams): boolean;",
          "83:   tableCellClassName?: string | ((params: ColumnCellRenderParams | ColumnEditRenderParams) => string | VNodeClassName)",
          "90:   tableCellStyle?: VNodeStyle | ((params: ColumnCellRenderParams | ColumnEditRenderParams) => VNodeStyle)",
          "97:   renderTableHeader?(h: CreateElement, renderOpts: ColumnCellRenderOptions | ColumnEditRenderOptions, params: ColumnCellRenderParams | ColumnEditRenderParams): SlotVNodeType | SlotVNodeType[];",
          "104:   renderTableDefault?(h: CreateElement, renderOpts: ColumnCellRenderOptions | ColumnEditRenderOptions, params: ColumnCellRenderParams | ColumnEditRenderParams): SlotVNodeType | SlotVNodeType[];",
          "111:   renderTableFooter?(h: CreateElement, renderOpts: ColumnCellRenderOptions | ColumnEditRenderOptions, params: any): SlotVNodeType | SlotVNodeType[];",
          "118:   tableExportMethod?(params: ColumnExportCellRenderParams): string;",
          "125:   tableFooterExportMethod?(params: ColumnExportFooterRenderParams): string;",
          "132:   tableAutofocus?: string | ((params: ColumnCellRenderParams | ColumnEditRenderParams) => HTMLElement | null);",
          "139:   renderTableEdit?(h: CreateElement, renderOpts: ColumnCellRenderOptions | ColumnEditRenderOptions, params: ColumnCellRenderParams | ColumnEditRenderParams): SlotVNodeType | SlotVNodeType[];",
          "146:   renderTableCell?(h: CreateElement, renderOpts: ColumnCellRenderOptions | ColumnEditRenderOptions, params: ColumnCellRenderParams | ColumnEditRenderParams): SlotVNodeType | SlotVNodeType[];",
          "153:   renderTableExpand?(h: CreateElement, renderOpts: ColumnContentRenderOptions, params: ColumnCellRenderParams | ColumnEditRenderParams): SlotVNodeType | SlotVNodeType[];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "65:   toolbarToolClassName?: string | ((params: ToolbarToolRenderParams) => string | VNodeClassName)",
          "66:   renderToolbarTool?(h: CreateElement, renderOpts: ToolbarToolRenderOptions, params: ToolbarToolRenderParams): SlotVNodeType | SlotVNodeType[];",
          "69:   itemClassName?: string | ((params: FormItemRenderParams) => string | VNodeClassName)",
          "70:   itemStyle?: VNodeStyle | ((params: FormItemRenderParams) => VNodeStyle)",
          "71:   itemContentClassName?: string | ((params: FormItemRenderParams) => string | VNodeClassName)",
          "72:   itemContentStyle?: VNodeStyle | ((params: FormItemRenderParams) => VNodeStyle)",
          "73:   itemTitleClassName?: string | ((params: FormItemRenderParams) => string | VNodeClassName)",
          "74:   itemTitleStyle?: VNodeStyle | ((params: FormItemRenderParams) => VNodeStyle)",
          "75:   renderItemTitle?(h: CreateElement, renderOpts: FormItemRenderOptions, params: FormItemRenderParams): SlotVNodeType | SlotVNodeType[];",
          "76:   renderItemContent?(h: CreateElement, renderOpts: FormItemRenderOptions, params: FormItemRenderParams): SlotVNodeType | SlotVNodeType[];",
          "77:   itemVisibleMethod?(params: FormItemVisibleParams): boolean;",
          "87:   renderEmpty?(h: CreateElement, renderOpts: TableEmptyRender, params: EmptyRenderParams): SlotVNodeType | SlotVNodeType[];",
          "89:   [key: string]: any;",
          "90: }",
          "",
          "[Removed Lines]",
          "78:   itemResetMethod?(params: FormItemResetParams): void;",
          "81:   renderTableEmptyView?(h: CreateElement, renderOpts: TableEmptyRender, params: EmptyRenderParams): SlotVNodeType | SlotVNodeType[];",
          "",
          "[Added Lines]",
          "166:   formItemClassName?: string | ((params: FormItemRenderParams) => string | VNodeClassName)",
          "173:   formItemStyle?: VNodeStyle | ((params: FormItemRenderParams) => VNodeStyle)",
          "180:   formItemContentClassName?: string | ((params: FormItemRenderParams) => string | VNodeClassName)",
          "187:   formItemContentStyle?: VNodeStyle | ((params: FormItemRenderParams) => VNodeStyle)",
          "194:   formItemTitleClassName?: string | ((params: FormItemRenderParams) => string | VNodeClassName)",
          "201:   formItemTitleStyle?: VNodeStyle | ((params: FormItemRenderParams) => VNodeStyle)",
          "208:   renderFormItemTitle?(h: CreateElement, renderOpts: FormItemRenderOptions, params: FormItemRenderParams): SlotVNodeType | SlotVNodeType[];",
          "215:   renderFormItemContent?(h: CreateElement, renderOpts: FormItemRenderOptions, params: FormItemRenderParams): SlotVNodeType | SlotVNodeType[];",
          "222:   formItemVisibleMethod?(params: FormItemVisibleParams): boolean;",
          "228:   itemResetMethod?(params: FormItemResetParams): void;",
          "229:   formItemResetMethod?(params: FormItemResetParams): void;",
          "236:   renderTableEmptyView?(h: CreateElement, renderOpts: TableEmptyRender, params: EmptyRenderParams): SlotVNodeType | SlotVNodeType[];",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "94c5fa04736ce7e9841562a801cbf3146d7c0988",
      "candidate_info": {
        "commit_hash": "94c5fa04736ce7e9841562a801cbf3146d7c0988",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/94c5fa04736ce7e9841562a801cbf3146d7c0988",
        "files": [
          "examples/views/table/TableTest1.vue",
          "package.json",
          "packages/table/src/methods.ts"
        ],
        "message": "releases 3.9.5",
        "before_after_code_files": [
          "examples/views/table/TableTest1.vue||examples/views/table/TableTest1.vue",
          "packages/table/src/methods.ts||packages/table/src/methods.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/views/table/TableTest1.vue||examples/views/table/TableTest1.vue": [
          "File: examples/views/table/TableTest1.vue -> examples/views/table/TableTest1.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <template>",
          "3:     <vxe-table",
          "4:       border",
          "12:       <vxe-column type=\"seq\" width=\"60\"></vxe-column>",
          "15:       <vxe-column field=\"name\" title=\"Name\" sortable></vxe-column>",
          "23:     </vxe-table>",
          "24:   </div>",
          "25: </template>",
          "31:   data () {",
          "32:     return {",
          "35:       ],",
          "64:     }",
          "65:   },",
          "66:   methods: {",
          "70:     },",
          "73:     }",
          "102:   }",
          "104: </script>",
          "",
          "[Removed Lines]",
          "2:   <div style=\"height: 400px;overflow: hidden;\">",
          "5:       stripe",
          "6:       resizable",
          "7:       highlight-hover-row",
          "8:       height=\"100%\"",
          "9:       :loading=\"demo1.loading\"",
          "10:       :checkbox-config=\"{labelField: 'id', highlight: true, range: true}\"",
          "11:       :data=\"demo1.tableData\">",
          "13:       <vxe-column type=\"checkbox\" title=\"ID\" width=\"140\"></vxe-column>",
          "14:       <vxe-column field=\"role\" title=\"Role\"></vxe-column>",
          "16:       <vxe-column field=\"age\" title=\"Age\" :filters=\"ageOptions\" :filter-method=\"filterAgeMethod\">",
          "17:         <template #filter=\"{ $panel, column }\">",
          "18:           <vxe-input class=\"my-input\" v-for=\"(option, index) in column.filters\" :key=\"index\" v-model=\"option.data\" @input=\"$panel.changeOption($event, !!option.data, option)\" @keyup.enter=\"$panel.confirmFilter()\" placeholder=\"\u6309\u56de\u8f66\u786e\u8ba4\u7b5b\u9009\" />",
          "19:         </template>",
          "20:       </vxe-column>",
          "21:       <vxe-column field=\"sex\" title=\"Sex\" :filters=\"demo1.sexList\" :filter-multiple=\"false\" :formatter=\"formatterSex\"></vxe-column>",
          "22:       <vxe-column field=\"address\" title=\"Address\" show-overflow></vxe-column>",
          "27: <script lang=\"ts\">",
          "28: import Vue from 'vue'",
          "30: export default Vue.extend({",
          "33:       ageOptions: [",
          "34:         { data: '' }",
          "36:       demo1: {",
          "37:         loading: false,",
          "38:         tableData: [] as any[],",
          "39:         sexList: [",
          "40:           { label: '\u5973', value: '0' },",
          "41:           { label: '\u7537', value: '1' }",
          "42:         ],",
          "43:         ageOptions: [",
          "44:           { label: '\u5927\u4e8e16\u5c81', value: 16 },",
          "45:           { label: '\u5927\u4e8e26\u5c81', value: 26 },",
          "46:           { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "47:           { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "48:           { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "49:           { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "50:           { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "51:           { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "52:           { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "53:           { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "54:           { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "55:           { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "56:           { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "57:           { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "58:           { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "59:           { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "60:           { label: '\u5927\u4e8e30\u5c81', value: 30 },",
          "61:           { label: '\u5927\u4e8e30\u5c81', value: 30 }",
          "62:         ]",
          "63:       }",
          "67:     formatterSex ({ cellValue }: any) {",
          "68:       const item = this.demo1.sexList.find(item => item.value === cellValue)",
          "69:       return item ? item.label : ''",
          "71:     filterAgeMethod ({ value, row }: any) {",
          "72:       return row.age >= value",
          "74:   },",
          "75:   mounted () {",
          "76:     this.demo1.loading = true",
          "77:     setTimeout(() => {",
          "78:       this.demo1.tableData = [",
          "79:         { id: 10001, name: 'Test1', role: 'Develop', sex: '0', age: 28, address: 'test abc' },",
          "80:         { id: 10002, name: 'Test2', role: 'Test', sex: '1', age: 22, address: 'Guangzhou' },",
          "81:         { id: 10003, name: 'Test3', role: 'PM', sex: '0', age: 32, address: 'Shanghai' },",
          "82:         { id: 10004, name: 'Test4', role: 'Designer', sex: '1', age: 23, address: 'test abc' },",
          "83:         { id: 10005, name: 'Test5', role: 'Develop', sex: '1', age: 30, address: 'Shanghai' },",
          "84:         { id: 10006, name: 'Test6', role: 'Designer', sex: '1', age: 21, address: 'test abc' },",
          "85:         { id: 10007, name: 'Test7', role: 'Test', sex: '0', age: 29, address: 'test abc' },",
          "86:         { id: 10008, name: 'Test8', role: 'Develop', sex: '0', age: 35, address: 'test abc' },",
          "87:         { id: 10009, name: 'Test9', role: 'Test', sex: '1', age: 21, address: 'test abc' },",
          "88:         { id: 10010, name: 'Test10', role: 'Develop', sex: '0', age: 28, address: 'test abc' },",
          "89:         { id: 10011, name: 'Test11', role: 'Test', sex: '0', age: 29, address: 'test abc' },",
          "90:         { id: 10012, name: 'Test12', role: 'Develop', sex: '1', age: 27, address: 'test abc' },",
          "91:         { id: 10013, name: 'Test13', role: 'Test', sex: '0', age: 24, address: 'test abc' },",
          "92:         { id: 10014, name: 'Test14', role: 'Develop', sex: '1', age: 34, address: 'test abc' },",
          "93:         { id: 10015, name: 'Test15', role: 'Test', sex: '1', age: 21, address: 'test abc' },",
          "94:         { id: 10016, name: 'Test16', role: 'Develop', sex: '0', age: 20, address: 'test abc' },",
          "95:         { id: 10017, name: 'Test17', role: 'Test', sex: '1', age: 31, address: 'test abc' },",
          "96:         { id: 10018, name: 'Test18', role: 'Develop', sex: '0', age: 32, address: 'test abc' },",
          "97:         { id: 10019, name: 'Test19', role: 'Test', sex: '1', age: 37, address: 'test abc' },",
          "98:         { id: 10020, name: 'Test20', role: 'Develop', sex: '1', age: 41, address: 'test abc' }",
          "99:       ]",
          "100:       this.demo1.loading = false",
          "101:     }, 100)",
          "103: })",
          "",
          "[Added Lines]",
          "2:   <div>",
          "3:     <p class=\"tip\">",
          "4:       \u901a\u8fc7\u8868\u5c3e\u6765\u5b9e\u73b0\u5408\u8ba1\u529f\u80fd\uff0c\u8bbe\u7f6e <table-api-link prop=\"show-footer\"/> show-footer \u548c <table-api-link prop=\"footer-method\"/> \u8bbe\u7f6e\u8868\u5c3e\u6570\u636e\uff0c\u7ed3\u679c\u8fd4\u56de\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4<br>",
          "5:       \u9700\u8981\u6ce8\u610f\u7684\u662f\u8868\u5c3e\u7684\u8c03\u7528\u5e76\u975e\u5b9e\u65f6\u7684\uff0c\u800c\u662f\u5728 data \u521d\u59cb\u5316\u65f6\u624d\u4f1a\u89e6\u53d1\u6267\u884c\uff1b\u5982\u679c\u8981\u8fbe\u5230\u5b9e\u65f6\u8c03\u7528\u8bf7\u624b\u52a8\u8c03\u7528 <table-api-link prop=\"updateFooter\"/> \u65b9\u6cd5<br>",
          "6:       <span class=\"red\">\uff08\u6ce8\uff1a<table-api-link prop=\"footer-method\"/> \u8868\u5c3e\u7684\u6570\u636e\u90fd\u662f\u81ea\u884c\u751f\u6210\u7684\uff0c\u8be5\u793a\u4f8b\u4ec5\u4f9b\u53c2\u8003\uff09</span>",
          "7:     </p>",
          "9:     <vxe-table",
          "10:       class=\"mytable-footer\"",
          "11:       border",
          "12:       show-footer",
          "13:       max-height=\"400\"",
          "14:       :row-config=\"{isHover: true}\"",
          "15:       :footer-method=\"footerMethod1\"",
          "16:       :data=\"tableData1\">",
          "17:       <vxe-column type=\"seq\" width=\"60\"></vxe-column>",
          "18:       <vxe-column field=\"name\" title=\"Name\" sortable></vxe-column>",
          "19:       <vxe-column field=\"sex\" title=\"Sex\"></vxe-column>",
          "20:       <vxe-column field=\"age\" title=\"Age\"></vxe-column>",
          "21:       <vxe-column field=\"amount\" title=\"Amount\"></vxe-column>",
          "22:     </vxe-table>",
          "24:     <p class=\"demo-code\">{{ $t('app.body.button.showCode') }}</p>",
          "26:     <pre>",
          "27:       <pre-code class=\"xml\">{{ demoCodes[0] }}</pre-code>",
          "28:       <pre-code class=\"javascript\">{{ demoCodes[1] }}</pre-code>",
          "29:     </pre>",
          "31:     <p class=\"tip\">\u8fd8\u53ef\u4ee5\u914d\u5408 <table-api-link prop=\"footer-cell-class-name\"/> \u81ea\u5b9a\u4e49\u4e0d\u540c\u5217\u989c\u8272</p>",
          "34:       class=\"mytable-footer\"",
          "36:       show-footer",
          "37:       height=\"400\"",
          "38:       :footer-method=\"footerMethod\"",
          "39:       :footer-cell-class-name=\"footerCellClassName2\"",
          "40:       :data=\"tableData2\">",
          "43:       <vxe-column field=\"sex\" title=\"Sex\"></vxe-column>",
          "44:       <vxe-column field=\"age\" title=\"Age\"></vxe-column>",
          "45:       <vxe-column field=\"amount\" title=\"Amount\"></vxe-column>",
          "46:     </vxe-table>",
          "48:     <p class=\"demo-code\">{{ $t('app.body.button.showCode') }}</p>",
          "50:     <pre>",
          "51:       <pre-code class=\"xml\">{{ demoCodes[2] }}</pre-code>",
          "52:       <pre-code class=\"javascript\">{{ demoCodes[3] }}</pre-code>",
          "53:       <pre-code class=\"css\">{{ demoCodes[4] }}</pre-code>",
          "54:     </pre>",
          "56:     <p class=\"tip\">\u8fd8\u53ef\u4ee5\u56fa\u5b9a\u5217</p>",
          "58:     <vxe-toolbar>",
          "59:       <template #buttons>",
          "60:         <vxe-button @click=\"showHeader = !showHeader\">\u663e\u793a/\u9690\u85cf\u8868\u5934</vxe-button>",
          "61:         <vxe-button @click=\"showFooter = !showFooter\">\u663e\u793a/\u9690\u85cf\u8868\u5c3e</vxe-button>",
          "62:       </template>",
          "63:     </vxe-toolbar>",
          "65:     <vxe-table",
          "66:       class=\"mytable-footer\"",
          "67:       border",
          "68:       height=\"400\"",
          "69:       show-overflow",
          "70:       :show-header=\"showHeader\"",
          "71:       :show-footer=\"showFooter\"",
          "72:       :footer-method=\"footerMethod\"",
          "73:       :footer-cell-class-name=\"footerCellClassName3\"",
          "74:       :data=\"tableData3\">",
          "75:       <vxe-column type=\"seq\" width=\"60\" fixed=\"left\"></vxe-column>",
          "76:       <vxe-colgroup title=\"\u57fa\u672c\u4fe1\u606f\">",
          "77:         <vxe-column field=\"name\" title=\"Name\" min-width=\"600\" sortable></vxe-column>",
          "78:         <vxe-column field=\"age\" title=\"Age\" min-width=\"600\"></vxe-column>",
          "79:       </vxe-colgroup>",
          "80:       <vxe-column field=\"date\" title=\"Date\" min-width=\"600\"></vxe-column>",
          "81:       <vxe-column field=\"amount\" title=\"Amount\" width=\"200\" fixed=\"right\"></vxe-column>",
          "84:     <p class=\"demo-code\">{{ $t('app.body.button.showCode') }}</p>",
          "86:     <pre>",
          "87:       <pre-code class=\"xml\">{{ demoCodes[5] }}</pre-code>",
          "88:       <pre-code class=\"javascript\">{{ demoCodes[6] }}</pre-code>",
          "89:       <pre-code class=\"javascript\">{{ demoCodes[7] }}</pre-code>",
          "90:     </pre>",
          "94: <script>",
          "95: export default {",
          "98:       showHeader: true,",
          "99:       showFooter: true,",
          "100:       tableData1: [",
          "101:         { id: 10001, name: 'Test1', role: 'Develop', sex: '0', age: 28, amount: 888, address: 'test abc' },",
          "102:         { id: 10002, name: 'Test2', role: 'Test', sex: '1', age: 22, amount: 666, address: 'Guangzhou' },",
          "103:         { id: 10003, name: 'Test3', role: 'PM', sex: '1', age: 32, amount: 89, address: 'Shanghai' },",
          "104:         { id: 10004, name: 'Test4', role: 'Designer', sex: '0', age: 23, amount: 1000, address: 'test abc' },",
          "105:         { id: 10005, name: 'Test5', role: 'Develop', sex: '0', age: 30, amount: 999, address: 'Shanghai' },",
          "106:         { id: 10006, name: 'Test6', role: 'Designer', sex: '0', age: 21, amount: 998, address: 'test abc' }",
          "108:       footerData1: [",
          "109:         ['\u5408\u8ba1', '2', '44', '67', '-']",
          "110:       ],",
          "111:       tableData2: [",
          "112:         { id: 10001, name: 'Test1', role: 'Develop', sex: '0', age: 28, amount: 888, address: 'test abc' },",
          "113:         { id: 10002, name: 'Test2', role: 'Test', sex: '1', age: 22, amount: 666, address: 'Guangzhou' },",
          "114:         { id: 10003, name: 'Test3', role: 'PM', sex: '1', age: 32, amount: 89, address: 'Shanghai' },",
          "115:         { id: 10004, name: 'Test4', role: 'Designer', sex: '0', age: 23, amount: 1000, address: 'test abc' },",
          "116:         { id: 10005, name: 'Test5', role: 'Develop', sex: '0', age: 30, amount: 999, address: 'Shanghai' },",
          "117:         { id: 10006, name: 'Test6', role: 'Designer', sex: '0', age: 21, amount: 998, address: 'test abc' },",
          "118:         { id: 10007, name: 'Test7', role: 'Test', sex: '1', age: 29, amount: 2000, address: 'test abc' },",
          "119:         { id: 10008, name: 'Test8', role: 'Develop', sex: '1', age: 35, amount: 999, address: 'test abc' }",
          "120:       ],",
          "121:       tableData3: [",
          "122:         { id: 10001, name: 'Test1', role: 'Develop', sex: '0', age: 28, amount: 888, address: 'test abc' },",
          "123:         { id: 10002, name: 'Test2', role: 'Test', sex: '1', age: 22, amount: 666, address: 'Guangzhou' },",
          "124:         { id: 10003, name: 'Test3', role: 'PM', sex: '1', age: 32, amount: 89, address: 'Shanghai' },",
          "125:         { id: 10004, name: 'Test4', role: 'Designer', sex: '0', age: 23, amount: 1000, address: 'test abc' },",
          "126:         { id: 10005, name: 'Test5', role: 'Develop', sex: '0', age: 30, amount: 999, address: 'Shanghai' },",
          "127:         { id: 10006, name: 'Test6', role: 'Designer', sex: '0', age: 21, amount: 998, address: 'test abc' },",
          "128:         { id: 10007, name: 'Test7', role: 'Test', sex: '1', age: 29, amount: 2000, address: 'test abc' },",
          "129:         { id: 10008, name: 'Test8', role: 'Develop', sex: '1', age: 35, amount: 999, address: 'test abc' }",
          "130:       ],",
          "131:       demoCodes: [",
          "132:         `",
          "133:         <vxe-table",
          "134:           class=\"mytable-footer\"",
          "135:           border",
          "136:           show-footer",
          "137:           max-height=\"400\"",
          "138:           :row-config=\"{isHover: true}\"",
          "139:           :footer-method=\"footerMethod1\"",
          "140:           :data=\"tableData1\">",
          "141:           <vxe-column type=\"seq\" width=\"60\"></vxe-column>",
          "142:           <vxe-column field=\"name\" title=\"Name\" sortable></vxe-column>",
          "143:           <vxe-column field=\"sex\" title=\"Sex\"></vxe-column>",
          "144:           <vxe-column field=\"age\" title=\"Age\"></vxe-column>",
          "145:           <vxe-column field=\"amount\" title=\"Amount\"></vxe-column>",
          "146:         </vxe-table>",
          "147:         `,",
          "148:         `",
          "149:         export default {",
          "150:           data () {",
          "151:             return {",
          "152:               tableData1: [",
          "153:                 { id: 10001, name: 'Test1', role: 'Develop', sex: '0', age: 28, amount: 888, address: 'test abc' },",
          "154:                 { id: 10002, name: 'Test2', role: 'Test', sex: '1', age: 22, amount: 666, address: 'Guangzhou' },",
          "155:                 { id: 10003, name: 'Test3', role: 'PM', sex: '1', age: 32, amount: 89, address: 'Shanghai' },",
          "156:                 { id: 10004, name: 'Test4', role: 'Designer', sex: '0', age: 23, amount: 1000, address: 'test abc' },",
          "157:                 { id: 10005, name: 'Test5', role: 'Develop', sex: '0', age: 30, amount: 999, address: 'Shanghai' },",
          "158:                 { id: 10006, name: 'Test6', role: 'Designer', sex: '0', age: 21, amount: 998, address: 'test abc' }",
          "159:               ],",
          "160:               footerData1: [",
          "161:                 ['\u5408\u8ba1', '2', '44', '67', '-']",
          "162:               ]",
          "163:             }",
          "164:           },",
          "165:           methods: {",
          "166:             footerMethod1 () {",
          "168:               return this.footerData1",
          "169:             }",
          "170:           }",
          "171:         }",
          "172:         `,",
          "173:         `",
          "174:         <vxe-table",
          "175:           class=\"mytable-footer\"",
          "176:           border",
          "177:           show-footer",
          "178:           height=\"400\"",
          "179:           :footer-method=\"footerMethod\"",
          "180:           :footer-cell-class-name=\"footerCellClassName2\"",
          "181:           :data=\"tableData2\">",
          "182:           <vxe-column type=\"seq\" width=\"60\"></vxe-column>",
          "183:           <vxe-column field=\"name\" title=\"Name\" sortable></vxe-column>",
          "184:           <vxe-column field=\"sex\" title=\"Sex\"></vxe-column>",
          "185:           <vxe-column field=\"age\" title=\"Age\"></vxe-column>",
          "186:           <vxe-column field=\"amount\" title=\"Amount\"></vxe-column>",
          "187:         </vxe-table>",
          "188:         `,",
          "189:         `",
          "190:         export default {",
          "191:           data () {",
          "192:             return {",
          "193:               tableData2: [",
          "194:                 { id: 10001, name: 'Test1', role: 'Develop', sex: '0', age: 28, amount: 888, address: 'test abc' },",
          "195:                 { id: 10002, name: 'Test2', role: 'Test', sex: '1', age: 22, amount: 666, address: 'Guangzhou' },",
          "196:                 { id: 10003, name: 'Test3', role: 'PM', sex: '1', age: 32, amount: 89, address: 'Shanghai' },",
          "197:                 { id: 10004, name: 'Test4', role: 'Designer', sex: '0', age: 23, amount: 1000, address: 'test abc' },",
          "198:                 { id: 10005, name: 'Test5', role: 'Develop', sex: '0', age: 30, amount: 999, address: 'Shanghai' },",
          "199:                 { id: 10006, name: 'Test6', role: 'Designer', sex: '0', age: 21, amount: 998, address: 'test abc' },",
          "200:                 { id: 10007, name: 'Test7', role: 'Test', sex: '1', age: 29, amount: 2000, address: 'test abc' },",
          "201:                 { id: 10008, name: 'Test8', role: 'Develop', sex: '1', age: 35, amount: 999, address: 'test abc' }",
          "202:               ]",
          "203:             }",
          "204:           },",
          "205:           methods: {",
          "206:             footerCellClassName2 ({ $rowIndex, column, columnIndex }) {",
          "207:               if (columnIndex === 0) {",
          "208:                 if ($rowIndex === 0) {",
          "209:                   return 'col-blue'",
          "210:                 } else {",
          "211:                   return 'col-red'",
          "212:                 }",
          "213:               }",
          "214:             },",
          "215:             meanNum (list, field) {",
          "216:               let count = 0",
          "217:               list.forEach(item => {",
          "218:                 count += Number(item[field])",
          "219:               })",
          "220:               return count / list.length",
          "221:             },",
          "222:             sumNum (list, field) {",
          "223:               let count = 0",
          "224:               list.forEach(item => {",
          "225:                 count += Number(item[field])",
          "226:               })",
          "227:               return count",
          "228:             },",
          "229:             footerMethod ({ columns, data }) {",
          "230:               const means = []",
          "231:               const sums = []",
          "232:               const others = []",
          "233:               columns.forEach((column, columnIndex) => {",
          "234:                 if (columnIndex === 0) {",
          "235:                   means.push('\u5e73\u5747')",
          "236:                   sums.push('\u548c\u503c')",
          "237:                   others.push('\u5176\u4ed6')",
          "238:                 } else {",
          "239:                   let meanCell = null",
          "240:                   let sumCell = null",
          "241:                   let otherCell = '-'",
          "242:                   switch (column.field) {",
          "243:                     case 'age':",
          "244:                     case 'amount':",
          "245:                       meanCell = this.meanNum(data, column.field)",
          "246:                       sumCell = this.sumNum(data, column.field)",
          "247:                       break",
          "248:                     case 'sex':",
          "249:                       otherCell = '\u65e0'",
          "250:                       break",
          "251:                   }",
          "252:                   means.push(meanCell)",
          "253:                   sums.push(sumCell)",
          "254:                   others.push(otherCell)",
          "255:                 }",
          "256:               })",
          "258:               return [means, sums, others]",
          "259:             }",
          "260:           }",
          "261:         }",
          "262:         `,",
          "263:         `",
          "264:         .mytable-footer .col-blue {",
          "265:           background-color: #2db7f5;",
          "266:           color: #fff;",
          "267:         }",
          "268:         .mytable-footer .col-red {",
          "269:           background-color: red;",
          "270:           color: #fff;",
          "271:         }",
          "272:         `,",
          "273:         `",
          "274:         <vxe-toolbar>",
          "275:           <template #buttons>",
          "276:             <vxe-button @click=\"showHeader = !showHeader\">\u663e\u793a/\u9690\u85cf\u8868\u5934</vxe-button>",
          "277:             <vxe-button @click=\"showFooter = !showFooter\">\u663e\u793a/\u9690\u85cf\u8868\u5c3e</vxe-button>",
          "278:           </template>",
          "279:         </vxe-toolbar>",
          "281:         <vxe-table",
          "282:           class=\"mytable-footer\"",
          "283:           border",
          "284:           height=\"400\"",
          "285:           show-overflow",
          "286:           :show-header=\"showHeader\"",
          "287:           :show-footer=\"showFooter\"",
          "288:           :footer-method=\"footerMethod\"",
          "289:           :footer-cell-class-name=\"footerCellClassName3\"",
          "290:           :data=\"tableData3\">",
          "291:           <vxe-column type=\"seq\" width=\"60\" fixed=\"left\"></vxe-column>",
          "292:           <vxe-colgroup title=\"\u57fa\u672c\u4fe1\u606f\">",
          "293:             <vxe-column field=\"name\" title=\"Name\" min-width=\"600\" sortable></vxe-column>",
          "294:             <vxe-column field=\"age\" title=\"Age\" min-width=\"600\"></vxe-column>",
          "295:           </vxe-colgroup>",
          "296:           <vxe-column field=\"date\" title=\"Date\" min-width=\"600\"></vxe-column>",
          "297:           <vxe-column field=\"rate\" title=\"Rate\" width=\"200\" fixed=\"right\"></vxe-column>",
          "298:         </vxe-table>",
          "299:         `,",
          "300:         `",
          "301:         export default {",
          "302:           data () {",
          "303:             return {",
          "304:               showFooter: true,",
          "305:               tableData3: [",
          "306:                 { id: 10001, name: 'Test1', role: 'Develop', sex: '0', age: 28, amount: 888, address: 'test abc' },",
          "307:                 { id: 10002, name: 'Test2', role: 'Test', sex: '1', age: 22, amount: 666, address: 'Guangzhou' },",
          "308:                 { id: 10003, name: 'Test3', role: 'PM', sex: '1', age: 32, amount: 89, address: 'Shanghai' },",
          "309:                 { id: 10004, name: 'Test4', role: 'Designer', sex: '0', age: 23, amount: 1000, address: 'test abc' },",
          "310:                 { id: 10005, name: 'Test5', role: 'Develop', sex: '0', age: 30, amount: 999, address: 'Shanghai' },",
          "311:                 { id: 10006, name: 'Test6', role: 'Designer', sex: '0', age: 21, amount: 998, address: 'test abc' },",
          "312:                 { id: 10007, name: 'Test7', role: 'Test', sex: '1', age: 29, amount: 2000, address: 'test abc' },",
          "313:                 { id: 10008, name: 'Test8', role: 'Develop', sex: '1', age: 35, amount: 999, address: 'test abc' }",
          "314:               ]",
          "315:             }",
          "316:           },",
          "317:           methods: {",
          "318:             footerCellClassName3 ({ $rowIndex, column }) {",
          "319:               if (column.type === 'seq') {",
          "320:                 if ($rowIndex === 0) {",
          "321:                   return 'col-blue'",
          "322:                 } else {",
          "323:                   return 'col-red'",
          "324:                 }",
          "325:               } else if (column.field === 'age') {",
          "326:                 if ($rowIndex === 1) {",
          "327:                   return 'col-red'",
          "328:                 }",
          "329:               }",
          "330:             },",
          "331:             meanNum (list, field) {",
          "332:               let count = 0",
          "333:               list.forEach(item => {",
          "334:                 count += Number(item[field])",
          "335:               })",
          "336:               return count / list.length",
          "337:             },",
          "338:             sumNum (list, field) {",
          "339:               let count = 0",
          "340:               list.forEach(item => {",
          "341:                 count += Number(item[field])",
          "342:               })",
          "343:               return count",
          "344:             },",
          "345:             footerMethod ({ columns, data }) {",
          "346:               const means = []",
          "347:               const sums = []",
          "348:               const others = []",
          "349:               columns.forEach((column, columnIndex) => {",
          "350:                 if (columnIndex === 0) {",
          "351:                   means.push('\u5e73\u5747')",
          "352:                   sums.push('\u548c\u503c')",
          "353:                   others.push('\u5176\u4ed6')",
          "354:                 } else {",
          "355:                   let meanCell = null",
          "356:                   let sumCell = null",
          "357:                   let otherCell = '-'",
          "358:                   switch (column.field) {",
          "359:                     case 'age':",
          "360:                     case 'amount':",
          "361:                       meanCell = this.meanNum(data, column.field)",
          "362:                       sumCell = this.sumNum(data, column.field)",
          "363:                       break",
          "364:                     case 'sex':",
          "365:                       otherCell = '\u65e0'",
          "366:                       break",
          "367:                   }",
          "368:                   means.push(meanCell)",
          "369:                   sums.push(sumCell)",
          "370:                   others.push(otherCell)",
          "371:                 }",
          "372:               })",
          "374:               return [means, sums, others]",
          "375:             }",
          "376:           }",
          "377:         }",
          "378:         `,",
          "379:         `",
          "380:         .mytable-footer .col-blue {",
          "381:           background-color: #2db7f5;",
          "382:           color: #fff;",
          "383:         }",
          "384:         .mytable-footer .col-red {",
          "385:           background-color: red;",
          "386:           color: #fff;",
          "387:         }",
          "388:         `",
          "389:       ]",
          "393:     footerCellClassName2 ({ $rowIndex, columnIndex }) {",
          "394:       if (columnIndex === 0) {",
          "395:         if ($rowIndex === 0) {",
          "396:           return 'col-blue'",
          "397:         } else {",
          "398:           return 'col-red'",
          "399:         }",
          "400:       }",
          "401:     },",
          "402:     footerCellClassName3 ({ $rowIndex, column }) {",
          "403:       if (column.type === 'seq') {",
          "404:         if ($rowIndex === 0) {",
          "405:           return 'col-blue'",
          "406:         } else {",
          "407:           return 'col-red'",
          "408:         }",
          "409:       } else if (column.field === 'age') {",
          "410:         if ($rowIndex === 1) {",
          "411:           return 'col-red'",
          "412:         }",
          "413:       }",
          "414:     },",
          "415:     footerMethod1 () {",
          "417:       return this.footerData1",
          "418:     },",
          "419:     meanNum (list, field) {",
          "420:       let count = 0",
          "421:       list.forEach(item => {",
          "422:         count += Number(item[field])",
          "423:       })",
          "424:       return count / list.length",
          "426:     sumNum (list, field) {",
          "427:       let count = 0",
          "428:       list.forEach(item => {",
          "429:         count += Number(item[field])",
          "430:       })",
          "431:       return count",
          "432:     },",
          "433:     footerMethod ({ columns, data }) {",
          "434:       const means = []",
          "435:       const sums = []",
          "436:       const others = []",
          "437:       columns.forEach((column, columnIndex) => {",
          "438:         if (columnIndex === 0) {",
          "439:           means.push('\u5e73\u5747')",
          "440:           sums.push('\u548c\u503c')",
          "441:           others.push('\u5176\u4ed6')",
          "442:         } else {",
          "443:           let meanCell = null",
          "444:           let sumCell = null",
          "445:           let otherCell = '-'",
          "446:           switch (column.field) {",
          "447:             case 'age':",
          "448:             case 'amount':",
          "449:               meanCell = this.meanNum(data, column.field)",
          "450:               sumCell = this.sumNum(data, column.field)",
          "451:               break",
          "452:             case 'sex':",
          "453:               otherCell = '\u65e0'",
          "454:               break",
          "455:           }",
          "456:           means.push(meanCell)",
          "457:           sums.push(sumCell)",
          "458:           others.push(otherCell)",
          "459:         }",
          "460:       })",
          "462:       return [means, sums, others]",
          "465: }",
          "468: <style lang=\"scss\" scoped>",
          "469: :deep(.mytable-footer .col-blue) {",
          "470:   background-color: #2db7f5;",
          "471:   color: #fff;",
          "472: }",
          "473: :deep(.mytable-footer .col-red) {",
          "474:   background-color: red;",
          "475:   color: #fff;",
          "476: }",
          "477: </style>",
          "",
          "---------------"
        ],
        "packages/table/src/methods.ts||packages/table/src/methods.ts": [
          "File: packages/table/src/methods.ts -> packages/table/src/methods.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1975:     const leftList: any[] = []",
          "1976:     const centerList: any[] = []",
          "1977:     const rightList: any[] = []",
          "1980:     if (isGroup) {",
          "1981:       const leftGroupList: any[] = []",
          "",
          "[Removed Lines]",
          "1978:     const { collectColumn, tableFullColumn, isGroup, columnStore, sXOpts, scrollXStore } = this",
          "",
          "[Added Lines]",
          "1978:     const { collectColumn, tableFullColumn, isGroup, columnStore, sXOpts, scrollXStore, fullColumnIdData } = this",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2060:       this.clearMergeFooterItems()",
          "2061:     }",
          "2062:     this.scrollXLoad = scrollXLoad",
          "2063:     this.visibleColumn = visibleColumn",
          "2064:     this.handleTableColumn()",
          "2065:     return this.updateFooter().then(() => {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2063:     visibleColumn.forEach((column, index) => {",
          "2064:       const colid = column.id",
          "2065:       const rest = fullColumnIdData[colid]",
          "2066:       if (rest) {",
          "2067:         rest._index = index",
          "2068:       }",
          "2069:     })",
          "",
          "---------------"
        ]
      }
    }
  ]
}