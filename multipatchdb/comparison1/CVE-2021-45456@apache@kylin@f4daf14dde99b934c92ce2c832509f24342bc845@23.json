{
  "cve_id": "CVE-2021-45456",
  "cve_desc": "Apache kylin checks the legitimacy of the project before executing some commands with the project name passed in by the user. There is a mismatch between what is being checked and what is being used as the shell command argument in DiagnosisService. This may cause an illegal project name to pass the check and perform the following steps, resulting in a command injection vulnerability. This issue affects Apache Kylin 4.0.0.",
  "repo": "apache/kylin",
  "patch_hash": "f4daf14dde99b934c92ce2c832509f24342bc845",
  "patch_info": {
    "commit_hash": "f4daf14dde99b934c92ce2c832509f24342bc845",
    "repo": "apache/kylin",
    "commit_url": "https://github.com/apache/kylin/commit/f4daf14dde99b934c92ce2c832509f24342bc845",
    "files": [
      "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
      "server/src/main/webapp/WEB-INF/web.xml"
    ],
    "message": "test fix",
    "before_after_code_files": [
      "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java"
    ]
  },
  "patch_diff": {
    "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java": [
      "File: core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java -> core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "3403:     public String getKerberosPrincipal() {",
      "3404:         return getOptional(\"kylin.kerberos.principal\");",
      "3405:     }",
      "3406: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3407:     public String getEncryptCipherIvSpec() {",
      "3408:         return getOptional(\"kylin.security.encrypt.cipher.ivSpec\", \"AAAAAAAAAAAAAAAA\");",
      "3409:     }",
      "",
      "---------------"
    ],
    "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java": [
      "File: core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java -> core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: import java.security.NoSuchAlgorithmException;",
      "27: import org.apache.commons.codec.binary.Base64;",
      "29: import javax.crypto.Cipher;",
      "30: import javax.crypto.NoSuchPaddingException;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28: import org.apache.kylin.common.KylinConfig;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "42:             InvalidKeyException, NoSuchPaddingException, NoSuchAlgorithmException, UnsupportedEncodingException {",
      "43:         Cipher cipher = Cipher.getInstance(\"AES/CFB/PKCS5Padding\");",
      "44:         final SecretKeySpec secretKey = new SecretKeySpec(key, \"AES\");",
      "46:         cipher.init(cipherMode, secretKey, ivSpec);",
      "47:         return cipher;",
      "48:     }",
      "",
      "[Removed Lines]",
      "45:         IvParameterSpec ivSpec = new IvParameterSpec(\"AAAAAAAAAAAAAAAA\".getBytes(\"UTF-8\"));",
      "",
      "[Added Lines]",
      "46:         IvParameterSpec ivSpec = new IvParameterSpec(KylinConfig.getInstanceFromEnv().getEncryptCipherIvSpec().getBytes(\"UTF-8\"));",
      "",
      "---------------"
    ],
    "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java": [
      "File: core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java -> core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: package org.apache.kylin.common.util;",
      "21: import org.junit.Assert;",
      "22: import org.junit.Test;",
      "26:     @Test",
      "27:     public void testAESEncrypt(){",
      "",
      "[Removed Lines]",
      "24: public class EncryptUtilTest {",
      "",
      "[Added Lines]",
      "21: import org.junit.After;",
      "23: import org.junit.Before;",
      "26: public class EncryptUtilTest extends LocalFileMetadataTestCase {",
      "27:     @Before",
      "28:     public void setUp() throws Exception {",
      "29:         this.createTestMetadata();",
      "30:     }",
      "32:     @After",
      "33:     public void after() throws Exception {",
      "34:         this.cleanupTestMetadata();",
      "35:     }",
      "",
      "---------------"
    ],
    "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java": [
      "File: server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java -> server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "87:     public String dumpProjectDiagnosisInfo(String project, File exportPath) throws IOException {",
      "88:         Message msg = MsgPicker.getMsg();",
      "89:         ProjectInstance projectInstance =",
      "90:                 ProjectManager.getInstance(KylinConfig.getInstanceFromEnv())",
      "92:         if (null == projectInstance) {",
      "93:             throw new BadRequestException(",
      "95:         }",
      "96:         aclEvaluate.checkProjectOperationPermission(projectInstance);",
      "98:         runDiagnosisCLI(args);",
      "99:         return getDiagnosisPackageName(exportPath);",
      "100:     }",
      "",
      "[Removed Lines]",
      "91:                         .getProject(ValidateUtil.convertStringToBeAlphanumericUnderscore(project));",
      "94:                     String.format(Locale.ROOT, msg.getDIAG_PROJECT_NOT_FOUND(), project));",
      "97:         String[] args = { project, exportPath.getAbsolutePath() };",
      "",
      "[Added Lines]",
      "89:         String projectName = ValidateUtil.convertStringToBeAlphanumericUnderscore(project);",
      "92:                         .getProject(projectName);",
      "95:                     String.format(Locale.ROOT, msg.getDIAG_PROJECT_NOT_FOUND(), projectName));",
      "98:         String[] args = { projectName, exportPath.getAbsolutePath() };",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5cffdfb3fa92c159f57730f02b89785d15839f43",
      "candidate_info": {
        "commit_hash": "5cffdfb3fa92c159f57730f02b89785d15839f43",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/5cffdfb3fa92c159f57730f02b89785d15839f43",
        "files": [
          "webapp/app/js/controllers/job.js",
          "webapp/app/js/model/jobListModel.js"
        ],
        "message": "KYLIN-4561 overall job number statistics in monitor page is incorrect after change the job status\n\n(cherry picked from commit 781fbe095a7f54a3ffa54aafa2f59b7ae9416abb)",
        "before_after_code_files": [
          "webapp/app/js/controllers/job.js||webapp/app/js/controllers/job.js",
          "webapp/app/js/model/jobListModel.js||webapp/app/js/model/jobListModel.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "webapp/app/js/controllers/job.js||webapp/app/js/controllers/job.js": [
          "File: webapp/app/js/controllers/job.js -> webapp/app/js/controllers/job.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "164:                 JobService.resume({jobId: job.uuid}, {}, function (job) {",
          "165:                   loadingRequest.hide();",
          "166:                   JobList.jobs[job.uuid] = job;",
          "167:                   if (angular.isDefined($scope.state.selectedJob)) {",
          "168:                     $scope.state.selectedJob = JobList.jobs[$scope.state.selectedJob.uuid];",
          "169:                   }",
          "170:                   MessageBox.successNotify('Job has been resumed successfully!');",
          "171:                 }, function (e) {",
          "172:                   loadingRequest.hide();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "167:                   var oldStatus;",
          "169:                     oldStatus = $scope.state.selectedJob.job_status;",
          "172:                   angular.forEach(jobConfig.allStatus, function (key) {",
          "173:                     if (key.name === oldStatus) {",
          "174:                       JobList.jobsOverview[key.name] -= 1;",
          "175:                       key.count = \"(\" + (JobList.jobsOverview[key.name]) + \")\";",
          "176:                     } else if (key.name === job.job_status) {",
          "177:                       JobList.jobsOverview[key.name] += 1;",
          "178:                       key.count = \"(\" + (JobList.jobsOverview[key.name]) + \")\";",
          "179:                     }",
          "180:                   });",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "198:                 JobService.cancel({jobId: job.uuid}, {}, function (job) {",
          "199:                     loadingRequest.hide();",
          "200:                     $scope.safeApply(function() {",
          "204:                         }",
          "206:                     });",
          "207:                     MessageBox.successNotify('Job has been discarded successfully!');",
          "208:                 },function(e){",
          "",
          "[Removed Lines]",
          "201:                         JobList.jobs[job.uuid] = job;",
          "202:                         if (angular.isDefined($scope.state.selectedJob)) {",
          "203:                             $scope.state.selectedJob = JobList.jobs[ $scope.state.selectedJob.uuid];",
          "",
          "[Added Lines]",
          "212:                       JobList.jobs[job.uuid] = job;",
          "213:                       var oldStatus;",
          "214:                       if (angular.isDefined($scope.state.selectedJob)) {",
          "215:                         oldStatus = $scope.state.selectedJob.job_status;",
          "216:                         $scope.state.selectedJob = JobList.jobs[$scope.state.selectedJob.uuid];",
          "217:                       }",
          "218:                       angular.forEach(jobConfig.allStatus, function (key) {",
          "219:                         if (key.name === oldStatus) {",
          "220:                           JobList.jobsOverview[key.name] -= 1;",
          "221:                           key.count = \"(\" + (JobList.jobsOverview[key.name]) + \")\";",
          "222:                         } else if (key.name === job.job_status) {",
          "223:                           JobList.jobsOverview[key.name] += 1;",
          "224:                           key.count = \"(\" + (JobList.jobsOverview[key.name]) + \")\";",
          "226:                       });",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "235:               loadingRequest.hide();",
          "236:               $scope.safeApply(function() {",
          "237:                 JobList.jobs[job.uuid] = job;",
          "238:                 if (angular.isDefined($scope.state.selectedJob)) {",
          "240:                 }",
          "242:               });",
          "243:               MessageBox.successNotify('Job has been paused successfully!');",
          "244:             },function(e){",
          "",
          "[Removed Lines]",
          "239:                   $scope.state.selectedJob = JobList.jobs[ $scope.state.selectedJob.uuid];",
          "",
          "[Added Lines]",
          "259:                 var oldStatus;",
          "261:                   oldStatus = $scope.state.selectedJob.job_status;",
          "262:                   $scope.state.selectedJob = JobList.jobs[$scope.state.selectedJob.uuid];",
          "264:                 angular.forEach(jobConfig.allStatus, function (key) {",
          "265:                   if (key.name === oldStatus) {",
          "266:                     JobList.jobsOverview[key.name] -= 1;",
          "267:                     key.count = \"(\" + (JobList.jobsOverview[key.name]) + \")\";",
          "268:                   } else if (key.name === job.job_status) {",
          "269:                     JobList.jobsOverview[key.name] += 1;",
          "270:                     key.count = \"(\" + (JobList.jobsOverview[key.name]) + \")\";",
          "271:                   }",
          "272:                 });",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "271:               loadingRequest.hide();",
          "272:               MessageBox.successNotify('Job has been dropped successfully!');",
          "273:               $scope.jobList.jobs[job.uuid].dropped = true;",
          "274:             },function(e){",
          "275:               loadingRequest.hide();",
          "276:               if(e.data&& e.data.exception){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "305:               var oldState = job.job_status;",
          "306:               angular.forEach(jobConfig.allStatus, function (key) {",
          "307:                 if (key.name === oldState) {",
          "308:                   JobList.jobsOverview[key.name] -= 1;",
          "309:                   key.count = \"(\" + (JobList.jobsOverview[key.name]) + \")\";",
          "310:                 }",
          "311:               });",
          "",
          "---------------"
        ],
        "webapp/app/js/model/jobListModel.js||webapp/app/js/model/jobListModel.js": [
          "File: webapp/app/js/model/jobListModel.js -> webapp/app/js/model/jobListModel.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: KylinApp.service('JobList',function(JobService, $q, kylinConfig, jobConfig){",
          "24:     var _this = this;",
          "25:     this.jobs={};",
          "26:     this.jobFilter = {",
          "27:         cubeName : null,",
          "28:         timeFilterId : kylinConfig.getJobTimeFilterId(),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26:     this.jobsOverview={};",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72:       JobService.overview(jobRequest, function (jobsOverview) {",
          "73:         angular.forEach(jobConfig.allStatus, function (key) {",
          "74:           if (angular.isDefined(jobsOverview[key.name])) {",
          "76:           } else {",
          "77:             key.count = \"\";",
          "78:           }",
          "",
          "[Removed Lines]",
          "75:             key.count = \"(\" + jobsOverview[key.name] + \")\"",
          "",
          "[Added Lines]",
          "76:             key.count = \"(\" + jobsOverview[key.name] + \")\";",
          "77:             _this.jobsOverview[key.name] = jobsOverview[key.name];",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "92:     this.removeAll = function(){",
          "93:         _this.jobs={};",
          "94:     };",
          "95: });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "96:         _this.jobsOverview={};",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c99b98270bb9cab357fd7cc45df83b3678dca870",
      "candidate_info": {
        "commit_hash": "c99b98270bb9cab357fd7cc45df83b3678dca870",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/c99b98270bb9cab357fd7cc45df83b3678dca870",
        "files": [
          "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobMonitor.scala"
        ],
        "message": "KYLIN-5090 The error message was not printed in class JobWoker",
        "before_after_code_files": [
          "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobMonitor.scala||kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobMonitor.scala"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobMonitor.scala||kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobMonitor.scala": [
          "File: kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobMonitor.scala -> kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobMonitor.scala",
          "--- Hunk 1 ---",
          "[Context before]",
          "44:   def handleResourceLack(rl: ResourceLack): Unit = {",
          "45:     try {",
          "46:       val buildEnv = KylinBuildEnv.get()",
          "47:       retryTimes += 1",
          "48:       KylinBuildEnv.get().buildJobInfos.recordRetryTimes(retryTimes)",
          "49:       val maxRetry = buildEnv.kylinConfig.getSparkEngineMaxRetryTime",
          "50:       if (retryTimes <= maxRetry) {",
          "52:         System.setProperty(\"kylin.spark-conf.auto.prior\", \"false\")",
          "53:         ExceptionTerminator.resolveException(rl, eventLoop)",
          "54:       } else {",
          "",
          "[Removed Lines]",
          "51:         logError(s\"Job failed the $retryTimes times.\", rl.throwable)",
          "",
          "[Added Lines]",
          "46:       logError(s\"Job failed the $retryTimes times.\", rl.throwable)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8c56af13fc998e6e4846b8d370a9bb82fd88527c",
      "candidate_info": {
        "commit_hash": "8c56af13fc998e6e4846b8d370a9bb82fd88527c",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/8c56af13fc998e6e4846b8d370a9bb82fd88527c",
        "files": [
          "cache/src/main/java/org/apache/kylin/cache/memcached/MemcachedCache.java",
          "cache/src/test/java/org/apache/kylin/cache/memcached/MemcachedCacheTest.java"
        ],
        "message": "KYLIN-4506 Remove unresolved memcached servers before initialize MemcachedClient\n\n(cherry picked from commit f815c4ff1c4aa86692adbbbdfb93e4979f9cd49a)",
        "before_after_code_files": [
          "cache/src/main/java/org/apache/kylin/cache/memcached/MemcachedCache.java||cache/src/main/java/org/apache/kylin/cache/memcached/MemcachedCache.java",
          "cache/src/test/java/org/apache/kylin/cache/memcached/MemcachedCacheTest.java||cache/src/test/java/org/apache/kylin/cache/memcached/MemcachedCacheTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cache/src/main/java/org/apache/kylin/cache/memcached/MemcachedCache.java||cache/src/main/java/org/apache/kylin/cache/memcached/MemcachedCache.java": [
          "File: cache/src/main/java/org/apache/kylin/cache/memcached/MemcachedCache.java -> cache/src/main/java/org/apache/kylin/cache/memcached/MemcachedCache.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import java.io.IOException;",
          "22: import java.io.Serializable;",
          "23: import java.nio.ByteBuffer;",
          "24: import java.util.Arrays;",
          "25: import java.util.concurrent.ExecutionException;",
          "26: import java.util.concurrent.Future;",
          "27: import java.util.concurrent.TimeUnit;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: import java.net.InetSocketAddress;",
          "26: import java.util.Iterator;",
          "27: import java.util.List;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "136:                     .setOpQueueMaxBlockTime(config.getTimeout()).setOpTimeout(config.getTimeout())",
          "137:                     .setReadBufferSize(config.getReadBufferSize()).setOpQueueFactory(opQueueFactory).build();",
          "138:             return new MemcachedCache(new MemcachedClient(new MemcachedConnectionFactory(connectionFactory),",
          "140:         } catch (IOException e) {",
          "141:             logger.error(\"Unable to create MemcachedCache instance.\", e);",
          "142:             throw Throwables.propagate(e);",
          "143:         }",
          "144:     }",
          "146:     public String getName() {",
          "147:         return memcachedPrefix;",
          "148:     }",
          "",
          "[Removed Lines]",
          "139:                     AddrUtil.getAddresses(hostsStr)), config, memcachedPrefix, timeToLive);",
          "",
          "[Added Lines]",
          "142:                     getResolvedAddrList(hostsStr)), config, memcachedPrefix, timeToLive);",
          "149:     public static List<InetSocketAddress> getResolvedAddrList(String hostsStr) {",
          "150:         List<InetSocketAddress> addrs = AddrUtil.getAddresses(hostsStr);",
          "151:         Iterator<InetSocketAddress> addrIterator = addrs.iterator();",
          "152:         while (addrIterator.hasNext()) {",
          "153:             if (addrIterator.next().isUnresolved()) {",
          "154:                 addrIterator.remove();",
          "155:             }",
          "156:         }",
          "157:         return addrs;",
          "158:     }",
          "",
          "---------------"
        ],
        "cache/src/test/java/org/apache/kylin/cache/memcached/MemcachedCacheTest.java||cache/src/test/java/org/apache/kylin/cache/memcached/MemcachedCacheTest.java": [
          "File: cache/src/test/java/org/apache/kylin/cache/memcached/MemcachedCacheTest.java -> cache/src/test/java/org/apache/kylin/cache/memcached/MemcachedCacheTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import static org.mockito.Mockito.mock;",
          "22: import static org.mockito.Mockito.when;",
          "24: import java.util.Map;",
          "25: import java.util.concurrent.TimeUnit;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: import java.net.InetSocketAddress;",
          "25: import java.util.List;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81:             Assert.assertEquals(\"The value should not change\", keyValueMap.get(key), memCachedAdaptor.get(key).get());",
          "82:         }",
          "83:     }",
          "84: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "87:     @Test",
          "88:     public void testGetResolvedAddrList() {",
          "89:         String hostsStr = \"localhost:11211,fafddafaf:11211,fadfafaerqr:11211\";",
          "90:         List<InetSocketAddress> addrList = MemcachedCache.getResolvedAddrList(hostsStr);",
          "91:         Assert.assertEquals(1, addrList.size());",
          "92:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "082df34f2d304d1e6237c09047cf2c008c5e7df0",
      "candidate_info": {
        "commit_hash": "082df34f2d304d1e6237c09047cf2c008c5e7df0",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/082df34f2d304d1e6237c09047cf2c008c5e7df0",
        "files": [
          "server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java",
          "server-base/src/main/java/org/apache/kylin/rest/request/JobOptimizeRequest2.java"
        ],
        "message": "[KYLIN-4948] Provide an API to allow users to adjust cuboids manually",
        "before_after_code_files": [
          "server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java||server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java",
          "server-base/src/main/java/org/apache/kylin/rest/request/JobOptimizeRequest2.java||server-base/src/main/java/org/apache/kylin/rest/request/JobOptimizeRequest2.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java||server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java": [
          "File: server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java -> server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "70: import org.apache.kylin.rest.request.JobBuildRequest;",
          "71: import org.apache.kylin.rest.request.JobBuildRequest2;",
          "72: import org.apache.kylin.rest.request.JobOptimizeRequest;",
          "73: import org.apache.kylin.rest.response.CubeInstanceResponse;",
          "74: import org.apache.kylin.rest.response.CuboidTreeResponse;",
          "75: import org.apache.kylin.rest.response.EnvelopeResponse;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "73: import org.apache.kylin.rest.request.JobOptimizeRequest2;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "439:         }",
          "440:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "440:         }",
          "441:     }",
          "450:     @RequestMapping(value = \"/{cubeName}/optimize2\", method = {RequestMethod.PUT})",
          "451:     @ResponseBody",
          "452:     public JobInstance optimize(@PathVariable String cubeName, @RequestBody JobOptimizeRequest2 jobOptimizeRequest) {",
          "453:         try {",
          "454:             String submitter = SecurityContextHolder.getContext().getAuthentication().getName();",
          "456:             checkCubeExists(cubeName);",
          "457:             CubeInstance cube = jobService.getCubeManager().getCube(cubeName);",
          "459:             Set<Long> cuboidIds = cube.getCuboidScheduler().getAllCuboidIds();",
          "460:             Set<Long> cuboidsAdd = jobOptimizeRequest.getCuboidsAdd();",
          "461:             Set<Long> cuboidsDelete = jobOptimizeRequest.getCuboidsDelete();",
          "462:             Set<Long> result = new HashSet<>(cuboidIds);",
          "464:             if (cuboidsAdd == null && cuboidsDelete == null) {",
          "465:                 throw new BadRequestException(\"must use cuboidsAdd or cuboidsDelete in request body.\");",
          "466:             }",
          "468:             if (cuboidsAdd != null && cuboidsAdd.size() != 0) {",
          "469:                 result.addAll(cuboidsAdd);",
          "470:                 logger.info(",
          "471:                         \"Add cuboid cubeName: \" + cubeName + \" contained cuboids: \" + Sets.intersection(cuboidIds, cuboidsAdd));",
          "472:                 cuboidsAdd.removeAll(cuboidIds);",
          "473:                 logger.info(\"Add cuboid cubeName: \" + cubeName + \" add cuboids: \" + cuboidsAdd);",
          "474:             } else {",
          "475:                 logger.info(cubeName + \" no cuboids to add.\");",
          "476:             }",
          "478:             if (cuboidsDelete != null && cuboidsDelete.size() != 0) {",
          "479:                 result.removeAll(cuboidsDelete);",
          "480:                 logger.info(\"Remove cuboid cubeName: \" + cubeName + \" remove cuboids: \"",
          "481:                         + Sets.intersection(cuboidIds, cuboidsDelete));",
          "482:                 cuboidsDelete.removeAll(cuboidIds);",
          "483:                 logger.info(\"Remove cuboid cubeName: \" + cubeName + \" missing cuboids: \" + cuboidsDelete);",
          "484:             } else {",
          "485:                 logger.info(cubeName + \" no cuboids to delete.\");",
          "486:             }",
          "488:             return jobService.submitOptimizeJob(cube, result, submitter).getFirst();",
          "489:         } catch (BadRequestException e) {",
          "490:             logger.error(e.getLocalizedMessage(), e);",
          "491:             throw e;",
          "492:         } catch (JobException e) {",
          "493:             logger.error(e.getLocalizedMessage(), e);",
          "",
          "---------------"
        ],
        "server-base/src/main/java/org/apache/kylin/rest/request/JobOptimizeRequest2.java||server-base/src/main/java/org/apache/kylin/rest/request/JobOptimizeRequest2.java": [
          "File: server-base/src/main/java/org/apache/kylin/rest/request/JobOptimizeRequest2.java -> server-base/src/main/java/org/apache/kylin/rest/request/JobOptimizeRequest2.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: package org.apache.kylin.rest.request;",
          "21: import java.util.Set;",
          "22: import java.util.stream.Collectors;",
          "24: public class JobOptimizeRequest2 {",
          "25:     private Set<String> cuboidsAdd;",
          "26:     private Set<String> cuboidsDelete;",
          "28:     public Set<Long> getCuboidsAdd() {",
          "29:         if (cuboidsAdd == null)",
          "30:             return null;",
          "31:         return cuboidsAdd.stream().map(s -> Long.parseLong(s)).collect(Collectors.toSet());",
          "32:     }",
          "34:     public Set<Long> getCuboidsDelete() {",
          "35:         if (cuboidsDelete == null)",
          "36:             return null;",
          "37:         return cuboidsDelete.stream().map(s -> Long.parseLong(s)).collect(Collectors.toSet());",
          "38:     }",
          "40: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "adb8407544a77495bb36a3bea5a19d1cccfb1f81",
      "candidate_info": {
        "commit_hash": "adb8407544a77495bb36a3bea5a19d1cccfb1f81",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/adb8407544a77495bb36a3bea5a19d1cccfb1f81",
        "files": [
          "server-base/src/main/java/org/apache/kylin/rest/controller/UserController.java"
        ],
        "message": "KYLIN-4470 The user cannot log in kylin normally after being assigned to a group\n\n(cherry picked from commit b53ba2dd4e02a947d112c50fddf2c4685d078e71)",
        "before_after_code_files": [
          "server-base/src/main/java/org/apache/kylin/rest/controller/UserController.java||server-base/src/main/java/org/apache/kylin/rest/controller/UserController.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "server-base/src/main/java/org/apache/kylin/rest/controller/UserController.java||server-base/src/main/java/org/apache/kylin/rest/controller/UserController.java": [
          "File: server-base/src/main/java/org/apache/kylin/rest/controller/UserController.java -> server-base/src/main/java/org/apache/kylin/rest/controller/UserController.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "191:         }",
          "192:         logger.info(\"Saving {}\", user);",
          "194:         completeAuthorities(user);",
          "195:         userService.updateUser(user);",
          "196:         return get(userName);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "194:         user.setPassword(pwdEncode(user.getPassword()));",
          "",
          "---------------"
        ]
      }
    }
  ]
}