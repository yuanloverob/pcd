{
  "cve_id": "CVE-2024-50341",
  "cve_desc": "symfony/security-bundle is a module for the Symphony PHP framework which provides a tight integration of the Security component into the Symfony full-stack framework. The custom `user_checker` defined on a firewall is not called when Login Programmaticaly with the `Security::login` method, leading to  unwanted login. As of versions 6.4.10, 7.0.10 and 7.1.3 the `Security::login` method now ensure to call the configured `user_checker`. All users are advised to upgrade. There are no known workarounds for this vulnerability.",
  "repo": "symfony/symfony",
  "patch_hash": "22a0789a0085c3ee96f4ef715ecad8255cf0e105",
  "patch_info": {
    "commit_hash": "22a0789a0085c3ee96f4ef715ecad8255cf0e105",
    "repo": "symfony/symfony",
    "commit_url": "https://github.com/symfony/symfony/commit/22a0789a0085c3ee96f4ef715ecad8255cf0e105",
    "files": [
      "src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php",
      "src/Symfony/Bundle/SecurityBundle/Resources/config/security.php",
      "src/Symfony/Bundle/SecurityBundle/Security.php",
      "src/Symfony/Bundle/SecurityBundle/Tests/SecurityTest.php"
    ],
    "message": "use firewall-specific user checkers when manually logging in users",
    "before_after_code_files": [
      "src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php",
      "src/Symfony/Bundle/SecurityBundle/Resources/config/security.php||src/Symfony/Bundle/SecurityBundle/Resources/config/security.php",
      "src/Symfony/Bundle/SecurityBundle/Security.php||src/Symfony/Bundle/SecurityBundle/Security.php",
      "src/Symfony/Bundle/SecurityBundle/Tests/SecurityTest.php||src/Symfony/Bundle/SecurityBundle/Tests/SecurityTest.php"
    ]
  },
  "patch_diff": {
    "src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php||src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php": [
      "File: src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php -> src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "580:         $container->setAlias('security.user_checker.'.$id, new Alias($firewall['user_checker'], false));",
      "582:         foreach ($this->getSortedFactories() as $factory) {",
      "583:             $key = str_replace('-', '_', $factory->getKey());",
      "584:             if ('custom_authenticators' !== $key && \\array_key_exists($key, $firewall)) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "582:         $userCheckerLocator = $container->getDefinition('security.user_checker_locator');",
      "583:         $userCheckerLocator->replaceArgument(0, array_merge($userCheckerLocator->getArgument(0), [$id => new ServiceClosureArgument(new Reference('security.user_checker.'.$id))]));",
      "",
      "---------------"
    ],
    "src/Symfony/Bundle/SecurityBundle/Resources/config/security.php||src/Symfony/Bundle/SecurityBundle/Resources/config/security.php": [
      "File: src/Symfony/Bundle/SecurityBundle/Resources/config/security.php -> src/Symfony/Bundle/SecurityBundle/Resources/config/security.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: use Symfony\\Bundle\\SecurityBundle\\Security\\FirewallContext;",
      "20: use Symfony\\Bundle\\SecurityBundle\\Security\\FirewallMap;",
      "21: use Symfony\\Bundle\\SecurityBundle\\Security\\LazyFirewallContext;",
      "22: use Symfony\\Component\\ExpressionLanguage\\ExpressionLanguage as BaseExpressionLanguage;",
      "23: use Symfony\\Component\\Ldap\\Security\\LdapUserProvider;",
      "24: use Symfony\\Component\\Security\\Core\\Authentication\\AuthenticationTrustResolver;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: use Symfony\\Component\\DependencyInjection\\ServiceLocator;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "88:                     'security.authenticator.managers_locator' => service('security.authenticator.managers_locator')->ignoreOnInvalid(),",
      "89:                     'request_stack' => service('request_stack'),",
      "90:                     'security.firewall.map' => service('security.firewall.map'),",
      "92:                     'security.firewall.event_dispatcher_locator' => service('security.firewall.event_dispatcher_locator'),",
      "93:                     'security.csrf.token_manager' => service('security.csrf.token_manager')->ignoreOnInvalid(),",
      "94:                 ]),",
      "",
      "[Removed Lines]",
      "91:                     'security.user_checker' => service('security.user_checker'),",
      "",
      "[Added Lines]",
      "92:                     'security.user_checker_locator' => service('security.user_checker_locator'),",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "124:             ->args(['none'])",
      "126:         ->set('security.user_checker', InMemoryUserChecker::class)",
      "128:         ->set('security.expression_language', ExpressionLanguage::class)",
      "129:             ->args([service('cache.security_expression_language')->nullOnInvalid()])",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "128:         ->set('security.user_checker_locator', ServiceLocator::class)",
      "129:             ->args([[]])",
      "",
      "---------------"
    ],
    "src/Symfony/Bundle/SecurityBundle/Security.php||src/Symfony/Bundle/SecurityBundle/Security.php": [
      "File: src/Symfony/Bundle/SecurityBundle/Security.php -> src/Symfony/Bundle/SecurityBundle/Security.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "128:         $authenticator = $this->getAuthenticator($authenticatorName, $firewallName);",
      "132:         return $this->container->get('security.authenticator.managers_locator')->get($firewallName)->authenticateUser($user, $authenticator, $request, $badges);",
      "133:     }",
      "",
      "[Removed Lines]",
      "130:         $this->container->get('security.user_checker')->checkPreAuth($user);",
      "",
      "[Added Lines]",
      "130:         $userCheckerLocator = $this->container->get('security.user_checker_locator');",
      "131:         $userCheckerLocator->get($firewallName)->checkPreAuth($user);",
      "",
      "---------------"
    ],
    "src/Symfony/Bundle/SecurityBundle/Tests/SecurityTest.php||src/Symfony/Bundle/SecurityBundle/Tests/SecurityTest.php": [
      "File: src/Symfony/Bundle/SecurityBundle/Tests/SecurityTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/SecurityTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "142:                 ['request_stack', $requestStack],",
      "143:                 ['security.firewall.map', $firewallMap],",
      "144:                 ['security.authenticator.managers_locator', $this->createContainer('main', $userAuthenticator)],",
      "146:             ])",
      "147:         ;",
      "",
      "[Removed Lines]",
      "145:                 ['security.user_checker', $userChecker],",
      "",
      "[Added Lines]",
      "145:                 ['security.user_checker_locator', $this->createContainer('main', $userChecker)],",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "188:                 ['request_stack', $requestStack],",
      "189:                 ['security.firewall.map', $firewallMap],",
      "190:                 ['security.authenticator.managers_locator', $this->createContainer('main', $userAuthenticator)],",
      "192:             ])",
      "193:         ;",
      "",
      "[Removed Lines]",
      "191:                 ['security.user_checker', $userChecker],",
      "",
      "[Added Lines]",
      "191:                 ['security.user_checker_locator', $this->createContainer('main', $userChecker)],",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "568191f284ab84e98b44e464901fefd8dcc15ba7",
      "candidate_info": {
        "commit_hash": "568191f284ab84e98b44e464901fefd8dcc15ba7",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/568191f284ab84e98b44e464901fefd8dcc15ba7",
        "files": [
          "src/Symfony/Bundle/SecurityBundle/CHANGELOG.md",
          "src/Symfony/Bundle/SecurityBundle/Security.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/SecurityTest.php"
        ],
        "message": "[Security] Make login redirection logic available to programmatic login",
        "before_after_code_files": [
          "src/Symfony/Bundle/SecurityBundle/Security.php||src/Symfony/Bundle/SecurityBundle/Security.php",
          "src/Symfony/Bundle/SecurityBundle/Tests/SecurityTest.php||src/Symfony/Bundle/SecurityBundle/Tests/SecurityTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Bundle/SecurityBundle/Security.php||src/Symfony/Bundle/SecurityBundle/Security.php",
            "src/Symfony/Bundle/SecurityBundle/Tests/SecurityTest.php||src/Symfony/Bundle/SecurityBundle/Tests/SecurityTest.php"
          ],
          "candidate": [
            "src/Symfony/Bundle/SecurityBundle/Security.php||src/Symfony/Bundle/SecurityBundle/Security.php",
            "src/Symfony/Bundle/SecurityBundle/Tests/SecurityTest.php||src/Symfony/Bundle/SecurityBundle/Tests/SecurityTest.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Bundle/SecurityBundle/Security.php||src/Symfony/Bundle/SecurityBundle/Security.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Security.php -> src/Symfony/Bundle/SecurityBundle/Security.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:     {",
          "62:         $request = $this->container->get('request_stack')->getCurrentRequest();",
          "63:         $firewallName ??= $this->getFirewallConfig($request)?->getName();",
          "",
          "[Removed Lines]",
          "60:     public function login(UserInterface $user, string $authenticatorName = null, string $firewallName = null): void",
          "",
          "[Added Lines]",
          "62:     public function login(UserInterface $user, string $authenticatorName = null, string $firewallName = null): ?Response",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "69:         $authenticator = $this->getAuthenticator($authenticatorName, $firewallName);",
          "71:         $this->container->get('security.user_checker')->checkPreAuth($user);",
          "73:     }",
          "",
          "[Removed Lines]",
          "72:         $this->container->get('security.user_authenticator')->authenticateUser($user, $authenticator, $request);",
          "",
          "[Added Lines]",
          "75:         return $this->container->get('security.user_authenticator')->authenticateUser($user, $authenticator, $request);",
          "",
          "---------------"
        ],
        "src/Symfony/Bundle/SecurityBundle/Tests/SecurityTest.php||src/Symfony/Bundle/SecurityBundle/Tests/SecurityTest.php": [
          "File: src/Symfony/Bundle/SecurityBundle/Tests/SecurityTest.php -> src/Symfony/Bundle/SecurityBundle/Tests/SecurityTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "169:         $security->login($user);",
          "170:     }",
          "172:     public function testLoginWithoutAuthenticatorThrows()",
          "173:     {",
          "174:         $request = new Request();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "172:     public function testLoginReturnsAuthenticatorResponse()",
          "173:     {",
          "174:         $request = new Request();",
          "175:         $authenticator = $this->createMock(AuthenticatorInterface::class);",
          "176:         $requestStack = $this->createMock(RequestStack::class);",
          "177:         $firewallMap = $this->createMock(FirewallMap::class);",
          "178:         $firewall = new FirewallConfig('main', 'main');",
          "179:         $user = $this->createMock(UserInterface::class);",
          "180:         $userChecker = $this->createMock(UserCheckerInterface::class);",
          "181:         $userAuthenticator = $this->createMock(UserAuthenticatorInterface::class);",
          "183:         $container = $this->createMock(ContainerInterface::class);",
          "184:         $container",
          "185:             ->expects($this->atLeastOnce())",
          "186:             ->method('get')",
          "187:             ->willReturnMap([",
          "188:                 ['request_stack', $requestStack],",
          "189:                 ['security.firewall.map', $firewallMap],",
          "190:                 ['security.user_authenticator', $userAuthenticator],",
          "191:                 ['security.user_checker', $userChecker],",
          "192:             ])",
          "193:         ;",
          "195:         $requestStack->expects($this->once())->method('getCurrentRequest')->willReturn($request);",
          "196:         $firewallMap->expects($this->once())->method('getFirewallConfig')->willReturn($firewall);",
          "197:         $userChecker->expects($this->once())->method('checkPreAuth')->with($user);",
          "198:         $userAuthenticator->expects($this->once())->method('authenticateUser')",
          "199:             ->with($user, $authenticator, $request)",
          "200:             ->willReturn(new Response('authenticator response'));",
          "202:         $firewallAuthenticatorLocator = $this->createMock(ServiceProviderInterface::class);",
          "203:         $firewallAuthenticatorLocator",
          "204:             ->expects($this->once())",
          "205:             ->method('getProvidedServices')",
          "206:             ->willReturn(['security.authenticator.custom.dev' => $authenticator])",
          "207:         ;",
          "208:         $firewallAuthenticatorLocator",
          "209:             ->expects($this->once())",
          "210:             ->method('get')",
          "211:             ->with('security.authenticator.custom.dev')",
          "212:             ->willReturn($authenticator)",
          "213:         ;",
          "215:         $security = new Security($container, ['main' => $firewallAuthenticatorLocator]);",
          "217:         $response = $security->login($user);",
          "219:         $this->assertInstanceOf(Response::class, $response);",
          "220:         $this->assertEquals('authenticator response', $response->getContent());",
          "221:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}